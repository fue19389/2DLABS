

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 29 00:51:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  0105                     	;# 
   301  0107                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0185                     	;# 
   310  0187                     	;# 
   311  0188                     	;# 
   312  0189                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315                           
   316                           	psect	strings
   317  1800                     __pstrings:
   318  1800                     stringtab:
   319  1800                     __stringtab:
   320  1800                     stringcode:	
   321                           ;	String table - string pointers are 1 byte each
   322                           
   323  1800                     stringdir:
   324  1800  3018               	movlw	high stringdir
   325  1801  008A               	movwf	10
   326  1802  0804               	movf	4,w
   327  1803  0A84               	incf	4,f
   328  1804  0782               	addwf	2,f
   329  1805                     __stringbase:
   330  1805  3400               	retlw	0
   331  1806                     __end_of__stringtab:
   332  1806                     __powers_:
   333  1806  3400               	retlw	0
   334  1807  3400               	retlw	0
   335  1808  3480               	retlw	128
   336  1809  343F               	retlw	63
   337  180A  3400               	retlw	0
   338  180B  3400               	retlw	0
   339  180C  3420               	retlw	32
   340  180D  3441               	retlw	65
   341  180E  3400               	retlw	0
   342  180F  3400               	retlw	0
   343  1810  34C8               	retlw	200
   344  1811  3442               	retlw	66
   345  1812  3400               	retlw	0
   346  1813  3400               	retlw	0
   347  1814  347A               	retlw	122
   348  1815  3444               	retlw	68
   349  1816  3400               	retlw	0
   350  1817  3440               	retlw	64
   351  1818  341C               	retlw	28
   352  1819  3446               	retlw	70
   353  181A  3400               	retlw	0
   354  181B  3450               	retlw	80
   355  181C  34C3               	retlw	195
   356  181D  3447               	retlw	71
   357  181E  3400               	retlw	0
   358  181F  3424               	retlw	36
   359  1820  3474               	retlw	116
   360  1821  3449               	retlw	73
   361  1822  3480               	retlw	128
   362  1823  3496               	retlw	150
   363  1824  3418               	retlw	24
   364  1825  344B               	retlw	75
   365  1826  3420               	retlw	32
   366  1827  34BC               	retlw	188
   367  1828  34BE               	retlw	190
   368  1829  344C               	retlw	76
   369  182A  3428               	retlw	40
   370  182B  346B               	retlw	107
   371  182C  346E               	retlw	110
   372  182D  344E               	retlw	78
   373  182E  34F9               	retlw	249
   374  182F  3402               	retlw	2
   375  1830  3415               	retlw	21
   376  1831  3450               	retlw	80
   377  1832  34EC               	retlw	236
   378  1833  3478               	retlw	120
   379  1834  34AD               	retlw	173
   380  1835  3460               	retlw	96
   381  1836  34CA               	retlw	202
   382  1837  34F2               	retlw	242
   383  1838  3449               	retlw	73
   384  1839  3471               	retlw	113
   385  183A                     __end_of__powers_:
   386  183A                     __npowers_:
   387  183A  3400               	retlw	0
   388  183B  3400               	retlw	0
   389  183C  3480               	retlw	128
   390  183D  343F               	retlw	63
   391  183E  34CD               	retlw	205
   392  183F  34CC               	retlw	204
   393  1840  34CC               	retlw	204
   394  1841  343D               	retlw	61
   395  1842  340A               	retlw	10
   396  1843  34D7               	retlw	215
   397  1844  3423               	retlw	35
   398  1845  343C               	retlw	60
   399  1846  346F               	retlw	111
   400  1847  3412               	retlw	18
   401  1848  3483               	retlw	131
   402  1849  343A               	retlw	58
   403  184A  3417               	retlw	23
   404  184B  34B7               	retlw	183
   405  184C  34D1               	retlw	209
   406  184D  3438               	retlw	56
   407  184E  34AC               	retlw	172
   408  184F  34C5               	retlw	197
   409  1850  3427               	retlw	39
   410  1851  3437               	retlw	55
   411  1852  34BD               	retlw	189
   412  1853  3437               	retlw	55
   413  1854  3486               	retlw	134
   414  1855  3435               	retlw	53
   415  1856  3495               	retlw	149
   416  1857  34BF               	retlw	191
   417  1858  34D6               	retlw	214
   418  1859  3433               	retlw	51
   419  185A  3477               	retlw	119
   420  185B  34CC               	retlw	204
   421  185C  342B               	retlw	43
   422  185D  3432               	retlw	50
   423  185E  345F               	retlw	95
   424  185F  3470               	retlw	112
   425  1860  3489               	retlw	137
   426  1861  3430               	retlw	48
   427  1862  34FF               	retlw	255
   428  1863  34E6               	retlw	230
   429  1864  34DB               	retlw	219
   430  1865  342E               	retlw	46
   431  1866  3408               	retlw	8
   432  1867  34E5               	retlw	229
   433  1868  343C               	retlw	60
   434  1869  341E               	retlw	30
   435  186A  3460               	retlw	96
   436  186B  3442               	retlw	66
   437  186C  34A2               	retlw	162
   438  186D  340D               	retlw	13
   439  186E                     __end_of__npowers_:
   440  186E                     _dpowers:
   441  186E  3401               	retlw	1
   442  186F  3400               	retlw	0
   443  1870  3400               	retlw	0
   444  1871  3400               	retlw	0
   445  1872  340A               	retlw	10
   446  1873  3400               	retlw	0
   447  1874  3400               	retlw	0
   448  1875  3400               	retlw	0
   449  1876  3464               	retlw	100
   450  1877  3400               	retlw	0
   451  1878  3400               	retlw	0
   452  1879  3400               	retlw	0
   453  187A  34E8               	retlw	232
   454  187B  3403               	retlw	3
   455  187C  3400               	retlw	0
   456  187D  3400               	retlw	0
   457  187E  3410               	retlw	16
   458  187F  3427               	retlw	39
   459  1880  3400               	retlw	0
   460  1881  3400               	retlw	0
   461  1882  34A0               	retlw	160
   462  1883  3486               	retlw	134
   463  1884  3401               	retlw	1
   464  1885  3400               	retlw	0
   465  1886  3440               	retlw	64
   466  1887  3442               	retlw	66
   467  1888  340F               	retlw	15
   468  1889  3400               	retlw	0
   469  188A  3480               	retlw	128
   470  188B  3496               	retlw	150
   471  188C  3498               	retlw	152
   472  188D  3400               	retlw	0
   473  188E  3400               	retlw	0
   474  188F  34E1               	retlw	225
   475  1890  34F5               	retlw	245
   476  1891  3405               	retlw	5
   477  1892  3400               	retlw	0
   478  1893  34CA               	retlw	202
   479  1894  349A               	retlw	154
   480  1895  343B               	retlw	59
   481  1896                     __end_of_dpowers:
   482  0013                     _SSPBUF	set	19
   483  0014                     _SSPCON	set	20
   484  0019                     _TXREG	set	25
   485  0018                     _RCSTAbits	set	24
   486  000B                     _INTCONbits	set	11
   487  0005                     _PORTA	set	5
   488  0008                     _PORTD	set	8
   489  0006                     _PORTB	set	6
   490  000E                     _TMR1L	set	14
   491  000F                     _TMR1H	set	15
   492  0063                     _SSPIF	set	99
   493  005E                     _PEIE	set	94
   494  005F                     _GIE	set	95
   495  0064                     _TXIF	set	100
   496  0040                     _RD0	set	64
   497  002A                     _RA2	set	42
   498  0041                     _RD1	set	65
   499  0080                     _TMR1ON	set	128
   500  0029                     _RA1	set	41
   501  0028                     _RA0	set	40
   502  0091                     _SSPCON2bits	set	145
   503  0087                     _TRISCbits	set	135
   504  0094                     _SSPSTAT	set	148
   505  0093                     _SSPADD	set	147
   506  0091                     _SSPCON2	set	145
   507  009A                     _SPBRGH	set	154
   508  0099                     _SPBRG	set	153
   509  0098                     _TXSTAbits	set	152
   510  008C                     _PIE1bits	set	140
   511  008F                     _OSCCONbits	set	143
   512  0088                     _TRISD	set	136
   513  0086                     _TRISB	set	134
   514  0085                     _TRISAbits	set	133
   515  0463                     _SSPIE	set	1123
   516  043C                     _TRISC4	set	1084
   517  043B                     _TRISC3	set	1083
   518  0187                     _BAUDCTLbits	set	391
   519  0189                     _ANSELH	set	393
   520  0188                     _ANSEL	set	392
   521  1896                     STR_1:
   522  1896  3425               	retlw	37	;'%'
   523  1897  3430               	retlw	48	;'0'
   524  1898  342E               	retlw	46	;'.'
   525  1899  3430               	retlw	48	;'0'
   526  189A  3466               	retlw	102	;'f'
   527  189B  3420               	retlw	32	;' '
   528  189C  3463               	retlw	99	;'c'
   529  189D  346D               	retlw	109	;'m'
   530  189E  3400               	retlw	0
   531                           
   532                           	psect	cinit
   533  000F                     start_initialization:	
   534                           ; #config settings
   535                           
   536  000F                     __initialization:
   537                           
   538                           ; Clear objects allocated to BANK0
   539  000F  1283               	bcf	3,5	;RP0=0, select bank0
   540  0010  1303               	bcf	3,6	;RP1=0, select bank0
   541  0011  01EF               	clrf	__pbssBANK0& (0+127)
   542                           
   543                           ; Clear objects allocated to BANK1
   544  0012  1383               	bcf	3,7	;select IRP bank0
   545  0013  30CB               	movlw	low __pbssBANK1
   546  0014  0084               	movwf	4
   547  0015  30E3               	movlw	low (__pbssBANK1+24)
   548  0016  160A  158A  2481  120A  118A  	fcall	clear_ram0
   549  001B                     end_of_initialization:	
   550                           ;End of C runtime variable initialization code
   551                           
   552  001B                     __end_of__initialization:
   553  001B  0183               	clrf	3
   554  001C  120A  158A  284A   	ljmp	_main	;jump to C main() function
   555                           
   556                           	psect	bssBANK0
   557  006F                     __pbssBANK0:
   558  006F                     _i0:
   559  006F                     	ds	1
   560                           
   561                           	psect	bssBANK1
   562  00CB                     __pbssBANK1:
   563  00CB                     _v:
   564  00CB                     	ds	4
   565  00CF                     _D:
   566  00CF                     	ds	2
   567  00D1                     _V:
   568  00D1                     	ds	2
   569  00D3                     _i1:
   570  00D3                     	ds	1
   571  00D4                     _f1:
   572  00D4                     	ds	15
   573                           
   574                           	psect	clrtext
   575  1C81                     clear_ram0:	
   576                           ;	Called with FSR containing the base address, and
   577                           ;	W with the last address+1
   578                           
   579  1C81  0064               	clrwdt	;clear the watchdog before getting into this loop
   580  1C82                     clrloop0:
   581  1C82  0180               	clrf	0	;clear RAM location pointed to by FSR
   582  1C83  0A84               	incf	4,f	;increment pointer
   583  1C84  0604               	xorwf	4,w	;XOR with final address
   584  1C85  1903               	btfsc	3,2	;have we reached the end yet?
   585  1C86  3400               	retlw	0	;all done for this memory range, return
   586  1C87  0604               	xorwf	4,w	;XOR again to restore value
   587  1C88  2C82               	goto	clrloop0	;do the next byte
   588                           
   589                           	psect	cstackBANK1
   590  00A0                     __pcstackBANK1:
   591  00A0                     ?___flsub:
   592  00A0                     ___flsub@a:	
   593                           ; 4 bytes @ 0x0
   594                           
   595                           
   596                           ; 4 bytes @ 0x0
   597  00A0                     	ds	4
   598  00A4                     ___flsub@b:
   599                           
   600                           ; 4 bytes @ 0x4
   601  00A4                     	ds	4
   602  00A8                     ??_sprintf:
   603                           
   604                           ; 1 bytes @ 0x8
   605  00A8                     	ds	5
   606  00AD                     _sprintf$1130:
   607                           
   608                           ; 4 bytes @ 0xD
   609  00AD                     	ds	4
   610  00B1                     sprintf@ap:
   611                           
   612                           ; 1 bytes @ 0x11
   613  00B1                     	ds	1
   614  00B2                     sprintf@val:
   615                           
   616                           ; 4 bytes @ 0x12
   617  00B2                     	ds	4
   618  00B6                     sprintf@tmpval:
   619                           
   620                           ; 4 bytes @ 0x16
   621  00B6                     	ds	4
   622  00BA                     sprintf@eexp:
   623                           
   624                           ; 2 bytes @ 0x1A
   625  00BA                     	ds	2
   626  00BC                     sprintf@flag:
   627                           
   628                           ; 2 bytes @ 0x1C
   629  00BC                     	ds	2
   630  00BE                     sprintf@width:
   631                           
   632                           ; 2 bytes @ 0x1E
   633  00BE                     	ds	2
   634  00C0                     sprintf@fval:
   635                           
   636                           ; 4 bytes @ 0x20
   637  00C0                     	ds	4
   638  00C4                     sprintf@prec:
   639                           
   640                           ; 2 bytes @ 0x24
   641  00C4                     	ds	2
   642  00C6                     sprintf@sp:
   643                           
   644                           ; 1 bytes @ 0x26
   645  00C6                     	ds	1
   646  00C7                     sprintf@c:
   647                           
   648                           ; 1 bytes @ 0x27
   649  00C7                     	ds	1
   650  00C8                     ??_main:
   651                           
   652                           ; 1 bytes @ 0x28
   653  00C8                     	ds	3
   654                           
   655                           	psect	cstackCOMMON
   656  0070                     __pcstackCOMMON:
   657  0070                     ?_isdigit:
   658  0070                     ?_cfg_io:	
   659                           ; 1 bit 
   660                           
   661  0070                     ?_cfg_usart:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_cfg_clk:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_send_crct:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_send_char:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_isr:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??_isr:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_main:	
   680                           ; 1 bytes @ 0x0
   681                           
   682                           
   683                           ; 1 bytes @ 0x0
   684  0070                     	ds	2
   685  0072                     ?___fleq:
   686  0072                     ?___flge:	
   687                           ; 1 bit 
   688                           
   689  0072                     ??_cfg_io:	
   690                           ; 1 bit 
   691                           
   692  0072                     ??_cfg_usart:	
   693                           ; 1 bytes @ 0x2
   694                           
   695  0072                     ??_cfg_clk:	
   696                           ; 1 bytes @ 0x2
   697                           
   698  0072                     ??_send_char:	
   699                           ; 1 bytes @ 0x2
   700                           
   701  0072                     ??_isdigit:	
   702                           ; 1 bytes @ 0x2
   703                           
   704  0072                     ?__Umul8_16:	
   705                           ; 1 bytes @ 0x2
   706                           
   707  0072                     ?___wmul:	
   708                           ; 2 bytes @ 0x2
   709                           
   710  0072                     ?___awmod:	
   711                           ; 2 bytes @ 0x2
   712                           
   713  0072                     ?___lwmod:	
   714                           ; 2 bytes @ 0x2
   715                           
   716  0072                     ?__tdiv_to_l_:	
   717                           ; 2 bytes @ 0x2
   718                           
   719  0072                     ?__div_to_l_:	
   720                           ; 4 bytes @ 0x2
   721                           
   722  0072                     ?___lldiv:	
   723                           ; 4 bytes @ 0x2
   724                           
   725  0072                     ?___flneg:	
   726                           ; 4 bytes @ 0x2
   727                           
   728  0072                     ?___llmod:	
   729                           ; 4 bytes @ 0x2
   730                           
   731  0072                     ?___xxtofl:	
   732                           ; 4 bytes @ 0x2
   733                           
   734  0072                     send_char@dato:	
   735                           ; 4 bytes @ 0x2
   736                           
   737  0072                     __Umul8_16@multiplicand:	
   738                           ; 1 bytes @ 0x2
   739                           
   740  0072                     _isdigit$932:	
   741                           ; 1 bytes @ 0x2
   742                           
   743  0072                     ___wmul@multiplier:	
   744                           ; 1 bytes @ 0x2
   745                           
   746  0072                     ___awmod@divisor:	
   747                           ; 2 bytes @ 0x2
   748                           
   749  0072                     ___lwmod@divisor:	
   750                           ; 2 bytes @ 0x2
   751                           
   752  0072                     ___lldiv@divisor:	
   753                           ; 2 bytes @ 0x2
   754                           
   755  0072                     __div_to_l_@f1:	
   756                           ; 4 bytes @ 0x2
   757                           
   758  0072                     ___fleq@ff1:	
   759                           ; 4 bytes @ 0x2
   760                           
   761  0072                     ___flge@ff1:	
   762                           ; 4 bytes @ 0x2
   763                           
   764  0072                     ___flneg@f1:	
   765                           ; 4 bytes @ 0x2
   766                           
   767  0072                     __tdiv_to_l_@f1:	
   768                           ; 4 bytes @ 0x2
   769                           
   770  0072                     ___llmod@divisor:	
   771                           ; 4 bytes @ 0x2
   772                           
   773  0072                     ___xxtofl@val:	
   774                           ; 4 bytes @ 0x2
   775                           
   776                           
   777                           ; 4 bytes @ 0x2
   778  0072                     	ds	1
   779  0073                     ??_send_crct:
   780  0073                     isdigit@c:	
   781                           ; 1 bytes @ 0x3
   782                           
   783                           
   784                           ; 1 bytes @ 0x3
   785  0073                     	ds	1
   786  0074                     ??__Umul8_16:
   787  0074                     send_crct@i:	
   788                           ; 1 bytes @ 0x4
   789                           
   790  0074                     ___wmul@multiplicand:	
   791                           ; 2 bytes @ 0x4
   792                           
   793  0074                     ___awmod@dividend:	
   794                           ; 2 bytes @ 0x4
   795                           
   796  0074                     ___lwmod@dividend:	
   797                           ; 2 bytes @ 0x4
   798                           
   799                           
   800                           ; 2 bytes @ 0x4
   801  0074                     	ds	2
   802  0076                     ??___wmul:
   803  0076                     ??___awmod:	
   804                           ; 1 bytes @ 0x6
   805                           
   806  0076                     ??___flneg:	
   807                           ; 1 bytes @ 0x6
   808                           
   809  0076                     ??___lwmod:	
   810                           ; 1 bytes @ 0x6
   811                           
   812  0076                     ??___xxtofl:	
   813                           ; 1 bytes @ 0x6
   814                           
   815  0076                     send_crct@st:	
   816                           ; 1 bytes @ 0x6
   817                           
   818  0076                     ___wmul@product:	
   819                           ; 1 bytes @ 0x6
   820                           
   821  0076                     __Umul8_16@product:	
   822                           ; 2 bytes @ 0x6
   823                           
   824  0076                     ___lldiv@dividend:	
   825                           ; 2 bytes @ 0x6
   826                           
   827  0076                     __div_to_l_@f2:	
   828                           ; 4 bytes @ 0x6
   829                           
   830  0076                     ___fleq@ff2:	
   831                           ; 4 bytes @ 0x6
   832                           
   833  0076                     ___flge@ff2:	
   834                           ; 4 bytes @ 0x6
   835                           
   836  0076                     __tdiv_to_l_@f2:	
   837                           ; 4 bytes @ 0x6
   838                           
   839  0076                     ___llmod@dividend:	
   840                           ; 4 bytes @ 0x6
   841                           
   842                           
   843                           ; 4 bytes @ 0x6
   844  0076                     	ds	1
   845  0077                     ___awmod@counter:
   846  0077                     ___lwmod@counter:	
   847                           ; 1 bytes @ 0x7
   848                           
   849                           
   850                           ; 1 bytes @ 0x7
   851  0077                     	ds	1
   852  0078                     ?___lwdiv:
   853  0078                     ___awmod@sign:	
   854                           ; 2 bytes @ 0x8
   855                           
   856  0078                     ___lwdiv@divisor:	
   857                           ; 1 bytes @ 0x8
   858                           
   859  0078                     __Umul8_16@word_mpld:	
   860                           ; 2 bytes @ 0x8
   861                           
   862                           
   863                           ; 2 bytes @ 0x8
   864  0078                     	ds	1
   865  0079                     ??___awdiv:
   866                           
   867                           ; 1 bytes @ 0x9
   868  0079                     	ds	1
   869  007A                     ??_conv:
   870  007A                     ??__div_to_l_:	
   871                           ; 1 bytes @ 0xA
   872                           
   873  007A                     ??___lldiv:	
   874                           ; 1 bytes @ 0xA
   875                           
   876  007A                     ??___llmod:	
   877                           ; 1 bytes @ 0xA
   878                           
   879  007A                     __Umul8_16@multiplier:	
   880                           ; 1 bytes @ 0xA
   881                           
   882  007A                     ___lwdiv@dividend:	
   883                           ; 1 bytes @ 0xA
   884                           
   885                           
   886                           ; 2 bytes @ 0xA
   887  007A                     	ds	1
   888  007B                     ___llmod@counter:
   889                           
   890                           ; 1 bytes @ 0xB
   891  007B                     	ds	1
   892  007C                     ??___flsub:
   893                           
   894                           	psect	cstackBANK0
   895  0020                     __pcstackBANK0:	
   896                           ; 1 bytes @ 0xC
   897                           
   898  0020                     ??__tdiv_to_l_:
   899  0020                     ??___fleq:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0020                     ??___flge:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0020                     ??___lwdiv:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0020                     ?___awdiv:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0020                     ___xxtofl@sign:	
   912                           ; 2 bytes @ 0x0
   913                           
   914  0020                     ___awdiv@divisor:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0020                     ___lldiv@quotient:	
   918                           ; 2 bytes @ 0x0
   919                           
   920  0020                     __div_to_l_@quot:	
   921                           ; 4 bytes @ 0x0
   922                           
   923                           
   924                           ; 4 bytes @ 0x0
   925  0020                     	ds	1
   926  0021                     ___xxtofl@exp:
   927  0021                     ___lwdiv@quotient:	
   928                           ; 1 bytes @ 0x1
   929                           
   930                           
   931                           ; 2 bytes @ 0x1
   932  0021                     	ds	1
   933  0022                     ___awdiv@dividend:
   934  0022                     ___xxtofl@arg:	
   935                           ; 2 bytes @ 0x2
   936                           
   937                           
   938                           ; 4 bytes @ 0x2
   939  0022                     	ds	1
   940  0023                     ___lwdiv@counter:
   941                           
   942                           ; 1 bytes @ 0x3
   943  0023                     	ds	1
   944  0024                     ___lldiv@counter:
   945  0024                     ___awdiv@counter:	
   946                           ; 1 bytes @ 0x4
   947                           
   948  0024                     __div_to_l_@cntr:	
   949                           ; 1 bytes @ 0x4
   950                           
   951  0024                     __tdiv_to_l_@quot:	
   952                           ; 1 bytes @ 0x4
   953                           
   954                           
   955                           ; 4 bytes @ 0x4
   956  0024                     	ds	1
   957  0025                     ___awdiv@sign:
   958  0025                     __div_to_l_@exp1:	
   959                           ; 1 bytes @ 0x5
   960                           
   961                           
   962                           ; 1 bytes @ 0x5
   963  0025                     	ds	1
   964  0026                     ?_conv:
   965  0026                     conv@aa:	
   966                           ; 4 bytes @ 0x6
   967                           
   968  0026                     ___awdiv@quotient:	
   969                           ; 2 bytes @ 0x6
   970                           
   971                           
   972                           ; 2 bytes @ 0x6
   973  0026                     	ds	2
   974  0028                     ?___flmul:
   975  0028                     __tdiv_to_l_@cntr:	
   976                           ; 4 bytes @ 0x8
   977                           
   978  0028                     ___flmul@b:	
   979                           ; 1 bytes @ 0x8
   980                           
   981                           
   982                           ; 4 bytes @ 0x8
   983  0028                     	ds	1
   984  0029                     __tdiv_to_l_@exp1:
   985                           
   986                           ; 1 bytes @ 0x9
   987  0029                     	ds	1
   988  002A                     conv@result:
   989                           
   990                           ; 4 bytes @ 0xA
   991  002A                     	ds	2
   992  002C                     ___flmul@a:
   993                           
   994                           ; 4 bytes @ 0xC
   995  002C                     	ds	4
   996  0030                     ??___flmul:
   997                           
   998                           ; 1 bytes @ 0x10
   999  0030                     	ds	5
  1000  0035                     ___flmul@sign:
  1001                           
  1002                           ; 1 bytes @ 0x15
  1003  0035                     	ds	1
  1004  0036                     ___flmul@grs:
  1005                           
  1006                           ; 4 bytes @ 0x16
  1007  0036                     	ds	4
  1008  003A                     ___flmul@aexp:
  1009                           
  1010                           ; 1 bytes @ 0x1A
  1011  003A                     	ds	1
  1012  003B                     ___flmul@bexp:
  1013                           
  1014                           ; 1 bytes @ 0x1B
  1015  003B                     	ds	1
  1016  003C                     ___flmul@prod:
  1017                           
  1018                           ; 4 bytes @ 0x1C
  1019  003C                     	ds	4
  1020  0040                     ___flmul@temp:
  1021                           
  1022                           ; 2 bytes @ 0x20
  1023  0040                     	ds	2
  1024  0042                     ?_fround:
  1025  0042                     ?_scale:	
  1026                           ; 4 bytes @ 0x22
  1027                           
  1028                           
  1029                           ; 4 bytes @ 0x22
  1030  0042                     	ds	4
  1031  0046                     ??_fround:
  1032  0046                     ??_scale:	
  1033                           ; 1 bytes @ 0x26
  1034                           
  1035                           
  1036                           ; 1 bytes @ 0x26
  1037  0046                     	ds	7
  1038  004D                     _fround$1128:
  1039                           
  1040                           ; 4 bytes @ 0x2D
  1041  004D                     	ds	3
  1042  0050                     _scale$1129:
  1043                           
  1044                           ; 4 bytes @ 0x30
  1045  0050                     	ds	1
  1046  0051                     _fround$1127:
  1047                           
  1048                           ; 4 bytes @ 0x31
  1049  0051                     	ds	3
  1050  0054                     scale@scl:
  1051                           
  1052                           ; 1 bytes @ 0x34
  1053  0054                     	ds	1
  1054  0055                     ?___fltol:
  1055  0055                     fround@prec:	
  1056                           ; 4 bytes @ 0x35
  1057                           
  1058  0055                     ___fltol@f1:	
  1059                           ; 1 bytes @ 0x35
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x35
  1063  0055                     	ds	1
  1064  0056                     ?___fladd:
  1065  0056                     ___fladd@b:	
  1066                           ; 4 bytes @ 0x36
  1067                           
  1068                           
  1069                           ; 4 bytes @ 0x36
  1070  0056                     	ds	3
  1071  0059                     ??___fltol:
  1072                           
  1073                           ; 1 bytes @ 0x39
  1074  0059                     	ds	1
  1075  005A                     ___fladd@a:
  1076                           
  1077                           ; 4 bytes @ 0x3A
  1078  005A                     	ds	4
  1079  005E                     ??___fladd:
  1080  005E                     ___fltol@sign1:	
  1081                           ; 1 bytes @ 0x3E
  1082                           
  1083                           
  1084                           ; 1 bytes @ 0x3E
  1085  005E                     	ds	1
  1086  005F                     ___fltol@exp1:
  1087                           
  1088                           ; 1 bytes @ 0x3F
  1089  005F                     	ds	7
  1090  0066                     ___fladd@signs:
  1091                           
  1092                           ; 1 bytes @ 0x46
  1093  0066                     	ds	1
  1094  0067                     ___fladd@aexp:
  1095                           
  1096                           ; 1 bytes @ 0x47
  1097  0067                     	ds	1
  1098  0068                     ___fladd@bexp:
  1099                           
  1100                           ; 1 bytes @ 0x48
  1101  0068                     	ds	1
  1102  0069                     ___fladd@grs:
  1103                           
  1104                           ; 1 bytes @ 0x49
  1105  0069                     	ds	1
  1106  006A                     ?_sprintf:
  1107  006A                     sprintf@f:	
  1108                           ; 2 bytes @ 0x4A
  1109                           
  1110                           
  1111                           ; 1 bytes @ 0x4A
  1112  006A                     	ds	5
  1113                           
  1114                           	psect	maintext
  1115  084A                     __pmaintext:	
  1116 ;;
  1117 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1118 ;;
  1119 ;; *************** function _main *****************
  1120 ;; Defined at:
  1121 ;;		line 73 in file "mainp1.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : B00/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0
  1137 ;;      Temps:          0       0       3       0       0
  1138 ;;      Totals:         0       0       3       0       0
  1139 ;;Total ram usage:        3 bytes
  1140 ;; Hardware stack levels required when called:    5
  1141 ;; This function calls:
  1142 ;;		___awdiv
  1143 ;;		_cfg_clk
  1144 ;;		_cfg_io
  1145 ;;		_cfg_usart
  1146 ;;		_conv
  1147 ;;		_send_crct
  1148 ;;		_sprintf
  1149 ;; This function is called by:
  1150 ;;		Startup code after reset
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _main
  1156  084A                     _main:
  1157  084A                     l3518:	
  1158                           ;incstack = 0
  1159                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1160                           
  1161                           
  1162                           ;mainp1.c: 74:     cfg_io();
  1163  084A  160A  158A  249E  120A  158A  	fcall	_cfg_io
  1164  084F                     l3520:
  1165                           
  1166                           ;mainp1.c: 76:     cfg_usart();
  1167  084F  160A  118A  2002  120A  158A  	fcall	_cfg_usart
  1168  0854                     l3522:
  1169                           
  1170                           ;mainp1.c: 77:     cfg_clk();
  1171  0854  160A  158A  2479  120A  158A  	fcall	_cfg_clk
  1172  0859                     l3524:
  1173                           
  1174                           ;mainp1.c: 82:         TMR1H = 0;
  1175  0859  1283               	bcf	3,5	;RP0=0, select bank0
  1176  085A  1303               	bcf	3,6	;RP1=0, select bank0
  1177  085B  018F               	clrf	15	;volatile
  1178  085C                     l3526:
  1179                           
  1180                           ;mainp1.c: 83:         TMR1L = 0;
  1181  085C  018E               	clrf	14	;volatile
  1182  085D                     l3528:
  1183                           
  1184                           ;mainp1.c: 85:         RA0 = 1;
  1185  085D  1405               	bsf	5,0	;volatile
  1186  085E                     l3530:
  1187                           
  1188                           ;mainp1.c: 86:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  1189  085E  3002               	movlw	2
  1190  085F  1683               	bsf	3,5	;RP0=1, select bank1
  1191  0860  1303               	bcf	3,6	;RP1=0, select bank1
  1192  0861  00C8               	movwf	??_main^(0+128)
  1193  0862                     u5767:
  1194  0862  0BC8               	decfsz	??_main^(0+128),f
  1195  0863  2862               	goto	u5767
  1196  0864  0000               	nop
  1197  0865                     l3532:
  1198                           
  1199                           ;mainp1.c: 87:         RA0 = 0;
  1200  0865  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0866  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0867  1005               	bcf	5,0	;volatile
  1203  0868                     l91:	
  1204                           ;mainp1.c: 90:         while(!RA1);
  1205                           
  1206  0868  1C85               	btfss	5,1	;volatile
  1207  0869  286B               	goto	u5691
  1208  086A  286C               	goto	u5690
  1209  086B                     u5691:
  1210  086B  2868               	goto	l91
  1211  086C                     u5690:
  1212  086C                     l93:
  1213                           
  1214                           ;mainp1.c: 91:         TMR1ON = 1;
  1215  086C  1410               	bsf	16,0	;volatile
  1216  086D                     l94:	
  1217                           ;mainp1.c: 92:         while(RA1);
  1218                           
  1219  086D  1885               	btfsc	5,1	;volatile
  1220  086E  2870               	goto	u5701
  1221  086F  2871               	goto	u5700
  1222  0870                     u5701:
  1223  0870  286D               	goto	l94
  1224  0871                     u5700:
  1225  0871                     l96:
  1226                           
  1227                           ;mainp1.c: 93:         TMR1ON = 0;
  1228  0871  1010               	bcf	16,0	;volatile
  1229  0872                     l3534:
  1230                           
  1231                           ;mainp1.c: 95:         V = (TMR1L | (TMR1H<<8));
  1232  0872  080F               	movf	15,w	;volatile
  1233  0873  1683               	bsf	3,5	;RP0=1, select bank1
  1234  0874  1303               	bcf	3,6	;RP1=0, select bank1
  1235  0875  00D2               	movwf	(_V+1)^(0+128)
  1236  0876  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0877  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0878  080E               	movf	14,w	;volatile
  1239  0879  1683               	bsf	3,5	;RP0=1, select bank1
  1240  087A  1303               	bcf	3,6	;RP1=0, select bank1
  1241  087B  00D1               	movwf	_V^(0+128)
  1242  087C                     l3536:
  1243                           
  1244                           ;mainp1.c: 96:         D = V/58;
  1245  087C  303A               	movlw	58
  1246  087D  1283               	bcf	3,5	;RP0=0, select bank0
  1247  087E  1303               	bcf	3,6	;RP1=0, select bank0
  1248  087F  00A0               	movwf	___awdiv@divisor
  1249  0880  3000               	movlw	0
  1250  0881  00A1               	movwf	___awdiv@divisor+1
  1251  0882  1683               	bsf	3,5	;RP0=1, select bank1
  1252  0883  1303               	bcf	3,6	;RP1=0, select bank1
  1253  0884  0852               	movf	(_V+1)^(0+128),w
  1254  0885  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0886  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0887  00A3               	movwf	___awdiv@dividend+1
  1257  0888  1683               	bsf	3,5	;RP0=1, select bank1
  1258  0889  1303               	bcf	3,6	;RP1=0, select bank1
  1259  088A  0851               	movf	_V^(0+128),w
  1260  088B  1283               	bcf	3,5	;RP0=0, select bank0
  1261  088C  1303               	bcf	3,6	;RP1=0, select bank0
  1262  088D  00A2               	movwf	___awdiv@dividend
  1263  088E  160A  158A  271B  120A  158A  	fcall	___awdiv
  1264  0893  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0894  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0895  0821               	movf	?___awdiv+1,w
  1267  0896  1683               	bsf	3,5	;RP0=1, select bank1
  1268  0897  1303               	bcf	3,6	;RP1=0, select bank1
  1269  0898  00D0               	movwf	(_D+1)^(0+128)
  1270  0899  1283               	bcf	3,5	;RP0=0, select bank0
  1271  089A  1303               	bcf	3,6	;RP1=0, select bank0
  1272  089B  0820               	movf	?___awdiv,w
  1273  089C  1683               	bsf	3,5	;RP0=1, select bank1
  1274  089D  1303               	bcf	3,6	;RP1=0, select bank1
  1275  089E  00CF               	movwf	_D^(0+128)
  1276  089F                     l3538:
  1277                           
  1278                           ;mainp1.c: 98:         if(D >= 10){
  1279  089F  0850               	movf	(_D+1)^(0+128),w
  1280  08A0  3A80               	xorlw	128
  1281  08A1  00FF               	movwf	btemp+1
  1282  08A2  3080               	movlw	128
  1283  08A3  027F               	subwf	btemp+1,w
  1284  08A4  1D03               	skipz
  1285  08A5  28A8               	goto	u5715
  1286  08A6  300A               	movlw	10
  1287  08A7  024F               	subwf	_D^(0+128),w
  1288  08A8                     u5715:
  1289  08A8  1C03               	skipc
  1290  08A9  28AB               	goto	u5711
  1291  08AA  28AC               	goto	u5710
  1292  08AB                     u5711:
  1293  08AB  28B2               	goto	l3544
  1294  08AC                     u5710:
  1295  08AC                     l3540:
  1296                           
  1297                           ;mainp1.c: 99:             RD1 = 0;
  1298  08AC  1283               	bcf	3,5	;RP0=0, select bank0
  1299  08AD  1303               	bcf	3,6	;RP1=0, select bank0
  1300  08AE  1088               	bcf	8,1	;volatile
  1301  08AF                     l3542:
  1302                           
  1303                           ;mainp1.c: 100:             i1 = 0;
  1304  08AF  1683               	bsf	3,5	;RP0=1, select bank1
  1305  08B0  1303               	bcf	3,6	;RP1=0, select bank1
  1306  08B1  01D3               	clrf	_i1^(0+128)
  1307  08B2                     l3544:
  1308                           
  1309                           ;mainp1.c: 102:         if(D < 10){
  1310  08B2  1683               	bsf	3,5	;RP0=1, select bank1
  1311  08B3  1303               	bcf	3,6	;RP1=0, select bank1
  1312  08B4  0850               	movf	(_D+1)^(0+128),w
  1313  08B5  3A80               	xorlw	128
  1314  08B6  00FF               	movwf	btemp+1
  1315  08B7  3080               	movlw	128
  1316  08B8  027F               	subwf	btemp+1,w
  1317  08B9  1D03               	skipz
  1318  08BA  28BD               	goto	u5725
  1319  08BB  300A               	movlw	10
  1320  08BC  024F               	subwf	_D^(0+128),w
  1321  08BD                     u5725:
  1322  08BD  1803               	skipnc
  1323  08BE  28C0               	goto	u5721
  1324  08BF  28C1               	goto	u5720
  1325  08C0                     u5721:
  1326  08C0  28C8               	goto	l3548
  1327  08C1                     u5720:
  1328  08C1                     l3546:
  1329                           
  1330                           ;mainp1.c: 103:             RD1 = 1;
  1331  08C1  1283               	bcf	3,5	;RP0=0, select bank0
  1332  08C2  1303               	bcf	3,6	;RP1=0, select bank0
  1333  08C3  1488               	bsf	8,1	;volatile
  1334                           
  1335                           ;mainp1.c: 104:             i1 = 1;
  1336  08C4  1683               	bsf	3,5	;RP0=1, select bank1
  1337  08C5  1303               	bcf	3,6	;RP1=0, select bank1
  1338  08C6  01D3               	clrf	_i1^(0+128)
  1339  08C7  0AD3               	incf	_i1^(0+128),f
  1340  08C8                     l3548:
  1341                           
  1342                           ;mainp1.c: 106:         v = conv(D);
  1343  08C8  1683               	bsf	3,5	;RP0=1, select bank1
  1344  08C9  1303               	bcf	3,6	;RP1=0, select bank1
  1345  08CA  0850               	movf	(_D+1)^(0+128),w
  1346  08CB  1283               	bcf	3,5	;RP0=0, select bank0
  1347  08CC  1303               	bcf	3,6	;RP1=0, select bank0
  1348  08CD  00A7               	movwf	conv@aa+1
  1349  08CE  1683               	bsf	3,5	;RP0=1, select bank1
  1350  08CF  1303               	bcf	3,6	;RP1=0, select bank1
  1351  08D0  084F               	movf	_D^(0+128),w
  1352  08D1  1283               	bcf	3,5	;RP0=0, select bank0
  1353  08D2  1303               	bcf	3,6	;RP1=0, select bank0
  1354  08D3  00A6               	movwf	conv@aa
  1355  08D4  160A  158A  24E3  120A  158A  	fcall	_conv
  1356  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  1357  08DA  1303               	bcf	3,6	;RP1=0, select bank0
  1358  08DB  0829               	movf	?_conv+3,w
  1359  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  1360  08DD  1303               	bcf	3,6	;RP1=0, select bank1
  1361  08DE  00CE               	movwf	(_v+3)^(0+128)
  1362  08DF  1283               	bcf	3,5	;RP0=0, select bank0
  1363  08E0  1303               	bcf	3,6	;RP1=0, select bank0
  1364  08E1  0828               	movf	?_conv+2,w
  1365  08E2  1683               	bsf	3,5	;RP0=1, select bank1
  1366  08E3  1303               	bcf	3,6	;RP1=0, select bank1
  1367  08E4  00CD               	movwf	(_v+2)^(0+128)
  1368  08E5  1283               	bcf	3,5	;RP0=0, select bank0
  1369  08E6  1303               	bcf	3,6	;RP1=0, select bank0
  1370  08E7  0827               	movf	?_conv+1,w
  1371  08E8  1683               	bsf	3,5	;RP0=1, select bank1
  1372  08E9  1303               	bcf	3,6	;RP1=0, select bank1
  1373  08EA  00CC               	movwf	(_v+1)^(0+128)
  1374  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  1375  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  1376  08ED  0826               	movf	?_conv,w
  1377  08EE  1683               	bsf	3,5	;RP0=1, select bank1
  1378  08EF  1303               	bcf	3,6	;RP1=0, select bank1
  1379  08F0  00CB               	movwf	_v^(0+128)
  1380  08F1                     l3550:
  1381                           
  1382                           ;mainp1.c: 108:         sprintf(f1, "%0.0f cm", v);
  1383  08F1  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1384  08F2  00C8               	movwf	??_main^(0+128)
  1385  08F3  0848               	movf	??_main^(0+128),w
  1386  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  1387  08F5  1303               	bcf	3,6	;RP1=0, select bank0
  1388  08F6  00EA               	movwf	sprintf@f
  1389  08F7  1683               	bsf	3,5	;RP0=1, select bank1
  1390  08F8  1303               	bcf	3,6	;RP1=0, select bank1
  1391  08F9  084E               	movf	(_v+3)^(0+128),w
  1392  08FA  1283               	bcf	3,5	;RP0=0, select bank0
  1393  08FB  1303               	bcf	3,6	;RP1=0, select bank0
  1394  08FC  00EE               	movwf	?_sprintf+4
  1395  08FD  1683               	bsf	3,5	;RP0=1, select bank1
  1396  08FE  1303               	bcf	3,6	;RP1=0, select bank1
  1397  08FF  084D               	movf	(_v+2)^(0+128),w
  1398  0900  1283               	bcf	3,5	;RP0=0, select bank0
  1399  0901  1303               	bcf	3,6	;RP1=0, select bank0
  1400  0902  00ED               	movwf	?_sprintf+3
  1401  0903  1683               	bsf	3,5	;RP0=1, select bank1
  1402  0904  1303               	bcf	3,6	;RP1=0, select bank1
  1403  0905  084C               	movf	(_v+1)^(0+128),w
  1404  0906  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0907  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0908  00EC               	movwf	?_sprintf+2
  1407  0909  1683               	bsf	3,5	;RP0=1, select bank1
  1408  090A  1303               	bcf	3,6	;RP1=0, select bank1
  1409  090B  084B               	movf	_v^(0+128),w
  1410  090C  1283               	bcf	3,5	;RP0=0, select bank0
  1411  090D  1303               	bcf	3,6	;RP1=0, select bank0
  1412  090E  00EB               	movwf	?_sprintf+1
  1413  090F  30D4               	movlw	(low (_f1| 0))& (0+255)
  1414  0910  160A  118A  24FD  120A  158A  	fcall	_sprintf
  1415  0915                     l3552:
  1416                           
  1417                           ;mainp1.c: 109:         send_crct(f1);
  1418  0915  30D4               	movlw	(low (_f1| 0))& (0+255)
  1419  0916  160A  158A  24C2  120A  158A  	fcall	_send_crct
  1420  091B                     l3554:
  1421                           
  1422                           ;mainp1.c: 111:         if(RA2 == 1){
  1423  091B  1283               	bcf	3,5	;RP0=0, select bank0
  1424  091C  1303               	bcf	3,6	;RP1=0, select bank0
  1425  091D  1D05               	btfss	5,2	;volatile
  1426  091E  2920               	goto	u5731
  1427  091F  2921               	goto	u5730
  1428  0920                     u5731:
  1429  0920  2924               	goto	l99
  1430  0921                     u5730:
  1431  0921                     l3556:
  1432                           
  1433                           ;mainp1.c: 112:             RD0 = 1;
  1434  0921  1408               	bsf	8,0	;volatile
  1435                           
  1436                           ;mainp1.c: 113:             i0 = 1;
  1437  0922  01EF               	clrf	_i0
  1438  0923  0AEF               	incf	_i0,f
  1439  0924                     l99:	
  1440                           ;mainp1.c: 114:         }
  1441                           
  1442                           
  1443                           ;mainp1.c: 115:         if(RA2 == 0){
  1444  0924  1905               	btfsc	5,2	;volatile
  1445  0925  2927               	goto	u5741
  1446  0926  2928               	goto	u5740
  1447  0927                     u5741:
  1448  0927  292A               	goto	l3562
  1449  0928                     u5740:
  1450  0928                     l3558:
  1451                           
  1452                           ;mainp1.c: 116:             RD0 = 0;
  1453  0928  1008               	bcf	8,0	;volatile
  1454  0929                     l3560:
  1455                           
  1456                           ;mainp1.c: 117:             i0 = 0;
  1457  0929  01EF               	clrf	_i0
  1458  092A                     l3562:
  1459                           
  1460                           ;mainp1.c: 120:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1461  092A  3003               	movlw	3
  1462  092B  1683               	bsf	3,5	;RP0=1, select bank1
  1463  092C  1303               	bcf	3,6	;RP1=0, select bank1
  1464  092D  00CA               	movwf	(??_main^(0+128)+2)
  1465  092E  308A               	movlw	138
  1466  092F  00C9               	movwf	(??_main^(0+128)+1)
  1467  0930  3055               	movlw	85
  1468  0931  00C8               	movwf	??_main^(0+128)
  1469  0932                     u5777:
  1470  0932  0BC8               	decfsz	??_main^(0+128),f
  1471  0933  2932               	goto	u5777
  1472  0934  0BC9               	decfsz	(??_main^(0+128)+1),f
  1473  0935  2932               	goto	u5777
  1474  0936  0BCA               	decfsz	(??_main^(0+128)+2),f
  1475  0937  2932               	goto	u5777
  1476  0938  2859               	goto	l3524
  1477  0939  120A  118A  280C   	ljmp	start
  1478  093C                     __end_of_main:
  1479                           
  1480                           	psect	text1
  1481  14FD                     __ptext1:	
  1482 ;; *************** function _sprintf *****************
  1483 ;; Defined at:
  1484 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  sp              1    wreg     PTR unsigned char 
  1487 ;;		 -> f1(15), 
  1488 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1489 ;;		 -> STR_1(9), 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  sp              1   38[BANK1 ] PTR unsigned char 
  1492 ;;		 -> f1(15), 
  1493 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1494 ;;  tmpval          4   22[BANK1 ] struct .
  1495 ;;  val             4   18[BANK1 ] unsigned long 
  1496 ;;  prec            2   36[BANK1 ] int 
  1497 ;;  width           2   30[BANK1 ] int 
  1498 ;;  flag            2   28[BANK1 ] unsigned short 
  1499 ;;  eexp            2   26[BANK1 ] int 
  1500 ;;  cp              2    0        PTR const unsigned char 
  1501 ;;  len             2    0        unsigned int 
  1502 ;;  c               1   39[BANK1 ] unsigned char 
  1503 ;;  ap              1   17[BANK1 ] PTR void [1]
  1504 ;;		 -> ?_sprintf(2), 
  1505 ;;  d               1    0        unsigned char 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  2   74[BANK0 ] int 
  1508 ;; Registers used:
  1509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1515 ;;      Params:         0       5       0       0       0
  1516 ;;      Locals:         0       0      27       0       0
  1517 ;;      Temps:          0       0       5       0       0
  1518 ;;      Totals:         0       5      32       0       0
  1519 ;;Total ram usage:       37 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    4
  1522 ;; This function calls:
  1523 ;;		___awdiv
  1524 ;;		___fladd
  1525 ;;		___fleq
  1526 ;;		___flge
  1527 ;;		___flmul
  1528 ;;		___flneg
  1529 ;;		___flsub
  1530 ;;		___fltol
  1531 ;;		___lldiv
  1532 ;;		___llmod
  1533 ;;		___wmul
  1534 ;;		___xxtofl
  1535 ;;		__div_to_l_
  1536 ;;		__tdiv_to_l_
  1537 ;;		_fround
  1538 ;;		_isdigit
  1539 ;;		_scale
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function _sprintf
  1547  14FD                     _sprintf:
  1548                           
  1549                           ;incstack = 0
  1550                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1551                           ;sprintf@sp stored from wreg
  1552  14FD  1683               	bsf	3,5	;RP0=1, select bank1
  1553  14FE  1303               	bcf	3,6	;RP1=0, select bank1
  1554  14FF  00C6               	movwf	sprintf@sp^(0+128)
  1555  1500                     l3204:
  1556                           
  1557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1558  1500  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1559  1501  00A8               	movwf	??_sprintf^(0+128)
  1560  1502  0828               	movf	??_sprintf^(0+128),w
  1561  1503  00B1               	movwf	sprintf@ap^(0+128)
  1562  1504                     L1:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1565  1504  120A  118A  2D32   	goto	l3492
  1566  1507                     l3206:
  1567                           
  1568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1569  1507  3025               	movlw	37
  1570  1508  0647               	xorwf	sprintf@c^(0+128),w
  1571  1509  1903               	btfsc	3,2
  1572  150A  2D0C               	goto	u5141
  1573  150B  2D0D               	goto	u5140
  1574  150C                     u5141:
  1575  150C  2D19               	goto	l3212
  1576  150D                     u5140:
  1577  150D                     l3208:
  1578                           
  1579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1580  150D  0847               	movf	sprintf@c^(0+128),w
  1581  150E  00A8               	movwf	??_sprintf^(0+128)
  1582  150F  0846               	movf	sprintf@sp^(0+128),w
  1583  1510  0084               	movwf	4
  1584  1511  0828               	movf	??_sprintf^(0+128),w
  1585  1512  1383               	bcf	3,7	;select IRP bank0
  1586  1513  0080               	movwf	0
  1587  1514                     l3210:
  1588  1514  3001               	movlw	1
  1589  1515  00A8               	movwf	??_sprintf^(0+128)
  1590  1516  0828               	movf	??_sprintf^(0+128),w
  1591  1517  07C6               	addwf	sprintf@sp^(0+128),f
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1594  1518  2D04               	goto	L1
  1595  1519                     l3212:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1598  1519  01BE               	clrf	sprintf@width^(0+128)
  1599  151A  01BF               	clrf	(sprintf@width+1)^(0+128)
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1602  151B  01BC               	clrf	sprintf@flag^(0+128)
  1603  151C  01BD               	clrf	(sprintf@flag+1)^(0+128)
  1604  151D  2D25               	goto	l3218
  1605  151E                     l307:	
  1606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1607                           
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1610  151E  153C               	bsf	sprintf@flag^(0+128),2
  1611  151F                     l3214:
  1612                           
  1613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  1614  151F  3001               	movlw	1
  1615  1520  00A8               	movwf	??_sprintf^(0+128)
  1616  1521  0828               	movf	??_sprintf^(0+128),w
  1617  1522  1283               	bcf	3,5	;RP0=0, select bank0
  1618  1523  1303               	bcf	3,6	;RP1=0, select bank0
  1619  1524  07EA               	addwf	sprintf@f,f
  1620  1525                     l3218:	
  1621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1622                           
  1623  1525  1283               	bcf	3,5	;RP0=0, select bank0
  1624  1526  086A               	movf	sprintf@f,w
  1625  1527  0084               	movwf	4
  1626  1528  160A  158A  2000  160A  118A  	fcall	stringdir
  1627  152D  1683               	bsf	3,5	;RP0=1, select bank1
  1628  152E  1303               	bcf	3,6	;RP1=0, select bank1
  1629  152F  00A8               	movwf	??_sprintf^(0+128)
  1630  1530  01A9               	clrf	(??_sprintf^(0+128)+1)
  1631                           
  1632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1633                           ; Switch size 1, requested type "simple"
  1634                           ; Number of cases is 1, Range of values is 0 to 0
  1635                           ; switch strategies available:
  1636                           ; Name         Instructions Cycles
  1637                           ; simple_byte            4     3 (average)
  1638                           ; direct_byte           11     8 (fixed)
  1639                           ; jumptable            260     6 (fixed)
  1640                           ;	Chosen strategy is simple_byte
  1641  1531  0829               	movf	(??_sprintf+1)^(0+128),w
  1642  1532  3A00               	xorlw	0	; case 0
  1643  1533  1903               	skipnz
  1644  1534  2D36               	goto	l3636
  1645  1535  2D3B               	goto	l3220
  1646  1536                     l3636:
  1647                           
  1648                           ; Switch size 1, requested type "simple"
  1649                           ; Number of cases is 1, Range of values is 48 to 48
  1650                           ; switch strategies available:
  1651                           ; Name         Instructions Cycles
  1652                           ; simple_byte            4     3 (average)
  1653                           ; direct_byte           14    11 (fixed)
  1654                           ; jumptable            263     9 (fixed)
  1655                           ;	Chosen strategy is simple_byte
  1656  1536  0828               	movf	??_sprintf^(0+128),w
  1657  1537  3A30               	xorlw	48	; case 48
  1658  1538  1903               	skipnz
  1659  1539  2D1E               	goto	l307
  1660  153A  2D3B               	goto	l3220
  1661  153B                     l3220:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1664  153B  1283               	bcf	3,5	;RP0=0, select bank0
  1665  153C  1303               	bcf	3,6	;RP1=0, select bank0
  1666  153D  086A               	movf	sprintf@f,w
  1667  153E  0084               	movwf	4
  1668  153F  160A  158A  2000  160A  118A  	fcall	stringdir
  1669  1544  160A  158A  24B0  160A  118A  	fcall	_isdigit
  1670  1549  1C03               	btfss	3,0
  1671  154A  2D4C               	goto	u5151
  1672  154B  2D4D               	goto	u5150
  1673  154C                     u5151:
  1674  154C  2D93               	goto	l3232
  1675  154D                     u5150:
  1676  154D                     l3222:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1679  154D  1683               	bsf	3,5	;RP0=1, select bank1
  1680  154E  1303               	bcf	3,6	;RP1=0, select bank1
  1681  154F  01BE               	clrf	sprintf@width^(0+128)
  1682  1550  01BF               	clrf	(sprintf@width+1)^(0+128)
  1683  1551                     l3224:
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1686  1551  300A               	movlw	10
  1687  1552  00F2               	movwf	___wmul@multiplier
  1688  1553  3000               	movlw	0
  1689  1554  00F3               	movwf	___wmul@multiplier+1
  1690  1555  1683               	bsf	3,5	;RP0=1, select bank1
  1691  1556  1303               	bcf	3,6	;RP1=0, select bank1
  1692  1557  083F               	movf	(sprintf@width+1)^(0+128),w
  1693  1558  00F5               	movwf	___wmul@multiplicand+1
  1694  1559  083E               	movf	sprintf@width^(0+128),w
  1695  155A  00F4               	movwf	___wmul@multiplicand
  1696  155B  160A  158A  2507  160A  118A  	fcall	___wmul
  1697  1560  0873               	movf	?___wmul+1,w
  1698  1561  1683               	bsf	3,5	;RP0=1, select bank1
  1699  1562  1303               	bcf	3,6	;RP1=0, select bank1
  1700  1563  00BF               	movwf	(sprintf@width+1)^(0+128)
  1701  1564  0872               	movf	?___wmul,w
  1702  1565  00BE               	movwf	sprintf@width^(0+128)
  1703  1566                     l3226:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1706  1566  1283               	bcf	3,5	;RP0=0, select bank0
  1707  1567  1303               	bcf	3,6	;RP1=0, select bank0
  1708  1568  086A               	movf	sprintf@f,w
  1709  1569  0084               	movwf	4
  1710  156A  160A  158A  2000  160A  118A  	fcall	stringdir
  1711  156F  3ED0               	addlw	208
  1712  1570  1683               	bsf	3,5	;RP0=1, select bank1
  1713  1571  1303               	bcf	3,6	;RP1=0, select bank1
  1714  1572  00A8               	movwf	??_sprintf^(0+128)
  1715  1573  30FF               	movlw	255
  1716  1574  1803               	skipnc
  1717  1575  3000               	movlw	0
  1718  1576  00A9               	movwf	(??_sprintf^(0+128)+1)
  1719  1577  0828               	movf	??_sprintf^(0+128),w
  1720  1578  07BE               	addwf	sprintf@width^(0+128),f
  1721  1579  1803               	skipnc
  1722  157A  0ABF               	incf	(sprintf@width+1)^(0+128),f
  1723  157B  0829               	movf	(??_sprintf+1)^(0+128),w
  1724  157C  07BF               	addwf	(sprintf@width+1)^(0+128),f
  1725  157D                     l3228:
  1726  157D  3001               	movlw	1
  1727  157E  00A8               	movwf	??_sprintf^(0+128)
  1728  157F  0828               	movf	??_sprintf^(0+128),w
  1729  1580  1283               	bcf	3,5	;RP0=0, select bank0
  1730  1581  1303               	bcf	3,6	;RP1=0, select bank0
  1731  1582  07EA               	addwf	sprintf@f,f
  1732  1583                     l3230:
  1733                           
  1734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1735  1583  086A               	movf	sprintf@f,w
  1736  1584  0084               	movwf	4
  1737  1585  160A  158A  2000  160A  118A  	fcall	stringdir
  1738  158A  160A  158A  24B0  160A  118A  	fcall	_isdigit
  1739  158F  1803               	btfsc	3,0
  1740  1590  2D92               	goto	u5161
  1741  1591  2D93               	goto	u5160
  1742  1592                     u5161:
  1743  1592  2D51               	goto	l3224
  1744  1593                     u5160:
  1745  1593                     l3232:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1748  1593  1283               	bcf	3,5	;RP0=0, select bank0
  1749  1594  1303               	bcf	3,6	;RP1=0, select bank0
  1750  1595  086A               	movf	sprintf@f,w
  1751  1596  0084               	movwf	4
  1752  1597  160A  158A  2000  160A  118A  	fcall	stringdir
  1753  159C  3A2E               	xorlw	46
  1754  159D  1D03               	skipz
  1755  159E  2DA0               	goto	u5171
  1756  159F  2DA1               	goto	u5170
  1757  15A0                     u5171:
  1758  15A0  2DF3               	goto	l3248
  1759  15A1                     u5170:
  1760  15A1                     l3234:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1763  15A1  1683               	bsf	3,5	;RP0=1, select bank1
  1764  15A2  1303               	bcf	3,6	;RP1=0, select bank1
  1765  15A3  173D               	bsf	(sprintf@flag^(0+128)+1),6
  1766  15A4                     l3236:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1769  15A4  3001               	movlw	1
  1770  15A5  00A8               	movwf	??_sprintf^(0+128)
  1771  15A6  0828               	movf	??_sprintf^(0+128),w
  1772  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  1773  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  1774  15A9  07EA               	addwf	sprintf@f,f
  1775  15AA                     l3238:
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1778  15AA  1683               	bsf	3,5	;RP0=1, select bank1
  1779  15AB  1303               	bcf	3,6	;RP1=0, select bank1
  1780  15AC  01C4               	clrf	sprintf@prec^(0+128)
  1781  15AD  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1784  15AE  2DE1               	goto	l3246
  1785  15AF                     l3240:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1788  15AF  300A               	movlw	10
  1789  15B0  00F2               	movwf	___wmul@multiplier
  1790  15B1  3000               	movlw	0
  1791  15B2  00F3               	movwf	___wmul@multiplier+1
  1792  15B3  1683               	bsf	3,5	;RP0=1, select bank1
  1793  15B4  1303               	bcf	3,6	;RP1=0, select bank1
  1794  15B5  0845               	movf	(sprintf@prec+1)^(0+128),w
  1795  15B6  00F5               	movwf	___wmul@multiplicand+1
  1796  15B7  0844               	movf	sprintf@prec^(0+128),w
  1797  15B8  00F4               	movwf	___wmul@multiplicand
  1798  15B9  160A  158A  2507  160A  118A  	fcall	___wmul
  1799  15BE  0873               	movf	?___wmul+1,w
  1800  15BF  1683               	bsf	3,5	;RP0=1, select bank1
  1801  15C0  1303               	bcf	3,6	;RP1=0, select bank1
  1802  15C1  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1803  15C2  0872               	movf	?___wmul,w
  1804  15C3  00C4               	movwf	sprintf@prec^(0+128)
  1805  15C4                     l3242:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1808  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  1809  15C5  1303               	bcf	3,6	;RP1=0, select bank0
  1810  15C6  086A               	movf	sprintf@f,w
  1811  15C7  0084               	movwf	4
  1812  15C8  160A  158A  2000  160A  118A  	fcall	stringdir
  1813  15CD  3ED0               	addlw	208
  1814  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  1815  15CF  1303               	bcf	3,6	;RP1=0, select bank1
  1816  15D0  00A8               	movwf	??_sprintf^(0+128)
  1817  15D1  30FF               	movlw	255
  1818  15D2  1803               	skipnc
  1819  15D3  3000               	movlw	0
  1820  15D4  00A9               	movwf	(??_sprintf^(0+128)+1)
  1821  15D5  0828               	movf	??_sprintf^(0+128),w
  1822  15D6  07C4               	addwf	sprintf@prec^(0+128),f
  1823  15D7  1803               	skipnc
  1824  15D8  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1825  15D9  0829               	movf	(??_sprintf+1)^(0+128),w
  1826  15DA  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1827  15DB                     l3244:
  1828  15DB  3001               	movlw	1
  1829  15DC  00A8               	movwf	??_sprintf^(0+128)
  1830  15DD  0828               	movf	??_sprintf^(0+128),w
  1831  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  1832  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  1833  15E0  07EA               	addwf	sprintf@f,f
  1834  15E1                     l3246:
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1837  15E1  1283               	bcf	3,5	;RP0=0, select bank0
  1838  15E2  086A               	movf	sprintf@f,w
  1839  15E3  0084               	movwf	4
  1840  15E4  160A  158A  2000  160A  118A  	fcall	stringdir
  1841  15E9  160A  158A  24B0  160A  118A  	fcall	_isdigit
  1842  15EE  1803               	btfsc	3,0
  1843  15EF  2DF1               	goto	u5181
  1844  15F0  2DF2               	goto	u5180
  1845  15F1                     u5181:
  1846  15F1  2DAF               	goto	l3240
  1847  15F2                     u5180:
  1848  15F2  2DFB               	goto	l3254
  1849  15F3                     l3248:
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1852  15F3  1683               	bsf	3,5	;RP0=1, select bank1
  1853  15F4  1303               	bcf	3,6	;RP1=0, select bank1
  1854  15F5  01C4               	clrf	sprintf@prec^(0+128)
  1855  15F6  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1856  15F7                     l3250:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1859  15F7  163D               	bsf	(sprintf@flag^(0+128)+1),4
  1860  15F8  2DFB               	goto	l3254
  1861  15F9                     l322:	
  1862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1863                           
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1866  15F9  153D               	bsf	(sprintf@flag^(0+128)+1),2
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1869  15FA  2E19               	goto	l3256
  1870  15FB                     l3254:
  1871  15FB  3001               	movlw	1
  1872  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  1873  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  1874  15FE  07EA               	addwf	sprintf@f,f
  1875  15FF  30FF               	movlw	-1
  1876  1600  076A               	addwf	sprintf@f,w
  1877  1601  0084               	movwf	4
  1878  1602  160A  158A  2000  160A  118A  	fcall	stringdir
  1879  1607  1683               	bsf	3,5	;RP0=1, select bank1
  1880  1608  1303               	bcf	3,6	;RP1=0, select bank1
  1881  1609  00C7               	movwf	sprintf@c^(0+128)
  1882  160A  00A8               	movwf	??_sprintf^(0+128)
  1883  160B  01A9               	clrf	(??_sprintf^(0+128)+1)
  1884                           
  1885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1886                           ; Switch size 1, requested type "simple"
  1887                           ; Number of cases is 1, Range of values is 0 to 0
  1888                           ; switch strategies available:
  1889                           ; Name         Instructions Cycles
  1890                           ; simple_byte            4     3 (average)
  1891                           ; direct_byte           11     8 (fixed)
  1892                           ; jumptable            260     6 (fixed)
  1893                           ;	Chosen strategy is simple_byte
  1894  160C  0829               	movf	(??_sprintf+1)^(0+128),w
  1895  160D  3A00               	xorlw	0	; case 0
  1896  160E  1903               	skipnz
  1897  160F  2E11               	goto	l3638
  1898  1610  2D04               	goto	L1
  1899  1611                     l3638:
  1900                           
  1901                           ; Switch size 1, requested type "simple"
  1902                           ; Number of cases is 2, Range of values is 0 to 102
  1903                           ; switch strategies available:
  1904                           ; Name         Instructions Cycles
  1905                           ; simple_byte            7     4 (average)
  1906                           ; jumptable            260     6 (fixed)
  1907                           ;	Chosen strategy is simple_byte
  1908  1611  0828               	movf	??_sprintf^(0+128),w
  1909  1612  3A00               	xorlw	0	; case 0
  1910  1613  1903               	skipnz
  1911  1614  2FFD               	goto	L3
  1912  1615  3A66               	xorlw	102	; case 102
  1913  1616  1903               	skipnz
  1914  1617  2DF9               	goto	l322
  1915  1618  2D04               	goto	L1
  1916  1619                     l3256:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1919  1619  3000               	movlw	0
  1920  161A  053C               	andwf	sprintf@flag^(0+128),w
  1921  161B  00A8               	movwf	??_sprintf^(0+128)
  1922  161C  3007               	movlw	7
  1923  161D  053D               	andwf	(sprintf@flag+1)^(0+128),w
  1924  161E  00A9               	movwf	(??_sprintf+1)^(0+128)
  1925  161F  0828               	movf	??_sprintf^(0+128),w
  1926  1620  0429               	iorwf	(??_sprintf^(0+128)+1),w
  1927  1621  1903               	btfsc	3,2
  1928  1622  2E24               	goto	u5191
  1929  1623  2E27               	goto	u5190
  1930  1624                     u5191:
  1931  1624  120A  118A  2C34   	goto	l3430
  1932  1627                     u5190:
  1933  1627                     l3258:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1936  1627  1E3D               	btfss	(sprintf@flag+1)^(0+128),4
  1937  1628  2E2A               	goto	u5201
  1938  1629  2E2B               	goto	u5200
  1939  162A                     u5201:
  1940  162A  2E2F               	goto	l3262
  1941  162B                     u5200:
  1942  162B                     l3260:
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1945  162B  3006               	movlw	6
  1946  162C  00C4               	movwf	sprintf@prec^(0+128)
  1947  162D  3000               	movlw	0
  1948  162E  00C5               	movwf	(sprintf@prec^(0+128)+1)
  1949  162F                     l3262:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1952  162F  0831               	movf	sprintf@ap^(0+128),w
  1953  1630  0084               	movwf	4
  1954  1631  1383               	bcf	3,7	;select IRP bank0
  1955  1632  0800               	movf	0,w
  1956  1633  00C0               	movwf	sprintf@fval^(0+128)
  1957  1634  0A84               	incf	4,f
  1958  1635  0800               	movf	0,w
  1959  1636  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1960  1637  0A84               	incf	4,f
  1961  1638  0800               	movf	0,w
  1962  1639  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1963  163A  0A84               	incf	4,f
  1964  163B  0800               	movf	0,w
  1965  163C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1966  163D                     l3264:
  1967  163D  3004               	movlw	4
  1968  163E  00A8               	movwf	??_sprintf^(0+128)
  1969  163F  0828               	movf	??_sprintf^(0+128),w
  1970  1640  07B1               	addwf	sprintf@ap^(0+128),f
  1971  1641                     l3266:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1974  1641  0843               	movf	(sprintf@fval+3)^(0+128),w
  1975  1642  00F5               	movwf	___flge@ff1+3
  1976  1643  0842               	movf	(sprintf@fval+2)^(0+128),w
  1977  1644  00F4               	movwf	___flge@ff1+2
  1978  1645  0841               	movf	(sprintf@fval+1)^(0+128),w
  1979  1646  00F3               	movwf	___flge@ff1+1
  1980  1647  0840               	movf	sprintf@fval^(0+128),w
  1981  1648  00F2               	movwf	___flge@ff1
  1982  1649  3000               	movlw	0
  1983  164A  00F9               	movwf	___flge@ff2+3
  1984  164B  3000               	movlw	0
  1985  164C  00F8               	movwf	___flge@ff2+2
  1986  164D  3000               	movlw	0
  1987  164E  00F7               	movwf	___flge@ff2+1
  1988  164F  3000               	movlw	0
  1989  1650  00F6               	movwf	___flge@ff2
  1990  1651  160A  118A  2017  160A  118A  	fcall	___flge
  1991  1656  1803               	btfsc	3,0
  1992  1657  2E59               	goto	u5211
  1993  1658  2E5A               	goto	u5210
  1994  1659                     u5211:
  1995  1659  2E77               	goto	l3272
  1996  165A                     u5210:
  1997  165A                     l3268:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2000  165A  1683               	bsf	3,5	;RP0=1, select bank1
  2001  165B  1303               	bcf	3,6	;RP1=0, select bank1
  2002  165C  0843               	movf	(sprintf@fval+3)^(0+128),w
  2003  165D  00F5               	movwf	___flneg@f1+3
  2004  165E  0842               	movf	(sprintf@fval+2)^(0+128),w
  2005  165F  00F4               	movwf	___flneg@f1+2
  2006  1660  0841               	movf	(sprintf@fval+1)^(0+128),w
  2007  1661  00F3               	movwf	___flneg@f1+1
  2008  1662  0840               	movf	sprintf@fval^(0+128),w
  2009  1663  00F2               	movwf	___flneg@f1
  2010  1664  160A  158A  2493  160A  118A  	fcall	___flneg
  2011  1669  0875               	movf	?___flneg+3,w
  2012  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2013  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2014  166C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2015  166D  0874               	movf	?___flneg+2,w
  2016  166E  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2017  166F  0873               	movf	?___flneg+1,w
  2018  1670  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2019  1671  0872               	movf	?___flneg,w
  2020  1672  00C0               	movwf	sprintf@fval^(0+128)
  2021  1673                     l3270:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2024  1673  3003               	movlw	3
  2025  1674  04BC               	iorwf	sprintf@flag^(0+128),f
  2026  1675  3000               	movlw	0
  2027  1676  04BD               	iorwf	(sprintf@flag+1)^(0+128),f
  2028  1677                     l3272:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2031  1677  1683               	bsf	3,5	;RP0=1, select bank1
  2032  1678  1303               	bcf	3,6	;RP1=0, select bank1
  2033  1679  01BA               	clrf	sprintf@eexp^(0+128)
  2034  167A  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  2035  167B                     l3274:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2038  167B  0843               	movf	(sprintf@fval+3)^(0+128),w
  2039  167C  00F5               	movwf	___fleq@ff1+3
  2040  167D  0842               	movf	(sprintf@fval+2)^(0+128),w
  2041  167E  00F4               	movwf	___fleq@ff1+2
  2042  167F  0841               	movf	(sprintf@fval+1)^(0+128),w
  2043  1680  00F3               	movwf	___fleq@ff1+1
  2044  1681  0840               	movf	sprintf@fval^(0+128),w
  2045  1682  00F2               	movwf	___fleq@ff1
  2046  1683  3000               	movlw	0
  2047  1684  00F9               	movwf	___fleq@ff2+3
  2048  1685  3000               	movlw	0
  2049  1686  00F8               	movwf	___fleq@ff2+2
  2050  1687  3000               	movlw	0
  2051  1688  00F7               	movwf	___fleq@ff2+1
  2052  1689  3000               	movlw	0
  2053  168A  00F6               	movwf	___fleq@ff2
  2054  168B  160A  158A  2566  160A  118A  	fcall	___fleq
  2055  1690  1803               	btfsc	3,0
  2056  1691  2E93               	goto	u5221
  2057  1692  2E94               	goto	u5220
  2058  1693                     u5221:
  2059  1693  2F94               	goto	l3300
  2060  1694                     u5220:
  2061  1694                     l3276:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2064  1694  1003               	clrc
  2065  1695  1683               	bsf	3,5	;RP0=1, select bank1
  2066  1696  1303               	bcf	3,6	;RP1=0, select bank1
  2067  1697  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  2068  1698  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  2069  1699  3E82               	addlw	130
  2070  169A  00BA               	movwf	sprintf@eexp^(0+128)
  2071  169B  30FF               	movlw	255
  2072  169C  1803               	skipnc
  2073  169D  3000               	movlw	0
  2074  169E  00BB               	movwf	(sprintf@eexp^(0+128)+1)
  2075  169F                     l3278:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2078  169F  30FF               	movlw	255
  2079  16A0  07BA               	addwf	sprintf@eexp^(0+128),f
  2080  16A1  1803               	skipnc
  2081  16A2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2082  16A3  30FF               	movlw	255
  2083  16A4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2084  16A5                     l3280:
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2087  16A5  3003               	movlw	3
  2088  16A6  00F2               	movwf	___wmul@multiplier
  2089  16A7  3000               	movlw	0
  2090  16A8  00F3               	movwf	___wmul@multiplier+1
  2091  16A9  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2092  16AA  00F5               	movwf	___wmul@multiplicand+1
  2093  16AB  083A               	movf	sprintf@eexp^(0+128),w
  2094  16AC  00F4               	movwf	___wmul@multiplicand
  2095  16AD  160A  158A  2507  160A  118A  	fcall	___wmul
  2096  16B2  0873               	movf	?___wmul+1,w
  2097  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  2098  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  2099  16B5  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  2100  16B6  0872               	movf	?___wmul,w
  2101  16B7  00BA               	movwf	sprintf@eexp^(0+128)
  2102  16B8                     l3282:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2105  16B8  300A               	movlw	10
  2106  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2107  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2108  16BB  00A0               	movwf	___awdiv@divisor
  2109  16BC  3000               	movlw	0
  2110  16BD  00A1               	movwf	___awdiv@divisor+1
  2111  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  2112  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  2113  16C0  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2114  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  2115  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  2116  16C3  00A3               	movwf	___awdiv@dividend+1
  2117  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  2118  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  2119  16C6  083A               	movf	sprintf@eexp^(0+128),w
  2120  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2121  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2122  16C9  00A2               	movwf	___awdiv@dividend
  2123  16CA  160A  158A  271B  160A  118A  	fcall	___awdiv
  2124  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2125  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  2126  16D1  0821               	movf	?___awdiv+1,w
  2127  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  2128  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  2129  16D4  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  2130  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  2131  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  2132  16D7  0820               	movf	?___awdiv,w
  2133  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  2134  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  2135  16DA  00BA               	movwf	sprintf@eexp^(0+128)
  2136  16DB                     l3284:
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2139  16DB  1FBB               	btfss	(sprintf@eexp+1)^(0+128),7
  2140  16DC  2EDE               	goto	u5231
  2141  16DD  2EDF               	goto	u5230
  2142  16DE                     u5231:
  2143  16DE  2EE5               	goto	l3288
  2144  16DF                     u5230:
  2145  16DF                     l3286:
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2148  16DF  30FF               	movlw	255
  2149  16E0  07BA               	addwf	sprintf@eexp^(0+128),f
  2150  16E1  1803               	skipnc
  2151  16E2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2152  16E3  30FF               	movlw	255
  2153  16E4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2154  16E5                     l3288:
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2157  16E5  033A               	decf	sprintf@eexp^(0+128),w
  2158  16E6  3AFF               	xorlw	255
  2159  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  2160  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2161  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2162  16EE  0845               	movf	?_scale+3,w
  2163  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2164  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2165  16F1  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2166  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2167  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2168  16F4  0844               	movf	?_scale+2,w
  2169  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2170  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2171  16F7  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2172  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2173  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2174  16FA  0843               	movf	?_scale+1,w
  2175  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2176  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2177  16FD  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2178  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2179  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2180  1700  0842               	movf	?_scale,w
  2181  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2182  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2183  1703  00B6               	movwf	sprintf@tmpval^(0+128)
  2184  1704                     l3290:
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2187  1704  0843               	movf	(sprintf@fval+3)^(0+128),w
  2188  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2189  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2190  1707  00AB               	movwf	___flmul@b+3
  2191  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2192  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2193  170A  0842               	movf	(sprintf@fval+2)^(0+128),w
  2194  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2195  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2196  170D  00AA               	movwf	___flmul@b+2
  2197  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2198  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2199  1710  0841               	movf	(sprintf@fval+1)^(0+128),w
  2200  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2201  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2202  1713  00A9               	movwf	___flmul@b+1
  2203  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2204  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2205  1716  0840               	movf	sprintf@fval^(0+128),w
  2206  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2207  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2208  1719  00A8               	movwf	___flmul@b
  2209  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2210  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2211  171C  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2212  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2213  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2214  171F  00AF               	movwf	___flmul@a+3
  2215  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2216  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2217  1722  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2218  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2219  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2220  1725  00AE               	movwf	___flmul@a+2
  2221  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2222  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2223  1728  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2224  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2225  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2226  172B  00AD               	movwf	___flmul@a+1
  2227  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2228  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2229  172E  0836               	movf	sprintf@tmpval^(0+128),w
  2230  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2231  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2232  1731  00AC               	movwf	___flmul@a
  2233  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2234  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2235  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2236  1739  082B               	movf	?___flmul+3,w
  2237  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2238  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2239  173C  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2240  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2241  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2242  173F  082A               	movf	?___flmul+2,w
  2243  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2244  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2245  1742  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2246  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2247  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2248  1745  0829               	movf	?___flmul+1,w
  2249  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2250  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2251  1748  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2252  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2253  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2254  174B  0828               	movf	?___flmul,w
  2255  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2256  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2257  174E  00B6               	movwf	sprintf@tmpval^(0+128)
  2258  174F                     l3292:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2261  174F  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2262  1750  00F5               	movwf	___flge@ff1+3
  2263  1751  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2264  1752  00F4               	movwf	___flge@ff1+2
  2265  1753  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2266  1754  00F3               	movwf	___flge@ff1+1
  2267  1755  0836               	movf	sprintf@tmpval^(0+128),w
  2268  1756  00F2               	movwf	___flge@ff1
  2269  1757  303F               	movlw	63
  2270  1758  00F9               	movwf	___flge@ff2+3
  2271  1759  3080               	movlw	128
  2272  175A  00F8               	movwf	___flge@ff2+2
  2273  175B  3000               	movlw	0
  2274  175C  00F7               	movwf	___flge@ff2+1
  2275  175D  3000               	movlw	0
  2276  175E  00F6               	movwf	___flge@ff2
  2277  175F  160A  118A  2017  160A  118A  	fcall	___flge
  2278  1764  1803               	btfsc	3,0
  2279  1765  2F67               	goto	u5241
  2280  1766  2F68               	goto	u5240
  2281  1767                     u5241:
  2282  1767  2F71               	goto	l3296
  2283  1768                     u5240:
  2284  1768                     l3294:
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2287  1768  30FF               	movlw	255
  2288  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2289  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2290  176B  07BA               	addwf	sprintf@eexp^(0+128),f
  2291  176C  1803               	skipnc
  2292  176D  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2293  176E  30FF               	movlw	255
  2294  176F  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2295  1770  2F94               	goto	l3300
  2296  1771                     l3296:
  2297  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2298  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2299  1773  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2300  1774  00F5               	movwf	___flge@ff1+3
  2301  1775  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2302  1776  00F4               	movwf	___flge@ff1+2
  2303  1777  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2304  1778  00F3               	movwf	___flge@ff1+1
  2305  1779  0836               	movf	sprintf@tmpval^(0+128),w
  2306  177A  00F2               	movwf	___flge@ff1
  2307  177B  3041               	movlw	65
  2308  177C  00F9               	movwf	___flge@ff2+3
  2309  177D  3020               	movlw	32
  2310  177E  00F8               	movwf	___flge@ff2+2
  2311  177F  3000               	movlw	0
  2312  1780  00F7               	movwf	___flge@ff2+1
  2313  1781  3000               	movlw	0
  2314  1782  00F6               	movwf	___flge@ff2
  2315  1783  160A  118A  2017  160A  118A  	fcall	___flge
  2316  1788  1C03               	btfss	3,0
  2317  1789  2F8B               	goto	u5251
  2318  178A  2F8C               	goto	u5250
  2319  178B                     u5251:
  2320  178B  2F94               	goto	l3300
  2321  178C                     u5250:
  2322  178C                     l3298:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2325  178C  3001               	movlw	1
  2326  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2327  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2328  178F  07BA               	addwf	sprintf@eexp^(0+128),f
  2329  1790  1803               	skipnc
  2330  1791  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2331  1792  3000               	movlw	0
  2332  1793  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2333  1794                     l3300:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2336  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2337  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2338  1796  0845               	movf	(sprintf@prec+1)^(0+128),w
  2339  1797  3A80               	xorlw	128
  2340  1798  00FF               	movwf	btemp+1
  2341  1799  3080               	movlw	128
  2342  179A  027F               	subwf	btemp+1,w
  2343  179B  1D03               	skipz
  2344  179C  2F9F               	goto	u5265
  2345  179D  300D               	movlw	13
  2346  179E  0244               	subwf	sprintf@prec^(0+128),w
  2347  179F                     u5265:
  2348  179F  1803               	skipnc
  2349  17A0  2FA2               	goto	u5261
  2350  17A1  2FA3               	goto	u5260
  2351  17A2                     u5261:
  2352  17A2  2FEA               	goto	l3304
  2353  17A3                     u5260:
  2354  17A3                     l3302:
  2355                           
  2356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2357  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2358  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2359  17A5  0844               	movf	sprintf@prec^(0+128),w
  2360  17A6  160A  118A  22F2  160A  118A  	fcall	_fround
  2361  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2362  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2363  17AD  0845               	movf	?_fround+3,w
  2364  17AE  00D9               	movwf	___fladd@b+3
  2365  17AF  0844               	movf	?_fround+2,w
  2366  17B0  00D8               	movwf	___fladd@b+2
  2367  17B1  0843               	movf	?_fround+1,w
  2368  17B2  00D7               	movwf	___fladd@b+1
  2369  17B3  0842               	movf	?_fround,w
  2370  17B4  00D6               	movwf	___fladd@b
  2371  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2372  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2373  17B7  0843               	movf	(sprintf@fval+3)^(0+128),w
  2374  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2375  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2376  17BA  00DD               	movwf	___fladd@a+3
  2377  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2378  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2379  17BD  0842               	movf	(sprintf@fval+2)^(0+128),w
  2380  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2381  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2382  17C0  00DC               	movwf	___fladd@a+2
  2383  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2384  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2385  17C3  0841               	movf	(sprintf@fval+1)^(0+128),w
  2386  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2387  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2388  17C6  00DB               	movwf	___fladd@a+1
  2389  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2390  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2391  17C9  0840               	movf	sprintf@fval^(0+128),w
  2392  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2393  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2394  17CC  00DA               	movwf	___fladd@a
  2395  17CD  120A  118A  254F  160A  118A  	fcall	___fladd
  2396  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2397  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2398  17D4  0859               	movf	?___fladd+3,w
  2399  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2400  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2401  17D7  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2402  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2403  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2404  17DA  0858               	movf	?___fladd+2,w
  2405  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2406  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2407  17DD  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2408  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2409  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2410  17E0  0857               	movf	?___fladd+1,w
  2411  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2412  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2413  17E3  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2414  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2415  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2416  17E6  0856               	movf	?___fladd,w
  2417  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2418  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2419  17E9  00C0               	movwf	sprintf@fval^(0+128)
  2420  17EA                     l3304:
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2423  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2424  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2425  17EC  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2426  17ED  3A80               	xorlw	128
  2427  17EE  00FF               	movwf	btemp+1
  2428  17EF  3080               	movlw	128
  2429  17F0  027F               	subwf	btemp+1,w
  2430  17F1  1D03               	skipz
  2431  17F2  2FF5               	goto	u5275
  2432  17F3  300A               	movlw	10
  2433  17F4  023A               	subwf	sprintf@eexp^(0+128),w
  2434  17F5                     u5275:
  2435  17F5  1803               	skipnc
  2436  17F6  2FFA               	goto	u5271
  2437  17F7  120A  118A  281F   	goto	u5270
  2438  17FA                     u5271:
  2439  17FA  120A  118A  2870   	goto	l3312
  2440  17FD                     L3:
  2441  17FD                     L2:
  2442  17FD  120A  118A  2D4A   	ljmp	l3494
  2443                           
  2444                           	psect	text2
  2445  0C9D                     __ptext2:	
  2446 ;; *************** function _scale *****************
  2447 ;; Defined at:
  2448 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  scl             1    wreg     char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  scl             1   52[BANK0 ] char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  4   34[BANK0 ] char 
  2455 ;; Registers used:
  2456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2462 ;;      Params:         0       4       0       0       0
  2463 ;;      Locals:         0       5       0       0       0
  2464 ;;      Temps:          0      10       0       0       0
  2465 ;;      Totals:         0      19       0       0       0
  2466 ;;Total ram usage:       19 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    3
  2469 ;; This function calls:
  2470 ;;		___awdiv
  2471 ;;		___awmod
  2472 ;;		___flmul
  2473 ;; This function is called by:
  2474 ;;		_sprintf
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _scale
  2480  0C9D                     _scale:
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2484                           ;scale@scl stored from wreg
  2485  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0C9F  00D4               	movwf	scale@scl
  2488  0CA0                     l2832:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2491  0CA0  1FD4               	btfss	scale@scl,7
  2492  0CA1  2CA3               	goto	u4171
  2493  0CA2  2CA4               	goto	u4170
  2494  0CA3                     u4171:
  2495  0CA3  2E53               	goto	l2854
  2496  0CA4                     u4170:
  2497  0CA4                     l2834:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2500  0CA4  09D4               	comf	scale@scl,f
  2501  0CA5  0AD4               	incf	scale@scl,f
  2502  0CA6                     l2836:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2505  0CA6  0854               	movf	scale@scl,w
  2506  0CA7  3A80               	xorlw	128
  2507  0CA8  3E12               	addlw	-238
  2508  0CA9  1C03               	skipc
  2509  0CAA  2CAC               	goto	u4181
  2510  0CAB  2CAD               	goto	u4180
  2511  0CAC                     u4181:
  2512  0CAC  2D97               	goto	l2844
  2513  0CAD                     u4180:
  2514  0CAD                     l2838:
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2517  0CAD  300A               	movlw	10
  2518  0CAE  00A0               	movwf	___awdiv@divisor
  2519  0CAF  3000               	movlw	0
  2520  0CB0  00A1               	movwf	___awdiv@divisor+1
  2521  0CB1  0854               	movf	scale@scl,w
  2522  0CB2  00F4               	movwf	___awmod@dividend
  2523  0CB3  01F5               	clrf	___awmod@dividend+1
  2524  0CB4  1BF4               	btfsc	___awmod@dividend,7
  2525  0CB5  03F5               	decf	___awmod@dividend+1,f
  2526  0CB6  3064               	movlw	100
  2527  0CB7  00F2               	movwf	___awmod@divisor
  2528  0CB8  3000               	movlw	0
  2529  0CB9  00F3               	movwf	___awmod@divisor+1
  2530  0CBA  160A  158A  265A  120A  158A  	fcall	___awmod
  2531  0CBF  0873               	movf	?___awmod+1,w
  2532  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0CC2  00A3               	movwf	___awdiv@dividend+1
  2535  0CC3  0872               	movf	?___awmod,w
  2536  0CC4  00A2               	movwf	___awdiv@dividend
  2537  0CC5  160A  158A  271B  120A  158A  	fcall	___awdiv
  2538  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0CCC  0820               	movf	?___awdiv,w
  2541  0CCD  00C6               	movwf	??_scale
  2542  0CCE  3001               	movlw	1
  2543  0CCF                     u4195:
  2544  0CCF  1003               	clrc
  2545  0CD0  0DC6               	rlf	??_scale,f
  2546  0CD1  3EFF               	addlw	-1
  2547  0CD2  1D03               	skipz
  2548  0CD3  2CCF               	goto	u4195
  2549  0CD4  1003               	clrc
  2550  0CD5  0D46               	rlf	??_scale,w
  2551  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2552  0CD7  0084               	movwf	4
  2553  0CD8  160A  158A  2000  120A  158A  	fcall	stringdir
  2554  0CDD  00C7               	movwf	??_scale+1
  2555  0CDE  160A  158A  2000  120A  158A  	fcall	stringdir
  2556  0CE3  00C8               	movwf	??_scale+2
  2557  0CE4  160A  158A  2000  120A  158A  	fcall	stringdir
  2558  0CE9  00C9               	movwf	??_scale+3
  2559  0CEA  160A  158A  2000  120A  158A  	fcall	stringdir
  2560  0CEF  00CA               	movwf	??_scale+4
  2561  0CF0  084A               	movf	??_scale+4,w
  2562  0CF1  00AB               	movwf	___flmul@b+3
  2563  0CF2  0849               	movf	??_scale+3,w
  2564  0CF3  00AA               	movwf	___flmul@b+2
  2565  0CF4  0848               	movf	??_scale+2,w
  2566  0CF5  00A9               	movwf	___flmul@b+1
  2567  0CF6  0847               	movf	??_scale+1,w
  2568  0CF7  00A8               	movwf	___flmul@b
  2569  0CF8  3064               	movlw	100
  2570  0CF9  00A0               	movwf	___awdiv@divisor
  2571  0CFA  3000               	movlw	0
  2572  0CFB  00A1               	movwf	___awdiv@divisor+1
  2573  0CFC  0854               	movf	scale@scl,w
  2574  0CFD  00A2               	movwf	___awdiv@dividend
  2575  0CFE  01A3               	clrf	___awdiv@dividend+1
  2576  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2577  0D00  03A3               	decf	___awdiv@dividend+1,f
  2578  0D01  160A  158A  271B  120A  158A  	fcall	___awdiv
  2579  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0D08  0820               	movf	?___awdiv,w
  2582  0D09  00CB               	movwf	??_scale+5
  2583  0D0A  3001               	movlw	1
  2584  0D0B                     u4205:
  2585  0D0B  1003               	clrc
  2586  0D0C  0DCB               	rlf	??_scale+5,f
  2587  0D0D  3EFF               	addlw	-1
  2588  0D0E  1D03               	skipz
  2589  0D0F  2D0B               	goto	u4205
  2590  0D10  1003               	clrc
  2591  0D11  0D4B               	rlf	??_scale+5,w
  2592  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2593  0D13  0084               	movwf	4
  2594  0D14  160A  158A  2000  120A  158A  	fcall	stringdir
  2595  0D19  00CC               	movwf	??_scale+6
  2596  0D1A  160A  158A  2000  120A  158A  	fcall	stringdir
  2597  0D1F  00CD               	movwf	??_scale+7
  2598  0D20  160A  158A  2000  120A  158A  	fcall	stringdir
  2599  0D25  00CE               	movwf	??_scale+8
  2600  0D26  160A  158A  2000  120A  158A  	fcall	stringdir
  2601  0D2B  00CF               	movwf	??_scale+9
  2602  0D2C  084F               	movf	??_scale+9,w
  2603  0D2D  00AF               	movwf	___flmul@a+3
  2604  0D2E  084E               	movf	??_scale+8,w
  2605  0D2F  00AE               	movwf	___flmul@a+2
  2606  0D30  084D               	movf	??_scale+7,w
  2607  0D31  00AD               	movwf	___flmul@a+1
  2608  0D32  084C               	movf	??_scale+6,w
  2609  0D33  00AC               	movwf	___flmul@a
  2610  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2611  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2613  0D3B  082B               	movf	?___flmul+3,w
  2614  0D3C  00D3               	movwf	_scale$1129+3
  2615  0D3D  082A               	movf	?___flmul+2,w
  2616  0D3E  00D2               	movwf	_scale$1129+2
  2617  0D3F  0829               	movf	?___flmul+1,w
  2618  0D40  00D1               	movwf	_scale$1129+1
  2619  0D41  0828               	movf	?___flmul,w
  2620  0D42  00D0               	movwf	_scale$1129
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2623  0D43  300A               	movlw	10
  2624  0D44  00F2               	movwf	___awmod@divisor
  2625  0D45  3000               	movlw	0
  2626  0D46  00F3               	movwf	___awmod@divisor+1
  2627  0D47  0854               	movf	scale@scl,w
  2628  0D48  00F4               	movwf	___awmod@dividend
  2629  0D49  01F5               	clrf	___awmod@dividend+1
  2630  0D4A  1BF4               	btfsc	___awmod@dividend,7
  2631  0D4B  03F5               	decf	___awmod@dividend+1,f
  2632  0D4C  160A  158A  265A  120A  158A  	fcall	___awmod
  2633  0D51  0872               	movf	?___awmod,w
  2634  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0D54  00C6               	movwf	??_scale
  2637  0D55  3001               	movlw	1
  2638  0D56                     u4215:
  2639  0D56  1003               	clrc
  2640  0D57  0DC6               	rlf	??_scale,f
  2641  0D58  3EFF               	addlw	-1
  2642  0D59  1D03               	skipz
  2643  0D5A  2D56               	goto	u4215
  2644  0D5B  1003               	clrc
  2645  0D5C  0D46               	rlf	??_scale,w
  2646  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2647  0D5E  0084               	movwf	4
  2648  0D5F  160A  158A  2000  120A  158A  	fcall	stringdir
  2649  0D64  00C7               	movwf	??_scale+1
  2650  0D65  160A  158A  2000  120A  158A  	fcall	stringdir
  2651  0D6A  00C8               	movwf	??_scale+2
  2652  0D6B  160A  158A  2000  120A  158A  	fcall	stringdir
  2653  0D70  00C9               	movwf	??_scale+3
  2654  0D71  160A  158A  2000  120A  158A  	fcall	stringdir
  2655  0D76  00CA               	movwf	??_scale+4
  2656  0D77  084A               	movf	??_scale+4,w
  2657  0D78  00AB               	movwf	___flmul@b+3
  2658  0D79  0849               	movf	??_scale+3,w
  2659  0D7A  00AA               	movwf	___flmul@b+2
  2660  0D7B  0848               	movf	??_scale+2,w
  2661  0D7C  00A9               	movwf	___flmul@b+1
  2662  0D7D  0847               	movf	??_scale+1,w
  2663  0D7E  00A8               	movwf	___flmul@b
  2664  0D7F  0853               	movf	_scale$1129+3,w
  2665  0D80  00AF               	movwf	___flmul@a+3
  2666  0D81  0852               	movf	_scale$1129+2,w
  2667  0D82  00AE               	movwf	___flmul@a+2
  2668  0D83  0851               	movf	_scale$1129+1,w
  2669  0D84  00AD               	movwf	___flmul@a+1
  2670  0D85  0850               	movf	_scale$1129,w
  2671  0D86  00AC               	movwf	___flmul@a
  2672  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2673  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0D8E  082B               	movf	?___flmul+3,w
  2676  0D8F  00C5               	movwf	?_scale+3
  2677  0D90  082A               	movf	?___flmul+2,w
  2678  0D91  00C4               	movwf	?_scale+2
  2679  0D92  0829               	movf	?___flmul+1,w
  2680  0D93  00C3               	movwf	?_scale+1
  2681  0D94  0828               	movf	?___flmul,w
  2682  0D95  00C2               	movwf	?_scale
  2683  0D96  2FFF               	goto	l294
  2684  0D97                     l2844:
  2685  0D97  0854               	movf	scale@scl,w
  2686  0D98  3A80               	xorlw	128
  2687  0D99  3E75               	addlw	-139
  2688  0D9A  1C03               	skipc
  2689  0D9B  2D9D               	goto	u4221
  2690  0D9C  2D9E               	goto	u4220
  2691  0D9D                     u4221:
  2692  0D9D  2E26               	goto	l2850
  2693  0D9E                     u4220:
  2694  0D9E                     l2846:
  2695                           
  2696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2697  0D9E  300A               	movlw	10
  2698  0D9F  00F2               	movwf	___awmod@divisor
  2699  0DA0  3000               	movlw	0
  2700  0DA1  00F3               	movwf	___awmod@divisor+1
  2701  0DA2  0854               	movf	scale@scl,w
  2702  0DA3  00F4               	movwf	___awmod@dividend
  2703  0DA4  01F5               	clrf	___awmod@dividend+1
  2704  0DA5  1BF4               	btfsc	___awmod@dividend,7
  2705  0DA6  03F5               	decf	___awmod@dividend+1,f
  2706  0DA7  160A  158A  265A  120A  158A  	fcall	___awmod
  2707  0DAC  0872               	movf	?___awmod,w
  2708  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0DAF  00C6               	movwf	??_scale
  2711  0DB0  3001               	movlw	1
  2712  0DB1                     u4235:
  2713  0DB1  1003               	clrc
  2714  0DB2  0DC6               	rlf	??_scale,f
  2715  0DB3  3EFF               	addlw	-1
  2716  0DB4  1D03               	skipz
  2717  0DB5  2DB1               	goto	u4235
  2718  0DB6  1003               	clrc
  2719  0DB7  0D46               	rlf	??_scale,w
  2720  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2721  0DB9  0084               	movwf	4
  2722  0DBA  160A  158A  2000  120A  158A  	fcall	stringdir
  2723  0DBF  00C7               	movwf	??_scale+1
  2724  0DC0  160A  158A  2000  120A  158A  	fcall	stringdir
  2725  0DC5  00C8               	movwf	??_scale+2
  2726  0DC6  160A  158A  2000  120A  158A  	fcall	stringdir
  2727  0DCB  00C9               	movwf	??_scale+3
  2728  0DCC  160A  158A  2000  120A  158A  	fcall	stringdir
  2729  0DD1  00CA               	movwf	??_scale+4
  2730  0DD2  084A               	movf	??_scale+4,w
  2731  0DD3  00AB               	movwf	___flmul@b+3
  2732  0DD4  0849               	movf	??_scale+3,w
  2733  0DD5  00AA               	movwf	___flmul@b+2
  2734  0DD6  0848               	movf	??_scale+2,w
  2735  0DD7  00A9               	movwf	___flmul@b+1
  2736  0DD8  0847               	movf	??_scale+1,w
  2737  0DD9  00A8               	movwf	___flmul@b
  2738  0DDA  300A               	movlw	10
  2739  0DDB  00A0               	movwf	___awdiv@divisor
  2740  0DDC  3000               	movlw	0
  2741  0DDD  00A1               	movwf	___awdiv@divisor+1
  2742  0DDE  0854               	movf	scale@scl,w
  2743  0DDF  00A2               	movwf	___awdiv@dividend
  2744  0DE0  01A3               	clrf	___awdiv@dividend+1
  2745  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2746  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2747  0DE3  160A  158A  271B  120A  158A  	fcall	___awdiv
  2748  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2749  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2750  0DEA  0820               	movf	?___awdiv,w
  2751  0DEB  00CB               	movwf	??_scale+5
  2752  0DEC  3001               	movlw	1
  2753  0DED                     u4245:
  2754  0DED  1003               	clrc
  2755  0DEE  0DCB               	rlf	??_scale+5,f
  2756  0DEF  3EFF               	addlw	-1
  2757  0DF0  1D03               	skipz
  2758  0DF1  2DED               	goto	u4245
  2759  0DF2  1003               	clrc
  2760  0DF3  0D4B               	rlf	??_scale+5,w
  2761  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2762  0DF5  0084               	movwf	4
  2763  0DF6  160A  158A  2000  120A  158A  	fcall	stringdir
  2764  0DFB  00CC               	movwf	??_scale+6
  2765  0DFC  160A  158A  2000  120A  158A  	fcall	stringdir
  2766  0E01  00CD               	movwf	??_scale+7
  2767  0E02  160A  158A  2000  120A  158A  	fcall	stringdir
  2768  0E07  00CE               	movwf	??_scale+8
  2769  0E08  160A  158A  2000  120A  158A  	fcall	stringdir
  2770  0E0D  00CF               	movwf	??_scale+9
  2771  0E0E  084F               	movf	??_scale+9,w
  2772  0E0F  00AF               	movwf	___flmul@a+3
  2773  0E10  084E               	movf	??_scale+8,w
  2774  0E11  00AE               	movwf	___flmul@a+2
  2775  0E12  084D               	movf	??_scale+7,w
  2776  0E13  00AD               	movwf	___flmul@a+1
  2777  0E14  084C               	movf	??_scale+6,w
  2778  0E15  00AC               	movwf	___flmul@a
  2779  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2780  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0E1D  082B               	movf	?___flmul+3,w
  2783  0E1E  00C5               	movwf	?_scale+3
  2784  0E1F  082A               	movf	?___flmul+2,w
  2785  0E20  00C4               	movwf	?_scale+2
  2786  0E21  0829               	movf	?___flmul+1,w
  2787  0E22  00C3               	movwf	?_scale+1
  2788  0E23  0828               	movf	?___flmul,w
  2789  0E24  00C2               	movwf	?_scale
  2790  0E25  2FFF               	goto	l294
  2791  0E26                     l2850:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2794  0E26  0854               	movf	scale@scl,w
  2795  0E27  00C6               	movwf	??_scale
  2796  0E28  3001               	movlw	1
  2797  0E29                     u4255:
  2798  0E29  1003               	clrc
  2799  0E2A  0DC6               	rlf	??_scale,f
  2800  0E2B  3EFF               	addlw	-1
  2801  0E2C  1D03               	skipz
  2802  0E2D  2E29               	goto	u4255
  2803  0E2E  1003               	clrc
  2804  0E2F  0D46               	rlf	??_scale,w
  2805  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2806  0E31  0084               	movwf	4
  2807  0E32  160A  158A  2000  120A  158A  	fcall	stringdir
  2808  0E37  00C7               	movwf	??_scale+1
  2809  0E38  160A  158A  2000  120A  158A  	fcall	stringdir
  2810  0E3D  00C8               	movwf	??_scale+2
  2811  0E3E  160A  158A  2000  120A  158A  	fcall	stringdir
  2812  0E43  00C9               	movwf	??_scale+3
  2813  0E44  160A  158A  2000  120A  158A  	fcall	stringdir
  2814  0E49  00CA               	movwf	??_scale+4
  2815  0E4A  084A               	movf	??_scale+4,w
  2816  0E4B  00C5               	movwf	?_scale+3
  2817  0E4C  0849               	movf	??_scale+3,w
  2818  0E4D  00C4               	movwf	?_scale+2
  2819  0E4E  0848               	movf	??_scale+2,w
  2820  0E4F  00C3               	movwf	?_scale+1
  2821  0E50  0847               	movf	??_scale+1,w
  2822  0E51  00C2               	movwf	?_scale
  2823  0E52  2FFF               	goto	l294
  2824  0E53                     l2854:
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2827  0E53  0854               	movf	scale@scl,w
  2828  0E54  3A80               	xorlw	128
  2829  0E55  3E12               	addlw	-238
  2830  0E56  1C03               	skipc
  2831  0E57  2E59               	goto	u4261
  2832  0E58  2E5A               	goto	u4260
  2833  0E59                     u4261:
  2834  0E59  2F44               	goto	l2862
  2835  0E5A                     u4260:
  2836  0E5A                     l2856:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2839  0E5A  300A               	movlw	10
  2840  0E5B  00A0               	movwf	___awdiv@divisor
  2841  0E5C  3000               	movlw	0
  2842  0E5D  00A1               	movwf	___awdiv@divisor+1
  2843  0E5E  0854               	movf	scale@scl,w
  2844  0E5F  00F4               	movwf	___awmod@dividend
  2845  0E60  01F5               	clrf	___awmod@dividend+1
  2846  0E61  1BF4               	btfsc	___awmod@dividend,7
  2847  0E62  03F5               	decf	___awmod@dividend+1,f
  2848  0E63  3064               	movlw	100
  2849  0E64  00F2               	movwf	___awmod@divisor
  2850  0E65  3000               	movlw	0
  2851  0E66  00F3               	movwf	___awmod@divisor+1
  2852  0E67  160A  158A  265A  120A  158A  	fcall	___awmod
  2853  0E6C  0873               	movf	?___awmod+1,w
  2854  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2855  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2856  0E6F  00A3               	movwf	___awdiv@dividend+1
  2857  0E70  0872               	movf	?___awmod,w
  2858  0E71  00A2               	movwf	___awdiv@dividend
  2859  0E72  160A  158A  271B  120A  158A  	fcall	___awdiv
  2860  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2862  0E79  0820               	movf	?___awdiv,w
  2863  0E7A  00C6               	movwf	??_scale
  2864  0E7B  3001               	movlw	1
  2865  0E7C                     u4275:
  2866  0E7C  1003               	clrc
  2867  0E7D  0DC6               	rlf	??_scale,f
  2868  0E7E  3EFF               	addlw	-1
  2869  0E7F  1D03               	skipz
  2870  0E80  2E7C               	goto	u4275
  2871  0E81  1003               	clrc
  2872  0E82  0D46               	rlf	??_scale,w
  2873  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2874  0E84  0084               	movwf	4
  2875  0E85  160A  158A  2000  120A  158A  	fcall	stringdir
  2876  0E8A  00C7               	movwf	??_scale+1
  2877  0E8B  160A  158A  2000  120A  158A  	fcall	stringdir
  2878  0E90  00C8               	movwf	??_scale+2
  2879  0E91  160A  158A  2000  120A  158A  	fcall	stringdir
  2880  0E96  00C9               	movwf	??_scale+3
  2881  0E97  160A  158A  2000  120A  158A  	fcall	stringdir
  2882  0E9C  00CA               	movwf	??_scale+4
  2883  0E9D  084A               	movf	??_scale+4,w
  2884  0E9E  00AB               	movwf	___flmul@b+3
  2885  0E9F  0849               	movf	??_scale+3,w
  2886  0EA0  00AA               	movwf	___flmul@b+2
  2887  0EA1  0848               	movf	??_scale+2,w
  2888  0EA2  00A9               	movwf	___flmul@b+1
  2889  0EA3  0847               	movf	??_scale+1,w
  2890  0EA4  00A8               	movwf	___flmul@b
  2891  0EA5  3064               	movlw	100
  2892  0EA6  00A0               	movwf	___awdiv@divisor
  2893  0EA7  3000               	movlw	0
  2894  0EA8  00A1               	movwf	___awdiv@divisor+1
  2895  0EA9  0854               	movf	scale@scl,w
  2896  0EAA  00A2               	movwf	___awdiv@dividend
  2897  0EAB  01A3               	clrf	___awdiv@dividend+1
  2898  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2899  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2900  0EAE  160A  158A  271B  120A  158A  	fcall	___awdiv
  2901  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2903  0EB5  0820               	movf	?___awdiv,w
  2904  0EB6  00CB               	movwf	??_scale+5
  2905  0EB7  3001               	movlw	1
  2906  0EB8                     u4285:
  2907  0EB8  1003               	clrc
  2908  0EB9  0DCB               	rlf	??_scale+5,f
  2909  0EBA  3EFF               	addlw	-1
  2910  0EBB  1D03               	skipz
  2911  0EBC  2EB8               	goto	u4285
  2912  0EBD  1003               	clrc
  2913  0EBE  0D4B               	rlf	??_scale+5,w
  2914  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2915  0EC0  0084               	movwf	4
  2916  0EC1  160A  158A  2000  120A  158A  	fcall	stringdir
  2917  0EC6  00CC               	movwf	??_scale+6
  2918  0EC7  160A  158A  2000  120A  158A  	fcall	stringdir
  2919  0ECC  00CD               	movwf	??_scale+7
  2920  0ECD  160A  158A  2000  120A  158A  	fcall	stringdir
  2921  0ED2  00CE               	movwf	??_scale+8
  2922  0ED3  160A  158A  2000  120A  158A  	fcall	stringdir
  2923  0ED8  00CF               	movwf	??_scale+9
  2924  0ED9  084F               	movf	??_scale+9,w
  2925  0EDA  00AF               	movwf	___flmul@a+3
  2926  0EDB  084E               	movf	??_scale+8,w
  2927  0EDC  00AE               	movwf	___flmul@a+2
  2928  0EDD  084D               	movf	??_scale+7,w
  2929  0EDE  00AD               	movwf	___flmul@a+1
  2930  0EDF  084C               	movf	??_scale+6,w
  2931  0EE0  00AC               	movwf	___flmul@a
  2932  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2933  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0EE8  082B               	movf	?___flmul+3,w
  2936  0EE9  00D3               	movwf	_scale$1129+3
  2937  0EEA  082A               	movf	?___flmul+2,w
  2938  0EEB  00D2               	movwf	_scale$1129+2
  2939  0EEC  0829               	movf	?___flmul+1,w
  2940  0EED  00D1               	movwf	_scale$1129+1
  2941  0EEE  0828               	movf	?___flmul,w
  2942  0EEF  00D0               	movwf	_scale$1129
  2943                           
  2944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2945  0EF0  300A               	movlw	10
  2946  0EF1  00F2               	movwf	___awmod@divisor
  2947  0EF2  3000               	movlw	0
  2948  0EF3  00F3               	movwf	___awmod@divisor+1
  2949  0EF4  0854               	movf	scale@scl,w
  2950  0EF5  00F4               	movwf	___awmod@dividend
  2951  0EF6  01F5               	clrf	___awmod@dividend+1
  2952  0EF7  1BF4               	btfsc	___awmod@dividend,7
  2953  0EF8  03F5               	decf	___awmod@dividend+1,f
  2954  0EF9  160A  158A  265A  120A  158A  	fcall	___awmod
  2955  0EFE  0872               	movf	?___awmod,w
  2956  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2957  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2958  0F01  00C6               	movwf	??_scale
  2959  0F02  3001               	movlw	1
  2960  0F03                     u4295:
  2961  0F03  1003               	clrc
  2962  0F04  0DC6               	rlf	??_scale,f
  2963  0F05  3EFF               	addlw	-1
  2964  0F06  1D03               	skipz
  2965  0F07  2F03               	goto	u4295
  2966  0F08  1003               	clrc
  2967  0F09  0D46               	rlf	??_scale,w
  2968  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2969  0F0B  0084               	movwf	4
  2970  0F0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2971  0F11  00C7               	movwf	??_scale+1
  2972  0F12  160A  158A  2000  120A  158A  	fcall	stringdir
  2973  0F17  00C8               	movwf	??_scale+2
  2974  0F18  160A  158A  2000  120A  158A  	fcall	stringdir
  2975  0F1D  00C9               	movwf	??_scale+3
  2976  0F1E  160A  158A  2000  120A  158A  	fcall	stringdir
  2977  0F23  00CA               	movwf	??_scale+4
  2978  0F24  084A               	movf	??_scale+4,w
  2979  0F25  00AB               	movwf	___flmul@b+3
  2980  0F26  0849               	movf	??_scale+3,w
  2981  0F27  00AA               	movwf	___flmul@b+2
  2982  0F28  0848               	movf	??_scale+2,w
  2983  0F29  00A9               	movwf	___flmul@b+1
  2984  0F2A  0847               	movf	??_scale+1,w
  2985  0F2B  00A8               	movwf	___flmul@b
  2986  0F2C  0853               	movf	_scale$1129+3,w
  2987  0F2D  00AF               	movwf	___flmul@a+3
  2988  0F2E  0852               	movf	_scale$1129+2,w
  2989  0F2F  00AE               	movwf	___flmul@a+2
  2990  0F30  0851               	movf	_scale$1129+1,w
  2991  0F31  00AD               	movwf	___flmul@a+1
  2992  0F32  0850               	movf	_scale$1129,w
  2993  0F33  00AC               	movwf	___flmul@a
  2994  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2995  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2996  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2997  0F3B  082B               	movf	?___flmul+3,w
  2998  0F3C  00C5               	movwf	?_scale+3
  2999  0F3D  082A               	movf	?___flmul+2,w
  3000  0F3E  00C4               	movwf	?_scale+2
  3001  0F3F  0829               	movf	?___flmul+1,w
  3002  0F40  00C3               	movwf	?_scale+1
  3003  0F41  0828               	movf	?___flmul,w
  3004  0F42  00C2               	movwf	?_scale
  3005  0F43  2FFF               	goto	l294
  3006  0F44                     l2862:
  3007  0F44  0854               	movf	scale@scl,w
  3008  0F45  3A80               	xorlw	128
  3009  0F46  3E75               	addlw	-139
  3010  0F47  1C03               	skipc
  3011  0F48  2F4A               	goto	u4301
  3012  0F49  2F4B               	goto	u4300
  3013  0F4A                     u4301:
  3014  0F4A  2FD3               	goto	l2868
  3015  0F4B                     u4300:
  3016  0F4B                     l2864:
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3019  0F4B  300A               	movlw	10
  3020  0F4C  00F2               	movwf	___awmod@divisor
  3021  0F4D  3000               	movlw	0
  3022  0F4E  00F3               	movwf	___awmod@divisor+1
  3023  0F4F  0854               	movf	scale@scl,w
  3024  0F50  00F4               	movwf	___awmod@dividend
  3025  0F51  01F5               	clrf	___awmod@dividend+1
  3026  0F52  1BF4               	btfsc	___awmod@dividend,7
  3027  0F53  03F5               	decf	___awmod@dividend+1,f
  3028  0F54  160A  158A  265A  120A  158A  	fcall	___awmod
  3029  0F59  0872               	movf	?___awmod,w
  3030  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3032  0F5C  00C6               	movwf	??_scale
  3033  0F5D  3001               	movlw	1
  3034  0F5E                     u4315:
  3035  0F5E  1003               	clrc
  3036  0F5F  0DC6               	rlf	??_scale,f
  3037  0F60  3EFF               	addlw	-1
  3038  0F61  1D03               	skipz
  3039  0F62  2F5E               	goto	u4315
  3040  0F63  1003               	clrc
  3041  0F64  0D46               	rlf	??_scale,w
  3042  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3043  0F66  0084               	movwf	4
  3044  0F67  160A  158A  2000  120A  158A  	fcall	stringdir
  3045  0F6C  00C7               	movwf	??_scale+1
  3046  0F6D  160A  158A  2000  120A  158A  	fcall	stringdir
  3047  0F72  00C8               	movwf	??_scale+2
  3048  0F73  160A  158A  2000  120A  158A  	fcall	stringdir
  3049  0F78  00C9               	movwf	??_scale+3
  3050  0F79  160A  158A  2000  120A  158A  	fcall	stringdir
  3051  0F7E  00CA               	movwf	??_scale+4
  3052  0F7F  084A               	movf	??_scale+4,w
  3053  0F80  00AB               	movwf	___flmul@b+3
  3054  0F81  0849               	movf	??_scale+3,w
  3055  0F82  00AA               	movwf	___flmul@b+2
  3056  0F83  0848               	movf	??_scale+2,w
  3057  0F84  00A9               	movwf	___flmul@b+1
  3058  0F85  0847               	movf	??_scale+1,w
  3059  0F86  00A8               	movwf	___flmul@b
  3060  0F87  300A               	movlw	10
  3061  0F88  00A0               	movwf	___awdiv@divisor
  3062  0F89  3000               	movlw	0
  3063  0F8A  00A1               	movwf	___awdiv@divisor+1
  3064  0F8B  0854               	movf	scale@scl,w
  3065  0F8C  00A2               	movwf	___awdiv@dividend
  3066  0F8D  01A3               	clrf	___awdiv@dividend+1
  3067  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3068  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3069  0F90  160A  158A  271B  120A  158A  	fcall	___awdiv
  3070  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0F97  0820               	movf	?___awdiv,w
  3073  0F98  00CB               	movwf	??_scale+5
  3074  0F99  3001               	movlw	1
  3075  0F9A                     u4325:
  3076  0F9A  1003               	clrc
  3077  0F9B  0DCB               	rlf	??_scale+5,f
  3078  0F9C  3EFF               	addlw	-1
  3079  0F9D  1D03               	skipz
  3080  0F9E  2F9A               	goto	u4325
  3081  0F9F  1003               	clrc
  3082  0FA0  0D4B               	rlf	??_scale+5,w
  3083  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3084  0FA2  0084               	movwf	4
  3085  0FA3  160A  158A  2000  120A  158A  	fcall	stringdir
  3086  0FA8  00CC               	movwf	??_scale+6
  3087  0FA9  160A  158A  2000  120A  158A  	fcall	stringdir
  3088  0FAE  00CD               	movwf	??_scale+7
  3089  0FAF  160A  158A  2000  120A  158A  	fcall	stringdir
  3090  0FB4  00CE               	movwf	??_scale+8
  3091  0FB5  160A  158A  2000  120A  158A  	fcall	stringdir
  3092  0FBA  00CF               	movwf	??_scale+9
  3093  0FBB  084F               	movf	??_scale+9,w
  3094  0FBC  00AF               	movwf	___flmul@a+3
  3095  0FBD  084E               	movf	??_scale+8,w
  3096  0FBE  00AE               	movwf	___flmul@a+2
  3097  0FBF  084D               	movf	??_scale+7,w
  3098  0FC0  00AD               	movwf	___flmul@a+1
  3099  0FC1  084C               	movf	??_scale+6,w
  3100  0FC2  00AC               	movwf	___flmul@a
  3101  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3102  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3103  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3104  0FCA  082B               	movf	?___flmul+3,w
  3105  0FCB  00C5               	movwf	?_scale+3
  3106  0FCC  082A               	movf	?___flmul+2,w
  3107  0FCD  00C4               	movwf	?_scale+2
  3108  0FCE  0829               	movf	?___flmul+1,w
  3109  0FCF  00C3               	movwf	?_scale+1
  3110  0FD0  0828               	movf	?___flmul,w
  3111  0FD1  00C2               	movwf	?_scale
  3112  0FD2  2FFF               	goto	l294
  3113  0FD3                     l2868:
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3116  0FD3  0854               	movf	scale@scl,w
  3117  0FD4  00C6               	movwf	??_scale
  3118  0FD5  3001               	movlw	1
  3119  0FD6                     u4335:
  3120  0FD6  1003               	clrc
  3121  0FD7  0DC6               	rlf	??_scale,f
  3122  0FD8  3EFF               	addlw	-1
  3123  0FD9  1D03               	skipz
  3124  0FDA  2FD6               	goto	u4335
  3125  0FDB  1003               	clrc
  3126  0FDC  0D46               	rlf	??_scale,w
  3127  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3128  0FDE  0084               	movwf	4
  3129  0FDF  160A  158A  2000  120A  158A  	fcall	stringdir
  3130  0FE4  00C7               	movwf	??_scale+1
  3131  0FE5  160A  158A  2000  120A  158A  	fcall	stringdir
  3132  0FEA  00C8               	movwf	??_scale+2
  3133  0FEB  160A  158A  2000  120A  158A  	fcall	stringdir
  3134  0FF0  00C9               	movwf	??_scale+3
  3135  0FF1  160A  158A  2000  120A  158A  	fcall	stringdir
  3136  0FF6  00CA               	movwf	??_scale+4
  3137  0FF7  084A               	movf	??_scale+4,w
  3138  0FF8  00C5               	movwf	?_scale+3
  3139  0FF9  0849               	movf	??_scale+3,w
  3140  0FFA  00C4               	movwf	?_scale+2
  3141  0FFB  0848               	movf	??_scale+2,w
  3142  0FFC  00C3               	movwf	?_scale+1
  3143  0FFD  0847               	movf	??_scale+1,w
  3144  0FFE  00C2               	movwf	?_scale
  3145  0FFF                     l294:
  3146  0FFF  0008               	return
  3147  1000                     __end_of_scale:
  3148                           
  3149                           	psect	text3
  3150  1E5A                     __ptext3:	
  3151 ;; *************** function ___awmod *****************
  3152 ;; Defined at:
  3153 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  divisor         2    2[COMMON] int 
  3156 ;;  dividend        2    4[COMMON] int 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  sign            1    8[COMMON] unsigned char 
  3159 ;;  counter         1    7[COMMON] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2    2[COMMON] int 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         4       0       0       0       0
  3170 ;;      Locals:         2       0       0       0       0
  3171 ;;      Temps:          1       0       0       0       0
  3172 ;;      Totals:         7       0       0       0       0
  3173 ;;Total ram usage:        7 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    1
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_scale
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           
  3184                           ;psect for function ___awmod
  3185  1E5A                     ___awmod:
  3186  1E5A                     l2390:	
  3187                           ;incstack = 0
  3188                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3189                           
  3190  1E5A  01F8               	clrf	___awmod@sign
  3191  1E5B                     l2392:
  3192  1E5B  1FF5               	btfss	___awmod@dividend+1,7
  3193  1E5C  2E5E               	goto	u3031
  3194  1E5D  2E5F               	goto	u3030
  3195  1E5E                     u3031:
  3196  1E5E  2E66               	goto	l2398
  3197  1E5F                     u3030:
  3198  1E5F                     l2394:
  3199  1E5F  09F4               	comf	___awmod@dividend,f
  3200  1E60  09F5               	comf	___awmod@dividend+1,f
  3201  1E61  0AF4               	incf	___awmod@dividend,f
  3202  1E62  1903               	skipnz
  3203  1E63  0AF5               	incf	___awmod@dividend+1,f
  3204  1E64                     l2396:
  3205  1E64  01F8               	clrf	___awmod@sign
  3206  1E65  0AF8               	incf	___awmod@sign,f
  3207  1E66                     l2398:
  3208  1E66  1FF3               	btfss	___awmod@divisor+1,7
  3209  1E67  2E69               	goto	u3041
  3210  1E68  2E6A               	goto	u3040
  3211  1E69                     u3041:
  3212  1E69  2E6F               	goto	l2402
  3213  1E6A                     u3040:
  3214  1E6A                     l2400:
  3215  1E6A  09F2               	comf	___awmod@divisor,f
  3216  1E6B  09F3               	comf	___awmod@divisor+1,f
  3217  1E6C  0AF2               	incf	___awmod@divisor,f
  3218  1E6D  1903               	skipnz
  3219  1E6E  0AF3               	incf	___awmod@divisor+1,f
  3220  1E6F                     l2402:
  3221  1E6F  0872               	movf	___awmod@divisor,w
  3222  1E70  0473               	iorwf	___awmod@divisor+1,w
  3223  1E71  1903               	btfsc	3,2
  3224  1E72  2E74               	goto	u3051
  3225  1E73  2E75               	goto	u3050
  3226  1E74                     u3051:
  3227  1E74  2EA4               	goto	l2420
  3228  1E75                     u3050:
  3229  1E75                     l2404:
  3230  1E75  01F7               	clrf	___awmod@counter
  3231  1E76  0AF7               	incf	___awmod@counter,f
  3232  1E77  2E83               	goto	l2410
  3233  1E78                     l2406:
  3234  1E78  3001               	movlw	1
  3235  1E79                     u3065:
  3236  1E79  1003               	clrc
  3237  1E7A  0DF2               	rlf	___awmod@divisor,f
  3238  1E7B  0DF3               	rlf	___awmod@divisor+1,f
  3239  1E7C  3EFF               	addlw	-1
  3240  1E7D  1D03               	skipz
  3241  1E7E  2E79               	goto	u3065
  3242  1E7F                     l2408:
  3243  1E7F  3001               	movlw	1
  3244  1E80  00F6               	movwf	??___awmod
  3245  1E81  0876               	movf	??___awmod,w
  3246  1E82  07F7               	addwf	___awmod@counter,f
  3247  1E83                     l2410:
  3248  1E83  1FF3               	btfss	___awmod@divisor+1,7
  3249  1E84  2E86               	goto	u3071
  3250  1E85  2E87               	goto	u3070
  3251  1E86                     u3071:
  3252  1E86  2E78               	goto	l2406
  3253  1E87                     u3070:
  3254  1E87                     l2412:
  3255  1E87  0873               	movf	___awmod@divisor+1,w
  3256  1E88  0275               	subwf	___awmod@dividend+1,w
  3257  1E89  1D03               	skipz
  3258  1E8A  2E8D               	goto	u3085
  3259  1E8B  0872               	movf	___awmod@divisor,w
  3260  1E8C  0274               	subwf	___awmod@dividend,w
  3261  1E8D                     u3085:
  3262  1E8D  1C03               	skipc
  3263  1E8E  2E90               	goto	u3081
  3264  1E8F  2E91               	goto	u3080
  3265  1E90                     u3081:
  3266  1E90  2E97               	goto	l2416
  3267  1E91                     u3080:
  3268  1E91                     l2414:
  3269  1E91  0872               	movf	___awmod@divisor,w
  3270  1E92  02F4               	subwf	___awmod@dividend,f
  3271  1E93  0873               	movf	___awmod@divisor+1,w
  3272  1E94  1C03               	skipc
  3273  1E95  03F5               	decf	___awmod@dividend+1,f
  3274  1E96  02F5               	subwf	___awmod@dividend+1,f
  3275  1E97                     l2416:
  3276  1E97  3001               	movlw	1
  3277  1E98                     u3095:
  3278  1E98  1003               	clrc
  3279  1E99  0CF3               	rrf	___awmod@divisor+1,f
  3280  1E9A  0CF2               	rrf	___awmod@divisor,f
  3281  1E9B  3EFF               	addlw	-1
  3282  1E9C  1D03               	skipz
  3283  1E9D  2E98               	goto	u3095
  3284  1E9E                     l2418:
  3285  1E9E  3001               	movlw	1
  3286  1E9F  02F7               	subwf	___awmod@counter,f
  3287  1EA0  1D03               	btfss	3,2
  3288  1EA1  2EA3               	goto	u3101
  3289  1EA2  2EA4               	goto	u3100
  3290  1EA3                     u3101:
  3291  1EA3  2E87               	goto	l2412
  3292  1EA4                     u3100:
  3293  1EA4                     l2420:
  3294  1EA4  0878               	movf	___awmod@sign,w
  3295  1EA5  1903               	btfsc	3,2
  3296  1EA6  2EA8               	goto	u3111
  3297  1EA7  2EA9               	goto	u3110
  3298  1EA8                     u3111:
  3299  1EA8  2EAE               	goto	l2424
  3300  1EA9                     u3110:
  3301  1EA9                     l2422:
  3302  1EA9  09F4               	comf	___awmod@dividend,f
  3303  1EAA  09F5               	comf	___awmod@dividend+1,f
  3304  1EAB  0AF4               	incf	___awmod@dividend,f
  3305  1EAC  1903               	skipnz
  3306  1EAD  0AF5               	incf	___awmod@dividend+1,f
  3307  1EAE                     l2424:
  3308  1EAE  0875               	movf	___awmod@dividend+1,w
  3309  1EAF  00F3               	movwf	?___awmod+1
  3310  1EB0  0874               	movf	___awmod@dividend,w
  3311  1EB1  00F2               	movwf	?___awmod
  3312  1EB2                     l565:
  3313  1EB2  0008               	return
  3314  1EB3                     __end_of___awmod:
  3315                           
  3316                           	psect	text4
  3317  1F1B                     __ptext4:	
  3318 ;; *************** function ___awdiv *****************
  3319 ;; Defined at:
  3320 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  divisor         2    0[BANK0 ] int 
  3323 ;;  dividend        2    2[BANK0 ] int 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  quotient        2    6[BANK0 ] int 
  3326 ;;  sign            1    5[BANK0 ] unsigned char 
  3327 ;;  counter         1    4[BANK0 ] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  2    0[BANK0 ] int 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         0       4       0       0       0
  3338 ;;      Locals:         0       4       0       0       0
  3339 ;;      Temps:          1       0       0       0       0
  3340 ;;      Totals:         1       8       0       0       0
  3341 ;;Total ram usage:        9 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;;		_scale
  3349 ;;		_sprintf
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           
  3354                           ;psect for function ___awdiv
  3355  1F1B                     ___awdiv:
  3356  1F1B                     l2346:	
  3357                           ;incstack = 0
  3358                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3359                           
  3360  1F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3361  1F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3362  1F1D  01A5               	clrf	___awdiv@sign
  3363  1F1E                     l2348:
  3364  1F1E  1FA1               	btfss	___awdiv@divisor+1,7
  3365  1F1F  2F21               	goto	u2931
  3366  1F20  2F22               	goto	u2930
  3367  1F21                     u2931:
  3368  1F21  2F29               	goto	l2354
  3369  1F22                     u2930:
  3370  1F22                     l2350:
  3371  1F22  09A0               	comf	___awdiv@divisor,f
  3372  1F23  09A1               	comf	___awdiv@divisor+1,f
  3373  1F24  0AA0               	incf	___awdiv@divisor,f
  3374  1F25  1903               	skipnz
  3375  1F26  0AA1               	incf	___awdiv@divisor+1,f
  3376  1F27                     l2352:
  3377  1F27  01A5               	clrf	___awdiv@sign
  3378  1F28  0AA5               	incf	___awdiv@sign,f
  3379  1F29                     l2354:
  3380  1F29  1FA3               	btfss	___awdiv@dividend+1,7
  3381  1F2A  2F2C               	goto	u2941
  3382  1F2B  2F2D               	goto	u2940
  3383  1F2C                     u2941:
  3384  1F2C  2F36               	goto	l2360
  3385  1F2D                     u2940:
  3386  1F2D                     l2356:
  3387  1F2D  09A2               	comf	___awdiv@dividend,f
  3388  1F2E  09A3               	comf	___awdiv@dividend+1,f
  3389  1F2F  0AA2               	incf	___awdiv@dividend,f
  3390  1F30  1903               	skipnz
  3391  1F31  0AA3               	incf	___awdiv@dividend+1,f
  3392  1F32                     l2358:
  3393  1F32  3001               	movlw	1
  3394  1F33  00F9               	movwf	??___awdiv
  3395  1F34  0879               	movf	??___awdiv,w
  3396  1F35  06A5               	xorwf	___awdiv@sign,f
  3397  1F36                     l2360:
  3398  1F36  01A6               	clrf	___awdiv@quotient
  3399  1F37  01A7               	clrf	___awdiv@quotient+1
  3400  1F38                     l2362:
  3401  1F38  0820               	movf	___awdiv@divisor,w
  3402  1F39  0421               	iorwf	___awdiv@divisor+1,w
  3403  1F3A  1903               	btfsc	3,2
  3404  1F3B  2F3D               	goto	u2951
  3405  1F3C  2F3E               	goto	u2950
  3406  1F3D                     u2951:
  3407  1F3D  2F75               	goto	l2382
  3408  1F3E                     u2950:
  3409  1F3E                     l2364:
  3410  1F3E  01A4               	clrf	___awdiv@counter
  3411  1F3F  0AA4               	incf	___awdiv@counter,f
  3412  1F40  2F4C               	goto	l2370
  3413  1F41                     l2366:
  3414  1F41  3001               	movlw	1
  3415  1F42                     u2965:
  3416  1F42  1003               	clrc
  3417  1F43  0DA0               	rlf	___awdiv@divisor,f
  3418  1F44  0DA1               	rlf	___awdiv@divisor+1,f
  3419  1F45  3EFF               	addlw	-1
  3420  1F46  1D03               	skipz
  3421  1F47  2F42               	goto	u2965
  3422  1F48                     l2368:
  3423  1F48  3001               	movlw	1
  3424  1F49  00F9               	movwf	??___awdiv
  3425  1F4A  0879               	movf	??___awdiv,w
  3426  1F4B  07A4               	addwf	___awdiv@counter,f
  3427  1F4C                     l2370:
  3428  1F4C  1FA1               	btfss	___awdiv@divisor+1,7
  3429  1F4D  2F4F               	goto	u2971
  3430  1F4E  2F50               	goto	u2970
  3431  1F4F                     u2971:
  3432  1F4F  2F41               	goto	l2366
  3433  1F50                     u2970:
  3434  1F50                     l2372:
  3435  1F50  3001               	movlw	1
  3436  1F51                     u2985:
  3437  1F51  1003               	clrc
  3438  1F52  0DA6               	rlf	___awdiv@quotient,f
  3439  1F53  0DA7               	rlf	___awdiv@quotient+1,f
  3440  1F54  3EFF               	addlw	-1
  3441  1F55  1D03               	skipz
  3442  1F56  2F51               	goto	u2985
  3443  1F57  0821               	movf	___awdiv@divisor+1,w
  3444  1F58  0223               	subwf	___awdiv@dividend+1,w
  3445  1F59  1D03               	skipz
  3446  1F5A  2F5D               	goto	u2995
  3447  1F5B  0820               	movf	___awdiv@divisor,w
  3448  1F5C  0222               	subwf	___awdiv@dividend,w
  3449  1F5D                     u2995:
  3450  1F5D  1C03               	skipc
  3451  1F5E  2F60               	goto	u2991
  3452  1F5F  2F61               	goto	u2990
  3453  1F60                     u2991:
  3454  1F60  2F68               	goto	l2378
  3455  1F61                     u2990:
  3456  1F61                     l2374:
  3457  1F61  0820               	movf	___awdiv@divisor,w
  3458  1F62  02A2               	subwf	___awdiv@dividend,f
  3459  1F63  0821               	movf	___awdiv@divisor+1,w
  3460  1F64  1C03               	skipc
  3461  1F65  03A3               	decf	___awdiv@dividend+1,f
  3462  1F66  02A3               	subwf	___awdiv@dividend+1,f
  3463  1F67                     l2376:
  3464  1F67  1426               	bsf	___awdiv@quotient,0
  3465  1F68                     l2378:
  3466  1F68  3001               	movlw	1
  3467  1F69                     u3005:
  3468  1F69  1003               	clrc
  3469  1F6A  0CA1               	rrf	___awdiv@divisor+1,f
  3470  1F6B  0CA0               	rrf	___awdiv@divisor,f
  3471  1F6C  3EFF               	addlw	-1
  3472  1F6D  1D03               	skipz
  3473  1F6E  2F69               	goto	u3005
  3474  1F6F                     l2380:
  3475  1F6F  3001               	movlw	1
  3476  1F70  02A4               	subwf	___awdiv@counter,f
  3477  1F71  1D03               	btfss	3,2
  3478  1F72  2F74               	goto	u3011
  3479  1F73  2F75               	goto	u3010
  3480  1F74                     u3011:
  3481  1F74  2F50               	goto	l2372
  3482  1F75                     u3010:
  3483  1F75                     l2382:
  3484  1F75  0825               	movf	___awdiv@sign,w
  3485  1F76  1903               	btfsc	3,2
  3486  1F77  2F79               	goto	u3021
  3487  1F78  2F7A               	goto	u3020
  3488  1F79                     u3021:
  3489  1F79  2F7F               	goto	l2386
  3490  1F7A                     u3020:
  3491  1F7A                     l2384:
  3492  1F7A  09A6               	comf	___awdiv@quotient,f
  3493  1F7B  09A7               	comf	___awdiv@quotient+1,f
  3494  1F7C  0AA6               	incf	___awdiv@quotient,f
  3495  1F7D  1903               	skipnz
  3496  1F7E  0AA7               	incf	___awdiv@quotient+1,f
  3497  1F7F                     l2386:
  3498  1F7F  0827               	movf	___awdiv@quotient+1,w
  3499  1F80  00A1               	movwf	?___awdiv+1
  3500  1F81  0826               	movf	___awdiv@quotient,w
  3501  1F82  00A0               	movwf	?___awdiv
  3502  1F83                     l552:
  3503  1F83  0008               	return
  3504  1F84                     __end_of___awdiv:
  3505                           
  3506                           	psect	text5
  3507  1CB0                     __ptext5:	
  3508 ;; *************** function _isdigit *****************
  3509 ;; Defined at:
  3510 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  c               1    wreg     unsigned char 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  c               1    3[COMMON] unsigned char 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;		None               void
  3517 ;; Registers used:
  3518 ;;		wreg, status,2, status,0
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3524 ;;      Params:         0       0       0       0       0
  3525 ;;      Locals:         2       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0
  3527 ;;      Totals:         2       0       0       0       0
  3528 ;;Total ram usage:        2 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    1
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_sprintf
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           
  3539                           ;psect for function _isdigit
  3540  1CB0                     _isdigit:
  3541                           
  3542                           ;incstack = 0
  3543                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3544                           ;isdigit@c stored from wreg
  3545  1CB0  00F3               	movwf	isdigit@c
  3546  1CB1                     l2872:
  3547  1CB1  01F2               	clrf	_isdigit$932
  3548  1CB2                     l2874:
  3549  1CB2  303A               	movlw	58
  3550  1CB3  0273               	subwf	isdigit@c,w
  3551  1CB4  1803               	skipnc
  3552  1CB5  2CB7               	goto	u4341
  3553  1CB6  2CB8               	goto	u4340
  3554  1CB7                     u4341:
  3555  1CB7  2CC0               	goto	l2880
  3556  1CB8                     u4340:
  3557  1CB8                     l2876:
  3558  1CB8  3030               	movlw	48
  3559  1CB9  0273               	subwf	isdigit@c,w
  3560  1CBA  1C03               	skipc
  3561  1CBB  2CBD               	goto	u4351
  3562  1CBC  2CBE               	goto	u4350
  3563  1CBD                     u4351:
  3564  1CBD  2CC0               	goto	l2880
  3565  1CBE                     u4350:
  3566  1CBE                     l2878:
  3567  1CBE  01F2               	clrf	_isdigit$932
  3568  1CBF  0AF2               	incf	_isdigit$932,f
  3569  1CC0                     l2880:
  3570  1CC0  0C72               	rrf	_isdigit$932,w
  3571  1CC1                     l886:
  3572  1CC1  0008               	return
  3573  1CC2                     __end_of_isdigit:
  3574                           
  3575                           	psect	text6
  3576  12F2                     __ptext6:	
  3577 ;; *************** function _fround *****************
  3578 ;; Defined at:
  3579 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  prec            1    wreg     unsigned char 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  prec            1   53[BANK0 ] unsigned char 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  4   34[BANK0 ] unsigned char 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3593 ;;      Params:         0       4       0       0       0
  3594 ;;      Locals:         0       9       0       0       0
  3595 ;;      Temps:          0       7       0       0       0
  3596 ;;      Totals:         0      20       0       0       0
  3597 ;;Total ram usage:       20 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    3
  3600 ;; This function calls:
  3601 ;;		___flmul
  3602 ;;		___lwdiv
  3603 ;;		___lwmod
  3604 ;; This function is called by:
  3605 ;;		_sprintf
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           
  3610                           ;psect for function _fround
  3611  12F2                     _fround:
  3612                           
  3613                           ;incstack = 0
  3614                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3615                           ;fround@prec stored from wreg
  3616  12F2  1283               	bcf	3,5	;RP0=0, select bank0
  3617  12F3  1303               	bcf	3,6	;RP1=0, select bank0
  3618  12F4  00D5               	movwf	fround@prec
  3619  12F5                     l2814:
  3620                           
  3621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3622  12F5  306E               	movlw	110
  3623  12F6  0255               	subwf	fround@prec,w
  3624  12F7  1C03               	skipc
  3625  12F8  2AFA               	goto	u4091
  3626  12F9  2AFB               	goto	u4090
  3627  12FA                     u4091:
  3628  12FA  2C08               	goto	l2822
  3629  12FB                     u4090:
  3630  12FB                     l2816:
  3631                           
  3632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3633  12FB  303F               	movlw	63
  3634  12FC  00AB               	movwf	___flmul@b+3
  3635  12FD  3000               	movlw	0
  3636  12FE  00AA               	movwf	___flmul@b+2
  3637  12FF  3000               	movlw	0
  3638  1300  00A9               	movwf	___flmul@b+1
  3639  1301  3000               	movlw	0
  3640  1302  00A8               	movwf	___flmul@b
  3641  1303  3064               	movlw	100
  3642  1304  00F8               	movwf	___lwdiv@divisor
  3643  1305  3000               	movlw	0
  3644  1306  00F9               	movwf	___lwdiv@divisor+1
  3645  1307  0855               	movf	fround@prec,w
  3646  1308  00C6               	movwf	??_fround
  3647  1309  01C7               	clrf	??_fround+1
  3648  130A  0846               	movf	??_fround,w
  3649  130B  00FA               	movwf	___lwdiv@dividend
  3650  130C  0847               	movf	??_fround+1,w
  3651  130D  00FB               	movwf	___lwdiv@dividend+1
  3652  130E  120A  158A  2004  160A  118A  	fcall	___lwdiv
  3653  1313  0878               	movf	?___lwdiv,w
  3654  1314  1283               	bcf	3,5	;RP0=0, select bank0
  3655  1315  1303               	bcf	3,6	;RP1=0, select bank0
  3656  1316  00C8               	movwf	??_fround+2
  3657  1317  3001               	movlw	1
  3658  1318                     u4105:
  3659  1318  1003               	clrc
  3660  1319  0DC8               	rlf	??_fround+2,f
  3661  131A  3EFF               	addlw	-1
  3662  131B  1D03               	skipz
  3663  131C  2B18               	goto	u4105
  3664  131D  1003               	clrc
  3665  131E  0D48               	rlf	??_fround+2,w
  3666  131F  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3667  1320  0084               	movwf	4
  3668  1321  160A  158A  2000  160A  118A  	fcall	stringdir
  3669  1326  00C9               	movwf	??_fround+3
  3670  1327  160A  158A  2000  160A  118A  	fcall	stringdir
  3671  132C  00CA               	movwf	??_fround+4
  3672  132D  160A  158A  2000  160A  118A  	fcall	stringdir
  3673  1332  00CB               	movwf	??_fround+5
  3674  1333  160A  158A  2000  160A  118A  	fcall	stringdir
  3675  1338  00CC               	movwf	??_fround+6
  3676  1339  084C               	movf	??_fround+6,w
  3677  133A  00AF               	movwf	___flmul@a+3
  3678  133B  084B               	movf	??_fround+5,w
  3679  133C  00AE               	movwf	___flmul@a+2
  3680  133D  084A               	movf	??_fround+4,w
  3681  133E  00AD               	movwf	___flmul@a+1
  3682  133F  0849               	movf	??_fround+3,w
  3683  1340  00AC               	movwf	___flmul@a
  3684  1341  120A  158A  213C  160A  118A  	fcall	___flmul
  3685  1346  1283               	bcf	3,5	;RP0=0, select bank0
  3686  1347  1303               	bcf	3,6	;RP1=0, select bank0
  3687  1348  082B               	movf	?___flmul+3,w
  3688  1349  00D4               	movwf	_fround$1127+3
  3689  134A  082A               	movf	?___flmul+2,w
  3690  134B  00D3               	movwf	_fround$1127+2
  3691  134C  0829               	movf	?___flmul+1,w
  3692  134D  00D2               	movwf	_fround$1127+1
  3693  134E  0828               	movf	?___flmul,w
  3694  134F  00D1               	movwf	_fround$1127
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3697  1350  300A               	movlw	10
  3698  1351  00F8               	movwf	___lwdiv@divisor
  3699  1352  3000               	movlw	0
  3700  1353  00F9               	movwf	___lwdiv@divisor+1
  3701  1354  0855               	movf	fround@prec,w
  3702  1355  00C6               	movwf	??_fround
  3703  1356  01C7               	clrf	??_fround+1
  3704  1357  0846               	movf	??_fround,w
  3705  1358  00F4               	movwf	___lwmod@dividend
  3706  1359  0847               	movf	??_fround+1,w
  3707  135A  00F5               	movwf	___lwmod@dividend+1
  3708  135B  3064               	movlw	100
  3709  135C  00F2               	movwf	___lwmod@divisor
  3710  135D  3000               	movlw	0
  3711  135E  00F3               	movwf	___lwmod@divisor+1
  3712  135F  160A  158A  252C  160A  118A  	fcall	___lwmod
  3713  1364  0873               	movf	?___lwmod+1,w
  3714  1365  00FB               	movwf	___lwdiv@dividend+1
  3715  1366  0872               	movf	?___lwmod,w
  3716  1367  00FA               	movwf	___lwdiv@dividend
  3717  1368  120A  158A  2004  160A  118A  	fcall	___lwdiv
  3718  136D  0878               	movf	?___lwdiv,w
  3719  136E  1283               	bcf	3,5	;RP0=0, select bank0
  3720  136F  1303               	bcf	3,6	;RP1=0, select bank0
  3721  1370  00C8               	movwf	??_fround+2
  3722  1371  3001               	movlw	1
  3723  1372                     u4115:
  3724  1372  1003               	clrc
  3725  1373  0DC8               	rlf	??_fround+2,f
  3726  1374  3EFF               	addlw	-1
  3727  1375  1D03               	skipz
  3728  1376  2B72               	goto	u4115
  3729  1377  1003               	clrc
  3730  1378  0D48               	rlf	??_fround+2,w
  3731  1379  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3732  137A  0084               	movwf	4
  3733  137B  160A  158A  2000  160A  118A  	fcall	stringdir
  3734  1380  00C9               	movwf	??_fround+3
  3735  1381  160A  158A  2000  160A  118A  	fcall	stringdir
  3736  1386  00CA               	movwf	??_fround+4
  3737  1387  160A  158A  2000  160A  118A  	fcall	stringdir
  3738  138C  00CB               	movwf	??_fround+5
  3739  138D  160A  158A  2000  160A  118A  	fcall	stringdir
  3740  1392  00CC               	movwf	??_fround+6
  3741  1393  084C               	movf	??_fround+6,w
  3742  1394  00AB               	movwf	___flmul@b+3
  3743  1395  084B               	movf	??_fround+5,w
  3744  1396  00AA               	movwf	___flmul@b+2
  3745  1397  084A               	movf	??_fround+4,w
  3746  1398  00A9               	movwf	___flmul@b+1
  3747  1399  0849               	movf	??_fround+3,w
  3748  139A  00A8               	movwf	___flmul@b
  3749  139B  0854               	movf	_fround$1127+3,w
  3750  139C  00AF               	movwf	___flmul@a+3
  3751  139D  0853               	movf	_fround$1127+2,w
  3752  139E  00AE               	movwf	___flmul@a+2
  3753  139F  0852               	movf	_fround$1127+1,w
  3754  13A0  00AD               	movwf	___flmul@a+1
  3755  13A1  0851               	movf	_fround$1127,w
  3756  13A2  00AC               	movwf	___flmul@a
  3757  13A3  120A  158A  213C  160A  118A  	fcall	___flmul
  3758  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  3759  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  3760  13AA  082B               	movf	?___flmul+3,w
  3761  13AB  00D0               	movwf	_fround$1128+3
  3762  13AC  082A               	movf	?___flmul+2,w
  3763  13AD  00CF               	movwf	_fround$1128+2
  3764  13AE  0829               	movf	?___flmul+1,w
  3765  13AF  00CE               	movwf	_fround$1128+1
  3766  13B0  0828               	movf	?___flmul,w
  3767  13B1  00CD               	movwf	_fround$1128
  3768                           
  3769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3770  13B2  300A               	movlw	10
  3771  13B3  00F2               	movwf	___lwmod@divisor
  3772  13B4  3000               	movlw	0
  3773  13B5  00F3               	movwf	___lwmod@divisor+1
  3774  13B6  0855               	movf	fround@prec,w
  3775  13B7  00C6               	movwf	??_fround
  3776  13B8  01C7               	clrf	??_fround+1
  3777  13B9  0846               	movf	??_fround,w
  3778  13BA  00F4               	movwf	___lwmod@dividend
  3779  13BB  0847               	movf	??_fround+1,w
  3780  13BC  00F5               	movwf	___lwmod@dividend+1
  3781  13BD  160A  158A  252C  160A  118A  	fcall	___lwmod
  3782  13C2  0872               	movf	?___lwmod,w
  3783  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  3784  13C4  1303               	bcf	3,6	;RP1=0, select bank0
  3785  13C5  00C8               	movwf	??_fround+2
  3786  13C6  3001               	movlw	1
  3787  13C7                     u4125:
  3788  13C7  1003               	clrc
  3789  13C8  0DC8               	rlf	??_fround+2,f
  3790  13C9  3EFF               	addlw	-1
  3791  13CA  1D03               	skipz
  3792  13CB  2BC7               	goto	u4125
  3793  13CC  1003               	clrc
  3794  13CD  0D48               	rlf	??_fround+2,w
  3795  13CE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3796  13CF  0084               	movwf	4
  3797  13D0  160A  158A  2000  160A  118A  	fcall	stringdir
  3798  13D5  00C9               	movwf	??_fround+3
  3799  13D6  160A  158A  2000  160A  118A  	fcall	stringdir
  3800  13DB  00CA               	movwf	??_fround+4
  3801  13DC  160A  158A  2000  160A  118A  	fcall	stringdir
  3802  13E1  00CB               	movwf	??_fround+5
  3803  13E2  160A  158A  2000  160A  118A  	fcall	stringdir
  3804  13E7  00CC               	movwf	??_fround+6
  3805  13E8  084C               	movf	??_fround+6,w
  3806  13E9  00AB               	movwf	___flmul@b+3
  3807  13EA  084B               	movf	??_fround+5,w
  3808  13EB  00AA               	movwf	___flmul@b+2
  3809  13EC  084A               	movf	??_fround+4,w
  3810  13ED  00A9               	movwf	___flmul@b+1
  3811  13EE  0849               	movf	??_fround+3,w
  3812  13EF  00A8               	movwf	___flmul@b
  3813  13F0  0850               	movf	_fround$1128+3,w
  3814  13F1  00AF               	movwf	___flmul@a+3
  3815  13F2  084F               	movf	_fround$1128+2,w
  3816  13F3  00AE               	movwf	___flmul@a+2
  3817  13F4  084E               	movf	_fround$1128+1,w
  3818  13F5  00AD               	movwf	___flmul@a+1
  3819  13F6  084D               	movf	_fround$1128,w
  3820  13F7  00AC               	movwf	___flmul@a
  3821  13F8  120A  158A  213C  160A  118A  	fcall	___flmul
  3822  13FD  1283               	bcf	3,5	;RP0=0, select bank0
  3823  13FE  1303               	bcf	3,6	;RP1=0, select bank0
  3824  13FF  082B               	movf	?___flmul+3,w
  3825  1400  00C5               	movwf	?_fround+3
  3826  1401  082A               	movf	?___flmul+2,w
  3827  1402  00C4               	movwf	?_fround+2
  3828  1403  0829               	movf	?___flmul+1,w
  3829  1404  00C3               	movwf	?_fround+1
  3830  1405  0828               	movf	?___flmul,w
  3831  1406  00C2               	movwf	?_fround
  3832  1407  2CFC               	goto	l287
  3833  1408                     l2822:
  3834  1408  300B               	movlw	11
  3835  1409  0255               	subwf	fround@prec,w
  3836  140A  1C03               	skipc
  3837  140B  2C0D               	goto	u4131
  3838  140C  2C0E               	goto	u4130
  3839  140D                     u4131:
  3840  140D  2CB9               	goto	l2828
  3841  140E                     u4130:
  3842  140E                     l2824:
  3843                           
  3844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3845  140E  303F               	movlw	63
  3846  140F  00AB               	movwf	___flmul@b+3
  3847  1410  3000               	movlw	0
  3848  1411  00AA               	movwf	___flmul@b+2
  3849  1412  3000               	movlw	0
  3850  1413  00A9               	movwf	___flmul@b+1
  3851  1414  3000               	movlw	0
  3852  1415  00A8               	movwf	___flmul@b
  3853  1416  300A               	movlw	10
  3854  1417  00F8               	movwf	___lwdiv@divisor
  3855  1418  3000               	movlw	0
  3856  1419  00F9               	movwf	___lwdiv@divisor+1
  3857  141A  0855               	movf	fround@prec,w
  3858  141B  00C6               	movwf	??_fround
  3859  141C  01C7               	clrf	??_fround+1
  3860  141D  0846               	movf	??_fround,w
  3861  141E  00FA               	movwf	___lwdiv@dividend
  3862  141F  0847               	movf	??_fround+1,w
  3863  1420  00FB               	movwf	___lwdiv@dividend+1
  3864  1421  120A  158A  2004  160A  118A  	fcall	___lwdiv
  3865  1426  0878               	movf	?___lwdiv,w
  3866  1427  1283               	bcf	3,5	;RP0=0, select bank0
  3867  1428  1303               	bcf	3,6	;RP1=0, select bank0
  3868  1429  00C8               	movwf	??_fround+2
  3869  142A  3001               	movlw	1
  3870  142B                     u4145:
  3871  142B  1003               	clrc
  3872  142C  0DC8               	rlf	??_fround+2,f
  3873  142D  3EFF               	addlw	-1
  3874  142E  1D03               	skipz
  3875  142F  2C2B               	goto	u4145
  3876  1430  1003               	clrc
  3877  1431  0D48               	rlf	??_fround+2,w
  3878  1432  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3879  1433  0084               	movwf	4
  3880  1434  160A  158A  2000  160A  118A  	fcall	stringdir
  3881  1439  00C9               	movwf	??_fround+3
  3882  143A  160A  158A  2000  160A  118A  	fcall	stringdir
  3883  143F  00CA               	movwf	??_fround+4
  3884  1440  160A  158A  2000  160A  118A  	fcall	stringdir
  3885  1445  00CB               	movwf	??_fround+5
  3886  1446  160A  158A  2000  160A  118A  	fcall	stringdir
  3887  144B  00CC               	movwf	??_fround+6
  3888  144C  084C               	movf	??_fround+6,w
  3889  144D  00AF               	movwf	___flmul@a+3
  3890  144E  084B               	movf	??_fround+5,w
  3891  144F  00AE               	movwf	___flmul@a+2
  3892  1450  084A               	movf	??_fround+4,w
  3893  1451  00AD               	movwf	___flmul@a+1
  3894  1452  0849               	movf	??_fround+3,w
  3895  1453  00AC               	movwf	___flmul@a
  3896  1454  120A  158A  213C  160A  118A  	fcall	___flmul
  3897  1459  1283               	bcf	3,5	;RP0=0, select bank0
  3898  145A  1303               	bcf	3,6	;RP1=0, select bank0
  3899  145B  082B               	movf	?___flmul+3,w
  3900  145C  00D4               	movwf	_fround$1127+3
  3901  145D  082A               	movf	?___flmul+2,w
  3902  145E  00D3               	movwf	_fround$1127+2
  3903  145F  0829               	movf	?___flmul+1,w
  3904  1460  00D2               	movwf	_fround$1127+1
  3905  1461  0828               	movf	?___flmul,w
  3906  1462  00D1               	movwf	_fround$1127
  3907                           
  3908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3909  1463  300A               	movlw	10
  3910  1464  00F2               	movwf	___lwmod@divisor
  3911  1465  3000               	movlw	0
  3912  1466  00F3               	movwf	___lwmod@divisor+1
  3913  1467  0855               	movf	fround@prec,w
  3914  1468  00C6               	movwf	??_fround
  3915  1469  01C7               	clrf	??_fround+1
  3916  146A  0846               	movf	??_fround,w
  3917  146B  00F4               	movwf	___lwmod@dividend
  3918  146C  0847               	movf	??_fround+1,w
  3919  146D  00F5               	movwf	___lwmod@dividend+1
  3920  146E  160A  158A  252C  160A  118A  	fcall	___lwmod
  3921  1473  0872               	movf	?___lwmod,w
  3922  1474  1283               	bcf	3,5	;RP0=0, select bank0
  3923  1475  1303               	bcf	3,6	;RP1=0, select bank0
  3924  1476  00C8               	movwf	??_fround+2
  3925  1477  3001               	movlw	1
  3926  1478                     u4155:
  3927  1478  1003               	clrc
  3928  1479  0DC8               	rlf	??_fround+2,f
  3929  147A  3EFF               	addlw	-1
  3930  147B  1D03               	skipz
  3931  147C  2C78               	goto	u4155
  3932  147D  1003               	clrc
  3933  147E  0D48               	rlf	??_fround+2,w
  3934  147F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3935  1480  0084               	movwf	4
  3936  1481  160A  158A  2000  160A  118A  	fcall	stringdir
  3937  1486  00C9               	movwf	??_fround+3
  3938  1487  160A  158A  2000  160A  118A  	fcall	stringdir
  3939  148C  00CA               	movwf	??_fround+4
  3940  148D  160A  158A  2000  160A  118A  	fcall	stringdir
  3941  1492  00CB               	movwf	??_fround+5
  3942  1493  160A  158A  2000  160A  118A  	fcall	stringdir
  3943  1498  00CC               	movwf	??_fround+6
  3944  1499  084C               	movf	??_fround+6,w
  3945  149A  00AB               	movwf	___flmul@b+3
  3946  149B  084B               	movf	??_fround+5,w
  3947  149C  00AA               	movwf	___flmul@b+2
  3948  149D  084A               	movf	??_fround+4,w
  3949  149E  00A9               	movwf	___flmul@b+1
  3950  149F  0849               	movf	??_fround+3,w
  3951  14A0  00A8               	movwf	___flmul@b
  3952  14A1  0854               	movf	_fround$1127+3,w
  3953  14A2  00AF               	movwf	___flmul@a+3
  3954  14A3  0853               	movf	_fround$1127+2,w
  3955  14A4  00AE               	movwf	___flmul@a+2
  3956  14A5  0852               	movf	_fround$1127+1,w
  3957  14A6  00AD               	movwf	___flmul@a+1
  3958  14A7  0851               	movf	_fround$1127,w
  3959  14A8  00AC               	movwf	___flmul@a
  3960  14A9  120A  158A  213C  160A  118A  	fcall	___flmul
  3961  14AE  1283               	bcf	3,5	;RP0=0, select bank0
  3962  14AF  1303               	bcf	3,6	;RP1=0, select bank0
  3963  14B0  082B               	movf	?___flmul+3,w
  3964  14B1  00C5               	movwf	?_fround+3
  3965  14B2  082A               	movf	?___flmul+2,w
  3966  14B3  00C4               	movwf	?_fround+2
  3967  14B4  0829               	movf	?___flmul+1,w
  3968  14B5  00C3               	movwf	?_fround+1
  3969  14B6  0828               	movf	?___flmul,w
  3970  14B7  00C2               	movwf	?_fround
  3971  14B8  2CFC               	goto	l287
  3972  14B9                     l2828:
  3973                           
  3974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3975  14B9  303F               	movlw	63
  3976  14BA  00AB               	movwf	___flmul@b+3
  3977  14BB  3000               	movlw	0
  3978  14BC  00AA               	movwf	___flmul@b+2
  3979  14BD  3000               	movlw	0
  3980  14BE  00A9               	movwf	___flmul@b+1
  3981  14BF  3000               	movlw	0
  3982  14C0  00A8               	movwf	___flmul@b
  3983  14C1  0855               	movf	fround@prec,w
  3984  14C2  00C6               	movwf	??_fround
  3985  14C3  3001               	movlw	1
  3986  14C4                     u4165:
  3987  14C4  1003               	clrc
  3988  14C5  0DC6               	rlf	??_fround,f
  3989  14C6  3EFF               	addlw	-1
  3990  14C7  1D03               	skipz
  3991  14C8  2CC4               	goto	u4165
  3992  14C9  1003               	clrc
  3993  14CA  0D46               	rlf	??_fround,w
  3994  14CB  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3995  14CC  0084               	movwf	4
  3996  14CD  160A  158A  2000  160A  118A  	fcall	stringdir
  3997  14D2  00C7               	movwf	??_fround+1
  3998  14D3  160A  158A  2000  160A  118A  	fcall	stringdir
  3999  14D8  00C8               	movwf	??_fround+2
  4000  14D9  160A  158A  2000  160A  118A  	fcall	stringdir
  4001  14DE  00C9               	movwf	??_fround+3
  4002  14DF  160A  158A  2000  160A  118A  	fcall	stringdir
  4003  14E4  00CA               	movwf	??_fround+4
  4004  14E5  084A               	movf	??_fround+4,w
  4005  14E6  00AF               	movwf	___flmul@a+3
  4006  14E7  0849               	movf	??_fround+3,w
  4007  14E8  00AE               	movwf	___flmul@a+2
  4008  14E9  0848               	movf	??_fround+2,w
  4009  14EA  00AD               	movwf	___flmul@a+1
  4010  14EB  0847               	movf	??_fround+1,w
  4011  14EC  00AC               	movwf	___flmul@a
  4012  14ED  120A  158A  213C  160A  118A  	fcall	___flmul
  4013  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  4014  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  4015  14F4  082B               	movf	?___flmul+3,w
  4016  14F5  00C5               	movwf	?_fround+3
  4017  14F6  082A               	movf	?___flmul+2,w
  4018  14F7  00C4               	movwf	?_fround+2
  4019  14F8  0829               	movf	?___flmul+1,w
  4020  14F9  00C3               	movwf	?_fround+1
  4021  14FA  0828               	movf	?___flmul,w
  4022  14FB  00C2               	movwf	?_fround
  4023  14FC                     l287:
  4024  14FC  0008               	return
  4025  14FD                     __end_of_fround:
  4026                           
  4027                           	psect	text7
  4028  1D2C                     __ptext7:	
  4029 ;; *************** function ___lwmod *****************
  4030 ;; Defined at:
  4031 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  divisor         2    2[COMMON] unsigned int 
  4034 ;;  dividend        2    4[COMMON] unsigned int 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  counter         1    7[COMMON] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2    2[COMMON] unsigned int 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4046 ;;      Params:         4       0       0       0       0
  4047 ;;      Locals:         1       0       0       0       0
  4048 ;;      Temps:          1       0       0       0       0
  4049 ;;      Totals:         6       0       0       0       0
  4050 ;;Total ram usage:        6 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    1
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_fround
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function ___lwmod
  4062  1D2C                     ___lwmod:
  4063  1D2C                     l2454:	
  4064                           ;incstack = 0
  4065                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4066                           
  4067  1D2C  0872               	movf	___lwmod@divisor,w
  4068  1D2D  0473               	iorwf	___lwmod@divisor+1,w
  4069  1D2E  1903               	btfsc	3,2
  4070  1D2F  2D31               	goto	u3191
  4071  1D30  2D32               	goto	u3190
  4072  1D31                     u3191:
  4073  1D31  2D61               	goto	l2472
  4074  1D32                     u3190:
  4075  1D32                     l2456:
  4076  1D32  01F7               	clrf	___lwmod@counter
  4077  1D33  0AF7               	incf	___lwmod@counter,f
  4078  1D34  2D40               	goto	l2462
  4079  1D35                     l2458:
  4080  1D35  3001               	movlw	1
  4081  1D36                     u3205:
  4082  1D36  1003               	clrc
  4083  1D37  0DF2               	rlf	___lwmod@divisor,f
  4084  1D38  0DF3               	rlf	___lwmod@divisor+1,f
  4085  1D39  3EFF               	addlw	-1
  4086  1D3A  1D03               	skipz
  4087  1D3B  2D36               	goto	u3205
  4088  1D3C                     l2460:
  4089  1D3C  3001               	movlw	1
  4090  1D3D  00F6               	movwf	??___lwmod
  4091  1D3E  0876               	movf	??___lwmod,w
  4092  1D3F  07F7               	addwf	___lwmod@counter,f
  4093  1D40                     l2462:
  4094  1D40  1FF3               	btfss	___lwmod@divisor+1,7
  4095  1D41  2D43               	goto	u3211
  4096  1D42  2D44               	goto	u3210
  4097  1D43                     u3211:
  4098  1D43  2D35               	goto	l2458
  4099  1D44                     u3210:
  4100  1D44                     l2464:
  4101  1D44  0873               	movf	___lwmod@divisor+1,w
  4102  1D45  0275               	subwf	___lwmod@dividend+1,w
  4103  1D46  1D03               	skipz
  4104  1D47  2D4A               	goto	u3225
  4105  1D48  0872               	movf	___lwmod@divisor,w
  4106  1D49  0274               	subwf	___lwmod@dividend,w
  4107  1D4A                     u3225:
  4108  1D4A  1C03               	skipc
  4109  1D4B  2D4D               	goto	u3221
  4110  1D4C  2D4E               	goto	u3220
  4111  1D4D                     u3221:
  4112  1D4D  2D54               	goto	l2468
  4113  1D4E                     u3220:
  4114  1D4E                     l2466:
  4115  1D4E  0872               	movf	___lwmod@divisor,w
  4116  1D4F  02F4               	subwf	___lwmod@dividend,f
  4117  1D50  0873               	movf	___lwmod@divisor+1,w
  4118  1D51  1C03               	skipc
  4119  1D52  03F5               	decf	___lwmod@dividend+1,f
  4120  1D53  02F5               	subwf	___lwmod@dividend+1,f
  4121  1D54                     l2468:
  4122  1D54  3001               	movlw	1
  4123  1D55                     u3235:
  4124  1D55  1003               	clrc
  4125  1D56  0CF3               	rrf	___lwmod@divisor+1,f
  4126  1D57  0CF2               	rrf	___lwmod@divisor,f
  4127  1D58  3EFF               	addlw	-1
  4128  1D59  1D03               	skipz
  4129  1D5A  2D55               	goto	u3235
  4130  1D5B                     l2470:
  4131  1D5B  3001               	movlw	1
  4132  1D5C  02F7               	subwf	___lwmod@counter,f
  4133  1D5D  1D03               	btfss	3,2
  4134  1D5E  2D60               	goto	u3241
  4135  1D5F  2D61               	goto	u3240
  4136  1D60                     u3241:
  4137  1D60  2D44               	goto	l2464
  4138  1D61                     u3240:
  4139  1D61                     l2472:
  4140  1D61  0875               	movf	___lwmod@dividend+1,w
  4141  1D62  00F3               	movwf	?___lwmod+1
  4142  1D63  0874               	movf	___lwmod@dividend,w
  4143  1D64  00F2               	movwf	?___lwmod
  4144  1D65                     l715:
  4145  1D65  0008               	return
  4146  1D66                     __end_of___lwmod:
  4147                           
  4148                           	psect	text8
  4149  0804                     __ptext8:	
  4150 ;; *************** function ___lwdiv *****************
  4151 ;; Defined at:
  4152 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  divisor         2    8[COMMON] unsigned int 
  4155 ;;  dividend        2   10[COMMON] unsigned int 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  quotient        2    1[BANK0 ] unsigned int 
  4158 ;;  counter         1    3[BANK0 ] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  2    8[COMMON] unsigned int 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4168 ;;      Params:         4       0       0       0       0
  4169 ;;      Locals:         0       3       0       0       0
  4170 ;;      Temps:          0       1       0       0       0
  4171 ;;      Totals:         4       4       0       0       0
  4172 ;;Total ram usage:        8 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    1
  4175 ;; This function calls:
  4176 ;;		Nothing
  4177 ;; This function is called by:
  4178 ;;		_fround
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           
  4183                           ;psect for function ___lwdiv
  4184  0804                     ___lwdiv:
  4185  0804                     l2428:	
  4186                           ;incstack = 0
  4187                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4188                           
  4189  0804  1283               	bcf	3,5	;RP0=0, select bank0
  4190  0805  1303               	bcf	3,6	;RP1=0, select bank0
  4191  0806  01A1               	clrf	___lwdiv@quotient
  4192  0807  01A2               	clrf	___lwdiv@quotient+1
  4193  0808                     l2430:
  4194  0808  0878               	movf	___lwdiv@divisor,w
  4195  0809  0479               	iorwf	___lwdiv@divisor+1,w
  4196  080A  1903               	btfsc	3,2
  4197  080B  280D               	goto	u3121
  4198  080C  280E               	goto	u3120
  4199  080D                     u3121:
  4200  080D  2845               	goto	l2450
  4201  080E                     u3120:
  4202  080E                     l2432:
  4203  080E  01A3               	clrf	___lwdiv@counter
  4204  080F  0AA3               	incf	___lwdiv@counter,f
  4205  0810  281C               	goto	l2438
  4206  0811                     l2434:
  4207  0811  3001               	movlw	1
  4208  0812                     u3135:
  4209  0812  1003               	clrc
  4210  0813  0DF8               	rlf	___lwdiv@divisor,f
  4211  0814  0DF9               	rlf	___lwdiv@divisor+1,f
  4212  0815  3EFF               	addlw	-1
  4213  0816  1D03               	skipz
  4214  0817  2812               	goto	u3135
  4215  0818                     l2436:
  4216  0818  3001               	movlw	1
  4217  0819  00A0               	movwf	??___lwdiv
  4218  081A  0820               	movf	??___lwdiv,w
  4219  081B  07A3               	addwf	___lwdiv@counter,f
  4220  081C                     l2438:
  4221  081C  1FF9               	btfss	___lwdiv@divisor+1,7
  4222  081D  281F               	goto	u3141
  4223  081E  2820               	goto	u3140
  4224  081F                     u3141:
  4225  081F  2811               	goto	l2434
  4226  0820                     u3140:
  4227  0820                     l2440:
  4228  0820  3001               	movlw	1
  4229  0821                     u3155:
  4230  0821  1003               	clrc
  4231  0822  0DA1               	rlf	___lwdiv@quotient,f
  4232  0823  0DA2               	rlf	___lwdiv@quotient+1,f
  4233  0824  3EFF               	addlw	-1
  4234  0825  1D03               	skipz
  4235  0826  2821               	goto	u3155
  4236  0827  0879               	movf	___lwdiv@divisor+1,w
  4237  0828  027B               	subwf	___lwdiv@dividend+1,w
  4238  0829  1D03               	skipz
  4239  082A  282D               	goto	u3165
  4240  082B  0878               	movf	___lwdiv@divisor,w
  4241  082C  027A               	subwf	___lwdiv@dividend,w
  4242  082D                     u3165:
  4243  082D  1C03               	skipc
  4244  082E  2830               	goto	u3161
  4245  082F  2831               	goto	u3160
  4246  0830                     u3161:
  4247  0830  2838               	goto	l2446
  4248  0831                     u3160:
  4249  0831                     l2442:
  4250  0831  0878               	movf	___lwdiv@divisor,w
  4251  0832  02FA               	subwf	___lwdiv@dividend,f
  4252  0833  0879               	movf	___lwdiv@divisor+1,w
  4253  0834  1C03               	skipc
  4254  0835  03FB               	decf	___lwdiv@dividend+1,f
  4255  0836  02FB               	subwf	___lwdiv@dividend+1,f
  4256  0837                     l2444:
  4257  0837  1421               	bsf	___lwdiv@quotient,0
  4258  0838                     l2446:
  4259  0838  3001               	movlw	1
  4260  0839                     u3175:
  4261  0839  1003               	clrc
  4262  083A  0CF9               	rrf	___lwdiv@divisor+1,f
  4263  083B  0CF8               	rrf	___lwdiv@divisor,f
  4264  083C  3EFF               	addlw	-1
  4265  083D  1D03               	skipz
  4266  083E  2839               	goto	u3175
  4267  083F                     l2448:
  4268  083F  3001               	movlw	1
  4269  0840  02A3               	subwf	___lwdiv@counter,f
  4270  0841  1D03               	btfss	3,2
  4271  0842  2844               	goto	u3181
  4272  0843  2845               	goto	u3180
  4273  0844                     u3181:
  4274  0844  2820               	goto	l2440
  4275  0845                     u3180:
  4276  0845                     l2450:
  4277  0845  0822               	movf	___lwdiv@quotient+1,w
  4278  0846  00F9               	movwf	?___lwdiv+1
  4279  0847  0821               	movf	___lwdiv@quotient,w
  4280  0848  00F8               	movwf	?___lwdiv
  4281  0849                     l705:
  4282  0849  0008               	return
  4283  084A                     __end_of___lwdiv:
  4284                           
  4285                           	psect	text9
  4286  093C                     __ptext9:	
  4287 ;; *************** function ___flmul *****************
  4288 ;; Defined at:
  4289 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  b               4    8[BANK0 ] unsigned int 
  4292 ;;  a               4   12[BANK0 ] unsigned int 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  prod            4   28[BANK0 ] struct .
  4295 ;;  grs             4   22[BANK0 ] unsigned long 
  4296 ;;  temp            2   32[BANK0 ] struct .
  4297 ;;  bexp            1   27[BANK0 ] unsigned char 
  4298 ;;  aexp            1   26[BANK0 ] unsigned char 
  4299 ;;  sign            1   21[BANK0 ] unsigned char 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  4    8[BANK0 ] unsigned char 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4309 ;;      Params:         0       8       0       0       0
  4310 ;;      Locals:         0      13       0       0       0
  4311 ;;      Temps:          0       5       0       0       0
  4312 ;;      Totals:         0      26       0       0       0
  4313 ;;Total ram usage:       26 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    2
  4316 ;; This function calls:
  4317 ;;		__Umul8_16
  4318 ;; This function is called by:
  4319 ;;		_fround
  4320 ;;		_scale
  4321 ;;		_sprintf
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           
  4326                           ;psect for function ___flmul
  4327  093C                     ___flmul:
  4328  093C                     l2670:	
  4329                           ;incstack = 0
  4330                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4331                           
  4332  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4333  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4334  093E  082B               	movf	___flmul@b+3,w
  4335  093F  3980               	andlw	128
  4336  0940  00B0               	movwf	??___flmul
  4337  0941  0830               	movf	??___flmul,w
  4338  0942  00B5               	movwf	___flmul@sign
  4339  0943                     l2672:
  4340  0943  082B               	movf	___flmul@b+3,w
  4341  0944  00B0               	movwf	??___flmul
  4342  0945  0730               	addwf	??___flmul,w
  4343  0946  00B1               	movwf	??___flmul+1
  4344  0947  0831               	movf	??___flmul+1,w
  4345  0948  00BB               	movwf	___flmul@bexp
  4346  0949                     l2674:
  4347  0949  1FAA               	btfss	___flmul@b+2,7
  4348  094A  294C               	goto	u3711
  4349  094B  294D               	goto	u3710
  4350  094C                     u3711:
  4351  094C  294E               	goto	l2678
  4352  094D                     u3710:
  4353  094D                     l2676:
  4354  094D  143B               	bsf	___flmul@bexp,0
  4355  094E                     l2678:
  4356  094E  083B               	movf	___flmul@bexp,w
  4357  094F  1903               	btfsc	3,2
  4358  0950  2952               	goto	u3721
  4359  0951  2953               	goto	u3720
  4360  0952                     u3721:
  4361  0952  2962               	goto	l2686
  4362  0953                     u3720:
  4363  0953                     l2680:
  4364  0953  0A3B               	incf	___flmul@bexp,w
  4365  0954  1D03               	btfss	3,2
  4366  0955  2957               	goto	u3731
  4367  0956  2958               	goto	u3730
  4368  0957                     u3731:
  4369  0957  2960               	goto	l2684
  4370  0958                     u3730:
  4371  0958                     l2682:
  4372  0958  3000               	movlw	0
  4373  0959  00AB               	movwf	___flmul@b+3
  4374  095A  3000               	movlw	0
  4375  095B  00AA               	movwf	___flmul@b+2
  4376  095C  3000               	movlw	0
  4377  095D  00A9               	movwf	___flmul@b+1
  4378  095E  3000               	movlw	0
  4379  095F  00A8               	movwf	___flmul@b
  4380  0960                     l2684:
  4381  0960  17AA               	bsf	___flmul@b+2,7
  4382  0961  296A               	goto	l2688
  4383  0962                     l2686:
  4384  0962  3000               	movlw	0
  4385  0963  00AB               	movwf	___flmul@b+3
  4386  0964  3000               	movlw	0
  4387  0965  00AA               	movwf	___flmul@b+2
  4388  0966  3000               	movlw	0
  4389  0967  00A9               	movwf	___flmul@b+1
  4390  0968  3000               	movlw	0
  4391  0969  00A8               	movwf	___flmul@b
  4392  096A                     l2688:
  4393  096A  082F               	movf	___flmul@a+3,w
  4394  096B  3980               	andlw	128
  4395  096C  00B0               	movwf	??___flmul
  4396  096D  0830               	movf	??___flmul,w
  4397  096E  06B5               	xorwf	___flmul@sign,f
  4398  096F                     l2690:
  4399  096F  082F               	movf	___flmul@a+3,w
  4400  0970  00B0               	movwf	??___flmul
  4401  0971  0730               	addwf	??___flmul,w
  4402  0972  00B1               	movwf	??___flmul+1
  4403  0973  0831               	movf	??___flmul+1,w
  4404  0974  00BA               	movwf	___flmul@aexp
  4405  0975                     l2692:
  4406  0975  1FAE               	btfss	___flmul@a+2,7
  4407  0976  2978               	goto	u3741
  4408  0977  2979               	goto	u3740
  4409  0978                     u3741:
  4410  0978  297A               	goto	l2696
  4411  0979                     u3740:
  4412  0979                     l2694:
  4413  0979  143A               	bsf	___flmul@aexp,0
  4414  097A                     l2696:
  4415  097A  083A               	movf	___flmul@aexp,w
  4416  097B  1903               	btfsc	3,2
  4417  097C  297E               	goto	u3751
  4418  097D  297F               	goto	u3750
  4419  097E                     u3751:
  4420  097E  298E               	goto	l2704
  4421  097F                     u3750:
  4422  097F                     l2698:
  4423  097F  0A3A               	incf	___flmul@aexp,w
  4424  0980  1D03               	btfss	3,2
  4425  0981  2983               	goto	u3761
  4426  0982  2984               	goto	u3760
  4427  0983                     u3761:
  4428  0983  298C               	goto	l2702
  4429  0984                     u3760:
  4430  0984                     l2700:
  4431  0984  3000               	movlw	0
  4432  0985  00AF               	movwf	___flmul@a+3
  4433  0986  3000               	movlw	0
  4434  0987  00AE               	movwf	___flmul@a+2
  4435  0988  3000               	movlw	0
  4436  0989  00AD               	movwf	___flmul@a+1
  4437  098A  3000               	movlw	0
  4438  098B  00AC               	movwf	___flmul@a
  4439  098C                     l2702:
  4440  098C  17AE               	bsf	___flmul@a+2,7
  4441  098D  2996               	goto	l2706
  4442  098E                     l2704:
  4443  098E  3000               	movlw	0
  4444  098F  00AF               	movwf	___flmul@a+3
  4445  0990  3000               	movlw	0
  4446  0991  00AE               	movwf	___flmul@a+2
  4447  0992  3000               	movlw	0
  4448  0993  00AD               	movwf	___flmul@a+1
  4449  0994  3000               	movlw	0
  4450  0995  00AC               	movwf	___flmul@a
  4451  0996                     l2706:
  4452  0996  083A               	movf	___flmul@aexp,w
  4453  0997  1903               	btfsc	3,2
  4454  0998  299A               	goto	u3771
  4455  0999  299B               	goto	u3770
  4456  099A                     u3771:
  4457  099A  29A0               	goto	l2710
  4458  099B                     u3770:
  4459  099B                     l2708:
  4460  099B  083B               	movf	___flmul@bexp,w
  4461  099C  1D03               	btfss	3,2
  4462  099D  299F               	goto	u3781
  4463  099E  29A0               	goto	u3780
  4464  099F                     u3781:
  4465  099F  29A9               	goto	l2714
  4466  09A0                     u3780:
  4467  09A0                     l2710:
  4468  09A0  3000               	movlw	0
  4469  09A1  00AB               	movwf	?___flmul+3
  4470  09A2  3000               	movlw	0
  4471  09A3  00AA               	movwf	?___flmul+2
  4472  09A4  3000               	movlw	0
  4473  09A5  00A9               	movwf	?___flmul+1
  4474  09A6  3000               	movlw	0
  4475  09A7  00A8               	movwf	?___flmul
  4476  09A8  2C9C               	goto	l822
  4477  09A9                     l2714:
  4478  09A9  0828               	movf	___flmul@b,w
  4479  09AA  00B0               	movwf	??___flmul
  4480  09AB  0830               	movf	??___flmul,w
  4481  09AC  00F2               	movwf	__Umul8_16@multiplicand
  4482  09AD  082E               	movf	___flmul@a+2,w
  4483  09AE  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4484  09B3  0873               	movf	?__Umul8_16+1,w
  4485  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4486  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4487  09B6  00C1               	movwf	___flmul@temp+1
  4488  09B7  0872               	movf	?__Umul8_16,w
  4489  09B8  00C0               	movwf	___flmul@temp
  4490  09B9                     l2716:
  4491  09B9  0840               	movf	___flmul@temp,w
  4492  09BA  00B0               	movwf	??___flmul
  4493  09BB  01B1               	clrf	??___flmul+1
  4494  09BC  01B2               	clrf	??___flmul+2
  4495  09BD  01B3               	clrf	??___flmul+3
  4496  09BE  0833               	movf	??___flmul+3,w
  4497  09BF  00B9               	movwf	___flmul@grs+3
  4498  09C0  0832               	movf	??___flmul+2,w
  4499  09C1  00B8               	movwf	___flmul@grs+2
  4500  09C2  0831               	movf	??___flmul+1,w
  4501  09C3  00B7               	movwf	___flmul@grs+1
  4502  09C4  0830               	movf	??___flmul,w
  4503  09C5  00B6               	movwf	___flmul@grs
  4504  09C6                     l2718:
  4505  09C6  0841               	movf	___flmul@temp+1,w
  4506  09C7  00B0               	movwf	??___flmul
  4507  09C8  01B1               	clrf	??___flmul+1
  4508  09C9  01B2               	clrf	??___flmul+2
  4509  09CA  01B3               	clrf	??___flmul+3
  4510  09CB  0833               	movf	??___flmul+3,w
  4511  09CC  00BF               	movwf	___flmul@prod+3
  4512  09CD  0832               	movf	??___flmul+2,w
  4513  09CE  00BE               	movwf	___flmul@prod+2
  4514  09CF  0831               	movf	??___flmul+1,w
  4515  09D0  00BD               	movwf	___flmul@prod+1
  4516  09D1  0830               	movf	??___flmul,w
  4517  09D2  00BC               	movwf	___flmul@prod
  4518  09D3  0829               	movf	___flmul@b+1,w
  4519  09D4  00B0               	movwf	??___flmul
  4520  09D5  0830               	movf	??___flmul,w
  4521  09D6  00F2               	movwf	__Umul8_16@multiplicand
  4522  09D7  082D               	movf	___flmul@a+1,w
  4523  09D8  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4524  09DD  0873               	movf	?__Umul8_16+1,w
  4525  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4526  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4527  09E0  00C1               	movwf	___flmul@temp+1
  4528  09E1  0872               	movf	?__Umul8_16,w
  4529  09E2  00C0               	movwf	___flmul@temp
  4530  09E3                     l2720:
  4531  09E3  0840               	movf	___flmul@temp,w
  4532  09E4  00B0               	movwf	??___flmul
  4533  09E5  01B1               	clrf	??___flmul+1
  4534  09E6  01B2               	clrf	??___flmul+2
  4535  09E7  01B3               	clrf	??___flmul+3
  4536  09E8  0830               	movf	??___flmul,w
  4537  09E9  07B6               	addwf	___flmul@grs,f
  4538  09EA  0831               	movf	??___flmul+1,w
  4539  09EB  1103               	clrz
  4540  09EC  1803               	skipnc
  4541  09ED  3E01               	addlw	1
  4542  09EE  1903               	skipnz
  4543  09EF  29F1               	goto	u3791
  4544  09F0  07B7               	addwf	___flmul@grs+1,f
  4545  09F1                     u3791:
  4546  09F1  0832               	movf	??___flmul+2,w
  4547  09F2  1103               	clrz
  4548  09F3  1803               	skipnc
  4549  09F4  3E01               	addlw	1
  4550  09F5  1903               	skipnz
  4551  09F6  29F8               	goto	u3792
  4552  09F7  07B8               	addwf	___flmul@grs+2,f
  4553  09F8                     u3792:
  4554  09F8  0833               	movf	??___flmul+3,w
  4555  09F9  1103               	clrz
  4556  09FA  1803               	skipnc
  4557  09FB  3E01               	addlw	1
  4558  09FC  1903               	skipnz
  4559  09FD  29FF               	goto	u3793
  4560  09FE  07B9               	addwf	___flmul@grs+3,f
  4561  09FF                     u3793:
  4562  09FF                     l2722:
  4563  09FF  0841               	movf	___flmul@temp+1,w
  4564  0A00  00B0               	movwf	??___flmul
  4565  0A01  01B1               	clrf	??___flmul+1
  4566  0A02  01B2               	clrf	??___flmul+2
  4567  0A03  01B3               	clrf	??___flmul+3
  4568  0A04  0830               	movf	??___flmul,w
  4569  0A05  07BC               	addwf	___flmul@prod,f
  4570  0A06  0831               	movf	??___flmul+1,w
  4571  0A07  1103               	clrz
  4572  0A08  1803               	skipnc
  4573  0A09  3E01               	addlw	1
  4574  0A0A  1903               	skipnz
  4575  0A0B  2A0D               	goto	u3801
  4576  0A0C  07BD               	addwf	___flmul@prod+1,f
  4577  0A0D                     u3801:
  4578  0A0D  0832               	movf	??___flmul+2,w
  4579  0A0E  1103               	clrz
  4580  0A0F  1803               	skipnc
  4581  0A10  3E01               	addlw	1
  4582  0A11  1903               	skipnz
  4583  0A12  2A14               	goto	u3802
  4584  0A13  07BE               	addwf	___flmul@prod+2,f
  4585  0A14                     u3802:
  4586  0A14  0833               	movf	??___flmul+3,w
  4587  0A15  1103               	clrz
  4588  0A16  1803               	skipnc
  4589  0A17  3E01               	addlw	1
  4590  0A18  1903               	skipnz
  4591  0A19  2A1B               	goto	u3803
  4592  0A1A  07BF               	addwf	___flmul@prod+3,f
  4593  0A1B                     u3803:
  4594  0A1B  082A               	movf	___flmul@b+2,w
  4595  0A1C  00B0               	movwf	??___flmul
  4596  0A1D  0830               	movf	??___flmul,w
  4597  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  4598  0A1F  082C               	movf	___flmul@a,w
  4599  0A20  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4600  0A25  0873               	movf	?__Umul8_16+1,w
  4601  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4602  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4603  0A28  00C1               	movwf	___flmul@temp+1
  4604  0A29  0872               	movf	?__Umul8_16,w
  4605  0A2A  00C0               	movwf	___flmul@temp
  4606  0A2B                     l2724:
  4607  0A2B  0840               	movf	___flmul@temp,w
  4608  0A2C  00B0               	movwf	??___flmul
  4609  0A2D  01B1               	clrf	??___flmul+1
  4610  0A2E  01B2               	clrf	??___flmul+2
  4611  0A2F  01B3               	clrf	??___flmul+3
  4612  0A30  0830               	movf	??___flmul,w
  4613  0A31  07B6               	addwf	___flmul@grs,f
  4614  0A32  0831               	movf	??___flmul+1,w
  4615  0A33  1103               	clrz
  4616  0A34  1803               	skipnc
  4617  0A35  3E01               	addlw	1
  4618  0A36  1903               	skipnz
  4619  0A37  2A39               	goto	u3811
  4620  0A38  07B7               	addwf	___flmul@grs+1,f
  4621  0A39                     u3811:
  4622  0A39  0832               	movf	??___flmul+2,w
  4623  0A3A  1103               	clrz
  4624  0A3B  1803               	skipnc
  4625  0A3C  3E01               	addlw	1
  4626  0A3D  1903               	skipnz
  4627  0A3E  2A40               	goto	u3812
  4628  0A3F  07B8               	addwf	___flmul@grs+2,f
  4629  0A40                     u3812:
  4630  0A40  0833               	movf	??___flmul+3,w
  4631  0A41  1103               	clrz
  4632  0A42  1803               	skipnc
  4633  0A43  3E01               	addlw	1
  4634  0A44  1903               	skipnz
  4635  0A45  2A47               	goto	u3813
  4636  0A46  07B9               	addwf	___flmul@grs+3,f
  4637  0A47                     u3813:
  4638  0A47                     l2726:
  4639  0A47  0841               	movf	___flmul@temp+1,w
  4640  0A48  00B0               	movwf	??___flmul
  4641  0A49  01B1               	clrf	??___flmul+1
  4642  0A4A  01B2               	clrf	??___flmul+2
  4643  0A4B  01B3               	clrf	??___flmul+3
  4644  0A4C  0830               	movf	??___flmul,w
  4645  0A4D  07BC               	addwf	___flmul@prod,f
  4646  0A4E  0831               	movf	??___flmul+1,w
  4647  0A4F  1103               	clrz
  4648  0A50  1803               	skipnc
  4649  0A51  3E01               	addlw	1
  4650  0A52  1903               	skipnz
  4651  0A53  2A55               	goto	u3821
  4652  0A54  07BD               	addwf	___flmul@prod+1,f
  4653  0A55                     u3821:
  4654  0A55  0832               	movf	??___flmul+2,w
  4655  0A56  1103               	clrz
  4656  0A57  1803               	skipnc
  4657  0A58  3E01               	addlw	1
  4658  0A59  1903               	skipnz
  4659  0A5A  2A5C               	goto	u3822
  4660  0A5B  07BE               	addwf	___flmul@prod+2,f
  4661  0A5C                     u3822:
  4662  0A5C  0833               	movf	??___flmul+3,w
  4663  0A5D  1103               	clrz
  4664  0A5E  1803               	skipnc
  4665  0A5F  3E01               	addlw	1
  4666  0A60  1903               	skipnz
  4667  0A61  2A63               	goto	u3823
  4668  0A62  07BF               	addwf	___flmul@prod+3,f
  4669  0A63                     u3823:
  4670  0A63                     l2728:
  4671  0A63  3008               	movlw	8
  4672  0A64  00B0               	movwf	??___flmul
  4673  0A65                     u3835:
  4674  0A65  1003               	clrc
  4675  0A66  0DB6               	rlf	___flmul@grs,f
  4676  0A67  0DB7               	rlf	___flmul@grs+1,f
  4677  0A68  0DB8               	rlf	___flmul@grs+2,f
  4678  0A69  0DB9               	rlf	___flmul@grs+3,f
  4679  0A6A  0BB0               	decfsz	??___flmul,f
  4680  0A6B  2A65               	goto	u3835
  4681  0A6C                     l2730:
  4682  0A6C  0829               	movf	___flmul@b+1,w
  4683  0A6D  00B0               	movwf	??___flmul
  4684  0A6E  0830               	movf	??___flmul,w
  4685  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  4686  0A70  082C               	movf	___flmul@a,w
  4687  0A71  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4688  0A76  0873               	movf	?__Umul8_16+1,w
  4689  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4690  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4691  0A79  00C1               	movwf	___flmul@temp+1
  4692  0A7A  0872               	movf	?__Umul8_16,w
  4693  0A7B  00C0               	movwf	___flmul@temp
  4694  0A7C                     l2732:
  4695  0A7C  0840               	movf	___flmul@temp,w
  4696  0A7D  00B0               	movwf	??___flmul
  4697  0A7E  0841               	movf	___flmul@temp+1,w
  4698  0A7F  00B1               	movwf	??___flmul+1
  4699  0A80  01B2               	clrf	??___flmul+2
  4700  0A81  01B3               	clrf	??___flmul+3
  4701  0A82  0830               	movf	??___flmul,w
  4702  0A83  07B6               	addwf	___flmul@grs,f
  4703  0A84  0831               	movf	??___flmul+1,w
  4704  0A85  1103               	clrz
  4705  0A86  1803               	skipnc
  4706  0A87  3E01               	addlw	1
  4707  0A88  1903               	skipnz
  4708  0A89  2A8B               	goto	u3841
  4709  0A8A  07B7               	addwf	___flmul@grs+1,f
  4710  0A8B                     u3841:
  4711  0A8B  0832               	movf	??___flmul+2,w
  4712  0A8C  1103               	clrz
  4713  0A8D  1803               	skipnc
  4714  0A8E  3E01               	addlw	1
  4715  0A8F  1903               	skipnz
  4716  0A90  2A92               	goto	u3842
  4717  0A91  07B8               	addwf	___flmul@grs+2,f
  4718  0A92                     u3842:
  4719  0A92  0833               	movf	??___flmul+3,w
  4720  0A93  1103               	clrz
  4721  0A94  1803               	skipnc
  4722  0A95  3E01               	addlw	1
  4723  0A96  1903               	skipnz
  4724  0A97  2A99               	goto	u3843
  4725  0A98  07B9               	addwf	___flmul@grs+3,f
  4726  0A99                     u3843:
  4727  0A99                     l2734:
  4728  0A99  0828               	movf	___flmul@b,w
  4729  0A9A  00B0               	movwf	??___flmul
  4730  0A9B  0830               	movf	??___flmul,w
  4731  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  4732  0A9D  082D               	movf	___flmul@a+1,w
  4733  0A9E  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4734  0AA3  0873               	movf	?__Umul8_16+1,w
  4735  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4736  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4737  0AA6  00C1               	movwf	___flmul@temp+1
  4738  0AA7  0872               	movf	?__Umul8_16,w
  4739  0AA8  00C0               	movwf	___flmul@temp
  4740  0AA9                     l2736:
  4741  0AA9  0840               	movf	___flmul@temp,w
  4742  0AAA  00B0               	movwf	??___flmul
  4743  0AAB  0841               	movf	___flmul@temp+1,w
  4744  0AAC  00B1               	movwf	??___flmul+1
  4745  0AAD  01B2               	clrf	??___flmul+2
  4746  0AAE  01B3               	clrf	??___flmul+3
  4747  0AAF  0830               	movf	??___flmul,w
  4748  0AB0  07B6               	addwf	___flmul@grs,f
  4749  0AB1  0831               	movf	??___flmul+1,w
  4750  0AB2  1103               	clrz
  4751  0AB3  1803               	skipnc
  4752  0AB4  3E01               	addlw	1
  4753  0AB5  1903               	skipnz
  4754  0AB6  2AB8               	goto	u3851
  4755  0AB7  07B7               	addwf	___flmul@grs+1,f
  4756  0AB8                     u3851:
  4757  0AB8  0832               	movf	??___flmul+2,w
  4758  0AB9  1103               	clrz
  4759  0ABA  1803               	skipnc
  4760  0ABB  3E01               	addlw	1
  4761  0ABC  1903               	skipnz
  4762  0ABD  2ABF               	goto	u3852
  4763  0ABE  07B8               	addwf	___flmul@grs+2,f
  4764  0ABF                     u3852:
  4765  0ABF  0833               	movf	??___flmul+3,w
  4766  0AC0  1103               	clrz
  4767  0AC1  1803               	skipnc
  4768  0AC2  3E01               	addlw	1
  4769  0AC3  1903               	skipnz
  4770  0AC4  2AC6               	goto	u3853
  4771  0AC5  07B9               	addwf	___flmul@grs+3,f
  4772  0AC6                     u3853:
  4773  0AC6                     l2738:
  4774  0AC6  3008               	movlw	8
  4775  0AC7  00B0               	movwf	??___flmul
  4776  0AC8                     u3865:
  4777  0AC8  1003               	clrc
  4778  0AC9  0DB6               	rlf	___flmul@grs,f
  4779  0ACA  0DB7               	rlf	___flmul@grs+1,f
  4780  0ACB  0DB8               	rlf	___flmul@grs+2,f
  4781  0ACC  0DB9               	rlf	___flmul@grs+3,f
  4782  0ACD  0BB0               	decfsz	??___flmul,f
  4783  0ACE  2AC8               	goto	u3865
  4784  0ACF  0828               	movf	___flmul@b,w
  4785  0AD0  00B0               	movwf	??___flmul
  4786  0AD1  0830               	movf	??___flmul,w
  4787  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  4788  0AD3  082C               	movf	___flmul@a,w
  4789  0AD4  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4790  0AD9  0873               	movf	?__Umul8_16+1,w
  4791  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4792  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4793  0ADC  00C1               	movwf	___flmul@temp+1
  4794  0ADD  0872               	movf	?__Umul8_16,w
  4795  0ADE  00C0               	movwf	___flmul@temp
  4796  0ADF                     l2740:
  4797  0ADF  0840               	movf	___flmul@temp,w
  4798  0AE0  00B0               	movwf	??___flmul
  4799  0AE1  0841               	movf	___flmul@temp+1,w
  4800  0AE2  00B1               	movwf	??___flmul+1
  4801  0AE3  01B2               	clrf	??___flmul+2
  4802  0AE4  01B3               	clrf	??___flmul+3
  4803  0AE5  0830               	movf	??___flmul,w
  4804  0AE6  07B6               	addwf	___flmul@grs,f
  4805  0AE7  0831               	movf	??___flmul+1,w
  4806  0AE8  1103               	clrz
  4807  0AE9  1803               	skipnc
  4808  0AEA  3E01               	addlw	1
  4809  0AEB  1903               	skipnz
  4810  0AEC  2AEE               	goto	u3871
  4811  0AED  07B7               	addwf	___flmul@grs+1,f
  4812  0AEE                     u3871:
  4813  0AEE  0832               	movf	??___flmul+2,w
  4814  0AEF  1103               	clrz
  4815  0AF0  1803               	skipnc
  4816  0AF1  3E01               	addlw	1
  4817  0AF2  1903               	skipnz
  4818  0AF3  2AF5               	goto	u3872
  4819  0AF4  07B8               	addwf	___flmul@grs+2,f
  4820  0AF5                     u3872:
  4821  0AF5  0833               	movf	??___flmul+3,w
  4822  0AF6  1103               	clrz
  4823  0AF7  1803               	skipnc
  4824  0AF8  3E01               	addlw	1
  4825  0AF9  1903               	skipnz
  4826  0AFA  2AFC               	goto	u3873
  4827  0AFB  07B9               	addwf	___flmul@grs+3,f
  4828  0AFC                     u3873:
  4829  0AFC                     l2742:
  4830  0AFC  0829               	movf	___flmul@b+1,w
  4831  0AFD  00B0               	movwf	??___flmul
  4832  0AFE  0830               	movf	??___flmul,w
  4833  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  4834  0B00  082E               	movf	___flmul@a+2,w
  4835  0B01  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4836  0B06  0873               	movf	?__Umul8_16+1,w
  4837  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4838  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4839  0B09  00C1               	movwf	___flmul@temp+1
  4840  0B0A  0872               	movf	?__Umul8_16,w
  4841  0B0B  00C0               	movwf	___flmul@temp
  4842  0B0C  0840               	movf	___flmul@temp,w
  4843  0B0D  00B0               	movwf	??___flmul
  4844  0B0E  0841               	movf	___flmul@temp+1,w
  4845  0B0F  00B1               	movwf	??___flmul+1
  4846  0B10  01B2               	clrf	??___flmul+2
  4847  0B11  01B3               	clrf	??___flmul+3
  4848  0B12  0830               	movf	??___flmul,w
  4849  0B13  07BC               	addwf	___flmul@prod,f
  4850  0B14  0831               	movf	??___flmul+1,w
  4851  0B15  1103               	clrz
  4852  0B16  1803               	skipnc
  4853  0B17  3E01               	addlw	1
  4854  0B18  1903               	skipnz
  4855  0B19  2B1B               	goto	u3881
  4856  0B1A  07BD               	addwf	___flmul@prod+1,f
  4857  0B1B                     u3881:
  4858  0B1B  0832               	movf	??___flmul+2,w
  4859  0B1C  1103               	clrz
  4860  0B1D  1803               	skipnc
  4861  0B1E  3E01               	addlw	1
  4862  0B1F  1903               	skipnz
  4863  0B20  2B22               	goto	u3882
  4864  0B21  07BE               	addwf	___flmul@prod+2,f
  4865  0B22                     u3882:
  4866  0B22  0833               	movf	??___flmul+3,w
  4867  0B23  1103               	clrz
  4868  0B24  1803               	skipnc
  4869  0B25  3E01               	addlw	1
  4870  0B26  1903               	skipnz
  4871  0B27  2B29               	goto	u3883
  4872  0B28  07BF               	addwf	___flmul@prod+3,f
  4873  0B29                     u3883:
  4874  0B29                     l2744:
  4875  0B29  082A               	movf	___flmul@b+2,w
  4876  0B2A  00B0               	movwf	??___flmul
  4877  0B2B  0830               	movf	??___flmul,w
  4878  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  4879  0B2D  082D               	movf	___flmul@a+1,w
  4880  0B2E  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4881  0B33  0873               	movf	?__Umul8_16+1,w
  4882  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4883  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4884  0B36  00C1               	movwf	___flmul@temp+1
  4885  0B37  0872               	movf	?__Umul8_16,w
  4886  0B38  00C0               	movwf	___flmul@temp
  4887  0B39                     l2746:
  4888  0B39  0840               	movf	___flmul@temp,w
  4889  0B3A  00B0               	movwf	??___flmul
  4890  0B3B  0841               	movf	___flmul@temp+1,w
  4891  0B3C  00B1               	movwf	??___flmul+1
  4892  0B3D  01B2               	clrf	??___flmul+2
  4893  0B3E  01B3               	clrf	??___flmul+3
  4894  0B3F  0830               	movf	??___flmul,w
  4895  0B40  07BC               	addwf	___flmul@prod,f
  4896  0B41  0831               	movf	??___flmul+1,w
  4897  0B42  1103               	clrz
  4898  0B43  1803               	skipnc
  4899  0B44  3E01               	addlw	1
  4900  0B45  1903               	skipnz
  4901  0B46  2B48               	goto	u3891
  4902  0B47  07BD               	addwf	___flmul@prod+1,f
  4903  0B48                     u3891:
  4904  0B48  0832               	movf	??___flmul+2,w
  4905  0B49  1103               	clrz
  4906  0B4A  1803               	skipnc
  4907  0B4B  3E01               	addlw	1
  4908  0B4C  1903               	skipnz
  4909  0B4D  2B4F               	goto	u3892
  4910  0B4E  07BE               	addwf	___flmul@prod+2,f
  4911  0B4F                     u3892:
  4912  0B4F  0833               	movf	??___flmul+3,w
  4913  0B50  1103               	clrz
  4914  0B51  1803               	skipnc
  4915  0B52  3E01               	addlw	1
  4916  0B53  1903               	skipnz
  4917  0B54  2B56               	goto	u3893
  4918  0B55  07BF               	addwf	___flmul@prod+3,f
  4919  0B56                     u3893:
  4920  0B56  082A               	movf	___flmul@b+2,w
  4921  0B57  00B0               	movwf	??___flmul
  4922  0B58  0830               	movf	??___flmul,w
  4923  0B59  00F2               	movwf	__Umul8_16@multiplicand
  4924  0B5A  082E               	movf	___flmul@a+2,w
  4925  0B5B  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4926  0B60  0873               	movf	?__Umul8_16+1,w
  4927  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4928  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4929  0B63  00C1               	movwf	___flmul@temp+1
  4930  0B64  0872               	movf	?__Umul8_16,w
  4931  0B65  00C0               	movwf	___flmul@temp
  4932  0B66                     l2748:
  4933  0B66  0840               	movf	___flmul@temp,w
  4934  0B67  00B0               	movwf	??___flmul
  4935  0B68  0841               	movf	___flmul@temp+1,w
  4936  0B69  00B1               	movwf	??___flmul+1
  4937  0B6A  01B2               	clrf	??___flmul+2
  4938  0B6B  01B3               	clrf	??___flmul+3
  4939  0B6C  3008               	movlw	8
  4940  0B6D                     u3905:
  4941  0B6D  1003               	clrc
  4942  0B6E  0DB0               	rlf	??___flmul,f
  4943  0B6F  0DB1               	rlf	??___flmul+1,f
  4944  0B70  0DB2               	rlf	??___flmul+2,f
  4945  0B71  0DB3               	rlf	??___flmul+3,f
  4946  0B72                     u3900:
  4947  0B72  3EFF               	addlw	-1
  4948  0B73  1D03               	skipz
  4949  0B74  2B6D               	goto	u3905
  4950  0B75  0830               	movf	??___flmul,w
  4951  0B76  07BC               	addwf	___flmul@prod,f
  4952  0B77  0831               	movf	??___flmul+1,w
  4953  0B78  1103               	clrz
  4954  0B79  1803               	skipnc
  4955  0B7A  3E01               	addlw	1
  4956  0B7B  1903               	skipnz
  4957  0B7C  2B7E               	goto	u3911
  4958  0B7D  07BD               	addwf	___flmul@prod+1,f
  4959  0B7E                     u3911:
  4960  0B7E  0832               	movf	??___flmul+2,w
  4961  0B7F  1103               	clrz
  4962  0B80  1803               	skipnc
  4963  0B81  3E01               	addlw	1
  4964  0B82  1903               	skipnz
  4965  0B83  2B85               	goto	u3912
  4966  0B84  07BE               	addwf	___flmul@prod+2,f
  4967  0B85                     u3912:
  4968  0B85  0833               	movf	??___flmul+3,w
  4969  0B86  1103               	clrz
  4970  0B87  1803               	skipnc
  4971  0B88  3E01               	addlw	1
  4972  0B89  1903               	skipnz
  4973  0B8A  2B8C               	goto	u3913
  4974  0B8B  07BF               	addwf	___flmul@prod+3,f
  4975  0B8C                     u3913:
  4976  0B8C                     l2750:
  4977  0B8C  0836               	movf	___flmul@grs,w
  4978  0B8D  00B0               	movwf	??___flmul
  4979  0B8E  0837               	movf	___flmul@grs+1,w
  4980  0B8F  00B1               	movwf	??___flmul+1
  4981  0B90  0838               	movf	___flmul@grs+2,w
  4982  0B91  00B2               	movwf	??___flmul+2
  4983  0B92  0839               	movf	___flmul@grs+3,w
  4984  0B93  00B3               	movwf	??___flmul+3
  4985  0B94  3018               	movlw	24
  4986  0B95                     u3925:
  4987  0B95  1003               	clrc
  4988  0B96  0CB3               	rrf	??___flmul+3,f
  4989  0B97  0CB2               	rrf	??___flmul+2,f
  4990  0B98  0CB1               	rrf	??___flmul+1,f
  4991  0B99  0CB0               	rrf	??___flmul,f
  4992  0B9A                     u3920:
  4993  0B9A  3EFF               	addlw	-1
  4994  0B9B  1D03               	skipz
  4995  0B9C  2B95               	goto	u3925
  4996  0B9D  0830               	movf	??___flmul,w
  4997  0B9E  07BC               	addwf	___flmul@prod,f
  4998  0B9F  0831               	movf	??___flmul+1,w
  4999  0BA0  1103               	clrz
  5000  0BA1  1803               	skipnc
  5001  0BA2  3E01               	addlw	1
  5002  0BA3  1903               	skipnz
  5003  0BA4  2BA6               	goto	u3931
  5004  0BA5  07BD               	addwf	___flmul@prod+1,f
  5005  0BA6                     u3931:
  5006  0BA6  0832               	movf	??___flmul+2,w
  5007  0BA7  1103               	clrz
  5008  0BA8  1803               	skipnc
  5009  0BA9  3E01               	addlw	1
  5010  0BAA  1903               	skipnz
  5011  0BAB  2BAD               	goto	u3932
  5012  0BAC  07BE               	addwf	___flmul@prod+2,f
  5013  0BAD                     u3932:
  5014  0BAD  0833               	movf	??___flmul+3,w
  5015  0BAE  1103               	clrz
  5016  0BAF  1803               	skipnc
  5017  0BB0  3E01               	addlw	1
  5018  0BB1  1903               	skipnz
  5019  0BB2  2BB4               	goto	u3933
  5020  0BB3  07BF               	addwf	___flmul@prod+3,f
  5021  0BB4                     u3933:
  5022  0BB4                     l2752:
  5023  0BB4  3008               	movlw	8
  5024  0BB5  00B0               	movwf	??___flmul
  5025  0BB6                     u3945:
  5026  0BB6  1003               	clrc
  5027  0BB7  0DB6               	rlf	___flmul@grs,f
  5028  0BB8  0DB7               	rlf	___flmul@grs+1,f
  5029  0BB9  0DB8               	rlf	___flmul@grs+2,f
  5030  0BBA  0DB9               	rlf	___flmul@grs+3,f
  5031  0BBB  0BB0               	decfsz	??___flmul,f
  5032  0BBC  2BB6               	goto	u3945
  5033  0BBD                     l2754:
  5034  0BBD  083B               	movf	___flmul@bexp,w
  5035  0BBE  073A               	addwf	___flmul@aexp,w
  5036  0BBF  00B0               	movwf	??___flmul
  5037  0BC0  01B1               	clrf	??___flmul+1
  5038  0BC1  0DB1               	rlf	??___flmul+1,f
  5039  0BC2  0830               	movf	??___flmul,w
  5040  0BC3  3E82               	addlw	130
  5041  0BC4  00C0               	movwf	___flmul@temp
  5042  0BC5  0831               	movf	??___flmul+1,w
  5043  0BC6  1803               	skipnc
  5044  0BC7  3E01               	addlw	1
  5045  0BC8  3EFF               	addlw	255
  5046  0BC9  00C1               	movwf	___flmul@temp+1
  5047  0BCA  2BE8               	goto	l2766
  5048  0BCB                     l2756:
  5049  0BCB  3001               	movlw	1
  5050  0BCC  00B0               	movwf	??___flmul
  5051  0BCD                     u3955:
  5052  0BCD  1003               	clrc
  5053  0BCE  0DBC               	rlf	___flmul@prod,f
  5054  0BCF  0DBD               	rlf	___flmul@prod+1,f
  5055  0BD0  0DBE               	rlf	___flmul@prod+2,f
  5056  0BD1  0DBF               	rlf	___flmul@prod+3,f
  5057  0BD2  0BB0               	decfsz	??___flmul,f
  5058  0BD3  2BCD               	goto	u3955
  5059  0BD4                     l2758:
  5060  0BD4  1FB9               	btfss	___flmul@grs+3,7
  5061  0BD5  2BD7               	goto	u3961
  5062  0BD6  2BD8               	goto	u3960
  5063  0BD7                     u3961:
  5064  0BD7  2BD9               	goto	l2762
  5065  0BD8                     u3960:
  5066  0BD8                     l2760:
  5067  0BD8  143C               	bsf	___flmul@prod,0
  5068  0BD9                     l2762:
  5069  0BD9  3001               	movlw	1
  5070  0BDA  00B0               	movwf	??___flmul
  5071  0BDB                     u3975:
  5072  0BDB  1003               	clrc
  5073  0BDC  0DB6               	rlf	___flmul@grs,f
  5074  0BDD  0DB7               	rlf	___flmul@grs+1,f
  5075  0BDE  0DB8               	rlf	___flmul@grs+2,f
  5076  0BDF  0DB9               	rlf	___flmul@grs+3,f
  5077  0BE0  0BB0               	decfsz	??___flmul,f
  5078  0BE1  2BDB               	goto	u3975
  5079  0BE2                     l2764:
  5080  0BE2  30FF               	movlw	255
  5081  0BE3  07C0               	addwf	___flmul@temp,f
  5082  0BE4  1803               	skipnc
  5083  0BE5  0AC1               	incf	___flmul@temp+1,f
  5084  0BE6  30FF               	movlw	255
  5085  0BE7  07C1               	addwf	___flmul@temp+1,f
  5086  0BE8                     l2766:
  5087  0BE8  1FBE               	btfss	___flmul@prod+2,7
  5088  0BE9  2BEB               	goto	u3981
  5089  0BEA  2BEC               	goto	u3980
  5090  0BEB                     u3981:
  5091  0BEB  2BCB               	goto	l2756
  5092  0BEC                     u3980:
  5093  0BEC                     l2768:
  5094  0BEC  01BA               	clrf	___flmul@aexp
  5095  0BED                     l2770:
  5096  0BED  1FB9               	btfss	___flmul@grs+3,7
  5097  0BEE  2BF0               	goto	u3991
  5098  0BEF  2BF1               	goto	u3990
  5099  0BF0                     u3991:
  5100  0BF0  2C0D               	goto	l2778
  5101  0BF1                     u3990:
  5102  0BF1                     l2772:
  5103  0BF1  30FF               	movlw	255
  5104  0BF2  0536               	andwf	___flmul@grs,w
  5105  0BF3  00B0               	movwf	??___flmul
  5106  0BF4  30FF               	movlw	255
  5107  0BF5  0537               	andwf	___flmul@grs+1,w
  5108  0BF6  00B1               	movwf	??___flmul+1
  5109  0BF7  30FF               	movlw	255
  5110  0BF8  0538               	andwf	___flmul@grs+2,w
  5111  0BF9  00B2               	movwf	??___flmul+2
  5112  0BFA  307F               	movlw	127
  5113  0BFB  0539               	andwf	___flmul@grs+3,w
  5114  0BFC  00B3               	movwf	??___flmul+3
  5115  0BFD  0833               	movf	??___flmul+3,w
  5116  0BFE  0432               	iorwf	??___flmul+2,w
  5117  0BFF  0431               	iorwf	??___flmul+1,w
  5118  0C00  0430               	iorwf	??___flmul,w
  5119  0C01  1903               	skipnz
  5120  0C02  2C04               	goto	u4001
  5121  0C03  2C05               	goto	u4000
  5122  0C04                     u4001:
  5123  0C04  2C08               	goto	l828
  5124  0C05                     u4000:
  5125  0C05                     l2774:
  5126  0C05  01BA               	clrf	___flmul@aexp
  5127  0C06  0ABA               	incf	___flmul@aexp,f
  5128  0C07  2C0D               	goto	l2778
  5129  0C08                     l828:
  5130  0C08  1C3C               	btfss	___flmul@prod,0
  5131  0C09  2C0B               	goto	u4011
  5132  0C0A  2C0C               	goto	u4010
  5133  0C0B                     u4011:
  5134  0C0B  2C0D               	goto	l2778
  5135  0C0C                     u4010:
  5136  0C0C  2C05               	goto	l2774
  5137  0C0D                     l2778:
  5138  0C0D  083A               	movf	___flmul@aexp,w
  5139  0C0E  1903               	btfsc	3,2
  5140  0C0F  2C11               	goto	u4021
  5141  0C10  2C12               	goto	u4020
  5142  0C11                     u4021:
  5143  0C11  2C43               	goto	l2788
  5144  0C12                     u4020:
  5145  0C12                     l2780:
  5146  0C12  3001               	movlw	1
  5147  0C13  07BC               	addwf	___flmul@prod,f
  5148  0C14  3000               	movlw	0
  5149  0C15  1803               	skipnc
  5150  0C16  3001               	movlw	1
  5151  0C17  07BD               	addwf	___flmul@prod+1,f
  5152  0C18  3000               	movlw	0
  5153  0C19  1803               	skipnc
  5154  0C1A  3001               	movlw	1
  5155  0C1B  07BE               	addwf	___flmul@prod+2,f
  5156  0C1C  3000               	movlw	0
  5157  0C1D  1803               	skipnc
  5158  0C1E  3001               	movlw	1
  5159  0C1F  07BF               	addwf	___flmul@prod+3,f
  5160  0C20                     l2782:
  5161  0C20  1C3F               	btfss	___flmul@prod+3,0
  5162  0C21  2C23               	goto	u4031
  5163  0C22  2C24               	goto	u4030
  5164  0C23                     u4031:
  5165  0C23  2C43               	goto	l2788
  5166  0C24                     u4030:
  5167  0C24                     l2784:
  5168  0C24  083C               	movf	___flmul@prod,w
  5169  0C25  00B0               	movwf	??___flmul
  5170  0C26  083D               	movf	___flmul@prod+1,w
  5171  0C27  00B1               	movwf	??___flmul+1
  5172  0C28  083E               	movf	___flmul@prod+2,w
  5173  0C29  00B2               	movwf	??___flmul+2
  5174  0C2A  083F               	movf	___flmul@prod+3,w
  5175  0C2B  00B3               	movwf	??___flmul+3
  5176  0C2C  3001               	movlw	1
  5177  0C2D  00B4               	movwf	??___flmul+4
  5178  0C2E                     u4045:
  5179  0C2E  0D33               	rlf	??___flmul+3,w
  5180  0C2F  0CB3               	rrf	??___flmul+3,f
  5181  0C30  0CB2               	rrf	??___flmul+2,f
  5182  0C31  0CB1               	rrf	??___flmul+1,f
  5183  0C32  0CB0               	rrf	??___flmul,f
  5184  0C33                     u4040:
  5185  0C33  0BB4               	decfsz	??___flmul+4,f
  5186  0C34  2C2E               	goto	u4045
  5187  0C35  0833               	movf	??___flmul+3,w
  5188  0C36  00BF               	movwf	___flmul@prod+3
  5189  0C37  0832               	movf	??___flmul+2,w
  5190  0C38  00BE               	movwf	___flmul@prod+2
  5191  0C39  0831               	movf	??___flmul+1,w
  5192  0C3A  00BD               	movwf	___flmul@prod+1
  5193  0C3B  0830               	movf	??___flmul,w
  5194  0C3C  00BC               	movwf	___flmul@prod
  5195  0C3D                     l2786:
  5196  0C3D  3001               	movlw	1
  5197  0C3E  07C0               	addwf	___flmul@temp,f
  5198  0C3F  1803               	skipnc
  5199  0C40  0AC1               	incf	___flmul@temp+1,f
  5200  0C41  3000               	movlw	0
  5201  0C42  07C1               	addwf	___flmul@temp+1,f
  5202  0C43                     l2788:
  5203  0C43  0841               	movf	___flmul@temp+1,w
  5204  0C44  3A80               	xorlw	128
  5205  0C45  00FF               	movwf	btemp+1
  5206  0C46  3080               	movlw	128
  5207  0C47  027F               	subwf	btemp+1,w
  5208  0C48  1D03               	skipz
  5209  0C49  2C4C               	goto	u4055
  5210  0C4A  30FF               	movlw	255
  5211  0C4B  0240               	subwf	___flmul@temp,w
  5212  0C4C                     u4055:
  5213  0C4C  1C03               	skipc
  5214  0C4D  2C4F               	goto	u4051
  5215  0C4E  2C50               	goto	u4050
  5216  0C4F                     u4051:
  5217  0C4F  2C5B               	goto	l2792
  5218  0C50                     u4050:
  5219  0C50                     l2790:
  5220  0C50  307F               	movlw	127
  5221  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5222  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5223  0C53  00BF               	movwf	___flmul@prod+3
  5224  0C54  3080               	movlw	128
  5225  0C55  00BE               	movwf	___flmul@prod+2
  5226  0C56  3000               	movlw	0
  5227  0C57  00BD               	movwf	___flmul@prod+1
  5228  0C58  3000               	movlw	0
  5229  0C59  00BC               	movwf	___flmul@prod
  5230  0C5A  2C90               	goto	l834
  5231  0C5B                     l2792:
  5232  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5233  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5234  0C5D  0841               	movf	___flmul@temp+1,w
  5235  0C5E  3A80               	xorlw	128
  5236  0C5F  00FF               	movwf	btemp+1
  5237  0C60  3080               	movlw	128
  5238  0C61  027F               	subwf	btemp+1,w
  5239  0C62  1D03               	skipz
  5240  0C63  2C66               	goto	u4065
  5241  0C64  3001               	movlw	1
  5242  0C65  0240               	subwf	___flmul@temp,w
  5243  0C66                     u4065:
  5244  0C66  1803               	skipnc
  5245  0C67  2C69               	goto	u4061
  5246  0C68  2C6A               	goto	u4060
  5247  0C69                     u4061:
  5248  0C69  2C76               	goto	l2798
  5249  0C6A                     u4060:
  5250  0C6A                     l2794:
  5251  0C6A  3000               	movlw	0
  5252  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5253  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5254  0C6D  00BF               	movwf	___flmul@prod+3
  5255  0C6E  3000               	movlw	0
  5256  0C6F  00BE               	movwf	___flmul@prod+2
  5257  0C70  3000               	movlw	0
  5258  0C71  00BD               	movwf	___flmul@prod+1
  5259  0C72  3000               	movlw	0
  5260  0C73  00BC               	movwf	___flmul@prod
  5261  0C74                     l2796:
  5262  0C74  01B5               	clrf	___flmul@sign
  5263  0C75  2C90               	goto	l834
  5264  0C76                     l2798:
  5265  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5266  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5267  0C78  0840               	movf	___flmul@temp,w
  5268  0C79  00B0               	movwf	??___flmul
  5269  0C7A  0830               	movf	??___flmul,w
  5270  0C7B  00BB               	movwf	___flmul@bexp
  5271  0C7C  30FF               	movlw	255
  5272  0C7D  05BC               	andwf	___flmul@prod,f
  5273  0C7E  30FF               	movlw	255
  5274  0C7F  05BD               	andwf	___flmul@prod+1,f
  5275  0C80  307F               	movlw	127
  5276  0C81  05BE               	andwf	___flmul@prod+2,f
  5277  0C82  3000               	movlw	0
  5278  0C83  05BF               	andwf	___flmul@prod+3,f
  5279  0C84                     l2800:
  5280  0C84  1C3B               	btfss	___flmul@bexp,0
  5281  0C85  2C87               	goto	u4071
  5282  0C86  2C88               	goto	u4070
  5283  0C87                     u4071:
  5284  0C87  2C89               	goto	l2804
  5285  0C88                     u4070:
  5286  0C88                     l2802:
  5287  0C88  17BE               	bsf	___flmul@prod+2,7
  5288  0C89                     l2804:
  5289  0C89  083B               	movf	___flmul@bexp,w
  5290  0C8A  00B0               	movwf	??___flmul
  5291  0C8B  1003               	clrc
  5292  0C8C  0C30               	rrf	??___flmul,w
  5293  0C8D  00B1               	movwf	??___flmul+1
  5294  0C8E  0831               	movf	??___flmul+1,w
  5295  0C8F  00BF               	movwf	___flmul@prod+3
  5296  0C90                     l834:
  5297  0C90  0835               	movf	___flmul@sign,w
  5298  0C91  00B0               	movwf	??___flmul
  5299  0C92  0830               	movf	??___flmul,w
  5300  0C93  04BF               	iorwf	___flmul@prod+3,f
  5301  0C94                     l2806:
  5302  0C94  083F               	movf	___flmul@prod+3,w
  5303  0C95  00AB               	movwf	?___flmul+3
  5304  0C96  083E               	movf	___flmul@prod+2,w
  5305  0C97  00AA               	movwf	?___flmul+2
  5306  0C98  083D               	movf	___flmul@prod+1,w
  5307  0C99  00A9               	movwf	?___flmul+1
  5308  0C9A  083C               	movf	___flmul@prod,w
  5309  0C9B  00A8               	movwf	?___flmul
  5310  0C9C                     l822:
  5311  0C9C  0008               	return
  5312  0C9D                     __end_of___flmul:
  5313                           
  5314                           	psect	text10
  5315  07D7                     __ptext10:	
  5316 ;; *************** function __Umul8_16 *****************
  5317 ;; Defined at:
  5318 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  multiplier      1    wreg     unsigned char 
  5321 ;;  multiplicand    1    2[COMMON] unsigned char 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  multiplier      1   10[COMMON] unsigned char 
  5324 ;;  word_mpld       2    8[COMMON] unsigned int 
  5325 ;;  product         2    6[COMMON] unsigned int 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  2    2[COMMON] unsigned int 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2, status,0
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5335 ;;      Params:         2       0       0       0       0
  5336 ;;      Locals:         5       0       0       0       0
  5337 ;;      Temps:          2       0       0       0       0
  5338 ;;      Totals:         9       0       0       0       0
  5339 ;;Total ram usage:        9 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:    1
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		___flmul
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           
  5350                           ;psect for function __Umul8_16
  5351  07D7                     __Umul8_16:
  5352                           
  5353                           ;incstack = 0
  5354                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5355                           ;__Umul8_16@multiplier stored from wreg
  5356  07D7  00FA               	movwf	__Umul8_16@multiplier
  5357  07D8                     l2332:
  5358  07D8  01F6               	clrf	__Umul8_16@product
  5359  07D9  01F7               	clrf	__Umul8_16@product+1
  5360  07DA                     l2334:
  5361  07DA  0872               	movf	__Umul8_16@multiplicand,w
  5362  07DB  00F4               	movwf	??__Umul8_16
  5363  07DC  01F5               	clrf	??__Umul8_16+1
  5364  07DD  0874               	movf	??__Umul8_16,w
  5365  07DE  00F8               	movwf	__Umul8_16@word_mpld
  5366  07DF  0875               	movf	??__Umul8_16+1,w
  5367  07E0  00F9               	movwf	__Umul8_16@word_mpld+1
  5368  07E1                     l2336:
  5369  07E1  1C7A               	btfss	__Umul8_16@multiplier,0
  5370  07E2  2FE4               	goto	u2901
  5371  07E3  2FE5               	goto	u2900
  5372  07E4                     u2901:
  5373  07E4  2FEB               	goto	l841
  5374  07E5                     u2900:
  5375  07E5                     l2338:
  5376  07E5  0878               	movf	__Umul8_16@word_mpld,w
  5377  07E6  07F6               	addwf	__Umul8_16@product,f
  5378  07E7  1803               	skipnc
  5379  07E8  0AF7               	incf	__Umul8_16@product+1,f
  5380  07E9  0879               	movf	__Umul8_16@word_mpld+1,w
  5381  07EA  07F7               	addwf	__Umul8_16@product+1,f
  5382  07EB                     l841:
  5383  07EB  3001               	movlw	1
  5384  07EC                     u2915:
  5385  07EC  1003               	clrc
  5386  07ED  0DF8               	rlf	__Umul8_16@word_mpld,f
  5387  07EE  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  5388  07EF  3EFF               	addlw	-1
  5389  07F0  1D03               	skipz
  5390  07F1  2FEC               	goto	u2915
  5391  07F2  1003               	clrc
  5392  07F3  0CFA               	rrf	__Umul8_16@multiplier,f
  5393  07F4                     l2340:
  5394  07F4  087A               	movf	__Umul8_16@multiplier,w
  5395  07F5  1D03               	btfss	3,2
  5396  07F6  2FF8               	goto	u2921
  5397  07F7  2FF9               	goto	u2920
  5398  07F8                     u2921:
  5399  07F8  2FE1               	goto	l2336
  5400  07F9                     u2920:
  5401  07F9                     l2342:
  5402  07F9  0877               	movf	__Umul8_16@product+1,w
  5403  07FA  00F3               	movwf	?__Umul8_16+1
  5404  07FB  0876               	movf	__Umul8_16@product,w
  5405  07FC  00F2               	movwf	?__Umul8_16
  5406  07FD                     l843:
  5407  07FD  0008               	return
  5408  07FE                     __end_of__Umul8_16:
  5409                           
  5410                           	psect	text11
  5411  1177                     __ptext11:	
  5412 ;; *************** function __tdiv_to_l_ *****************
  5413 ;; Defined at:
  5414 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  f1              4    2[COMMON] float 
  5417 ;;  f2              4    6[COMMON] float 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  quot            4    4[BANK0 ] unsigned long 
  5420 ;;  exp1            1    9[BANK0 ] unsigned char 
  5421 ;;  cntr            1    8[BANK0 ] unsigned char 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  4    2[COMMON] unsigned long 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5431 ;;      Params:         8       0       0       0       0
  5432 ;;      Locals:         0       6       0       0       0
  5433 ;;      Temps:          0       4       0       0       0
  5434 ;;      Totals:         8      10       0       0       0
  5435 ;;Total ram usage:       18 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    1
  5438 ;; This function calls:
  5439 ;;		Nothing
  5440 ;; This function is called by:
  5441 ;;		_sprintf
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           
  5446                           ;psect for function __tdiv_to_l_
  5447  1177                     __tdiv_to_l_:
  5448  1177                     l2884:	
  5449                           ;incstack = 0
  5450                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5451                           
  5452  1177  0872               	movf	__tdiv_to_l_@f1,w
  5453  1178  1283               	bcf	3,5	;RP0=0, select bank0
  5454  1179  1303               	bcf	3,6	;RP1=0, select bank0
  5455  117A  00A0               	movwf	??__tdiv_to_l_
  5456  117B  0873               	movf	__tdiv_to_l_@f1+1,w
  5457  117C  00A1               	movwf	??__tdiv_to_l_+1
  5458  117D  0874               	movf	__tdiv_to_l_@f1+2,w
  5459  117E  00A2               	movwf	??__tdiv_to_l_+2
  5460  117F  1003               	clrc
  5461  1180  0D21               	rlf	??__tdiv_to_l_+1,w
  5462  1181  0D22               	rlf	??__tdiv_to_l_+2,w
  5463  1182  00A3               	movwf	??__tdiv_to_l_+3
  5464  1183  0823               	movf	??__tdiv_to_l_+3,w
  5465  1184  00A9               	movwf	__tdiv_to_l_@exp1
  5466  1185  0829               	movf	__tdiv_to_l_@exp1,w
  5467  1186  1D03               	btfss	3,2
  5468  1187  2989               	goto	u4361
  5469  1188  298A               	goto	u4360
  5470  1189                     u4361:
  5471  1189  2993               	goto	l2890
  5472  118A                     u4360:
  5473  118A                     l2886:
  5474  118A  3000               	movlw	0
  5475  118B  00F5               	movwf	?__tdiv_to_l_+3
  5476  118C  3000               	movlw	0
  5477  118D  00F4               	movwf	?__tdiv_to_l_+2
  5478  118E  3000               	movlw	0
  5479  118F  00F3               	movwf	?__tdiv_to_l_+1
  5480  1190  3000               	movlw	0
  5481  1191  00F2               	movwf	?__tdiv_to_l_
  5482  1192  2A33               	goto	l616
  5483  1193                     l2890:
  5484  1193  0876               	movf	__tdiv_to_l_@f2,w
  5485  1194  00A0               	movwf	??__tdiv_to_l_
  5486  1195  0877               	movf	__tdiv_to_l_@f2+1,w
  5487  1196  00A1               	movwf	??__tdiv_to_l_+1
  5488  1197  0878               	movf	__tdiv_to_l_@f2+2,w
  5489  1198  00A2               	movwf	??__tdiv_to_l_+2
  5490  1199  1003               	clrc
  5491  119A  0D21               	rlf	??__tdiv_to_l_+1,w
  5492  119B  0D22               	rlf	??__tdiv_to_l_+2,w
  5493  119C  00A3               	movwf	??__tdiv_to_l_+3
  5494  119D  0823               	movf	??__tdiv_to_l_+3,w
  5495  119E  00A8               	movwf	__tdiv_to_l_@cntr
  5496  119F  0828               	movf	__tdiv_to_l_@cntr,w
  5497  11A0  1D03               	btfss	3,2
  5498  11A1  29A3               	goto	u4371
  5499  11A2  29A4               	goto	u4370
  5500  11A3                     u4371:
  5501  11A3  29A5               	goto	l617
  5502  11A4                     u4370:
  5503  11A4  298A               	goto	l2886
  5504  11A5                     l617:
  5505  11A5  17F3               	bsf	__tdiv_to_l_@f1+1,7
  5506  11A6                     l2896:
  5507  11A6  30FF               	movlw	255
  5508  11A7  05F2               	andwf	__tdiv_to_l_@f1,f
  5509  11A8  30FF               	movlw	255
  5510  11A9  05F3               	andwf	__tdiv_to_l_@f1+1,f
  5511  11AA  3000               	movlw	0
  5512  11AB  05F4               	andwf	__tdiv_to_l_@f1+2,f
  5513  11AC                     l2898:
  5514  11AC  17F7               	bsf	__tdiv_to_l_@f2+1,7
  5515  11AD  30FF               	movlw	255
  5516  11AE  05F6               	andwf	__tdiv_to_l_@f2,f
  5517  11AF  30FF               	movlw	255
  5518  11B0  05F7               	andwf	__tdiv_to_l_@f2+1,f
  5519  11B1  3000               	movlw	0
  5520  11B2  05F8               	andwf	__tdiv_to_l_@f2+2,f
  5521  11B3  3000               	movlw	0
  5522  11B4  00A7               	movwf	__tdiv_to_l_@quot+3
  5523  11B5  3000               	movlw	0
  5524  11B6  00A6               	movwf	__tdiv_to_l_@quot+2
  5525  11B7  3000               	movlw	0
  5526  11B8  00A5               	movwf	__tdiv_to_l_@quot+1
  5527  11B9  3000               	movlw	0
  5528  11BA  00A4               	movwf	__tdiv_to_l_@quot
  5529  11BB                     l2900:
  5530  11BB  307F               	movlw	127
  5531  11BC  02A9               	subwf	__tdiv_to_l_@exp1,f
  5532  11BD                     l2902:
  5533  11BD  3098               	movlw	152
  5534  11BE  0728               	addwf	__tdiv_to_l_@cntr,w
  5535  11BF  00A0               	movwf	??__tdiv_to_l_
  5536  11C0  0820               	movf	??__tdiv_to_l_,w
  5537  11C1  02A9               	subwf	__tdiv_to_l_@exp1,f
  5538  11C2  3018               	movlw	24
  5539  11C3  00A0               	movwf	??__tdiv_to_l_
  5540  11C4  0820               	movf	??__tdiv_to_l_,w
  5541  11C5  00A8               	movwf	__tdiv_to_l_@cntr
  5542  11C6                     l2904:
  5543  11C6  3001               	movlw	1
  5544  11C7  00A0               	movwf	??__tdiv_to_l_
  5545  11C8                     u4385:
  5546  11C8  1003               	clrc
  5547  11C9  0DA4               	rlf	__tdiv_to_l_@quot,f
  5548  11CA  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5549  11CB  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5550  11CC  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5551  11CD  0BA0               	decfsz	??__tdiv_to_l_,f
  5552  11CE  29C8               	goto	u4385
  5553  11CF                     l2906:
  5554  11CF  0878               	movf	__tdiv_to_l_@f2+2,w
  5555  11D0  0274               	subwf	__tdiv_to_l_@f1+2,w
  5556  11D1  1D03               	skipz
  5557  11D2  29D9               	goto	u4395
  5558  11D3  0877               	movf	__tdiv_to_l_@f2+1,w
  5559  11D4  0273               	subwf	__tdiv_to_l_@f1+1,w
  5560  11D5  1D03               	skipz
  5561  11D6  29D9               	goto	u4395
  5562  11D7  0876               	movf	__tdiv_to_l_@f2,w
  5563  11D8  0272               	subwf	__tdiv_to_l_@f1,w
  5564  11D9                     u4395:
  5565  11D9  1C03               	skipc
  5566  11DA  29DC               	goto	u4391
  5567  11DB  29DD               	goto	u4390
  5568  11DC                     u4391:
  5569  11DC  29E8               	goto	l2912
  5570  11DD                     u4390:
  5571  11DD                     l2908:
  5572  11DD  0876               	movf	__tdiv_to_l_@f2,w
  5573  11DE  02F2               	subwf	__tdiv_to_l_@f1,f
  5574  11DF  0877               	movf	__tdiv_to_l_@f2+1,w
  5575  11E0  1C03               	skipc
  5576  11E1  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5577  11E2  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5578  11E3  0878               	movf	__tdiv_to_l_@f2+2,w
  5579  11E4  1C03               	skipc
  5580  11E5  0A78               	incf	__tdiv_to_l_@f2+2,w
  5581  11E6  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5582  11E7                     l2910:
  5583  11E7  1424               	bsf	__tdiv_to_l_@quot,0
  5584  11E8                     l2912:
  5585  11E8  3001               	movlw	1
  5586  11E9                     u4405:
  5587  11E9  1003               	clrc
  5588  11EA  0DF2               	rlf	__tdiv_to_l_@f1,f
  5589  11EB  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5590  11EC  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5591  11ED  3EFF               	addlw	-1
  5592  11EE  1D03               	skipz
  5593  11EF  29E9               	goto	u4405
  5594  11F0                     l2914:
  5595  11F0  3001               	movlw	1
  5596  11F1  02A8               	subwf	__tdiv_to_l_@cntr,f
  5597  11F2  1D03               	btfss	3,2
  5598  11F3  29F5               	goto	u4411
  5599  11F4  29F6               	goto	u4410
  5600  11F5                     u4411:
  5601  11F5  29C6               	goto	l2904
  5602  11F6                     u4410:
  5603  11F6                     l620:
  5604  11F6  1FA9               	btfss	__tdiv_to_l_@exp1,7
  5605  11F7  29F9               	goto	u4421
  5606  11F8  29FA               	goto	u4420
  5607  11F9                     u4421:
  5608  11F9  2A14               	goto	l2924
  5609  11FA                     u4420:
  5610  11FA                     l2916:
  5611  11FA  0829               	movf	__tdiv_to_l_@exp1,w
  5612  11FB  3A80               	xorlw	128
  5613  11FC  3E97               	addlw	151
  5614  11FD  1803               	skipnc
  5615  11FE  2A00               	goto	u4431
  5616  11FF  2A01               	goto	u4430
  5617  1200                     u4431:
  5618  1200  2A02               	goto	l2922
  5619  1201                     u4430:
  5620  1201  298A               	goto	l2886
  5621  1202                     l2922:
  5622  1202  3001               	movlw	1
  5623  1203                     u4445:
  5624  1203  1003               	clrc
  5625  1204  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  5626  1205  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  5627  1206  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  5628  1207  0CA4               	rrf	__tdiv_to_l_@quot,f
  5629  1208  3EFF               	addlw	-1
  5630  1209  1D03               	skipz
  5631  120A  2A03               	goto	u4445
  5632  120B  3001               	movlw	1
  5633  120C  00A0               	movwf	??__tdiv_to_l_
  5634  120D  0820               	movf	??__tdiv_to_l_,w
  5635  120E  07A9               	addwf	__tdiv_to_l_@exp1,f
  5636  120F  1D03               	btfss	3,2
  5637  1210  2A12               	goto	u4451
  5638  1211  2A13               	goto	u4450
  5639  1212                     u4451:
  5640  1212  2A02               	goto	l2922
  5641  1213                     u4450:
  5642  1213  2A2B               	goto	l2932
  5643  1214                     l2924:
  5644  1214  3018               	movlw	24
  5645  1215  0229               	subwf	__tdiv_to_l_@exp1,w
  5646  1216  1C03               	skipc
  5647  1217  2A19               	goto	u4461
  5648  1218  2A1A               	goto	u4460
  5649  1219                     u4461:
  5650  1219  2A26               	goto	l627
  5651  121A                     u4460:
  5652  121A  298A               	goto	l2886
  5653  121B                     l2930:
  5654  121B  3001               	movlw	1
  5655  121C  00A0               	movwf	??__tdiv_to_l_
  5656  121D                     u4475:
  5657  121D  1003               	clrc
  5658  121E  0DA4               	rlf	__tdiv_to_l_@quot,f
  5659  121F  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5660  1220  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5661  1221  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5662  1222  0BA0               	decfsz	??__tdiv_to_l_,f
  5663  1223  2A1D               	goto	u4475
  5664  1224  3001               	movlw	1
  5665  1225  02A9               	subwf	__tdiv_to_l_@exp1,f
  5666  1226                     l627:
  5667  1226  0829               	movf	__tdiv_to_l_@exp1,w
  5668  1227  1D03               	btfss	3,2
  5669  1228  2A2A               	goto	u4481
  5670  1229  2A2B               	goto	u4480
  5671  122A                     u4481:
  5672  122A  2A1B               	goto	l2930
  5673  122B                     u4480:
  5674  122B                     l2932:
  5675  122B  0827               	movf	__tdiv_to_l_@quot+3,w
  5676  122C  00F5               	movwf	?__tdiv_to_l_+3
  5677  122D  0826               	movf	__tdiv_to_l_@quot+2,w
  5678  122E  00F4               	movwf	?__tdiv_to_l_+2
  5679  122F  0825               	movf	__tdiv_to_l_@quot+1,w
  5680  1230  00F3               	movwf	?__tdiv_to_l_+1
  5681  1231  0824               	movf	__tdiv_to_l_@quot,w
  5682  1232  00F2               	movwf	?__tdiv_to_l_
  5683  1233                     l616:
  5684  1233  0008               	return
  5685  1234                     __end_of__tdiv_to_l_:
  5686                           
  5687                           	psect	text12
  5688  1234                     __ptext12:	
  5689 ;; *************** function __div_to_l_ *****************
  5690 ;; Defined at:
  5691 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  f1              4    2[COMMON] unsigned long 
  5694 ;;  f2              4    6[COMMON] unsigned long 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  quot            4    0[BANK0 ] unsigned long 
  5697 ;;  exp1            1    5[BANK0 ] unsigned char 
  5698 ;;  cntr            1    4[BANK0 ] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  4    2[COMMON] unsigned long 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5708 ;;      Params:         8       0       0       0       0
  5709 ;;      Locals:         0       6       0       0       0
  5710 ;;      Temps:          1       0       0       0       0
  5711 ;;      Totals:         9       6       0       0       0
  5712 ;;Total ram usage:       15 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    1
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		_sprintf
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           
  5723                           ;psect for function __div_to_l_
  5724  1234                     __div_to_l_:
  5725  1234                     l2936:	
  5726                           ;incstack = 0
  5727                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5728                           
  5729  1234  1003               	clrc
  5730  1235  0D74               	rlf	__div_to_l_@f1+2,w
  5731  1236  0D75               	rlf	__div_to_l_@f1+3,w
  5732  1237  00FA               	movwf	??__div_to_l_
  5733  1238  087A               	movf	??__div_to_l_,w
  5734  1239  1283               	bcf	3,5	;RP0=0, select bank0
  5735  123A  1303               	bcf	3,6	;RP1=0, select bank0
  5736  123B  00A5               	movwf	__div_to_l_@exp1
  5737  123C  0825               	movf	__div_to_l_@exp1,w
  5738  123D  1D03               	btfss	3,2
  5739  123E  2A40               	goto	u4491
  5740  123F  2A41               	goto	u4490
  5741  1240                     u4491:
  5742  1240  2A4A               	goto	l2942
  5743  1241                     u4490:
  5744  1241                     l2938:
  5745  1241  3000               	movlw	0
  5746  1242  00F5               	movwf	?__div_to_l_+3
  5747  1243  3000               	movlw	0
  5748  1244  00F4               	movwf	?__div_to_l_+2
  5749  1245  3000               	movlw	0
  5750  1246  00F3               	movwf	?__div_to_l_+1
  5751  1247  3000               	movlw	0
  5752  1248  00F2               	movwf	?__div_to_l_
  5753  1249  2AF1               	goto	l569
  5754  124A                     l2942:
  5755  124A  1003               	clrc
  5756  124B  0D78               	rlf	__div_to_l_@f2+2,w
  5757  124C  0D79               	rlf	__div_to_l_@f2+3,w
  5758  124D  00FA               	movwf	??__div_to_l_
  5759  124E  087A               	movf	??__div_to_l_,w
  5760  124F  00A4               	movwf	__div_to_l_@cntr
  5761  1250  0824               	movf	__div_to_l_@cntr,w
  5762  1251  1D03               	btfss	3,2
  5763  1252  2A54               	goto	u4501
  5764  1253  2A55               	goto	u4500
  5765  1254                     u4501:
  5766  1254  2A56               	goto	l570
  5767  1255                     u4500:
  5768  1255  2A41               	goto	l2938
  5769  1256                     l570:
  5770  1256  17F4               	bsf	__div_to_l_@f1+2,7
  5771  1257                     l2948:
  5772  1257  30FF               	movlw	255
  5773  1258  05F2               	andwf	__div_to_l_@f1,f
  5774  1259  30FF               	movlw	255
  5775  125A  05F3               	andwf	__div_to_l_@f1+1,f
  5776  125B  30FF               	movlw	255
  5777  125C  05F4               	andwf	__div_to_l_@f1+2,f
  5778  125D  3000               	movlw	0
  5779  125E  05F5               	andwf	__div_to_l_@f1+3,f
  5780  125F                     l2950:
  5781  125F  17F8               	bsf	__div_to_l_@f2+2,7
  5782  1260  30FF               	movlw	255
  5783  1261  05F6               	andwf	__div_to_l_@f2,f
  5784  1262  30FF               	movlw	255
  5785  1263  05F7               	andwf	__div_to_l_@f2+1,f
  5786  1264  30FF               	movlw	255
  5787  1265  05F8               	andwf	__div_to_l_@f2+2,f
  5788  1266  3000               	movlw	0
  5789  1267  05F9               	andwf	__div_to_l_@f2+3,f
  5790  1268  3000               	movlw	0
  5791  1269  00A3               	movwf	__div_to_l_@quot+3
  5792  126A  3000               	movlw	0
  5793  126B  00A2               	movwf	__div_to_l_@quot+2
  5794  126C  3000               	movlw	0
  5795  126D  00A1               	movwf	__div_to_l_@quot+1
  5796  126E  3000               	movlw	0
  5797  126F  00A0               	movwf	__div_to_l_@quot
  5798  1270                     l2952:
  5799  1270  307F               	movlw	127
  5800  1271  02A5               	subwf	__div_to_l_@exp1,f
  5801  1272                     l2954:
  5802  1272  30A0               	movlw	160
  5803  1273  0724               	addwf	__div_to_l_@cntr,w
  5804  1274  00FA               	movwf	??__div_to_l_
  5805  1275  087A               	movf	??__div_to_l_,w
  5806  1276  02A5               	subwf	__div_to_l_@exp1,f
  5807  1277  3020               	movlw	32
  5808  1278  00FA               	movwf	??__div_to_l_
  5809  1279  087A               	movf	??__div_to_l_,w
  5810  127A  00A4               	movwf	__div_to_l_@cntr
  5811  127B                     l2956:
  5812  127B  3001               	movlw	1
  5813  127C  00FA               	movwf	??__div_to_l_
  5814  127D                     u4515:
  5815  127D  1003               	clrc
  5816  127E  0DA0               	rlf	__div_to_l_@quot,f
  5817  127F  0DA1               	rlf	__div_to_l_@quot+1,f
  5818  1280  0DA2               	rlf	__div_to_l_@quot+2,f
  5819  1281  0DA3               	rlf	__div_to_l_@quot+3,f
  5820  1282  0BFA               	decfsz	??__div_to_l_,f
  5821  1283  2A7D               	goto	u4515
  5822  1284                     l2958:
  5823  1284  0879               	movf	__div_to_l_@f2+3,w
  5824  1285  0275               	subwf	__div_to_l_@f1+3,w
  5825  1286  1D03               	skipz
  5826  1287  2A92               	goto	u4525
  5827  1288  0878               	movf	__div_to_l_@f2+2,w
  5828  1289  0274               	subwf	__div_to_l_@f1+2,w
  5829  128A  1D03               	skipz
  5830  128B  2A92               	goto	u4525
  5831  128C  0877               	movf	__div_to_l_@f2+1,w
  5832  128D  0273               	subwf	__div_to_l_@f1+1,w
  5833  128E  1D03               	skipz
  5834  128F  2A92               	goto	u4525
  5835  1290  0876               	movf	__div_to_l_@f2,w
  5836  1291  0272               	subwf	__div_to_l_@f1,w
  5837  1292                     u4525:
  5838  1292  1C03               	skipc
  5839  1293  2A95               	goto	u4521
  5840  1294  2A96               	goto	u4520
  5841  1295                     u4521:
  5842  1295  2AA5               	goto	l2964
  5843  1296                     u4520:
  5844  1296                     l2960:
  5845  1296  0876               	movf	__div_to_l_@f2,w
  5846  1297  02F2               	subwf	__div_to_l_@f1,f
  5847  1298  0877               	movf	__div_to_l_@f2+1,w
  5848  1299  1C03               	skipc
  5849  129A  0F77               	incfsz	__div_to_l_@f2+1,w
  5850  129B  02F3               	subwf	__div_to_l_@f1+1,f
  5851  129C  0878               	movf	__div_to_l_@f2+2,w
  5852  129D  1C03               	skipc
  5853  129E  0F78               	incfsz	__div_to_l_@f2+2,w
  5854  129F  02F4               	subwf	__div_to_l_@f1+2,f
  5855  12A0  0879               	movf	__div_to_l_@f2+3,w
  5856  12A1  1C03               	skipc
  5857  12A2  0F79               	incfsz	__div_to_l_@f2+3,w
  5858  12A3  02F5               	subwf	__div_to_l_@f1+3,f
  5859  12A4                     l2962:
  5860  12A4  1420               	bsf	__div_to_l_@quot,0
  5861  12A5                     l2964:
  5862  12A5  3001               	movlw	1
  5863  12A6  00FA               	movwf	??__div_to_l_
  5864  12A7                     u4535:
  5865  12A7  1003               	clrc
  5866  12A8  0DF2               	rlf	__div_to_l_@f1,f
  5867  12A9  0DF3               	rlf	__div_to_l_@f1+1,f
  5868  12AA  0DF4               	rlf	__div_to_l_@f1+2,f
  5869  12AB  0DF5               	rlf	__div_to_l_@f1+3,f
  5870  12AC  0BFA               	decfsz	??__div_to_l_,f
  5871  12AD  2AA7               	goto	u4535
  5872  12AE                     l2966:
  5873  12AE  3001               	movlw	1
  5874  12AF  02A4               	subwf	__div_to_l_@cntr,f
  5875  12B0  1D03               	btfss	3,2
  5876  12B1  2AB3               	goto	u4541
  5877  12B2  2AB4               	goto	u4540
  5878  12B3                     u4541:
  5879  12B3  2A7B               	goto	l2956
  5880  12B4                     u4540:
  5881  12B4                     l573:
  5882  12B4  1FA5               	btfss	__div_to_l_@exp1,7
  5883  12B5  2AB7               	goto	u4551
  5884  12B6  2AB8               	goto	u4550
  5885  12B7                     u4551:
  5886  12B7  2AD2               	goto	l2976
  5887  12B8                     u4550:
  5888  12B8                     l2968:
  5889  12B8  0825               	movf	__div_to_l_@exp1,w
  5890  12B9  3A80               	xorlw	128
  5891  12BA  3E9F               	addlw	159
  5892  12BB  1803               	skipnc
  5893  12BC  2ABE               	goto	u4561
  5894  12BD  2ABF               	goto	u4560
  5895  12BE                     u4561:
  5896  12BE  2AC0               	goto	l2974
  5897  12BF                     u4560:
  5898  12BF  2A41               	goto	l2938
  5899  12C0                     l2974:
  5900  12C0  3001               	movlw	1
  5901  12C1                     u4575:
  5902  12C1  1003               	clrc
  5903  12C2  0CA3               	rrf	__div_to_l_@quot+3,f
  5904  12C3  0CA2               	rrf	__div_to_l_@quot+2,f
  5905  12C4  0CA1               	rrf	__div_to_l_@quot+1,f
  5906  12C5  0CA0               	rrf	__div_to_l_@quot,f
  5907  12C6  3EFF               	addlw	-1
  5908  12C7  1D03               	skipz
  5909  12C8  2AC1               	goto	u4575
  5910  12C9  3001               	movlw	1
  5911  12CA  00FA               	movwf	??__div_to_l_
  5912  12CB  087A               	movf	??__div_to_l_,w
  5913  12CC  07A5               	addwf	__div_to_l_@exp1,f
  5914  12CD  1D03               	btfss	3,2
  5915  12CE  2AD0               	goto	u4581
  5916  12CF  2AD1               	goto	u4580
  5917  12D0                     u4581:
  5918  12D0  2AC0               	goto	l2974
  5919  12D1                     u4580:
  5920  12D1  2AE9               	goto	l2984
  5921  12D2                     l2976:
  5922  12D2  3020               	movlw	32
  5923  12D3  0225               	subwf	__div_to_l_@exp1,w
  5924  12D4  1C03               	skipc
  5925  12D5  2AD7               	goto	u4591
  5926  12D6  2AD8               	goto	u4590
  5927  12D7                     u4591:
  5928  12D7  2AE4               	goto	l580
  5929  12D8                     u4590:
  5930  12D8  2A41               	goto	l2938
  5931  12D9                     l2982:
  5932  12D9  3001               	movlw	1
  5933  12DA  00FA               	movwf	??__div_to_l_
  5934  12DB                     u4605:
  5935  12DB  1003               	clrc
  5936  12DC  0DA0               	rlf	__div_to_l_@quot,f
  5937  12DD  0DA1               	rlf	__div_to_l_@quot+1,f
  5938  12DE  0DA2               	rlf	__div_to_l_@quot+2,f
  5939  12DF  0DA3               	rlf	__div_to_l_@quot+3,f
  5940  12E0  0BFA               	decfsz	??__div_to_l_,f
  5941  12E1  2ADB               	goto	u4605
  5942  12E2  3001               	movlw	1
  5943  12E3  02A5               	subwf	__div_to_l_@exp1,f
  5944  12E4                     l580:
  5945  12E4  0825               	movf	__div_to_l_@exp1,w
  5946  12E5  1D03               	btfss	3,2
  5947  12E6  2AE8               	goto	u4611
  5948  12E7  2AE9               	goto	u4610
  5949  12E8                     u4611:
  5950  12E8  2AD9               	goto	l2982
  5951  12E9                     u4610:
  5952  12E9                     l2984:
  5953  12E9  0823               	movf	__div_to_l_@quot+3,w
  5954  12EA  00F5               	movwf	?__div_to_l_+3
  5955  12EB  0822               	movf	__div_to_l_@quot+2,w
  5956  12EC  00F4               	movwf	?__div_to_l_+2
  5957  12ED  0821               	movf	__div_to_l_@quot+1,w
  5958  12EE  00F3               	movwf	?__div_to_l_+1
  5959  12EF  0820               	movf	__div_to_l_@quot,w
  5960  12F0  00F2               	movwf	?__div_to_l_
  5961  12F1                     l569:
  5962  12F1  0008               	return
  5963  12F2                     __end_of__div_to_l_:
  5964                           
  5965                           	psect	text13
  5966  1D07                     __ptext13:	
  5967 ;; *************** function ___wmul *****************
  5968 ;; Defined at:
  5969 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  multiplier      2    2[COMMON] unsigned int 
  5972 ;;  multiplicand    2    4[COMMON] unsigned int 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  product         2    6[COMMON] unsigned int 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  2    2[COMMON] unsigned int 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5984 ;;      Params:         4       0       0       0       0
  5985 ;;      Locals:         2       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0
  5987 ;;      Totals:         6       0       0       0       0
  5988 ;;Total ram usage:        6 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    1
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_sprintf
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           
  5999                           ;psect for function ___wmul
  6000  1D07                     ___wmul:
  6001  1D07                     l2988:	
  6002                           ;incstack = 0
  6003                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6004                           
  6005  1D07  01F6               	clrf	___wmul@product
  6006  1D08  01F7               	clrf	___wmul@product+1
  6007  1D09                     l2990:
  6008  1D09  1C72               	btfss	___wmul@multiplier,0
  6009  1D0A  2D0C               	goto	u4621
  6010  1D0B  2D0D               	goto	u4620
  6011  1D0C                     u4621:
  6012  1D0C  2D13               	goto	l399
  6013  1D0D                     u4620:
  6014  1D0D                     l2992:
  6015  1D0D  0874               	movf	___wmul@multiplicand,w
  6016  1D0E  07F6               	addwf	___wmul@product,f
  6017  1D0F  1803               	skipnc
  6018  1D10  0AF7               	incf	___wmul@product+1,f
  6019  1D11  0875               	movf	___wmul@multiplicand+1,w
  6020  1D12  07F7               	addwf	___wmul@product+1,f
  6021  1D13                     l399:
  6022  1D13  3001               	movlw	1
  6023  1D14                     u4635:
  6024  1D14  1003               	clrc
  6025  1D15  0DF4               	rlf	___wmul@multiplicand,f
  6026  1D16  0DF5               	rlf	___wmul@multiplicand+1,f
  6027  1D17  3EFF               	addlw	-1
  6028  1D18  1D03               	skipz
  6029  1D19  2D14               	goto	u4635
  6030  1D1A                     l2994:
  6031  1D1A  3001               	movlw	1
  6032  1D1B                     u4645:
  6033  1D1B  1003               	clrc
  6034  1D1C  0CF3               	rrf	___wmul@multiplier+1,f
  6035  1D1D  0CF2               	rrf	___wmul@multiplier,f
  6036  1D1E  3EFF               	addlw	-1
  6037  1D1F  1D03               	skipz
  6038  1D20  2D1B               	goto	u4645
  6039  1D21                     l2996:
  6040  1D21  0872               	movf	___wmul@multiplier,w
  6041  1D22  0473               	iorwf	___wmul@multiplier+1,w
  6042  1D23  1D03               	btfss	3,2
  6043  1D24  2D26               	goto	u4651
  6044  1D25  2D27               	goto	u4650
  6045  1D26                     u4651:
  6046  1D26  2D09               	goto	l2990
  6047  1D27                     u4650:
  6048  1D27                     l2998:
  6049  1D27  0877               	movf	___wmul@product+1,w
  6050  1D28  00F3               	movwf	?___wmul+1
  6051  1D29  0876               	movf	___wmul@product,w
  6052  1D2A  00F2               	movwf	?___wmul
  6053  1D2B                     l401:
  6054  1D2B  0008               	return
  6055  1D2C                     __end_of___wmul:
  6056                           
  6057                           	psect	text14
  6058  1E06                     __ptext14:	
  6059 ;; *************** function ___llmod *****************
  6060 ;; Defined at:
  6061 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  divisor         4    2[COMMON] unsigned long 
  6064 ;;  dividend        4    6[COMMON] unsigned long 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  counter         1   11[COMMON] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  4    2[COMMON] unsigned long 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6076 ;;      Params:         8       0       0       0       0
  6077 ;;      Locals:         1       0       0       0       0
  6078 ;;      Temps:          1       0       0       0       0
  6079 ;;      Totals:        10       0       0       0       0
  6080 ;;Total ram usage:       10 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:    1
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_sprintf
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           
  6091                           ;psect for function ___llmod
  6092  1E06                     ___llmod:
  6093  1E06                     l3102:	
  6094                           ;incstack = 0
  6095                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6096                           
  6097  1E06  0875               	movf	___llmod@divisor+3,w
  6098  1E07  0474               	iorwf	___llmod@divisor+2,w
  6099  1E08  0473               	iorwf	___llmod@divisor+1,w
  6100  1E09  0472               	iorwf	___llmod@divisor,w
  6101  1E0A  1903               	skipnz
  6102  1E0B  2E0D               	goto	u4941
  6103  1E0C  2E0E               	goto	u4940
  6104  1E0D                     u4941:
  6105  1E0D  2E51               	goto	l3118
  6106  1E0E                     u4940:
  6107  1E0E                     l3104:
  6108  1E0E  01FB               	clrf	___llmod@counter
  6109  1E0F  0AFB               	incf	___llmod@counter,f
  6110  1E10  2E1E               	goto	l3108
  6111  1E11                     l3106:
  6112  1E11  3001               	movlw	1
  6113  1E12  00FA               	movwf	??___llmod
  6114  1E13                     u4955:
  6115  1E13  1003               	clrc
  6116  1E14  0DF2               	rlf	___llmod@divisor,f
  6117  1E15  0DF3               	rlf	___llmod@divisor+1,f
  6118  1E16  0DF4               	rlf	___llmod@divisor+2,f
  6119  1E17  0DF5               	rlf	___llmod@divisor+3,f
  6120  1E18  0BFA               	decfsz	??___llmod,f
  6121  1E19  2E13               	goto	u4955
  6122  1E1A  3001               	movlw	1
  6123  1E1B  00FA               	movwf	??___llmod
  6124  1E1C  087A               	movf	??___llmod,w
  6125  1E1D  07FB               	addwf	___llmod@counter,f
  6126  1E1E                     l3108:
  6127  1E1E  1FF5               	btfss	___llmod@divisor+3,7
  6128  1E1F  2E21               	goto	u4961
  6129  1E20  2E22               	goto	u4960
  6130  1E21                     u4961:
  6131  1E21  2E11               	goto	l3106
  6132  1E22                     u4960:
  6133  1E22                     l3110:
  6134  1E22  0875               	movf	___llmod@divisor+3,w
  6135  1E23  0279               	subwf	___llmod@dividend+3,w
  6136  1E24  1D03               	skipz
  6137  1E25  2E30               	goto	u4975
  6138  1E26  0874               	movf	___llmod@divisor+2,w
  6139  1E27  0278               	subwf	___llmod@dividend+2,w
  6140  1E28  1D03               	skipz
  6141  1E29  2E30               	goto	u4975
  6142  1E2A  0873               	movf	___llmod@divisor+1,w
  6143  1E2B  0277               	subwf	___llmod@dividend+1,w
  6144  1E2C  1D03               	skipz
  6145  1E2D  2E30               	goto	u4975
  6146  1E2E  0872               	movf	___llmod@divisor,w
  6147  1E2F  0276               	subwf	___llmod@dividend,w
  6148  1E30                     u4975:
  6149  1E30  1C03               	skipc
  6150  1E31  2E33               	goto	u4971
  6151  1E32  2E34               	goto	u4970
  6152  1E33                     u4971:
  6153  1E33  2E42               	goto	l3114
  6154  1E34                     u4970:
  6155  1E34                     l3112:
  6156  1E34  0872               	movf	___llmod@divisor,w
  6157  1E35  02F6               	subwf	___llmod@dividend,f
  6158  1E36  0873               	movf	___llmod@divisor+1,w
  6159  1E37  1C03               	skipc
  6160  1E38  0F73               	incfsz	___llmod@divisor+1,w
  6161  1E39  02F7               	subwf	___llmod@dividend+1,f
  6162  1E3A  0874               	movf	___llmod@divisor+2,w
  6163  1E3B  1C03               	skipc
  6164  1E3C  0F74               	incfsz	___llmod@divisor+2,w
  6165  1E3D  02F8               	subwf	___llmod@dividend+2,f
  6166  1E3E  0875               	movf	___llmod@divisor+3,w
  6167  1E3F  1C03               	skipc
  6168  1E40  0F75               	incfsz	___llmod@divisor+3,w
  6169  1E41  02F9               	subwf	___llmod@dividend+3,f
  6170  1E42                     l3114:
  6171  1E42  3001               	movlw	1
  6172  1E43                     u4985:
  6173  1E43  1003               	clrc
  6174  1E44  0CF5               	rrf	___llmod@divisor+3,f
  6175  1E45  0CF4               	rrf	___llmod@divisor+2,f
  6176  1E46  0CF3               	rrf	___llmod@divisor+1,f
  6177  1E47  0CF2               	rrf	___llmod@divisor,f
  6178  1E48  3EFF               	addlw	-1
  6179  1E49  1D03               	skipz
  6180  1E4A  2E43               	goto	u4985
  6181  1E4B                     l3116:
  6182  1E4B  3001               	movlw	1
  6183  1E4C  02FB               	subwf	___llmod@counter,f
  6184  1E4D  1D03               	btfss	3,2
  6185  1E4E  2E50               	goto	u4991
  6186  1E4F  2E51               	goto	u4990
  6187  1E50                     u4991:
  6188  1E50  2E22               	goto	l3110
  6189  1E51                     u4990:
  6190  1E51                     l3118:
  6191  1E51  0879               	movf	___llmod@dividend+3,w
  6192  1E52  00F5               	movwf	?___llmod+3
  6193  1E53  0878               	movf	___llmod@dividend+2,w
  6194  1E54  00F4               	movwf	?___llmod+2
  6195  1E55  0877               	movf	___llmod@dividend+1,w
  6196  1E56  00F3               	movwf	?___llmod+1
  6197  1E57  0876               	movf	___llmod@dividend,w
  6198  1E58  00F2               	movwf	?___llmod
  6199  1E59                     l655:
  6200  1E59  0008               	return
  6201  1E5A                     __end_of___llmod:
  6202                           
  6203                           	psect	text15
  6204  1EB3                     __ptext15:	
  6205 ;; *************** function ___lldiv *****************
  6206 ;; Defined at:
  6207 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  divisor         4    2[COMMON] unsigned long 
  6210 ;;  dividend        4    6[COMMON] unsigned long 
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;  quotient        4    0[BANK0 ] unsigned long 
  6213 ;;  counter         1    4[BANK0 ] unsigned char 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  4    2[COMMON] unsigned long 
  6216 ;; Registers used:
  6217 ;;		wreg, status,2, status,0
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6223 ;;      Params:         8       0       0       0       0
  6224 ;;      Locals:         0       5       0       0       0
  6225 ;;      Temps:          1       0       0       0       0
  6226 ;;      Totals:         9       5       0       0       0
  6227 ;;Total ram usage:       14 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    1
  6230 ;; This function calls:
  6231 ;;		Nothing
  6232 ;; This function is called by:
  6233 ;;		_sprintf
  6234 ;;		_I2C_Master_Init
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           
  6239                           ;psect for function ___lldiv
  6240  1EB3                     ___lldiv:
  6241  1EB3                     l3002:	
  6242                           ;incstack = 0
  6243                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6244                           
  6245  1EB3  3000               	movlw	0
  6246  1EB4  1283               	bcf	3,5	;RP0=0, select bank0
  6247  1EB5  1303               	bcf	3,6	;RP1=0, select bank0
  6248  1EB6  00A3               	movwf	___lldiv@quotient+3
  6249  1EB7  3000               	movlw	0
  6250  1EB8  00A2               	movwf	___lldiv@quotient+2
  6251  1EB9  3000               	movlw	0
  6252  1EBA  00A1               	movwf	___lldiv@quotient+1
  6253  1EBB  3000               	movlw	0
  6254  1EBC  00A0               	movwf	___lldiv@quotient
  6255  1EBD  0875               	movf	___lldiv@divisor+3,w
  6256  1EBE  0474               	iorwf	___lldiv@divisor+2,w
  6257  1EBF  0473               	iorwf	___lldiv@divisor+1,w
  6258  1EC0  0472               	iorwf	___lldiv@divisor,w
  6259  1EC1  1903               	skipnz
  6260  1EC2  2EC4               	goto	u4661
  6261  1EC3  2EC5               	goto	u4660
  6262  1EC4                     u4661:
  6263  1EC4  2F12               	goto	l3022
  6264  1EC5                     u4660:
  6265  1EC5                     l3004:
  6266  1EC5  01A4               	clrf	___lldiv@counter
  6267  1EC6  0AA4               	incf	___lldiv@counter,f
  6268  1EC7  2ED5               	goto	l3008
  6269  1EC8                     l3006:
  6270  1EC8  3001               	movlw	1
  6271  1EC9  00FA               	movwf	??___lldiv
  6272  1ECA                     u4675:
  6273  1ECA  1003               	clrc
  6274  1ECB  0DF2               	rlf	___lldiv@divisor,f
  6275  1ECC  0DF3               	rlf	___lldiv@divisor+1,f
  6276  1ECD  0DF4               	rlf	___lldiv@divisor+2,f
  6277  1ECE  0DF5               	rlf	___lldiv@divisor+3,f
  6278  1ECF  0BFA               	decfsz	??___lldiv,f
  6279  1ED0  2ECA               	goto	u4675
  6280  1ED1  3001               	movlw	1
  6281  1ED2  00FA               	movwf	??___lldiv
  6282  1ED3  087A               	movf	??___lldiv,w
  6283  1ED4  07A4               	addwf	___lldiv@counter,f
  6284  1ED5                     l3008:
  6285  1ED5  1FF5               	btfss	___lldiv@divisor+3,7
  6286  1ED6  2ED8               	goto	u4681
  6287  1ED7  2ED9               	goto	u4680
  6288  1ED8                     u4681:
  6289  1ED8  2EC8               	goto	l3006
  6290  1ED9                     u4680:
  6291  1ED9                     l3010:
  6292  1ED9  3001               	movlw	1
  6293  1EDA  00FA               	movwf	??___lldiv
  6294  1EDB                     u4695:
  6295  1EDB  1003               	clrc
  6296  1EDC  0DA0               	rlf	___lldiv@quotient,f
  6297  1EDD  0DA1               	rlf	___lldiv@quotient+1,f
  6298  1EDE  0DA2               	rlf	___lldiv@quotient+2,f
  6299  1EDF  0DA3               	rlf	___lldiv@quotient+3,f
  6300  1EE0  0BFA               	decfsz	??___lldiv,f
  6301  1EE1  2EDB               	goto	u4695
  6302  1EE2                     l3012:
  6303  1EE2  0875               	movf	___lldiv@divisor+3,w
  6304  1EE3  0279               	subwf	___lldiv@dividend+3,w
  6305  1EE4  1D03               	skipz
  6306  1EE5  2EF0               	goto	u4705
  6307  1EE6  0874               	movf	___lldiv@divisor+2,w
  6308  1EE7  0278               	subwf	___lldiv@dividend+2,w
  6309  1EE8  1D03               	skipz
  6310  1EE9  2EF0               	goto	u4705
  6311  1EEA  0873               	movf	___lldiv@divisor+1,w
  6312  1EEB  0277               	subwf	___lldiv@dividend+1,w
  6313  1EEC  1D03               	skipz
  6314  1EED  2EF0               	goto	u4705
  6315  1EEE  0872               	movf	___lldiv@divisor,w
  6316  1EEF  0276               	subwf	___lldiv@dividend,w
  6317  1EF0                     u4705:
  6318  1EF0  1C03               	skipc
  6319  1EF1  2EF3               	goto	u4701
  6320  1EF2  2EF4               	goto	u4700
  6321  1EF3                     u4701:
  6322  1EF3  2F03               	goto	l3018
  6323  1EF4                     u4700:
  6324  1EF4                     l3014:
  6325  1EF4  0872               	movf	___lldiv@divisor,w
  6326  1EF5  02F6               	subwf	___lldiv@dividend,f
  6327  1EF6  0873               	movf	___lldiv@divisor+1,w
  6328  1EF7  1C03               	skipc
  6329  1EF8  0F73               	incfsz	___lldiv@divisor+1,w
  6330  1EF9  02F7               	subwf	___lldiv@dividend+1,f
  6331  1EFA  0874               	movf	___lldiv@divisor+2,w
  6332  1EFB  1C03               	skipc
  6333  1EFC  0F74               	incfsz	___lldiv@divisor+2,w
  6334  1EFD  02F8               	subwf	___lldiv@dividend+2,f
  6335  1EFE  0875               	movf	___lldiv@divisor+3,w
  6336  1EFF  1C03               	skipc
  6337  1F00  0F75               	incfsz	___lldiv@divisor+3,w
  6338  1F01  02F9               	subwf	___lldiv@dividend+3,f
  6339  1F02                     l3016:
  6340  1F02  1420               	bsf	___lldiv@quotient,0
  6341  1F03                     l3018:
  6342  1F03  3001               	movlw	1
  6343  1F04                     u4715:
  6344  1F04  1003               	clrc
  6345  1F05  0CF5               	rrf	___lldiv@divisor+3,f
  6346  1F06  0CF4               	rrf	___lldiv@divisor+2,f
  6347  1F07  0CF3               	rrf	___lldiv@divisor+1,f
  6348  1F08  0CF2               	rrf	___lldiv@divisor,f
  6349  1F09  3EFF               	addlw	-1
  6350  1F0A  1D03               	skipz
  6351  1F0B  2F04               	goto	u4715
  6352  1F0C                     l3020:
  6353  1F0C  3001               	movlw	1
  6354  1F0D  02A4               	subwf	___lldiv@counter,f
  6355  1F0E  1D03               	btfss	3,2
  6356  1F0F  2F11               	goto	u4721
  6357  1F10  2F12               	goto	u4720
  6358  1F11                     u4721:
  6359  1F11  2ED9               	goto	l3010
  6360  1F12                     u4720:
  6361  1F12                     l3022:
  6362  1F12  0823               	movf	___lldiv@quotient+3,w
  6363  1F13  00F5               	movwf	?___lldiv+3
  6364  1F14  0822               	movf	___lldiv@quotient+2,w
  6365  1F15  00F4               	movwf	?___lldiv+2
  6366  1F16  0821               	movf	___lldiv@quotient+1,w
  6367  1F17  00F3               	movwf	?___lldiv+1
  6368  1F18  0820               	movf	___lldiv@quotient,w
  6369  1F19  00F2               	movwf	?___lldiv
  6370  1F1A                     l435:
  6371  1F1A  0008               	return
  6372  1F1B                     __end_of___lldiv:
  6373                           
  6374                           	psect	text16
  6375  1F84                     __ptext16:	
  6376 ;; *************** function ___fltol *****************
  6377 ;; Defined at:
  6378 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  f1              4   53[BANK0 ] unsigned long 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  exp1            1   63[BANK0 ] unsigned char 
  6383 ;;  sign1           1   62[BANK0 ] unsigned char 
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  4   53[BANK0 ] long 
  6386 ;; Registers used:
  6387 ;;		wreg, status,2, status,0
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6393 ;;      Params:         0       4       0       0       0
  6394 ;;      Locals:         0       2       0       0       0
  6395 ;;      Temps:          0       5       0       0       0
  6396 ;;      Totals:         0      11       0       0       0
  6397 ;;Total ram usage:       11 bytes
  6398 ;; Hardware stack levels used:    1
  6399 ;; Hardware stack levels required when called:    1
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_sprintf
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           
  6408                           ;psect for function ___fltol
  6409  1F84                     ___fltol:
  6410  1F84                     l3066:	
  6411                           ;incstack = 0
  6412                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6413                           
  6414  1F84  1003               	clrc
  6415  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  6416  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  6417  1F87  0D57               	rlf	___fltol@f1+2,w
  6418  1F88  0D58               	rlf	___fltol@f1+3,w
  6419  1F89  00D9               	movwf	??___fltol
  6420  1F8A  0859               	movf	??___fltol,w
  6421  1F8B  00DF               	movwf	___fltol@exp1
  6422  1F8C  085F               	movf	___fltol@exp1,w
  6423  1F8D  1D03               	btfss	3,2
  6424  1F8E  2F90               	goto	u4841
  6425  1F8F  2F91               	goto	u4840
  6426  1F90                     u4841:
  6427  1F90  2F9A               	goto	l3072
  6428  1F91                     u4840:
  6429  1F91                     l3068:
  6430  1F91  3000               	movlw	0
  6431  1F92  00D8               	movwf	?___fltol+3
  6432  1F93  3000               	movlw	0
  6433  1F94  00D7               	movwf	?___fltol+2
  6434  1F95  3000               	movlw	0
  6435  1F96  00D6               	movwf	?___fltol+1
  6436  1F97  3000               	movlw	0
  6437  1F98  00D5               	movwf	?___fltol
  6438  1F99  2FFF               	goto	l602
  6439  1F9A                     l3072:
  6440  1F9A  0855               	movf	___fltol@f1,w
  6441  1F9B  00D9               	movwf	??___fltol
  6442  1F9C  0856               	movf	___fltol@f1+1,w
  6443  1F9D  00DA               	movwf	??___fltol+1
  6444  1F9E  0857               	movf	___fltol@f1+2,w
  6445  1F9F  00DB               	movwf	??___fltol+2
  6446  1FA0  0858               	movf	___fltol@f1+3,w
  6447  1FA1  00DC               	movwf	??___fltol+3
  6448  1FA2  301F               	movlw	31
  6449  1FA3                     u4855:
  6450  1FA3  1003               	clrc
  6451  1FA4  0CDC               	rrf	??___fltol+3,f
  6452  1FA5  0CDB               	rrf	??___fltol+2,f
  6453  1FA6  0CDA               	rrf	??___fltol+1,f
  6454  1FA7  0CD9               	rrf	??___fltol,f
  6455  1FA8                     u4850:
  6456  1FA8  3EFF               	addlw	-1
  6457  1FA9  1D03               	skipz
  6458  1FAA  2FA3               	goto	u4855
  6459  1FAB  0859               	movf	??___fltol,w
  6460  1FAC  00DD               	movwf	??___fltol+4
  6461  1FAD  085D               	movf	??___fltol+4,w
  6462  1FAE  00DE               	movwf	___fltol@sign1
  6463  1FAF                     l3074:
  6464  1FAF  17D7               	bsf	___fltol@f1+2,7
  6465  1FB0                     l3076:
  6466  1FB0  30FF               	movlw	255
  6467  1FB1  05D5               	andwf	___fltol@f1,f
  6468  1FB2  30FF               	movlw	255
  6469  1FB3  05D6               	andwf	___fltol@f1+1,f
  6470  1FB4  30FF               	movlw	255
  6471  1FB5  05D7               	andwf	___fltol@f1+2,f
  6472  1FB6  3000               	movlw	0
  6473  1FB7  05D8               	andwf	___fltol@f1+3,f
  6474  1FB8                     l3078:
  6475  1FB8  3096               	movlw	150
  6476  1FB9  02DF               	subwf	___fltol@exp1,f
  6477  1FBA                     l3080:
  6478  1FBA  1FDF               	btfss	___fltol@exp1,7
  6479  1FBB  2FBD               	goto	u4861
  6480  1FBC  2FBE               	goto	u4860
  6481  1FBD                     u4861:
  6482  1FBD  2FD8               	goto	l3090
  6483  1FBE                     u4860:
  6484  1FBE                     l3082:
  6485  1FBE  085F               	movf	___fltol@exp1,w
  6486  1FBF  3A80               	xorlw	128
  6487  1FC0  3E97               	addlw	151
  6488  1FC1  1803               	skipnc
  6489  1FC2  2FC4               	goto	u4871
  6490  1FC3  2FC5               	goto	u4870
  6491  1FC4                     u4871:
  6492  1FC4  2FC6               	goto	l3088
  6493  1FC5                     u4870:
  6494  1FC5  2F91               	goto	l3068
  6495  1FC6                     l3088:
  6496  1FC6  3001               	movlw	1
  6497  1FC7                     u4885:
  6498  1FC7  1003               	clrc
  6499  1FC8  0CD8               	rrf	___fltol@f1+3,f
  6500  1FC9  0CD7               	rrf	___fltol@f1+2,f
  6501  1FCA  0CD6               	rrf	___fltol@f1+1,f
  6502  1FCB  0CD5               	rrf	___fltol@f1,f
  6503  1FCC  3EFF               	addlw	-1
  6504  1FCD  1D03               	skipz
  6505  1FCE  2FC7               	goto	u4885
  6506  1FCF  3001               	movlw	1
  6507  1FD0  00D9               	movwf	??___fltol
  6508  1FD1  0859               	movf	??___fltol,w
  6509  1FD2  07DF               	addwf	___fltol@exp1,f
  6510  1FD3  1D03               	btfss	3,2
  6511  1FD4  2FD6               	goto	u4891
  6512  1FD5  2FD7               	goto	u4890
  6513  1FD6                     u4891:
  6514  1FD6  2FC6               	goto	l3088
  6515  1FD7                     u4890:
  6516  1FD7  2FEF               	goto	l3098
  6517  1FD8                     l3090:
  6518  1FD8  3020               	movlw	32
  6519  1FD9  025F               	subwf	___fltol@exp1,w
  6520  1FDA  1C03               	skipc
  6521  1FDB  2FDD               	goto	u4901
  6522  1FDC  2FDE               	goto	u4900
  6523  1FDD                     u4901:
  6524  1FDD  2FEA               	goto	l609
  6525  1FDE                     u4900:
  6526  1FDE  2F91               	goto	l3068
  6527  1FDF                     l3096:
  6528  1FDF  3001               	movlw	1
  6529  1FE0  00D9               	movwf	??___fltol
  6530  1FE1                     u4915:
  6531  1FE1  1003               	clrc
  6532  1FE2  0DD5               	rlf	___fltol@f1,f
  6533  1FE3  0DD6               	rlf	___fltol@f1+1,f
  6534  1FE4  0DD7               	rlf	___fltol@f1+2,f
  6535  1FE5  0DD8               	rlf	___fltol@f1+3,f
  6536  1FE6  0BD9               	decfsz	??___fltol,f
  6537  1FE7  2FE1               	goto	u4915
  6538  1FE8  3001               	movlw	1
  6539  1FE9  02DF               	subwf	___fltol@exp1,f
  6540  1FEA                     l609:
  6541  1FEA  085F               	movf	___fltol@exp1,w
  6542  1FEB  1D03               	btfss	3,2
  6543  1FEC  2FEE               	goto	u4921
  6544  1FED  2FEF               	goto	u4920
  6545  1FEE                     u4921:
  6546  1FEE  2FDF               	goto	l3096
  6547  1FEF                     u4920:
  6548  1FEF                     l3098:
  6549  1FEF  085E               	movf	___fltol@sign1,w
  6550  1FF0  1903               	btfsc	3,2
  6551  1FF1  2FF3               	goto	u4931
  6552  1FF2  2FF4               	goto	u4930
  6553  1FF3                     u4931:
  6554  1FF3  2FFF               	goto	l612
  6555  1FF4                     u4930:
  6556  1FF4                     l3100:
  6557  1FF4  09D5               	comf	___fltol@f1,f
  6558  1FF5  09D6               	comf	___fltol@f1+1,f
  6559  1FF6  09D7               	comf	___fltol@f1+2,f
  6560  1FF7  09D8               	comf	___fltol@f1+3,f
  6561  1FF8  0AD5               	incf	___fltol@f1,f
  6562  1FF9  1903               	skipnz
  6563  1FFA  0AD6               	incf	___fltol@f1+1,f
  6564  1FFB  1903               	skipnz
  6565  1FFC  0AD7               	incf	___fltol@f1+2,f
  6566  1FFD  1903               	skipnz
  6567  1FFE  0AD8               	incf	___fltol@f1+3,f
  6568  1FFF                     l612:
  6569  1FFF                     l602:
  6570  1FFF  0008               	return
  6571  2000                     __end_of___fltol:
  6572                           
  6573                           	psect	text17
  6574  1DB6                     __ptext17:	
  6575 ;; *************** function ___flsub *****************
  6576 ;; Defined at:
  6577 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  a               4    0[BANK1 ] long 
  6580 ;;  b               4    4[BANK1 ] long 
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;		None
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  4    0[BANK1 ] long 
  6585 ;; Registers used:
  6586 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6592 ;;      Params:         0       0       8       0       0
  6593 ;;      Locals:         0       0       0       0       0
  6594 ;;      Temps:          0       0       0       0       0
  6595 ;;      Totals:         0       0       8       0       0
  6596 ;;Total ram usage:        8 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    2
  6599 ;; This function calls:
  6600 ;;		___fladd
  6601 ;; This function is called by:
  6602 ;;		_sprintf
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           
  6607                           ;psect for function ___flsub
  6608  1DB6                     ___flsub:
  6609  1DB6                     l3122:	
  6610                           ;incstack = 0
  6611                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6612                           
  6613  1DB6  3080               	movlw	128
  6614  1DB7  1683               	bsf	3,5	;RP0=1, select bank1
  6615  1DB8  1303               	bcf	3,6	;RP1=0, select bank1
  6616  1DB9  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6617  1DBA                     l3124:
  6618  1DBA  0827               	movf	(___flsub@b+3)^(0+128),w
  6619  1DBB  1283               	bcf	3,5	;RP0=0, select bank0
  6620  1DBC  1303               	bcf	3,6	;RP1=0, select bank0
  6621  1DBD  00D9               	movwf	___fladd@b+3
  6622  1DBE  1683               	bsf	3,5	;RP0=1, select bank1
  6623  1DBF  1303               	bcf	3,6	;RP1=0, select bank1
  6624  1DC0  0826               	movf	(___flsub@b+2)^(0+128),w
  6625  1DC1  1283               	bcf	3,5	;RP0=0, select bank0
  6626  1DC2  1303               	bcf	3,6	;RP1=0, select bank0
  6627  1DC3  00D8               	movwf	___fladd@b+2
  6628  1DC4  1683               	bsf	3,5	;RP0=1, select bank1
  6629  1DC5  1303               	bcf	3,6	;RP1=0, select bank1
  6630  1DC6  0825               	movf	(___flsub@b+1)^(0+128),w
  6631  1DC7  1283               	bcf	3,5	;RP0=0, select bank0
  6632  1DC8  1303               	bcf	3,6	;RP1=0, select bank0
  6633  1DC9  00D7               	movwf	___fladd@b+1
  6634  1DCA  1683               	bsf	3,5	;RP0=1, select bank1
  6635  1DCB  1303               	bcf	3,6	;RP1=0, select bank1
  6636  1DCC  0824               	movf	___flsub@b^(0+128),w
  6637  1DCD  1283               	bcf	3,5	;RP0=0, select bank0
  6638  1DCE  1303               	bcf	3,6	;RP1=0, select bank0
  6639  1DCF  00D6               	movwf	___fladd@b
  6640  1DD0  1683               	bsf	3,5	;RP0=1, select bank1
  6641  1DD1  1303               	bcf	3,6	;RP1=0, select bank1
  6642  1DD2  0823               	movf	(___flsub@a+3)^(0+128),w
  6643  1DD3  1283               	bcf	3,5	;RP0=0, select bank0
  6644  1DD4  1303               	bcf	3,6	;RP1=0, select bank0
  6645  1DD5  00DD               	movwf	___fladd@a+3
  6646  1DD6  1683               	bsf	3,5	;RP0=1, select bank1
  6647  1DD7  1303               	bcf	3,6	;RP1=0, select bank1
  6648  1DD8  0822               	movf	(___flsub@a+2)^(0+128),w
  6649  1DD9  1283               	bcf	3,5	;RP0=0, select bank0
  6650  1DDA  1303               	bcf	3,6	;RP1=0, select bank0
  6651  1DDB  00DC               	movwf	___fladd@a+2
  6652  1DDC  1683               	bsf	3,5	;RP0=1, select bank1
  6653  1DDD  1303               	bcf	3,6	;RP1=0, select bank1
  6654  1DDE  0821               	movf	(___flsub@a+1)^(0+128),w
  6655  1DDF  1283               	bcf	3,5	;RP0=0, select bank0
  6656  1DE0  1303               	bcf	3,6	;RP1=0, select bank0
  6657  1DE1  00DB               	movwf	___fladd@a+1
  6658  1DE2  1683               	bsf	3,5	;RP0=1, select bank1
  6659  1DE3  1303               	bcf	3,6	;RP1=0, select bank1
  6660  1DE4  0820               	movf	___flsub@a^(0+128),w
  6661  1DE5  1283               	bcf	3,5	;RP0=0, select bank0
  6662  1DE6  1303               	bcf	3,6	;RP1=0, select bank0
  6663  1DE7  00DA               	movwf	___fladd@a
  6664  1DE8  120A  118A  254F  160A  158A  	fcall	___fladd
  6665  1DED  1283               	bcf	3,5	;RP0=0, select bank0
  6666  1DEE  1303               	bcf	3,6	;RP1=0, select bank0
  6667  1DEF  0859               	movf	?___fladd+3,w
  6668  1DF0  1683               	bsf	3,5	;RP0=1, select bank1
  6669  1DF1  1303               	bcf	3,6	;RP1=0, select bank1
  6670  1DF2  00A3               	movwf	(?___flsub+3)^(0+128)
  6671  1DF3  1283               	bcf	3,5	;RP0=0, select bank0
  6672  1DF4  1303               	bcf	3,6	;RP1=0, select bank0
  6673  1DF5  0858               	movf	?___fladd+2,w
  6674  1DF6  1683               	bsf	3,5	;RP0=1, select bank1
  6675  1DF7  1303               	bcf	3,6	;RP1=0, select bank1
  6676  1DF8  00A2               	movwf	(?___flsub+2)^(0+128)
  6677  1DF9  1283               	bcf	3,5	;RP0=0, select bank0
  6678  1DFA  1303               	bcf	3,6	;RP1=0, select bank0
  6679  1DFB  0857               	movf	?___fladd+1,w
  6680  1DFC  1683               	bsf	3,5	;RP0=1, select bank1
  6681  1DFD  1303               	bcf	3,6	;RP1=0, select bank1
  6682  1DFE  00A1               	movwf	(?___flsub+1)^(0+128)
  6683  1DFF  1283               	bcf	3,5	;RP0=0, select bank0
  6684  1E00  1303               	bcf	3,6	;RP1=0, select bank0
  6685  1E01  0856               	movf	?___fladd,w
  6686  1E02  1683               	bsf	3,5	;RP0=1, select bank1
  6687  1E03  1303               	bcf	3,6	;RP1=0, select bank1
  6688  1E04  00A0               	movwf	?___flsub^(0+128)
  6689  1E05                     l772:
  6690  1E05  0008               	return
  6691  1E06                     __end_of___flsub:
  6692                           
  6693                           	psect	text18
  6694  054F                     __ptext18:	
  6695 ;; *************** function ___fladd *****************
  6696 ;; Defined at:
  6697 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;  b               4   54[BANK0 ] long 
  6700 ;;  a               4   58[BANK0 ] long 
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;  grs             1   73[BANK0 ] unsigned char 
  6703 ;;  bexp            1   72[BANK0 ] unsigned char 
  6704 ;;  aexp            1   71[BANK0 ] unsigned char 
  6705 ;;  signs           1   70[BANK0 ] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  4   54[BANK0 ] unsigned char 
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0, btemp+1
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6715 ;;      Params:         0       8       0       0       0
  6716 ;;      Locals:         0       4       0       0       0
  6717 ;;      Temps:          0       8       0       0       0
  6718 ;;      Totals:         0      20       0       0       0
  6719 ;;Total ram usage:       20 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    1
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		_sprintf
  6726 ;;		___flsub
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           
  6731                           ;psect for function ___fladd
  6732  054F                     ___fladd:
  6733  054F                     l2476:	
  6734                           ;incstack = 0
  6735                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6736                           
  6737  054F  1283               	bcf	3,5	;RP0=0, select bank0
  6738  0550  1303               	bcf	3,6	;RP1=0, select bank0
  6739  0551  0859               	movf	___fladd@b+3,w
  6740  0552  3980               	andlw	128
  6741  0553  00DE               	movwf	??___fladd
  6742  0554  085E               	movf	??___fladd,w
  6743  0555  00E6               	movwf	___fladd@signs
  6744  0556                     l2478:
  6745  0556  0859               	movf	___fladd@b+3,w
  6746  0557  00DE               	movwf	??___fladd
  6747  0558  075E               	addwf	??___fladd,w
  6748  0559  00DF               	movwf	??___fladd+1
  6749  055A  085F               	movf	??___fladd+1,w
  6750  055B  00E8               	movwf	___fladd@bexp
  6751  055C                     l2480:
  6752  055C  1FD8               	btfss	___fladd@b+2,7
  6753  055D  2D5F               	goto	u3251
  6754  055E  2D60               	goto	u3250
  6755  055F                     u3251:
  6756  055F  2D61               	goto	l2484
  6757  0560                     u3250:
  6758  0560                     l2482:
  6759  0560  1468               	bsf	___fladd@bexp,0
  6760  0561                     l2484:
  6761  0561  0868               	movf	___fladd@bexp,w
  6762  0562  1903               	btfsc	3,2
  6763  0563  2D65               	goto	u3261
  6764  0564  2D66               	goto	u3260
  6765  0565                     u3261:
  6766  0565  2D76               	goto	l2494
  6767  0566                     u3260:
  6768  0566                     l2486:
  6769  0566  0A68               	incf	___fladd@bexp,w
  6770  0567  1D03               	btfss	3,2
  6771  0568  2D6A               	goto	u3271
  6772  0569  2D6B               	goto	u3270
  6773  056A                     u3271:
  6774  056A  2D73               	goto	l2490
  6775  056B                     u3270:
  6776  056B                     l2488:
  6777  056B  3000               	movlw	0
  6778  056C  00D9               	movwf	___fladd@b+3
  6779  056D  3000               	movlw	0
  6780  056E  00D8               	movwf	___fladd@b+2
  6781  056F  3000               	movlw	0
  6782  0570  00D7               	movwf	___fladd@b+1
  6783  0571  3000               	movlw	0
  6784  0572  00D6               	movwf	___fladd@b
  6785  0573                     l2490:
  6786  0573  17D8               	bsf	___fladd@b+2,7
  6787  0574                     l2492:
  6788  0574  01D9               	clrf	___fladd@b+3
  6789  0575  2D7E               	goto	l2496
  6790  0576                     l2494:
  6791  0576  3000               	movlw	0
  6792  0577  00D9               	movwf	___fladd@b+3
  6793  0578  3000               	movlw	0
  6794  0579  00D8               	movwf	___fladd@b+2
  6795  057A  3000               	movlw	0
  6796  057B  00D7               	movwf	___fladd@b+1
  6797  057C  3000               	movlw	0
  6798  057D  00D6               	movwf	___fladd@b
  6799  057E                     l2496:
  6800  057E  085D               	movf	___fladd@a+3,w
  6801  057F  3980               	andlw	128
  6802  0580  00DE               	movwf	??___fladd
  6803  0581  085E               	movf	??___fladd,w
  6804  0582  00E7               	movwf	___fladd@aexp
  6805  0583                     l2498:
  6806  0583  0867               	movf	___fladd@aexp,w
  6807  0584  0666               	xorwf	___fladd@signs,w
  6808  0585  1903               	skipnz
  6809  0586  2D88               	goto	u3281
  6810  0587  2D89               	goto	u3280
  6811  0588                     u3281:
  6812  0588  2D8A               	goto	l2502
  6813  0589                     u3280:
  6814  0589                     l2500:
  6815  0589  1766               	bsf	___fladd@signs,6
  6816  058A                     l2502:
  6817  058A  085D               	movf	___fladd@a+3,w
  6818  058B  00DE               	movwf	??___fladd
  6819  058C  075E               	addwf	??___fladd,w
  6820  058D  00DF               	movwf	??___fladd+1
  6821  058E  085F               	movf	??___fladd+1,w
  6822  058F  00E7               	movwf	___fladd@aexp
  6823  0590                     l2504:
  6824  0590  1FDC               	btfss	___fladd@a+2,7
  6825  0591  2D93               	goto	u3291
  6826  0592  2D94               	goto	u3290
  6827  0593                     u3291:
  6828  0593  2D95               	goto	l2508
  6829  0594                     u3290:
  6830  0594                     l2506:
  6831  0594  1467               	bsf	___fladd@aexp,0
  6832  0595                     l2508:
  6833  0595  0867               	movf	___fladd@aexp,w
  6834  0596  1903               	btfsc	3,2
  6835  0597  2D99               	goto	u3301
  6836  0598  2D9A               	goto	u3300
  6837  0599                     u3301:
  6838  0599  2DAA               	goto	l2518
  6839  059A                     u3300:
  6840  059A                     l2510:
  6841  059A  0A67               	incf	___fladd@aexp,w
  6842  059B  1D03               	btfss	3,2
  6843  059C  2D9E               	goto	u3311
  6844  059D  2D9F               	goto	u3310
  6845  059E                     u3311:
  6846  059E  2DA7               	goto	l2514
  6847  059F                     u3310:
  6848  059F                     l2512:
  6849  059F  3000               	movlw	0
  6850  05A0  00DD               	movwf	___fladd@a+3
  6851  05A1  3000               	movlw	0
  6852  05A2  00DC               	movwf	___fladd@a+2
  6853  05A3  3000               	movlw	0
  6854  05A4  00DB               	movwf	___fladd@a+1
  6855  05A5  3000               	movlw	0
  6856  05A6  00DA               	movwf	___fladd@a
  6857  05A7                     l2514:
  6858  05A7  17DC               	bsf	___fladd@a+2,7
  6859  05A8                     l2516:
  6860  05A8  01DD               	clrf	___fladd@a+3
  6861  05A9  2DB2               	goto	l726
  6862  05AA                     l2518:
  6863  05AA  3000               	movlw	0
  6864  05AB  00DD               	movwf	___fladd@a+3
  6865  05AC  3000               	movlw	0
  6866  05AD  00DC               	movwf	___fladd@a+2
  6867  05AE  3000               	movlw	0
  6868  05AF  00DB               	movwf	___fladd@a+1
  6869  05B0  3000               	movlw	0
  6870  05B1  00DA               	movwf	___fladd@a
  6871  05B2                     l726:
  6872  05B2  0868               	movf	___fladd@bexp,w
  6873  05B3  0267               	subwf	___fladd@aexp,w
  6874  05B4  1803               	skipnc
  6875  05B5  2DB7               	goto	u3321
  6876  05B6  2DB8               	goto	u3320
  6877  05B7                     u3321:
  6878  05B7  2DFC               	goto	l2554
  6879  05B8                     u3320:
  6880  05B8                     l2520:
  6881  05B8  1F66               	btfss	___fladd@signs,6
  6882  05B9  2DBB               	goto	u3331
  6883  05BA  2DBC               	goto	u3330
  6884  05BB                     u3331:
  6885  05BB  2DC0               	goto	l2524
  6886  05BC                     u3330:
  6887  05BC                     l2522:
  6888  05BC  3080               	movlw	128
  6889  05BD  00DE               	movwf	??___fladd
  6890  05BE  085E               	movf	??___fladd,w
  6891  05BF  06E6               	xorwf	___fladd@signs,f
  6892  05C0                     l2524:
  6893  05C0  0868               	movf	___fladd@bexp,w
  6894  05C1  00DE               	movwf	??___fladd
  6895  05C2  085E               	movf	??___fladd,w
  6896  05C3  00E9               	movwf	___fladd@grs
  6897  05C4                     l2526:
  6898  05C4  0867               	movf	___fladd@aexp,w
  6899  05C5  00DE               	movwf	??___fladd
  6900  05C6  085E               	movf	??___fladd,w
  6901  05C7  00E8               	movwf	___fladd@bexp
  6902  05C8                     l2528:
  6903  05C8  0869               	movf	___fladd@grs,w
  6904  05C9  00DE               	movwf	??___fladd
  6905  05CA  085E               	movf	??___fladd,w
  6906  05CB  00E7               	movwf	___fladd@aexp
  6907  05CC                     l2530:
  6908  05CC  0856               	movf	___fladd@b,w
  6909  05CD  00DE               	movwf	??___fladd
  6910  05CE  085E               	movf	??___fladd,w
  6911  05CF  00E9               	movwf	___fladd@grs
  6912  05D0                     l2532:
  6913  05D0  085A               	movf	___fladd@a,w
  6914  05D1  00DE               	movwf	??___fladd
  6915  05D2  085E               	movf	??___fladd,w
  6916  05D3  00D6               	movwf	___fladd@b
  6917  05D4                     l2534:
  6918  05D4  0869               	movf	___fladd@grs,w
  6919  05D5  00DE               	movwf	??___fladd
  6920  05D6  085E               	movf	??___fladd,w
  6921  05D7  00DA               	movwf	___fladd@a
  6922  05D8                     l2536:
  6923  05D8  0857               	movf	___fladd@b+1,w
  6924  05D9  00DE               	movwf	??___fladd
  6925  05DA  085E               	movf	??___fladd,w
  6926  05DB  00E9               	movwf	___fladd@grs
  6927  05DC                     l2538:
  6928  05DC  085B               	movf	___fladd@a+1,w
  6929  05DD  00DE               	movwf	??___fladd
  6930  05DE  085E               	movf	??___fladd,w
  6931  05DF  00D7               	movwf	___fladd@b+1
  6932  05E0                     l2540:
  6933  05E0  0869               	movf	___fladd@grs,w
  6934  05E1  00DE               	movwf	??___fladd
  6935  05E2  085E               	movf	??___fladd,w
  6936  05E3  00DB               	movwf	___fladd@a+1
  6937  05E4                     l2542:
  6938  05E4  0858               	movf	___fladd@b+2,w
  6939  05E5  00DE               	movwf	??___fladd
  6940  05E6  085E               	movf	??___fladd,w
  6941  05E7  00E9               	movwf	___fladd@grs
  6942  05E8                     l2544:
  6943  05E8  085C               	movf	___fladd@a+2,w
  6944  05E9  00DE               	movwf	??___fladd
  6945  05EA  085E               	movf	??___fladd,w
  6946  05EB  00D8               	movwf	___fladd@b+2
  6947  05EC                     l2546:
  6948  05EC  0869               	movf	___fladd@grs,w
  6949  05ED  00DE               	movwf	??___fladd
  6950  05EE  085E               	movf	??___fladd,w
  6951  05EF  00DC               	movwf	___fladd@a+2
  6952  05F0                     l2548:
  6953  05F0  0859               	movf	___fladd@b+3,w
  6954  05F1  00DE               	movwf	??___fladd
  6955  05F2  085E               	movf	??___fladd,w
  6956  05F3  00E9               	movwf	___fladd@grs
  6957  05F4                     l2550:
  6958  05F4  085D               	movf	___fladd@a+3,w
  6959  05F5  00DE               	movwf	??___fladd
  6960  05F6  085E               	movf	??___fladd,w
  6961  05F7  00D9               	movwf	___fladd@b+3
  6962  05F8                     l2552:
  6963  05F8  0869               	movf	___fladd@grs,w
  6964  05F9  00DE               	movwf	??___fladd
  6965  05FA  085E               	movf	??___fladd,w
  6966  05FB  00DD               	movwf	___fladd@a+3
  6967  05FC                     l2554:
  6968  05FC  01E9               	clrf	___fladd@grs
  6969  05FD                     l2556:
  6970  05FD  0867               	movf	___fladd@aexp,w
  6971  05FE  00DE               	movwf	??___fladd
  6972  05FF  01DF               	clrf	??___fladd+1
  6973  0600  085F               	movf	??___fladd+1,w
  6974  0601  00E1               	movwf	??___fladd+3
  6975  0602  0868               	movf	___fladd@bexp,w
  6976  0603  025E               	subwf	??___fladd,w
  6977  0604  00E0               	movwf	??___fladd+2
  6978  0605  1C03               	skipc
  6979  0606  03E1               	decf	??___fladd+3,f
  6980  0607  0861               	movf	??___fladd+3,w
  6981  0608  3A80               	xorlw	128
  6982  0609  00FF               	movwf	btemp+1
  6983  060A  3080               	movlw	128
  6984  060B  027F               	subwf	btemp+1,w
  6985  060C  1D03               	skipz
  6986  060D  2E10               	goto	u3345
  6987  060E  301A               	movlw	26
  6988  060F  0260               	subwf	??___fladd+2,w
  6989  0610                     u3345:
  6990  0610  1C03               	skipc
  6991  0611  2E13               	goto	u3341
  6992  0612  2E14               	goto	u3340
  6993  0613                     u3341:
  6994  0613  2E51               	goto	l2572
  6995  0614                     u3340:
  6996  0614                     l2558:
  6997  0614  1283               	bcf	3,5	;RP0=0, select bank0
  6998  0615  1303               	bcf	3,6	;RP1=0, select bank0
  6999  0616  0859               	movf	___fladd@b+3,w
  7000  0617  0458               	iorwf	___fladd@b+2,w
  7001  0618  0457               	iorwf	___fladd@b+1,w
  7002  0619  0456               	iorwf	___fladd@b,w
  7003  061A  1D03               	skipz
  7004  061B  2E1D               	goto	u3351
  7005  061C  2E1F               	goto	u3350
  7006  061D                     u3351:
  7007  061D  3001               	movlw	1
  7008  061E  2E20               	goto	u3360
  7009  061F                     u3350:
  7010  061F  3000               	movlw	0
  7011  0620                     u3360:
  7012  0620  00DE               	movwf	??___fladd
  7013  0621  085E               	movf	??___fladd,w
  7014  0622  00E9               	movwf	___fladd@grs
  7015  0623  3000               	movlw	0
  7016  0624  00D9               	movwf	___fladd@b+3
  7017  0625  3000               	movlw	0
  7018  0626  00D8               	movwf	___fladd@b+2
  7019  0627  3000               	movlw	0
  7020  0628  00D7               	movwf	___fladd@b+1
  7021  0629  3000               	movlw	0
  7022  062A  00D6               	movwf	___fladd@b
  7023  062B  0867               	movf	___fladd@aexp,w
  7024  062C  00DE               	movwf	??___fladd
  7025  062D  085E               	movf	??___fladd,w
  7026  062E  00E8               	movwf	___fladd@bexp
  7027  062F  2E59               	goto	l730
  7028  0630                     l732:
  7029  0630  1C69               	btfss	___fladd@grs,0
  7030  0631  2E33               	goto	u3371
  7031  0632  2E34               	goto	u3370
  7032  0633                     u3371:
  7033  0633  2E3D               	goto	l2562
  7034  0634                     u3370:
  7035  0634                     l2560:
  7036  0634  0869               	movf	___fladd@grs,w
  7037  0635  00DE               	movwf	??___fladd
  7038  0636  1003               	clrc
  7039  0637  0C5E               	rrf	??___fladd,w
  7040  0638  3801               	iorlw	1
  7041  0639  00DF               	movwf	??___fladd+1
  7042  063A  085F               	movf	??___fladd+1,w
  7043  063B  00E9               	movwf	___fladd@grs
  7044  063C  2E3F               	goto	l2564
  7045  063D                     l2562:
  7046  063D  1003               	clrc
  7047  063E  0CE9               	rrf	___fladd@grs,f
  7048  063F                     l2564:
  7049  063F  1C56               	btfss	___fladd@b,0
  7050  0640  2E42               	goto	u3381
  7051  0641  2E43               	goto	u3380
  7052  0642                     u3381:
  7053  0642  2E44               	goto	l2568
  7054  0643                     u3380:
  7055  0643                     l2566:
  7056  0643  17E9               	bsf	___fladd@grs,7
  7057  0644                     l2568:
  7058  0644  3001               	movlw	1
  7059  0645  00DE               	movwf	??___fladd
  7060  0646                     u3395:
  7061  0646  0D59               	rlf	___fladd@b+3,w
  7062  0647  0CD9               	rrf	___fladd@b+3,f
  7063  0648  0CD8               	rrf	___fladd@b+2,f
  7064  0649  0CD7               	rrf	___fladd@b+1,f
  7065  064A  0CD6               	rrf	___fladd@b,f
  7066  064B  0BDE               	decfsz	??___fladd& (0+127),f
  7067  064C  2E46               	goto	u3395
  7068  064D                     l2570:
  7069  064D  3001               	movlw	1
  7070  064E  00DE               	movwf	??___fladd
  7071  064F  085E               	movf	??___fladd,w
  7072  0650  07E8               	addwf	___fladd@bexp,f
  7073  0651                     l2572:
  7074  0651  1283               	bcf	3,5	;RP0=0, select bank0
  7075  0652  1303               	bcf	3,6	;RP1=0, select bank0
  7076  0653  0867               	movf	___fladd@aexp,w
  7077  0654  0268               	subwf	___fladd@bexp,w
  7078  0655  1C03               	skipc
  7079  0656  2E58               	goto	u3401
  7080  0657  2E59               	goto	u3400
  7081  0658                     u3401:
  7082  0658  2E30               	goto	l732
  7083  0659                     u3400:
  7084  0659                     l730:
  7085  0659  1B66               	btfsc	___fladd@signs,6
  7086  065A  2E5C               	goto	u3411
  7087  065B  2E5D               	goto	u3410
  7088  065C                     u3411:
  7089  065C  2EA8               	goto	l2598
  7090  065D                     u3410:
  7091  065D                     l2574:
  7092  065D  0868               	movf	___fladd@bexp,w
  7093  065E  1D03               	btfss	3,2
  7094  065F  2E61               	goto	u3421
  7095  0660  2E62               	goto	u3420
  7096  0661                     u3421:
  7097  0661  2E6B               	goto	l2580
  7098  0662                     u3420:
  7099  0662                     l2576:
  7100  0662  3000               	movlw	0
  7101  0663  00D9               	movwf	?___fladd+3
  7102  0664  3000               	movlw	0
  7103  0665  00D8               	movwf	?___fladd+2
  7104  0666  3000               	movlw	0
  7105  0667  00D7               	movwf	?___fladd+1
  7106  0668  3000               	movlw	0
  7107  0669  00D6               	movwf	?___fladd
  7108  066A  2FD6               	goto	l739
  7109  066B                     l2580:
  7110  066B  085A               	movf	___fladd@a,w
  7111  066C  07D6               	addwf	___fladd@b,f
  7112  066D  085B               	movf	___fladd@a+1,w
  7113  066E  1103               	clrz
  7114  066F  1803               	skipnc
  7115  0670  3E01               	addlw	1
  7116  0671  1903               	skipnz
  7117  0672  2E74               	goto	u3431
  7118  0673  07D7               	addwf	___fladd@b+1,f
  7119  0674                     u3431:
  7120  0674  085C               	movf	___fladd@a+2,w
  7121  0675  1103               	clrz
  7122  0676  1803               	skipnc
  7123  0677  3E01               	addlw	1
  7124  0678  1903               	skipnz
  7125  0679  2E7B               	goto	u3432
  7126  067A  07D8               	addwf	___fladd@b+2,f
  7127  067B                     u3432:
  7128  067B  085D               	movf	___fladd@a+3,w
  7129  067C  1103               	clrz
  7130  067D  1803               	skipnc
  7131  067E  3E01               	addlw	1
  7132  067F  1903               	skipnz
  7133  0680  2E82               	goto	u3433
  7134  0681  07D9               	addwf	___fladd@b+3,f
  7135  0682                     u3433:
  7136  0682                     l2582:
  7137  0682  1C59               	btfss	___fladd@b+3,0
  7138  0683  2E85               	goto	u3441
  7139  0684  2E86               	goto	u3440
  7140  0685                     u3441:
  7141  0685  2F5C               	goto	l2632
  7142  0686                     u3440:
  7143  0686                     l2584:
  7144  0686  1C69               	btfss	___fladd@grs,0
  7145  0687  2E89               	goto	u3451
  7146  0688  2E8A               	goto	u3450
  7147  0689                     u3451:
  7148  0689  2E93               	goto	l2588
  7149  068A                     u3450:
  7150  068A                     l2586:
  7151  068A  0869               	movf	___fladd@grs,w
  7152  068B  00DE               	movwf	??___fladd
  7153  068C  1003               	clrc
  7154  068D  0C5E               	rrf	??___fladd,w
  7155  068E  3801               	iorlw	1
  7156  068F  00DF               	movwf	??___fladd+1
  7157  0690  085F               	movf	??___fladd+1,w
  7158  0691  00E9               	movwf	___fladd@grs
  7159  0692  2E95               	goto	l2590
  7160  0693                     l2588:
  7161  0693  1003               	clrc
  7162  0694  0CE9               	rrf	___fladd@grs,f
  7163  0695                     l2590:
  7164  0695  1C56               	btfss	___fladd@b,0
  7165  0696  2E98               	goto	u3461
  7166  0697  2E99               	goto	u3460
  7167  0698                     u3461:
  7168  0698  2E9A               	goto	l2594
  7169  0699                     u3460:
  7170  0699                     l2592:
  7171  0699  17E9               	bsf	___fladd@grs,7
  7172  069A                     l2594:
  7173  069A  3001               	movlw	1
  7174  069B  00DE               	movwf	??___fladd
  7175  069C                     u3475:
  7176  069C  0D59               	rlf	___fladd@b+3,w
  7177  069D  0CD9               	rrf	___fladd@b+3,f
  7178  069E  0CD8               	rrf	___fladd@b+2,f
  7179  069F  0CD7               	rrf	___fladd@b+1,f
  7180  06A0  0CD6               	rrf	___fladd@b,f
  7181  06A1  0BDE               	decfsz	??___fladd& (0+127),f
  7182  06A2  2E9C               	goto	u3475
  7183  06A3                     l2596:
  7184  06A3  3001               	movlw	1
  7185  06A4  00DE               	movwf	??___fladd
  7186  06A5  085E               	movf	??___fladd,w
  7187  06A6  07E8               	addwf	___fladd@bexp,f
  7188  06A7  2F5C               	goto	l2632
  7189  06A8                     l2598:
  7190  06A8  0859               	movf	___fladd@b+3,w
  7191  06A9  3A80               	xorlw	128
  7192  06AA  00FF               	movwf	btemp+1
  7193  06AB  085D               	movf	___fladd@a+3,w
  7194  06AC  3A80               	xorlw	128
  7195  06AD  027F               	subwf	btemp+1,w
  7196  06AE  1D03               	skipz
  7197  06AF  2EBA               	goto	u3483
  7198  06B0  085C               	movf	___fladd@a+2,w
  7199  06B1  0258               	subwf	___fladd@b+2,w
  7200  06B2  1D03               	skipz
  7201  06B3  2EBA               	goto	u3483
  7202  06B4  085B               	movf	___fladd@a+1,w
  7203  06B5  0257               	subwf	___fladd@b+1,w
  7204  06B6  1D03               	skipz
  7205  06B7  2EBA               	goto	u3483
  7206  06B8  085A               	movf	___fladd@a,w
  7207  06B9  0256               	subwf	___fladd@b,w
  7208  06BA                     u3483:
  7209  06BA  1803               	skipnc
  7210  06BB  2EBD               	goto	u3481
  7211  06BC  2EBE               	goto	u3480
  7212  06BD                     u3481:
  7213  06BD  2F16               	goto	l2608
  7214  06BE                     u3480:
  7215  06BE                     l2600:
  7216  06BE  30FF               	movlw	255
  7217  06BF  00DE               	movwf	??___fladd
  7218  06C0  30FF               	movlw	255
  7219  06C1  00DF               	movwf	??___fladd+1
  7220  06C2  30FF               	movlw	255
  7221  06C3  00E0               	movwf	??___fladd+2
  7222  06C4  30FF               	movlw	255
  7223  06C5  00E1               	movwf	??___fladd+3
  7224  06C6  085A               	movf	___fladd@a,w
  7225  06C7  00E2               	movwf	??___fladd+4
  7226  06C8  085B               	movf	___fladd@a+1,w
  7227  06C9  00E3               	movwf	??___fladd+5
  7228  06CA  085C               	movf	___fladd@a+2,w
  7229  06CB  00E4               	movwf	??___fladd+6
  7230  06CC  085D               	movf	___fladd@a+3,w
  7231  06CD  00E5               	movwf	??___fladd+7
  7232  06CE  0856               	movf	___fladd@b,w
  7233  06CF  02E2               	subwf	??___fladd+4,f
  7234  06D0  0857               	movf	___fladd@b+1,w
  7235  06D1  1C03               	skipc
  7236  06D2  0F57               	incfsz	___fladd@b+1,w
  7237  06D3  2ED5               	goto	u3491
  7238  06D4  2ED6               	goto	u3492
  7239  06D5                     u3491:
  7240  06D5  02E3               	subwf	??___fladd+5,f
  7241  06D6                     u3492:
  7242  06D6  0858               	movf	___fladd@b+2,w
  7243  06D7  1C03               	skipc
  7244  06D8  0F58               	incfsz	___fladd@b+2,w
  7245  06D9  2EDB               	goto	u3493
  7246  06DA  2EDC               	goto	u3494
  7247  06DB                     u3493:
  7248  06DB  02E4               	subwf	??___fladd+6,f
  7249  06DC                     u3494:
  7250  06DC  0859               	movf	___fladd@b+3,w
  7251  06DD  1C03               	skipc
  7252  06DE  0F59               	incfsz	___fladd@b+3,w
  7253  06DF  2EE1               	goto	u3495
  7254  06E0  2EE2               	goto	u3496
  7255  06E1                     u3495:
  7256  06E1  02E5               	subwf	??___fladd+7,f
  7257  06E2                     u3496:
  7258  06E2  0862               	movf	??___fladd+4,w
  7259  06E3  07DE               	addwf	??___fladd,f
  7260  06E4  0863               	movf	??___fladd+5,w
  7261  06E5  1803               	skipnc
  7262  06E6  0F63               	incfsz	??___fladd+5,w
  7263  06E7  2EE9               	goto	u3500
  7264  06E8  2EEA               	goto	u3501
  7265  06E9                     u3500:
  7266  06E9  07DF               	addwf	??___fladd+1,f
  7267  06EA                     u3501:
  7268  06EA  0864               	movf	??___fladd+6,w
  7269  06EB  1803               	skipnc
  7270  06EC  0F64               	incfsz	??___fladd+6,w
  7271  06ED  2EEF               	goto	u3502
  7272  06EE  2EF0               	goto	u3503
  7273  06EF                     u3502:
  7274  06EF  07E0               	addwf	??___fladd+2,f
  7275  06F0                     u3503:
  7276  06F0  0865               	movf	??___fladd+7,w
  7277  06F1  1803               	skipnc
  7278  06F2  0A65               	incf	??___fladd+7,w
  7279  06F3  07E1               	addwf	??___fladd+3,f
  7280  06F4  0861               	movf	??___fladd+3,w
  7281  06F5  00D9               	movwf	___fladd@b+3
  7282  06F6  0860               	movf	??___fladd+2,w
  7283  06F7  00D8               	movwf	___fladd@b+2
  7284  06F8  085F               	movf	??___fladd+1,w
  7285  06F9  00D7               	movwf	___fladd@b+1
  7286  06FA  085E               	movf	??___fladd,w
  7287  06FB  00D6               	movwf	___fladd@b
  7288  06FC                     l2602:
  7289  06FC  3080               	movlw	128
  7290  06FD  00DE               	movwf	??___fladd
  7291  06FE  085E               	movf	??___fladd,w
  7292  06FF  06E6               	xorwf	___fladd@signs,f
  7293  0700  09E9               	comf	___fladd@grs,f
  7294  0701  0AE9               	incf	___fladd@grs,f
  7295  0702                     l2604:
  7296  0702  0869               	movf	___fladd@grs,w
  7297  0703  1D03               	btfss	3,2
  7298  0704  2F06               	goto	u3511
  7299  0705  2F07               	goto	u3510
  7300  0706                     u3511:
  7301  0706  2F24               	goto	l747
  7302  0707                     u3510:
  7303  0707                     l2606:
  7304  0707  3001               	movlw	1
  7305  0708  07D6               	addwf	___fladd@b,f
  7306  0709  3000               	movlw	0
  7307  070A  1803               	skipnc
  7308  070B  3001               	movlw	1
  7309  070C  07D7               	addwf	___fladd@b+1,f
  7310  070D  3000               	movlw	0
  7311  070E  1803               	skipnc
  7312  070F  3001               	movlw	1
  7313  0710  07D8               	addwf	___fladd@b+2,f
  7314  0711  3000               	movlw	0
  7315  0712  1803               	skipnc
  7316  0713  3001               	movlw	1
  7317  0714  07D9               	addwf	___fladd@b+3,f
  7318  0715  2F24               	goto	l747
  7319  0716                     l2608:
  7320  0716  085A               	movf	___fladd@a,w
  7321  0717  02D6               	subwf	___fladd@b,f
  7322  0718  085B               	movf	___fladd@a+1,w
  7323  0719  1C03               	skipc
  7324  071A  0F5B               	incfsz	___fladd@a+1,w
  7325  071B  02D7               	subwf	___fladd@b+1,f
  7326  071C  085C               	movf	___fladd@a+2,w
  7327  071D  1C03               	skipc
  7328  071E  0F5C               	incfsz	___fladd@a+2,w
  7329  071F  02D8               	subwf	___fladd@b+2,f
  7330  0720  085D               	movf	___fladd@a+3,w
  7331  0721  1C03               	skipc
  7332  0722  0F5D               	incfsz	___fladd@a+3,w
  7333  0723  02D9               	subwf	___fladd@b+3,f
  7334  0724                     l747:
  7335  0724  0859               	movf	___fladd@b+3,w
  7336  0725  0458               	iorwf	___fladd@b+2,w
  7337  0726  0457               	iorwf	___fladd@b+1,w
  7338  0727  0456               	iorwf	___fladd@b,w
  7339  0728  1D03               	skipz
  7340  0729  2F2B               	goto	u3521
  7341  072A  2F2C               	goto	u3520
  7342  072B                     u3521:
  7343  072B  2F58               	goto	l2630
  7344  072C                     u3520:
  7345  072C                     l2610:
  7346  072C  0869               	movf	___fladd@grs,w
  7347  072D  1D03               	btfss	3,2
  7348  072E  2F30               	goto	u3531
  7349  072F  2F31               	goto	u3530
  7350  0730                     u3531:
  7351  0730  2F58               	goto	l2630
  7352  0731                     u3530:
  7353  0731                     l2612:
  7354  0731  3000               	movlw	0
  7355  0732  00D9               	movwf	?___fladd+3
  7356  0733  3000               	movlw	0
  7357  0734  00D8               	movwf	?___fladd+2
  7358  0735  3000               	movlw	0
  7359  0736  00D7               	movwf	?___fladd+1
  7360  0737  3000               	movlw	0
  7361  0738  00D6               	movwf	?___fladd
  7362  0739  2FD6               	goto	l739
  7363  073A                     l2616:
  7364  073A  3001               	movlw	1
  7365  073B  00DE               	movwf	??___fladd
  7366  073C                     u3545:
  7367  073C  1003               	clrc
  7368  073D  0DD6               	rlf	___fladd@b,f
  7369  073E  0DD7               	rlf	___fladd@b+1,f
  7370  073F  0DD8               	rlf	___fladd@b+2,f
  7371  0740  0DD9               	rlf	___fladd@b+3,f
  7372  0741  0BDE               	decfsz	??___fladd,f
  7373  0742  2F3C               	goto	u3545
  7374  0743                     l2618:
  7375  0743  1FE9               	btfss	___fladd@grs,7
  7376  0744  2F46               	goto	u3551
  7377  0745  2F47               	goto	u3550
  7378  0746                     u3551:
  7379  0746  2F48               	goto	l751
  7380  0747                     u3550:
  7381  0747                     l2620:
  7382  0747  1456               	bsf	___fladd@b,0
  7383  0748                     l751:
  7384  0748  1C69               	btfss	___fladd@grs,0
  7385  0749  2F4B               	goto	u3561
  7386  074A  2F4C               	goto	u3560
  7387  074B                     u3561:
  7388  074B  2F4F               	goto	l2624
  7389  074C                     u3560:
  7390  074C                     l2622:
  7391  074C  1403               	setc
  7392  074D  0DE9               	rlf	___fladd@grs,f
  7393  074E  2F51               	goto	l2626
  7394  074F                     l2624:
  7395  074F  1003               	clrc
  7396  0750  0DE9               	rlf	___fladd@grs,f
  7397  0751                     l2626:
  7398  0751  0868               	movf	___fladd@bexp,w
  7399  0752  1903               	btfsc	3,2
  7400  0753  2F55               	goto	u3571
  7401  0754  2F56               	goto	u3570
  7402  0755                     u3571:
  7403  0755  2F58               	goto	l2630
  7404  0756                     u3570:
  7405  0756                     l2628:
  7406  0756  3001               	movlw	1
  7407  0757  02E8               	subwf	___fladd@bexp,f
  7408  0758                     l2630:
  7409  0758  1FD8               	btfss	___fladd@b+2,7
  7410  0759  2F5B               	goto	u3581
  7411  075A  2F5C               	goto	u3580
  7412  075B                     u3581:
  7413  075B  2F3A               	goto	l2616
  7414  075C                     u3580:
  7415  075C                     l2632:
  7416  075C  01E7               	clrf	___fladd@aexp
  7417  075D                     l2634:
  7418  075D  1FE9               	btfss	___fladd@grs,7
  7419  075E  2F60               	goto	u3591
  7420  075F  2F61               	goto	u3590
  7421  0760                     u3591:
  7422  0760  2F6F               	goto	l2642
  7423  0761                     u3590:
  7424  0761                     l2636:
  7425  0761  0869               	movf	___fladd@grs,w
  7426  0762  397F               	andlw	127
  7427  0763  1903               	btfsc	3,2
  7428  0764  2F66               	goto	u3601
  7429  0765  2F67               	goto	u3600
  7430  0766                     u3601:
  7431  0766  2F6A               	goto	l757
  7432  0767                     u3600:
  7433  0767                     l2638:
  7434  0767  01E7               	clrf	___fladd@aexp
  7435  0768  0AE7               	incf	___fladd@aexp,f
  7436  0769  2F6F               	goto	l2642
  7437  076A                     l757:
  7438  076A  1C56               	btfss	___fladd@b,0
  7439  076B  2F6D               	goto	u3611
  7440  076C  2F6E               	goto	u3610
  7441  076D                     u3611:
  7442  076D  2F6F               	goto	l2642
  7443  076E                     u3610:
  7444  076E  2F67               	goto	l2638
  7445  076F                     l2642:
  7446  076F  0867               	movf	___fladd@aexp,w
  7447  0770  1903               	btfsc	3,2
  7448  0771  2F73               	goto	u3621
  7449  0772  2F74               	goto	u3620
  7450  0773                     u3621:
  7451  0773  2FA8               	goto	l760
  7452  0774                     u3620:
  7453  0774                     l2644:
  7454  0774  3001               	movlw	1
  7455  0775  07D6               	addwf	___fladd@b,f
  7456  0776  3000               	movlw	0
  7457  0777  1803               	skipnc
  7458  0778  3001               	movlw	1
  7459  0779  07D7               	addwf	___fladd@b+1,f
  7460  077A  3000               	movlw	0
  7461  077B  1803               	skipnc
  7462  077C  3001               	movlw	1
  7463  077D  07D8               	addwf	___fladd@b+2,f
  7464  077E  3000               	movlw	0
  7465  077F  1803               	skipnc
  7466  0780  3001               	movlw	1
  7467  0781  07D9               	addwf	___fladd@b+3,f
  7468  0782                     l2646:
  7469  0782  1C59               	btfss	___fladd@b+3,0
  7470  0783  2F85               	goto	u3631
  7471  0784  2F86               	goto	u3630
  7472  0785                     u3631:
  7473  0785  2FA8               	goto	l760
  7474  0786                     u3630:
  7475  0786                     l2648:
  7476  0786  0856               	movf	___fladd@b,w
  7477  0787  00DE               	movwf	??___fladd
  7478  0788  0857               	movf	___fladd@b+1,w
  7479  0789  00DF               	movwf	??___fladd+1
  7480  078A  0858               	movf	___fladd@b+2,w
  7481  078B  00E0               	movwf	??___fladd+2
  7482  078C  0859               	movf	___fladd@b+3,w
  7483  078D  00E1               	movwf	??___fladd+3
  7484  078E  3001               	movlw	1
  7485  078F  00E2               	movwf	??___fladd+4
  7486  0790                     u3645:
  7487  0790  0D61               	rlf	??___fladd+3,w
  7488  0791  0CE1               	rrf	??___fladd+3,f
  7489  0792  0CE0               	rrf	??___fladd+2,f
  7490  0793  0CDF               	rrf	??___fladd+1,f
  7491  0794  0CDE               	rrf	??___fladd,f
  7492  0795                     u3640:
  7493  0795  0BE2               	decfsz	??___fladd+4,f
  7494  0796  2F90               	goto	u3645
  7495  0797  0861               	movf	??___fladd+3,w
  7496  0798  00D9               	movwf	___fladd@b+3
  7497  0799  0860               	movf	??___fladd+2,w
  7498  079A  00D8               	movwf	___fladd@b+2
  7499  079B  085F               	movf	??___fladd+1,w
  7500  079C  00D7               	movwf	___fladd@b+1
  7501  079D  085E               	movf	??___fladd,w
  7502  079E  00D6               	movwf	___fladd@b
  7503  079F  0A68               	incf	___fladd@bexp,w
  7504  07A0  1903               	btfsc	3,2
  7505  07A1  2FA3               	goto	u3651
  7506  07A2  2FA4               	goto	u3650
  7507  07A3                     u3651:
  7508  07A3  2FA8               	goto	l760
  7509  07A4                     u3650:
  7510  07A4                     l2650:
  7511  07A4  3001               	movlw	1
  7512  07A5  00DE               	movwf	??___fladd
  7513  07A6  085E               	movf	??___fladd,w
  7514  07A7  07E8               	addwf	___fladd@bexp,f
  7515  07A8                     l760:
  7516  07A8  0A68               	incf	___fladd@bexp,w
  7517  07A9  1903               	btfsc	3,2
  7518  07AA  2FAC               	goto	u3661
  7519  07AB  2FAD               	goto	u3660
  7520  07AC                     u3661:
  7521  07AC  2FB2               	goto	l2654
  7522  07AD                     u3660:
  7523  07AD                     l2652:
  7524  07AD  0868               	movf	___fladd@bexp,w
  7525  07AE  1D03               	btfss	3,2
  7526  07AF  2FB1               	goto	u3671
  7527  07B0  2FB2               	goto	u3670
  7528  07B1                     u3671:
  7529  07B1  2FC0               	goto	l2660
  7530  07B2                     u3670:
  7531  07B2                     l2654:
  7532  07B2  3000               	movlw	0
  7533  07B3  00D9               	movwf	___fladd@b+3
  7534  07B4  3000               	movlw	0
  7535  07B5  00D8               	movwf	___fladd@b+2
  7536  07B6  3000               	movlw	0
  7537  07B7  00D7               	movwf	___fladd@b+1
  7538  07B8  3000               	movlw	0
  7539  07B9  00D6               	movwf	___fladd@b
  7540  07BA                     l2656:
  7541  07BA  0868               	movf	___fladd@bexp,w
  7542  07BB  1D03               	btfss	3,2
  7543  07BC  2FBE               	goto	u3681
  7544  07BD  2FBF               	goto	u3680
  7545  07BE                     u3681:
  7546  07BE  2FC0               	goto	l2660
  7547  07BF                     u3680:
  7548  07BF                     l2658:
  7549  07BF  01E6               	clrf	___fladd@signs
  7550  07C0                     l2660:
  7551  07C0  1C68               	btfss	___fladd@bexp,0
  7552  07C1  2FC3               	goto	u3691
  7553  07C2  2FC4               	goto	u3690
  7554  07C3                     u3691:
  7555  07C3  2FC6               	goto	l2664
  7556  07C4                     u3690:
  7557  07C4                     l2662:
  7558  07C4  17D8               	bsf	___fladd@b+2,7
  7559  07C5  2FCA               	goto	l768
  7560  07C6                     l2664:
  7561  07C6  307F               	movlw	127
  7562  07C7  00DE               	movwf	??___fladd
  7563  07C8  085E               	movf	??___fladd,w
  7564  07C9  05D8               	andwf	___fladd@b+2,f
  7565  07CA                     l768:
  7566  07CA  0868               	movf	___fladd@bexp,w
  7567  07CB  00DE               	movwf	??___fladd
  7568  07CC  1003               	clrc
  7569  07CD  0C5E               	rrf	??___fladd,w
  7570  07CE  00DF               	movwf	??___fladd+1
  7571  07CF  085F               	movf	??___fladd+1,w
  7572  07D0  00D9               	movwf	___fladd@b+3
  7573  07D1                     l2666:
  7574  07D1  1FE6               	btfss	___fladd@signs,7
  7575  07D2  2FD4               	goto	u3701
  7576  07D3  2FD5               	goto	u3700
  7577  07D4                     u3701:
  7578  07D4  2FD6               	goto	l769
  7579  07D5                     u3700:
  7580  07D5                     l2668:
  7581  07D5  17D9               	bsf	___fladd@b+3,7
  7582  07D6                     l769:
  7583  07D6                     l739:
  7584  07D6  0008               	return
  7585  07D7                     __end_of___fladd:
  7586                           
  7587                           	psect	text19
  7588  1C93                     __ptext19:	
  7589 ;; *************** function ___flneg *****************
  7590 ;; Defined at:
  7591 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  f1              4    2[COMMON] unsigned char 
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;		None
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  4    2[COMMON] unsigned char 
  7598 ;; Registers used:
  7599 ;;		wreg
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7605 ;;      Params:         4       0       0       0       0
  7606 ;;      Locals:         0       0       0       0       0
  7607 ;;      Temps:          0       0       0       0       0
  7608 ;;      Totals:         4       0       0       0       0
  7609 ;;Total ram usage:        4 bytes
  7610 ;; Hardware stack levels used:    1
  7611 ;; Hardware stack levels required when called:    1
  7612 ;; This function calls:
  7613 ;;		Nothing
  7614 ;; This function is called by:
  7615 ;;		_sprintf
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           
  7620                           ;psect for function ___flneg
  7621  1C93                     ___flneg:
  7622  1C93                     l3058:	
  7623                           ;incstack = 0
  7624                           ; Regs used in ___flneg: [wreg]
  7625                           
  7626  1C93  0875               	movf	___flneg@f1+3,w
  7627  1C94  0474               	iorwf	___flneg@f1+2,w
  7628  1C95  0473               	iorwf	___flneg@f1+1,w
  7629  1C96  0472               	iorwf	___flneg@f1,w
  7630  1C97  1903               	skipnz
  7631  1C98  2C9A               	goto	u4831
  7632  1C99  2C9B               	goto	u4830
  7633  1C9A                     u4831:
  7634  1C9A  2C9D               	goto	l3062
  7635  1C9B                     u4830:
  7636  1C9B                     l3060:
  7637  1C9B  3080               	movlw	128
  7638  1C9C  06F5               	xorwf	___flneg@f1+3,f
  7639  1C9D                     l3062:
  7640  1C9D                     l598:
  7641  1C9D  0008               	return
  7642  1C9E                     __end_of___flneg:
  7643                           
  7644                           	psect	text20
  7645  1017                     __ptext20:	
  7646 ;; *************** function ___flge *****************
  7647 ;; Defined at:
  7648 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  ff1             4    2[COMMON] unsigned char 
  7651 ;;  ff2             4    6[COMMON] unsigned char 
  7652 ;; Auto vars:     Size  Location     Type
  7653 ;;		None
  7654 ;; Return value:  Size  Location     Type
  7655 ;;		None               void
  7656 ;; Registers used:
  7657 ;;		wreg, status,2, status,0
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7663 ;;      Params:         8       0       0       0       0
  7664 ;;      Locals:         0       0       0       0       0
  7665 ;;      Temps:          0       4       0       0       0
  7666 ;;      Totals:         8       4       0       0       0
  7667 ;;Total ram usage:       12 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; Hardware stack levels required when called:    1
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_sprintf
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           
  7678                           ;psect for function ___flge
  7679  1017                     ___flge:
  7680  1017                     l3038:	
  7681                           ;incstack = 0
  7682                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7683                           
  7684  1017  3000               	movlw	0
  7685  1018  0572               	andwf	___flge@ff1,w
  7686  1019  1283               	bcf	3,5	;RP0=0, select bank0
  7687  101A  1303               	bcf	3,6	;RP1=0, select bank0
  7688  101B  00A0               	movwf	??___flge
  7689  101C  3000               	movlw	0
  7690  101D  0573               	andwf	___flge@ff1+1,w
  7691  101E  00A1               	movwf	??___flge+1
  7692  101F  3080               	movlw	128
  7693  1020  0574               	andwf	___flge@ff1+2,w
  7694  1021  00A2               	movwf	??___flge+2
  7695  1022  307F               	movlw	127
  7696  1023  0575               	andwf	___flge@ff1+3,w
  7697  1024  00A3               	movwf	??___flge+3
  7698  1025  0823               	movf	??___flge+3,w
  7699  1026  0422               	iorwf	??___flge+2,w
  7700  1027  0421               	iorwf	??___flge+1,w
  7701  1028  0420               	iorwf	??___flge,w
  7702  1029  1D03               	skipz
  7703  102A  282C               	goto	u4761
  7704  102B  282D               	goto	u4760
  7705  102C                     u4761:
  7706  102C  2835               	goto	l590
  7707  102D                     u4760:
  7708  102D                     l3040:
  7709  102D  3000               	movlw	0
  7710  102E  00F5               	movwf	___flge@ff1+3
  7711  102F  3000               	movlw	0
  7712  1030  00F4               	movwf	___flge@ff1+2
  7713  1031  3000               	movlw	0
  7714  1032  00F3               	movwf	___flge@ff1+1
  7715  1033  3000               	movlw	0
  7716  1034  00F2               	movwf	___flge@ff1
  7717  1035                     l590:
  7718  1035  3000               	movlw	0
  7719  1036  0576               	andwf	___flge@ff2,w
  7720  1037  00A0               	movwf	??___flge
  7721  1038  3000               	movlw	0
  7722  1039  0577               	andwf	___flge@ff2+1,w
  7723  103A  00A1               	movwf	??___flge+1
  7724  103B  3080               	movlw	128
  7725  103C  0578               	andwf	___flge@ff2+2,w
  7726  103D  00A2               	movwf	??___flge+2
  7727  103E  307F               	movlw	127
  7728  103F  0579               	andwf	___flge@ff2+3,w
  7729  1040  00A3               	movwf	??___flge+3
  7730  1041  0823               	movf	??___flge+3,w
  7731  1042  0422               	iorwf	??___flge+2,w
  7732  1043  0421               	iorwf	??___flge+1,w
  7733  1044  0420               	iorwf	??___flge,w
  7734  1045  1D03               	skipz
  7735  1046  2848               	goto	u4771
  7736  1047  2849               	goto	u4770
  7737  1048                     u4771:
  7738  1048  2851               	goto	l3044
  7739  1049                     u4770:
  7740  1049                     l3042:
  7741  1049  3000               	movlw	0
  7742  104A  00F9               	movwf	___flge@ff2+3
  7743  104B  3000               	movlw	0
  7744  104C  00F8               	movwf	___flge@ff2+2
  7745  104D  3000               	movlw	0
  7746  104E  00F7               	movwf	___flge@ff2+1
  7747  104F  3000               	movlw	0
  7748  1050  00F6               	movwf	___flge@ff2
  7749  1051                     l3044:
  7750  1051  1FF5               	btfss	___flge@ff1+3,7
  7751  1052  2854               	goto	u4781
  7752  1053  2855               	goto	u4780
  7753  1054                     u4781:
  7754  1054  2879               	goto	l3048
  7755  1055                     u4780:
  7756  1055                     l3046:
  7757  1055  3000               	movlw	0
  7758  1056  00A0               	movwf	??___flge
  7759  1057  3000               	movlw	0
  7760  1058  00A1               	movwf	??___flge+1
  7761  1059  3000               	movlw	0
  7762  105A  00A2               	movwf	??___flge+2
  7763  105B  3080               	movlw	128
  7764  105C  00A3               	movwf	??___flge+3
  7765  105D  0872               	movf	___flge@ff1,w
  7766  105E  02A0               	subwf	??___flge,f
  7767  105F  0873               	movf	___flge@ff1+1,w
  7768  1060  1C03               	skipc
  7769  1061  0F73               	incfsz	___flge@ff1+1,w
  7770  1062  2864               	goto	u4791
  7771  1063  2865               	goto	u4792
  7772  1064                     u4791:
  7773  1064  02A1               	subwf	??___flge+1,f
  7774  1065                     u4792:
  7775  1065  0874               	movf	___flge@ff1+2,w
  7776  1066  1C03               	skipc
  7777  1067  0F74               	incfsz	___flge@ff1+2,w
  7778  1068  286A               	goto	u4793
  7779  1069  286B               	goto	u4794
  7780  106A                     u4793:
  7781  106A  02A2               	subwf	??___flge+2,f
  7782  106B                     u4794:
  7783  106B  0875               	movf	___flge@ff1+3,w
  7784  106C  1C03               	skipc
  7785  106D  0F75               	incfsz	___flge@ff1+3,w
  7786  106E  2870               	goto	u4795
  7787  106F  2871               	goto	u4796
  7788  1070                     u4795:
  7789  1070  02A3               	subwf	??___flge+3,f
  7790  1071                     u4796:
  7791  1071  0823               	movf	??___flge+3,w
  7792  1072  00F5               	movwf	___flge@ff1+3
  7793  1073  0822               	movf	??___flge+2,w
  7794  1074  00F4               	movwf	___flge@ff1+2
  7795  1075  0821               	movf	??___flge+1,w
  7796  1076  00F3               	movwf	___flge@ff1+1
  7797  1077  0820               	movf	??___flge,w
  7798  1078  00F2               	movwf	___flge@ff1
  7799  1079                     l3048:
  7800  1079  1FF9               	btfss	___flge@ff2+3,7
  7801  107A  287C               	goto	u4801
  7802  107B  287D               	goto	u4800
  7803  107C                     u4801:
  7804  107C  28A1               	goto	l593
  7805  107D                     u4800:
  7806  107D                     l3050:
  7807  107D  3000               	movlw	0
  7808  107E  00A0               	movwf	??___flge
  7809  107F  3000               	movlw	0
  7810  1080  00A1               	movwf	??___flge+1
  7811  1081  3000               	movlw	0
  7812  1082  00A2               	movwf	??___flge+2
  7813  1083  3080               	movlw	128
  7814  1084  00A3               	movwf	??___flge+3
  7815  1085  0876               	movf	___flge@ff2,w
  7816  1086  02A0               	subwf	??___flge,f
  7817  1087  0877               	movf	___flge@ff2+1,w
  7818  1088  1C03               	skipc
  7819  1089  0F77               	incfsz	___flge@ff2+1,w
  7820  108A  288C               	goto	u4811
  7821  108B  288D               	goto	u4812
  7822  108C                     u4811:
  7823  108C  02A1               	subwf	??___flge+1,f
  7824  108D                     u4812:
  7825  108D  0878               	movf	___flge@ff2+2,w
  7826  108E  1C03               	skipc
  7827  108F  0F78               	incfsz	___flge@ff2+2,w
  7828  1090  2892               	goto	u4813
  7829  1091  2893               	goto	u4814
  7830  1092                     u4813:
  7831  1092  02A2               	subwf	??___flge+2,f
  7832  1093                     u4814:
  7833  1093  0879               	movf	___flge@ff2+3,w
  7834  1094  1C03               	skipc
  7835  1095  0F79               	incfsz	___flge@ff2+3,w
  7836  1096  2898               	goto	u4815
  7837  1097  2899               	goto	u4816
  7838  1098                     u4815:
  7839  1098  02A3               	subwf	??___flge+3,f
  7840  1099                     u4816:
  7841  1099  0823               	movf	??___flge+3,w
  7842  109A  00F9               	movwf	___flge@ff2+3
  7843  109B  0822               	movf	??___flge+2,w
  7844  109C  00F8               	movwf	___flge@ff2+2
  7845  109D  0821               	movf	??___flge+1,w
  7846  109E  00F7               	movwf	___flge@ff2+1
  7847  109F  0820               	movf	??___flge,w
  7848  10A0  00F6               	movwf	___flge@ff2
  7849  10A1                     l593:
  7850  10A1  3080               	movlw	128
  7851  10A2  06F5               	xorwf	___flge@ff1+3,f
  7852  10A3  3080               	movlw	128
  7853  10A4  06F9               	xorwf	___flge@ff2+3,f
  7854  10A5  0879               	movf	___flge@ff2+3,w
  7855  10A6  0275               	subwf	___flge@ff1+3,w
  7856  10A7  1D03               	skipz
  7857  10A8  28B3               	goto	u4825
  7858  10A9  0878               	movf	___flge@ff2+2,w
  7859  10AA  0274               	subwf	___flge@ff1+2,w
  7860  10AB  1D03               	skipz
  7861  10AC  28B3               	goto	u4825
  7862  10AD  0877               	movf	___flge@ff2+1,w
  7863  10AE  0273               	subwf	___flge@ff1+1,w
  7864  10AF  1D03               	skipz
  7865  10B0  28B3               	goto	u4825
  7866  10B1  0876               	movf	___flge@ff2,w
  7867  10B2  0272               	subwf	___flge@ff1,w
  7868  10B3                     u4825:
  7869  10B3  1803               	skipnc
  7870  10B4  28B6               	goto	u4821
  7871  10B5  28B7               	goto	u4820
  7872  10B6                     u4821:
  7873  10B6  28B9               	goto	l3054
  7874  10B7                     u4820:
  7875  10B7                     l3052:
  7876  10B7  1003               	clrc
  7877  10B8  28BA               	goto	l594
  7878  10B9                     l3054:
  7879  10B9  1403               	setc
  7880  10BA                     l594:
  7881  10BA  0008               	return
  7882  10BB                     __end_of___flge:
  7883                           
  7884                           	psect	text21
  7885  1D66                     __ptext21:	
  7886 ;; *************** function ___fleq *****************
  7887 ;; Defined at:
  7888 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  ff1             4    2[COMMON] unsigned char 
  7891 ;;  ff2             4    6[COMMON] unsigned char 
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;		None
  7894 ;; Return value:  Size  Location     Type
  7895 ;;		None               void
  7896 ;; Registers used:
  7897 ;;		wreg, status,2, status,0
  7898 ;; Tracked objects:
  7899 ;;		On entry : 0/0
  7900 ;;		On exit  : 0/0
  7901 ;;		Unchanged: 0/0
  7902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7903 ;;      Params:         8       0       0       0       0
  7904 ;;      Locals:         0       0       0       0       0
  7905 ;;      Temps:          0       4       0       0       0
  7906 ;;      Totals:         8       4       0       0       0
  7907 ;;Total ram usage:       12 bytes
  7908 ;; Hardware stack levels used:    1
  7909 ;; Hardware stack levels required when called:    1
  7910 ;; This function calls:
  7911 ;;		Nothing
  7912 ;; This function is called by:
  7913 ;;		_sprintf
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           
  7918                           ;psect for function ___fleq
  7919  1D66                     ___fleq:
  7920  1D66                     l3026:	
  7921                           ;incstack = 0
  7922                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7923                           
  7924  1D66  3000               	movlw	0
  7925  1D67  0572               	andwf	___fleq@ff1,w
  7926  1D68  1283               	bcf	3,5	;RP0=0, select bank0
  7927  1D69  1303               	bcf	3,6	;RP1=0, select bank0
  7928  1D6A  00A0               	movwf	??___fleq
  7929  1D6B  3000               	movlw	0
  7930  1D6C  0573               	andwf	___fleq@ff1+1,w
  7931  1D6D  00A1               	movwf	??___fleq+1
  7932  1D6E  3080               	movlw	128
  7933  1D6F  0574               	andwf	___fleq@ff1+2,w
  7934  1D70  00A2               	movwf	??___fleq+2
  7935  1D71  307F               	movlw	127
  7936  1D72  0575               	andwf	___fleq@ff1+3,w
  7937  1D73  00A3               	movwf	??___fleq+3
  7938  1D74  0823               	movf	??___fleq+3,w
  7939  1D75  0422               	iorwf	??___fleq+2,w
  7940  1D76  0421               	iorwf	??___fleq+1,w
  7941  1D77  0420               	iorwf	??___fleq,w
  7942  1D78  1D03               	skipz
  7943  1D79  2D7B               	goto	u4731
  7944  1D7A  2D7C               	goto	u4730
  7945  1D7B                     u4731:
  7946  1D7B  2D84               	goto	l585
  7947  1D7C                     u4730:
  7948  1D7C                     l3028:
  7949  1D7C  3000               	movlw	0
  7950  1D7D  00F5               	movwf	___fleq@ff1+3
  7951  1D7E  3000               	movlw	0
  7952  1D7F  00F4               	movwf	___fleq@ff1+2
  7953  1D80  3000               	movlw	0
  7954  1D81  00F3               	movwf	___fleq@ff1+1
  7955  1D82  3000               	movlw	0
  7956  1D83  00F2               	movwf	___fleq@ff1
  7957  1D84                     l585:
  7958  1D84  3000               	movlw	0
  7959  1D85  0576               	andwf	___fleq@ff2,w
  7960  1D86  00A0               	movwf	??___fleq
  7961  1D87  3000               	movlw	0
  7962  1D88  0577               	andwf	___fleq@ff2+1,w
  7963  1D89  00A1               	movwf	??___fleq+1
  7964  1D8A  3080               	movlw	128
  7965  1D8B  0578               	andwf	___fleq@ff2+2,w
  7966  1D8C  00A2               	movwf	??___fleq+2
  7967  1D8D  307F               	movlw	127
  7968  1D8E  0579               	andwf	___fleq@ff2+3,w
  7969  1D8F  00A3               	movwf	??___fleq+3
  7970  1D90  0823               	movf	??___fleq+3,w
  7971  1D91  0422               	iorwf	??___fleq+2,w
  7972  1D92  0421               	iorwf	??___fleq+1,w
  7973  1D93  0420               	iorwf	??___fleq,w
  7974  1D94  1D03               	skipz
  7975  1D95  2D97               	goto	u4741
  7976  1D96  2D98               	goto	u4740
  7977  1D97                     u4741:
  7978  1D97  2DA0               	goto	l586
  7979  1D98                     u4740:
  7980  1D98                     l3030:
  7981  1D98  3000               	movlw	0
  7982  1D99  00F9               	movwf	___fleq@ff2+3
  7983  1D9A  3000               	movlw	0
  7984  1D9B  00F8               	movwf	___fleq@ff2+2
  7985  1D9C  3000               	movlw	0
  7986  1D9D  00F7               	movwf	___fleq@ff2+1
  7987  1D9E  3000               	movlw	0
  7988  1D9F  00F6               	movwf	___fleq@ff2
  7989  1DA0                     l586:
  7990  1DA0  0879               	movf	___fleq@ff2+3,w
  7991  1DA1  0675               	xorwf	___fleq@ff1+3,w
  7992  1DA2  1D03               	skipz
  7993  1DA3  2DAE               	goto	u4755
  7994  1DA4  0878               	movf	___fleq@ff2+2,w
  7995  1DA5  0674               	xorwf	___fleq@ff1+2,w
  7996  1DA6  1D03               	skipz
  7997  1DA7  2DAE               	goto	u4755
  7998  1DA8  0877               	movf	___fleq@ff2+1,w
  7999  1DA9  0673               	xorwf	___fleq@ff1+1,w
  8000  1DAA  1D03               	skipz
  8001  1DAB  2DAE               	goto	u4755
  8002  1DAC  0876               	movf	___fleq@ff2,w
  8003  1DAD  0672               	xorwf	___fleq@ff1,w
  8004  1DAE                     u4755:
  8005  1DAE  1903               	skipnz
  8006  1DAF  2DB1               	goto	u4751
  8007  1DB0  2DB2               	goto	u4750
  8008  1DB1                     u4751:
  8009  1DB1  2DB4               	goto	l3034
  8010  1DB2                     u4750:
  8011  1DB2                     l3032:
  8012  1DB2  1003               	clrc
  8013  1DB3  2DB5               	goto	l587
  8014  1DB4                     l3034:
  8015  1DB4  1403               	setc
  8016  1DB5                     l587:
  8017  1DB5  0008               	return
  8018  1DB6                     __end_of___fleq:
  8019                           
  8020                           	psect	text22
  8021  1CC2                     __ptext22:	
  8022 ;; *************** function _send_crct *****************
  8023 ;; Defined at:
  8024 ;;		line 176 in file "mainp1.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;  st              1    wreg     PTR unsigned char 
  8027 ;;		 -> f1(15), 
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;  st              1    6[COMMON] PTR unsigned char 
  8030 ;;		 -> f1(15), 
  8031 ;;  i               2    4[COMMON] int 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      void 
  8034 ;; Registers used:
  8035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8041 ;;      Params:         0       0       0       0       0
  8042 ;;      Locals:         3       0       0       0       0
  8043 ;;      Temps:          1       0       0       0       0
  8044 ;;      Totals:         4       0       0       0       0
  8045 ;;Total ram usage:        4 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:    2
  8048 ;; This function calls:
  8049 ;;		_send_char
  8050 ;; This function is called by:
  8051 ;;		_main
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           
  8056                           ;psect for function _send_crct
  8057  1CC2                     _send_crct:
  8058                           
  8059                           ;incstack = 0
  8060                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8061                           ;send_crct@st stored from wreg
  8062  1CC2  00F6               	movwf	send_crct@st
  8063  1CC3                     l3510:
  8064                           
  8065                           ;mainp1.c: 177:     int i = 0;
  8066  1CC3  01F4               	clrf	send_crct@i
  8067  1CC4  01F5               	clrf	send_crct@i+1
  8068                           
  8069                           ;mainp1.c: 178:     while (st[i] != 0){
  8070  1CC5  2CD7               	goto	l3516
  8071  1CC6                     l3512:
  8072                           
  8073                           ;mainp1.c: 179:         send_char(st[i]);
  8074  1CC6  0874               	movf	send_crct@i,w
  8075  1CC7  0776               	addwf	send_crct@st,w
  8076  1CC8  00F3               	movwf	??_send_crct
  8077  1CC9  0873               	movf	??_send_crct,w
  8078  1CCA  0084               	movwf	4
  8079  1CCB  0800               	movf	0,w
  8080  1CCC  160A  158A  2489  160A  158A  	fcall	_send_char
  8081  1CD1                     l3514:
  8082                           
  8083                           ;mainp1.c: 180:         i++;
  8084  1CD1  3001               	movlw	1
  8085  1CD2  07F4               	addwf	send_crct@i,f
  8086  1CD3  1803               	skipnc
  8087  1CD4  0AF5               	incf	send_crct@i+1,f
  8088  1CD5  3000               	movlw	0
  8089  1CD6  07F5               	addwf	send_crct@i+1,f
  8090  1CD7                     l3516:
  8091                           
  8092                           ;mainp1.c: 178:     while (st[i] != 0){
  8093  1CD7  0874               	movf	send_crct@i,w
  8094  1CD8  0776               	addwf	send_crct@st,w
  8095  1CD9  00F3               	movwf	??_send_crct
  8096  1CDA  0873               	movf	??_send_crct,w
  8097  1CDB  0084               	movwf	4
  8098  1CDC  1383               	bcf	3,7	;select IRP bank0
  8099  1CDD  0800               	movf	0,w
  8100  1CDE  1D03               	btfss	3,2
  8101  1CDF  2CE1               	goto	u5681
  8102  1CE0  2CE2               	goto	u5680
  8103  1CE1                     u5681:
  8104  1CE1  2CC6               	goto	l3512
  8105  1CE2                     u5680:
  8106  1CE2                     l121:
  8107  1CE2  0008               	return
  8108  1CE3                     __end_of_send_crct:
  8109                           
  8110                           	psect	text23
  8111  1C89                     __ptext23:	
  8112 ;; *************** function _send_char *****************
  8113 ;; Defined at:
  8114 ;;		line 183 in file "mainp1.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  dato            1    wreg     unsigned char 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;  dato            1    2[COMMON] unsigned char 
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		wreg
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8128 ;;      Params:         0       0       0       0       0
  8129 ;;      Locals:         1       0       0       0       0
  8130 ;;      Temps:          0       0       0       0       0
  8131 ;;      Totals:         1       0       0       0       0
  8132 ;;Total ram usage:        1 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; Hardware stack levels required when called:    1
  8135 ;; This function calls:
  8136 ;;		Nothing
  8137 ;; This function is called by:
  8138 ;;		_send_crct
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           
  8143                           ;psect for function _send_char
  8144  1C89                     _send_char:
  8145                           
  8146                           ;incstack = 0
  8147                           ; Regs used in _send_char: [wreg]
  8148                           ;send_char@dato stored from wreg
  8149  1C89  00F2               	movwf	send_char@dato
  8150  1C8A                     l2810:
  8151  1C8A                     l124:	
  8152                           ;mainp1.c: 184:     while(!TXIF);
  8153                           
  8154  1C8A  1283               	bcf	3,5	;RP0=0, select bank0
  8155  1C8B  1303               	bcf	3,6	;RP1=0, select bank0
  8156  1C8C  1E0C               	btfss	12,4	;volatile
  8157  1C8D  2C8F               	goto	u4081
  8158  1C8E  2C90               	goto	u4080
  8159  1C8F                     u4081:
  8160  1C8F  2C8A               	goto	l124
  8161  1C90                     u4080:
  8162  1C90                     l2812:
  8163                           
  8164                           ;mainp1.c: 185:     TXREG = dato;
  8165  1C90  0872               	movf	send_char@dato,w
  8166  1C91  0099               	movwf	25	;volatile
  8167  1C92                     l127:
  8168  1C92  0008               	return
  8169  1C93                     __end_of_send_char:
  8170                           
  8171                           	psect	text24
  8172  1CE3                     __ptext24:	
  8173 ;; *************** function _conv *****************
  8174 ;; Defined at:
  8175 ;;		line 187 in file "mainp1.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  aa              2    6[BANK0 ] int 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;  result          4   10[BANK0 ] float 
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  4    6[BANK0 ] float 
  8182 ;; Registers used:
  8183 ;;		wreg, status,2, status,0, pclath, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8189 ;;      Params:         0       4       0       0       0
  8190 ;;      Locals:         0       4       0       0       0
  8191 ;;      Temps:          0       0       0       0       0
  8192 ;;      Totals:         0       8       0       0       0
  8193 ;;Total ram usage:        8 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:    2
  8196 ;; This function calls:
  8197 ;;		___xxtofl
  8198 ;; This function is called by:
  8199 ;;		_main
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           
  8204                           ;psect for function _conv
  8205  1CE3                     _conv:
  8206  1CE3                     l3198:	
  8207                           ;incstack = 0
  8208                           ; Regs used in _conv: [wreg+status,2+status,0+pclath+cstack]
  8209                           
  8210                           
  8211                           ;mainp1.c: 188:     float result;;mainp1.c: 189:     result = aa;
  8212  1CE3  1283               	bcf	3,5	;RP0=0, select bank0
  8213  1CE4  1303               	bcf	3,6	;RP1=0, select bank0
  8214  1CE5  0826               	movf	conv@aa,w
  8215  1CE6  00F2               	movwf	___xxtofl@val
  8216  1CE7  0827               	movf	conv@aa+1,w
  8217  1CE8  00F3               	movwf	___xxtofl@val+1
  8218  1CE9  3000               	movlw	0
  8219  1CEA  1BF3               	btfsc	___xxtofl@val+1,7
  8220  1CEB  30FF               	movlw	255
  8221  1CEC  00F4               	movwf	___xxtofl@val+2
  8222  1CED  00F5               	movwf	___xxtofl@val+3
  8223  1CEE  3001               	movlw	1
  8224  1CEF  160A  118A  20BB  160A  158A  	fcall	___xxtofl
  8225  1CF4  0875               	movf	?___xxtofl+3,w
  8226  1CF5  1283               	bcf	3,5	;RP0=0, select bank0
  8227  1CF6  1303               	bcf	3,6	;RP1=0, select bank0
  8228  1CF7  00AD               	movwf	conv@result+3
  8229  1CF8  0874               	movf	?___xxtofl+2,w
  8230  1CF9  00AC               	movwf	conv@result+2
  8231  1CFA  0873               	movf	?___xxtofl+1,w
  8232  1CFB  00AB               	movwf	conv@result+1
  8233  1CFC  0872               	movf	?___xxtofl,w
  8234  1CFD  00AA               	movwf	conv@result
  8235  1CFE                     l3200:
  8236                           
  8237                           ;mainp1.c: 190:     return result;
  8238  1CFE  082D               	movf	conv@result+3,w
  8239  1CFF  00A9               	movwf	?_conv+3
  8240  1D00  082C               	movf	conv@result+2,w
  8241  1D01  00A8               	movwf	?_conv+2
  8242  1D02  082B               	movf	conv@result+1,w
  8243  1D03  00A7               	movwf	?_conv+1
  8244  1D04  082A               	movf	conv@result,w
  8245  1D05  00A6               	movwf	?_conv
  8246  1D06                     l130:
  8247  1D06  0008               	return
  8248  1D07                     __end_of_conv:
  8249                           
  8250                           	psect	text25
  8251  10BB                     __ptext25:	
  8252 ;; *************** function ___xxtofl *****************
  8253 ;; Defined at:
  8254 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  sign            1    wreg     unsigned char 
  8257 ;;  val             4    2[COMMON] long 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  sign            1    0[BANK0 ] unsigned char 
  8260 ;;  arg             4    2[BANK0 ] unsigned long 
  8261 ;;  exp             1    1[BANK0 ] unsigned char 
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  4    2[COMMON] unsigned char 
  8264 ;; Registers used:
  8265 ;;		wreg, status,2, status,0
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8271 ;;      Params:         4       0       0       0       0
  8272 ;;      Locals:         0       6       0       0       0
  8273 ;;      Temps:          4       0       0       0       0
  8274 ;;      Totals:         8       6       0       0       0
  8275 ;;Total ram usage:       14 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    1
  8278 ;; This function calls:
  8279 ;;		Nothing
  8280 ;; This function is called by:
  8281 ;;		_conv
  8282 ;;		_sprintf
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           
  8287                           ;psect for function ___xxtofl
  8288  10BB                     ___xxtofl:
  8289                           
  8290                           ;incstack = 0
  8291                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8292                           ;___xxtofl@sign stored from wreg
  8293  10BB  1283               	bcf	3,5	;RP0=0, select bank0
  8294  10BC  1303               	bcf	3,6	;RP1=0, select bank0
  8295  10BD  00A0               	movwf	___xxtofl@sign
  8296  10BE                     l3128:
  8297  10BE  0820               	movf	___xxtofl@sign,w
  8298  10BF  1903               	btfsc	3,2
  8299  10C0  28C2               	goto	u5001
  8300  10C1  28C3               	goto	u5000
  8301  10C2                     u5001:
  8302  10C2  28D7               	goto	l3134
  8303  10C3                     u5000:
  8304  10C3                     l3130:
  8305  10C3  1FF5               	btfss	___xxtofl@val+3,7
  8306  10C4  28C6               	goto	u5011
  8307  10C5  28C7               	goto	u5010
  8308  10C6                     u5011:
  8309  10C6  28D7               	goto	l3134
  8310  10C7                     u5010:
  8311  10C7                     l3132:
  8312  10C7  0972               	comf	___xxtofl@val,w
  8313  10C8  00A2               	movwf	___xxtofl@arg
  8314  10C9  0973               	comf	___xxtofl@val+1,w
  8315  10CA  00A3               	movwf	___xxtofl@arg+1
  8316  10CB  0974               	comf	___xxtofl@val+2,w
  8317  10CC  00A4               	movwf	___xxtofl@arg+2
  8318  10CD  0975               	comf	___xxtofl@val+3,w
  8319  10CE  00A5               	movwf	___xxtofl@arg+3
  8320  10CF  0AA2               	incf	___xxtofl@arg,f
  8321  10D0  1903               	skipnz
  8322  10D1  0AA3               	incf	___xxtofl@arg+1,f
  8323  10D2  1903               	skipnz
  8324  10D3  0AA4               	incf	___xxtofl@arg+2,f
  8325  10D4  1903               	skipnz
  8326  10D5  0AA5               	incf	___xxtofl@arg+3,f
  8327  10D6  28DF               	goto	l866
  8328  10D7                     l3134:
  8329  10D7  0875               	movf	___xxtofl@val+3,w
  8330  10D8  00A5               	movwf	___xxtofl@arg+3
  8331  10D9  0874               	movf	___xxtofl@val+2,w
  8332  10DA  00A4               	movwf	___xxtofl@arg+2
  8333  10DB  0873               	movf	___xxtofl@val+1,w
  8334  10DC  00A3               	movwf	___xxtofl@arg+1
  8335  10DD  0872               	movf	___xxtofl@val,w
  8336  10DE  00A2               	movwf	___xxtofl@arg
  8337  10DF                     l866:
  8338  10DF  0875               	movf	___xxtofl@val+3,w
  8339  10E0  0474               	iorwf	___xxtofl@val+2,w
  8340  10E1  0473               	iorwf	___xxtofl@val+1,w
  8341  10E2  0472               	iorwf	___xxtofl@val,w
  8342  10E3  1D03               	skipz
  8343  10E4  28E6               	goto	u5021
  8344  10E5  28E7               	goto	u5020
  8345  10E6                     u5021:
  8346  10E6  28F0               	goto	l3140
  8347  10E7                     u5020:
  8348  10E7                     l3136:
  8349  10E7  3000               	movlw	0
  8350  10E8  00F5               	movwf	?___xxtofl+3
  8351  10E9  3000               	movlw	0
  8352  10EA  00F4               	movwf	?___xxtofl+2
  8353  10EB  3000               	movlw	0
  8354  10EC  00F3               	movwf	?___xxtofl+1
  8355  10ED  3000               	movlw	0
  8356  10EE  00F2               	movwf	?___xxtofl
  8357  10EF  2976               	goto	l868
  8358  10F0                     l3140:
  8359  10F0  3096               	movlw	150
  8360  10F1  00F6               	movwf	??___xxtofl
  8361  10F2  0876               	movf	??___xxtofl,w
  8362  10F3  00A1               	movwf	___xxtofl@exp
  8363  10F4  2902               	goto	l3144
  8364  10F5                     l3142:
  8365  10F5  3001               	movlw	1
  8366  10F6  00F6               	movwf	??___xxtofl
  8367  10F7  0876               	movf	??___xxtofl,w
  8368  10F8  07A1               	addwf	___xxtofl@exp,f
  8369  10F9  3001               	movlw	1
  8370  10FA                     u5035:
  8371  10FA  1003               	clrc
  8372  10FB  0CA5               	rrf	___xxtofl@arg+3,f
  8373  10FC  0CA4               	rrf	___xxtofl@arg+2,f
  8374  10FD  0CA3               	rrf	___xxtofl@arg+1,f
  8375  10FE  0CA2               	rrf	___xxtofl@arg,f
  8376  10FF  3EFF               	addlw	-1
  8377  1100  1D03               	skipz
  8378  1101  28FA               	goto	u5035
  8379  1102                     l3144:
  8380  1102  30FE               	movlw	254
  8381  1103  0525               	andwf	___xxtofl@arg+3,w
  8382  1104  1D03               	btfss	3,2
  8383  1105  2907               	goto	u5041
  8384  1106  2908               	goto	u5040
  8385  1107                     u5041:
  8386  1107  28F5               	goto	l3142
  8387  1108                     u5040:
  8388  1108  2924               	goto	l872
  8389  1109                     l3146:
  8390  1109  3001               	movlw	1
  8391  110A  00F6               	movwf	??___xxtofl
  8392  110B  0876               	movf	??___xxtofl,w
  8393  110C  07A1               	addwf	___xxtofl@exp,f
  8394  110D                     l3148:
  8395  110D  3001               	movlw	1
  8396  110E  07A2               	addwf	___xxtofl@arg,f
  8397  110F  3000               	movlw	0
  8398  1110  1803               	skipnc
  8399  1111  3001               	movlw	1
  8400  1112  07A3               	addwf	___xxtofl@arg+1,f
  8401  1113  3000               	movlw	0
  8402  1114  1803               	skipnc
  8403  1115  3001               	movlw	1
  8404  1116  07A4               	addwf	___xxtofl@arg+2,f
  8405  1117  3000               	movlw	0
  8406  1118  1803               	skipnc
  8407  1119  3001               	movlw	1
  8408  111A  07A5               	addwf	___xxtofl@arg+3,f
  8409  111B                     l3150:
  8410  111B  3001               	movlw	1
  8411  111C                     u5055:
  8412  111C  1003               	clrc
  8413  111D  0CA5               	rrf	___xxtofl@arg+3,f
  8414  111E  0CA4               	rrf	___xxtofl@arg+2,f
  8415  111F  0CA3               	rrf	___xxtofl@arg+1,f
  8416  1120  0CA2               	rrf	___xxtofl@arg,f
  8417  1121  3EFF               	addlw	-1
  8418  1122  1D03               	skipz
  8419  1123  291C               	goto	u5055
  8420  1124                     l872:
  8421  1124  30FF               	movlw	255
  8422  1125  0525               	andwf	___xxtofl@arg+3,w
  8423  1126  1D03               	btfss	3,2
  8424  1127  2929               	goto	u5061
  8425  1128  292A               	goto	u5060
  8426  1129                     u5061:
  8427  1129  2909               	goto	l3146
  8428  112A                     u5060:
  8429  112A  2936               	goto	l3154
  8430  112B                     l3152:
  8431  112B  3001               	movlw	1
  8432  112C  02A1               	subwf	___xxtofl@exp,f
  8433  112D  3001               	movlw	1
  8434  112E  00F6               	movwf	??___xxtofl
  8435  112F                     u5075:
  8436  112F  1003               	clrc
  8437  1130  0DA2               	rlf	___xxtofl@arg,f
  8438  1131  0DA3               	rlf	___xxtofl@arg+1,f
  8439  1132  0DA4               	rlf	___xxtofl@arg+2,f
  8440  1133  0DA5               	rlf	___xxtofl@arg+3,f
  8441  1134  0BF6               	decfsz	??___xxtofl,f
  8442  1135  292F               	goto	u5075
  8443  1136                     l3154:
  8444  1136  1BA4               	btfsc	___xxtofl@arg+2,7
  8445  1137  2939               	goto	u5081
  8446  1138  293A               	goto	u5080
  8447  1139                     u5081:
  8448  1139  2940               	goto	l879
  8449  113A                     u5080:
  8450  113A                     l3156:
  8451  113A  3002               	movlw	2
  8452  113B  0221               	subwf	___xxtofl@exp,w
  8453  113C  1803               	skipnc
  8454  113D  293F               	goto	u5091
  8455  113E  2940               	goto	u5090
  8456  113F                     u5091:
  8457  113F  292B               	goto	l3152
  8458  1140                     u5090:
  8459  1140                     l879:
  8460  1140  1821               	btfsc	___xxtofl@exp,0
  8461  1141  2943               	goto	u5101
  8462  1142  2944               	goto	u5100
  8463  1143                     u5101:
  8464  1143  294C               	goto	l880
  8465  1144                     u5100:
  8466  1144                     l3158:
  8467  1144  30FF               	movlw	255
  8468  1145  05A2               	andwf	___xxtofl@arg,f
  8469  1146  30FF               	movlw	255
  8470  1147  05A3               	andwf	___xxtofl@arg+1,f
  8471  1148  307F               	movlw	127
  8472  1149  05A4               	andwf	___xxtofl@arg+2,f
  8473  114A  30FF               	movlw	255
  8474  114B  05A5               	andwf	___xxtofl@arg+3,f
  8475  114C                     l880:
  8476  114C  1003               	clrc
  8477  114D  0CA1               	rrf	___xxtofl@exp,f
  8478  114E                     l3160:
  8479  114E  0821               	movf	___xxtofl@exp,w
  8480  114F  00F6               	movwf	??___xxtofl
  8481  1150  01F7               	clrf	??___xxtofl+1
  8482  1151  01F8               	clrf	??___xxtofl+2
  8483  1152  01F9               	clrf	??___xxtofl+3
  8484  1153  3018               	movlw	24
  8485  1154                     u5115:
  8486  1154  1003               	clrc
  8487  1155  0DF6               	rlf	??___xxtofl,f
  8488  1156  0DF7               	rlf	??___xxtofl+1,f
  8489  1157  0DF8               	rlf	??___xxtofl+2,f
  8490  1158  0DF9               	rlf	??___xxtofl+3,f
  8491  1159                     u5110:
  8492  1159  3EFF               	addlw	-1
  8493  115A  1D03               	skipz
  8494  115B  2954               	goto	u5115
  8495  115C  0876               	movf	??___xxtofl,w
  8496  115D  04A2               	iorwf	___xxtofl@arg,f
  8497  115E  0877               	movf	??___xxtofl+1,w
  8498  115F  04A3               	iorwf	___xxtofl@arg+1,f
  8499  1160  0878               	movf	??___xxtofl+2,w
  8500  1161  04A4               	iorwf	___xxtofl@arg+2,f
  8501  1162  0879               	movf	??___xxtofl+3,w
  8502  1163  04A5               	iorwf	___xxtofl@arg+3,f
  8503  1164                     l3162:
  8504  1164  0820               	movf	___xxtofl@sign,w
  8505  1165  1903               	btfsc	3,2
  8506  1166  2968               	goto	u5121
  8507  1167  2969               	goto	u5120
  8508  1168                     u5121:
  8509  1168  296E               	goto	l3168
  8510  1169                     u5120:
  8511  1169                     l3164:
  8512  1169  1FF5               	btfss	___xxtofl@val+3,7
  8513  116A  296C               	goto	u5131
  8514  116B  296D               	goto	u5130
  8515  116C                     u5131:
  8516  116C  296E               	goto	l3168
  8517  116D                     u5130:
  8518  116D                     l3166:
  8519  116D  17A5               	bsf	___xxtofl@arg+3,7
  8520  116E                     l3168:
  8521  116E  0825               	movf	___xxtofl@arg+3,w
  8522  116F  00F5               	movwf	?___xxtofl+3
  8523  1170  0824               	movf	___xxtofl@arg+2,w
  8524  1171  00F4               	movwf	?___xxtofl+2
  8525  1172  0823               	movf	___xxtofl@arg+1,w
  8526  1173  00F3               	movwf	?___xxtofl+1
  8527  1174  0822               	movf	___xxtofl@arg,w
  8528  1175  00F2               	movwf	?___xxtofl
  8529  1176                     l868:
  8530  1176  0008               	return
  8531  1177                     __end_of___xxtofl:
  8532                           
  8533                           	psect	text26
  8534  1002                     __ptext26:	
  8535 ;; *************** function _cfg_usart *****************
  8536 ;; Defined at:
  8537 ;;		line 154 in file "mainp1.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;		None
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, status,2
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8551 ;;      Params:         0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0
  8554 ;;      Totals:         0       0       0       0       0
  8555 ;;Total ram usage:        0 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:    1
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_main
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           
  8566                           ;psect for function _cfg_usart
  8567  1002                     _cfg_usart:
  8568  1002                     l3180:	
  8569                           ;incstack = 0
  8570                           ; Regs used in _cfg_usart: [wreg+status,2]
  8571                           
  8572                           
  8573                           ;mainp1.c: 156:     TXSTAbits.SYNC = 0;
  8574  1002  1683               	bsf	3,5	;RP0=1, select bank1
  8575  1003  1303               	bcf	3,6	;RP1=0, select bank1
  8576  1004  1218               	bcf	24,4	;volatile
  8577                           
  8578                           ;mainp1.c: 157:     TXSTAbits.BRGH = 1;
  8579  1005  1518               	bsf	24,2	;volatile
  8580                           
  8581                           ;mainp1.c: 159:     BAUDCTLbits.BRG16 = 1;
  8582  1006  1683               	bsf	3,5	;RP0=1, select bank3
  8583  1007  1703               	bsf	3,6	;RP1=1, select bank3
  8584  1008  1587               	bsf	7,3	;volatile
  8585  1009                     l3182:
  8586                           
  8587                           ;mainp1.c: 161:     SPBRG = 103;
  8588  1009  3067               	movlw	103
  8589  100A  1683               	bsf	3,5	;RP0=1, select bank1
  8590  100B  1303               	bcf	3,6	;RP1=0, select bank1
  8591  100C  0099               	movwf	25	;volatile
  8592  100D                     l3184:
  8593                           
  8594                           ;mainp1.c: 162:     SPBRGH = 0;
  8595  100D  019A               	clrf	26	;volatile
  8596  100E                     l3186:
  8597                           
  8598                           ;mainp1.c: 164:     RCSTAbits.SPEN = 1;
  8599  100E  1283               	bcf	3,5	;RP0=0, select bank0
  8600  100F  1303               	bcf	3,6	;RP1=0, select bank0
  8601  1010  1798               	bsf	24,7	;volatile
  8602  1011                     l3188:
  8603                           
  8604                           ;mainp1.c: 165:     RCSTAbits.RX9 = 0;
  8605  1011  1318               	bcf	24,6	;volatile
  8606  1012                     l3190:
  8607                           
  8608                           ;mainp1.c: 166:     RCSTAbits.CREN = 1;
  8609  1012  1618               	bsf	24,4	;volatile
  8610  1013                     l3192:
  8611                           
  8612                           ;mainp1.c: 168:     TXSTAbits.TXEN = 1;
  8613  1013  1683               	bsf	3,5	;RP0=1, select bank1
  8614  1014  1303               	bcf	3,6	;RP1=0, select bank1
  8615  1015  1698               	bsf	24,5	;volatile
  8616  1016                     l115:
  8617  1016  0008               	return
  8618  1017                     __end_of_cfg_usart:
  8619                           
  8620                           	psect	text27
  8621  1C9E                     __ptext27:	
  8622 ;; *************** function _cfg_io *****************
  8623 ;; Defined at:
  8624 ;;		line 127 in file "mainp1.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;		None
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		status,2
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8638 ;;      Params:         0       0       0       0       0
  8639 ;;      Locals:         0       0       0       0       0
  8640 ;;      Temps:          0       0       0       0       0
  8641 ;;      Totals:         0       0       0       0       0
  8642 ;;Total ram usage:        0 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:    1
  8645 ;; This function calls:
  8646 ;;		Nothing
  8647 ;; This function is called by:
  8648 ;;		_main
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           
  8653                           ;psect for function _cfg_io
  8654  1C9E                     _cfg_io:
  8655  1C9E                     l3172:	
  8656                           ;incstack = 0
  8657                           ; Regs used in _cfg_io: [status,2]
  8658                           
  8659                           
  8660                           ;mainp1.c: 128:     ANSEL = 0;
  8661  1C9E  1683               	bsf	3,5	;RP0=1, select bank3
  8662  1C9F  1703               	bsf	3,6	;RP1=1, select bank3
  8663  1CA0  0188               	clrf	8	;volatile
  8664                           
  8665                           ;mainp1.c: 129:     ANSELH = 0;
  8666  1CA1  0189               	clrf	9	;volatile
  8667  1CA2                     l3174:
  8668                           
  8669                           ;mainp1.c: 131:     TRISAbits.TRISA0 = 0;
  8670  1CA2  1683               	bsf	3,5	;RP0=1, select bank1
  8671  1CA3  1303               	bcf	3,6	;RP1=0, select bank1
  8672  1CA4  1005               	bcf	5,0	;volatile
  8673  1CA5                     l3176:
  8674                           
  8675                           ;mainp1.c: 132:     TRISAbits.TRISA1 = 1;
  8676  1CA5  1485               	bsf	5,1	;volatile
  8677  1CA6                     l3178:
  8678                           
  8679                           ;mainp1.c: 133:     TRISAbits.TRISA2 = 1;
  8680  1CA6  1505               	bsf	5,2	;volatile
  8681                           
  8682                           ;mainp1.c: 134:     TRISB = 0;
  8683  1CA7  0186               	clrf	6	;volatile
  8684                           
  8685                           ;mainp1.c: 135:     TRISD = 0;
  8686  1CA8  0188               	clrf	8	;volatile
  8687                           
  8688                           ;mainp1.c: 136:     TRISB = 0;
  8689  1CA9  0186               	clrf	6	;volatile
  8690                           
  8691                           ;mainp1.c: 138:     PORTB = 0;
  8692  1CAA  1283               	bcf	3,5	;RP0=0, select bank0
  8693  1CAB  1303               	bcf	3,6	;RP1=0, select bank0
  8694  1CAC  0186               	clrf	6	;volatile
  8695                           
  8696                           ;mainp1.c: 139:     PORTD = 0;
  8697  1CAD  0188               	clrf	8	;volatile
  8698                           
  8699                           ;mainp1.c: 140:     PORTA = 0;
  8700  1CAE  0185               	clrf	5	;volatile
  8701  1CAF                     l106:
  8702  1CAF  0008               	return
  8703  1CB0                     __end_of_cfg_io:
  8704                           
  8705                           	psect	text28
  8706  1C79                     __ptext28:	
  8707 ;; *************** function _cfg_clk *****************
  8708 ;; Defined at:
  8709 ;;		line 143 in file "mainp1.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;		None
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;		None
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      void 
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8723 ;;      Params:         0       0       0       0       0
  8724 ;;      Locals:         0       0       0       0       0
  8725 ;;      Temps:          0       0       0       0       0
  8726 ;;      Totals:         0       0       0       0       0
  8727 ;;Total ram usage:        0 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    1
  8730 ;; This function calls:
  8731 ;;		Nothing
  8732 ;; This function is called by:
  8733 ;;		_main
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           
  8738                           ;psect for function _cfg_clk
  8739  1C79                     _cfg_clk:
  8740  1C79                     l3194:	
  8741                           ;incstack = 0
  8742                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  8743                           
  8744                           
  8745                           ;mainp1.c: 144:     OSCCONbits.IRCF = 0b110;
  8746  1C79  1683               	bsf	3,5	;RP0=1, select bank1
  8747  1C7A  1303               	bcf	3,6	;RP1=0, select bank1
  8748  1C7B  080F               	movf	15,w	;volatile
  8749  1C7C  398F               	andlw	-113
  8750  1C7D  3860               	iorlw	96
  8751  1C7E  008F               	movwf	15	;volatile
  8752  1C7F                     l3196:
  8753                           
  8754                           ;mainp1.c: 145:     OSCCONbits.SCS = 1;
  8755  1C7F  140F               	bsf	15,0	;volatile
  8756  1C80                     l109:
  8757  1C80  0008               	return
  8758  1C81                     __end_of_cfg_clk:
  8759                           
  8760                           	psect	text29
  8761  1C72                     __ptext29:	
  8762 ;; *************** function _isr *****************
  8763 ;; Defined at:
  8764 ;;		line 66 in file "mainp1.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;		None
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;		None
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      void 
  8771 ;; Registers used:
  8772 ;;		None
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8778 ;;      Params:         0       0       0       0       0
  8779 ;;      Locals:         0       0       0       0       0
  8780 ;;      Temps:          2       0       0       0       0
  8781 ;;      Totals:         2       0       0       0       0
  8782 ;;Total ram usage:        2 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		Interrupt level 1
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           
  8792                           ;psect for function _isr
  8793  1C72                     _isr:
  8794  1C72                     i1l85:
  8795  1C72  0871               	movf	??_isr+1,w
  8796  1C73  008A               	movwf	10
  8797  1C74  0E70               	swapf	??_isr,w
  8798  1C75  0083               	movwf	3
  8799  1C76  0EFE               	swapf	btemp,f
  8800  1C77  0E7E               	swapf	btemp,w
  8801  1C78  0009               	retfie
  8802  1C79                     __end_of_isr:
  8803  007E                     btemp	set	126	;btemp
  8804  007E                     wtemp0	set	126
  8805                           
  8806                           	psect	intentry
  8807  0004                     __pintentry:	
  8808                           ;incstack = 0
  8809                           ; Regs used in _isr: []
  8810                           
  8811  0004                     interrupt_function:
  8812  007E                     saved_w	set	btemp
  8813  0004  00FE               	movwf	btemp
  8814  0005  0E03               	swapf	3,w
  8815  0006  00F0               	movwf	??_isr
  8816  0007  080A               	movf	10,w
  8817  0008  00F1               	movwf	??_isr+1
  8818  0009  160A  158A  2C72   	ljmp	_isr
  8819                           
  8820                           	psect	config
  8821                           
  8822                           ;Config register CONFIG1 @ 0x2007
  8823                           ;	Oscillator Selection bits
  8824                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8825                           ;	Watchdog Timer Enable bit
  8826                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8827                           ;	Power-up Timer Enable bit
  8828                           ;	PWRTE = OFF, PWRT disabled
  8829                           ;	RE3/MCLR pin function select bit
  8830                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8831                           ;	Code Protection bit
  8832                           ;	CP = OFF, Program memory code protection is disabled
  8833                           ;	Data Code Protection bit
  8834                           ;	CPD = OFF, Data memory code protection is disabled
  8835                           ;	Brown Out Reset Selection bits
  8836                           ;	BOREN = OFF, BOR disabled
  8837                           ;	Internal External Switchover bit
  8838                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8839                           ;	Fail-Safe Clock Monitor Enabled bit
  8840                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8841                           ;	Low Voltage Programming Enable bit
  8842                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8843                           ;	In-Circuit Debugger Mode bit
  8844                           ;	DEBUG = 0x1, unprogrammed default
  8845  2007                     	org	8199
  8846  2007  20D4               	dw	8404
  8847                           
  8848                           ;Config register CONFIG2 @ 0x2008
  8849                           ;	Brown-out Reset Selection bit
  8850                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8851                           ;	Flash Program Memory Self Write Enable bits
  8852                           ;	WRT = OFF, Write protection off
  8853  2008                     	org	8200
  8854  2008  3FFF               	dw	16383
  8855                           
  8856                           	psect	text1_split_1
  8857  001F                     u5270:
  8858  001F                     l3306:
  8859  001F  1683               	bsf	3,5	;RP0=1, select bank1
  8860  0020  1303               	bcf	3,6	;RP1=0, select bank1
  8861  0021  0843               	movf	(sprintf@fval+3)^(0+128),w
  8862  0022  00F5               	movwf	___fleq@ff1+3
  8863  0023  0842               	movf	(sprintf@fval+2)^(0+128),w
  8864  0024  00F4               	movwf	___fleq@ff1+2
  8865  0025  0841               	movf	(sprintf@fval+1)^(0+128),w
  8866  0026  00F3               	movwf	___fleq@ff1+1
  8867  0027  0840               	movf	sprintf@fval^(0+128),w
  8868  0028  00F2               	movwf	___fleq@ff1
  8869  0029  3000               	movlw	0
  8870  002A  00F9               	movwf	___fleq@ff2+3
  8871  002B  3000               	movlw	0
  8872  002C  00F8               	movwf	___fleq@ff2+2
  8873  002D  3000               	movlw	0
  8874  002E  00F7               	movwf	___fleq@ff2+1
  8875  002F  3000               	movlw	0
  8876  0030  00F6               	movwf	___fleq@ff2
  8877  0031  160A  158A  2566  120A  118A  	fcall	___fleq
  8878  0036  1803               	btfsc	3,0
  8879  0037  2839               	goto	u5281
  8880  0038  283A               	goto	u5280
  8881  0039                     u5281:
  8882  0039  28E2               	goto	l3326
  8883  003A                     u5280:
  8884  003A                     l3308:
  8885  003A  1683               	bsf	3,5	;RP0=1, select bank1
  8886  003B  1303               	bcf	3,6	;RP1=0, select bank1
  8887  003C  0843               	movf	(sprintf@fval+3)^(0+128),w
  8888  003D  1283               	bcf	3,5	;RP0=0, select bank0
  8889  003E  1303               	bcf	3,6	;RP1=0, select bank0
  8890  003F  00D8               	movwf	___fltol@f1+3
  8891  0040  1683               	bsf	3,5	;RP0=1, select bank1
  8892  0041  1303               	bcf	3,6	;RP1=0, select bank1
  8893  0042  0842               	movf	(sprintf@fval+2)^(0+128),w
  8894  0043  1283               	bcf	3,5	;RP0=0, select bank0
  8895  0044  1303               	bcf	3,6	;RP1=0, select bank0
  8896  0045  00D7               	movwf	___fltol@f1+2
  8897  0046  1683               	bsf	3,5	;RP0=1, select bank1
  8898  0047  1303               	bcf	3,6	;RP1=0, select bank1
  8899  0048  0841               	movf	(sprintf@fval+1)^(0+128),w
  8900  0049  1283               	bcf	3,5	;RP0=0, select bank0
  8901  004A  1303               	bcf	3,6	;RP1=0, select bank0
  8902  004B  00D6               	movwf	___fltol@f1+1
  8903  004C  1683               	bsf	3,5	;RP0=1, select bank1
  8904  004D  1303               	bcf	3,6	;RP1=0, select bank1
  8905  004E  0840               	movf	sprintf@fval^(0+128),w
  8906  004F  1283               	bcf	3,5	;RP0=0, select bank0
  8907  0050  1303               	bcf	3,6	;RP1=0, select bank0
  8908  0051  00D5               	movwf	___fltol@f1
  8909  0052  160A  158A  2784  120A  118A  	fcall	___fltol
  8910  0057  1283               	bcf	3,5	;RP0=0, select bank0
  8911  0058  1303               	bcf	3,6	;RP1=0, select bank0
  8912  0059  0858               	movf	?___fltol+3,w
  8913  005A  0457               	iorwf	?___fltol+2,w
  8914  005B  0456               	iorwf	?___fltol+1,w
  8915  005C  0455               	iorwf	?___fltol,w
  8916  005D  1D03               	skipz
  8917  005E  2860               	goto	u5291
  8918  005F  2861               	goto	u5290
  8919  0060                     u5291:
  8920  0060  28E2               	goto	l3326
  8921  0061                     u5290:
  8922  0061                     l3310:
  8923  0061  1683               	bsf	3,5	;RP0=1, select bank1
  8924  0062  1303               	bcf	3,6	;RP1=0, select bank1
  8925  0063  083B               	movf	(sprintf@eexp+1)^(0+128),w
  8926  0064  3A80               	xorlw	128
  8927  0065  00FF               	movwf	btemp+1
  8928  0066  3080               	movlw	128
  8929  0067  027F               	subwf	btemp+1,w
  8930  0068  1D03               	skipz
  8931  0069  286C               	goto	u5305
  8932  006A  3002               	movlw	2
  8933  006B  023A               	subwf	sprintf@eexp^(0+128),w
  8934  006C                     u5305:
  8935  006C  1C03               	skipc
  8936  006D  286F               	goto	u5301
  8937  006E  2870               	goto	u5300
  8938  006F                     u5301:
  8939  006F  28E2               	goto	l3326
  8940  0070                     u5300:
  8941  0070                     l3312:
  8942                           
  8943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8944  0070  1683               	bsf	3,5	;RP0=1, select bank1
  8945  0071  1303               	bcf	3,6	;RP1=0, select bank1
  8946  0072  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  8947  0073  00F5               	movwf	___flge@ff1+3
  8948  0074  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  8949  0075  00F4               	movwf	___flge@ff1+2
  8950  0076  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  8951  0077  00F3               	movwf	___flge@ff1+1
  8952  0078  0836               	movf	sprintf@tmpval^(0+128),w
  8953  0079  00F2               	movwf	___flge@ff1
  8954  007A  3040               	movlw	64
  8955  007B  00F9               	movwf	___flge@ff2+3
  8956  007C  3089               	movlw	137
  8957  007D  00F8               	movwf	___flge@ff2+2
  8958  007E  3070               	movlw	112
  8959  007F  00F7               	movwf	___flge@ff2+1
  8960  0080  305F               	movlw	95
  8961  0081  00F6               	movwf	___flge@ff2
  8962  0082  160A  118A  2017  120A  118A  	fcall	___flge
  8963  0087  1803               	btfsc	3,0
  8964  0088  288A               	goto	u5311
  8965  0089  288B               	goto	u5310
  8966  008A                     u5311:
  8967  008A  2894               	goto	l3316
  8968  008B                     u5310:
  8969  008B                     l3314:
  8970                           
  8971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  8972  008B  30F7               	movlw	247
  8973  008C  1683               	bsf	3,5	;RP0=1, select bank1
  8974  008D  1303               	bcf	3,6	;RP1=0, select bank1
  8975  008E  07BA               	addwf	sprintf@eexp^(0+128),f
  8976  008F  1803               	skipnc
  8977  0090  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  8978  0091  30FF               	movlw	255
  8979  0092  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  8980                           
  8981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8982  0093  289C               	goto	l3318
  8983  0094                     l3316:
  8984                           
  8985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  8986  0094  30F8               	movlw	248
  8987  0095  1683               	bsf	3,5	;RP0=1, select bank1
  8988  0096  1303               	bcf	3,6	;RP1=0, select bank1
  8989  0097  07BA               	addwf	sprintf@eexp^(0+128),f
  8990  0098  1803               	skipnc
  8991  0099  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  8992  009A  30FF               	movlw	255
  8993  009B  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  8994  009C                     l3318:
  8995                           
  8996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8997  009C  083A               	movf	sprintf@eexp^(0+128),w
  8998  009D  120A  158A  249D  120A  118A  	fcall	_scale
  8999  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  9000  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  9001  00A4  0845               	movf	?_scale+3,w
  9002  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  9003  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  9004  00A7  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9005  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  9006  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  9007  00AA  0844               	movf	?_scale+2,w
  9008  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  9009  00AC  1303               	bcf	3,6	;RP1=0, select bank1
  9010  00AD  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9011  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  9012  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  9013  00B0  0843               	movf	?_scale+1,w
  9014  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  9015  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  9016  00B3  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9017  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  9018  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  9019  00B6  0842               	movf	?_scale,w
  9020  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  9021  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  9022  00B9  00B6               	movwf	sprintf@tmpval^(0+128)
  9023  00BA                     l3320:
  9024  00BA  0843               	movf	(sprintf@fval+3)^(0+128),w
  9025  00BB  00F5               	movwf	__div_to_l_@f1+3
  9026  00BC  0842               	movf	(sprintf@fval+2)^(0+128),w
  9027  00BD  00F4               	movwf	__div_to_l_@f1+2
  9028  00BE  0841               	movf	(sprintf@fval+1)^(0+128),w
  9029  00BF  00F3               	movwf	__div_to_l_@f1+1
  9030  00C0  0840               	movf	sprintf@fval^(0+128),w
  9031  00C1  00F2               	movwf	__div_to_l_@f1
  9032  00C2  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9033  00C3  00F9               	movwf	__div_to_l_@f2+3
  9034  00C4  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9035  00C5  00F8               	movwf	__div_to_l_@f2+2
  9036  00C6  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9037  00C7  00F7               	movwf	__div_to_l_@f2+1
  9038  00C8  0836               	movf	sprintf@tmpval^(0+128),w
  9039  00C9  00F6               	movwf	__div_to_l_@f2
  9040  00CA  160A  118A  2234  120A  118A  	fcall	__div_to_l_
  9041  00CF  0875               	movf	?__div_to_l_+3,w
  9042  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  9043  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  9044  00D2  00B5               	movwf	(sprintf@val+3)^(0+128)
  9045  00D3  0874               	movf	?__div_to_l_+2,w
  9046  00D4  00B4               	movwf	(sprintf@val+2)^(0+128)
  9047  00D5  0873               	movf	?__div_to_l_+1,w
  9048  00D6  00B3               	movwf	(sprintf@val+1)^(0+128)
  9049  00D7  0872               	movf	?__div_to_l_,w
  9050  00D8  00B2               	movwf	sprintf@val^(0+128)
  9051  00D9                     l3324:
  9052                           
  9053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9054  00D9  3000               	movlw	0
  9055  00DA  00C3               	movwf	(sprintf@fval+3)^(0+128)
  9056  00DB  3000               	movlw	0
  9057  00DC  00C2               	movwf	(sprintf@fval+2)^(0+128)
  9058  00DD  3000               	movlw	0
  9059  00DE  00C1               	movwf	(sprintf@fval+1)^(0+128)
  9060  00DF  3000               	movlw	0
  9061  00E0  00C0               	movwf	sprintf@fval^(0+128)
  9062                           
  9063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9064  00E1  2948               	goto	l3332
  9065  00E2                     l3326:
  9066                           
  9067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9068  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  9069  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  9070  00E4  0843               	movf	(sprintf@fval+3)^(0+128),w
  9071  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  9072  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  9073  00E7  00D8               	movwf	___fltol@f1+3
  9074  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  9075  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  9076  00EA  0842               	movf	(sprintf@fval+2)^(0+128),w
  9077  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  9078  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  9079  00ED  00D7               	movwf	___fltol@f1+2
  9080  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  9081  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  9082  00F0  0841               	movf	(sprintf@fval+1)^(0+128),w
  9083  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  9084  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  9085  00F3  00D6               	movwf	___fltol@f1+1
  9086  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  9087  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  9088  00F6  0840               	movf	sprintf@fval^(0+128),w
  9089  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  9090  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  9091  00F9  00D5               	movwf	___fltol@f1
  9092  00FA  160A  158A  2784  120A  118A  	fcall	___fltol
  9093  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  9094  0100  1303               	bcf	3,6	;RP1=0, select bank0
  9095  0101  0858               	movf	?___fltol+3,w
  9096  0102  1683               	bsf	3,5	;RP0=1, select bank1
  9097  0103  1303               	bcf	3,6	;RP1=0, select bank1
  9098  0104  00B5               	movwf	(sprintf@val+3)^(0+128)
  9099  0105  1283               	bcf	3,5	;RP0=0, select bank0
  9100  0106  1303               	bcf	3,6	;RP1=0, select bank0
  9101  0107  0857               	movf	?___fltol+2,w
  9102  0108  1683               	bsf	3,5	;RP0=1, select bank1
  9103  0109  1303               	bcf	3,6	;RP1=0, select bank1
  9104  010A  00B4               	movwf	(sprintf@val+2)^(0+128)
  9105  010B  1283               	bcf	3,5	;RP0=0, select bank0
  9106  010C  1303               	bcf	3,6	;RP1=0, select bank0
  9107  010D  0856               	movf	?___fltol+1,w
  9108  010E  1683               	bsf	3,5	;RP0=1, select bank1
  9109  010F  1303               	bcf	3,6	;RP1=0, select bank1
  9110  0110  00B3               	movwf	(sprintf@val+1)^(0+128)
  9111  0111  1283               	bcf	3,5	;RP0=0, select bank0
  9112  0112  1303               	bcf	3,6	;RP1=0, select bank0
  9113  0113  0855               	movf	?___fltol,w
  9114  0114  1683               	bsf	3,5	;RP0=1, select bank1
  9115  0115  1303               	bcf	3,6	;RP1=0, select bank1
  9116  0116  00B2               	movwf	sprintf@val^(0+128)
  9117  0117                     l3328:
  9118                           
  9119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9120  0117  0835               	movf	(sprintf@val+3)^(0+128),w
  9121  0118  00F5               	movwf	___xxtofl@val+3
  9122  0119  0834               	movf	(sprintf@val+2)^(0+128),w
  9123  011A  00F4               	movwf	___xxtofl@val+2
  9124  011B  0833               	movf	(sprintf@val+1)^(0+128),w
  9125  011C  00F3               	movwf	___xxtofl@val+1
  9126  011D  0832               	movf	sprintf@val^(0+128),w
  9127  011E  00F2               	movwf	___xxtofl@val
  9128  011F  3000               	movlw	0
  9129  0120  160A  118A  20BB  120A  118A  	fcall	___xxtofl
  9130  0125  0875               	movf	?___xxtofl+3,w
  9131  0126  1683               	bsf	3,5	;RP0=1, select bank1
  9132  0127  1303               	bcf	3,6	;RP1=0, select bank1
  9133  0128  00A3               	movwf	(___flsub@a+3)^(0+128)
  9134  0129  0874               	movf	?___xxtofl+2,w
  9135  012A  00A2               	movwf	(___flsub@a+2)^(0+128)
  9136  012B  0873               	movf	?___xxtofl+1,w
  9137  012C  00A1               	movwf	(___flsub@a+1)^(0+128)
  9138  012D  0872               	movf	?___xxtofl,w
  9139  012E  00A0               	movwf	___flsub@a^(0+128)
  9140  012F  0843               	movf	(sprintf@fval+3)^(0+128),w
  9141  0130  00A7               	movwf	(___flsub@b+3)^(0+128)
  9142  0131  0842               	movf	(sprintf@fval+2)^(0+128),w
  9143  0132  00A6               	movwf	(___flsub@b+2)^(0+128)
  9144  0133  0841               	movf	(sprintf@fval+1)^(0+128),w
  9145  0134  00A5               	movwf	(___flsub@b+1)^(0+128)
  9146  0135  0840               	movf	sprintf@fval^(0+128),w
  9147  0136  00A4               	movwf	___flsub@b^(0+128)
  9148  0137  160A  158A  25B6  120A  118A  	fcall	___flsub
  9149  013C  1683               	bsf	3,5	;RP0=1, select bank1
  9150  013D  1303               	bcf	3,6	;RP1=0, select bank1
  9151  013E  0823               	movf	(?___flsub+3)^(0+128),w
  9152  013F  00C3               	movwf	(sprintf@fval+3)^(0+128)
  9153  0140  0822               	movf	(?___flsub+2)^(0+128),w
  9154  0141  00C2               	movwf	(sprintf@fval+2)^(0+128)
  9155  0142  0821               	movf	(?___flsub+1)^(0+128),w
  9156  0143  00C1               	movwf	(sprintf@fval+1)^(0+128)
  9157  0144  0820               	movf	?___flsub^(0+128),w
  9158  0145  00C0               	movwf	sprintf@fval^(0+128)
  9159  0146                     l3330:
  9160                           
  9161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9162  0146  01BA               	clrf	sprintf@eexp^(0+128)
  9163  0147  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  9164  0148                     l3332:
  9165                           
  9166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9167  0148  01C7               	clrf	sprintf@c^(0+128)
  9168  0149  0AC7               	incf	sprintf@c^(0+128),f
  9169  014A                     l3338:
  9170                           
  9171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9172  014A  0847               	movf	sprintf@c^(0+128),w
  9173  014B  00A8               	movwf	??_sprintf^(0+128)
  9174  014C  3001               	movlw	1
  9175  014D                     u5325:
  9176  014D  1003               	clrc
  9177  014E  0DA8               	rlf	??_sprintf^(0+128),f
  9178  014F  3EFF               	addlw	-1
  9179  0150  1D03               	skipz
  9180  0151  294D               	goto	u5325
  9181  0152  1003               	clrc
  9182  0153  0D28               	rlf	??_sprintf^(0+128),w
  9183  0154  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9184  0155  0084               	movwf	4
  9185  0156  160A  158A  2000  120A  118A  	fcall	stringdir
  9186  015B  00A9               	movwf	(??_sprintf+1)^(0+128)
  9187  015C  160A  158A  2000  120A  118A  	fcall	stringdir
  9188  0161  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  9189  0162  160A  158A  2000  120A  118A  	fcall	stringdir
  9190  0167  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  9191  0168  160A  158A  2000  120A  118A  	fcall	stringdir
  9192  016D  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  9193  016E  082C               	movf	(??_sprintf+4)^(0+128),w
  9194  016F  0235               	subwf	(sprintf@val+3)^(0+128),w
  9195  0170  1D03               	skipz
  9196  0171  297C               	goto	u5335
  9197  0172  082B               	movf	(??_sprintf+3)^(0+128),w
  9198  0173  0234               	subwf	(sprintf@val+2)^(0+128),w
  9199  0174  1D03               	skipz
  9200  0175  297C               	goto	u5335
  9201  0176  082A               	movf	(??_sprintf+2)^(0+128),w
  9202  0177  0233               	subwf	(sprintf@val+1)^(0+128),w
  9203  0178  1D03               	skipz
  9204  0179  297C               	goto	u5335
  9205  017A  0829               	movf	(??_sprintf+1)^(0+128),w
  9206  017B  0232               	subwf	sprintf@val^(0+128),w
  9207  017C                     u5335:
  9208  017C  1803               	skipnc
  9209  017D  297F               	goto	u5331
  9210  017E  2980               	goto	u5330
  9211  017F                     u5331:
  9212  017F  2981               	goto	l3342
  9213  0180                     u5330:
  9214  0180  298B               	goto	l3344
  9215  0181                     l3342:
  9216  0181  3001               	movlw	1
  9217  0182  00A8               	movwf	??_sprintf^(0+128)
  9218  0183  0828               	movf	??_sprintf^(0+128),w
  9219  0184  07C7               	addwf	sprintf@c^(0+128),f
  9220  0185  300A               	movlw	10
  9221  0186  0647               	xorwf	sprintf@c^(0+128),w
  9222  0187  1D03               	btfss	3,2
  9223  0188  298A               	goto	u5341
  9224  0189  298B               	goto	u5340
  9225  018A                     u5341:
  9226  018A  294A               	goto	l3338
  9227  018B                     u5340:
  9228  018B                     l3344:
  9229                           
  9230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9231  018B  0847               	movf	sprintf@c^(0+128),w
  9232  018C  0744               	addwf	sprintf@prec^(0+128),w
  9233  018D  00A8               	movwf	??_sprintf^(0+128)
  9234  018E  0845               	movf	(sprintf@prec+1)^(0+128),w
  9235  018F  1803               	skipnc
  9236  0190  0A45               	incf	(sprintf@prec+1)^(0+128),w
  9237  0191  00A9               	movwf	(??_sprintf^(0+128)+1)
  9238  0192  083A               	movf	sprintf@eexp^(0+128),w
  9239  0193  0728               	addwf	??_sprintf^(0+128),w
  9240  0194  00AA               	movwf	(??_sprintf+2)^(0+128)
  9241  0195  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9242  0196  1803               	skipnc
  9243  0197  0A3B               	incf	(sprintf@eexp+1)^(0+128),w
  9244  0198  0729               	addwf	(??_sprintf+1)^(0+128),w
  9245  0199  00AB               	movwf	(??_sprintf+3)^(0+128)
  9246  019A  082A               	movf	(??_sprintf+2)^(0+128),w
  9247  019B  02BE               	subwf	sprintf@width^(0+128),f
  9248  019C  082B               	movf	(??_sprintf+3)^(0+128),w
  9249  019D  1C03               	skipc
  9250  019E  03BF               	decf	(sprintf@width+1)^(0+128),f
  9251  019F  02BF               	subwf	(sprintf@width+1)^(0+128),f
  9252                           
  9253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9254  01A0  0844               	movf	sprintf@prec^(0+128),w
  9255  01A1  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9256  01A2  1903               	btfsc	3,2
  9257  01A3  29A5               	goto	u5351
  9258  01A4  29A6               	goto	u5350
  9259  01A5                     u5351:
  9260  01A5  29AC               	goto	l3348
  9261  01A6                     u5350:
  9262  01A6                     l3346:
  9263                           
  9264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9265  01A6  30FF               	movlw	255
  9266  01A7  07BE               	addwf	sprintf@width^(0+128),f
  9267  01A8  1803               	skipnc
  9268  01A9  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9269  01AA  30FF               	movlw	255
  9270  01AB  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9271  01AC                     l3348:
  9272                           
  9273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9274  01AC  3003               	movlw	3
  9275  01AD  053C               	andwf	sprintf@flag^(0+128),w
  9276  01AE  00A8               	movwf	??_sprintf^(0+128)
  9277  01AF  3000               	movlw	0
  9278  01B0  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9279  01B1  00A9               	movwf	(??_sprintf+1)^(0+128)
  9280  01B2  0828               	movf	??_sprintf^(0+128),w
  9281  01B3  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9282  01B4  1903               	btfsc	3,2
  9283  01B5  29B7               	goto	u5361
  9284  01B6  29B8               	goto	u5360
  9285  01B7                     u5361:
  9286  01B7  29BE               	goto	l3352
  9287  01B8                     u5360:
  9288  01B8                     l3350:
  9289                           
  9290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9291  01B8  30FF               	movlw	255
  9292  01B9  07BE               	addwf	sprintf@width^(0+128),f
  9293  01BA  1803               	skipnc
  9294  01BB  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9295  01BC  30FF               	movlw	255
  9296  01BD  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9297  01BE                     l3352:
  9298                           
  9299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
  9300  01BE  1D3C               	btfss	sprintf@flag^(0+128),2
  9301  01BF  29C1               	goto	u5371
  9302  01C0  29C2               	goto	u5370
  9303  01C1                     u5371:
  9304  01C1  2A0E               	goto	l3374
  9305  01C2                     u5370:
  9306  01C2                     l3354:
  9307                           
  9308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
  9309  01C2  3003               	movlw	3
  9310  01C3  053C               	andwf	sprintf@flag^(0+128),w
  9311  01C4  00A8               	movwf	??_sprintf^(0+128)
  9312  01C5  3000               	movlw	0
  9313  01C6  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9314  01C7  00A9               	movwf	(??_sprintf+1)^(0+128)
  9315  01C8  0828               	movf	??_sprintf^(0+128),w
  9316  01C9  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9317  01CA  1903               	btfsc	3,2
  9318  01CB  29CD               	goto	u5381
  9319  01CC  29CE               	goto	u5380
  9320  01CD                     u5381:
  9321  01CD  29ED               	goto	l3366
  9322  01CE                     u5380:
  9323  01CE                     l3356:
  9324                           
  9325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
  9326  01CE  302D               	movlw	45
  9327  01CF  00A8               	movwf	??_sprintf^(0+128)
  9328  01D0  0846               	movf	sprintf@sp^(0+128),w
  9329  01D1  0084               	movwf	4
  9330  01D2  0828               	movf	??_sprintf^(0+128),w
  9331  01D3  1383               	bcf	3,7	;select IRP bank0
  9332  01D4  0080               	movwf	0
  9333  01D5                     l3358:
  9334  01D5  3001               	movlw	1
  9335  01D6  00A8               	movwf	??_sprintf^(0+128)
  9336  01D7  0828               	movf	??_sprintf^(0+128),w
  9337  01D8  07C6               	addwf	sprintf@sp^(0+128),f
  9338  01D9  29ED               	goto	l3366
  9339  01DA                     l3360:
  9340                           
  9341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
  9342  01DA  3030               	movlw	48
  9343  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  9344  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  9345  01DD  00A8               	movwf	??_sprintf^(0+128)
  9346  01DE  0846               	movf	sprintf@sp^(0+128),w
  9347  01DF  0084               	movwf	4
  9348  01E0  0828               	movf	??_sprintf^(0+128),w
  9349  01E1  1383               	bcf	3,7	;select IRP bank0
  9350  01E2  0080               	movwf	0
  9351  01E3                     l3362:
  9352  01E3  3001               	movlw	1
  9353  01E4  00A8               	movwf	??_sprintf^(0+128)
  9354  01E5  0828               	movf	??_sprintf^(0+128),w
  9355  01E6  07C6               	addwf	sprintf@sp^(0+128),f
  9356  01E7                     l3364:
  9357                           
  9358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
  9359  01E7  30FF               	movlw	255
  9360  01E8  07BE               	addwf	sprintf@width^(0+128),f
  9361  01E9  1803               	skipnc
  9362  01EA  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9363  01EB  30FF               	movlw	255
  9364  01EC  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9365  01ED                     l3366:
  9366                           
  9367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
  9368  01ED  083F               	movf	(sprintf@width+1)^(0+128),w
  9369  01EE  3A80               	xorlw	128
  9370  01EF  00FF               	movwf	btemp+1
  9371  01F0  3080               	movlw	128
  9372  01F1  027F               	subwf	btemp+1,w
  9373  01F2  1D03               	skipz
  9374  01F3  29F6               	goto	u5395
  9375  01F4  3001               	movlw	1
  9376  01F5  023E               	subwf	sprintf@width^(0+128),w
  9377  01F6                     u5395:
  9378  01F6  1803               	skipnc
  9379  01F7  29F9               	goto	u5391
  9380  01F8  29FA               	goto	u5390
  9381  01F9                     u5391:
  9382  01F9  29DA               	goto	l3360
  9383  01FA                     u5390:
  9384  01FA  2A9B               	goto	l359
  9385  01FB                     l3368:
  9386                           
  9387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9388  01FB  3020               	movlw	32
  9389  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  9390  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  9391  01FE  00A8               	movwf	??_sprintf^(0+128)
  9392  01FF  0846               	movf	sprintf@sp^(0+128),w
  9393  0200  0084               	movwf	4
  9394  0201  0828               	movf	??_sprintf^(0+128),w
  9395  0202  1383               	bcf	3,7	;select IRP bank0
  9396  0203  0080               	movwf	0
  9397  0204                     l3370:
  9398  0204  3001               	movlw	1
  9399  0205  00A8               	movwf	??_sprintf^(0+128)
  9400  0206  0828               	movf	??_sprintf^(0+128),w
  9401  0207  07C6               	addwf	sprintf@sp^(0+128),f
  9402  0208                     l3372:
  9403                           
  9404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
  9405  0208  30FF               	movlw	255
  9406  0209  07BE               	addwf	sprintf@width^(0+128),f
  9407  020A  1803               	skipnc
  9408  020B  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9409  020C  30FF               	movlw	255
  9410  020D  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9411  020E                     l3374:
  9412                           
  9413                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9414  020E  083F               	movf	(sprintf@width+1)^(0+128),w
  9415  020F  3A80               	xorlw	128
  9416  0210  00FF               	movwf	btemp+1
  9417  0211  3080               	movlw	128
  9418  0212  027F               	subwf	btemp+1,w
  9419  0213  1D03               	skipz
  9420  0214  2A17               	goto	u5405
  9421  0215  3001               	movlw	1
  9422  0216  023E               	subwf	sprintf@width^(0+128),w
  9423  0217                     u5405:
  9424  0217  1803               	skipnc
  9425  0218  2A1A               	goto	u5401
  9426  0219  2A1B               	goto	u5400
  9427  021A                     u5401:
  9428  021A  29FB               	goto	l3368
  9429  021B                     u5400:
  9430  021B                     l3376:
  9431                           
  9432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9433  021B  3003               	movlw	3
  9434  021C  1683               	bsf	3,5	;RP0=1, select bank1
  9435  021D  1303               	bcf	3,6	;RP1=0, select bank1
  9436  021E  053C               	andwf	sprintf@flag^(0+128),w
  9437  021F  00A8               	movwf	??_sprintf^(0+128)
  9438  0220  3000               	movlw	0
  9439  0221  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9440  0222  00A9               	movwf	(??_sprintf+1)^(0+128)
  9441  0223  0828               	movf	??_sprintf^(0+128),w
  9442  0224  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9443  0225  1903               	btfsc	3,2
  9444  0226  2A28               	goto	u5411
  9445  0227  2A29               	goto	u5410
  9446  0228                     u5411:
  9447  0228  2A9B               	goto	l359
  9448  0229                     u5410:
  9449  0229                     l3378:
  9450                           
  9451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9452  0229  302D               	movlw	45
  9453  022A  00A8               	movwf	??_sprintf^(0+128)
  9454  022B  0846               	movf	sprintf@sp^(0+128),w
  9455  022C  0084               	movwf	4
  9456  022D  0828               	movf	??_sprintf^(0+128),w
  9457  022E  1383               	bcf	3,7	;select IRP bank0
  9458  022F  0080               	movwf	0
  9459  0230                     l3380:
  9460  0230  3001               	movlw	1
  9461  0231  00A8               	movwf	??_sprintf^(0+128)
  9462  0232  0828               	movf	??_sprintf^(0+128),w
  9463  0233  07C6               	addwf	sprintf@sp^(0+128),f
  9464  0234  2A9B               	goto	l359
  9465  0235                     l3382:
  9466                           
  9467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9468  0235  0847               	movf	sprintf@c^(0+128),w
  9469  0236  00A8               	movwf	??_sprintf^(0+128)
  9470  0237  3001               	movlw	1
  9471  0238                     u5425:
  9472  0238  1003               	clrc
  9473  0239  0DA8               	rlf	??_sprintf^(0+128),f
  9474  023A  3EFF               	addlw	-1
  9475  023B  1D03               	skipz
  9476  023C  2A38               	goto	u5425
  9477  023D  1003               	clrc
  9478  023E  0D28               	rlf	??_sprintf^(0+128),w
  9479  023F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9480  0240  0084               	movwf	4
  9481  0241  160A  158A  2000  120A  118A  	fcall	stringdir
  9482  0246  00F2               	movwf	___lldiv@divisor
  9483  0247  160A  158A  2000  120A  118A  	fcall	stringdir
  9484  024C  00F3               	movwf	___lldiv@divisor+1
  9485  024D  160A  158A  2000  120A  118A  	fcall	stringdir
  9486  0252  00F4               	movwf	___lldiv@divisor+2
  9487  0253  160A  158A  2000  120A  118A  	fcall	stringdir
  9488  0258  00F5               	movwf	___lldiv@divisor+3
  9489  0259  0835               	movf	(sprintf@val+3)^(0+128),w
  9490  025A  00F9               	movwf	___lldiv@dividend+3
  9491  025B  0834               	movf	(sprintf@val+2)^(0+128),w
  9492  025C  00F8               	movwf	___lldiv@dividend+2
  9493  025D  0833               	movf	(sprintf@val+1)^(0+128),w
  9494  025E  00F7               	movwf	___lldiv@dividend+1
  9495  025F  0832               	movf	sprintf@val^(0+128),w
  9496  0260  00F6               	movwf	___lldiv@dividend
  9497  0261  160A  158A  26B3  120A  118A  	fcall	___lldiv
  9498  0266  0875               	movf	?___lldiv+3,w
  9499  0267  1683               	bsf	3,5	;RP0=1, select bank1
  9500  0268  1303               	bcf	3,6	;RP1=0, select bank1
  9501  0269  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9502  026A  0874               	movf	?___lldiv+2,w
  9503  026B  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9504  026C  0873               	movf	?___lldiv+1,w
  9505  026D  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9506  026E  0872               	movf	?___lldiv,w
  9507  026F  00B6               	movwf	sprintf@tmpval^(0+128)
  9508  0270                     l3384:
  9509                           
  9510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9511  0270  3000               	movlw	0
  9512  0271  00F5               	movwf	___llmod@divisor+3
  9513  0272  3000               	movlw	0
  9514  0273  00F4               	movwf	___llmod@divisor+2
  9515  0274  3000               	movlw	0
  9516  0275  00F3               	movwf	___llmod@divisor+1
  9517  0276  300A               	movlw	10
  9518  0277  00F2               	movwf	___llmod@divisor
  9519  0278  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9520  0279  00F9               	movwf	___llmod@dividend+3
  9521  027A  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9522  027B  00F8               	movwf	___llmod@dividend+2
  9523  027C  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9524  027D  00F7               	movwf	___llmod@dividend+1
  9525  027E  0836               	movf	sprintf@tmpval^(0+128),w
  9526  027F  00F6               	movwf	___llmod@dividend
  9527  0280  160A  158A  2606  120A  118A  	fcall	___llmod
  9528  0285  0875               	movf	?___llmod+3,w
  9529  0286  1683               	bsf	3,5	;RP0=1, select bank1
  9530  0287  1303               	bcf	3,6	;RP1=0, select bank1
  9531  0288  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9532  0289  0874               	movf	?___llmod+2,w
  9533  028A  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9534  028B  0873               	movf	?___llmod+1,w
  9535  028C  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9536  028D  0872               	movf	?___llmod,w
  9537  028E  00B6               	movwf	sprintf@tmpval^(0+128)
  9538  028F                     l3386:
  9539                           
  9540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9541  028F  0836               	movf	sprintf@tmpval^(0+128),w
  9542  0290  3E30               	addlw	48
  9543  0291  00A8               	movwf	??_sprintf^(0+128)
  9544  0292  0846               	movf	sprintf@sp^(0+128),w
  9545  0293  0084               	movwf	4
  9546  0294  0828               	movf	??_sprintf^(0+128),w
  9547  0295  1383               	bcf	3,7	;select IRP bank0
  9548  0296  0080               	movwf	0
  9549  0297  3001               	movlw	1
  9550  0298  00A8               	movwf	??_sprintf^(0+128)
  9551  0299  0828               	movf	??_sprintf^(0+128),w
  9552  029A  07C6               	addwf	sprintf@sp^(0+128),f
  9553  029B                     l359:	
  9554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9555                           
  9556                           
  9557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9558  029B  3001               	movlw	1
  9559  029C  1683               	bsf	3,5	;RP0=1, select bank1
  9560  029D  1303               	bcf	3,6	;RP1=0, select bank1
  9561  029E  02C7               	subwf	sprintf@c^(0+128),f
  9562  029F  0A47               	incf	sprintf@c^(0+128),w
  9563  02A0  1D03               	btfss	3,2
  9564  02A1  2AA3               	goto	u5431
  9565  02A2  2AA4               	goto	u5430
  9566  02A3                     u5431:
  9567  02A3  2A35               	goto	l3382
  9568  02A4                     u5430:
  9569  02A4  2AB8               	goto	l3394
  9570  02A5                     l3388:
  9571                           
  9572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9573  02A5  3030               	movlw	48
  9574  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  9575  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  9576  02A8  00A8               	movwf	??_sprintf^(0+128)
  9577  02A9  0846               	movf	sprintf@sp^(0+128),w
  9578  02AA  0084               	movwf	4
  9579  02AB  0828               	movf	??_sprintf^(0+128),w
  9580  02AC  1383               	bcf	3,7	;select IRP bank0
  9581  02AD  0080               	movwf	0
  9582  02AE                     l3390:
  9583  02AE  3001               	movlw	1
  9584  02AF  00A8               	movwf	??_sprintf^(0+128)
  9585  02B0  0828               	movf	??_sprintf^(0+128),w
  9586  02B1  07C6               	addwf	sprintf@sp^(0+128),f
  9587  02B2                     l3392:
  9588                           
  9589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9590  02B2  30FF               	movlw	255
  9591  02B3  07BA               	addwf	sprintf@eexp^(0+128),f
  9592  02B4  1803               	skipnc
  9593  02B5  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  9594  02B6  30FF               	movlw	255
  9595  02B7  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  9596  02B8                     l3394:
  9597                           
  9598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9599  02B8  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9600  02B9  3A80               	xorlw	128
  9601  02BA  00FF               	movwf	btemp+1
  9602  02BB  3080               	movlw	128
  9603  02BC  027F               	subwf	btemp+1,w
  9604  02BD  1D03               	skipz
  9605  02BE  2AC1               	goto	u5445
  9606  02BF  3001               	movlw	1
  9607  02C0  023A               	subwf	sprintf@eexp^(0+128),w
  9608  02C1                     u5445:
  9609  02C1  1803               	skipnc
  9610  02C2  2AC4               	goto	u5441
  9611  02C3  2AC5               	goto	u5440
  9612  02C4                     u5441:
  9613  02C4  2AA5               	goto	l3388
  9614  02C5                     u5440:
  9615  02C5                     l3396:
  9616                           
  9617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9618  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  9619  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  9620  02C7  0845               	movf	(sprintf@prec+1)^(0+128),w
  9621  02C8  3A80               	xorlw	128
  9622  02C9  00FF               	movwf	btemp+1
  9623  02CA  3080               	movlw	128
  9624  02CB  027F               	subwf	btemp+1,w
  9625  02CC  1D03               	skipz
  9626  02CD  2AD0               	goto	u5455
  9627  02CE  3009               	movlw	9
  9628  02CF  0244               	subwf	sprintf@prec^(0+128),w
  9629  02D0                     u5455:
  9630  02D0  1C03               	skipc
  9631  02D1  2AD3               	goto	u5451
  9632  02D2  2AD4               	goto	u5450
  9633  02D3                     u5451:
  9634  02D3  2ADB               	goto	l3400
  9635  02D4                     u5450:
  9636  02D4                     l3398:
  9637                           
  9638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9639  02D4  3008               	movlw	8
  9640  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  9641  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  9642  02D7  00A8               	movwf	??_sprintf^(0+128)
  9643  02D8  0828               	movf	??_sprintf^(0+128),w
  9644  02D9  00C7               	movwf	sprintf@c^(0+128)
  9645  02DA  2AE1               	goto	l366
  9646  02DB                     l3400:
  9647                           
  9648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9649  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  9650  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  9651  02DD  0844               	movf	sprintf@prec^(0+128),w
  9652  02DE  00A8               	movwf	??_sprintf^(0+128)
  9653  02DF  0828               	movf	??_sprintf^(0+128),w
  9654  02E0  00C7               	movwf	sprintf@c^(0+128)
  9655  02E1                     l366:
  9656                           
  9657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9658  02E1  0847               	movf	sprintf@c^(0+128),w
  9659  02E2  00A8               	movwf	??_sprintf^(0+128)
  9660  02E3  01A9               	clrf	(??_sprintf^(0+128)+1)
  9661  02E4  0828               	movf	??_sprintf^(0+128),w
  9662  02E5  02C4               	subwf	sprintf@prec^(0+128),f
  9663  02E6  0829               	movf	(??_sprintf+1)^(0+128),w
  9664  02E7  1C03               	skipc
  9665  02E8  03C5               	decf	(sprintf@prec+1)^(0+128),f
  9666  02E9  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  9667  02EA                     l3402:
  9668                           
  9669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9670  02EA  0847               	movf	sprintf@c^(0+128),w
  9671  02EB  1903               	btfsc	3,2
  9672  02EC  2AEE               	goto	u5461
  9673  02ED  2AEF               	goto	u5460
  9674  02EE                     u5461:
  9675  02EE  2AFA               	goto	l3408
  9676  02EF                     u5460:
  9677  02EF                     l3404:
  9678                           
  9679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9680  02EF  302E               	movlw	46
  9681  02F0  00A8               	movwf	??_sprintf^(0+128)
  9682  02F1  0846               	movf	sprintf@sp^(0+128),w
  9683  02F2  0084               	movwf	4
  9684  02F3  0828               	movf	??_sprintf^(0+128),w
  9685  02F4  1383               	bcf	3,7	;select IRP bank0
  9686  02F5  0080               	movwf	0
  9687  02F6                     l3406:
  9688  02F6  3001               	movlw	1
  9689  02F7  00A8               	movwf	??_sprintf^(0+128)
  9690  02F8  0828               	movf	??_sprintf^(0+128),w
  9691  02F9  07C6               	addwf	sprintf@sp^(0+128),f
  9692  02FA                     l3408:
  9693                           
  9694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9695  02FA  0847               	movf	sprintf@c^(0+128),w
  9696  02FB  120A  158A  249D  120A  118A  	fcall	_scale
  9697  0300  1283               	bcf	3,5	;RP0=0, select bank0
  9698  0301  1303               	bcf	3,6	;RP1=0, select bank0
  9699  0302  0845               	movf	?_scale+3,w
  9700  0303  1683               	bsf	3,5	;RP0=1, select bank1
  9701  0304  1303               	bcf	3,6	;RP1=0, select bank1
  9702  0305  00B0               	movwf	(_sprintf$1130+3)^(0+128)
  9703  0306  1283               	bcf	3,5	;RP0=0, select bank0
  9704  0307  1303               	bcf	3,6	;RP1=0, select bank0
  9705  0308  0844               	movf	?_scale+2,w
  9706  0309  1683               	bsf	3,5	;RP0=1, select bank1
  9707  030A  1303               	bcf	3,6	;RP1=0, select bank1
  9708  030B  00AF               	movwf	(_sprintf$1130+2)^(0+128)
  9709  030C  1283               	bcf	3,5	;RP0=0, select bank0
  9710  030D  1303               	bcf	3,6	;RP1=0, select bank0
  9711  030E  0843               	movf	?_scale+1,w
  9712  030F  1683               	bsf	3,5	;RP0=1, select bank1
  9713  0310  1303               	bcf	3,6	;RP1=0, select bank1
  9714  0311  00AE               	movwf	(_sprintf$1130+1)^(0+128)
  9715  0312  1283               	bcf	3,5	;RP0=0, select bank0
  9716  0313  1303               	bcf	3,6	;RP1=0, select bank0
  9717  0314  0842               	movf	?_scale,w
  9718  0315  1683               	bsf	3,5	;RP0=1, select bank1
  9719  0316  1303               	bcf	3,6	;RP1=0, select bank1
  9720  0317  00AD               	movwf	_sprintf$1130^(0+128)
  9721  0318                     l3410:
  9722                           
  9723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9724  0318  0830               	movf	(_sprintf$1130+3)^(0+128),w
  9725  0319  1283               	bcf	3,5	;RP0=0, select bank0
  9726  031A  1303               	bcf	3,6	;RP1=0, select bank0
  9727  031B  00AF               	movwf	___flmul@a+3
  9728  031C  1683               	bsf	3,5	;RP0=1, select bank1
  9729  031D  1303               	bcf	3,6	;RP1=0, select bank1
  9730  031E  082F               	movf	(_sprintf$1130+2)^(0+128),w
  9731  031F  1283               	bcf	3,5	;RP0=0, select bank0
  9732  0320  1303               	bcf	3,6	;RP1=0, select bank0
  9733  0321  00AE               	movwf	___flmul@a+2
  9734  0322  1683               	bsf	3,5	;RP0=1, select bank1
  9735  0323  1303               	bcf	3,6	;RP1=0, select bank1
  9736  0324  082E               	movf	(_sprintf$1130+1)^(0+128),w
  9737  0325  1283               	bcf	3,5	;RP0=0, select bank0
  9738  0326  1303               	bcf	3,6	;RP1=0, select bank0
  9739  0327  00AD               	movwf	___flmul@a+1
  9740  0328  1683               	bsf	3,5	;RP0=1, select bank1
  9741  0329  1303               	bcf	3,6	;RP1=0, select bank1
  9742  032A  082D               	movf	_sprintf$1130^(0+128),w
  9743  032B  1283               	bcf	3,5	;RP0=0, select bank0
  9744  032C  1303               	bcf	3,6	;RP1=0, select bank0
  9745  032D  00AC               	movwf	___flmul@a
  9746  032E  1683               	bsf	3,5	;RP0=1, select bank1
  9747  032F  1303               	bcf	3,6	;RP1=0, select bank1
  9748  0330  0843               	movf	(sprintf@fval+3)^(0+128),w
  9749  0331  1283               	bcf	3,5	;RP0=0, select bank0
  9750  0332  1303               	bcf	3,6	;RP1=0, select bank0
  9751  0333  00AB               	movwf	___flmul@b+3
  9752  0334  1683               	bsf	3,5	;RP0=1, select bank1
  9753  0335  1303               	bcf	3,6	;RP1=0, select bank1
  9754  0336  0842               	movf	(sprintf@fval+2)^(0+128),w
  9755  0337  1283               	bcf	3,5	;RP0=0, select bank0
  9756  0338  1303               	bcf	3,6	;RP1=0, select bank0
  9757  0339  00AA               	movwf	___flmul@b+2
  9758  033A  1683               	bsf	3,5	;RP0=1, select bank1
  9759  033B  1303               	bcf	3,6	;RP1=0, select bank1
  9760  033C  0841               	movf	(sprintf@fval+1)^(0+128),w
  9761  033D  1283               	bcf	3,5	;RP0=0, select bank0
  9762  033E  1303               	bcf	3,6	;RP1=0, select bank0
  9763  033F  00A9               	movwf	___flmul@b+1
  9764  0340  1683               	bsf	3,5	;RP0=1, select bank1
  9765  0341  1303               	bcf	3,6	;RP1=0, select bank1
  9766  0342  0840               	movf	sprintf@fval^(0+128),w
  9767  0343  1283               	bcf	3,5	;RP0=0, select bank0
  9768  0344  1303               	bcf	3,6	;RP1=0, select bank0
  9769  0345  00A8               	movwf	___flmul@b
  9770  0346  120A  158A  213C  120A  118A  	fcall	___flmul
  9771  034B  1283               	bcf	3,5	;RP0=0, select bank0
  9772  034C  1303               	bcf	3,6	;RP1=0, select bank0
  9773  034D  082B               	movf	?___flmul+3,w
  9774  034E  00D8               	movwf	___fltol@f1+3
  9775  034F  082A               	movf	?___flmul+2,w
  9776  0350  00D7               	movwf	___fltol@f1+2
  9777  0351  0829               	movf	?___flmul+1,w
  9778  0352  00D6               	movwf	___fltol@f1+1
  9779  0353  0828               	movf	?___flmul,w
  9780  0354  00D5               	movwf	___fltol@f1
  9781  0355  160A  158A  2784  120A  118A  	fcall	___fltol
  9782  035A  1283               	bcf	3,5	;RP0=0, select bank0
  9783  035B  1303               	bcf	3,6	;RP1=0, select bank0
  9784  035C  0858               	movf	?___fltol+3,w
  9785  035D  1683               	bsf	3,5	;RP0=1, select bank1
  9786  035E  1303               	bcf	3,6	;RP1=0, select bank1
  9787  035F  00B5               	movwf	(sprintf@val+3)^(0+128)
  9788  0360  1283               	bcf	3,5	;RP0=0, select bank0
  9789  0361  1303               	bcf	3,6	;RP1=0, select bank0
  9790  0362  0857               	movf	?___fltol+2,w
  9791  0363  1683               	bsf	3,5	;RP0=1, select bank1
  9792  0364  1303               	bcf	3,6	;RP1=0, select bank1
  9793  0365  00B4               	movwf	(sprintf@val+2)^(0+128)
  9794  0366  1283               	bcf	3,5	;RP0=0, select bank0
  9795  0367  1303               	bcf	3,6	;RP1=0, select bank0
  9796  0368  0856               	movf	?___fltol+1,w
  9797  0369  1683               	bsf	3,5	;RP0=1, select bank1
  9798  036A  1303               	bcf	3,6	;RP1=0, select bank1
  9799  036B  00B3               	movwf	(sprintf@val+1)^(0+128)
  9800  036C  1283               	bcf	3,5	;RP0=0, select bank0
  9801  036D  1303               	bcf	3,6	;RP1=0, select bank0
  9802  036E  0855               	movf	?___fltol,w
  9803  036F  1683               	bsf	3,5	;RP0=1, select bank1
  9804  0370  1303               	bcf	3,6	;RP1=0, select bank1
  9805  0371  00B2               	movwf	sprintf@val^(0+128)
  9806                           
  9807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9808  0372  2C14               	goto	l3420
  9809  0373                     l3412:
  9810                           
  9811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9812  0373  0847               	movf	sprintf@c^(0+128),w
  9813  0374  00A8               	movwf	??_sprintf^(0+128)
  9814  0375  3001               	movlw	1
  9815  0376                     u5475:
  9816  0376  1003               	clrc
  9817  0377  0DA8               	rlf	??_sprintf^(0+128),f
  9818  0378  3EFF               	addlw	-1
  9819  0379  1D03               	skipz
  9820  037A  2B76               	goto	u5475
  9821  037B  1003               	clrc
  9822  037C  0D28               	rlf	??_sprintf^(0+128),w
  9823  037D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9824  037E  0084               	movwf	4
  9825  037F  160A  158A  2000  120A  118A  	fcall	stringdir
  9826  0384  00F2               	movwf	___lldiv@divisor
  9827  0385  160A  158A  2000  120A  118A  	fcall	stringdir
  9828  038A  00F3               	movwf	___lldiv@divisor+1
  9829  038B  160A  158A  2000  120A  118A  	fcall	stringdir
  9830  0390  00F4               	movwf	___lldiv@divisor+2
  9831  0391  160A  158A  2000  120A  118A  	fcall	stringdir
  9832  0396  00F5               	movwf	___lldiv@divisor+3
  9833  0397  0835               	movf	(sprintf@val+3)^(0+128),w
  9834  0398  00F9               	movwf	___lldiv@dividend+3
  9835  0399  0834               	movf	(sprintf@val+2)^(0+128),w
  9836  039A  00F8               	movwf	___lldiv@dividend+2
  9837  039B  0833               	movf	(sprintf@val+1)^(0+128),w
  9838  039C  00F7               	movwf	___lldiv@dividend+1
  9839  039D  0832               	movf	sprintf@val^(0+128),w
  9840  039E  00F6               	movwf	___lldiv@dividend
  9841  039F  160A  158A  26B3  120A  118A  	fcall	___lldiv
  9842  03A4  0875               	movf	?___lldiv+3,w
  9843  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  9844  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  9845  03A7  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9846  03A8  0874               	movf	?___lldiv+2,w
  9847  03A9  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9848  03AA  0873               	movf	?___lldiv+1,w
  9849  03AB  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9850  03AC  0872               	movf	?___lldiv,w
  9851  03AD  00B6               	movwf	sprintf@tmpval^(0+128)
  9852  03AE                     l3414:
  9853                           
  9854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9855  03AE  3000               	movlw	0
  9856  03AF  00F5               	movwf	___llmod@divisor+3
  9857  03B0  3000               	movlw	0
  9858  03B1  00F4               	movwf	___llmod@divisor+2
  9859  03B2  3000               	movlw	0
  9860  03B3  00F3               	movwf	___llmod@divisor+1
  9861  03B4  300A               	movlw	10
  9862  03B5  00F2               	movwf	___llmod@divisor
  9863  03B6  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9864  03B7  00F9               	movwf	___llmod@dividend+3
  9865  03B8  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9866  03B9  00F8               	movwf	___llmod@dividend+2
  9867  03BA  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9868  03BB  00F7               	movwf	___llmod@dividend+1
  9869  03BC  0836               	movf	sprintf@tmpval^(0+128),w
  9870  03BD  00F6               	movwf	___llmod@dividend
  9871  03BE  160A  158A  2606  120A  118A  	fcall	___llmod
  9872  03C3  0875               	movf	?___llmod+3,w
  9873  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  9874  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  9875  03C6  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9876  03C7  0874               	movf	?___llmod+2,w
  9877  03C8  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9878  03C9  0873               	movf	?___llmod+1,w
  9879  03CA  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9880  03CB  0872               	movf	?___llmod,w
  9881  03CC  00B6               	movwf	sprintf@tmpval^(0+128)
  9882  03CD                     l3416:
  9883                           
  9884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  9885  03CD  0836               	movf	sprintf@tmpval^(0+128),w
  9886  03CE  3E30               	addlw	48
  9887  03CF  00A8               	movwf	??_sprintf^(0+128)
  9888  03D0  0846               	movf	sprintf@sp^(0+128),w
  9889  03D1  0084               	movwf	4
  9890  03D2  0828               	movf	??_sprintf^(0+128),w
  9891  03D3  1383               	bcf	3,7	;select IRP bank0
  9892  03D4  0080               	movwf	0
  9893  03D5  3001               	movlw	1
  9894  03D6  00A8               	movwf	??_sprintf^(0+128)
  9895  03D7  0828               	movf	??_sprintf^(0+128),w
  9896  03D8  07C6               	addwf	sprintf@sp^(0+128),f
  9897  03D9                     l3418:
  9898                           
  9899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  9900  03D9  0847               	movf	sprintf@c^(0+128),w
  9901  03DA  00A8               	movwf	??_sprintf^(0+128)
  9902  03DB  3001               	movlw	1
  9903  03DC                     u5485:
  9904  03DC  1003               	clrc
  9905  03DD  0DA8               	rlf	??_sprintf^(0+128),f
  9906  03DE  3EFF               	addlw	-1
  9907  03DF  1D03               	skipz
  9908  03E0  2BDC               	goto	u5485
  9909  03E1  1003               	clrc
  9910  03E2  0D28               	rlf	??_sprintf^(0+128),w
  9911  03E3  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9912  03E4  0084               	movwf	4
  9913  03E5  160A  158A  2000  120A  118A  	fcall	stringdir
  9914  03EA  00F2               	movwf	___llmod@divisor
  9915  03EB  160A  158A  2000  120A  118A  	fcall	stringdir
  9916  03F0  00F3               	movwf	___llmod@divisor+1
  9917  03F1  160A  158A  2000  120A  118A  	fcall	stringdir
  9918  03F6  00F4               	movwf	___llmod@divisor+2
  9919  03F7  160A  158A  2000  120A  118A  	fcall	stringdir
  9920  03FC  00F5               	movwf	___llmod@divisor+3
  9921  03FD  0835               	movf	(sprintf@val+3)^(0+128),w
  9922  03FE  00F9               	movwf	___llmod@dividend+3
  9923  03FF  0834               	movf	(sprintf@val+2)^(0+128),w
  9924  0400  00F8               	movwf	___llmod@dividend+2
  9925  0401  0833               	movf	(sprintf@val+1)^(0+128),w
  9926  0402  00F7               	movwf	___llmod@dividend+1
  9927  0403  0832               	movf	sprintf@val^(0+128),w
  9928  0404  00F6               	movwf	___llmod@dividend
  9929  0405  160A  158A  2606  120A  118A  	fcall	___llmod
  9930  040A  0875               	movf	?___llmod+3,w
  9931  040B  1683               	bsf	3,5	;RP0=1, select bank1
  9932  040C  1303               	bcf	3,6	;RP1=0, select bank1
  9933  040D  00B5               	movwf	(sprintf@val+3)^(0+128)
  9934  040E  0874               	movf	?___llmod+2,w
  9935  040F  00B4               	movwf	(sprintf@val+2)^(0+128)
  9936  0410  0873               	movf	?___llmod+1,w
  9937  0411  00B3               	movwf	(sprintf@val+1)^(0+128)
  9938  0412  0872               	movf	?___llmod,w
  9939  0413  00B2               	movwf	sprintf@val^(0+128)
  9940  0414                     l3420:
  9941                           
  9942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9943  0414  3001               	movlw	1
  9944  0415  02C7               	subwf	sprintf@c^(0+128),f
  9945  0416  0A47               	incf	sprintf@c^(0+128),w
  9946  0417  1D03               	btfss	3,2
  9947  0418  2C1A               	goto	u5491
  9948  0419  2C1B               	goto	u5490
  9949  041A                     u5491:
  9950  041A  2B73               	goto	l3412
  9951  041B                     u5490:
  9952  041B  2C2D               	goto	l3428
  9953  041C                     l3422:
  9954                           
  9955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  9956  041C  3030               	movlw	48
  9957  041D  00A8               	movwf	??_sprintf^(0+128)
  9958  041E  0846               	movf	sprintf@sp^(0+128),w
  9959  041F  0084               	movwf	4
  9960  0420  0828               	movf	??_sprintf^(0+128),w
  9961  0421  1383               	bcf	3,7	;select IRP bank0
  9962  0422  0080               	movwf	0
  9963  0423                     l3424:
  9964  0423  3001               	movlw	1
  9965  0424  00A8               	movwf	??_sprintf^(0+128)
  9966  0425  0828               	movf	??_sprintf^(0+128),w
  9967  0426  07C6               	addwf	sprintf@sp^(0+128),f
  9968  0427                     l3426:
  9969                           
  9970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9971  0427  30FF               	movlw	255
  9972  0428  07C4               	addwf	sprintf@prec^(0+128),f
  9973  0429  1803               	skipnc
  9974  042A  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  9975  042B  30FF               	movlw	255
  9976  042C  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  9977  042D                     l3428:
  9978                           
  9979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  9980  042D  0844               	movf	sprintf@prec^(0+128),w
  9981  042E  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9982  042F  1D03               	btfss	3,2
  9983  0430  2C32               	goto	u5501
  9984  0431  2C33               	goto	u5500
  9985  0432                     u5501:
  9986  0432  2C1C               	goto	l3422
  9987  0433                     u5500:
  9988  0433  2D32               	goto	l3492
  9989  0434                     l3430:
  9990                           
  9991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  9992  0434  0844               	movf	sprintf@prec^(0+128),w
  9993  0435  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9994  0436  1D03               	btfss	3,2
  9995  0437  2C39               	goto	u5511
  9996  0438  2C3A               	goto	u5510
  9997  0439                     u5511:
  9998  0439  2C48               	goto	l374
  9999  043A                     u5510:
 10000  043A                     l3432:
 10001  043A  0835               	movf	(sprintf@val+3)^(0+128),w
 10002  043B  0434               	iorwf	(sprintf@val+2)^(0+128),w
 10003  043C  0433               	iorwf	(sprintf@val+1)^(0+128),w
 10004  043D  0432               	iorwf	sprintf@val^(0+128),w
 10005  043E  1D03               	skipz
 10006  043F  2C41               	goto	u5521
 10007  0440  2C42               	goto	u5520
 10008  0441                     u5521:
 10009  0441  2C48               	goto	l374
 10010  0442                     u5520:
 10011  0442                     l3434:
 10012                           
 10013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10014  0442  3001               	movlw	1
 10015  0443  07C4               	addwf	sprintf@prec^(0+128),f
 10016  0444  1803               	skipnc
 10017  0445  0AC5               	incf	(sprintf@prec+1)^(0+128),f
 10018  0446  3000               	movlw	0
 10019  0447  07C5               	addwf	(sprintf@prec+1)^(0+128),f
 10020  0448                     l374:
 10021                           
 10022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10023  0448  0845               	movf	(sprintf@prec+1)^(0+128),w
 10024  0449  3A80               	xorlw	128
 10025  044A  3C80               	sublw	128
 10026  044B  1D03               	skipz
 10027  044C  2C4F               	goto	u5535
 10028  044D  0844               	movf	sprintf@prec^(0+128),w
 10029  044E  0247               	subwf	sprintf@c^(0+128),w
 10030  044F                     u5535:
 10031  044F  1803               	skipnc
 10032  0450  2C52               	goto	u5531
 10033  0451  2C53               	goto	u5530
 10034  0452                     u5531:
 10035  0452  2C5A               	goto	l3438
 10036  0453                     u5530:
 10037  0453                     l3436:
 10038                           
 10039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10040  0453  1683               	bsf	3,5	;RP0=1, select bank1
 10041  0454  1303               	bcf	3,6	;RP1=0, select bank1
 10042  0455  0844               	movf	sprintf@prec^(0+128),w
 10043  0456  00A8               	movwf	??_sprintf^(0+128)
 10044  0457  0828               	movf	??_sprintf^(0+128),w
 10045  0458  00C7               	movwf	sprintf@c^(0+128)
 10046  0459  2C72               	goto	l3442
 10047  045A                     l3438:
 10048  045A  1683               	bsf	3,5	;RP0=1, select bank1
 10049  045B  1303               	bcf	3,6	;RP1=0, select bank1
 10050  045C  0845               	movf	(sprintf@prec+1)^(0+128),w
 10051  045D  3A80               	xorlw	128
 10052  045E  00A8               	movwf	??_sprintf^(0+128)
 10053  045F  3080               	movlw	128
 10054  0460  0228               	subwf	??_sprintf^(0+128),w
 10055  0461  1D03               	skipz
 10056  0462  2C65               	goto	u5545
 10057  0463  0847               	movf	sprintf@c^(0+128),w
 10058  0464  0244               	subwf	sprintf@prec^(0+128),w
 10059  0465                     u5545:
 10060  0465  1803               	skipnc
 10061  0466  2C68               	goto	u5541
 10062  0467  2C69               	goto	u5540
 10063  0468                     u5541:
 10064  0468  2C72               	goto	l3442
 10065  0469                     u5540:
 10066  0469                     l3440:
 10067                           
 10068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10069  0469  1683               	bsf	3,5	;RP0=1, select bank1
 10070  046A  1303               	bcf	3,6	;RP1=0, select bank1
 10071  046B  0847               	movf	sprintf@c^(0+128),w
 10072  046C  00A8               	movwf	??_sprintf^(0+128)
 10073  046D  01A9               	clrf	(??_sprintf^(0+128)+1)
 10074  046E  0828               	movf	??_sprintf^(0+128),w
 10075  046F  00C4               	movwf	sprintf@prec^(0+128)
 10076  0470  0829               	movf	(??_sprintf+1)^(0+128),w
 10077  0471  00C5               	movwf	(sprintf@prec+1)^(0+128)
 10078  0472                     l3442:
 10079                           
 10080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10081  0472  1683               	bsf	3,5	;RP0=1, select bank1
 10082  0473  1303               	bcf	3,6	;RP1=0, select bank1
 10083  0474  083E               	movf	sprintf@width^(0+128),w
 10084  0475  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10085  0476  1903               	btfsc	3,2
 10086  0477  2C79               	goto	u5551
 10087  0478  2C7A               	goto	u5550
 10088  0479                     u5551:
 10089  0479  2C8C               	goto	l3448
 10090  047A                     u5550:
 10091  047A                     l3444:
 10092  047A  3003               	movlw	3
 10093  047B  053C               	andwf	sprintf@flag^(0+128),w
 10094  047C  00A8               	movwf	??_sprintf^(0+128)
 10095  047D  3000               	movlw	0
 10096  047E  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10097  047F  00A9               	movwf	(??_sprintf+1)^(0+128)
 10098  0480  0828               	movf	??_sprintf^(0+128),w
 10099  0481  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10100  0482  1903               	btfsc	3,2
 10101  0483  2C85               	goto	u5561
 10102  0484  2C86               	goto	u5560
 10103  0485                     u5561:
 10104  0485  2C8C               	goto	l3448
 10105  0486                     u5560:
 10106  0486                     l3446:
 10107                           
 10108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10109  0486  30FF               	movlw	255
 10110  0487  07BE               	addwf	sprintf@width^(0+128),f
 10111  0488  1803               	skipnc
 10112  0489  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10113  048A  30FF               	movlw	255
 10114  048B  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10115  048C                     l3448:
 10116                           
 10117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10118  048C  1F3D               	btfss	(sprintf@flag+1)^(0+128),6
 10119  048D  2C8F               	goto	u5571
 10120  048E  2C90               	goto	u5570
 10121  048F                     u5571:
 10122  048F  2CAB               	goto	l3456
 10123  0490                     u5570:
 10124  0490                     l3450:
 10125                           
 10126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10127  0490  0845               	movf	(sprintf@prec+1)^(0+128),w
 10128  0491  3A80               	xorlw	128
 10129  0492  00A8               	movwf	??_sprintf^(0+128)
 10130  0493  083F               	movf	(sprintf@width+1)^(0+128),w
 10131  0494  3A80               	xorlw	128
 10132  0495  0228               	subwf	??_sprintf^(0+128),w
 10133  0496  1D03               	skipz
 10134  0497  2C9A               	goto	u5585
 10135  0498  083E               	movf	sprintf@width^(0+128),w
 10136  0499  0244               	subwf	sprintf@prec^(0+128),w
 10137  049A                     u5585:
 10138  049A  1803               	skipnc
 10139  049B  2C9D               	goto	u5581
 10140  049C  2C9E               	goto	u5580
 10141  049D                     u5581:
 10142  049D  2CA7               	goto	l3454
 10143  049E                     u5580:
 10144  049E                     l3452:
 10145                           
 10146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10147  049E  1683               	bsf	3,5	;RP0=1, select bank1
 10148  049F  1303               	bcf	3,6	;RP1=0, select bank1
 10149  04A0  0844               	movf	sprintf@prec^(0+128),w
 10150  04A1  02BE               	subwf	sprintf@width^(0+128),f
 10151  04A2  0845               	movf	(sprintf@prec+1)^(0+128),w
 10152  04A3  1C03               	skipc
 10153  04A4  03BF               	decf	(sprintf@width+1)^(0+128),f
 10154  04A5  02BF               	subwf	(sprintf@width+1)^(0+128),f
 10155  04A6  2CAB               	goto	l3456
 10156  04A7                     l3454:
 10157                           
 10158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10159  04A7  1683               	bsf	3,5	;RP0=1, select bank1
 10160  04A8  1303               	bcf	3,6	;RP1=0, select bank1
 10161  04A9  01BE               	clrf	sprintf@width^(0+128)
 10162  04AA  01BF               	clrf	(sprintf@width+1)^(0+128)
 10163  04AB                     l3456:
 10164                           
 10165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10166  04AB  083F               	movf	(sprintf@width+1)^(0+128),w
 10167  04AC  3A80               	xorlw	128
 10168  04AD  3C80               	sublw	128
 10169  04AE  1D03               	skipz
 10170  04AF  2CB2               	goto	u5595
 10171  04B0  083E               	movf	sprintf@width^(0+128),w
 10172  04B1  0247               	subwf	sprintf@c^(0+128),w
 10173  04B2                     u5595:
 10174  04B2  1803               	skipnc
 10175  04B3  2CB5               	goto	u5591
 10176  04B4  2CB6               	goto	u5590
 10177  04B5                     u5591:
 10178  04B5  2CC2               	goto	l3460
 10179  04B6                     u5590:
 10180  04B6                     l3458:
 10181                           
 10182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10183  04B6  1683               	bsf	3,5	;RP0=1, select bank1
 10184  04B7  1303               	bcf	3,6	;RP1=0, select bank1
 10185  04B8  0847               	movf	sprintf@c^(0+128),w
 10186  04B9  00A8               	movwf	??_sprintf^(0+128)
 10187  04BA  01A9               	clrf	(??_sprintf^(0+128)+1)
 10188  04BB  0828               	movf	??_sprintf^(0+128),w
 10189  04BC  02BE               	subwf	sprintf@width^(0+128),f
 10190  04BD  0829               	movf	(??_sprintf+1)^(0+128),w
 10191  04BE  1C03               	skipc
 10192  04BF  03BF               	decf	(sprintf@width+1)^(0+128),f
 10193  04C0  02BF               	subwf	(sprintf@width+1)^(0+128),f
 10194  04C1  2CC6               	goto	l3462
 10195  04C2                     l3460:
 10196                           
 10197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10198  04C2  1683               	bsf	3,5	;RP0=1, select bank1
 10199  04C3  1303               	bcf	3,6	;RP1=0, select bank1
 10200  04C4  01BE               	clrf	sprintf@width^(0+128)
 10201  04C5  01BF               	clrf	(sprintf@width+1)^(0+128)
 10202  04C6                     l3462:
 10203                           
 10204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
 10205  04C6  1D3C               	btfss	sprintf@flag^(0+128),2
 10206  04C7  2CC9               	goto	u5601
 10207  04C8  2CCA               	goto	u5600
 10208  04C9                     u5601:
 10209  04C9  2CFF               	goto	l3478
 10210  04CA                     u5600:
 10211  04CA                     l3464:
 10212                           
 10213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
 10214  04CA  3003               	movlw	3
 10215  04CB  053C               	andwf	sprintf@flag^(0+128),w
 10216  04CC  00A8               	movwf	??_sprintf^(0+128)
 10217  04CD  3000               	movlw	0
 10218  04CE  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10219  04CF  00A9               	movwf	(??_sprintf+1)^(0+128)
 10220  04D0  0828               	movf	??_sprintf^(0+128),w
 10221  04D1  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10222  04D2  1903               	btfsc	3,2
 10223  04D3  2CD5               	goto	u5611
 10224  04D4  2CD6               	goto	u5610
 10225  04D5                     u5611:
 10226  04D5  2CE1               	goto	l3470
 10227  04D6                     u5610:
 10228  04D6                     l3466:
 10229                           
 10230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
 10231  04D6  302D               	movlw	45
 10232  04D7  00A8               	movwf	??_sprintf^(0+128)
 10233  04D8  0846               	movf	sprintf@sp^(0+128),w
 10234  04D9  0084               	movwf	4
 10235  04DA  0828               	movf	??_sprintf^(0+128),w
 10236  04DB  1383               	bcf	3,7	;select IRP bank0
 10237  04DC  0080               	movwf	0
 10238  04DD                     l3468:
 10239  04DD  3001               	movlw	1
 10240  04DE  00A8               	movwf	??_sprintf^(0+128)
 10241  04DF  0828               	movf	??_sprintf^(0+128),w
 10242  04E0  07C6               	addwf	sprintf@sp^(0+128),f
 10243  04E1                     l3470:
 10244                           
 10245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
 10246  04E1  083E               	movf	sprintf@width^(0+128),w
 10247  04E2  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10248  04E3  1903               	btfsc	3,2
 10249  04E4  2CE6               	goto	u5621
 10250  04E5  2CE7               	goto	u5620
 10251  04E6                     u5621:
 10252  04E6  2D32               	goto	l3492
 10253  04E7                     u5620:
 10254  04E7                     l3472:
 10255                           
 10256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
 10257  04E7  3030               	movlw	48
 10258  04E8  00A8               	movwf	??_sprintf^(0+128)
 10259  04E9  0846               	movf	sprintf@sp^(0+128),w
 10260  04EA  0084               	movwf	4
 10261  04EB  0828               	movf	??_sprintf^(0+128),w
 10262  04EC  1383               	bcf	3,7	;select IRP bank0
 10263  04ED  0080               	movwf	0
 10264  04EE                     l3474:
 10265  04EE  3001               	movlw	1
 10266  04EF  00A8               	movwf	??_sprintf^(0+128)
 10267  04F0  0828               	movf	??_sprintf^(0+128),w
 10268  04F1  07C6               	addwf	sprintf@sp^(0+128),f
 10269  04F2                     l3476:
 10270  04F2  30FF               	movlw	255
 10271  04F3  07BE               	addwf	sprintf@width^(0+128),f
 10272  04F4  1803               	skipnc
 10273  04F5  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10274  04F6  30FF               	movlw	255
 10275  04F7  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10276  04F8  083E               	movf	sprintf@width^(0+128),w
 10277  04F9  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10278  04FA  1D03               	btfss	3,2
 10279  04FB  2CFD               	goto	u5631
 10280  04FC  2CFE               	goto	u5630
 10281  04FD                     u5631:
 10282  04FD  2CE7               	goto	l3472
 10283  04FE                     u5630:
 10284  04FE  2D32               	goto	l3492
 10285  04FF                     l3478:
 10286                           
 10287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10288  04FF  083E               	movf	sprintf@width^(0+128),w
 10289  0500  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10290  0501  1903               	btfsc	3,2
 10291  0502  2D04               	goto	u5641
 10292  0503  2D05               	goto	u5640
 10293  0504                     u5641:
 10294  0504  2D1C               	goto	l3486
 10295  0505                     u5640:
 10296  0505                     l3480:
 10297                           
 10298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10299  0505  3020               	movlw	32
 10300  0506  00A8               	movwf	??_sprintf^(0+128)
 10301  0507  0846               	movf	sprintf@sp^(0+128),w
 10302  0508  0084               	movwf	4
 10303  0509  0828               	movf	??_sprintf^(0+128),w
 10304  050A  1383               	bcf	3,7	;select IRP bank0
 10305  050B  0080               	movwf	0
 10306  050C                     l3482:
 10307  050C  3001               	movlw	1
 10308  050D  00A8               	movwf	??_sprintf^(0+128)
 10309  050E  0828               	movf	??_sprintf^(0+128),w
 10310  050F  07C6               	addwf	sprintf@sp^(0+128),f
 10311  0510                     l3484:
 10312  0510  30FF               	movlw	255
 10313  0511  07BE               	addwf	sprintf@width^(0+128),f
 10314  0512  1803               	skipnc
 10315  0513  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10316  0514  30FF               	movlw	255
 10317  0515  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10318  0516  083E               	movf	sprintf@width^(0+128),w
 10319  0517  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10320  0518  1D03               	btfss	3,2
 10321  0519  2D1B               	goto	u5651
 10322  051A  2D1C               	goto	u5650
 10323  051B                     u5651:
 10324  051B  2D05               	goto	l3480
 10325  051C                     u5650:
 10326  051C                     l3486:
 10327                           
 10328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10329  051C  3003               	movlw	3
 10330  051D  053C               	andwf	sprintf@flag^(0+128),w
 10331  051E  00A8               	movwf	??_sprintf^(0+128)
 10332  051F  3000               	movlw	0
 10333  0520  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10334  0521  00A9               	movwf	(??_sprintf+1)^(0+128)
 10335  0522  0828               	movf	??_sprintf^(0+128),w
 10336  0523  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10337  0524  1903               	btfsc	3,2
 10338  0525  2D27               	goto	u5661
 10339  0526  2D28               	goto	u5660
 10340  0527                     u5661:
 10341  0527  2D32               	goto	l3492
 10342  0528                     u5660:
 10343  0528                     l3488:
 10344                           
 10345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10346  0528  302D               	movlw	45
 10347  0529  00A8               	movwf	??_sprintf^(0+128)
 10348  052A  0846               	movf	sprintf@sp^(0+128),w
 10349  052B  0084               	movwf	4
 10350  052C  0828               	movf	??_sprintf^(0+128),w
 10351  052D  1383               	bcf	3,7	;select IRP bank0
 10352  052E  0080               	movwf	0
 10353  052F  160A  118A  2D14   	goto	l3210
 10354  0532                     l3492:
 10355                           
 10356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10357  0532  3001               	movlw	1
 10358  0533  1283               	bcf	3,5	;RP0=0, select bank0
 10359  0534  1303               	bcf	3,6	;RP1=0, select bank0
 10360  0535  07EA               	addwf	sprintf@f,f
 10361  0536  30FF               	movlw	-1
 10362  0537  076A               	addwf	sprintf@f,w
 10363  0538  0084               	movwf	4
 10364  0539  160A  158A  2000  120A  118A  	fcall	stringdir
 10365  053E  1683               	bsf	3,5	;RP0=1, select bank1
 10366  053F  1303               	bcf	3,6	;RP1=0, select bank1
 10367  0540  00A8               	movwf	??_sprintf^(0+128)
 10368  0541  0828               	movf	??_sprintf^(0+128),w
 10369  0542  00C7               	movwf	sprintf@c^(0+128)
 10370  0543  0847               	movf	sprintf@c^(0+128),w
 10371  0544  1D03               	btfss	3,2
 10372  0545  2D47               	goto	u5671
 10373  0546  2D4A               	goto	u5670
 10374  0547                     u5671:
 10375  0547  160A  118A  2D07   	goto	l3206
 10376  054A                     u5670:
 10377  054A                     l3494:
 10378                           
 10379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10380  054A  0846               	movf	sprintf@sp^(0+128),w
 10381  054B  0084               	movwf	4
 10382  054C  1383               	bcf	3,7	;select IRP bank0
 10383  054D  0180               	clrf	0
 10384  054E                     l395:
 10385  054E  0008               	return
 10386  054F                     __end_of_sprintf:

Data Sizes:
    Strings     9
    Constant    144
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     79      80
    BANK1            80     43      67
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> f1(BANK1[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 15
		 -> f1(BANK1[15]), 


Critical Paths under _main in COMMON

    _sprintf->___llmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    _send_crct->_send_char
    _conv->___xxtofl

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34155
                                             40 BANK1      3     3      0
                            ___awdiv
                            _cfg_clk
                             _cfg_io
                          _cfg_usart
                               _conv
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31899
                                             74 BANK0      5     0      5
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              2 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              3 COMMON     4     4      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                 8     4      4     595
                                              6 BANK0      8     4      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   _cfg_clk
   _cfg_io
   _cfg_usart
   _conv
     ___xxtofl
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2B      43       7       83.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 29 00:51:57 2021

                      _D 00CF                        _V 00D1                        _v 00CB  
                      pc 0002                       l91 0868                       l93 086C  
                     l94 086D                       l96 0871                       l99 0924  
                     _f1 00D4                       _i0 006F                       _i1 00D3  
           ___awdiv@sign 0025                       fsr 0004      ___wmul@multiplicand 0074  
    __Umul8_16@word_mpld 0078                      l121 1CE2                      l106 1CAF  
                    l130 1D06                      l115 1016                      l124 1C8A  
                    l109 1C80                      l127 1C92                      l401 1D2B  
                    l322 15F9                      l307 151E                      l602 1FFF  
                    l435 1F1A                      l612 1FFF                      l620 11F6  
                    l294 0FFF                      l374 0448                      l366 02E1  
                    l287 14FC                      l359 029B                      l616 1233  
                    l552 1F83                      l609 1FEA                      l617 11A5  
                    l705 0849                      l730 0659                      l570 1256  
                    l627 1226                      l715 1D65                      l395 054E  
                    l732 0630                      l580 12E4                      l573 12B4  
                    l565 1EB2                      l590 1035                      l726 05B2  
                    l822 0C9C                      l751 0748                      l655 1E59  
                    l399 1D13                      l760 07A8                      l585 1D84  
                    l593 10A1                      l569 12F1                      l841 07EB  
                    l586 1DA0                      l594 10BA                      l834 0C90  
                    l587 1DB5                      l747 0724                      l739 07D6  
                    l843 07FD                      l772 1E05                      l828 0C08  
                    l757 076A                      l598 1C9D                      l880 114C  
                    l872 1124                      l768 07CA                      l769 07D6  
                    l866 10DF                      l868 1176                      l886 1CC1  
                    l879 1140                      _GIE 005F                      _RA0 0028  
                    _RA1 0029                      _RA2 002A                      _RD0 0040  
                    _RD1 0041                      _isr 1C72                      fsr0 0004  
                    indf 0000             ___awmod@sign 0078             ___flmul@aexp 003A  
           ___flmul@bexp 003B             ___flmul@sign 0035             ___flmul@temp 0040  
           ___flmul@prod 003C             ___fltol@exp1 005F                     l3010 1ED9  
                   l3002 1EB3                     l3100 1FF4                     l3020 1F0C  
                   l3012 1EE2                     l3004 1EC5                     l3030 1D98  
                   l3014 1EF4                     l3006 1EC8                     l3022 1F12  
                   l3110 1E22                     l3102 1E06                     l3200 1CFE  
                   l3032 1DB2                     l3040 102D                     l3016 1F02  
                   l3008 1ED5                     l3112 1E34                     l3104 1E0E  
                   l2400 1E6A                     l3130 10C3                     l3034 1DB4  
                   l3026 1D66                     l3050 107D                     l3042 1049  
                   l3122 1DB6                     l3018 1F03                     l3114 1E42  
                   l3106 1E11                     l2410 1E83                     l2402 1E6F  
                   l3210 1514                     l3140 10F0                     l3132 10C7  
                   l3028 1D7C                     l3052 10B7                     l3044 1051  
                   l3060 1C9B                     l2500 0589                     l3124 1DBA  
                   l3116 1E4B                     l3108 1E1E                     l2340 07F4  
                   l2332 07D8                     l2412 1E87                     l2404 1E75  
                   l2420 1EA4                     l3300 1794                     l3220 153B  
                   l3212 1519                     l3204 1500                     l3150 111B  
                   l3142 10F5                     l3134 10D7                     l3054 10B9  
                   l3046 1055                     l3038 1017                     l3062 1C9D  
                   l2510 059A                     l2502 058A                     l3118 1E51  
                   l2342 07F9                     l2334 07DA                     l2430 0808  
                   l2350 1F22                     l2422 1EA9                     l2414 1E91  
                   l2406 1E78                     l3310 0061                     l3302 17A3  
                   l3230 1583                     l3222 154D                     l3214 151F  
                   l3206 1507                     l3160 114E                     l3152 112B  
                   l3144 1102                     l3136 10E7                     l3128 10BE  
                   l3048 1079                     l2600 06BE                     l2520 05B8  
                   l2512 059F                     l2504 0590                     l3080 1FBA  
                   l3072 1F9A                     l2336 07E1                     l2440 0820  
                   l2432 080E                     l2360 1F36                     l2352 1F27  
                   l2424 1EAE                     l2416 1E97                     l2408 1E7F  
                   l3400 02DB                     l3320 00BA                     l3312 0070  
                   l3304 17EA                     l3240 15AF                     l3224 1551  
                   l3232 1593                     l3208 150D                     l3162 1164  
                   l3154 1136                     l3146 1109                     l3058 1C93  
                   l2610 072C                     l2602 06FC                     l2530 05CC  
                   l2522 05BC                     l2514 05A7                     l2506 0594  
                   l3082 1FBE                     l3090 1FD8                     l3074 1FAF  
                   l3066 1F84                     l2338 07E5                     l2442 0831  
                   l2434 0811                     l2450 0845                     l2370 1F4C  
                   l2362 1F38                     l2354 1F29                     l2346 1F1B  
                   l2418 1E9E                     l3410 0318                     l3402 02EA  
                   l3330 0146                     l3314 008B                     l3306 001F  
                   l3250 15F7                     l3242 15C4                     l3234 15A1  
                   l3226 1566                     l3218 1525                     l3172 1C9E  
                   l3180 1002                     l3164 1169                     l3156 113A  
                   l3148 110D                     l2620 0747                     l2612 0731  
                   l2604 0702                     l2540 05E0                     l2532 05D0  
                   l2524 05C0                     l2516 05A8                     l2508 0595  
                   l3076 1FB0                     l3068 1F91                     l2700 0984  
                   l2444 0837                     l2436 0818                     l2428 0804  
                   l2460 1D3C                     l2380 1F6F                     l2372 1F50  
                   l2364 1F3E                     l2356 1F2D                     l2348 1F1E  
                   l3412 0373                     l3420 0414                     l3404 02EF  
                   l3332 0148                     l3324 00D9                     l3316 0094  
                   l3308 003A                     l3260 162B                     l3244 15DB  
                   l3236 15A4                     l3228 157D                     l3174 1CA2  
                   l3190 1012                     l3182 1009                     l3166 116D  
                   l3158 1144                     l3510 1CC3                     l2622 074C  
                   l2630 0758                     l2606 0707                     l2550 05F4  
                   l2542 05E4                     l2534 05D4                     l2526 05C4  
                   l2518 05AA                     l3078 1FB8                     l2710 09A0  
                   l2702 098C                     l2446 0838                     l2438 081C  
                   l2470 1D5B                     l2462 1D40                     l2454 1D2C  
                   l2374 1F61                     l2366 1F41                     l2382 1F75  
                   l2358 1F32                     l2390 1E5A                     l3422 041C  
                   l3414 03AE                     l3406 02F6                     l3350 01B8  
                   l3342 0181                     l3318 009C                     l3326 00E2  
                   l3270 1673                     l3262 162F                     l3430 0434  
                   l3254 15FB                     l3246 15E1                     l3238 15AA  
                   l3176 1CA5                     l3192 1013                     l3184 100D  
                   l3168 116E                     l3512 1CC6                     l2624 074F  
                   l2616 073A                     l2608 0716                     l2632 075C  
                   l2560 0634                     l2552 05F8                     l2544 05E8  
                   l2536 05D8                     l2528 05C8                     l2480 055C  
                   l3096 1FDF                     l3088 1FC6                     l2800 0C84  
                   l2720 09E3                     l2704 098E                     l2448 083F  
                   l2464 1D44                     l2456 1D32                     l2472 1D61  
                   l2384 1F7A                     l2376 1F67                     l2368 1F48  
                   l2392 1E5B                     l3440 0469                     l3432 043A  
                   l3424 0423                     l3416 03CD                     l3408 02FA  
                   l3360 01DA                     l3352 01BE                     l3344 018B  
                   l3328 0117                     l3280 16A5                     l3272 1677  
                   l3264 163D                     l3256 1619                     l3248 15F3  
                   l3520 084F                     l3194 1C79                     l3178 1CA6  
                   l3186 100E                     l2810 1C8A                     l3514 1CD1  
                   l2650 07A4                     l2642 076F                     l2634 075D  
                   l2626 0751                     l2618 0743                     l2570 064D  
                   l2562 063D                     l2546 05EC                     l2538 05DC  
                   l2554 05FC                     l2490 0573                     l2482 0560  
                   l3098 1FEF                     l2802 0C88                     l2730 0A6C  
                   l2722 09FF                     l2714 09A9                     l2706 0996  
                   l2466 1D4E                     l2458 1D35                     l2386 1F7F  
                   l2378 1F68                     l2394 1E5F                     l3450 0490  
                   l3442 0472                     l3434 0442                     l3426 0427  
                   l3418 03D9                     l3370 0204                     l3362 01E3  
                   l3354 01C2                     l3346 01A6                     l3338 014A  
                   l3290 1704                     l3282 16B8                     l3274 167B  
                   l3266 1641                     l3258 1627                     l3530 085E  
                   l3522 0854                     l3196 1C7F                     l3188 1011  
                   l2812 1C90                     l3516 1CD7                     l2660 07C0  
                   l2652 07AD                     l2644 0774                     l2636 0761  
                   l2628 0756                     l2580 066B                     l2564 063F  
                   l2572 0651                     l2556 05FD                     l2548 05F0  
                   l2492 0574                     l2484 0561                     l2476 054F  
                   l2900 11BB                     l2804 0C89                     l2740 0ADF  
                   l2732 0A7C                     l2724 0A2B                     l2716 09B9  
                   l2708 099B                     l2468 1D54                     l2396 1E64  
                   l3460 04C2                     l3452 049E                     l3444 047A  
                   l3436 0453                     l3428 042D                     l3380 0230  
                   l3372 0208                     l3364 01E7                     l3356 01CE  
                   l3348 01AC                     l3292 174F                     l3284 16DB  
                   l3276 1694                     l3268 165A                     l3540 08AC  
                   l3532 0865                     l3524 0859                     l3198 1CE3  
                   l2662 07C4                     l2654 07B2                     l2646 0782  
                   l2638 0767                     l2590 0695                     l2582 0682  
                   l2574 065D                     l2566 0643                     l2558 0614  
                   l2486 0566                     l2494 0576                     l2478 0556  
                   l2910 11E7                     l2902 11BD                     l2806 0C94  
                   l2750 0B8C                     l2742 0AFC                     l2734 0A99  
                   l2726 0A47                     l2718 09C6                     l2670 093C  
                   l2822 1408                     l2814 12F5                     l2398 1E66  
                   l3470 04E1                     l3462 04C6                     l3454 04A7  
                   l3446 0486                     l3438 045A                     l3390 02AE  
                   l3382 0235                     l3358 01D5                     l3366 01ED  
                   l3374 020E                     l3294 1768                     l3286 16DF  
                   l3278 169F                     l3550 08F1                     l3542 08AF  
                   l3534 0872                     l3526 085C                     l3518 084A  
                   l2664 07C6                     l2656 07BA                     l2648 0786  
                   l2592 0699                     l2584 0686                     l2576 0662  
                   l2568 0644                     l2496 057E                     l2488 056B  
                   l2912 11E8                     l2904 11C6                     l2760 0BD8  
                   l2752 0BB4                     l2744 0B29                     l2736 0AA9  
                   l2728 0A63                     l2680 0953                     l2672 0943  
                   l2824 140E                     l2816 12FB                     l2832 0CA0  
                   l3480 0505                     l3472 04E7                     l3464 04CA  
                   l3456 04AB                     l3448 048C                     l3392 02B2  
                   l3384 0270                     l3376 021B                     l3368 01FB  
                   l3296 1771                     l3288 16E5                     l3560 0929  
                   l3552 0915                     l3544 08B2                     l3536 087C  
                   l3528 085D                     l2666 07D1                     l2658 07BF  
                   l2594 069A                     l2586 068A                     l2498 0583  
                   l2930 121B                     l2922 1202                     l2914 11F0  
                   l2906 11CF                     l2770 0BED                     l2762 0BD9  
                   l2754 0BBD                     l2746 0B39                     l2738 0AC6  
                   l2690 096F                     l2682 0958                     l2674 0949  
                   l2850 0E26                     l2834 0CA4                     l3482 050C  
                   l3474 04EE                     l3466 04D6                     l3458 04B6  
                   l3394 02B8                     l3386 028F                     l3378 0229  
                   l3298 178C                     l3562 092A                     l3554 091B  
                   l3546 08C1                     l3538 089F                     l2668 07D5  
                   l2596 06A3                     l2588 0693                     l2932 122B  
                   l2916 11FA                     l2924 1214                     l2908 11DD  
                   l2780 0C12                     l2772 0BF1                     l2764 0BE2  
                   l2756 0BCB                     l2748 0B66                     l2692 0975  
                   l2684 0960                     l2676 094D                     l2828 14B9  
                   l2844 0D97                     l2836 0CA6                     l3484 0510  
                   l3476 04F2                     l3468 04DD                     l3396 02C5  
                   l3388 02A5                     l3636 1536                     l3492 0532  
                   l3556 0921                     l3548 08C8                     l2598 06A8  
                   l2950 125F                     l2942 124A                     l2790 0C50  
                   l2782 0C20                     l2774 0C05                     l2758 0BD4  
                   l2766 0BE8                     l2694 0979                     l2686 0962  
                   l2678 094E                     l2862 0F44                     l2846 0D9E  
                   l2838 0CAD                     l2854 0E53                     l3486 051C  
                   l3478 04FF                     l3398 02D4                     l3494 054A  
                   l3638 1611                     l3558 0928                     l2960 1296  
                   l2952 1270                     l2936 1234                     l2792 0C5B  
                   l2784 0C24                     l2768 0BEC                     l2696 097A  
                   l2688 096A                     l2880 1CC0                     l2872 1CB1  
                   l2864 0F4B                     l2856 0E5A                     l3488 0528  
                   l2962 12A4                     l2954 1272                     l2938 1241  
                   l2890 1193                     l2794 0C6A                     l2786 0C3D  
                   l2778 0C0D                     l2698 097F                     l2874 1CB2  
                   l2964 12A5                     l2956 127B                     l2948 1257  
                   l2884 1177                     l2796 0C74                     l2788 0C43  
                   l2876 1CB8                     l2868 0FD3                     l2990 1D09  
                   l2982 12D9                     l2974 12C0                     l2966 12AE  
                   l2958 1284                     l2886 118A                     l2798 0C76  
                   l2878 1CBE                     l2992 1D0D                     l2984 12E9  
                   l2968 12B8                     l2976 12D2                     l2896 11A6  
                   l2994 1D1A                     l2898 11AC                     l2996 1D21  
                   l2988 1D07                     l2998 1D27                     ?_isr 0070  
                   STR_1 1896                     u3010 1F75                     u3011 1F74  
                   u3020 1F7A                     u3100 1EA4                     u3021 1F79  
                   u3005 1F69                     u3101 1EA3                     u3110 1EA9  
                   u3030 1E5F                     u3111 1EA8                     u3031 1E5E  
                   u4000 0C05                     u3120 080E                     u3040 1E6A  
                   u4001 0C04                     u3121 080D                     u3041 1E69  
                   u4010 0C0C                     u3210 1D44                     u3050 1E75  
                   u4011 0C0B                     u3211 1D43                     u3051 1E74  
                   u3300 059A                     u4020 0C12                     u3140 0820  
                   u3220 1D4E                     u3301 0599                     u4021 0C11  
                   u3141 081F                     u3221 1D4D                     u3205 1D36  
                   u3310 059F                     u4030 0C24                     u3070 1E87  
                   u3311 059E                     u4031 0C23                     u3135 0812  
                   u3071 1E86                     u5000 10C3                     u3400 0659  
                   u3320 05B8                     u4040 0C33                     u3160 0831  
                   u3240 1D61                     u3080 1E91                     u5001 10C2  
                   u3401 0658                     u3321 05B7                     u3161 0830  
                   u3241 1D60                     u3225 1D4A                     u4105 1318  
                   u3081 1E90                     u3065 1E79                     u5010 10C7  
                   u3410 065D                     u3330 05BC                     u3250 0560  
                   u4050 0C50                     u4130 140E                     u5011 10C6  
                   u3411 065C                     u3331 05BB                     u3251 055F  
                   u4051 0C4F                     u3155 0821                     u3235 1D55  
                   u4131 140D                     u4115 1372                     u5100 1144  
                   u5020 10E7                     u3500 06E9                     u3420 0662  
                   u3340 0614                     u3260 0566                     u4060 0C6A  
                   u3180 0845                     u4300 0F4B                     u4220 0D9E  
                   u5101 1143                     u5021 10E6                     u3501 06EA  
                   u3421 0661                     u3341 0613                     u3261 0565  
                   u4061 0C69                     u4045 0C2E                     u3181 0844  
                   u3165 082D                     u4125 13C7                     u3085 1E8D  
                   u4301 0F4A                     u4221 0D9D                     u4205 0D0B  
                   u5110 1159                     u3510 0707                     u3502 06EF  
                   u3350 061F                     u3270 056B                     u4070 0C88  
                   u3190 1D32                     u3511 0706                     u3503 06F0  
                   u3431 0674                     u3351 061D                     u3271 056A  
                   u4071 0C87                     u4055 0C4C                     u3175 0839  
                   u3191 1D31                     u3095 1E98                     u4215 0D56  
                   u5120 1169                     u5040 1108                     u4080 1C90  
                   u3600 0767                     u3520 072C                     u3440 0686  
                   u3432 067B                     u3360 0620                     u3280 0589  
                   u5200 162B                     u5121 1168                     u5041 1107  
                   u4081 1C8F                     u3601 0766                     u3521 072B  
                   u3441 0685                     u3433 0682                     u3345 0610  
                   u3281 0588                     u4065 0C66                     u4145 142B  
                   u5201 162A                     u5130 116D                     u3610 076E  
                   u3530 0731                     u3450 068A                     u3370 0634  
                   u3290 0594                     u4410 11F6                     u4090 12FB  
                   u4170 0CA4                     u5210 165A                     u5131 116C  
                   u5115 1154                     u5035 10FA                     u3611 076D  
                   u3531 0730                     u3451 0689                     u3371 0633  
                   u3291 0593                     u4411 11F5                     u4155 1478  
                   u4091 12FA                     u4315 0F5E                     u4235 0DB1  
                   u4171 0CA3                     u5211 1659                     u5060 112A  
                   u3700 07D5                     u3620 0774                     u3460 0699  
                   u3380 0643                     u4500 1255                     u4420 11FA  
                   u2900 07E5                     u4340 1CB8                     u4260 0E5A  
                   u4180 0CAD                     u5300 0070                     u5220 1694  
                   u5140 150D                     u5061 1129                     u3701 07D4  
                   u3621 0773                     u3461 0698                     u3381 0642  
                   u4501 1254                     u4421 11F9                     u4405 11E9  
                   u2901 07E4                     u4165 14C4                     u4341 1CB7  
                   u4325 0F9A                     u4261 0E59                     u4245 0DED  
                   u4181 0CAC                     u5301 006F                     u5221 1693  
                   u5141 150C                     u3630 0786                     u3550 0747  
                   u4430 1201                     u3710 094D                     u4350 1CBE  
                   u5310 008B                     u5230 16DF                     u5150 154D  
                   u5055 111C                     u3631 0785                     u3551 0746  
                   u4431 1200                     u3711 094C                     u4351 1CBD  
                   u4335 0FD6                     u4255 0E29                     u5311 008A  
                   u5231 16DE                     u5151 154C                     u5080 113A  
                   u3640 0795                     u3560 074C                     u3480 06BE  
                   u4520 1296                     u4360 118A                     u2920 07F9  
                   u3720 0953                     u5400 021B                     u5240 1768  
                   u5160 1593                     u5081 1139                     u3561 074B  
                   u3545 073C                     u3481 06BD                     u4521 1295  
                   u4361 1189                     u2921 07F8                     u3801 0A0D  
                   u3721 0952                     u5401 021A                     u5305 006C  
                   u5241 1767                     u5161 1592                     u5090 1140  
                   u3650 07A4                     u3570 0756                     u4610 12E9  
                   u4450 1213                     u4370 11A4                     u3802 0A14  
                   u3730 0958                     u2930 1F22                     u5410 0229  
                   u5330 0180                     u5250 178C                     u5170 15A1  
                   u5091 113F                     u5075 112F                     u3651 07A3  
                   u3571 0755                     u3491 06D5                     u3483 06BA  
                   u3475 069C                     u3395 0646                     u4611 12E8  
                   u4515 127D                     u4451 1212                     u4371 11A3  
                   u2915 07EC                     u3811 0A39                     u3803 0A1B  
                   u3731 0957                     u2931 1F21                     u4275 0E7C  
                   u4195 0CCF                     u5411 0228                     u5331 017F  
                   u5251 178B                     u5171 15A0                     _PEIE 005E  
                   u3660 07AD                     u3580 075C                     u3492 06D6  
                   u4700 1EF4                     u4620 1D0D                     u4540 12B4  
                   u4460 121A                     u3900 0B72                     u3812 0A40  
                   u3740 0979                     u2940 1F2D                     u5500 0433  
                   u5340 018B                     u5260 17A3                     u5180 15F2  
                   u3661 07AC                     u3645 0790                     u3581 075B  
                   u3493 06DB                     u4701 1EF3                     u4621 1D0C  
                   u4605 12DB                     u4541 12B3                     u4525 1292  
                   u4461 1219                     u4445 1203                     u3821 0A55  
                   u3813 0A47                     u3741 0978                     u2941 1F2C  
                   u4285 0EB8                     u5501 0432                     u5405 0217  
                   u5341 018A                     u5325 014D                     u5261 17A2  
                   u5181 15F1                     u3670 07B2                     u3590 0761  
                   u3494 06DC                     u4550 12B8                     u4390 11DD  
                   u3822 0A5C                     u3750 097F                     u2950 1F3E  
                   u5510 043A                     u5430 02A4                     u5350 01A6  
                   u5270 001F                     u5190 1627                     u3671 07B1  
                   u3591 0760                     u3495 06E1                     u4551 12B7  
                   u4535 12A7                     u4391 11DC                     u3911 0B7E  
                   u3823 0A63                     u3751 097E                     u2951 1F3D  
                   u4295 0F03                     u5511 0439                     u5431 02A3  
                   u5351 01A5                     u5335 017C                     u5271 17FA  
                   u5191 1624                     u4800 107D                     u3680 07BF  
                   u3496 06E2                     u4720 1F12                     u4560 12BF  
                   u4480 122B                     u3920 0B9A                     u3912 0B85  
                   u3760 0984                     u5600 04CA                     u5520 0442  
                   u5440 02C5                     u5360 01B8                     u5280 003A  
                   u4801 107C                     u3681 07BE                     u4721 1F11  
                   u4705 1EF0                     u4561 12BE                     u4481 122A  
                   u4385 11C8                     u3913 0B8C                     u3905 0B6D  
                   u3841 0A8B                     u3761 0983                     u5601 04C9  
                   u5521 0441                     u5441 02C4                     u5425 0238  
                   u5361 01B7                     u5281 0039                     u5265 179F  
                   u4730 1D7C                     u3690 07C4                     u4650 1D27  
                   u4490 1241                     u3842 0A92                     u3770 099B  
                   u2970 1F50                     u5610 04D6                     u5530 0453  
                   u5450 02D4                     u5370 01C2                     u5290 0061  
                   u4731 1D7B                     u4811 108C                     u3691 07C3  
                   u4715 1F04                     u4651 1D26                     u4635 1D14  
                   u4491 1240                     u4475 121D                     u4395 11D9  
                   u3931 0BA6                     u3851 0AB8                     u3843 0A99  
                   u3835 0A65                     u3771 099A                     u2971 1F4F  
                   u5611 04D5                     u5531 0452                     u5451 02D3  
                   u5371 01C1                     u5291 0060                     u5275 17F5  
                   u4740 1D98                     u4820 10B7                     u4812 108D  
                   u4900 1FDE                     u4660 1EC5                     u4580 12D1  
                   u3932 0BAD                     u3852 0ABF                     u3780 09A0  
                   u5620 04E7                     u5540 0469                     u5460 02EF  
                   u5380 01CE                     u5700 0871                     u4741 1D97  
                   u4821 10B6                     u4813 1092                     u4901 1FDD  
                   u4661 1EC4                     u4645 1D1B                     u4581 12D0  
                   u3933 0BB4                     u3925 0B95                     u3853 0AC6  
                   u3781 099F                     u2965 1F42                     u5621 04E6  
                   u5541 0468                     u5461 02EE                     u5445 02C1  
                   u5381 01CD                     u5701 0870                     u4750 1DB2  
                   u4814 1093                     u4830 1C9B                     u4590 12D8  
                   u2990 1F61                     u5630 04FE                     u5550 047A  
                   u5390 01FA                     u5710 08AC                     u4751 1DB1  
                   u4815 1098                     u4831 1C9A                     u4591 12D7  
                   u4575 12C1                     u3871 0AEE                     u3791 09F1  
                   u2991 1F60                     u5631 04FD                     u5551 0479  
                   u5535 044F                     u5455 02D0                     u5391 01F9  
                   u5711 08AB                     u4816 1099                     u4760 102D  
                   u4920 1FEF                     u4840 1F91                     u4680 1ED9  
                   u3960 0BD8                     u3872 0AF5                     u3792 09F8  
                   u5640 0505                     u5560 0486                     u5720 08C1  
                   u4825 10B3                     u4761 102C                     u4921 1FEE  
                   u4841 1F90                     u4681 1ED8                     u3961 0BD7  
                   u3945 0BB6                     u3881 0B1B                     u3873 0AFC  
                   u3865 0AC8                     u3793 09FF                     u2985 1F51  
                   u5641 0504                     u5561 0485                     u5545 0465  
                   u5721 08C0                     u4770 1049                     u4930 1FF4  
                   u4850 1FA8                     u3882 0B22                     u5650 051C  
                   u5570 0490                     u5490 041B                     u5730 0921  
                   u4755 1DAE                     u4771 1048                     u4931 1FF3  
                   u4915 1FE1                     u4675 1ECA                     u3955 0BCD  
                   u3891 0B48                     u3883 0B29                     u2995 1F5D  
                   u5651 051B                     u5571 048F                     u5491 041A  
                   u5475 0376                     u5395 01F6                     u5731 0920  
                   u5715 08A8                     u4780 1055                     u4860 1FBE  
                   u4940 1E0E                     u3980 0BEC                     u3892 0B4F  
                   u5660 0528                     u5580 049E                     u5740 0928  
                   i1l85 1C72                     u4781 1054                     u4861 1FBD  
                   u4941 1E0D                     u3981 0BEB                     u3893 0B56  
                   u5661 0527                     u5581 049D                     u5485 03DC  
                   u5741 0927                     u5725 08BD                     u4870 1FC5  
                   u3990 0BF1                     u5670 054A                     u5590 04B6  
                   u4791 1064                     u4871 1FC4                     u4855 1FA3  
                   u4695 1EDB                     u3991 0BF0                     u3975 0BDB  
                   u5671 0547                     u5591 04B5                     u5680 1CE2  
                   u4792 1065                     u4960 1E22                     u5681 1CE1  
                   u4793 106A                     u4961 1E21                     u5585 049A  
                   u4794 106B                     u4890 1FD7                     u4970 1E34  
                   u5690 086C                     u4795 1070                     u4891 1FD6  
                   u4971 1E33                     u4955 1E13                     u5595 04B2  
                   u5691 086B                     u4796 1071                     u4885 1FC7  
                   u4990 1E51                     u4991 1E50                     u4975 1E30  
                   u5767 0862                     u4985 1E43                     u5777 0932  
                   _TXIF 0064                     _conv 1CE3                     _main 084A  
                   btemp 007E                     start 000C             _sprintf$1130 00AD  
                  ??_isr 0070            ___fltol@sign1 005E                    ?_conv 0026  
        __end_of___fladd 07D7                    ?_main 0070          __end_of___awdiv 1F84  
        __end_of___flneg 1C9E          __end_of___awmod 1EB3          __end_of___flmul 0C9D  
        __end_of___flsub 1E06          __end_of___fltol 2000                    _ANSEL 0188  
        __end_of___lldiv 1F1B          ___awdiv@divisor 0020          __end_of___llmod 1E5A  
        __end_of___lwdiv 084A          __end_of___lwmod 1D66          ___awdiv@counter 0024  
                  _TMR1H 000F                    _TMR1L 000E                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
        __end_of_cfg_clk 1C81                    _TRISB 0086                    _TRISD 0088  
                  _SSPIE 0463                    _SSPIF 0063                    _TXREG 0019  
        __end_of_dpowers 1896                    _scale 0C9D          __end_of_isdigit 1CC2  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 054F          __initialization 000F             __end_of_conv 1D07  
           __end_of_main 093C                   ??_conv 007A                   ??_main 00C8  
   __size_of__tdiv_to_l_ 00BD         ___llmod@dividend 0076                   ?_scale 0042  
       ___awdiv@dividend 0022                   _ANSELH 0189                   _SPBRGH 009A  
                 _TMR1ON 0080                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of___xxtofl 1177         __end_of__powers_ 183A                   ___flge 1017  
                 ___fleq 1D66                ??___fladd 005E                   ___wmul 1D07  
              ??___awdiv 0079                   _cfg_io 1C9E                ??___flneg 0076  
              ??___awmod 0076                ??___flmul 0030                ??___flsub 007C  
              ??___fltol 0059                ??___lldiv 007A                ??___llmod 007A  
              ??___lwdiv 0020                ??___lwmod 0076                ??_cfg_clk 0072  
                 _fround 12F2         ___awdiv@quotient 0026          ___awmod@divisor 0072  
        ___awmod@counter 0077                   conv@aa 0026                ??_isdigit 0072  
     __size_of__Umul8_16 0027                   saved_w 007E                ??_sprintf 00A8  
             ___flge@ff1 0072               ___flge@ff2 0076             ___xxtofl@arg 0022  
           ___xxtofl@exp 0021             ___xxtofl@val 0072               ___fleq@ff1 0072  
             ___fleq@ff2 0076  __end_of__initialization 001B               ___flneg@f1 0072  
             ___fltol@f1 0055           __pcstackCOMMON 0070       __size_of_cfg_usart 0015  
          __end_of_scale 1000               __div_to_l_ 1234          __div_to_l_@exp1 0025  
        __div_to_l_@cntr 0024                  ??_scale 0046          __div_to_l_@quot 0020  
           sprintf@width 00BE               __pbssBANK0 006F               __pbssBANK1 00CB  
          __div_to_l_@f1 0072            __div_to_l_@f2 0076        __end_of__Umul8_16 07FE  
             __pmaintext 084A                  ?___flge 0072                  ?___fleq 0072  
                ?___wmul 0072                  ?_cfg_io 0070               __pintentry 0004  
     __size_of_send_char 000A       __size_of_send_crct 0021                  ?_fround 0042  
              ?___xxtofl 0072                  _SSPCON2 0091                  _SSPSTAT 0094  
            send_crct@st 0076               __stringtab 1800        __end_of_cfg_usart 1017  
      __end_of__npowers_ 186E               _scale$1129 0050          __size_of___flge 00A4  
        __size_of___fleq 0050                  ___fladd 054F                  ___awdiv 1F1B  
                ___flneg 1C93                  ___awmod 1E5A                  ___flmul 093C  
                ___flsub 1DB6                  ___fltol 1F84                  ___lldiv 1EB3  
        __size_of___wmul 0025                  ___llmod 1E06          __size_of_cfg_io 0012  
                ___lwdiv 0804                  ___lwmod 1D2C                  _cfg_clk 1C79  
        __size_of_fround 020B                  __ptext1 14FD                  __ptext2 0C9D  
                __ptext3 1E5A                  __ptext4 1F1B                  __ptext5 1CB0  
                __ptext6 12F2                  __ptext7 1D2C                  __ptext8 0804  
                __ptext9 093C              ?__div_to_l_ 0072                  _dpowers 186E  
                _isdigit 1CB0             __size_of_isr 0007               ??___xxtofl 0076  
       ___awmod@dividend 0074                  _sprintf 14FD                  clrloop0 1C82  
   end_of_initialization 001B        __end_of_send_char 1C93        __end_of_send_crct 1CE3  
        ___lldiv@divisor 0072          ___lldiv@counter 0024                _RCSTAbits 0018  
                psplit$0 B002A           __tdiv_to_l_@f1 0072           __tdiv_to_l_@f2 0076  
          send_char@dato 0072            ??__tdiv_to_l_ 0020              ___fladd@grs 0069  
          ___xxtofl@sign 0020                _TRISAbits 0085                _TRISCbits 0087  
             conv@result 002A              ___flmul@grs 0036                _TXSTAbits 0098  
    __size_of__div_to_l_ 00BE           __end_of___flge 10BB           __end_of___fleq 1DB6  
         __end_of___wmul 1D2C           __end_of_cfg_io 1CB0        pnum$text1_split_1 002A  
            _BAUDCTLbits 0187           __end_of_fround 14FD      start_initialization 000F  
    __end_of__tdiv_to_l_ 1234              __end_of_isr 1C79          ___llmod@divisor 0072  
        ___llmod@counter 007B                 ??___flge 0020                 ??___fleq 0020  
               ??___wmul 0076                 ??_cfg_io 0072                __Umul8_16 07D7  
               ??_fround 0046            sprintf@tmpval 00B6                ___fladd@a 005A  
              ___fladd@b 0056               fround@prec 0055                ___flmul@a 002C  
              ___flmul@b 0028                ___flsub@a 00A0                ___flsub@b 00A4  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of___xxtofl 00BC              sprintf@flag 00BC              sprintf@eexp 00BA  
            sprintf@fval 00C0              sprintf@prec 00C4                _cfg_usart 1002  
       ___lwdiv@dividend 007A                 ?___fladd 0056                 ?___awdiv 0020  
               ?___flneg 0072                 ?___awmod 0072                 ?___flmul 0028  
               ?___flsub 00A0                 ?___fltol 0055                 ?___lldiv 0072  
               ?___llmod 0072                __npowers_ 183A               ?__Umul8_16 0072  
               ?___lwdiv 0078                 ?___lwmod 0072                 ?_cfg_clk 0070  
              __pstrings 1800              __tdiv_to_l_ 1177               send_crct@i 0074  
           ??__div_to_l_ 007A                 ?_isdigit 0070         ___lwdiv@quotient 0021  
               ?_sprintf 006A           __size_of_scale 0363        interrupt_function 0004  
         ___wmul@product 0076                clear_ram0 1C81               ?_cfg_usart 0070  
               _PIE1bits 008C                _send_char 1C89                _send_crct 1CC2  
     __end_of__div_to_l_ 12F2              __stringbase 1805        ___wmul@multiplier 0072  
             ?_send_char 0070               ?_send_crct 0070              ??__Umul8_16 0074  
       __size_of___fladd 0288         __size_of___awdiv 0069         __size_of___flneg 000B  
       __size_of___awmod 0059         __size_of___flmul 0361         __size_of___flsub 0050  
       __size_of___fltol 007C         __size_of___lldiv 0068         __size_of___llmod 0054  
       __size_of___lwdiv 0046         __size_of___lwmod 003A         __size_of_cfg_clk 0008  
            _fround$1127 0051              _fround$1128 004D       __end_of__stringtab 1806  
            _isdigit$932 0072               sprintf@val 00B2                 ___xxtofl 10BB  
       __size_of_isdigit 0012          ___lwdiv@divisor 0078          ___lwdiv@counter 0023  
               __ptext10 07D7                 __ptext11 1177                 __ptext20 1017  
               __ptext12 1234                 __ptext21 1D66                 __ptext13 1D07  
               __ptext22 1CC2                 __ptext14 1E06                 __ptext23 1C89  
               __ptext15 1EB3                 __ptext24 1CE3                 __ptext16 1F84  
               __ptext25 10BB                 __ptext17 1DB6                 __ptext26 1002  
               __ptext18 054F                 __ptext27 1C9E                 __ptext19 1C93  
               __ptext28 1C79                 __ptext29 1C72                 __powers_ 1806  
       __size_of_sprintf F052            __size_of_conv 0024            __size_of_main 00F2  
              pnum$text1 000B              ??_cfg_usart 0072               _INTCONbits 000B  
               isdigit@c 0073                 scale@scl 0054                 intlevel1 0000  
              sprintf@ap 00B1         __tdiv_to_l_@exp1 0029         __tdiv_to_l_@cntr 0028  
              sprintf@sp 00C6         __tdiv_to_l_@quot 0024         ___lwmod@dividend 0074  
       ___lldiv@dividend 0076              ??_send_char 0072              ??_send_crct 0073  
              stringcode 1800               _OSCCONbits 008F             ?__tdiv_to_l_ 0072  
 __Umul8_16@multiplicand 0072                 sprintf@c 00C7                 sprintf@f 006A  
       ___lldiv@quotient 0020          ___lwmod@divisor 0072          ___lwmod@counter 0077  
               stringdir 1800                 stringtab 1800              _SSPCON2bits 0091  
          ___fladd@signs 0066             ___fladd@aexp 0067             ___fladd@bexp 0068  
   __Umul8_16@multiplier 007A        __Umul8_16@product 0076  

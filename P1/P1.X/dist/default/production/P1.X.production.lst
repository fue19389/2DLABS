

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 23 21:53:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237                           
   238                           	psect	strings
   239  1800                     __pstrings:
   240  1800                     stringtab:
   241  1800                     __stringtab:
   242  1800                     stringcode:	
   243                           ;	String table - string pointers are 1 byte each
   244                           
   245  1800                     stringdir:
   246  1800  3018               	movlw	high stringdir
   247  1801  008A               	movwf	10
   248  1802  0804               	movf	4,w
   249  1803  0A84               	incf	4,f
   250  1804  0782               	addwf	2,f
   251  1805                     __stringbase:
   252  1805  3400               	retlw	0
   253  1806                     __end_of__stringtab:
   254  1806                     __powers_:
   255  1806  3400               	retlw	0
   256  1807  3400               	retlw	0
   257  1808  3480               	retlw	128
   258  1809  343F               	retlw	63
   259  180A  3400               	retlw	0
   260  180B  3400               	retlw	0
   261  180C  3420               	retlw	32
   262  180D  3441               	retlw	65
   263  180E  3400               	retlw	0
   264  180F  3400               	retlw	0
   265  1810  34C8               	retlw	200
   266  1811  3442               	retlw	66
   267  1812  3400               	retlw	0
   268  1813  3400               	retlw	0
   269  1814  347A               	retlw	122
   270  1815  3444               	retlw	68
   271  1816  3400               	retlw	0
   272  1817  3440               	retlw	64
   273  1818  341C               	retlw	28
   274  1819  3446               	retlw	70
   275  181A  3400               	retlw	0
   276  181B  3450               	retlw	80
   277  181C  34C3               	retlw	195
   278  181D  3447               	retlw	71
   279  181E  3400               	retlw	0
   280  181F  3424               	retlw	36
   281  1820  3474               	retlw	116
   282  1821  3449               	retlw	73
   283  1822  3480               	retlw	128
   284  1823  3496               	retlw	150
   285  1824  3418               	retlw	24
   286  1825  344B               	retlw	75
   287  1826  3420               	retlw	32
   288  1827  34BC               	retlw	188
   289  1828  34BE               	retlw	190
   290  1829  344C               	retlw	76
   291  182A  3428               	retlw	40
   292  182B  346B               	retlw	107
   293  182C  346E               	retlw	110
   294  182D  344E               	retlw	78
   295  182E  34F9               	retlw	249
   296  182F  3402               	retlw	2
   297  1830  3415               	retlw	21
   298  1831  3450               	retlw	80
   299  1832  34EC               	retlw	236
   300  1833  3478               	retlw	120
   301  1834  34AD               	retlw	173
   302  1835  3460               	retlw	96
   303  1836  34CA               	retlw	202
   304  1837  34F2               	retlw	242
   305  1838  3449               	retlw	73
   306  1839  3471               	retlw	113
   307  183A                     __end_of__powers_:
   308  183A                     __npowers_:
   309  183A  3400               	retlw	0
   310  183B  3400               	retlw	0
   311  183C  3480               	retlw	128
   312  183D  343F               	retlw	63
   313  183E  34CD               	retlw	205
   314  183F  34CC               	retlw	204
   315  1840  34CC               	retlw	204
   316  1841  343D               	retlw	61
   317  1842  340A               	retlw	10
   318  1843  34D7               	retlw	215
   319  1844  3423               	retlw	35
   320  1845  343C               	retlw	60
   321  1846  346F               	retlw	111
   322  1847  3412               	retlw	18
   323  1848  3483               	retlw	131
   324  1849  343A               	retlw	58
   325  184A  3417               	retlw	23
   326  184B  34B7               	retlw	183
   327  184C  34D1               	retlw	209
   328  184D  3438               	retlw	56
   329  184E  34AC               	retlw	172
   330  184F  34C5               	retlw	197
   331  1850  3427               	retlw	39
   332  1851  3437               	retlw	55
   333  1852  34BD               	retlw	189
   334  1853  3437               	retlw	55
   335  1854  3486               	retlw	134
   336  1855  3435               	retlw	53
   337  1856  3495               	retlw	149
   338  1857  34BF               	retlw	191
   339  1858  34D6               	retlw	214
   340  1859  3433               	retlw	51
   341  185A  3477               	retlw	119
   342  185B  34CC               	retlw	204
   343  185C  342B               	retlw	43
   344  185D  3432               	retlw	50
   345  185E  345F               	retlw	95
   346  185F  3470               	retlw	112
   347  1860  3489               	retlw	137
   348  1861  3430               	retlw	48
   349  1862  34FF               	retlw	255
   350  1863  34E6               	retlw	230
   351  1864  34DB               	retlw	219
   352  1865  342E               	retlw	46
   353  1866  3408               	retlw	8
   354  1867  34E5               	retlw	229
   355  1868  343C               	retlw	60
   356  1869  341E               	retlw	30
   357  186A  3460               	retlw	96
   358  186B  3442               	retlw	66
   359  186C  34A2               	retlw	162
   360  186D  340D               	retlw	13
   361  186E                     __end_of__npowers_:
   362  186E                     _dpowers:
   363  186E  3401               	retlw	1
   364  186F  3400               	retlw	0
   365  1870  3400               	retlw	0
   366  1871  3400               	retlw	0
   367  1872  340A               	retlw	10
   368  1873  3400               	retlw	0
   369  1874  3400               	retlw	0
   370  1875  3400               	retlw	0
   371  1876  3464               	retlw	100
   372  1877  3400               	retlw	0
   373  1878  3400               	retlw	0
   374  1879  3400               	retlw	0
   375  187A  34E8               	retlw	232
   376  187B  3403               	retlw	3
   377  187C  3400               	retlw	0
   378  187D  3400               	retlw	0
   379  187E  3410               	retlw	16
   380  187F  3427               	retlw	39
   381  1880  3400               	retlw	0
   382  1881  3400               	retlw	0
   383  1882  34A0               	retlw	160
   384  1883  3486               	retlw	134
   385  1884  3401               	retlw	1
   386  1885  3400               	retlw	0
   387  1886  3440               	retlw	64
   388  1887  3442               	retlw	66
   389  1888  340F               	retlw	15
   390  1889  3400               	retlw	0
   391  188A  3480               	retlw	128
   392  188B  3496               	retlw	150
   393  188C  3498               	retlw	152
   394  188D  3400               	retlw	0
   395  188E  3400               	retlw	0
   396  188F  34E1               	retlw	225
   397  1890  34F5               	retlw	245
   398  1891  3405               	retlw	5
   399  1892  3400               	retlw	0
   400  1893  34CA               	retlw	202
   401  1894  349A               	retlw	154
   402  1895  343B               	retlw	59
   403  1896                     __end_of_dpowers:
   404  0019                     _TXREG	set	25
   405  0018                     _RCSTAbits	set	24
   406  000B                     _INTCONbits	set	11
   407  0005                     _PORTA	set	5
   408  0008                     _PORTD	set	8
   409  0006                     _PORTB	set	6
   410  0008                     _PORTDbits	set	8
   411  0005                     _PORTAbits	set	5
   412  000E                     _TMR1L	set	14
   413  000F                     _TMR1H	set	15
   414  0064                     _TXIF	set	100
   415  0080                     _TMR1ON	set	128
   416  0029                     _RA1	set	41
   417  009A                     _SPBRGH	set	154
   418  0099                     _SPBRG	set	153
   419  0098                     _TXSTAbits	set	152
   420  008C                     _PIE1bits	set	140
   421  008F                     _OSCCONbits	set	143
   422  0088                     _TRISD	set	136
   423  0086                     _TRISB	set	134
   424  0085                     _TRISAbits	set	133
   425  0187                     _BAUDCTLbits	set	391
   426  0189                     _ANSELH	set	393
   427  0188                     _ANSEL	set	392
   428  1896                     STR_1:
   429  1896  3425               	retlw	37	;'%'
   430  1897  3430               	retlw	48	;'0'
   431  1898  342E               	retlw	46	;'.'
   432  1899  3430               	retlw	48	;'0'
   433  189A  3466               	retlw	102	;'f'
   434  189B  3420               	retlw	32	;' '
   435  189C  3463               	retlw	99	;'c'
   436  189D  346D               	retlw	109	;'m'
   437  189E  340D               	retlw	13
   438  189F  3400               	retlw	0
   439                           
   440                           	psect	cinit
   441  000F                     start_initialization:	
   442                           ; #config settings
   443                           
   444  000F                     __initialization:
   445                           
   446                           ; Clear objects allocated to COMMON
   447  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   448                           
   449                           ; Clear objects allocated to BANK1
   450  0010  1383               	bcf	3,7	;select IRP bank0
   451  0011  30CB               	movlw	low __pbssBANK1
   452  0012  0084               	movwf	4
   453  0013  30E2               	movlw	low (__pbssBANK1+23)
   454  0014  160A  158A  24AD  120A  118A  	fcall	clear_ram0
   455  0019                     end_of_initialization:	
   456                           ;End of C runtime variable initialization code
   457                           
   458  0019                     __end_of__initialization:
   459  0019  0183               	clrf	3
   460  001A  120A  158A  2878   	ljmp	_main	;jump to C main() function
   461                           
   462                           	psect	bssCOMMON
   463  007B                     __pbssCOMMON:
   464  007B                     _i:
   465  007B                     	ds	1
   466                           
   467                           	psect	bssBANK1
   468  00CB                     __pbssBANK1:
   469  00CB                     _v:
   470  00CB                     	ds	4
   471  00CF                     _D:
   472  00CF                     	ds	2
   473  00D1                     _V:
   474  00D1                     	ds	2
   475  00D3                     _f1:
   476  00D3                     	ds	15
   477                           
   478                           	psect	clrtext
   479  1CAD                     clear_ram0:	
   480                           ;	Called with FSR containing the base address, and
   481                           ;	W with the last address+1
   482                           
   483  1CAD  0064               	clrwdt	;clear the watchdog before getting into this loop
   484  1CAE                     clrloop0:
   485  1CAE  0180               	clrf	0	;clear RAM location pointed to by FSR
   486  1CAF  0A84               	incf	4,f	;increment pointer
   487  1CB0  0604               	xorwf	4,w	;XOR with final address
   488  1CB1  1903               	btfsc	3,2	;have we reached the end yet?
   489  1CB2  3400               	retlw	0	;all done for this memory range, return
   490  1CB3  0604               	xorwf	4,w	;XOR again to restore value
   491  1CB4  2CAE               	goto	clrloop0	;do the next byte
   492                           
   493                           	psect	cstackBANK1
   494  00A0                     __pcstackBANK1:
   495  00A0                     ?___flsub:
   496  00A0                     ___flsub@a:	
   497                           ; 4 bytes @ 0x0
   498                           
   499                           
   500                           ; 4 bytes @ 0x0
   501  00A0                     	ds	4
   502  00A4                     ___flsub@b:
   503                           
   504                           ; 4 bytes @ 0x4
   505  00A4                     	ds	4
   506  00A8                     ??_sprintf:
   507                           
   508                           ; 1 bytes @ 0x8
   509  00A8                     	ds	5
   510  00AD                     _sprintf$1077:
   511                           
   512                           ; 4 bytes @ 0xD
   513  00AD                     	ds	4
   514  00B1                     sprintf@ap:
   515                           
   516                           ; 1 bytes @ 0x11
   517  00B1                     	ds	1
   518  00B2                     sprintf@val:
   519                           
   520                           ; 4 bytes @ 0x12
   521  00B2                     	ds	4
   522  00B6                     sprintf@tmpval:
   523                           
   524                           ; 4 bytes @ 0x16
   525  00B6                     	ds	4
   526  00BA                     sprintf@eexp:
   527                           
   528                           ; 2 bytes @ 0x1A
   529  00BA                     	ds	2
   530  00BC                     sprintf@flag:
   531                           
   532                           ; 2 bytes @ 0x1C
   533  00BC                     	ds	2
   534  00BE                     sprintf@width:
   535                           
   536                           ; 2 bytes @ 0x1E
   537  00BE                     	ds	2
   538  00C0                     sprintf@fval:
   539                           
   540                           ; 4 bytes @ 0x20
   541  00C0                     	ds	4
   542  00C4                     sprintf@prec:
   543                           
   544                           ; 2 bytes @ 0x24
   545  00C4                     	ds	2
   546  00C6                     sprintf@sp:
   547                           
   548                           ; 1 bytes @ 0x26
   549  00C6                     	ds	1
   550  00C7                     sprintf@c:
   551                           
   552                           ; 1 bytes @ 0x27
   553  00C7                     	ds	1
   554  00C8                     ??_main:
   555                           
   556                           ; 1 bytes @ 0x28
   557  00C8                     	ds	3
   558                           
   559                           	psect	cstackCOMMON
   560  0070                     __pcstackCOMMON:
   561  0070                     ?_isdigit:
   562  0070                     ?_cfg_io:	
   563                           ; 1 bit 
   564                           
   565  0070                     ?_cfg_usart:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_cfg_clk:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_send_crct:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_send_char:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_isr:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??_isr:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_main:	
   584                           ; 1 bytes @ 0x0
   585                           
   586                           
   587                           ; 1 bytes @ 0x0
   588  0070                     	ds	2
   589  0072                     ?___fleq:
   590  0072                     ?___flge:	
   591                           ; 1 bit 
   592                           
   593  0072                     ??_cfg_io:	
   594                           ; 1 bit 
   595                           
   596  0072                     ??_cfg_usart:	
   597                           ; 1 bytes @ 0x2
   598                           
   599  0072                     ??_cfg_clk:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  0072                     ??_send_char:	
   603                           ; 1 bytes @ 0x2
   604                           
   605  0072                     ??_isdigit:	
   606                           ; 1 bytes @ 0x2
   607                           
   608  0072                     ?__Umul8_16:	
   609                           ; 1 bytes @ 0x2
   610                           
   611  0072                     ?___wmul:	
   612                           ; 2 bytes @ 0x2
   613                           
   614  0072                     ?___awmod:	
   615                           ; 2 bytes @ 0x2
   616                           
   617  0072                     ?___lwmod:	
   618                           ; 2 bytes @ 0x2
   619                           
   620  0072                     ?__tdiv_to_l_:	
   621                           ; 2 bytes @ 0x2
   622                           
   623  0072                     ?__div_to_l_:	
   624                           ; 4 bytes @ 0x2
   625                           
   626  0072                     ?___lldiv:	
   627                           ; 4 bytes @ 0x2
   628                           
   629  0072                     ?___flneg:	
   630                           ; 4 bytes @ 0x2
   631                           
   632  0072                     ?___llmod:	
   633                           ; 4 bytes @ 0x2
   634                           
   635  0072                     ?___xxtofl:	
   636                           ; 4 bytes @ 0x2
   637                           
   638  0072                     send_char@dato:	
   639                           ; 4 bytes @ 0x2
   640                           
   641  0072                     __Umul8_16@multiplicand:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0072                     _isdigit$902:	
   645                           ; 1 bytes @ 0x2
   646                           
   647  0072                     ___wmul@multiplier:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ___awmod@divisor:	
   651                           ; 2 bytes @ 0x2
   652                           
   653  0072                     ___lwmod@divisor:	
   654                           ; 2 bytes @ 0x2
   655                           
   656  0072                     ___lldiv@divisor:	
   657                           ; 2 bytes @ 0x2
   658                           
   659  0072                     __div_to_l_@f1:	
   660                           ; 4 bytes @ 0x2
   661                           
   662  0072                     ___fleq@ff1:	
   663                           ; 4 bytes @ 0x2
   664                           
   665  0072                     ___flge@ff1:	
   666                           ; 4 bytes @ 0x2
   667                           
   668  0072                     ___flneg@f1:	
   669                           ; 4 bytes @ 0x2
   670                           
   671  0072                     __tdiv_to_l_@f1:	
   672                           ; 4 bytes @ 0x2
   673                           
   674  0072                     ___llmod@divisor:	
   675                           ; 4 bytes @ 0x2
   676                           
   677  0072                     ___xxtofl@val:	
   678                           ; 4 bytes @ 0x2
   679                           
   680                           
   681                           ; 4 bytes @ 0x2
   682  0072                     	ds	1
   683  0073                     ??_send_crct:
   684  0073                     isdigit@c:	
   685                           ; 1 bytes @ 0x3
   686                           
   687                           
   688                           ; 1 bytes @ 0x3
   689  0073                     	ds	1
   690  0074                     ??__Umul8_16:
   691  0074                     send_crct@i:	
   692                           ; 1 bytes @ 0x4
   693                           
   694  0074                     ___wmul@multiplicand:	
   695                           ; 2 bytes @ 0x4
   696                           
   697  0074                     ___awmod@dividend:	
   698                           ; 2 bytes @ 0x4
   699                           
   700  0074                     ___lwmod@dividend:	
   701                           ; 2 bytes @ 0x4
   702                           
   703                           
   704                           ; 2 bytes @ 0x4
   705  0074                     	ds	2
   706  0076                     ??___wmul:
   707  0076                     ??___awmod:	
   708                           ; 1 bytes @ 0x6
   709                           
   710  0076                     ??___flneg:	
   711                           ; 1 bytes @ 0x6
   712                           
   713  0076                     ??___lwmod:	
   714                           ; 1 bytes @ 0x6
   715                           
   716  0076                     ??___xxtofl:	
   717                           ; 1 bytes @ 0x6
   718                           
   719  0076                     send_crct@st:	
   720                           ; 1 bytes @ 0x6
   721                           
   722  0076                     ___wmul@product:	
   723                           ; 1 bytes @ 0x6
   724                           
   725  0076                     __Umul8_16@product:	
   726                           ; 2 bytes @ 0x6
   727                           
   728  0076                     ___lldiv@dividend:	
   729                           ; 2 bytes @ 0x6
   730                           
   731  0076                     __div_to_l_@f2:	
   732                           ; 4 bytes @ 0x6
   733                           
   734  0076                     ___fleq@ff2:	
   735                           ; 4 bytes @ 0x6
   736                           
   737  0076                     ___flge@ff2:	
   738                           ; 4 bytes @ 0x6
   739                           
   740  0076                     __tdiv_to_l_@f2:	
   741                           ; 4 bytes @ 0x6
   742                           
   743  0076                     ___llmod@dividend:	
   744                           ; 4 bytes @ 0x6
   745                           
   746                           
   747                           ; 4 bytes @ 0x6
   748  0076                     	ds	1
   749  0077                     ___awmod@counter:
   750  0077                     ___lwmod@counter:	
   751                           ; 1 bytes @ 0x7
   752                           
   753                           
   754                           ; 1 bytes @ 0x7
   755  0077                     	ds	1
   756  0078                     ??___lwdiv:
   757  0078                     ___awmod@sign:	
   758                           ; 1 bytes @ 0x8
   759                           
   760  0078                     __Umul8_16@word_mpld:	
   761                           ; 1 bytes @ 0x8
   762                           
   763                           
   764                           ; 2 bytes @ 0x8
   765  0078                     	ds	1
   766  0079                     ??___awdiv:
   767                           
   768                           ; 1 bytes @ 0x9
   769  0079                     	ds	1
   770  007A                     ??_conv:
   771  007A                     ??__div_to_l_:	
   772                           ; 1 bytes @ 0xA
   773                           
   774  007A                     ??___lldiv:	
   775                           ; 1 bytes @ 0xA
   776                           
   777  007A                     ??___llmod:	
   778                           ; 1 bytes @ 0xA
   779                           
   780  007A                     __Umul8_16@multiplier:	
   781                           ; 1 bytes @ 0xA
   782                           
   783                           
   784                           ; 1 bytes @ 0xA
   785  007A                     	ds	1
   786  007B                     ??___flsub:
   787                           
   788                           	psect	cstackBANK0
   789  0020                     __pcstackBANK0:	
   790                           ; 1 bytes @ 0xB
   791                           
   792  0020                     ??__tdiv_to_l_:
   793  0020                     ??___fleq:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0020                     ??___flge:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0020                     ?___awdiv:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0020                     ?___lwdiv:	
   803                           ; 2 bytes @ 0x0
   804                           
   805  0020                     ___llmod@counter:	
   806                           ; 2 bytes @ 0x0
   807                           
   808  0020                     ___xxtofl@sign:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0020                     ___awdiv@divisor:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0020                     ___lwdiv@divisor:	
   815                           ; 2 bytes @ 0x0
   816                           
   817  0020                     ___lldiv@quotient:	
   818                           ; 2 bytes @ 0x0
   819                           
   820  0020                     __div_to_l_@quot:	
   821                           ; 4 bytes @ 0x0
   822                           
   823                           
   824                           ; 4 bytes @ 0x0
   825  0020                     	ds	1
   826  0021                     ___xxtofl@exp:
   827                           
   828                           ; 1 bytes @ 0x1
   829  0021                     	ds	1
   830  0022                     ___awdiv@dividend:
   831  0022                     ___lwdiv@dividend:	
   832                           ; 2 bytes @ 0x2
   833                           
   834  0022                     ___xxtofl@arg:	
   835                           ; 2 bytes @ 0x2
   836                           
   837                           
   838                           ; 4 bytes @ 0x2
   839  0022                     	ds	2
   840  0024                     ___lldiv@counter:
   841  0024                     ___awdiv@counter:	
   842                           ; 1 bytes @ 0x4
   843                           
   844  0024                     __div_to_l_@cntr:	
   845                           ; 1 bytes @ 0x4
   846                           
   847  0024                     ___lwdiv@counter:	
   848                           ; 1 bytes @ 0x4
   849                           
   850  0024                     __tdiv_to_l_@quot:	
   851                           ; 1 bytes @ 0x4
   852                           
   853                           
   854                           ; 4 bytes @ 0x4
   855  0024                     	ds	1
   856  0025                     ___awdiv@sign:
   857  0025                     __div_to_l_@exp1:	
   858                           ; 1 bytes @ 0x5
   859                           
   860  0025                     ___lwdiv@quotient:	
   861                           ; 1 bytes @ 0x5
   862                           
   863                           
   864                           ; 2 bytes @ 0x5
   865  0025                     	ds	1
   866  0026                     ?_conv:
   867  0026                     conv@aa:	
   868                           ; 4 bytes @ 0x6
   869                           
   870  0026                     ___awdiv@quotient:	
   871                           ; 2 bytes @ 0x6
   872                           
   873                           
   874                           ; 2 bytes @ 0x6
   875  0026                     	ds	2
   876  0028                     ?___flmul:
   877  0028                     __tdiv_to_l_@cntr:	
   878                           ; 4 bytes @ 0x8
   879                           
   880  0028                     ___flmul@b:	
   881                           ; 1 bytes @ 0x8
   882                           
   883                           
   884                           ; 4 bytes @ 0x8
   885  0028                     	ds	1
   886  0029                     __tdiv_to_l_@exp1:
   887                           
   888                           ; 1 bytes @ 0x9
   889  0029                     	ds	1
   890  002A                     conv@result:
   891                           
   892                           ; 4 bytes @ 0xA
   893  002A                     	ds	2
   894  002C                     ___flmul@a:
   895                           
   896                           ; 4 bytes @ 0xC
   897  002C                     	ds	4
   898  0030                     ??___flmul:
   899                           
   900                           ; 1 bytes @ 0x10
   901  0030                     	ds	5
   902  0035                     ___flmul@sign:
   903                           
   904                           ; 1 bytes @ 0x15
   905  0035                     	ds	1
   906  0036                     ___flmul@grs:
   907                           
   908                           ; 4 bytes @ 0x16
   909  0036                     	ds	4
   910  003A                     ___flmul@aexp:
   911                           
   912                           ; 1 bytes @ 0x1A
   913  003A                     	ds	1
   914  003B                     ___flmul@bexp:
   915                           
   916                           ; 1 bytes @ 0x1B
   917  003B                     	ds	1
   918  003C                     ___flmul@prod:
   919                           
   920                           ; 4 bytes @ 0x1C
   921  003C                     	ds	4
   922  0040                     ___flmul@temp:
   923                           
   924                           ; 2 bytes @ 0x20
   925  0040                     	ds	2
   926  0042                     ?_fround:
   927  0042                     ?_scale:	
   928                           ; 4 bytes @ 0x22
   929                           
   930                           
   931                           ; 4 bytes @ 0x22
   932  0042                     	ds	4
   933  0046                     ??_fround:
   934  0046                     ??_scale:	
   935                           ; 1 bytes @ 0x26
   936                           
   937                           
   938                           ; 1 bytes @ 0x26
   939  0046                     	ds	7
   940  004D                     _fround$1075:
   941                           
   942                           ; 4 bytes @ 0x2D
   943  004D                     	ds	3
   944  0050                     _scale$1076:
   945                           
   946                           ; 4 bytes @ 0x30
   947  0050                     	ds	1
   948  0051                     _fround$1074:
   949                           
   950                           ; 4 bytes @ 0x31
   951  0051                     	ds	3
   952  0054                     scale@scl:
   953                           
   954                           ; 1 bytes @ 0x34
   955  0054                     	ds	1
   956  0055                     ?___fltol:
   957  0055                     fround@prec:	
   958                           ; 4 bytes @ 0x35
   959                           
   960  0055                     ___fltol@f1:	
   961                           ; 1 bytes @ 0x35
   962                           
   963                           
   964                           ; 4 bytes @ 0x35
   965  0055                     	ds	1
   966  0056                     ?___fladd:
   967  0056                     ___fladd@b:	
   968                           ; 4 bytes @ 0x36
   969                           
   970                           
   971                           ; 4 bytes @ 0x36
   972  0056                     	ds	3
   973  0059                     ??___fltol:
   974                           
   975                           ; 1 bytes @ 0x39
   976  0059                     	ds	1
   977  005A                     ___fladd@a:
   978                           
   979                           ; 4 bytes @ 0x3A
   980  005A                     	ds	4
   981  005E                     ??___fladd:
   982  005E                     ___fltol@sign1:	
   983                           ; 1 bytes @ 0x3E
   984                           
   985                           
   986                           ; 1 bytes @ 0x3E
   987  005E                     	ds	1
   988  005F                     ___fltol@exp1:
   989                           
   990                           ; 1 bytes @ 0x3F
   991  005F                     	ds	7
   992  0066                     ___fladd@signs:
   993                           
   994                           ; 1 bytes @ 0x46
   995  0066                     	ds	1
   996  0067                     ___fladd@aexp:
   997                           
   998                           ; 1 bytes @ 0x47
   999  0067                     	ds	1
  1000  0068                     ___fladd@bexp:
  1001                           
  1002                           ; 1 bytes @ 0x48
  1003  0068                     	ds	1
  1004  0069                     ___fladd@grs:
  1005                           
  1006                           ; 1 bytes @ 0x49
  1007  0069                     	ds	1
  1008  006A                     ?_sprintf:
  1009  006A                     sprintf@f:	
  1010                           ; 2 bytes @ 0x4A
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x4A
  1014  006A                     	ds	5
  1015                           
  1016                           	psect	maintext
  1017  0878                     __pmaintext:	
  1018 ;;
  1019 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1020 ;;
  1021 ;; *************** function _main *****************
  1022 ;; Defined at:
  1023 ;;		line 70 in file "mainp1.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : B00/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         0       0       0       0       0
  1039 ;;      Temps:          0       0       3       0       0
  1040 ;;      Totals:         0       0       3       0       0
  1041 ;;Total ram usage:        3 bytes
  1042 ;; Hardware stack levels required when called:    5
  1043 ;; This function calls:
  1044 ;;		___awdiv
  1045 ;;		_cfg_clk
  1046 ;;		_cfg_io
  1047 ;;		_cfg_usart
  1048 ;;		_conv
  1049 ;;		_send_crct
  1050 ;;		_sprintf
  1051 ;; This function is called by:
  1052 ;;		Startup code after reset
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _main
  1058  0878                     _main:
  1059  0878                     l3849:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1062                           
  1063                           
  1064                           ;mainp1.c: 71:     cfg_io();
  1065  0878  160A  158A  24BF  120A  158A  	fcall	_cfg_io
  1066  087D                     l3851:
  1067                           
  1068                           ;mainp1.c: 73:     cfg_usart();
  1069  087D  160A  118A  2000  120A  158A  	fcall	_cfg_usart
  1070  0882                     l3853:
  1071                           
  1072                           ;mainp1.c: 74:     cfg_clk();
  1073  0882  160A  158A  24A5  120A  158A  	fcall	_cfg_clk
  1074  0887                     l3855:
  1075                           
  1076                           ;mainp1.c: 79:         TMR1H = 0;
  1077  0887  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0888  1303               	bcf	3,6	;RP1=0, select bank0
  1079  0889  018F               	clrf	15	;volatile
  1080  088A                     l3857:
  1081                           
  1082                           ;mainp1.c: 80:         TMR1L = 0;
  1083  088A  018E               	clrf	14	;volatile
  1084  088B                     l3859:
  1085                           
  1086                           ;mainp1.c: 82:         PORTAbits.RA0 = 1;
  1087  088B  1405               	bsf	5,0	;volatile
  1088  088C                     l3861:
  1089                           
  1090                           ;mainp1.c: 83:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  1091  088C  3002               	movlw	2
  1092  088D  1683               	bsf	3,5	;RP0=1, select bank1
  1093  088E  1303               	bcf	3,6	;RP1=0, select bank1
  1094  088F  00C8               	movwf	??_main^(0+128)
  1095  0890                     u6467:
  1096  0890  0BC8               	decfsz	??_main^(0+128),f
  1097  0891  2890               	goto	u6467
  1098  0892  0000               	nop
  1099  0893                     l3863:
  1100                           
  1101                           ;mainp1.c: 84:         PORTAbits.RA0 = 0;
  1102  0893  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0894  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0895  1005               	bcf	5,0	;volatile
  1105  0896                     l85:	
  1106                           ;mainp1.c: 87:         while(!RA1);
  1107                           
  1108  0896  1C85               	btfss	5,1	;volatile
  1109  0897  2899               	goto	u6421
  1110  0898  289A               	goto	u6420
  1111  0899                     u6421:
  1112  0899  2896               	goto	l85
  1113  089A                     u6420:
  1114  089A                     l87:
  1115                           
  1116                           ;mainp1.c: 88:         TMR1ON = 1;
  1117  089A  1410               	bsf	16,0	;volatile
  1118  089B                     l88:	
  1119                           ;mainp1.c: 89:         while(RA1);
  1120                           
  1121  089B  1885               	btfsc	5,1	;volatile
  1122  089C  289E               	goto	u6431
  1123  089D  289F               	goto	u6430
  1124  089E                     u6431:
  1125  089E  289B               	goto	l88
  1126  089F                     u6430:
  1127  089F                     l90:
  1128                           
  1129                           ;mainp1.c: 90:         TMR1ON = 0;
  1130  089F  1010               	bcf	16,0	;volatile
  1131  08A0                     l3865:
  1132                           
  1133                           ;mainp1.c: 92:         V = (TMR1L | (TMR1H<<8));
  1134  08A0  080F               	movf	15,w	;volatile
  1135  08A1  1683               	bsf	3,5	;RP0=1, select bank1
  1136  08A2  1303               	bcf	3,6	;RP1=0, select bank1
  1137  08A3  00D2               	movwf	(_V+1)^(0+128)
  1138  08A4  1283               	bcf	3,5	;RP0=0, select bank0
  1139  08A5  1303               	bcf	3,6	;RP1=0, select bank0
  1140  08A6  080E               	movf	14,w	;volatile
  1141  08A7  1683               	bsf	3,5	;RP0=1, select bank1
  1142  08A8  1303               	bcf	3,6	;RP1=0, select bank1
  1143  08A9  00D1               	movwf	_V^(0+128)
  1144  08AA                     l3867:
  1145                           
  1146                           ;mainp1.c: 93:         D = V/58;
  1147  08AA  303A               	movlw	58
  1148  08AB  1283               	bcf	3,5	;RP0=0, select bank0
  1149  08AC  1303               	bcf	3,6	;RP1=0, select bank0
  1150  08AD  00A0               	movwf	___awdiv@divisor
  1151  08AE  3000               	movlw	0
  1152  08AF  00A1               	movwf	___awdiv@divisor+1
  1153  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  1154  08B1  1303               	bcf	3,6	;RP1=0, select bank1
  1155  08B2  0852               	movf	(_V+1)^(0+128),w
  1156  08B3  1283               	bcf	3,5	;RP0=0, select bank0
  1157  08B4  1303               	bcf	3,6	;RP1=0, select bank0
  1158  08B5  00A3               	movwf	___awdiv@dividend+1
  1159  08B6  1683               	bsf	3,5	;RP0=1, select bank1
  1160  08B7  1303               	bcf	3,6	;RP1=0, select bank1
  1161  08B8  0851               	movf	_V^(0+128),w
  1162  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  1163  08BA  1303               	bcf	3,6	;RP1=0, select bank0
  1164  08BB  00A2               	movwf	___awdiv@dividend
  1165  08BC  120A  158A  200F  120A  158A  	fcall	___awdiv
  1166  08C1  1283               	bcf	3,5	;RP0=0, select bank0
  1167  08C2  1303               	bcf	3,6	;RP1=0, select bank0
  1168  08C3  0821               	movf	?___awdiv+1,w
  1169  08C4  1683               	bsf	3,5	;RP0=1, select bank1
  1170  08C5  1303               	bcf	3,6	;RP1=0, select bank1
  1171  08C6  00D0               	movwf	(_D+1)^(0+128)
  1172  08C7  1283               	bcf	3,5	;RP0=0, select bank0
  1173  08C8  1303               	bcf	3,6	;RP1=0, select bank0
  1174  08C9  0820               	movf	?___awdiv,w
  1175  08CA  1683               	bsf	3,5	;RP0=1, select bank1
  1176  08CB  1303               	bcf	3,6	;RP1=0, select bank1
  1177  08CC  00CF               	movwf	_D^(0+128)
  1178  08CD                     l3869:
  1179                           
  1180                           ;mainp1.c: 94:         v = conv(D);
  1181  08CD  0850               	movf	(_D+1)^(0+128),w
  1182  08CE  1283               	bcf	3,5	;RP0=0, select bank0
  1183  08CF  1303               	bcf	3,6	;RP1=0, select bank0
  1184  08D0  00A7               	movwf	conv@aa+1
  1185  08D1  1683               	bsf	3,5	;RP0=1, select bank1
  1186  08D2  1303               	bcf	3,6	;RP1=0, select bank1
  1187  08D3  084F               	movf	_D^(0+128),w
  1188  08D4  1283               	bcf	3,5	;RP0=0, select bank0
  1189  08D5  1303               	bcf	3,6	;RP1=0, select bank0
  1190  08D6  00A6               	movwf	conv@aa
  1191  08D7  160A  158A  2504  120A  158A  	fcall	_conv
  1192  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  1193  08DD  1303               	bcf	3,6	;RP1=0, select bank0
  1194  08DE  0829               	movf	?_conv+3,w
  1195  08DF  1683               	bsf	3,5	;RP0=1, select bank1
  1196  08E0  1303               	bcf	3,6	;RP1=0, select bank1
  1197  08E1  00CE               	movwf	(_v+3)^(0+128)
  1198  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  1199  08E3  1303               	bcf	3,6	;RP1=0, select bank0
  1200  08E4  0828               	movf	?_conv+2,w
  1201  08E5  1683               	bsf	3,5	;RP0=1, select bank1
  1202  08E6  1303               	bcf	3,6	;RP1=0, select bank1
  1203  08E7  00CD               	movwf	(_v+2)^(0+128)
  1204  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  1205  08E9  1303               	bcf	3,6	;RP1=0, select bank0
  1206  08EA  0827               	movf	?_conv+1,w
  1207  08EB  1683               	bsf	3,5	;RP0=1, select bank1
  1208  08EC  1303               	bcf	3,6	;RP1=0, select bank1
  1209  08ED  00CC               	movwf	(_v+1)^(0+128)
  1210  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  1211  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  1212  08F0  0826               	movf	?_conv,w
  1213  08F1  1683               	bsf	3,5	;RP0=1, select bank1
  1214  08F2  1303               	bcf	3,6	;RP1=0, select bank1
  1215  08F3  00CB               	movwf	_v^(0+128)
  1216  08F4                     l3871:
  1217                           
  1218                           ;mainp1.c: 96:         sprintf(f1, "%0.0f cm\r", v);
  1219  08F4  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1220  08F5  00C8               	movwf	??_main^(0+128)
  1221  08F6  0848               	movf	??_main^(0+128),w
  1222  08F7  1283               	bcf	3,5	;RP0=0, select bank0
  1223  08F8  1303               	bcf	3,6	;RP1=0, select bank0
  1224  08F9  00EA               	movwf	sprintf@f
  1225  08FA  1683               	bsf	3,5	;RP0=1, select bank1
  1226  08FB  1303               	bcf	3,6	;RP1=0, select bank1
  1227  08FC  084E               	movf	(_v+3)^(0+128),w
  1228  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  1229  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  1230  08FF  00EE               	movwf	?_sprintf+4
  1231  0900  1683               	bsf	3,5	;RP0=1, select bank1
  1232  0901  1303               	bcf	3,6	;RP1=0, select bank1
  1233  0902  084D               	movf	(_v+2)^(0+128),w
  1234  0903  1283               	bcf	3,5	;RP0=0, select bank0
  1235  0904  1303               	bcf	3,6	;RP1=0, select bank0
  1236  0905  00ED               	movwf	?_sprintf+3
  1237  0906  1683               	bsf	3,5	;RP0=1, select bank1
  1238  0907  1303               	bcf	3,6	;RP1=0, select bank1
  1239  0908  084C               	movf	(_v+1)^(0+128),w
  1240  0909  1283               	bcf	3,5	;RP0=0, select bank0
  1241  090A  1303               	bcf	3,6	;RP1=0, select bank0
  1242  090B  00EC               	movwf	?_sprintf+2
  1243  090C  1683               	bsf	3,5	;RP0=1, select bank1
  1244  090D  1303               	bcf	3,6	;RP1=0, select bank1
  1245  090E  084B               	movf	_v^(0+128),w
  1246  090F  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0910  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0911  00EB               	movwf	?_sprintf+1
  1249  0912  30D3               	movlw	(low (_f1| 0))& (0+255)
  1250  0913  160A  118A  24FD  120A  158A  	fcall	_sprintf
  1251  0918                     l3873:
  1252                           
  1253                           ;mainp1.c: 97:         send_crct(f1);
  1254  0918  30D3               	movlw	(low (_f1| 0))& (0+255)
  1255  0919  160A  158A  24E3  120A  158A  	fcall	_send_crct
  1256  091E                     l3875:
  1257                           
  1258                           ;mainp1.c: 99:         if(PORTAbits.RA2 == 1){
  1259  091E  1283               	bcf	3,5	;RP0=0, select bank0
  1260  091F  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0920  1D05               	btfss	5,2	;volatile
  1262  0921  2923               	goto	u6441
  1263  0922  2924               	goto	u6440
  1264  0923                     u6441:
  1265  0923  2925               	goto	l91
  1266  0924                     u6440:
  1267  0924                     l3877:
  1268                           
  1269                           ;mainp1.c: 100:             PORTDbits.RD0 = 1;
  1270  0924  1408               	bsf	8,0	;volatile
  1271  0925                     l91:	
  1272                           ;mainp1.c: 101:         }
  1273                           
  1274                           
  1275                           ;mainp1.c: 102:         if(PORTAbits.RA2 == 0){
  1276  0925  1905               	btfsc	5,2	;volatile
  1277  0926  2928               	goto	u6451
  1278  0927  2929               	goto	u6450
  1279  0928                     u6451:
  1280  0928  292A               	goto	l3881
  1281  0929                     u6450:
  1282  0929                     l3879:
  1283                           
  1284                           ;mainp1.c: 103:             PORTDbits.RD0 = 0;
  1285  0929  1008               	bcf	8,0	;volatile
  1286  092A                     l3881:
  1287                           
  1288                           ;mainp1.c: 106:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1289  092A  3003               	movlw	3
  1290  092B  1683               	bsf	3,5	;RP0=1, select bank1
  1291  092C  1303               	bcf	3,6	;RP1=0, select bank1
  1292  092D  00CA               	movwf	(??_main^(0+128)+2)
  1293  092E  308A               	movlw	138
  1294  092F  00C9               	movwf	(??_main^(0+128)+1)
  1295  0930  3055               	movlw	85
  1296  0931  00C8               	movwf	??_main^(0+128)
  1297  0932                     u6477:
  1298  0932  0BC8               	decfsz	??_main^(0+128),f
  1299  0933  2932               	goto	u6477
  1300  0934  0BC9               	decfsz	(??_main^(0+128)+1),f
  1301  0935  2932               	goto	u6477
  1302  0936  0BCA               	decfsz	(??_main^(0+128)+2),f
  1303  0937  2932               	goto	u6477
  1304  0938  2887               	goto	l3855
  1305  0939  120A  118A  280C   	ljmp	start
  1306  093C                     __end_of_main:
  1307                           
  1308                           	psect	text1
  1309  14FD                     __ptext1:	
  1310 ;; *************** function _sprintf *****************
  1311 ;; Defined at:
  1312 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  sp              1    wreg     PTR unsigned char 
  1315 ;;		 -> f1(15), 
  1316 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1317 ;;		 -> STR_1(10), 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  sp              1   38[BANK1 ] PTR unsigned char 
  1320 ;;		 -> f1(15), 
  1321 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1322 ;;  tmpval          4   22[BANK1 ] struct .
  1323 ;;  val             4   18[BANK1 ] unsigned long 
  1324 ;;  prec            2   36[BANK1 ] int 
  1325 ;;  width           2   30[BANK1 ] int 
  1326 ;;  flag            2   28[BANK1 ] unsigned short 
  1327 ;;  eexp            2   26[BANK1 ] int 
  1328 ;;  cp              2    0        PTR const unsigned char 
  1329 ;;  len             2    0        unsigned int 
  1330 ;;  c               1   39[BANK1 ] unsigned char 
  1331 ;;  ap              1   17[BANK1 ] PTR void [1]
  1332 ;;		 -> ?_sprintf(2), 
  1333 ;;  d               1    0        unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  2   74[BANK0 ] int 
  1336 ;; Registers used:
  1337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         0       5       0       0       0
  1344 ;;      Locals:         0       0      27       0       0
  1345 ;;      Temps:          0       0       5       0       0
  1346 ;;      Totals:         0       5      32       0       0
  1347 ;;Total ram usage:       37 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    4
  1350 ;; This function calls:
  1351 ;;		___awdiv
  1352 ;;		___fladd
  1353 ;;		___fleq
  1354 ;;		___flge
  1355 ;;		___flmul
  1356 ;;		___flneg
  1357 ;;		___flsub
  1358 ;;		___fltol
  1359 ;;		___lldiv
  1360 ;;		___llmod
  1361 ;;		___wmul
  1362 ;;		___xxtofl
  1363 ;;		__div_to_l_
  1364 ;;		__tdiv_to_l_
  1365 ;;		_fround
  1366 ;;		_isdigit
  1367 ;;		_scale
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _sprintf
  1375  14FD                     _sprintf:
  1376                           
  1377                           ;incstack = 0
  1378                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1379                           ;sprintf@sp stored from wreg
  1380  14FD  1683               	bsf	3,5	;RP0=1, select bank1
  1381  14FE  1303               	bcf	3,6	;RP1=0, select bank1
  1382  14FF  00C6               	movwf	sprintf@sp^(0+128)
  1383  1500                     l3543:
  1384                           
  1385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1386  1500  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1387  1501  00A8               	movwf	??_sprintf^(0+128)
  1388  1502  0828               	movf	??_sprintf^(0+128),w
  1389  1503  00B1               	movwf	sprintf@ap^(0+128)
  1390  1504                     L1:
  1391                           
  1392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1393  1504  120A  118A  2D30   	goto	l3831
  1394  1507                     l3545:
  1395                           
  1396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1397  1507  3025               	movlw	37
  1398  1508  0647               	xorwf	sprintf@c^(0+128),w
  1399  1509  1903               	btfsc	3,2
  1400  150A  2D0C               	goto	u5881
  1401  150B  2D0D               	goto	u5880
  1402  150C                     u5881:
  1403  150C  2D19               	goto	l3551
  1404  150D                     u5880:
  1405  150D                     l3547:
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1408  150D  0847               	movf	sprintf@c^(0+128),w
  1409  150E  00A8               	movwf	??_sprintf^(0+128)
  1410  150F  0846               	movf	sprintf@sp^(0+128),w
  1411  1510  0084               	movwf	4
  1412  1511  0828               	movf	??_sprintf^(0+128),w
  1413  1512  1383               	bcf	3,7	;select IRP bank0
  1414  1513  0080               	movwf	0
  1415  1514                     l3549:
  1416  1514  3001               	movlw	1
  1417  1515  00A8               	movwf	??_sprintf^(0+128)
  1418  1516  0828               	movf	??_sprintf^(0+128),w
  1419  1517  07C6               	addwf	sprintf@sp^(0+128),f
  1420                           
  1421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1422  1518  2D04               	goto	L1
  1423  1519                     l3551:
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1426  1519  01BE               	clrf	sprintf@width^(0+128)
  1427  151A  01BF               	clrf	(sprintf@width+1)^(0+128)
  1428                           
  1429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1430  151B  01BC               	clrf	sprintf@flag^(0+128)
  1431  151C  01BD               	clrf	(sprintf@flag+1)^(0+128)
  1432  151D  2D25               	goto	l3557
  1433  151E                     l244:	
  1434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1435                           
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1438  151E  153C               	bsf	sprintf@flag^(0+128),2
  1439  151F                     l3553:
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  1442  151F  3001               	movlw	1
  1443  1520  00A8               	movwf	??_sprintf^(0+128)
  1444  1521  0828               	movf	??_sprintf^(0+128),w
  1445  1522  1283               	bcf	3,5	;RP0=0, select bank0
  1446  1523  1303               	bcf	3,6	;RP1=0, select bank0
  1447  1524  07EA               	addwf	sprintf@f,f
  1448  1525                     l3557:	
  1449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1450                           
  1451  1525  1283               	bcf	3,5	;RP0=0, select bank0
  1452  1526  086A               	movf	sprintf@f,w
  1453  1527  0084               	movwf	4
  1454  1528  160A  158A  2000  160A  118A  	fcall	stringdir
  1455  152D  1683               	bsf	3,5	;RP0=1, select bank1
  1456  152E  1303               	bcf	3,6	;RP1=0, select bank1
  1457  152F  00A8               	movwf	??_sprintf^(0+128)
  1458  1530  01A9               	clrf	(??_sprintf^(0+128)+1)
  1459                           
  1460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1461                           ; Switch size 1, requested type "simple"
  1462                           ; Number of cases is 1, Range of values is 0 to 0
  1463                           ; switch strategies available:
  1464                           ; Name         Instructions Cycles
  1465                           ; simple_byte            4     3 (average)
  1466                           ; direct_byte           11     8 (fixed)
  1467                           ; jumptable            260     6 (fixed)
  1468                           ;	Chosen strategy is simple_byte
  1469  1531  0829               	movf	(??_sprintf+1)^(0+128),w
  1470  1532  3A00               	xorlw	0	; case 0
  1471  1533  1903               	skipnz
  1472  1534  2D36               	goto	l3943
  1473  1535  2D3B               	goto	l3559
  1474  1536                     l3943:
  1475                           
  1476                           ; Switch size 1, requested type "simple"
  1477                           ; Number of cases is 1, Range of values is 48 to 48
  1478                           ; switch strategies available:
  1479                           ; Name         Instructions Cycles
  1480                           ; simple_byte            4     3 (average)
  1481                           ; direct_byte           14    11 (fixed)
  1482                           ; jumptable            263     9 (fixed)
  1483                           ;	Chosen strategy is simple_byte
  1484  1536  0828               	movf	??_sprintf^(0+128),w
  1485  1537  3A30               	xorlw	48	; case 48
  1486  1538  1903               	skipnz
  1487  1539  2D1E               	goto	l244
  1488  153A  2D3B               	goto	l3559
  1489  153B                     l3559:
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1492  153B  1283               	bcf	3,5	;RP0=0, select bank0
  1493  153C  1303               	bcf	3,6	;RP1=0, select bank0
  1494  153D  086A               	movf	sprintf@f,w
  1495  153E  0084               	movwf	4
  1496  153F  160A  158A  2000  160A  118A  	fcall	stringdir
  1497  1544  160A  158A  24D1  160A  118A  	fcall	_isdigit
  1498  1549  1C03               	btfss	3,0
  1499  154A  2D4C               	goto	u5891
  1500  154B  2D4D               	goto	u5890
  1501  154C                     u5891:
  1502  154C  2D93               	goto	l3571
  1503  154D                     u5890:
  1504  154D                     l3561:
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1507  154D  1683               	bsf	3,5	;RP0=1, select bank1
  1508  154E  1303               	bcf	3,6	;RP1=0, select bank1
  1509  154F  01BE               	clrf	sprintf@width^(0+128)
  1510  1550  01BF               	clrf	(sprintf@width+1)^(0+128)
  1511  1551                     l3563:
  1512                           
  1513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1514  1551  300A               	movlw	10
  1515  1552  00F2               	movwf	___wmul@multiplier
  1516  1553  3000               	movlw	0
  1517  1554  00F3               	movwf	___wmul@multiplier+1
  1518  1555  1683               	bsf	3,5	;RP0=1, select bank1
  1519  1556  1303               	bcf	3,6	;RP1=0, select bank1
  1520  1557  083F               	movf	(sprintf@width+1)^(0+128),w
  1521  1558  00F5               	movwf	___wmul@multiplicand+1
  1522  1559  083E               	movf	sprintf@width^(0+128),w
  1523  155A  00F4               	movwf	___wmul@multiplicand
  1524  155B  160A  158A  2528  160A  118A  	fcall	___wmul
  1525  1560  0873               	movf	?___wmul+1,w
  1526  1561  1683               	bsf	3,5	;RP0=1, select bank1
  1527  1562  1303               	bcf	3,6	;RP1=0, select bank1
  1528  1563  00BF               	movwf	(sprintf@width+1)^(0+128)
  1529  1564  0872               	movf	?___wmul,w
  1530  1565  00BE               	movwf	sprintf@width^(0+128)
  1531  1566                     l3565:
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1534  1566  1283               	bcf	3,5	;RP0=0, select bank0
  1535  1567  1303               	bcf	3,6	;RP1=0, select bank0
  1536  1568  086A               	movf	sprintf@f,w
  1537  1569  0084               	movwf	4
  1538  156A  160A  158A  2000  160A  118A  	fcall	stringdir
  1539  156F  3ED0               	addlw	208
  1540  1570  1683               	bsf	3,5	;RP0=1, select bank1
  1541  1571  1303               	bcf	3,6	;RP1=0, select bank1
  1542  1572  00A8               	movwf	??_sprintf^(0+128)
  1543  1573  30FF               	movlw	255
  1544  1574  1803               	skipnc
  1545  1575  3000               	movlw	0
  1546  1576  00A9               	movwf	(??_sprintf^(0+128)+1)
  1547  1577  0828               	movf	??_sprintf^(0+128),w
  1548  1578  07BE               	addwf	sprintf@width^(0+128),f
  1549  1579  1803               	skipnc
  1550  157A  0ABF               	incf	(sprintf@width+1)^(0+128),f
  1551  157B  0829               	movf	(??_sprintf+1)^(0+128),w
  1552  157C  07BF               	addwf	(sprintf@width+1)^(0+128),f
  1553  157D                     l3567:
  1554  157D  3001               	movlw	1
  1555  157E  00A8               	movwf	??_sprintf^(0+128)
  1556  157F  0828               	movf	??_sprintf^(0+128),w
  1557  1580  1283               	bcf	3,5	;RP0=0, select bank0
  1558  1581  1303               	bcf	3,6	;RP1=0, select bank0
  1559  1582  07EA               	addwf	sprintf@f,f
  1560  1583                     l3569:
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1563  1583  086A               	movf	sprintf@f,w
  1564  1584  0084               	movwf	4
  1565  1585  160A  158A  2000  160A  118A  	fcall	stringdir
  1566  158A  160A  158A  24D1  160A  118A  	fcall	_isdigit
  1567  158F  1803               	btfsc	3,0
  1568  1590  2D92               	goto	u5901
  1569  1591  2D93               	goto	u5900
  1570  1592                     u5901:
  1571  1592  2D51               	goto	l3563
  1572  1593                     u5900:
  1573  1593                     l3571:
  1574                           
  1575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1576  1593  1283               	bcf	3,5	;RP0=0, select bank0
  1577  1594  1303               	bcf	3,6	;RP1=0, select bank0
  1578  1595  086A               	movf	sprintf@f,w
  1579  1596  0084               	movwf	4
  1580  1597  160A  158A  2000  160A  118A  	fcall	stringdir
  1581  159C  3A2E               	xorlw	46
  1582  159D  1D03               	skipz
  1583  159E  2DA0               	goto	u5911
  1584  159F  2DA1               	goto	u5910
  1585  15A0                     u5911:
  1586  15A0  2DF3               	goto	l3587
  1587  15A1                     u5910:
  1588  15A1                     l3573:
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1591  15A1  1683               	bsf	3,5	;RP0=1, select bank1
  1592  15A2  1303               	bcf	3,6	;RP1=0, select bank1
  1593  15A3  173D               	bsf	(sprintf@flag^(0+128)+1),6
  1594  15A4                     l3575:
  1595                           
  1596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1597  15A4  3001               	movlw	1
  1598  15A5  00A8               	movwf	??_sprintf^(0+128)
  1599  15A6  0828               	movf	??_sprintf^(0+128),w
  1600  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  1601  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  1602  15A9  07EA               	addwf	sprintf@f,f
  1603  15AA                     l3577:
  1604                           
  1605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1606  15AA  1683               	bsf	3,5	;RP0=1, select bank1
  1607  15AB  1303               	bcf	3,6	;RP1=0, select bank1
  1608  15AC  01C4               	clrf	sprintf@prec^(0+128)
  1609  15AD  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1612  15AE  2DE1               	goto	l3585
  1613  15AF                     l3579:
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1616  15AF  300A               	movlw	10
  1617  15B0  00F2               	movwf	___wmul@multiplier
  1618  15B1  3000               	movlw	0
  1619  15B2  00F3               	movwf	___wmul@multiplier+1
  1620  15B3  1683               	bsf	3,5	;RP0=1, select bank1
  1621  15B4  1303               	bcf	3,6	;RP1=0, select bank1
  1622  15B5  0845               	movf	(sprintf@prec+1)^(0+128),w
  1623  15B6  00F5               	movwf	___wmul@multiplicand+1
  1624  15B7  0844               	movf	sprintf@prec^(0+128),w
  1625  15B8  00F4               	movwf	___wmul@multiplicand
  1626  15B9  160A  158A  2528  160A  118A  	fcall	___wmul
  1627  15BE  0873               	movf	?___wmul+1,w
  1628  15BF  1683               	bsf	3,5	;RP0=1, select bank1
  1629  15C0  1303               	bcf	3,6	;RP1=0, select bank1
  1630  15C1  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1631  15C2  0872               	movf	?___wmul,w
  1632  15C3  00C4               	movwf	sprintf@prec^(0+128)
  1633  15C4                     l3581:
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1636  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  1637  15C5  1303               	bcf	3,6	;RP1=0, select bank0
  1638  15C6  086A               	movf	sprintf@f,w
  1639  15C7  0084               	movwf	4
  1640  15C8  160A  158A  2000  160A  118A  	fcall	stringdir
  1641  15CD  3ED0               	addlw	208
  1642  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  1643  15CF  1303               	bcf	3,6	;RP1=0, select bank1
  1644  15D0  00A8               	movwf	??_sprintf^(0+128)
  1645  15D1  30FF               	movlw	255
  1646  15D2  1803               	skipnc
  1647  15D3  3000               	movlw	0
  1648  15D4  00A9               	movwf	(??_sprintf^(0+128)+1)
  1649  15D5  0828               	movf	??_sprintf^(0+128),w
  1650  15D6  07C4               	addwf	sprintf@prec^(0+128),f
  1651  15D7  1803               	skipnc
  1652  15D8  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1653  15D9  0829               	movf	(??_sprintf+1)^(0+128),w
  1654  15DA  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1655  15DB                     l3583:
  1656  15DB  3001               	movlw	1
  1657  15DC  00A8               	movwf	??_sprintf^(0+128)
  1658  15DD  0828               	movf	??_sprintf^(0+128),w
  1659  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  1660  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  1661  15E0  07EA               	addwf	sprintf@f,f
  1662  15E1                     l3585:
  1663                           
  1664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1665  15E1  1283               	bcf	3,5	;RP0=0, select bank0
  1666  15E2  086A               	movf	sprintf@f,w
  1667  15E3  0084               	movwf	4
  1668  15E4  160A  158A  2000  160A  118A  	fcall	stringdir
  1669  15E9  160A  158A  24D1  160A  118A  	fcall	_isdigit
  1670  15EE  1803               	btfsc	3,0
  1671  15EF  2DF1               	goto	u5921
  1672  15F0  2DF2               	goto	u5920
  1673  15F1                     u5921:
  1674  15F1  2DAF               	goto	l3579
  1675  15F2                     u5920:
  1676  15F2  2DFB               	goto	l3593
  1677  15F3                     l3587:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1680  15F3  1683               	bsf	3,5	;RP0=1, select bank1
  1681  15F4  1303               	bcf	3,6	;RP1=0, select bank1
  1682  15F5  01C4               	clrf	sprintf@prec^(0+128)
  1683  15F6  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1684  15F7                     l3589:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1687  15F7  163D               	bsf	(sprintf@flag^(0+128)+1),4
  1688  15F8  2DFB               	goto	l3593
  1689  15F9                     l259:	
  1690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1691                           
  1692                           
  1693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1694  15F9  153D               	bsf	(sprintf@flag^(0+128)+1),2
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1697  15FA  2E19               	goto	l3595
  1698  15FB                     l3593:
  1699  15FB  3001               	movlw	1
  1700  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  1701  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  1702  15FE  07EA               	addwf	sprintf@f,f
  1703  15FF  30FF               	movlw	-1
  1704  1600  076A               	addwf	sprintf@f,w
  1705  1601  0084               	movwf	4
  1706  1602  160A  158A  2000  160A  118A  	fcall	stringdir
  1707  1607  1683               	bsf	3,5	;RP0=1, select bank1
  1708  1608  1303               	bcf	3,6	;RP1=0, select bank1
  1709  1609  00C7               	movwf	sprintf@c^(0+128)
  1710  160A  00A8               	movwf	??_sprintf^(0+128)
  1711  160B  01A9               	clrf	(??_sprintf^(0+128)+1)
  1712                           
  1713                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1714                           ; Switch size 1, requested type "simple"
  1715                           ; Number of cases is 1, Range of values is 0 to 0
  1716                           ; switch strategies available:
  1717                           ; Name         Instructions Cycles
  1718                           ; simple_byte            4     3 (average)
  1719                           ; direct_byte           11     8 (fixed)
  1720                           ; jumptable            260     6 (fixed)
  1721                           ;	Chosen strategy is simple_byte
  1722  160C  0829               	movf	(??_sprintf+1)^(0+128),w
  1723  160D  3A00               	xorlw	0	; case 0
  1724  160E  1903               	skipnz
  1725  160F  2E11               	goto	l3945
  1726  1610  2D04               	goto	L1
  1727  1611                     l3945:
  1728                           
  1729                           ; Switch size 1, requested type "simple"
  1730                           ; Number of cases is 2, Range of values is 0 to 102
  1731                           ; switch strategies available:
  1732                           ; Name         Instructions Cycles
  1733                           ; simple_byte            7     4 (average)
  1734                           ; jumptable            260     6 (fixed)
  1735                           ;	Chosen strategy is simple_byte
  1736  1611  0828               	movf	??_sprintf^(0+128),w
  1737  1612  3A00               	xorlw	0	; case 0
  1738  1613  1903               	skipnz
  1739  1614  2FFD               	goto	L3
  1740  1615  3A66               	xorlw	102	; case 102
  1741  1616  1903               	skipnz
  1742  1617  2DF9               	goto	l259
  1743  1618  2D04               	goto	L1
  1744  1619                     l3595:
  1745                           
  1746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1747  1619  3000               	movlw	0
  1748  161A  053C               	andwf	sprintf@flag^(0+128),w
  1749  161B  00A8               	movwf	??_sprintf^(0+128)
  1750  161C  3007               	movlw	7
  1751  161D  053D               	andwf	(sprintf@flag+1)^(0+128),w
  1752  161E  00A9               	movwf	(??_sprintf+1)^(0+128)
  1753  161F  0828               	movf	??_sprintf^(0+128),w
  1754  1620  0429               	iorwf	(??_sprintf^(0+128)+1),w
  1755  1621  1903               	btfsc	3,2
  1756  1622  2E24               	goto	u5931
  1757  1623  2E27               	goto	u5930
  1758  1624                     u5931:
  1759  1624  120A  118A  2C32   	goto	l3769
  1760  1627                     u5930:
  1761  1627                     l3597:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1764  1627  1E3D               	btfss	(sprintf@flag+1)^(0+128),4
  1765  1628  2E2A               	goto	u5941
  1766  1629  2E2B               	goto	u5940
  1767  162A                     u5941:
  1768  162A  2E2F               	goto	l3601
  1769  162B                     u5940:
  1770  162B                     l3599:
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1773  162B  3006               	movlw	6
  1774  162C  00C4               	movwf	sprintf@prec^(0+128)
  1775  162D  3000               	movlw	0
  1776  162E  00C5               	movwf	(sprintf@prec^(0+128)+1)
  1777  162F                     l3601:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1780  162F  0831               	movf	sprintf@ap^(0+128),w
  1781  1630  0084               	movwf	4
  1782  1631  1383               	bcf	3,7	;select IRP bank0
  1783  1632  0800               	movf	0,w
  1784  1633  00C0               	movwf	sprintf@fval^(0+128)
  1785  1634  0A84               	incf	4,f
  1786  1635  0800               	movf	0,w
  1787  1636  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1788  1637  0A84               	incf	4,f
  1789  1638  0800               	movf	0,w
  1790  1639  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1791  163A  0A84               	incf	4,f
  1792  163B  0800               	movf	0,w
  1793  163C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1794  163D                     l3603:
  1795  163D  3004               	movlw	4
  1796  163E  00A8               	movwf	??_sprintf^(0+128)
  1797  163F  0828               	movf	??_sprintf^(0+128),w
  1798  1640  07B1               	addwf	sprintf@ap^(0+128),f
  1799  1641                     l3605:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1802  1641  0843               	movf	(sprintf@fval+3)^(0+128),w
  1803  1642  00F5               	movwf	___flge@ff1+3
  1804  1643  0842               	movf	(sprintf@fval+2)^(0+128),w
  1805  1644  00F4               	movwf	___flge@ff1+2
  1806  1645  0841               	movf	(sprintf@fval+1)^(0+128),w
  1807  1646  00F3               	movwf	___flge@ff1+1
  1808  1647  0840               	movf	sprintf@fval^(0+128),w
  1809  1648  00F2               	movwf	___flge@ff1
  1810  1649  3000               	movlw	0
  1811  164A  00F9               	movwf	___flge@ff2+3
  1812  164B  3000               	movlw	0
  1813  164C  00F8               	movwf	___flge@ff2+2
  1814  164D  3000               	movlw	0
  1815  164E  00F7               	movwf	___flge@ff2+1
  1816  164F  3000               	movlw	0
  1817  1650  00F6               	movwf	___flge@ff2
  1818  1651  160A  118A  2015  160A  118A  	fcall	___flge
  1819  1656  1803               	btfsc	3,0
  1820  1657  2E59               	goto	u5951
  1821  1658  2E5A               	goto	u5950
  1822  1659                     u5951:
  1823  1659  2E77               	goto	l3611
  1824  165A                     u5950:
  1825  165A                     l3607:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1828  165A  1683               	bsf	3,5	;RP0=1, select bank1
  1829  165B  1303               	bcf	3,6	;RP1=0, select bank1
  1830  165C  0843               	movf	(sprintf@fval+3)^(0+128),w
  1831  165D  00F5               	movwf	___flneg@f1+3
  1832  165E  0842               	movf	(sprintf@fval+2)^(0+128),w
  1833  165F  00F4               	movwf	___flneg@f1+2
  1834  1660  0841               	movf	(sprintf@fval+1)^(0+128),w
  1835  1661  00F3               	movwf	___flneg@f1+1
  1836  1662  0840               	movf	sprintf@fval^(0+128),w
  1837  1663  00F2               	movwf	___flneg@f1
  1838  1664  120A  158A  2004  160A  118A  	fcall	___flneg
  1839  1669  0875               	movf	?___flneg+3,w
  1840  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1841  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1842  166C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1843  166D  0874               	movf	?___flneg+2,w
  1844  166E  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1845  166F  0873               	movf	?___flneg+1,w
  1846  1670  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1847  1671  0872               	movf	?___flneg,w
  1848  1672  00C0               	movwf	sprintf@fval^(0+128)
  1849  1673                     l3609:
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1852  1673  3003               	movlw	3
  1853  1674  04BC               	iorwf	sprintf@flag^(0+128),f
  1854  1675  3000               	movlw	0
  1855  1676  04BD               	iorwf	(sprintf@flag+1)^(0+128),f
  1856  1677                     l3611:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1859  1677  1683               	bsf	3,5	;RP0=1, select bank1
  1860  1678  1303               	bcf	3,6	;RP1=0, select bank1
  1861  1679  01BA               	clrf	sprintf@eexp^(0+128)
  1862  167A  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  1863  167B                     l3613:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1866  167B  0843               	movf	(sprintf@fval+3)^(0+128),w
  1867  167C  00F5               	movwf	___fleq@ff1+3
  1868  167D  0842               	movf	(sprintf@fval+2)^(0+128),w
  1869  167E  00F4               	movwf	___fleq@ff1+2
  1870  167F  0841               	movf	(sprintf@fval+1)^(0+128),w
  1871  1680  00F3               	movwf	___fleq@ff1+1
  1872  1681  0840               	movf	sprintf@fval^(0+128),w
  1873  1682  00F2               	movwf	___fleq@ff1
  1874  1683  3000               	movlw	0
  1875  1684  00F9               	movwf	___fleq@ff2+3
  1876  1685  3000               	movlw	0
  1877  1686  00F8               	movwf	___fleq@ff2+2
  1878  1687  3000               	movlw	0
  1879  1688  00F7               	movwf	___fleq@ff2+1
  1880  1689  3000               	movlw	0
  1881  168A  00F6               	movwf	___fleq@ff2
  1882  168B  160A  158A  25CD  160A  118A  	fcall	___fleq
  1883  1690  1803               	btfsc	3,0
  1884  1691  2E93               	goto	u5961
  1885  1692  2E94               	goto	u5960
  1886  1693                     u5961:
  1887  1693  2F94               	goto	l3639
  1888  1694                     u5960:
  1889  1694                     l3615:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1892  1694  1003               	clrc
  1893  1695  1683               	bsf	3,5	;RP0=1, select bank1
  1894  1696  1303               	bcf	3,6	;RP1=0, select bank1
  1895  1697  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  1896  1698  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  1897  1699  3E82               	addlw	130
  1898  169A  00BA               	movwf	sprintf@eexp^(0+128)
  1899  169B  30FF               	movlw	255
  1900  169C  1803               	skipnc
  1901  169D  3000               	movlw	0
  1902  169E  00BB               	movwf	(sprintf@eexp^(0+128)+1)
  1903  169F                     l3617:
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1906  169F  30FF               	movlw	255
  1907  16A0  07BA               	addwf	sprintf@eexp^(0+128),f
  1908  16A1  1803               	skipnc
  1909  16A2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  1910  16A3  30FF               	movlw	255
  1911  16A4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  1912  16A5                     l3619:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1915  16A5  3003               	movlw	3
  1916  16A6  00F2               	movwf	___wmul@multiplier
  1917  16A7  3000               	movlw	0
  1918  16A8  00F3               	movwf	___wmul@multiplier+1
  1919  16A9  083B               	movf	(sprintf@eexp+1)^(0+128),w
  1920  16AA  00F5               	movwf	___wmul@multiplicand+1
  1921  16AB  083A               	movf	sprintf@eexp^(0+128),w
  1922  16AC  00F4               	movwf	___wmul@multiplicand
  1923  16AD  160A  158A  2528  160A  118A  	fcall	___wmul
  1924  16B2  0873               	movf	?___wmul+1,w
  1925  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  1926  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  1927  16B5  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  1928  16B6  0872               	movf	?___wmul,w
  1929  16B7  00BA               	movwf	sprintf@eexp^(0+128)
  1930  16B8                     l3621:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1933  16B8  300A               	movlw	10
  1934  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  1935  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  1936  16BB  00A0               	movwf	___awdiv@divisor
  1937  16BC  3000               	movlw	0
  1938  16BD  00A1               	movwf	___awdiv@divisor+1
  1939  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  1940  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  1941  16C0  083B               	movf	(sprintf@eexp+1)^(0+128),w
  1942  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  1943  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  1944  16C3  00A3               	movwf	___awdiv@dividend+1
  1945  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  1946  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  1947  16C6  083A               	movf	sprintf@eexp^(0+128),w
  1948  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  1949  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  1950  16C9  00A2               	movwf	___awdiv@dividend
  1951  16CA  120A  158A  200F  160A  118A  	fcall	___awdiv
  1952  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  1953  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  1954  16D1  0821               	movf	?___awdiv+1,w
  1955  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  1956  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  1957  16D4  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  1958  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  1959  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  1960  16D7  0820               	movf	?___awdiv,w
  1961  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  1962  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  1963  16DA  00BA               	movwf	sprintf@eexp^(0+128)
  1964  16DB                     l3623:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1967  16DB  1FBB               	btfss	(sprintf@eexp+1)^(0+128),7
  1968  16DC  2EDE               	goto	u5971
  1969  16DD  2EDF               	goto	u5970
  1970  16DE                     u5971:
  1971  16DE  2EE5               	goto	l3627
  1972  16DF                     u5970:
  1973  16DF                     l3625:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1976  16DF  30FF               	movlw	255
  1977  16E0  07BA               	addwf	sprintf@eexp^(0+128),f
  1978  16E1  1803               	skipnc
  1979  16E2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  1980  16E3  30FF               	movlw	255
  1981  16E4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  1982  16E5                     l3627:
  1983                           
  1984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1985  16E5  033A               	decf	sprintf@eexp^(0+128),w
  1986  16E6  3AFF               	xorlw	255
  1987  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  1988  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  1989  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  1990  16EE  0845               	movf	?_scale+3,w
  1991  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  1992  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  1993  16F1  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  1994  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  1995  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  1996  16F4  0844               	movf	?_scale+2,w
  1997  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  1998  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  1999  16F7  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2000  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2001  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2002  16FA  0843               	movf	?_scale+1,w
  2003  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2004  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2005  16FD  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2006  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2007  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2008  1700  0842               	movf	?_scale,w
  2009  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2010  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2011  1703  00B6               	movwf	sprintf@tmpval^(0+128)
  2012  1704                     l3629:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2015  1704  0843               	movf	(sprintf@fval+3)^(0+128),w
  2016  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2017  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2018  1707  00AB               	movwf	___flmul@b+3
  2019  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2020  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2021  170A  0842               	movf	(sprintf@fval+2)^(0+128),w
  2022  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2023  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2024  170D  00AA               	movwf	___flmul@b+2
  2025  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2026  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2027  1710  0841               	movf	(sprintf@fval+1)^(0+128),w
  2028  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2029  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2030  1713  00A9               	movwf	___flmul@b+1
  2031  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2032  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2033  1716  0840               	movf	sprintf@fval^(0+128),w
  2034  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2035  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2036  1719  00A8               	movwf	___flmul@b
  2037  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2038  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2039  171C  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2040  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2041  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2042  171F  00AF               	movwf	___flmul@a+3
  2043  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2044  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2045  1722  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2046  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2047  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2048  1725  00AE               	movwf	___flmul@a+2
  2049  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2050  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2051  1728  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2052  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2053  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2054  172B  00AD               	movwf	___flmul@a+1
  2055  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2056  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2057  172E  0836               	movf	sprintf@tmpval^(0+128),w
  2058  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2059  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2060  1731  00AC               	movwf	___flmul@a
  2061  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2062  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2063  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2064  1739  082B               	movf	?___flmul+3,w
  2065  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2066  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2067  173C  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2068  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2069  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2070  173F  082A               	movf	?___flmul+2,w
  2071  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2072  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2073  1742  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2074  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2075  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2076  1745  0829               	movf	?___flmul+1,w
  2077  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2078  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2079  1748  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2080  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2081  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2082  174B  0828               	movf	?___flmul,w
  2083  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2084  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2085  174E  00B6               	movwf	sprintf@tmpval^(0+128)
  2086  174F                     l3631:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2089  174F  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2090  1750  00F5               	movwf	___flge@ff1+3
  2091  1751  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2092  1752  00F4               	movwf	___flge@ff1+2
  2093  1753  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2094  1754  00F3               	movwf	___flge@ff1+1
  2095  1755  0836               	movf	sprintf@tmpval^(0+128),w
  2096  1756  00F2               	movwf	___flge@ff1
  2097  1757  303F               	movlw	63
  2098  1758  00F9               	movwf	___flge@ff2+3
  2099  1759  3080               	movlw	128
  2100  175A  00F8               	movwf	___flge@ff2+2
  2101  175B  3000               	movlw	0
  2102  175C  00F7               	movwf	___flge@ff2+1
  2103  175D  3000               	movlw	0
  2104  175E  00F6               	movwf	___flge@ff2
  2105  175F  160A  118A  2015  160A  118A  	fcall	___flge
  2106  1764  1803               	btfsc	3,0
  2107  1765  2F67               	goto	u5981
  2108  1766  2F68               	goto	u5980
  2109  1767                     u5981:
  2110  1767  2F71               	goto	l3635
  2111  1768                     u5980:
  2112  1768                     l3633:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2115  1768  30FF               	movlw	255
  2116  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2117  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2118  176B  07BA               	addwf	sprintf@eexp^(0+128),f
  2119  176C  1803               	skipnc
  2120  176D  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2121  176E  30FF               	movlw	255
  2122  176F  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2123  1770  2F94               	goto	l3639
  2124  1771                     l3635:
  2125  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2126  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2127  1773  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2128  1774  00F5               	movwf	___flge@ff1+3
  2129  1775  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2130  1776  00F4               	movwf	___flge@ff1+2
  2131  1777  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2132  1778  00F3               	movwf	___flge@ff1+1
  2133  1779  0836               	movf	sprintf@tmpval^(0+128),w
  2134  177A  00F2               	movwf	___flge@ff1
  2135  177B  3041               	movlw	65
  2136  177C  00F9               	movwf	___flge@ff2+3
  2137  177D  3020               	movlw	32
  2138  177E  00F8               	movwf	___flge@ff2+2
  2139  177F  3000               	movlw	0
  2140  1780  00F7               	movwf	___flge@ff2+1
  2141  1781  3000               	movlw	0
  2142  1782  00F6               	movwf	___flge@ff2
  2143  1783  160A  118A  2015  160A  118A  	fcall	___flge
  2144  1788  1C03               	btfss	3,0
  2145  1789  2F8B               	goto	u5991
  2146  178A  2F8C               	goto	u5990
  2147  178B                     u5991:
  2148  178B  2F94               	goto	l3639
  2149  178C                     u5990:
  2150  178C                     l3637:
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2153  178C  3001               	movlw	1
  2154  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2155  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2156  178F  07BA               	addwf	sprintf@eexp^(0+128),f
  2157  1790  1803               	skipnc
  2158  1791  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2159  1792  3000               	movlw	0
  2160  1793  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2161  1794                     l3639:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2164  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2165  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2166  1796  0845               	movf	(sprintf@prec+1)^(0+128),w
  2167  1797  3A80               	xorlw	128
  2168  1798  00FF               	movwf	btemp+1
  2169  1799  3080               	movlw	128
  2170  179A  027F               	subwf	btemp+1,w
  2171  179B  1D03               	skipz
  2172  179C  2F9F               	goto	u6005
  2173  179D  300D               	movlw	13
  2174  179E  0244               	subwf	sprintf@prec^(0+128),w
  2175  179F                     u6005:
  2176  179F  1803               	skipnc
  2177  17A0  2FA2               	goto	u6001
  2178  17A1  2FA3               	goto	u6000
  2179  17A2                     u6001:
  2180  17A2  2FEA               	goto	l3643
  2181  17A3                     u6000:
  2182  17A3                     l3641:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2185  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2186  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2187  17A5  0844               	movf	sprintf@prec^(0+128),w
  2188  17A6  160A  118A  22F0  160A  118A  	fcall	_fround
  2189  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2190  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2191  17AD  0845               	movf	?_fround+3,w
  2192  17AE  00D9               	movwf	___fladd@b+3
  2193  17AF  0844               	movf	?_fround+2,w
  2194  17B0  00D8               	movwf	___fladd@b+2
  2195  17B1  0843               	movf	?_fround+1,w
  2196  17B2  00D7               	movwf	___fladd@b+1
  2197  17B3  0842               	movf	?_fround,w
  2198  17B4  00D6               	movwf	___fladd@b
  2199  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2200  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2201  17B7  0843               	movf	(sprintf@fval+3)^(0+128),w
  2202  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2203  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2204  17BA  00DD               	movwf	___fladd@a+3
  2205  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2206  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2207  17BD  0842               	movf	(sprintf@fval+2)^(0+128),w
  2208  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2209  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2210  17C0  00DC               	movwf	___fladd@a+2
  2211  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2212  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2213  17C3  0841               	movf	(sprintf@fval+1)^(0+128),w
  2214  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2215  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2216  17C6  00DB               	movwf	___fladd@a+1
  2217  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2218  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2219  17C9  0840               	movf	sprintf@fval^(0+128),w
  2220  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2221  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2222  17CC  00DA               	movwf	___fladd@a
  2223  17CD  120A  118A  254D  160A  118A  	fcall	___fladd
  2224  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2225  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2226  17D4  0859               	movf	?___fladd+3,w
  2227  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2228  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2229  17D7  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2230  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2231  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2232  17DA  0858               	movf	?___fladd+2,w
  2233  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2234  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2235  17DD  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2236  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2237  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2238  17E0  0857               	movf	?___fladd+1,w
  2239  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2240  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2241  17E3  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2242  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2243  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2244  17E6  0856               	movf	?___fladd,w
  2245  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2246  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2247  17E9  00C0               	movwf	sprintf@fval^(0+128)
  2248  17EA                     l3643:
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2251  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2252  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2253  17EC  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2254  17ED  3A80               	xorlw	128
  2255  17EE  00FF               	movwf	btemp+1
  2256  17EF  3080               	movlw	128
  2257  17F0  027F               	subwf	btemp+1,w
  2258  17F1  1D03               	skipz
  2259  17F2  2FF5               	goto	u6015
  2260  17F3  300A               	movlw	10
  2261  17F4  023A               	subwf	sprintf@eexp^(0+128),w
  2262  17F5                     u6015:
  2263  17F5  1803               	skipnc
  2264  17F6  2FFA               	goto	u6011
  2265  17F7  120A  118A  281D   	goto	u6010
  2266  17FA                     u6011:
  2267  17FA  120A  118A  286E   	goto	l3651
  2268  17FD                     L3:
  2269  17FD                     L2:
  2270  17FD  120A  118A  2D48   	ljmp	l3833
  2271                           
  2272                           	psect	text2
  2273  0C9D                     __ptext2:	
  2274 ;; *************** function _scale *****************
  2275 ;; Defined at:
  2276 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  scl             1    wreg     char 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  scl             1   52[BANK0 ] char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  4   34[BANK0 ] char 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2290 ;;      Params:         0       4       0       0       0
  2291 ;;      Locals:         0       5       0       0       0
  2292 ;;      Temps:          0      10       0       0       0
  2293 ;;      Totals:         0      19       0       0       0
  2294 ;;Total ram usage:       19 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    3
  2297 ;; This function calls:
  2298 ;;		___awdiv
  2299 ;;		___awmod
  2300 ;;		___flmul
  2301 ;; This function is called by:
  2302 ;;		_sprintf
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           
  2307                           ;psect for function _scale
  2308  0C9D                     _scale:
  2309                           
  2310                           ;incstack = 0
  2311                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2312                           ;scale@scl stored from wreg
  2313  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0C9F  00D4               	movwf	scale@scl
  2316  0CA0                     l2699:
  2317                           
  2318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2319  0CA0  1FD4               	btfss	scale@scl,7
  2320  0CA1  2CA3               	goto	u4111
  2321  0CA2  2CA4               	goto	u4110
  2322  0CA3                     u4111:
  2323  0CA3  2E53               	goto	l2721
  2324  0CA4                     u4110:
  2325  0CA4                     l2701:
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2328  0CA4  09D4               	comf	scale@scl,f
  2329  0CA5  0AD4               	incf	scale@scl,f
  2330  0CA6                     l2703:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2333  0CA6  0854               	movf	scale@scl,w
  2334  0CA7  3A80               	xorlw	128
  2335  0CA8  3E12               	addlw	-238
  2336  0CA9  1C03               	skipc
  2337  0CAA  2CAC               	goto	u4121
  2338  0CAB  2CAD               	goto	u4120
  2339  0CAC                     u4121:
  2340  0CAC  2D97               	goto	l2711
  2341  0CAD                     u4120:
  2342  0CAD                     l2705:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2345  0CAD  300A               	movlw	10
  2346  0CAE  00A0               	movwf	___awdiv@divisor
  2347  0CAF  3000               	movlw	0
  2348  0CB0  00A1               	movwf	___awdiv@divisor+1
  2349  0CB1  0854               	movf	scale@scl,w
  2350  0CB2  00F4               	movwf	___awmod@dividend
  2351  0CB3  01F5               	clrf	___awmod@dividend+1
  2352  0CB4  1BF4               	btfsc	___awmod@dividend,7
  2353  0CB5  03F5               	decf	___awmod@dividend+1,f
  2354  0CB6  3064               	movlw	100
  2355  0CB7  00F2               	movwf	___awmod@divisor
  2356  0CB8  3000               	movlw	0
  2357  0CB9  00F3               	movwf	___awmod@divisor+1
  2358  0CBA  160A  158A  26C3  120A  158A  	fcall	___awmod
  2359  0CBF  0873               	movf	?___awmod+1,w
  2360  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2361  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2362  0CC2  00A3               	movwf	___awdiv@dividend+1
  2363  0CC3  0872               	movf	?___awmod,w
  2364  0CC4  00A2               	movwf	___awdiv@dividend
  2365  0CC5  120A  158A  200F  120A  158A  	fcall	___awdiv
  2366  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0CCC  0820               	movf	?___awdiv,w
  2369  0CCD  00C6               	movwf	??_scale
  2370  0CCE  3001               	movlw	1
  2371  0CCF                     u4135:
  2372  0CCF  1003               	clrc
  2373  0CD0  0DC6               	rlf	??_scale,f
  2374  0CD1  3EFF               	addlw	-1
  2375  0CD2  1D03               	skipz
  2376  0CD3  2CCF               	goto	u4135
  2377  0CD4  1003               	clrc
  2378  0CD5  0D46               	rlf	??_scale,w
  2379  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2380  0CD7  0084               	movwf	4
  2381  0CD8  160A  158A  2000  120A  158A  	fcall	stringdir
  2382  0CDD  00C7               	movwf	??_scale+1
  2383  0CDE  160A  158A  2000  120A  158A  	fcall	stringdir
  2384  0CE3  00C8               	movwf	??_scale+2
  2385  0CE4  160A  158A  2000  120A  158A  	fcall	stringdir
  2386  0CE9  00C9               	movwf	??_scale+3
  2387  0CEA  160A  158A  2000  120A  158A  	fcall	stringdir
  2388  0CEF  00CA               	movwf	??_scale+4
  2389  0CF0  084A               	movf	??_scale+4,w
  2390  0CF1  00AB               	movwf	___flmul@b+3
  2391  0CF2  0849               	movf	??_scale+3,w
  2392  0CF3  00AA               	movwf	___flmul@b+2
  2393  0CF4  0848               	movf	??_scale+2,w
  2394  0CF5  00A9               	movwf	___flmul@b+1
  2395  0CF6  0847               	movf	??_scale+1,w
  2396  0CF7  00A8               	movwf	___flmul@b
  2397  0CF8  3064               	movlw	100
  2398  0CF9  00A0               	movwf	___awdiv@divisor
  2399  0CFA  3000               	movlw	0
  2400  0CFB  00A1               	movwf	___awdiv@divisor+1
  2401  0CFC  0854               	movf	scale@scl,w
  2402  0CFD  00A2               	movwf	___awdiv@dividend
  2403  0CFE  01A3               	clrf	___awdiv@dividend+1
  2404  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2405  0D00  03A3               	decf	___awdiv@dividend+1,f
  2406  0D01  120A  158A  200F  120A  158A  	fcall	___awdiv
  2407  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2409  0D08  0820               	movf	?___awdiv,w
  2410  0D09  00CB               	movwf	??_scale+5
  2411  0D0A  3001               	movlw	1
  2412  0D0B                     u4145:
  2413  0D0B  1003               	clrc
  2414  0D0C  0DCB               	rlf	??_scale+5,f
  2415  0D0D  3EFF               	addlw	-1
  2416  0D0E  1D03               	skipz
  2417  0D0F  2D0B               	goto	u4145
  2418  0D10  1003               	clrc
  2419  0D11  0D4B               	rlf	??_scale+5,w
  2420  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2421  0D13  0084               	movwf	4
  2422  0D14  160A  158A  2000  120A  158A  	fcall	stringdir
  2423  0D19  00CC               	movwf	??_scale+6
  2424  0D1A  160A  158A  2000  120A  158A  	fcall	stringdir
  2425  0D1F  00CD               	movwf	??_scale+7
  2426  0D20  160A  158A  2000  120A  158A  	fcall	stringdir
  2427  0D25  00CE               	movwf	??_scale+8
  2428  0D26  160A  158A  2000  120A  158A  	fcall	stringdir
  2429  0D2B  00CF               	movwf	??_scale+9
  2430  0D2C  084F               	movf	??_scale+9,w
  2431  0D2D  00AF               	movwf	___flmul@a+3
  2432  0D2E  084E               	movf	??_scale+8,w
  2433  0D2F  00AE               	movwf	___flmul@a+2
  2434  0D30  084D               	movf	??_scale+7,w
  2435  0D31  00AD               	movwf	___flmul@a+1
  2436  0D32  084C               	movf	??_scale+6,w
  2437  0D33  00AC               	movwf	___flmul@a
  2438  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2439  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2440  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2441  0D3B  082B               	movf	?___flmul+3,w
  2442  0D3C  00D3               	movwf	_scale$1076+3
  2443  0D3D  082A               	movf	?___flmul+2,w
  2444  0D3E  00D2               	movwf	_scale$1076+2
  2445  0D3F  0829               	movf	?___flmul+1,w
  2446  0D40  00D1               	movwf	_scale$1076+1
  2447  0D41  0828               	movf	?___flmul,w
  2448  0D42  00D0               	movwf	_scale$1076
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2451  0D43  300A               	movlw	10
  2452  0D44  00F2               	movwf	___awmod@divisor
  2453  0D45  3000               	movlw	0
  2454  0D46  00F3               	movwf	___awmod@divisor+1
  2455  0D47  0854               	movf	scale@scl,w
  2456  0D48  00F4               	movwf	___awmod@dividend
  2457  0D49  01F5               	clrf	___awmod@dividend+1
  2458  0D4A  1BF4               	btfsc	___awmod@dividend,7
  2459  0D4B  03F5               	decf	___awmod@dividend+1,f
  2460  0D4C  160A  158A  26C3  120A  158A  	fcall	___awmod
  2461  0D51  0872               	movf	?___awmod,w
  2462  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2463  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0D54  00C6               	movwf	??_scale
  2465  0D55  3001               	movlw	1
  2466  0D56                     u4155:
  2467  0D56  1003               	clrc
  2468  0D57  0DC6               	rlf	??_scale,f
  2469  0D58  3EFF               	addlw	-1
  2470  0D59  1D03               	skipz
  2471  0D5A  2D56               	goto	u4155
  2472  0D5B  1003               	clrc
  2473  0D5C  0D46               	rlf	??_scale,w
  2474  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2475  0D5E  0084               	movwf	4
  2476  0D5F  160A  158A  2000  120A  158A  	fcall	stringdir
  2477  0D64  00C7               	movwf	??_scale+1
  2478  0D65  160A  158A  2000  120A  158A  	fcall	stringdir
  2479  0D6A  00C8               	movwf	??_scale+2
  2480  0D6B  160A  158A  2000  120A  158A  	fcall	stringdir
  2481  0D70  00C9               	movwf	??_scale+3
  2482  0D71  160A  158A  2000  120A  158A  	fcall	stringdir
  2483  0D76  00CA               	movwf	??_scale+4
  2484  0D77  084A               	movf	??_scale+4,w
  2485  0D78  00AB               	movwf	___flmul@b+3
  2486  0D79  0849               	movf	??_scale+3,w
  2487  0D7A  00AA               	movwf	___flmul@b+2
  2488  0D7B  0848               	movf	??_scale+2,w
  2489  0D7C  00A9               	movwf	___flmul@b+1
  2490  0D7D  0847               	movf	??_scale+1,w
  2491  0D7E  00A8               	movwf	___flmul@b
  2492  0D7F  0853               	movf	_scale$1076+3,w
  2493  0D80  00AF               	movwf	___flmul@a+3
  2494  0D81  0852               	movf	_scale$1076+2,w
  2495  0D82  00AE               	movwf	___flmul@a+2
  2496  0D83  0851               	movf	_scale$1076+1,w
  2497  0D84  00AD               	movwf	___flmul@a+1
  2498  0D85  0850               	movf	_scale$1076,w
  2499  0D86  00AC               	movwf	___flmul@a
  2500  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2501  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0D8E  082B               	movf	?___flmul+3,w
  2504  0D8F  00C5               	movwf	?_scale+3
  2505  0D90  082A               	movf	?___flmul+2,w
  2506  0D91  00C4               	movwf	?_scale+2
  2507  0D92  0829               	movf	?___flmul+1,w
  2508  0D93  00C3               	movwf	?_scale+1
  2509  0D94  0828               	movf	?___flmul,w
  2510  0D95  00C2               	movwf	?_scale
  2511  0D96  2FFF               	goto	l231
  2512  0D97                     l2711:
  2513  0D97  0854               	movf	scale@scl,w
  2514  0D98  3A80               	xorlw	128
  2515  0D99  3E75               	addlw	-139
  2516  0D9A  1C03               	skipc
  2517  0D9B  2D9D               	goto	u4161
  2518  0D9C  2D9E               	goto	u4160
  2519  0D9D                     u4161:
  2520  0D9D  2E26               	goto	l2717
  2521  0D9E                     u4160:
  2522  0D9E                     l2713:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2525  0D9E  300A               	movlw	10
  2526  0D9F  00F2               	movwf	___awmod@divisor
  2527  0DA0  3000               	movlw	0
  2528  0DA1  00F3               	movwf	___awmod@divisor+1
  2529  0DA2  0854               	movf	scale@scl,w
  2530  0DA3  00F4               	movwf	___awmod@dividend
  2531  0DA4  01F5               	clrf	___awmod@dividend+1
  2532  0DA5  1BF4               	btfsc	___awmod@dividend,7
  2533  0DA6  03F5               	decf	___awmod@dividend+1,f
  2534  0DA7  160A  158A  26C3  120A  158A  	fcall	___awmod
  2535  0DAC  0872               	movf	?___awmod,w
  2536  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0DAF  00C6               	movwf	??_scale
  2539  0DB0  3001               	movlw	1
  2540  0DB1                     u4175:
  2541  0DB1  1003               	clrc
  2542  0DB2  0DC6               	rlf	??_scale,f
  2543  0DB3  3EFF               	addlw	-1
  2544  0DB4  1D03               	skipz
  2545  0DB5  2DB1               	goto	u4175
  2546  0DB6  1003               	clrc
  2547  0DB7  0D46               	rlf	??_scale,w
  2548  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2549  0DB9  0084               	movwf	4
  2550  0DBA  160A  158A  2000  120A  158A  	fcall	stringdir
  2551  0DBF  00C7               	movwf	??_scale+1
  2552  0DC0  160A  158A  2000  120A  158A  	fcall	stringdir
  2553  0DC5  00C8               	movwf	??_scale+2
  2554  0DC6  160A  158A  2000  120A  158A  	fcall	stringdir
  2555  0DCB  00C9               	movwf	??_scale+3
  2556  0DCC  160A  158A  2000  120A  158A  	fcall	stringdir
  2557  0DD1  00CA               	movwf	??_scale+4
  2558  0DD2  084A               	movf	??_scale+4,w
  2559  0DD3  00AB               	movwf	___flmul@b+3
  2560  0DD4  0849               	movf	??_scale+3,w
  2561  0DD5  00AA               	movwf	___flmul@b+2
  2562  0DD6  0848               	movf	??_scale+2,w
  2563  0DD7  00A9               	movwf	___flmul@b+1
  2564  0DD8  0847               	movf	??_scale+1,w
  2565  0DD9  00A8               	movwf	___flmul@b
  2566  0DDA  300A               	movlw	10
  2567  0DDB  00A0               	movwf	___awdiv@divisor
  2568  0DDC  3000               	movlw	0
  2569  0DDD  00A1               	movwf	___awdiv@divisor+1
  2570  0DDE  0854               	movf	scale@scl,w
  2571  0DDF  00A2               	movwf	___awdiv@dividend
  2572  0DE0  01A3               	clrf	___awdiv@dividend+1
  2573  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2574  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2575  0DE3  120A  158A  200F  120A  158A  	fcall	___awdiv
  2576  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0DEA  0820               	movf	?___awdiv,w
  2579  0DEB  00CB               	movwf	??_scale+5
  2580  0DEC  3001               	movlw	1
  2581  0DED                     u4185:
  2582  0DED  1003               	clrc
  2583  0DEE  0DCB               	rlf	??_scale+5,f
  2584  0DEF  3EFF               	addlw	-1
  2585  0DF0  1D03               	skipz
  2586  0DF1  2DED               	goto	u4185
  2587  0DF2  1003               	clrc
  2588  0DF3  0D4B               	rlf	??_scale+5,w
  2589  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2590  0DF5  0084               	movwf	4
  2591  0DF6  160A  158A  2000  120A  158A  	fcall	stringdir
  2592  0DFB  00CC               	movwf	??_scale+6
  2593  0DFC  160A  158A  2000  120A  158A  	fcall	stringdir
  2594  0E01  00CD               	movwf	??_scale+7
  2595  0E02  160A  158A  2000  120A  158A  	fcall	stringdir
  2596  0E07  00CE               	movwf	??_scale+8
  2597  0E08  160A  158A  2000  120A  158A  	fcall	stringdir
  2598  0E0D  00CF               	movwf	??_scale+9
  2599  0E0E  084F               	movf	??_scale+9,w
  2600  0E0F  00AF               	movwf	___flmul@a+3
  2601  0E10  084E               	movf	??_scale+8,w
  2602  0E11  00AE               	movwf	___flmul@a+2
  2603  0E12  084D               	movf	??_scale+7,w
  2604  0E13  00AD               	movwf	___flmul@a+1
  2605  0E14  084C               	movf	??_scale+6,w
  2606  0E15  00AC               	movwf	___flmul@a
  2607  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2608  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2609  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2610  0E1D  082B               	movf	?___flmul+3,w
  2611  0E1E  00C5               	movwf	?_scale+3
  2612  0E1F  082A               	movf	?___flmul+2,w
  2613  0E20  00C4               	movwf	?_scale+2
  2614  0E21  0829               	movf	?___flmul+1,w
  2615  0E22  00C3               	movwf	?_scale+1
  2616  0E23  0828               	movf	?___flmul,w
  2617  0E24  00C2               	movwf	?_scale
  2618  0E25  2FFF               	goto	l231
  2619  0E26                     l2717:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2622  0E26  0854               	movf	scale@scl,w
  2623  0E27  00C6               	movwf	??_scale
  2624  0E28  3001               	movlw	1
  2625  0E29                     u4195:
  2626  0E29  1003               	clrc
  2627  0E2A  0DC6               	rlf	??_scale,f
  2628  0E2B  3EFF               	addlw	-1
  2629  0E2C  1D03               	skipz
  2630  0E2D  2E29               	goto	u4195
  2631  0E2E  1003               	clrc
  2632  0E2F  0D46               	rlf	??_scale,w
  2633  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2634  0E31  0084               	movwf	4
  2635  0E32  160A  158A  2000  120A  158A  	fcall	stringdir
  2636  0E37  00C7               	movwf	??_scale+1
  2637  0E38  160A  158A  2000  120A  158A  	fcall	stringdir
  2638  0E3D  00C8               	movwf	??_scale+2
  2639  0E3E  160A  158A  2000  120A  158A  	fcall	stringdir
  2640  0E43  00C9               	movwf	??_scale+3
  2641  0E44  160A  158A  2000  120A  158A  	fcall	stringdir
  2642  0E49  00CA               	movwf	??_scale+4
  2643  0E4A  084A               	movf	??_scale+4,w
  2644  0E4B  00C5               	movwf	?_scale+3
  2645  0E4C  0849               	movf	??_scale+3,w
  2646  0E4D  00C4               	movwf	?_scale+2
  2647  0E4E  0848               	movf	??_scale+2,w
  2648  0E4F  00C3               	movwf	?_scale+1
  2649  0E50  0847               	movf	??_scale+1,w
  2650  0E51  00C2               	movwf	?_scale
  2651  0E52  2FFF               	goto	l231
  2652  0E53                     l2721:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2655  0E53  0854               	movf	scale@scl,w
  2656  0E54  3A80               	xorlw	128
  2657  0E55  3E12               	addlw	-238
  2658  0E56  1C03               	skipc
  2659  0E57  2E59               	goto	u4201
  2660  0E58  2E5A               	goto	u4200
  2661  0E59                     u4201:
  2662  0E59  2F44               	goto	l2729
  2663  0E5A                     u4200:
  2664  0E5A                     l2723:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2667  0E5A  300A               	movlw	10
  2668  0E5B  00A0               	movwf	___awdiv@divisor
  2669  0E5C  3000               	movlw	0
  2670  0E5D  00A1               	movwf	___awdiv@divisor+1
  2671  0E5E  0854               	movf	scale@scl,w
  2672  0E5F  00F4               	movwf	___awmod@dividend
  2673  0E60  01F5               	clrf	___awmod@dividend+1
  2674  0E61  1BF4               	btfsc	___awmod@dividend,7
  2675  0E62  03F5               	decf	___awmod@dividend+1,f
  2676  0E63  3064               	movlw	100
  2677  0E64  00F2               	movwf	___awmod@divisor
  2678  0E65  3000               	movlw	0
  2679  0E66  00F3               	movwf	___awmod@divisor+1
  2680  0E67  160A  158A  26C3  120A  158A  	fcall	___awmod
  2681  0E6C  0873               	movf	?___awmod+1,w
  2682  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2683  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0E6F  00A3               	movwf	___awdiv@dividend+1
  2685  0E70  0872               	movf	?___awmod,w
  2686  0E71  00A2               	movwf	___awdiv@dividend
  2687  0E72  120A  158A  200F  120A  158A  	fcall	___awdiv
  2688  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0E79  0820               	movf	?___awdiv,w
  2691  0E7A  00C6               	movwf	??_scale
  2692  0E7B  3001               	movlw	1
  2693  0E7C                     u4215:
  2694  0E7C  1003               	clrc
  2695  0E7D  0DC6               	rlf	??_scale,f
  2696  0E7E  3EFF               	addlw	-1
  2697  0E7F  1D03               	skipz
  2698  0E80  2E7C               	goto	u4215
  2699  0E81  1003               	clrc
  2700  0E82  0D46               	rlf	??_scale,w
  2701  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2702  0E84  0084               	movwf	4
  2703  0E85  160A  158A  2000  120A  158A  	fcall	stringdir
  2704  0E8A  00C7               	movwf	??_scale+1
  2705  0E8B  160A  158A  2000  120A  158A  	fcall	stringdir
  2706  0E90  00C8               	movwf	??_scale+2
  2707  0E91  160A  158A  2000  120A  158A  	fcall	stringdir
  2708  0E96  00C9               	movwf	??_scale+3
  2709  0E97  160A  158A  2000  120A  158A  	fcall	stringdir
  2710  0E9C  00CA               	movwf	??_scale+4
  2711  0E9D  084A               	movf	??_scale+4,w
  2712  0E9E  00AB               	movwf	___flmul@b+3
  2713  0E9F  0849               	movf	??_scale+3,w
  2714  0EA0  00AA               	movwf	___flmul@b+2
  2715  0EA1  0848               	movf	??_scale+2,w
  2716  0EA2  00A9               	movwf	___flmul@b+1
  2717  0EA3  0847               	movf	??_scale+1,w
  2718  0EA4  00A8               	movwf	___flmul@b
  2719  0EA5  3064               	movlw	100
  2720  0EA6  00A0               	movwf	___awdiv@divisor
  2721  0EA7  3000               	movlw	0
  2722  0EA8  00A1               	movwf	___awdiv@divisor+1
  2723  0EA9  0854               	movf	scale@scl,w
  2724  0EAA  00A2               	movwf	___awdiv@dividend
  2725  0EAB  01A3               	clrf	___awdiv@dividend+1
  2726  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2727  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2728  0EAE  120A  158A  200F  120A  158A  	fcall	___awdiv
  2729  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0EB5  0820               	movf	?___awdiv,w
  2732  0EB6  00CB               	movwf	??_scale+5
  2733  0EB7  3001               	movlw	1
  2734  0EB8                     u4225:
  2735  0EB8  1003               	clrc
  2736  0EB9  0DCB               	rlf	??_scale+5,f
  2737  0EBA  3EFF               	addlw	-1
  2738  0EBB  1D03               	skipz
  2739  0EBC  2EB8               	goto	u4225
  2740  0EBD  1003               	clrc
  2741  0EBE  0D4B               	rlf	??_scale+5,w
  2742  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2743  0EC0  0084               	movwf	4
  2744  0EC1  160A  158A  2000  120A  158A  	fcall	stringdir
  2745  0EC6  00CC               	movwf	??_scale+6
  2746  0EC7  160A  158A  2000  120A  158A  	fcall	stringdir
  2747  0ECC  00CD               	movwf	??_scale+7
  2748  0ECD  160A  158A  2000  120A  158A  	fcall	stringdir
  2749  0ED2  00CE               	movwf	??_scale+8
  2750  0ED3  160A  158A  2000  120A  158A  	fcall	stringdir
  2751  0ED8  00CF               	movwf	??_scale+9
  2752  0ED9  084F               	movf	??_scale+9,w
  2753  0EDA  00AF               	movwf	___flmul@a+3
  2754  0EDB  084E               	movf	??_scale+8,w
  2755  0EDC  00AE               	movwf	___flmul@a+2
  2756  0EDD  084D               	movf	??_scale+7,w
  2757  0EDE  00AD               	movwf	___flmul@a+1
  2758  0EDF  084C               	movf	??_scale+6,w
  2759  0EE0  00AC               	movwf	___flmul@a
  2760  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2761  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2762  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2763  0EE8  082B               	movf	?___flmul+3,w
  2764  0EE9  00D3               	movwf	_scale$1076+3
  2765  0EEA  082A               	movf	?___flmul+2,w
  2766  0EEB  00D2               	movwf	_scale$1076+2
  2767  0EEC  0829               	movf	?___flmul+1,w
  2768  0EED  00D1               	movwf	_scale$1076+1
  2769  0EEE  0828               	movf	?___flmul,w
  2770  0EEF  00D0               	movwf	_scale$1076
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2773  0EF0  300A               	movlw	10
  2774  0EF1  00F2               	movwf	___awmod@divisor
  2775  0EF2  3000               	movlw	0
  2776  0EF3  00F3               	movwf	___awmod@divisor+1
  2777  0EF4  0854               	movf	scale@scl,w
  2778  0EF5  00F4               	movwf	___awmod@dividend
  2779  0EF6  01F5               	clrf	___awmod@dividend+1
  2780  0EF7  1BF4               	btfsc	___awmod@dividend,7
  2781  0EF8  03F5               	decf	___awmod@dividend+1,f
  2782  0EF9  160A  158A  26C3  120A  158A  	fcall	___awmod
  2783  0EFE  0872               	movf	?___awmod,w
  2784  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0F01  00C6               	movwf	??_scale
  2787  0F02  3001               	movlw	1
  2788  0F03                     u4235:
  2789  0F03  1003               	clrc
  2790  0F04  0DC6               	rlf	??_scale,f
  2791  0F05  3EFF               	addlw	-1
  2792  0F06  1D03               	skipz
  2793  0F07  2F03               	goto	u4235
  2794  0F08  1003               	clrc
  2795  0F09  0D46               	rlf	??_scale,w
  2796  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2797  0F0B  0084               	movwf	4
  2798  0F0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2799  0F11  00C7               	movwf	??_scale+1
  2800  0F12  160A  158A  2000  120A  158A  	fcall	stringdir
  2801  0F17  00C8               	movwf	??_scale+2
  2802  0F18  160A  158A  2000  120A  158A  	fcall	stringdir
  2803  0F1D  00C9               	movwf	??_scale+3
  2804  0F1E  160A  158A  2000  120A  158A  	fcall	stringdir
  2805  0F23  00CA               	movwf	??_scale+4
  2806  0F24  084A               	movf	??_scale+4,w
  2807  0F25  00AB               	movwf	___flmul@b+3
  2808  0F26  0849               	movf	??_scale+3,w
  2809  0F27  00AA               	movwf	___flmul@b+2
  2810  0F28  0848               	movf	??_scale+2,w
  2811  0F29  00A9               	movwf	___flmul@b+1
  2812  0F2A  0847               	movf	??_scale+1,w
  2813  0F2B  00A8               	movwf	___flmul@b
  2814  0F2C  0853               	movf	_scale$1076+3,w
  2815  0F2D  00AF               	movwf	___flmul@a+3
  2816  0F2E  0852               	movf	_scale$1076+2,w
  2817  0F2F  00AE               	movwf	___flmul@a+2
  2818  0F30  0851               	movf	_scale$1076+1,w
  2819  0F31  00AD               	movwf	___flmul@a+1
  2820  0F32  0850               	movf	_scale$1076,w
  2821  0F33  00AC               	movwf	___flmul@a
  2822  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2823  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0F3B  082B               	movf	?___flmul+3,w
  2826  0F3C  00C5               	movwf	?_scale+3
  2827  0F3D  082A               	movf	?___flmul+2,w
  2828  0F3E  00C4               	movwf	?_scale+2
  2829  0F3F  0829               	movf	?___flmul+1,w
  2830  0F40  00C3               	movwf	?_scale+1
  2831  0F41  0828               	movf	?___flmul,w
  2832  0F42  00C2               	movwf	?_scale
  2833  0F43  2FFF               	goto	l231
  2834  0F44                     l2729:
  2835  0F44  0854               	movf	scale@scl,w
  2836  0F45  3A80               	xorlw	128
  2837  0F46  3E75               	addlw	-139
  2838  0F47  1C03               	skipc
  2839  0F48  2F4A               	goto	u4241
  2840  0F49  2F4B               	goto	u4240
  2841  0F4A                     u4241:
  2842  0F4A  2FD3               	goto	l2735
  2843  0F4B                     u4240:
  2844  0F4B                     l2731:
  2845                           
  2846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2847  0F4B  300A               	movlw	10
  2848  0F4C  00F2               	movwf	___awmod@divisor
  2849  0F4D  3000               	movlw	0
  2850  0F4E  00F3               	movwf	___awmod@divisor+1
  2851  0F4F  0854               	movf	scale@scl,w
  2852  0F50  00F4               	movwf	___awmod@dividend
  2853  0F51  01F5               	clrf	___awmod@dividend+1
  2854  0F52  1BF4               	btfsc	___awmod@dividend,7
  2855  0F53  03F5               	decf	___awmod@dividend+1,f
  2856  0F54  160A  158A  26C3  120A  158A  	fcall	___awmod
  2857  0F59  0872               	movf	?___awmod,w
  2858  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2859  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2860  0F5C  00C6               	movwf	??_scale
  2861  0F5D  3001               	movlw	1
  2862  0F5E                     u4255:
  2863  0F5E  1003               	clrc
  2864  0F5F  0DC6               	rlf	??_scale,f
  2865  0F60  3EFF               	addlw	-1
  2866  0F61  1D03               	skipz
  2867  0F62  2F5E               	goto	u4255
  2868  0F63  1003               	clrc
  2869  0F64  0D46               	rlf	??_scale,w
  2870  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2871  0F66  0084               	movwf	4
  2872  0F67  160A  158A  2000  120A  158A  	fcall	stringdir
  2873  0F6C  00C7               	movwf	??_scale+1
  2874  0F6D  160A  158A  2000  120A  158A  	fcall	stringdir
  2875  0F72  00C8               	movwf	??_scale+2
  2876  0F73  160A  158A  2000  120A  158A  	fcall	stringdir
  2877  0F78  00C9               	movwf	??_scale+3
  2878  0F79  160A  158A  2000  120A  158A  	fcall	stringdir
  2879  0F7E  00CA               	movwf	??_scale+4
  2880  0F7F  084A               	movf	??_scale+4,w
  2881  0F80  00AB               	movwf	___flmul@b+3
  2882  0F81  0849               	movf	??_scale+3,w
  2883  0F82  00AA               	movwf	___flmul@b+2
  2884  0F83  0848               	movf	??_scale+2,w
  2885  0F84  00A9               	movwf	___flmul@b+1
  2886  0F85  0847               	movf	??_scale+1,w
  2887  0F86  00A8               	movwf	___flmul@b
  2888  0F87  300A               	movlw	10
  2889  0F88  00A0               	movwf	___awdiv@divisor
  2890  0F89  3000               	movlw	0
  2891  0F8A  00A1               	movwf	___awdiv@divisor+1
  2892  0F8B  0854               	movf	scale@scl,w
  2893  0F8C  00A2               	movwf	___awdiv@dividend
  2894  0F8D  01A3               	clrf	___awdiv@dividend+1
  2895  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  2896  0F8F  03A3               	decf	___awdiv@dividend+1,f
  2897  0F90  120A  158A  200F  120A  158A  	fcall	___awdiv
  2898  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0F97  0820               	movf	?___awdiv,w
  2901  0F98  00CB               	movwf	??_scale+5
  2902  0F99  3001               	movlw	1
  2903  0F9A                     u4265:
  2904  0F9A  1003               	clrc
  2905  0F9B  0DCB               	rlf	??_scale+5,f
  2906  0F9C  3EFF               	addlw	-1
  2907  0F9D  1D03               	skipz
  2908  0F9E  2F9A               	goto	u4265
  2909  0F9F  1003               	clrc
  2910  0FA0  0D4B               	rlf	??_scale+5,w
  2911  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2912  0FA2  0084               	movwf	4
  2913  0FA3  160A  158A  2000  120A  158A  	fcall	stringdir
  2914  0FA8  00CC               	movwf	??_scale+6
  2915  0FA9  160A  158A  2000  120A  158A  	fcall	stringdir
  2916  0FAE  00CD               	movwf	??_scale+7
  2917  0FAF  160A  158A  2000  120A  158A  	fcall	stringdir
  2918  0FB4  00CE               	movwf	??_scale+8
  2919  0FB5  160A  158A  2000  120A  158A  	fcall	stringdir
  2920  0FBA  00CF               	movwf	??_scale+9
  2921  0FBB  084F               	movf	??_scale+9,w
  2922  0FBC  00AF               	movwf	___flmul@a+3
  2923  0FBD  084E               	movf	??_scale+8,w
  2924  0FBE  00AE               	movwf	___flmul@a+2
  2925  0FBF  084D               	movf	??_scale+7,w
  2926  0FC0  00AD               	movwf	___flmul@a+1
  2927  0FC1  084C               	movf	??_scale+6,w
  2928  0FC2  00AC               	movwf	___flmul@a
  2929  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  2930  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  2932  0FCA  082B               	movf	?___flmul+3,w
  2933  0FCB  00C5               	movwf	?_scale+3
  2934  0FCC  082A               	movf	?___flmul+2,w
  2935  0FCD  00C4               	movwf	?_scale+2
  2936  0FCE  0829               	movf	?___flmul+1,w
  2937  0FCF  00C3               	movwf	?_scale+1
  2938  0FD0  0828               	movf	?___flmul,w
  2939  0FD1  00C2               	movwf	?_scale
  2940  0FD2  2FFF               	goto	l231
  2941  0FD3                     l2735:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  2944  0FD3  0854               	movf	scale@scl,w
  2945  0FD4  00C6               	movwf	??_scale
  2946  0FD5  3001               	movlw	1
  2947  0FD6                     u4275:
  2948  0FD6  1003               	clrc
  2949  0FD7  0DC6               	rlf	??_scale,f
  2950  0FD8  3EFF               	addlw	-1
  2951  0FD9  1D03               	skipz
  2952  0FDA  2FD6               	goto	u4275
  2953  0FDB  1003               	clrc
  2954  0FDC  0D46               	rlf	??_scale,w
  2955  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2956  0FDE  0084               	movwf	4
  2957  0FDF  160A  158A  2000  120A  158A  	fcall	stringdir
  2958  0FE4  00C7               	movwf	??_scale+1
  2959  0FE5  160A  158A  2000  120A  158A  	fcall	stringdir
  2960  0FEA  00C8               	movwf	??_scale+2
  2961  0FEB  160A  158A  2000  120A  158A  	fcall	stringdir
  2962  0FF0  00C9               	movwf	??_scale+3
  2963  0FF1  160A  158A  2000  120A  158A  	fcall	stringdir
  2964  0FF6  00CA               	movwf	??_scale+4
  2965  0FF7  084A               	movf	??_scale+4,w
  2966  0FF8  00C5               	movwf	?_scale+3
  2967  0FF9  0849               	movf	??_scale+3,w
  2968  0FFA  00C4               	movwf	?_scale+2
  2969  0FFB  0848               	movf	??_scale+2,w
  2970  0FFC  00C3               	movwf	?_scale+1
  2971  0FFD  0847               	movf	??_scale+1,w
  2972  0FFE  00C2               	movwf	?_scale
  2973  0FFF                     l231:
  2974  0FFF  0008               	return
  2975  1000                     __end_of_scale:
  2976                           
  2977                           	psect	text3
  2978  1EC3                     __ptext3:	
  2979 ;; *************** function ___awmod *****************
  2980 ;; Defined at:
  2981 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  divisor         2    2[COMMON] int 
  2984 ;;  dividend        2    4[COMMON] int 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  sign            1    8[COMMON] unsigned char 
  2987 ;;  counter         1    7[COMMON] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  2    2[COMMON] int 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         4       0       0       0       0
  2998 ;;      Locals:         2       0       0       0       0
  2999 ;;      Temps:          1       0       0       0       0
  3000 ;;      Totals:         7       0       0       0       0
  3001 ;;Total ram usage:        7 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    1
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_scale
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function ___awmod
  3013  1EC3                     ___awmod:
  3014  1EC3                     l2257:	
  3015                           ;incstack = 0
  3016                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3017                           
  3018  1EC3  01F8               	clrf	___awmod@sign
  3019  1EC4                     l2259:
  3020  1EC4  1FF5               	btfss	___awmod@dividend+1,7
  3021  1EC5  2EC7               	goto	u2971
  3022  1EC6  2EC8               	goto	u2970
  3023  1EC7                     u2971:
  3024  1EC7  2ECF               	goto	l2265
  3025  1EC8                     u2970:
  3026  1EC8                     l2261:
  3027  1EC8  09F4               	comf	___awmod@dividend,f
  3028  1EC9  09F5               	comf	___awmod@dividend+1,f
  3029  1ECA  0AF4               	incf	___awmod@dividend,f
  3030  1ECB  1903               	skipnz
  3031  1ECC  0AF5               	incf	___awmod@dividend+1,f
  3032  1ECD                     l2263:
  3033  1ECD  01F8               	clrf	___awmod@sign
  3034  1ECE  0AF8               	incf	___awmod@sign,f
  3035  1ECF                     l2265:
  3036  1ECF  1FF3               	btfss	___awmod@divisor+1,7
  3037  1ED0  2ED2               	goto	u2981
  3038  1ED1  2ED3               	goto	u2980
  3039  1ED2                     u2981:
  3040  1ED2  2ED8               	goto	l2269
  3041  1ED3                     u2980:
  3042  1ED3                     l2267:
  3043  1ED3  09F2               	comf	___awmod@divisor,f
  3044  1ED4  09F3               	comf	___awmod@divisor+1,f
  3045  1ED5  0AF2               	incf	___awmod@divisor,f
  3046  1ED6  1903               	skipnz
  3047  1ED7  0AF3               	incf	___awmod@divisor+1,f
  3048  1ED8                     l2269:
  3049  1ED8  0872               	movf	___awmod@divisor,w
  3050  1ED9  0473               	iorwf	___awmod@divisor+1,w
  3051  1EDA  1903               	btfsc	3,2
  3052  1EDB  2EDD               	goto	u2991
  3053  1EDC  2EDE               	goto	u2990
  3054  1EDD                     u2991:
  3055  1EDD  2F0D               	goto	l2287
  3056  1EDE                     u2990:
  3057  1EDE                     l2271:
  3058  1EDE  01F7               	clrf	___awmod@counter
  3059  1EDF  0AF7               	incf	___awmod@counter,f
  3060  1EE0  2EEC               	goto	l2277
  3061  1EE1                     l2273:
  3062  1EE1  3001               	movlw	1
  3063  1EE2                     u3005:
  3064  1EE2  1003               	clrc
  3065  1EE3  0DF2               	rlf	___awmod@divisor,f
  3066  1EE4  0DF3               	rlf	___awmod@divisor+1,f
  3067  1EE5  3EFF               	addlw	-1
  3068  1EE6  1D03               	skipz
  3069  1EE7  2EE2               	goto	u3005
  3070  1EE8                     l2275:
  3071  1EE8  3001               	movlw	1
  3072  1EE9  00F6               	movwf	??___awmod
  3073  1EEA  0876               	movf	??___awmod,w
  3074  1EEB  07F7               	addwf	___awmod@counter,f
  3075  1EEC                     l2277:
  3076  1EEC  1FF3               	btfss	___awmod@divisor+1,7
  3077  1EED  2EEF               	goto	u3011
  3078  1EEE  2EF0               	goto	u3010
  3079  1EEF                     u3011:
  3080  1EEF  2EE1               	goto	l2273
  3081  1EF0                     u3010:
  3082  1EF0                     l2279:
  3083  1EF0  0873               	movf	___awmod@divisor+1,w
  3084  1EF1  0275               	subwf	___awmod@dividend+1,w
  3085  1EF2  1D03               	skipz
  3086  1EF3  2EF6               	goto	u3025
  3087  1EF4  0872               	movf	___awmod@divisor,w
  3088  1EF5  0274               	subwf	___awmod@dividend,w
  3089  1EF6                     u3025:
  3090  1EF6  1C03               	skipc
  3091  1EF7  2EF9               	goto	u3021
  3092  1EF8  2EFA               	goto	u3020
  3093  1EF9                     u3021:
  3094  1EF9  2F00               	goto	l2283
  3095  1EFA                     u3020:
  3096  1EFA                     l2281:
  3097  1EFA  0872               	movf	___awmod@divisor,w
  3098  1EFB  02F4               	subwf	___awmod@dividend,f
  3099  1EFC  0873               	movf	___awmod@divisor+1,w
  3100  1EFD  1C03               	skipc
  3101  1EFE  03F5               	decf	___awmod@dividend+1,f
  3102  1EFF  02F5               	subwf	___awmod@dividend+1,f
  3103  1F00                     l2283:
  3104  1F00  3001               	movlw	1
  3105  1F01                     u3035:
  3106  1F01  1003               	clrc
  3107  1F02  0CF3               	rrf	___awmod@divisor+1,f
  3108  1F03  0CF2               	rrf	___awmod@divisor,f
  3109  1F04  3EFF               	addlw	-1
  3110  1F05  1D03               	skipz
  3111  1F06  2F01               	goto	u3035
  3112  1F07                     l2285:
  3113  1F07  3001               	movlw	1
  3114  1F08  02F7               	subwf	___awmod@counter,f
  3115  1F09  1D03               	btfss	3,2
  3116  1F0A  2F0C               	goto	u3041
  3117  1F0B  2F0D               	goto	u3040
  3118  1F0C                     u3041:
  3119  1F0C  2EF0               	goto	l2279
  3120  1F0D                     u3040:
  3121  1F0D                     l2287:
  3122  1F0D  0878               	movf	___awmod@sign,w
  3123  1F0E  1903               	btfsc	3,2
  3124  1F0F  2F11               	goto	u3051
  3125  1F10  2F12               	goto	u3050
  3126  1F11                     u3051:
  3127  1F11  2F17               	goto	l2291
  3128  1F12                     u3050:
  3129  1F12                     l2289:
  3130  1F12  09F4               	comf	___awmod@dividend,f
  3131  1F13  09F5               	comf	___awmod@dividend+1,f
  3132  1F14  0AF4               	incf	___awmod@dividend,f
  3133  1F15  1903               	skipnz
  3134  1F16  0AF5               	incf	___awmod@dividend+1,f
  3135  1F17                     l2291:
  3136  1F17  0875               	movf	___awmod@dividend+1,w
  3137  1F18  00F3               	movwf	?___awmod+1
  3138  1F19  0874               	movf	___awmod@dividend,w
  3139  1F1A  00F2               	movwf	?___awmod
  3140  1F1B                     l502:
  3141  1F1B  0008               	return
  3142  1F1C                     __end_of___awmod:
  3143                           
  3144                           	psect	text4
  3145  080F                     __ptext4:	
  3146 ;; *************** function ___awdiv *****************
  3147 ;; Defined at:
  3148 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  divisor         2    0[BANK0 ] int 
  3151 ;;  dividend        2    2[BANK0 ] int 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  quotient        2    6[BANK0 ] int 
  3154 ;;  sign            1    5[BANK0 ] unsigned char 
  3155 ;;  counter         1    4[BANK0 ] unsigned char 
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  2    0[BANK0 ] int 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3165 ;;      Params:         0       4       0       0       0
  3166 ;;      Locals:         0       4       0       0       0
  3167 ;;      Temps:          1       0       0       0       0
  3168 ;;      Totals:         1       8       0       0       0
  3169 ;;Total ram usage:        9 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    1
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;;		_scale
  3177 ;;		_sprintf
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           
  3182                           ;psect for function ___awdiv
  3183  080F                     ___awdiv:
  3184  080F                     l2213:	
  3185                           ;incstack = 0
  3186                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3187                           
  3188  080F  1283               	bcf	3,5	;RP0=0, select bank0
  3189  0810  1303               	bcf	3,6	;RP1=0, select bank0
  3190  0811  01A5               	clrf	___awdiv@sign
  3191  0812                     l2215:
  3192  0812  1FA1               	btfss	___awdiv@divisor+1,7
  3193  0813  2815               	goto	u2871
  3194  0814  2816               	goto	u2870
  3195  0815                     u2871:
  3196  0815  281D               	goto	l2221
  3197  0816                     u2870:
  3198  0816                     l2217:
  3199  0816  09A0               	comf	___awdiv@divisor,f
  3200  0817  09A1               	comf	___awdiv@divisor+1,f
  3201  0818  0AA0               	incf	___awdiv@divisor,f
  3202  0819  1903               	skipnz
  3203  081A  0AA1               	incf	___awdiv@divisor+1,f
  3204  081B                     l2219:
  3205  081B  01A5               	clrf	___awdiv@sign
  3206  081C  0AA5               	incf	___awdiv@sign,f
  3207  081D                     l2221:
  3208  081D  1FA3               	btfss	___awdiv@dividend+1,7
  3209  081E  2820               	goto	u2881
  3210  081F  2821               	goto	u2880
  3211  0820                     u2881:
  3212  0820  282A               	goto	l2227
  3213  0821                     u2880:
  3214  0821                     l2223:
  3215  0821  09A2               	comf	___awdiv@dividend,f
  3216  0822  09A3               	comf	___awdiv@dividend+1,f
  3217  0823  0AA2               	incf	___awdiv@dividend,f
  3218  0824  1903               	skipnz
  3219  0825  0AA3               	incf	___awdiv@dividend+1,f
  3220  0826                     l2225:
  3221  0826  3001               	movlw	1
  3222  0827  00F9               	movwf	??___awdiv
  3223  0828  0879               	movf	??___awdiv,w
  3224  0829  06A5               	xorwf	___awdiv@sign,f
  3225  082A                     l2227:
  3226  082A  01A6               	clrf	___awdiv@quotient
  3227  082B  01A7               	clrf	___awdiv@quotient+1
  3228  082C                     l2229:
  3229  082C  0820               	movf	___awdiv@divisor,w
  3230  082D  0421               	iorwf	___awdiv@divisor+1,w
  3231  082E  1903               	btfsc	3,2
  3232  082F  2831               	goto	u2891
  3233  0830  2832               	goto	u2890
  3234  0831                     u2891:
  3235  0831  2869               	goto	l2249
  3236  0832                     u2890:
  3237  0832                     l2231:
  3238  0832  01A4               	clrf	___awdiv@counter
  3239  0833  0AA4               	incf	___awdiv@counter,f
  3240  0834  2840               	goto	l2237
  3241  0835                     l2233:
  3242  0835  3001               	movlw	1
  3243  0836                     u2905:
  3244  0836  1003               	clrc
  3245  0837  0DA0               	rlf	___awdiv@divisor,f
  3246  0838  0DA1               	rlf	___awdiv@divisor+1,f
  3247  0839  3EFF               	addlw	-1
  3248  083A  1D03               	skipz
  3249  083B  2836               	goto	u2905
  3250  083C                     l2235:
  3251  083C  3001               	movlw	1
  3252  083D  00F9               	movwf	??___awdiv
  3253  083E  0879               	movf	??___awdiv,w
  3254  083F  07A4               	addwf	___awdiv@counter,f
  3255  0840                     l2237:
  3256  0840  1FA1               	btfss	___awdiv@divisor+1,7
  3257  0841  2843               	goto	u2911
  3258  0842  2844               	goto	u2910
  3259  0843                     u2911:
  3260  0843  2835               	goto	l2233
  3261  0844                     u2910:
  3262  0844                     l2239:
  3263  0844  3001               	movlw	1
  3264  0845                     u2925:
  3265  0845  1003               	clrc
  3266  0846  0DA6               	rlf	___awdiv@quotient,f
  3267  0847  0DA7               	rlf	___awdiv@quotient+1,f
  3268  0848  3EFF               	addlw	-1
  3269  0849  1D03               	skipz
  3270  084A  2845               	goto	u2925
  3271  084B  0821               	movf	___awdiv@divisor+1,w
  3272  084C  0223               	subwf	___awdiv@dividend+1,w
  3273  084D  1D03               	skipz
  3274  084E  2851               	goto	u2935
  3275  084F  0820               	movf	___awdiv@divisor,w
  3276  0850  0222               	subwf	___awdiv@dividend,w
  3277  0851                     u2935:
  3278  0851  1C03               	skipc
  3279  0852  2854               	goto	u2931
  3280  0853  2855               	goto	u2930
  3281  0854                     u2931:
  3282  0854  285C               	goto	l2245
  3283  0855                     u2930:
  3284  0855                     l2241:
  3285  0855  0820               	movf	___awdiv@divisor,w
  3286  0856  02A2               	subwf	___awdiv@dividend,f
  3287  0857  0821               	movf	___awdiv@divisor+1,w
  3288  0858  1C03               	skipc
  3289  0859  03A3               	decf	___awdiv@dividend+1,f
  3290  085A  02A3               	subwf	___awdiv@dividend+1,f
  3291  085B                     l2243:
  3292  085B  1426               	bsf	___awdiv@quotient,0
  3293  085C                     l2245:
  3294  085C  3001               	movlw	1
  3295  085D                     u2945:
  3296  085D  1003               	clrc
  3297  085E  0CA1               	rrf	___awdiv@divisor+1,f
  3298  085F  0CA0               	rrf	___awdiv@divisor,f
  3299  0860  3EFF               	addlw	-1
  3300  0861  1D03               	skipz
  3301  0862  285D               	goto	u2945
  3302  0863                     l2247:
  3303  0863  3001               	movlw	1
  3304  0864  02A4               	subwf	___awdiv@counter,f
  3305  0865  1D03               	btfss	3,2
  3306  0866  2868               	goto	u2951
  3307  0867  2869               	goto	u2950
  3308  0868                     u2951:
  3309  0868  2844               	goto	l2239
  3310  0869                     u2950:
  3311  0869                     l2249:
  3312  0869  0825               	movf	___awdiv@sign,w
  3313  086A  1903               	btfsc	3,2
  3314  086B  286D               	goto	u2961
  3315  086C  286E               	goto	u2960
  3316  086D                     u2961:
  3317  086D  2873               	goto	l2253
  3318  086E                     u2960:
  3319  086E                     l2251:
  3320  086E  09A6               	comf	___awdiv@quotient,f
  3321  086F  09A7               	comf	___awdiv@quotient+1,f
  3322  0870  0AA6               	incf	___awdiv@quotient,f
  3323  0871  1903               	skipnz
  3324  0872  0AA7               	incf	___awdiv@quotient+1,f
  3325  0873                     l2253:
  3326  0873  0827               	movf	___awdiv@quotient+1,w
  3327  0874  00A1               	movwf	?___awdiv+1
  3328  0875  0826               	movf	___awdiv@quotient,w
  3329  0876  00A0               	movwf	?___awdiv
  3330  0877                     l489:
  3331  0877  0008               	return
  3332  0878                     __end_of___awdiv:
  3333                           
  3334                           	psect	text5
  3335  1CD1                     __ptext5:	
  3336 ;; *************** function _isdigit *****************
  3337 ;; Defined at:
  3338 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  c               1    wreg     unsigned char 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  c               1    3[COMMON] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         0       0       0       0       0
  3353 ;;      Locals:         2       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0
  3355 ;;      Totals:         2       0       0       0       0
  3356 ;;Total ram usage:        2 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    1
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_sprintf
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _isdigit
  3368  1CD1                     _isdigit:
  3369                           
  3370                           ;incstack = 0
  3371                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3372                           ;isdigit@c stored from wreg
  3373  1CD1  00F3               	movwf	isdigit@c
  3374  1CD2                     l2739:
  3375  1CD2  01F2               	clrf	_isdigit$902
  3376  1CD3                     l2741:
  3377  1CD3  303A               	movlw	58
  3378  1CD4  0273               	subwf	isdigit@c,w
  3379  1CD5  1803               	skipnc
  3380  1CD6  2CD8               	goto	u4281
  3381  1CD7  2CD9               	goto	u4280
  3382  1CD8                     u4281:
  3383  1CD8  2CE1               	goto	l2747
  3384  1CD9                     u4280:
  3385  1CD9                     l2743:
  3386  1CD9  3030               	movlw	48
  3387  1CDA  0273               	subwf	isdigit@c,w
  3388  1CDB  1C03               	skipc
  3389  1CDC  2CDE               	goto	u4291
  3390  1CDD  2CDF               	goto	u4290
  3391  1CDE                     u4291:
  3392  1CDE  2CE1               	goto	l2747
  3393  1CDF                     u4290:
  3394  1CDF                     l2745:
  3395  1CDF  01F2               	clrf	_isdigit$902
  3396  1CE0  0AF2               	incf	_isdigit$902,f
  3397  1CE1                     l2747:
  3398  1CE1  0C72               	rrf	_isdigit$902,w
  3399  1CE2                     l823:
  3400  1CE2  0008               	return
  3401  1CE3                     __end_of_isdigit:
  3402                           
  3403                           	psect	text6
  3404  12F0                     __ptext6:	
  3405 ;; *************** function _fround *****************
  3406 ;; Defined at:
  3407 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  prec            1    wreg     unsigned char 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  prec            1   53[BANK0 ] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  4   34[BANK0 ] unsigned char 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3421 ;;      Params:         0       4       0       0       0
  3422 ;;      Locals:         0       9       0       0       0
  3423 ;;      Temps:          0       7       0       0       0
  3424 ;;      Totals:         0      20       0       0       0
  3425 ;;Total ram usage:       20 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    3
  3428 ;; This function calls:
  3429 ;;		___flmul
  3430 ;;		___lwdiv
  3431 ;;		___lwmod
  3432 ;; This function is called by:
  3433 ;;		_sprintf
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function _fround
  3439  12F0                     _fround:
  3440                           
  3441                           ;incstack = 0
  3442                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3443                           ;fround@prec stored from wreg
  3444  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  3445  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  3446  12F2  00D5               	movwf	fround@prec
  3447  12F3                     l3505:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3450  12F3  306E               	movlw	110
  3451  12F4  0255               	subwf	fround@prec,w
  3452  12F5  1C03               	skipc
  3453  12F6  2AF8               	goto	u5741
  3454  12F7  2AF9               	goto	u5740
  3455  12F8                     u5741:
  3456  12F8  2C08               	goto	l3513
  3457  12F9                     u5740:
  3458  12F9                     l3507:
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3461  12F9  303F               	movlw	63
  3462  12FA  00AB               	movwf	___flmul@b+3
  3463  12FB  3000               	movlw	0
  3464  12FC  00AA               	movwf	___flmul@b+2
  3465  12FD  3000               	movlw	0
  3466  12FE  00A9               	movwf	___flmul@b+1
  3467  12FF  3000               	movlw	0
  3468  1300  00A8               	movwf	___flmul@b
  3469  1301  3064               	movlw	100
  3470  1302  00A0               	movwf	___lwdiv@divisor
  3471  1303  3000               	movlw	0
  3472  1304  00A1               	movwf	___lwdiv@divisor+1
  3473  1305  0855               	movf	fround@prec,w
  3474  1306  00C6               	movwf	??_fround
  3475  1307  01C7               	clrf	??_fround+1
  3476  1308  0846               	movf	??_fround,w
  3477  1309  00A2               	movwf	___lwdiv@dividend
  3478  130A  0847               	movf	??_fround+1,w
  3479  130B  00A3               	movwf	___lwdiv@dividend+1
  3480  130C  160A  158A  2587  160A  118A  	fcall	___lwdiv
  3481  1311  1283               	bcf	3,5	;RP0=0, select bank0
  3482  1312  1303               	bcf	3,6	;RP1=0, select bank0
  3483  1313  0820               	movf	?___lwdiv,w
  3484  1314  00C8               	movwf	??_fround+2
  3485  1315  3001               	movlw	1
  3486  1316                     u5755:
  3487  1316  1003               	clrc
  3488  1317  0DC8               	rlf	??_fround+2,f
  3489  1318  3EFF               	addlw	-1
  3490  1319  1D03               	skipz
  3491  131A  2B16               	goto	u5755
  3492  131B  1003               	clrc
  3493  131C  0D48               	rlf	??_fround+2,w
  3494  131D  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3495  131E  0084               	movwf	4
  3496  131F  160A  158A  2000  160A  118A  	fcall	stringdir
  3497  1324  00C9               	movwf	??_fround+3
  3498  1325  160A  158A  2000  160A  118A  	fcall	stringdir
  3499  132A  00CA               	movwf	??_fround+4
  3500  132B  160A  158A  2000  160A  118A  	fcall	stringdir
  3501  1330  00CB               	movwf	??_fround+5
  3502  1331  160A  158A  2000  160A  118A  	fcall	stringdir
  3503  1336  00CC               	movwf	??_fround+6
  3504  1337  084C               	movf	??_fround+6,w
  3505  1338  00AF               	movwf	___flmul@a+3
  3506  1339  084B               	movf	??_fround+5,w
  3507  133A  00AE               	movwf	___flmul@a+2
  3508  133B  084A               	movf	??_fround+4,w
  3509  133C  00AD               	movwf	___flmul@a+1
  3510  133D  0849               	movf	??_fround+3,w
  3511  133E  00AC               	movwf	___flmul@a
  3512  133F  120A  158A  213C  160A  118A  	fcall	___flmul
  3513  1344  1283               	bcf	3,5	;RP0=0, select bank0
  3514  1345  1303               	bcf	3,6	;RP1=0, select bank0
  3515  1346  082B               	movf	?___flmul+3,w
  3516  1347  00D4               	movwf	_fround$1074+3
  3517  1348  082A               	movf	?___flmul+2,w
  3518  1349  00D3               	movwf	_fround$1074+2
  3519  134A  0829               	movf	?___flmul+1,w
  3520  134B  00D2               	movwf	_fround$1074+1
  3521  134C  0828               	movf	?___flmul,w
  3522  134D  00D1               	movwf	_fround$1074
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3525  134E  300A               	movlw	10
  3526  134F  00A0               	movwf	___lwdiv@divisor
  3527  1350  3000               	movlw	0
  3528  1351  00A1               	movwf	___lwdiv@divisor+1
  3529  1352  0855               	movf	fround@prec,w
  3530  1353  00C6               	movwf	??_fround
  3531  1354  01C7               	clrf	??_fround+1
  3532  1355  0846               	movf	??_fround,w
  3533  1356  00F4               	movwf	___lwmod@dividend
  3534  1357  0847               	movf	??_fround+1,w
  3535  1358  00F5               	movwf	___lwmod@dividend+1
  3536  1359  3064               	movlw	100
  3537  135A  00F2               	movwf	___lwmod@divisor
  3538  135B  3000               	movlw	0
  3539  135C  00F3               	movwf	___lwmod@divisor+1
  3540  135D  160A  158A  254D  160A  118A  	fcall	___lwmod
  3541  1362  0873               	movf	?___lwmod+1,w
  3542  1363  1283               	bcf	3,5	;RP0=0, select bank0
  3543  1364  1303               	bcf	3,6	;RP1=0, select bank0
  3544  1365  00A3               	movwf	___lwdiv@dividend+1
  3545  1366  0872               	movf	?___lwmod,w
  3546  1367  00A2               	movwf	___lwdiv@dividend
  3547  1368  160A  158A  2587  160A  118A  	fcall	___lwdiv
  3548  136D  1283               	bcf	3,5	;RP0=0, select bank0
  3549  136E  1303               	bcf	3,6	;RP1=0, select bank0
  3550  136F  0820               	movf	?___lwdiv,w
  3551  1370  00C8               	movwf	??_fround+2
  3552  1371  3001               	movlw	1
  3553  1372                     u5765:
  3554  1372  1003               	clrc
  3555  1373  0DC8               	rlf	??_fround+2,f
  3556  1374  3EFF               	addlw	-1
  3557  1375  1D03               	skipz
  3558  1376  2B72               	goto	u5765
  3559  1377  1003               	clrc
  3560  1378  0D48               	rlf	??_fround+2,w
  3561  1379  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3562  137A  0084               	movwf	4
  3563  137B  160A  158A  2000  160A  118A  	fcall	stringdir
  3564  1380  00C9               	movwf	??_fround+3
  3565  1381  160A  158A  2000  160A  118A  	fcall	stringdir
  3566  1386  00CA               	movwf	??_fround+4
  3567  1387  160A  158A  2000  160A  118A  	fcall	stringdir
  3568  138C  00CB               	movwf	??_fround+5
  3569  138D  160A  158A  2000  160A  118A  	fcall	stringdir
  3570  1392  00CC               	movwf	??_fround+6
  3571  1393  084C               	movf	??_fround+6,w
  3572  1394  00AB               	movwf	___flmul@b+3
  3573  1395  084B               	movf	??_fround+5,w
  3574  1396  00AA               	movwf	___flmul@b+2
  3575  1397  084A               	movf	??_fround+4,w
  3576  1398  00A9               	movwf	___flmul@b+1
  3577  1399  0849               	movf	??_fround+3,w
  3578  139A  00A8               	movwf	___flmul@b
  3579  139B  0854               	movf	_fround$1074+3,w
  3580  139C  00AF               	movwf	___flmul@a+3
  3581  139D  0853               	movf	_fround$1074+2,w
  3582  139E  00AE               	movwf	___flmul@a+2
  3583  139F  0852               	movf	_fround$1074+1,w
  3584  13A0  00AD               	movwf	___flmul@a+1
  3585  13A1  0851               	movf	_fround$1074,w
  3586  13A2  00AC               	movwf	___flmul@a
  3587  13A3  120A  158A  213C  160A  118A  	fcall	___flmul
  3588  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  3589  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  3590  13AA  082B               	movf	?___flmul+3,w
  3591  13AB  00D0               	movwf	_fround$1075+3
  3592  13AC  082A               	movf	?___flmul+2,w
  3593  13AD  00CF               	movwf	_fround$1075+2
  3594  13AE  0829               	movf	?___flmul+1,w
  3595  13AF  00CE               	movwf	_fround$1075+1
  3596  13B0  0828               	movf	?___flmul,w
  3597  13B1  00CD               	movwf	_fround$1075
  3598                           
  3599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3600  13B2  300A               	movlw	10
  3601  13B3  00F2               	movwf	___lwmod@divisor
  3602  13B4  3000               	movlw	0
  3603  13B5  00F3               	movwf	___lwmod@divisor+1
  3604  13B6  0855               	movf	fround@prec,w
  3605  13B7  00C6               	movwf	??_fround
  3606  13B8  01C7               	clrf	??_fround+1
  3607  13B9  0846               	movf	??_fround,w
  3608  13BA  00F4               	movwf	___lwmod@dividend
  3609  13BB  0847               	movf	??_fround+1,w
  3610  13BC  00F5               	movwf	___lwmod@dividend+1
  3611  13BD  160A  158A  254D  160A  118A  	fcall	___lwmod
  3612  13C2  0872               	movf	?___lwmod,w
  3613  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  3614  13C4  1303               	bcf	3,6	;RP1=0, select bank0
  3615  13C5  00C8               	movwf	??_fround+2
  3616  13C6  3001               	movlw	1
  3617  13C7                     u5775:
  3618  13C7  1003               	clrc
  3619  13C8  0DC8               	rlf	??_fround+2,f
  3620  13C9  3EFF               	addlw	-1
  3621  13CA  1D03               	skipz
  3622  13CB  2BC7               	goto	u5775
  3623  13CC  1003               	clrc
  3624  13CD  0D48               	rlf	??_fround+2,w
  3625  13CE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3626  13CF  0084               	movwf	4
  3627  13D0  160A  158A  2000  160A  118A  	fcall	stringdir
  3628  13D5  00C9               	movwf	??_fround+3
  3629  13D6  160A  158A  2000  160A  118A  	fcall	stringdir
  3630  13DB  00CA               	movwf	??_fround+4
  3631  13DC  160A  158A  2000  160A  118A  	fcall	stringdir
  3632  13E1  00CB               	movwf	??_fround+5
  3633  13E2  160A  158A  2000  160A  118A  	fcall	stringdir
  3634  13E7  00CC               	movwf	??_fround+6
  3635  13E8  084C               	movf	??_fround+6,w
  3636  13E9  00AB               	movwf	___flmul@b+3
  3637  13EA  084B               	movf	??_fround+5,w
  3638  13EB  00AA               	movwf	___flmul@b+2
  3639  13EC  084A               	movf	??_fround+4,w
  3640  13ED  00A9               	movwf	___flmul@b+1
  3641  13EE  0849               	movf	??_fround+3,w
  3642  13EF  00A8               	movwf	___flmul@b
  3643  13F0  0850               	movf	_fround$1075+3,w
  3644  13F1  00AF               	movwf	___flmul@a+3
  3645  13F2  084F               	movf	_fround$1075+2,w
  3646  13F3  00AE               	movwf	___flmul@a+2
  3647  13F4  084E               	movf	_fround$1075+1,w
  3648  13F5  00AD               	movwf	___flmul@a+1
  3649  13F6  084D               	movf	_fround$1075,w
  3650  13F7  00AC               	movwf	___flmul@a
  3651  13F8  120A  158A  213C  160A  118A  	fcall	___flmul
  3652  13FD  1283               	bcf	3,5	;RP0=0, select bank0
  3653  13FE  1303               	bcf	3,6	;RP1=0, select bank0
  3654  13FF  082B               	movf	?___flmul+3,w
  3655  1400  00C5               	movwf	?_fround+3
  3656  1401  082A               	movf	?___flmul+2,w
  3657  1402  00C4               	movwf	?_fround+2
  3658  1403  0829               	movf	?___flmul+1,w
  3659  1404  00C3               	movwf	?_fround+1
  3660  1405  0828               	movf	?___flmul,w
  3661  1406  00C2               	movwf	?_fround
  3662  1407  2CFC               	goto	l224
  3663  1408                     l3513:
  3664  1408  300B               	movlw	11
  3665  1409  0255               	subwf	fround@prec,w
  3666  140A  1C03               	skipc
  3667  140B  2C0D               	goto	u5781
  3668  140C  2C0E               	goto	u5780
  3669  140D                     u5781:
  3670  140D  2CB9               	goto	l3519
  3671  140E                     u5780:
  3672  140E                     l3515:
  3673                           
  3674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3675  140E  303F               	movlw	63
  3676  140F  00AB               	movwf	___flmul@b+3
  3677  1410  3000               	movlw	0
  3678  1411  00AA               	movwf	___flmul@b+2
  3679  1412  3000               	movlw	0
  3680  1413  00A9               	movwf	___flmul@b+1
  3681  1414  3000               	movlw	0
  3682  1415  00A8               	movwf	___flmul@b
  3683  1416  300A               	movlw	10
  3684  1417  00A0               	movwf	___lwdiv@divisor
  3685  1418  3000               	movlw	0
  3686  1419  00A1               	movwf	___lwdiv@divisor+1
  3687  141A  0855               	movf	fround@prec,w
  3688  141B  00C6               	movwf	??_fround
  3689  141C  01C7               	clrf	??_fround+1
  3690  141D  0846               	movf	??_fround,w
  3691  141E  00A2               	movwf	___lwdiv@dividend
  3692  141F  0847               	movf	??_fround+1,w
  3693  1420  00A3               	movwf	___lwdiv@dividend+1
  3694  1421  160A  158A  2587  160A  118A  	fcall	___lwdiv
  3695  1426  1283               	bcf	3,5	;RP0=0, select bank0
  3696  1427  1303               	bcf	3,6	;RP1=0, select bank0
  3697  1428  0820               	movf	?___lwdiv,w
  3698  1429  00C8               	movwf	??_fround+2
  3699  142A  3001               	movlw	1
  3700  142B                     u5795:
  3701  142B  1003               	clrc
  3702  142C  0DC8               	rlf	??_fround+2,f
  3703  142D  3EFF               	addlw	-1
  3704  142E  1D03               	skipz
  3705  142F  2C2B               	goto	u5795
  3706  1430  1003               	clrc
  3707  1431  0D48               	rlf	??_fround+2,w
  3708  1432  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3709  1433  0084               	movwf	4
  3710  1434  160A  158A  2000  160A  118A  	fcall	stringdir
  3711  1439  00C9               	movwf	??_fround+3
  3712  143A  160A  158A  2000  160A  118A  	fcall	stringdir
  3713  143F  00CA               	movwf	??_fround+4
  3714  1440  160A  158A  2000  160A  118A  	fcall	stringdir
  3715  1445  00CB               	movwf	??_fround+5
  3716  1446  160A  158A  2000  160A  118A  	fcall	stringdir
  3717  144B  00CC               	movwf	??_fround+6
  3718  144C  084C               	movf	??_fround+6,w
  3719  144D  00AF               	movwf	___flmul@a+3
  3720  144E  084B               	movf	??_fround+5,w
  3721  144F  00AE               	movwf	___flmul@a+2
  3722  1450  084A               	movf	??_fround+4,w
  3723  1451  00AD               	movwf	___flmul@a+1
  3724  1452  0849               	movf	??_fround+3,w
  3725  1453  00AC               	movwf	___flmul@a
  3726  1454  120A  158A  213C  160A  118A  	fcall	___flmul
  3727  1459  1283               	bcf	3,5	;RP0=0, select bank0
  3728  145A  1303               	bcf	3,6	;RP1=0, select bank0
  3729  145B  082B               	movf	?___flmul+3,w
  3730  145C  00D4               	movwf	_fround$1074+3
  3731  145D  082A               	movf	?___flmul+2,w
  3732  145E  00D3               	movwf	_fround$1074+2
  3733  145F  0829               	movf	?___flmul+1,w
  3734  1460  00D2               	movwf	_fround$1074+1
  3735  1461  0828               	movf	?___flmul,w
  3736  1462  00D1               	movwf	_fround$1074
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3739  1463  300A               	movlw	10
  3740  1464  00F2               	movwf	___lwmod@divisor
  3741  1465  3000               	movlw	0
  3742  1466  00F3               	movwf	___lwmod@divisor+1
  3743  1467  0855               	movf	fround@prec,w
  3744  1468  00C6               	movwf	??_fround
  3745  1469  01C7               	clrf	??_fround+1
  3746  146A  0846               	movf	??_fround,w
  3747  146B  00F4               	movwf	___lwmod@dividend
  3748  146C  0847               	movf	??_fround+1,w
  3749  146D  00F5               	movwf	___lwmod@dividend+1
  3750  146E  160A  158A  254D  160A  118A  	fcall	___lwmod
  3751  1473  0872               	movf	?___lwmod,w
  3752  1474  1283               	bcf	3,5	;RP0=0, select bank0
  3753  1475  1303               	bcf	3,6	;RP1=0, select bank0
  3754  1476  00C8               	movwf	??_fround+2
  3755  1477  3001               	movlw	1
  3756  1478                     u5805:
  3757  1478  1003               	clrc
  3758  1479  0DC8               	rlf	??_fround+2,f
  3759  147A  3EFF               	addlw	-1
  3760  147B  1D03               	skipz
  3761  147C  2C78               	goto	u5805
  3762  147D  1003               	clrc
  3763  147E  0D48               	rlf	??_fround+2,w
  3764  147F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3765  1480  0084               	movwf	4
  3766  1481  160A  158A  2000  160A  118A  	fcall	stringdir
  3767  1486  00C9               	movwf	??_fround+3
  3768  1487  160A  158A  2000  160A  118A  	fcall	stringdir
  3769  148C  00CA               	movwf	??_fround+4
  3770  148D  160A  158A  2000  160A  118A  	fcall	stringdir
  3771  1492  00CB               	movwf	??_fround+5
  3772  1493  160A  158A  2000  160A  118A  	fcall	stringdir
  3773  1498  00CC               	movwf	??_fround+6
  3774  1499  084C               	movf	??_fround+6,w
  3775  149A  00AB               	movwf	___flmul@b+3
  3776  149B  084B               	movf	??_fround+5,w
  3777  149C  00AA               	movwf	___flmul@b+2
  3778  149D  084A               	movf	??_fround+4,w
  3779  149E  00A9               	movwf	___flmul@b+1
  3780  149F  0849               	movf	??_fround+3,w
  3781  14A0  00A8               	movwf	___flmul@b
  3782  14A1  0854               	movf	_fround$1074+3,w
  3783  14A2  00AF               	movwf	___flmul@a+3
  3784  14A3  0853               	movf	_fround$1074+2,w
  3785  14A4  00AE               	movwf	___flmul@a+2
  3786  14A5  0852               	movf	_fround$1074+1,w
  3787  14A6  00AD               	movwf	___flmul@a+1
  3788  14A7  0851               	movf	_fround$1074,w
  3789  14A8  00AC               	movwf	___flmul@a
  3790  14A9  120A  158A  213C  160A  118A  	fcall	___flmul
  3791  14AE  1283               	bcf	3,5	;RP0=0, select bank0
  3792  14AF  1303               	bcf	3,6	;RP1=0, select bank0
  3793  14B0  082B               	movf	?___flmul+3,w
  3794  14B1  00C5               	movwf	?_fround+3
  3795  14B2  082A               	movf	?___flmul+2,w
  3796  14B3  00C4               	movwf	?_fround+2
  3797  14B4  0829               	movf	?___flmul+1,w
  3798  14B5  00C3               	movwf	?_fround+1
  3799  14B6  0828               	movf	?___flmul,w
  3800  14B7  00C2               	movwf	?_fround
  3801  14B8  2CFC               	goto	l224
  3802  14B9                     l3519:
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3805  14B9  303F               	movlw	63
  3806  14BA  00AB               	movwf	___flmul@b+3
  3807  14BB  3000               	movlw	0
  3808  14BC  00AA               	movwf	___flmul@b+2
  3809  14BD  3000               	movlw	0
  3810  14BE  00A9               	movwf	___flmul@b+1
  3811  14BF  3000               	movlw	0
  3812  14C0  00A8               	movwf	___flmul@b
  3813  14C1  0855               	movf	fround@prec,w
  3814  14C2  00C6               	movwf	??_fround
  3815  14C3  3001               	movlw	1
  3816  14C4                     u5815:
  3817  14C4  1003               	clrc
  3818  14C5  0DC6               	rlf	??_fround,f
  3819  14C6  3EFF               	addlw	-1
  3820  14C7  1D03               	skipz
  3821  14C8  2CC4               	goto	u5815
  3822  14C9  1003               	clrc
  3823  14CA  0D46               	rlf	??_fround,w
  3824  14CB  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3825  14CC  0084               	movwf	4
  3826  14CD  160A  158A  2000  160A  118A  	fcall	stringdir
  3827  14D2  00C7               	movwf	??_fround+1
  3828  14D3  160A  158A  2000  160A  118A  	fcall	stringdir
  3829  14D8  00C8               	movwf	??_fround+2
  3830  14D9  160A  158A  2000  160A  118A  	fcall	stringdir
  3831  14DE  00C9               	movwf	??_fround+3
  3832  14DF  160A  158A  2000  160A  118A  	fcall	stringdir
  3833  14E4  00CA               	movwf	??_fround+4
  3834  14E5  084A               	movf	??_fround+4,w
  3835  14E6  00AF               	movwf	___flmul@a+3
  3836  14E7  0849               	movf	??_fround+3,w
  3837  14E8  00AE               	movwf	___flmul@a+2
  3838  14E9  0848               	movf	??_fround+2,w
  3839  14EA  00AD               	movwf	___flmul@a+1
  3840  14EB  0847               	movf	??_fround+1,w
  3841  14EC  00AC               	movwf	___flmul@a
  3842  14ED  120A  158A  213C  160A  118A  	fcall	___flmul
  3843  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  3844  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  3845  14F4  082B               	movf	?___flmul+3,w
  3846  14F5  00C5               	movwf	?_fround+3
  3847  14F6  082A               	movf	?___flmul+2,w
  3848  14F7  00C4               	movwf	?_fround+2
  3849  14F8  0829               	movf	?___flmul+1,w
  3850  14F9  00C3               	movwf	?_fround+1
  3851  14FA  0828               	movf	?___flmul,w
  3852  14FB  00C2               	movwf	?_fround
  3853  14FC                     l224:
  3854  14FC  0008               	return
  3855  14FD                     __end_of_fround:
  3856                           
  3857                           	psect	text7
  3858  1D4D                     __ptext7:	
  3859 ;; *************** function ___lwmod *****************
  3860 ;; Defined at:
  3861 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  divisor         2    2[COMMON] unsigned int 
  3864 ;;  dividend        2    4[COMMON] unsigned int 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  counter         1    7[COMMON] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  2    2[COMMON] unsigned int 
  3869 ;; Registers used:
  3870 ;;		wreg, status,2, status,0
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3876 ;;      Params:         4       0       0       0       0
  3877 ;;      Locals:         1       0       0       0       0
  3878 ;;      Temps:          1       0       0       0       0
  3879 ;;      Totals:         6       0       0       0       0
  3880 ;;Total ram usage:        6 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    1
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_fround
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function ___lwmod
  3892  1D4D                     ___lwmod:
  3893  1D4D                     l2321:	
  3894                           ;incstack = 0
  3895                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3896                           
  3897  1D4D  0872               	movf	___lwmod@divisor,w
  3898  1D4E  0473               	iorwf	___lwmod@divisor+1,w
  3899  1D4F  1903               	btfsc	3,2
  3900  1D50  2D52               	goto	u3131
  3901  1D51  2D53               	goto	u3130
  3902  1D52                     u3131:
  3903  1D52  2D82               	goto	l2339
  3904  1D53                     u3130:
  3905  1D53                     l2323:
  3906  1D53  01F7               	clrf	___lwmod@counter
  3907  1D54  0AF7               	incf	___lwmod@counter,f
  3908  1D55  2D61               	goto	l2329
  3909  1D56                     l2325:
  3910  1D56  3001               	movlw	1
  3911  1D57                     u3145:
  3912  1D57  1003               	clrc
  3913  1D58  0DF2               	rlf	___lwmod@divisor,f
  3914  1D59  0DF3               	rlf	___lwmod@divisor+1,f
  3915  1D5A  3EFF               	addlw	-1
  3916  1D5B  1D03               	skipz
  3917  1D5C  2D57               	goto	u3145
  3918  1D5D                     l2327:
  3919  1D5D  3001               	movlw	1
  3920  1D5E  00F6               	movwf	??___lwmod
  3921  1D5F  0876               	movf	??___lwmod,w
  3922  1D60  07F7               	addwf	___lwmod@counter,f
  3923  1D61                     l2329:
  3924  1D61  1FF3               	btfss	___lwmod@divisor+1,7
  3925  1D62  2D64               	goto	u3151
  3926  1D63  2D65               	goto	u3150
  3927  1D64                     u3151:
  3928  1D64  2D56               	goto	l2325
  3929  1D65                     u3150:
  3930  1D65                     l2331:
  3931  1D65  0873               	movf	___lwmod@divisor+1,w
  3932  1D66  0275               	subwf	___lwmod@dividend+1,w
  3933  1D67  1D03               	skipz
  3934  1D68  2D6B               	goto	u3165
  3935  1D69  0872               	movf	___lwmod@divisor,w
  3936  1D6A  0274               	subwf	___lwmod@dividend,w
  3937  1D6B                     u3165:
  3938  1D6B  1C03               	skipc
  3939  1D6C  2D6E               	goto	u3161
  3940  1D6D  2D6F               	goto	u3160
  3941  1D6E                     u3161:
  3942  1D6E  2D75               	goto	l2335
  3943  1D6F                     u3160:
  3944  1D6F                     l2333:
  3945  1D6F  0872               	movf	___lwmod@divisor,w
  3946  1D70  02F4               	subwf	___lwmod@dividend,f
  3947  1D71  0873               	movf	___lwmod@divisor+1,w
  3948  1D72  1C03               	skipc
  3949  1D73  03F5               	decf	___lwmod@dividend+1,f
  3950  1D74  02F5               	subwf	___lwmod@dividend+1,f
  3951  1D75                     l2335:
  3952  1D75  3001               	movlw	1
  3953  1D76                     u3175:
  3954  1D76  1003               	clrc
  3955  1D77  0CF3               	rrf	___lwmod@divisor+1,f
  3956  1D78  0CF2               	rrf	___lwmod@divisor,f
  3957  1D79  3EFF               	addlw	-1
  3958  1D7A  1D03               	skipz
  3959  1D7B  2D76               	goto	u3175
  3960  1D7C                     l2337:
  3961  1D7C  3001               	movlw	1
  3962  1D7D  02F7               	subwf	___lwmod@counter,f
  3963  1D7E  1D03               	btfss	3,2
  3964  1D7F  2D81               	goto	u3181
  3965  1D80  2D82               	goto	u3180
  3966  1D81                     u3181:
  3967  1D81  2D65               	goto	l2331
  3968  1D82                     u3180:
  3969  1D82                     l2339:
  3970  1D82  0875               	movf	___lwmod@dividend+1,w
  3971  1D83  00F3               	movwf	?___lwmod+1
  3972  1D84  0874               	movf	___lwmod@dividend,w
  3973  1D85  00F2               	movwf	?___lwmod
  3974  1D86                     l652:
  3975  1D86  0008               	return
  3976  1D87                     __end_of___lwmod:
  3977                           
  3978                           	psect	text8
  3979  1D87                     __ptext8:	
  3980 ;; *************** function ___lwdiv *****************
  3981 ;; Defined at:
  3982 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  divisor         2    0[BANK0 ] unsigned int 
  3985 ;;  dividend        2    2[BANK0 ] unsigned int 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  quotient        2    5[BANK0 ] unsigned int 
  3988 ;;  counter         1    4[BANK0 ] unsigned char 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2    0[BANK0 ] unsigned int 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3998 ;;      Params:         0       4       0       0       0
  3999 ;;      Locals:         0       3       0       0       0
  4000 ;;      Temps:          1       0       0       0       0
  4001 ;;      Totals:         1       7       0       0       0
  4002 ;;Total ram usage:        8 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    1
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_fround
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           
  4013                           ;psect for function ___lwdiv
  4014  1D87                     ___lwdiv:
  4015  1D87                     l3479:	
  4016                           ;incstack = 0
  4017                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4018                           
  4019  1D87  1283               	bcf	3,5	;RP0=0, select bank0
  4020  1D88  1303               	bcf	3,6	;RP1=0, select bank0
  4021  1D89  01A5               	clrf	___lwdiv@quotient
  4022  1D8A  01A6               	clrf	___lwdiv@quotient+1
  4023  1D8B                     l3481:
  4024  1D8B  0820               	movf	___lwdiv@divisor,w
  4025  1D8C  0421               	iorwf	___lwdiv@divisor+1,w
  4026  1D8D  1903               	btfsc	3,2
  4027  1D8E  2D90               	goto	u5671
  4028  1D8F  2D91               	goto	u5670
  4029  1D90                     u5671:
  4030  1D90  2DC8               	goto	l3501
  4031  1D91                     u5670:
  4032  1D91                     l3483:
  4033  1D91  01A4               	clrf	___lwdiv@counter
  4034  1D92  0AA4               	incf	___lwdiv@counter,f
  4035  1D93  2D9F               	goto	l3489
  4036  1D94                     l3485:
  4037  1D94  3001               	movlw	1
  4038  1D95                     u5685:
  4039  1D95  1003               	clrc
  4040  1D96  0DA0               	rlf	___lwdiv@divisor,f
  4041  1D97  0DA1               	rlf	___lwdiv@divisor+1,f
  4042  1D98  3EFF               	addlw	-1
  4043  1D99  1D03               	skipz
  4044  1D9A  2D95               	goto	u5685
  4045  1D9B                     l3487:
  4046  1D9B  3001               	movlw	1
  4047  1D9C  00F8               	movwf	??___lwdiv
  4048  1D9D  0878               	movf	??___lwdiv,w
  4049  1D9E  07A4               	addwf	___lwdiv@counter,f
  4050  1D9F                     l3489:
  4051  1D9F  1FA1               	btfss	___lwdiv@divisor+1,7
  4052  1DA0  2DA2               	goto	u5691
  4053  1DA1  2DA3               	goto	u5690
  4054  1DA2                     u5691:
  4055  1DA2  2D94               	goto	l3485
  4056  1DA3                     u5690:
  4057  1DA3                     l3491:
  4058  1DA3  3001               	movlw	1
  4059  1DA4                     u5705:
  4060  1DA4  1003               	clrc
  4061  1DA5  0DA5               	rlf	___lwdiv@quotient,f
  4062  1DA6  0DA6               	rlf	___lwdiv@quotient+1,f
  4063  1DA7  3EFF               	addlw	-1
  4064  1DA8  1D03               	skipz
  4065  1DA9  2DA4               	goto	u5705
  4066  1DAA  0821               	movf	___lwdiv@divisor+1,w
  4067  1DAB  0223               	subwf	___lwdiv@dividend+1,w
  4068  1DAC  1D03               	skipz
  4069  1DAD  2DB0               	goto	u5715
  4070  1DAE  0820               	movf	___lwdiv@divisor,w
  4071  1DAF  0222               	subwf	___lwdiv@dividend,w
  4072  1DB0                     u5715:
  4073  1DB0  1C03               	skipc
  4074  1DB1  2DB3               	goto	u5711
  4075  1DB2  2DB4               	goto	u5710
  4076  1DB3                     u5711:
  4077  1DB3  2DBB               	goto	l3497
  4078  1DB4                     u5710:
  4079  1DB4                     l3493:
  4080  1DB4  0820               	movf	___lwdiv@divisor,w
  4081  1DB5  02A2               	subwf	___lwdiv@dividend,f
  4082  1DB6  0821               	movf	___lwdiv@divisor+1,w
  4083  1DB7  1C03               	skipc
  4084  1DB8  03A3               	decf	___lwdiv@dividend+1,f
  4085  1DB9  02A3               	subwf	___lwdiv@dividend+1,f
  4086  1DBA                     l3495:
  4087  1DBA  1425               	bsf	___lwdiv@quotient,0
  4088  1DBB                     l3497:
  4089  1DBB  3001               	movlw	1
  4090  1DBC                     u5725:
  4091  1DBC  1003               	clrc
  4092  1DBD  0CA1               	rrf	___lwdiv@divisor+1,f
  4093  1DBE  0CA0               	rrf	___lwdiv@divisor,f
  4094  1DBF  3EFF               	addlw	-1
  4095  1DC0  1D03               	skipz
  4096  1DC1  2DBC               	goto	u5725
  4097  1DC2                     l3499:
  4098  1DC2  3001               	movlw	1
  4099  1DC3  02A4               	subwf	___lwdiv@counter,f
  4100  1DC4  1D03               	btfss	3,2
  4101  1DC5  2DC7               	goto	u5731
  4102  1DC6  2DC8               	goto	u5730
  4103  1DC7                     u5731:
  4104  1DC7  2DA3               	goto	l3491
  4105  1DC8                     u5730:
  4106  1DC8                     l3501:
  4107  1DC8  0826               	movf	___lwdiv@quotient+1,w
  4108  1DC9  00A1               	movwf	?___lwdiv+1
  4109  1DCA  0825               	movf	___lwdiv@quotient,w
  4110  1DCB  00A0               	movwf	?___lwdiv
  4111  1DCC                     l642:
  4112  1DCC  0008               	return
  4113  1DCD                     __end_of___lwdiv:
  4114                           
  4115                           	psect	text9
  4116  093C                     __ptext9:	
  4117 ;; *************** function ___flmul *****************
  4118 ;; Defined at:
  4119 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  b               4    8[BANK0 ] unsigned int 
  4122 ;;  a               4   12[BANK0 ] unsigned int 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  prod            4   28[BANK0 ] struct .
  4125 ;;  grs             4   22[BANK0 ] unsigned long 
  4126 ;;  temp            2   32[BANK0 ] struct .
  4127 ;;  bexp            1   27[BANK0 ] unsigned char 
  4128 ;;  aexp            1   26[BANK0 ] unsigned char 
  4129 ;;  sign            1   21[BANK0 ] unsigned char 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  4    8[BANK0 ] unsigned char 
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4139 ;;      Params:         0       8       0       0       0
  4140 ;;      Locals:         0      13       0       0       0
  4141 ;;      Temps:          0       5       0       0       0
  4142 ;;      Totals:         0      26       0       0       0
  4143 ;;Total ram usage:       26 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    2
  4146 ;; This function calls:
  4147 ;;		__Umul8_16
  4148 ;; This function is called by:
  4149 ;;		_fround
  4150 ;;		_scale
  4151 ;;		_sprintf
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           
  4156                           ;psect for function ___flmul
  4157  093C                     ___flmul:
  4158  093C                     l2537:	
  4159                           ;incstack = 0
  4160                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4161                           
  4162  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4163  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4164  093E  082B               	movf	___flmul@b+3,w
  4165  093F  3980               	andlw	128
  4166  0940  00B0               	movwf	??___flmul
  4167  0941  0830               	movf	??___flmul,w
  4168  0942  00B5               	movwf	___flmul@sign
  4169  0943                     l2539:
  4170  0943  082B               	movf	___flmul@b+3,w
  4171  0944  00B0               	movwf	??___flmul
  4172  0945  0730               	addwf	??___flmul,w
  4173  0946  00B1               	movwf	??___flmul+1
  4174  0947  0831               	movf	??___flmul+1,w
  4175  0948  00BB               	movwf	___flmul@bexp
  4176  0949                     l2541:
  4177  0949  1FAA               	btfss	___flmul@b+2,7
  4178  094A  294C               	goto	u3651
  4179  094B  294D               	goto	u3650
  4180  094C                     u3651:
  4181  094C  294E               	goto	l2545
  4182  094D                     u3650:
  4183  094D                     l2543:
  4184  094D  143B               	bsf	___flmul@bexp,0
  4185  094E                     l2545:
  4186  094E  083B               	movf	___flmul@bexp,w
  4187  094F  1903               	btfsc	3,2
  4188  0950  2952               	goto	u3661
  4189  0951  2953               	goto	u3660
  4190  0952                     u3661:
  4191  0952  2962               	goto	l2553
  4192  0953                     u3660:
  4193  0953                     l2547:
  4194  0953  0A3B               	incf	___flmul@bexp,w
  4195  0954  1D03               	btfss	3,2
  4196  0955  2957               	goto	u3671
  4197  0956  2958               	goto	u3670
  4198  0957                     u3671:
  4199  0957  2960               	goto	l2551
  4200  0958                     u3670:
  4201  0958                     l2549:
  4202  0958  3000               	movlw	0
  4203  0959  00AB               	movwf	___flmul@b+3
  4204  095A  3000               	movlw	0
  4205  095B  00AA               	movwf	___flmul@b+2
  4206  095C  3000               	movlw	0
  4207  095D  00A9               	movwf	___flmul@b+1
  4208  095E  3000               	movlw	0
  4209  095F  00A8               	movwf	___flmul@b
  4210  0960                     l2551:
  4211  0960  17AA               	bsf	___flmul@b+2,7
  4212  0961  296A               	goto	l2555
  4213  0962                     l2553:
  4214  0962  3000               	movlw	0
  4215  0963  00AB               	movwf	___flmul@b+3
  4216  0964  3000               	movlw	0
  4217  0965  00AA               	movwf	___flmul@b+2
  4218  0966  3000               	movlw	0
  4219  0967  00A9               	movwf	___flmul@b+1
  4220  0968  3000               	movlw	0
  4221  0969  00A8               	movwf	___flmul@b
  4222  096A                     l2555:
  4223  096A  082F               	movf	___flmul@a+3,w
  4224  096B  3980               	andlw	128
  4225  096C  00B0               	movwf	??___flmul
  4226  096D  0830               	movf	??___flmul,w
  4227  096E  06B5               	xorwf	___flmul@sign,f
  4228  096F                     l2557:
  4229  096F  082F               	movf	___flmul@a+3,w
  4230  0970  00B0               	movwf	??___flmul
  4231  0971  0730               	addwf	??___flmul,w
  4232  0972  00B1               	movwf	??___flmul+1
  4233  0973  0831               	movf	??___flmul+1,w
  4234  0974  00BA               	movwf	___flmul@aexp
  4235  0975                     l2559:
  4236  0975  1FAE               	btfss	___flmul@a+2,7
  4237  0976  2978               	goto	u3681
  4238  0977  2979               	goto	u3680
  4239  0978                     u3681:
  4240  0978  297A               	goto	l2563
  4241  0979                     u3680:
  4242  0979                     l2561:
  4243  0979  143A               	bsf	___flmul@aexp,0
  4244  097A                     l2563:
  4245  097A  083A               	movf	___flmul@aexp,w
  4246  097B  1903               	btfsc	3,2
  4247  097C  297E               	goto	u3691
  4248  097D  297F               	goto	u3690
  4249  097E                     u3691:
  4250  097E  298E               	goto	l2571
  4251  097F                     u3690:
  4252  097F                     l2565:
  4253  097F  0A3A               	incf	___flmul@aexp,w
  4254  0980  1D03               	btfss	3,2
  4255  0981  2983               	goto	u3701
  4256  0982  2984               	goto	u3700
  4257  0983                     u3701:
  4258  0983  298C               	goto	l2569
  4259  0984                     u3700:
  4260  0984                     l2567:
  4261  0984  3000               	movlw	0
  4262  0985  00AF               	movwf	___flmul@a+3
  4263  0986  3000               	movlw	0
  4264  0987  00AE               	movwf	___flmul@a+2
  4265  0988  3000               	movlw	0
  4266  0989  00AD               	movwf	___flmul@a+1
  4267  098A  3000               	movlw	0
  4268  098B  00AC               	movwf	___flmul@a
  4269  098C                     l2569:
  4270  098C  17AE               	bsf	___flmul@a+2,7
  4271  098D  2996               	goto	l2573
  4272  098E                     l2571:
  4273  098E  3000               	movlw	0
  4274  098F  00AF               	movwf	___flmul@a+3
  4275  0990  3000               	movlw	0
  4276  0991  00AE               	movwf	___flmul@a+2
  4277  0992  3000               	movlw	0
  4278  0993  00AD               	movwf	___flmul@a+1
  4279  0994  3000               	movlw	0
  4280  0995  00AC               	movwf	___flmul@a
  4281  0996                     l2573:
  4282  0996  083A               	movf	___flmul@aexp,w
  4283  0997  1903               	btfsc	3,2
  4284  0998  299A               	goto	u3711
  4285  0999  299B               	goto	u3710
  4286  099A                     u3711:
  4287  099A  29A0               	goto	l2577
  4288  099B                     u3710:
  4289  099B                     l2575:
  4290  099B  083B               	movf	___flmul@bexp,w
  4291  099C  1D03               	btfss	3,2
  4292  099D  299F               	goto	u3721
  4293  099E  29A0               	goto	u3720
  4294  099F                     u3721:
  4295  099F  29A9               	goto	l2581
  4296  09A0                     u3720:
  4297  09A0                     l2577:
  4298  09A0  3000               	movlw	0
  4299  09A1  00AB               	movwf	?___flmul+3
  4300  09A2  3000               	movlw	0
  4301  09A3  00AA               	movwf	?___flmul+2
  4302  09A4  3000               	movlw	0
  4303  09A5  00A9               	movwf	?___flmul+1
  4304  09A6  3000               	movlw	0
  4305  09A7  00A8               	movwf	?___flmul
  4306  09A8  2C9C               	goto	l759
  4307  09A9                     l2581:
  4308  09A9  0828               	movf	___flmul@b,w
  4309  09AA  00B0               	movwf	??___flmul
  4310  09AB  0830               	movf	??___flmul,w
  4311  09AC  00F2               	movwf	__Umul8_16@multiplicand
  4312  09AD  082E               	movf	___flmul@a+2,w
  4313  09AE  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4314  09B3  0873               	movf	?__Umul8_16+1,w
  4315  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4316  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4317  09B6  00C1               	movwf	___flmul@temp+1
  4318  09B7  0872               	movf	?__Umul8_16,w
  4319  09B8  00C0               	movwf	___flmul@temp
  4320  09B9                     l2583:
  4321  09B9  0840               	movf	___flmul@temp,w
  4322  09BA  00B0               	movwf	??___flmul
  4323  09BB  01B1               	clrf	??___flmul+1
  4324  09BC  01B2               	clrf	??___flmul+2
  4325  09BD  01B3               	clrf	??___flmul+3
  4326  09BE  0833               	movf	??___flmul+3,w
  4327  09BF  00B9               	movwf	___flmul@grs+3
  4328  09C0  0832               	movf	??___flmul+2,w
  4329  09C1  00B8               	movwf	___flmul@grs+2
  4330  09C2  0831               	movf	??___flmul+1,w
  4331  09C3  00B7               	movwf	___flmul@grs+1
  4332  09C4  0830               	movf	??___flmul,w
  4333  09C5  00B6               	movwf	___flmul@grs
  4334  09C6                     l2585:
  4335  09C6  0841               	movf	___flmul@temp+1,w
  4336  09C7  00B0               	movwf	??___flmul
  4337  09C8  01B1               	clrf	??___flmul+1
  4338  09C9  01B2               	clrf	??___flmul+2
  4339  09CA  01B3               	clrf	??___flmul+3
  4340  09CB  0833               	movf	??___flmul+3,w
  4341  09CC  00BF               	movwf	___flmul@prod+3
  4342  09CD  0832               	movf	??___flmul+2,w
  4343  09CE  00BE               	movwf	___flmul@prod+2
  4344  09CF  0831               	movf	??___flmul+1,w
  4345  09D0  00BD               	movwf	___flmul@prod+1
  4346  09D1  0830               	movf	??___flmul,w
  4347  09D2  00BC               	movwf	___flmul@prod
  4348  09D3  0829               	movf	___flmul@b+1,w
  4349  09D4  00B0               	movwf	??___flmul
  4350  09D5  0830               	movf	??___flmul,w
  4351  09D6  00F2               	movwf	__Umul8_16@multiplicand
  4352  09D7  082D               	movf	___flmul@a+1,w
  4353  09D8  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4354  09DD  0873               	movf	?__Umul8_16+1,w
  4355  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4356  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4357  09E0  00C1               	movwf	___flmul@temp+1
  4358  09E1  0872               	movf	?__Umul8_16,w
  4359  09E2  00C0               	movwf	___flmul@temp
  4360  09E3                     l2587:
  4361  09E3  0840               	movf	___flmul@temp,w
  4362  09E4  00B0               	movwf	??___flmul
  4363  09E5  01B1               	clrf	??___flmul+1
  4364  09E6  01B2               	clrf	??___flmul+2
  4365  09E7  01B3               	clrf	??___flmul+3
  4366  09E8  0830               	movf	??___flmul,w
  4367  09E9  07B6               	addwf	___flmul@grs,f
  4368  09EA  0831               	movf	??___flmul+1,w
  4369  09EB  1103               	clrz
  4370  09EC  1803               	skipnc
  4371  09ED  3E01               	addlw	1
  4372  09EE  1903               	skipnz
  4373  09EF  29F1               	goto	u3731
  4374  09F0  07B7               	addwf	___flmul@grs+1,f
  4375  09F1                     u3731:
  4376  09F1  0832               	movf	??___flmul+2,w
  4377  09F2  1103               	clrz
  4378  09F3  1803               	skipnc
  4379  09F4  3E01               	addlw	1
  4380  09F5  1903               	skipnz
  4381  09F6  29F8               	goto	u3732
  4382  09F7  07B8               	addwf	___flmul@grs+2,f
  4383  09F8                     u3732:
  4384  09F8  0833               	movf	??___flmul+3,w
  4385  09F9  1103               	clrz
  4386  09FA  1803               	skipnc
  4387  09FB  3E01               	addlw	1
  4388  09FC  1903               	skipnz
  4389  09FD  29FF               	goto	u3733
  4390  09FE  07B9               	addwf	___flmul@grs+3,f
  4391  09FF                     u3733:
  4392  09FF                     l2589:
  4393  09FF  0841               	movf	___flmul@temp+1,w
  4394  0A00  00B0               	movwf	??___flmul
  4395  0A01  01B1               	clrf	??___flmul+1
  4396  0A02  01B2               	clrf	??___flmul+2
  4397  0A03  01B3               	clrf	??___flmul+3
  4398  0A04  0830               	movf	??___flmul,w
  4399  0A05  07BC               	addwf	___flmul@prod,f
  4400  0A06  0831               	movf	??___flmul+1,w
  4401  0A07  1103               	clrz
  4402  0A08  1803               	skipnc
  4403  0A09  3E01               	addlw	1
  4404  0A0A  1903               	skipnz
  4405  0A0B  2A0D               	goto	u3741
  4406  0A0C  07BD               	addwf	___flmul@prod+1,f
  4407  0A0D                     u3741:
  4408  0A0D  0832               	movf	??___flmul+2,w
  4409  0A0E  1103               	clrz
  4410  0A0F  1803               	skipnc
  4411  0A10  3E01               	addlw	1
  4412  0A11  1903               	skipnz
  4413  0A12  2A14               	goto	u3742
  4414  0A13  07BE               	addwf	___flmul@prod+2,f
  4415  0A14                     u3742:
  4416  0A14  0833               	movf	??___flmul+3,w
  4417  0A15  1103               	clrz
  4418  0A16  1803               	skipnc
  4419  0A17  3E01               	addlw	1
  4420  0A18  1903               	skipnz
  4421  0A19  2A1B               	goto	u3743
  4422  0A1A  07BF               	addwf	___flmul@prod+3,f
  4423  0A1B                     u3743:
  4424  0A1B  082A               	movf	___flmul@b+2,w
  4425  0A1C  00B0               	movwf	??___flmul
  4426  0A1D  0830               	movf	??___flmul,w
  4427  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  4428  0A1F  082C               	movf	___flmul@a,w
  4429  0A20  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4430  0A25  0873               	movf	?__Umul8_16+1,w
  4431  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4432  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4433  0A28  00C1               	movwf	___flmul@temp+1
  4434  0A29  0872               	movf	?__Umul8_16,w
  4435  0A2A  00C0               	movwf	___flmul@temp
  4436  0A2B                     l2591:
  4437  0A2B  0840               	movf	___flmul@temp,w
  4438  0A2C  00B0               	movwf	??___flmul
  4439  0A2D  01B1               	clrf	??___flmul+1
  4440  0A2E  01B2               	clrf	??___flmul+2
  4441  0A2F  01B3               	clrf	??___flmul+3
  4442  0A30  0830               	movf	??___flmul,w
  4443  0A31  07B6               	addwf	___flmul@grs,f
  4444  0A32  0831               	movf	??___flmul+1,w
  4445  0A33  1103               	clrz
  4446  0A34  1803               	skipnc
  4447  0A35  3E01               	addlw	1
  4448  0A36  1903               	skipnz
  4449  0A37  2A39               	goto	u3751
  4450  0A38  07B7               	addwf	___flmul@grs+1,f
  4451  0A39                     u3751:
  4452  0A39  0832               	movf	??___flmul+2,w
  4453  0A3A  1103               	clrz
  4454  0A3B  1803               	skipnc
  4455  0A3C  3E01               	addlw	1
  4456  0A3D  1903               	skipnz
  4457  0A3E  2A40               	goto	u3752
  4458  0A3F  07B8               	addwf	___flmul@grs+2,f
  4459  0A40                     u3752:
  4460  0A40  0833               	movf	??___flmul+3,w
  4461  0A41  1103               	clrz
  4462  0A42  1803               	skipnc
  4463  0A43  3E01               	addlw	1
  4464  0A44  1903               	skipnz
  4465  0A45  2A47               	goto	u3753
  4466  0A46  07B9               	addwf	___flmul@grs+3,f
  4467  0A47                     u3753:
  4468  0A47                     l2593:
  4469  0A47  0841               	movf	___flmul@temp+1,w
  4470  0A48  00B0               	movwf	??___flmul
  4471  0A49  01B1               	clrf	??___flmul+1
  4472  0A4A  01B2               	clrf	??___flmul+2
  4473  0A4B  01B3               	clrf	??___flmul+3
  4474  0A4C  0830               	movf	??___flmul,w
  4475  0A4D  07BC               	addwf	___flmul@prod,f
  4476  0A4E  0831               	movf	??___flmul+1,w
  4477  0A4F  1103               	clrz
  4478  0A50  1803               	skipnc
  4479  0A51  3E01               	addlw	1
  4480  0A52  1903               	skipnz
  4481  0A53  2A55               	goto	u3761
  4482  0A54  07BD               	addwf	___flmul@prod+1,f
  4483  0A55                     u3761:
  4484  0A55  0832               	movf	??___flmul+2,w
  4485  0A56  1103               	clrz
  4486  0A57  1803               	skipnc
  4487  0A58  3E01               	addlw	1
  4488  0A59  1903               	skipnz
  4489  0A5A  2A5C               	goto	u3762
  4490  0A5B  07BE               	addwf	___flmul@prod+2,f
  4491  0A5C                     u3762:
  4492  0A5C  0833               	movf	??___flmul+3,w
  4493  0A5D  1103               	clrz
  4494  0A5E  1803               	skipnc
  4495  0A5F  3E01               	addlw	1
  4496  0A60  1903               	skipnz
  4497  0A61  2A63               	goto	u3763
  4498  0A62  07BF               	addwf	___flmul@prod+3,f
  4499  0A63                     u3763:
  4500  0A63                     l2595:
  4501  0A63  3008               	movlw	8
  4502  0A64  00B0               	movwf	??___flmul
  4503  0A65                     u3775:
  4504  0A65  1003               	clrc
  4505  0A66  0DB6               	rlf	___flmul@grs,f
  4506  0A67  0DB7               	rlf	___flmul@grs+1,f
  4507  0A68  0DB8               	rlf	___flmul@grs+2,f
  4508  0A69  0DB9               	rlf	___flmul@grs+3,f
  4509  0A6A  0BB0               	decfsz	??___flmul,f
  4510  0A6B  2A65               	goto	u3775
  4511  0A6C                     l2597:
  4512  0A6C  0829               	movf	___flmul@b+1,w
  4513  0A6D  00B0               	movwf	??___flmul
  4514  0A6E  0830               	movf	??___flmul,w
  4515  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  4516  0A70  082C               	movf	___flmul@a,w
  4517  0A71  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4518  0A76  0873               	movf	?__Umul8_16+1,w
  4519  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4520  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4521  0A79  00C1               	movwf	___flmul@temp+1
  4522  0A7A  0872               	movf	?__Umul8_16,w
  4523  0A7B  00C0               	movwf	___flmul@temp
  4524  0A7C                     l2599:
  4525  0A7C  0840               	movf	___flmul@temp,w
  4526  0A7D  00B0               	movwf	??___flmul
  4527  0A7E  0841               	movf	___flmul@temp+1,w
  4528  0A7F  00B1               	movwf	??___flmul+1
  4529  0A80  01B2               	clrf	??___flmul+2
  4530  0A81  01B3               	clrf	??___flmul+3
  4531  0A82  0830               	movf	??___flmul,w
  4532  0A83  07B6               	addwf	___flmul@grs,f
  4533  0A84  0831               	movf	??___flmul+1,w
  4534  0A85  1103               	clrz
  4535  0A86  1803               	skipnc
  4536  0A87  3E01               	addlw	1
  4537  0A88  1903               	skipnz
  4538  0A89  2A8B               	goto	u3781
  4539  0A8A  07B7               	addwf	___flmul@grs+1,f
  4540  0A8B                     u3781:
  4541  0A8B  0832               	movf	??___flmul+2,w
  4542  0A8C  1103               	clrz
  4543  0A8D  1803               	skipnc
  4544  0A8E  3E01               	addlw	1
  4545  0A8F  1903               	skipnz
  4546  0A90  2A92               	goto	u3782
  4547  0A91  07B8               	addwf	___flmul@grs+2,f
  4548  0A92                     u3782:
  4549  0A92  0833               	movf	??___flmul+3,w
  4550  0A93  1103               	clrz
  4551  0A94  1803               	skipnc
  4552  0A95  3E01               	addlw	1
  4553  0A96  1903               	skipnz
  4554  0A97  2A99               	goto	u3783
  4555  0A98  07B9               	addwf	___flmul@grs+3,f
  4556  0A99                     u3783:
  4557  0A99                     l2601:
  4558  0A99  0828               	movf	___flmul@b,w
  4559  0A9A  00B0               	movwf	??___flmul
  4560  0A9B  0830               	movf	??___flmul,w
  4561  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  4562  0A9D  082D               	movf	___flmul@a+1,w
  4563  0A9E  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4564  0AA3  0873               	movf	?__Umul8_16+1,w
  4565  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0AA6  00C1               	movwf	___flmul@temp+1
  4568  0AA7  0872               	movf	?__Umul8_16,w
  4569  0AA8  00C0               	movwf	___flmul@temp
  4570  0AA9                     l2603:
  4571  0AA9  0840               	movf	___flmul@temp,w
  4572  0AAA  00B0               	movwf	??___flmul
  4573  0AAB  0841               	movf	___flmul@temp+1,w
  4574  0AAC  00B1               	movwf	??___flmul+1
  4575  0AAD  01B2               	clrf	??___flmul+2
  4576  0AAE  01B3               	clrf	??___flmul+3
  4577  0AAF  0830               	movf	??___flmul,w
  4578  0AB0  07B6               	addwf	___flmul@grs,f
  4579  0AB1  0831               	movf	??___flmul+1,w
  4580  0AB2  1103               	clrz
  4581  0AB3  1803               	skipnc
  4582  0AB4  3E01               	addlw	1
  4583  0AB5  1903               	skipnz
  4584  0AB6  2AB8               	goto	u3791
  4585  0AB7  07B7               	addwf	___flmul@grs+1,f
  4586  0AB8                     u3791:
  4587  0AB8  0832               	movf	??___flmul+2,w
  4588  0AB9  1103               	clrz
  4589  0ABA  1803               	skipnc
  4590  0ABB  3E01               	addlw	1
  4591  0ABC  1903               	skipnz
  4592  0ABD  2ABF               	goto	u3792
  4593  0ABE  07B8               	addwf	___flmul@grs+2,f
  4594  0ABF                     u3792:
  4595  0ABF  0833               	movf	??___flmul+3,w
  4596  0AC0  1103               	clrz
  4597  0AC1  1803               	skipnc
  4598  0AC2  3E01               	addlw	1
  4599  0AC3  1903               	skipnz
  4600  0AC4  2AC6               	goto	u3793
  4601  0AC5  07B9               	addwf	___flmul@grs+3,f
  4602  0AC6                     u3793:
  4603  0AC6                     l2605:
  4604  0AC6  3008               	movlw	8
  4605  0AC7  00B0               	movwf	??___flmul
  4606  0AC8                     u3805:
  4607  0AC8  1003               	clrc
  4608  0AC9  0DB6               	rlf	___flmul@grs,f
  4609  0ACA  0DB7               	rlf	___flmul@grs+1,f
  4610  0ACB  0DB8               	rlf	___flmul@grs+2,f
  4611  0ACC  0DB9               	rlf	___flmul@grs+3,f
  4612  0ACD  0BB0               	decfsz	??___flmul,f
  4613  0ACE  2AC8               	goto	u3805
  4614  0ACF  0828               	movf	___flmul@b,w
  4615  0AD0  00B0               	movwf	??___flmul
  4616  0AD1  0830               	movf	??___flmul,w
  4617  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  4618  0AD3  082C               	movf	___flmul@a,w
  4619  0AD4  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4620  0AD9  0873               	movf	?__Umul8_16+1,w
  4621  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4622  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4623  0ADC  00C1               	movwf	___flmul@temp+1
  4624  0ADD  0872               	movf	?__Umul8_16,w
  4625  0ADE  00C0               	movwf	___flmul@temp
  4626  0ADF                     l2607:
  4627  0ADF  0840               	movf	___flmul@temp,w
  4628  0AE0  00B0               	movwf	??___flmul
  4629  0AE1  0841               	movf	___flmul@temp+1,w
  4630  0AE2  00B1               	movwf	??___flmul+1
  4631  0AE3  01B2               	clrf	??___flmul+2
  4632  0AE4  01B3               	clrf	??___flmul+3
  4633  0AE5  0830               	movf	??___flmul,w
  4634  0AE6  07B6               	addwf	___flmul@grs,f
  4635  0AE7  0831               	movf	??___flmul+1,w
  4636  0AE8  1103               	clrz
  4637  0AE9  1803               	skipnc
  4638  0AEA  3E01               	addlw	1
  4639  0AEB  1903               	skipnz
  4640  0AEC  2AEE               	goto	u3811
  4641  0AED  07B7               	addwf	___flmul@grs+1,f
  4642  0AEE                     u3811:
  4643  0AEE  0832               	movf	??___flmul+2,w
  4644  0AEF  1103               	clrz
  4645  0AF0  1803               	skipnc
  4646  0AF1  3E01               	addlw	1
  4647  0AF2  1903               	skipnz
  4648  0AF3  2AF5               	goto	u3812
  4649  0AF4  07B8               	addwf	___flmul@grs+2,f
  4650  0AF5                     u3812:
  4651  0AF5  0833               	movf	??___flmul+3,w
  4652  0AF6  1103               	clrz
  4653  0AF7  1803               	skipnc
  4654  0AF8  3E01               	addlw	1
  4655  0AF9  1903               	skipnz
  4656  0AFA  2AFC               	goto	u3813
  4657  0AFB  07B9               	addwf	___flmul@grs+3,f
  4658  0AFC                     u3813:
  4659  0AFC                     l2609:
  4660  0AFC  0829               	movf	___flmul@b+1,w
  4661  0AFD  00B0               	movwf	??___flmul
  4662  0AFE  0830               	movf	??___flmul,w
  4663  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  4664  0B00  082E               	movf	___flmul@a+2,w
  4665  0B01  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4666  0B06  0873               	movf	?__Umul8_16+1,w
  4667  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4668  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4669  0B09  00C1               	movwf	___flmul@temp+1
  4670  0B0A  0872               	movf	?__Umul8_16,w
  4671  0B0B  00C0               	movwf	___flmul@temp
  4672  0B0C  0840               	movf	___flmul@temp,w
  4673  0B0D  00B0               	movwf	??___flmul
  4674  0B0E  0841               	movf	___flmul@temp+1,w
  4675  0B0F  00B1               	movwf	??___flmul+1
  4676  0B10  01B2               	clrf	??___flmul+2
  4677  0B11  01B3               	clrf	??___flmul+3
  4678  0B12  0830               	movf	??___flmul,w
  4679  0B13  07BC               	addwf	___flmul@prod,f
  4680  0B14  0831               	movf	??___flmul+1,w
  4681  0B15  1103               	clrz
  4682  0B16  1803               	skipnc
  4683  0B17  3E01               	addlw	1
  4684  0B18  1903               	skipnz
  4685  0B19  2B1B               	goto	u3821
  4686  0B1A  07BD               	addwf	___flmul@prod+1,f
  4687  0B1B                     u3821:
  4688  0B1B  0832               	movf	??___flmul+2,w
  4689  0B1C  1103               	clrz
  4690  0B1D  1803               	skipnc
  4691  0B1E  3E01               	addlw	1
  4692  0B1F  1903               	skipnz
  4693  0B20  2B22               	goto	u3822
  4694  0B21  07BE               	addwf	___flmul@prod+2,f
  4695  0B22                     u3822:
  4696  0B22  0833               	movf	??___flmul+3,w
  4697  0B23  1103               	clrz
  4698  0B24  1803               	skipnc
  4699  0B25  3E01               	addlw	1
  4700  0B26  1903               	skipnz
  4701  0B27  2B29               	goto	u3823
  4702  0B28  07BF               	addwf	___flmul@prod+3,f
  4703  0B29                     u3823:
  4704  0B29                     l2611:
  4705  0B29  082A               	movf	___flmul@b+2,w
  4706  0B2A  00B0               	movwf	??___flmul
  4707  0B2B  0830               	movf	??___flmul,w
  4708  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  4709  0B2D  082D               	movf	___flmul@a+1,w
  4710  0B2E  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4711  0B33  0873               	movf	?__Umul8_16+1,w
  4712  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4713  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4714  0B36  00C1               	movwf	___flmul@temp+1
  4715  0B37  0872               	movf	?__Umul8_16,w
  4716  0B38  00C0               	movwf	___flmul@temp
  4717  0B39                     l2613:
  4718  0B39  0840               	movf	___flmul@temp,w
  4719  0B3A  00B0               	movwf	??___flmul
  4720  0B3B  0841               	movf	___flmul@temp+1,w
  4721  0B3C  00B1               	movwf	??___flmul+1
  4722  0B3D  01B2               	clrf	??___flmul+2
  4723  0B3E  01B3               	clrf	??___flmul+3
  4724  0B3F  0830               	movf	??___flmul,w
  4725  0B40  07BC               	addwf	___flmul@prod,f
  4726  0B41  0831               	movf	??___flmul+1,w
  4727  0B42  1103               	clrz
  4728  0B43  1803               	skipnc
  4729  0B44  3E01               	addlw	1
  4730  0B45  1903               	skipnz
  4731  0B46  2B48               	goto	u3831
  4732  0B47  07BD               	addwf	___flmul@prod+1,f
  4733  0B48                     u3831:
  4734  0B48  0832               	movf	??___flmul+2,w
  4735  0B49  1103               	clrz
  4736  0B4A  1803               	skipnc
  4737  0B4B  3E01               	addlw	1
  4738  0B4C  1903               	skipnz
  4739  0B4D  2B4F               	goto	u3832
  4740  0B4E  07BE               	addwf	___flmul@prod+2,f
  4741  0B4F                     u3832:
  4742  0B4F  0833               	movf	??___flmul+3,w
  4743  0B50  1103               	clrz
  4744  0B51  1803               	skipnc
  4745  0B52  3E01               	addlw	1
  4746  0B53  1903               	skipnz
  4747  0B54  2B56               	goto	u3833
  4748  0B55  07BF               	addwf	___flmul@prod+3,f
  4749  0B56                     u3833:
  4750  0B56  082A               	movf	___flmul@b+2,w
  4751  0B57  00B0               	movwf	??___flmul
  4752  0B58  0830               	movf	??___flmul,w
  4753  0B59  00F2               	movwf	__Umul8_16@multiplicand
  4754  0B5A  082E               	movf	___flmul@a+2,w
  4755  0B5B  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4756  0B60  0873               	movf	?__Umul8_16+1,w
  4757  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4758  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4759  0B63  00C1               	movwf	___flmul@temp+1
  4760  0B64  0872               	movf	?__Umul8_16,w
  4761  0B65  00C0               	movwf	___flmul@temp
  4762  0B66                     l2615:
  4763  0B66  0840               	movf	___flmul@temp,w
  4764  0B67  00B0               	movwf	??___flmul
  4765  0B68  0841               	movf	___flmul@temp+1,w
  4766  0B69  00B1               	movwf	??___flmul+1
  4767  0B6A  01B2               	clrf	??___flmul+2
  4768  0B6B  01B3               	clrf	??___flmul+3
  4769  0B6C  3008               	movlw	8
  4770  0B6D                     u3845:
  4771  0B6D  1003               	clrc
  4772  0B6E  0DB0               	rlf	??___flmul,f
  4773  0B6F  0DB1               	rlf	??___flmul+1,f
  4774  0B70  0DB2               	rlf	??___flmul+2,f
  4775  0B71  0DB3               	rlf	??___flmul+3,f
  4776  0B72                     u3840:
  4777  0B72  3EFF               	addlw	-1
  4778  0B73  1D03               	skipz
  4779  0B74  2B6D               	goto	u3845
  4780  0B75  0830               	movf	??___flmul,w
  4781  0B76  07BC               	addwf	___flmul@prod,f
  4782  0B77  0831               	movf	??___flmul+1,w
  4783  0B78  1103               	clrz
  4784  0B79  1803               	skipnc
  4785  0B7A  3E01               	addlw	1
  4786  0B7B  1903               	skipnz
  4787  0B7C  2B7E               	goto	u3851
  4788  0B7D  07BD               	addwf	___flmul@prod+1,f
  4789  0B7E                     u3851:
  4790  0B7E  0832               	movf	??___flmul+2,w
  4791  0B7F  1103               	clrz
  4792  0B80  1803               	skipnc
  4793  0B81  3E01               	addlw	1
  4794  0B82  1903               	skipnz
  4795  0B83  2B85               	goto	u3852
  4796  0B84  07BE               	addwf	___flmul@prod+2,f
  4797  0B85                     u3852:
  4798  0B85  0833               	movf	??___flmul+3,w
  4799  0B86  1103               	clrz
  4800  0B87  1803               	skipnc
  4801  0B88  3E01               	addlw	1
  4802  0B89  1903               	skipnz
  4803  0B8A  2B8C               	goto	u3853
  4804  0B8B  07BF               	addwf	___flmul@prod+3,f
  4805  0B8C                     u3853:
  4806  0B8C                     l2617:
  4807  0B8C  0836               	movf	___flmul@grs,w
  4808  0B8D  00B0               	movwf	??___flmul
  4809  0B8E  0837               	movf	___flmul@grs+1,w
  4810  0B8F  00B1               	movwf	??___flmul+1
  4811  0B90  0838               	movf	___flmul@grs+2,w
  4812  0B91  00B2               	movwf	??___flmul+2
  4813  0B92  0839               	movf	___flmul@grs+3,w
  4814  0B93  00B3               	movwf	??___flmul+3
  4815  0B94  3018               	movlw	24
  4816  0B95                     u3865:
  4817  0B95  1003               	clrc
  4818  0B96  0CB3               	rrf	??___flmul+3,f
  4819  0B97  0CB2               	rrf	??___flmul+2,f
  4820  0B98  0CB1               	rrf	??___flmul+1,f
  4821  0B99  0CB0               	rrf	??___flmul,f
  4822  0B9A                     u3860:
  4823  0B9A  3EFF               	addlw	-1
  4824  0B9B  1D03               	skipz
  4825  0B9C  2B95               	goto	u3865
  4826  0B9D  0830               	movf	??___flmul,w
  4827  0B9E  07BC               	addwf	___flmul@prod,f
  4828  0B9F  0831               	movf	??___flmul+1,w
  4829  0BA0  1103               	clrz
  4830  0BA1  1803               	skipnc
  4831  0BA2  3E01               	addlw	1
  4832  0BA3  1903               	skipnz
  4833  0BA4  2BA6               	goto	u3871
  4834  0BA5  07BD               	addwf	___flmul@prod+1,f
  4835  0BA6                     u3871:
  4836  0BA6  0832               	movf	??___flmul+2,w
  4837  0BA7  1103               	clrz
  4838  0BA8  1803               	skipnc
  4839  0BA9  3E01               	addlw	1
  4840  0BAA  1903               	skipnz
  4841  0BAB  2BAD               	goto	u3872
  4842  0BAC  07BE               	addwf	___flmul@prod+2,f
  4843  0BAD                     u3872:
  4844  0BAD  0833               	movf	??___flmul+3,w
  4845  0BAE  1103               	clrz
  4846  0BAF  1803               	skipnc
  4847  0BB0  3E01               	addlw	1
  4848  0BB1  1903               	skipnz
  4849  0BB2  2BB4               	goto	u3873
  4850  0BB3  07BF               	addwf	___flmul@prod+3,f
  4851  0BB4                     u3873:
  4852  0BB4                     l2619:
  4853  0BB4  3008               	movlw	8
  4854  0BB5  00B0               	movwf	??___flmul
  4855  0BB6                     u3885:
  4856  0BB6  1003               	clrc
  4857  0BB7  0DB6               	rlf	___flmul@grs,f
  4858  0BB8  0DB7               	rlf	___flmul@grs+1,f
  4859  0BB9  0DB8               	rlf	___flmul@grs+2,f
  4860  0BBA  0DB9               	rlf	___flmul@grs+3,f
  4861  0BBB  0BB0               	decfsz	??___flmul,f
  4862  0BBC  2BB6               	goto	u3885
  4863  0BBD                     l2621:
  4864  0BBD  083B               	movf	___flmul@bexp,w
  4865  0BBE  073A               	addwf	___flmul@aexp,w
  4866  0BBF  00B0               	movwf	??___flmul
  4867  0BC0  01B1               	clrf	??___flmul+1
  4868  0BC1  0DB1               	rlf	??___flmul+1,f
  4869  0BC2  0830               	movf	??___flmul,w
  4870  0BC3  3E82               	addlw	130
  4871  0BC4  00C0               	movwf	___flmul@temp
  4872  0BC5  0831               	movf	??___flmul+1,w
  4873  0BC6  1803               	skipnc
  4874  0BC7  3E01               	addlw	1
  4875  0BC8  3EFF               	addlw	255
  4876  0BC9  00C1               	movwf	___flmul@temp+1
  4877  0BCA  2BE8               	goto	l2633
  4878  0BCB                     l2623:
  4879  0BCB  3001               	movlw	1
  4880  0BCC  00B0               	movwf	??___flmul
  4881  0BCD                     u3895:
  4882  0BCD  1003               	clrc
  4883  0BCE  0DBC               	rlf	___flmul@prod,f
  4884  0BCF  0DBD               	rlf	___flmul@prod+1,f
  4885  0BD0  0DBE               	rlf	___flmul@prod+2,f
  4886  0BD1  0DBF               	rlf	___flmul@prod+3,f
  4887  0BD2  0BB0               	decfsz	??___flmul,f
  4888  0BD3  2BCD               	goto	u3895
  4889  0BD4                     l2625:
  4890  0BD4  1FB9               	btfss	___flmul@grs+3,7
  4891  0BD5  2BD7               	goto	u3901
  4892  0BD6  2BD8               	goto	u3900
  4893  0BD7                     u3901:
  4894  0BD7  2BD9               	goto	l2629
  4895  0BD8                     u3900:
  4896  0BD8                     l2627:
  4897  0BD8  143C               	bsf	___flmul@prod,0
  4898  0BD9                     l2629:
  4899  0BD9  3001               	movlw	1
  4900  0BDA  00B0               	movwf	??___flmul
  4901  0BDB                     u3915:
  4902  0BDB  1003               	clrc
  4903  0BDC  0DB6               	rlf	___flmul@grs,f
  4904  0BDD  0DB7               	rlf	___flmul@grs+1,f
  4905  0BDE  0DB8               	rlf	___flmul@grs+2,f
  4906  0BDF  0DB9               	rlf	___flmul@grs+3,f
  4907  0BE0  0BB0               	decfsz	??___flmul,f
  4908  0BE1  2BDB               	goto	u3915
  4909  0BE2                     l2631:
  4910  0BE2  30FF               	movlw	255
  4911  0BE3  07C0               	addwf	___flmul@temp,f
  4912  0BE4  1803               	skipnc
  4913  0BE5  0AC1               	incf	___flmul@temp+1,f
  4914  0BE6  30FF               	movlw	255
  4915  0BE7  07C1               	addwf	___flmul@temp+1,f
  4916  0BE8                     l2633:
  4917  0BE8  1FBE               	btfss	___flmul@prod+2,7
  4918  0BE9  2BEB               	goto	u3921
  4919  0BEA  2BEC               	goto	u3920
  4920  0BEB                     u3921:
  4921  0BEB  2BCB               	goto	l2623
  4922  0BEC                     u3920:
  4923  0BEC                     l2635:
  4924  0BEC  01BA               	clrf	___flmul@aexp
  4925  0BED                     l2637:
  4926  0BED  1FB9               	btfss	___flmul@grs+3,7
  4927  0BEE  2BF0               	goto	u3931
  4928  0BEF  2BF1               	goto	u3930
  4929  0BF0                     u3931:
  4930  0BF0  2C0D               	goto	l2645
  4931  0BF1                     u3930:
  4932  0BF1                     l2639:
  4933  0BF1  30FF               	movlw	255
  4934  0BF2  0536               	andwf	___flmul@grs,w
  4935  0BF3  00B0               	movwf	??___flmul
  4936  0BF4  30FF               	movlw	255
  4937  0BF5  0537               	andwf	___flmul@grs+1,w
  4938  0BF6  00B1               	movwf	??___flmul+1
  4939  0BF7  30FF               	movlw	255
  4940  0BF8  0538               	andwf	___flmul@grs+2,w
  4941  0BF9  00B2               	movwf	??___flmul+2
  4942  0BFA  307F               	movlw	127
  4943  0BFB  0539               	andwf	___flmul@grs+3,w
  4944  0BFC  00B3               	movwf	??___flmul+3
  4945  0BFD  0833               	movf	??___flmul+3,w
  4946  0BFE  0432               	iorwf	??___flmul+2,w
  4947  0BFF  0431               	iorwf	??___flmul+1,w
  4948  0C00  0430               	iorwf	??___flmul,w
  4949  0C01  1903               	skipnz
  4950  0C02  2C04               	goto	u3941
  4951  0C03  2C05               	goto	u3940
  4952  0C04                     u3941:
  4953  0C04  2C08               	goto	l765
  4954  0C05                     u3940:
  4955  0C05                     l2641:
  4956  0C05  01BA               	clrf	___flmul@aexp
  4957  0C06  0ABA               	incf	___flmul@aexp,f
  4958  0C07  2C0D               	goto	l2645
  4959  0C08                     l765:
  4960  0C08  1C3C               	btfss	___flmul@prod,0
  4961  0C09  2C0B               	goto	u3951
  4962  0C0A  2C0C               	goto	u3950
  4963  0C0B                     u3951:
  4964  0C0B  2C0D               	goto	l2645
  4965  0C0C                     u3950:
  4966  0C0C  2C05               	goto	l2641
  4967  0C0D                     l2645:
  4968  0C0D  083A               	movf	___flmul@aexp,w
  4969  0C0E  1903               	btfsc	3,2
  4970  0C0F  2C11               	goto	u3961
  4971  0C10  2C12               	goto	u3960
  4972  0C11                     u3961:
  4973  0C11  2C43               	goto	l2655
  4974  0C12                     u3960:
  4975  0C12                     l2647:
  4976  0C12  3001               	movlw	1
  4977  0C13  07BC               	addwf	___flmul@prod,f
  4978  0C14  3000               	movlw	0
  4979  0C15  1803               	skipnc
  4980  0C16  3001               	movlw	1
  4981  0C17  07BD               	addwf	___flmul@prod+1,f
  4982  0C18  3000               	movlw	0
  4983  0C19  1803               	skipnc
  4984  0C1A  3001               	movlw	1
  4985  0C1B  07BE               	addwf	___flmul@prod+2,f
  4986  0C1C  3000               	movlw	0
  4987  0C1D  1803               	skipnc
  4988  0C1E  3001               	movlw	1
  4989  0C1F  07BF               	addwf	___flmul@prod+3,f
  4990  0C20                     l2649:
  4991  0C20  1C3F               	btfss	___flmul@prod+3,0
  4992  0C21  2C23               	goto	u3971
  4993  0C22  2C24               	goto	u3970
  4994  0C23                     u3971:
  4995  0C23  2C43               	goto	l2655
  4996  0C24                     u3970:
  4997  0C24                     l2651:
  4998  0C24  083C               	movf	___flmul@prod,w
  4999  0C25  00B0               	movwf	??___flmul
  5000  0C26  083D               	movf	___flmul@prod+1,w
  5001  0C27  00B1               	movwf	??___flmul+1
  5002  0C28  083E               	movf	___flmul@prod+2,w
  5003  0C29  00B2               	movwf	??___flmul+2
  5004  0C2A  083F               	movf	___flmul@prod+3,w
  5005  0C2B  00B3               	movwf	??___flmul+3
  5006  0C2C  3001               	movlw	1
  5007  0C2D  00B4               	movwf	??___flmul+4
  5008  0C2E                     u3985:
  5009  0C2E  0D33               	rlf	??___flmul+3,w
  5010  0C2F  0CB3               	rrf	??___flmul+3,f
  5011  0C30  0CB2               	rrf	??___flmul+2,f
  5012  0C31  0CB1               	rrf	??___flmul+1,f
  5013  0C32  0CB0               	rrf	??___flmul,f
  5014  0C33                     u3980:
  5015  0C33  0BB4               	decfsz	??___flmul+4,f
  5016  0C34  2C2E               	goto	u3985
  5017  0C35  0833               	movf	??___flmul+3,w
  5018  0C36  00BF               	movwf	___flmul@prod+3
  5019  0C37  0832               	movf	??___flmul+2,w
  5020  0C38  00BE               	movwf	___flmul@prod+2
  5021  0C39  0831               	movf	??___flmul+1,w
  5022  0C3A  00BD               	movwf	___flmul@prod+1
  5023  0C3B  0830               	movf	??___flmul,w
  5024  0C3C  00BC               	movwf	___flmul@prod
  5025  0C3D                     l2653:
  5026  0C3D  3001               	movlw	1
  5027  0C3E  07C0               	addwf	___flmul@temp,f
  5028  0C3F  1803               	skipnc
  5029  0C40  0AC1               	incf	___flmul@temp+1,f
  5030  0C41  3000               	movlw	0
  5031  0C42  07C1               	addwf	___flmul@temp+1,f
  5032  0C43                     l2655:
  5033  0C43  0841               	movf	___flmul@temp+1,w
  5034  0C44  3A80               	xorlw	128
  5035  0C45  00FF               	movwf	btemp+1
  5036  0C46  3080               	movlw	128
  5037  0C47  027F               	subwf	btemp+1,w
  5038  0C48  1D03               	skipz
  5039  0C49  2C4C               	goto	u3995
  5040  0C4A  30FF               	movlw	255
  5041  0C4B  0240               	subwf	___flmul@temp,w
  5042  0C4C                     u3995:
  5043  0C4C  1C03               	skipc
  5044  0C4D  2C4F               	goto	u3991
  5045  0C4E  2C50               	goto	u3990
  5046  0C4F                     u3991:
  5047  0C4F  2C5B               	goto	l2659
  5048  0C50                     u3990:
  5049  0C50                     l2657:
  5050  0C50  307F               	movlw	127
  5051  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5052  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5053  0C53  00BF               	movwf	___flmul@prod+3
  5054  0C54  3080               	movlw	128
  5055  0C55  00BE               	movwf	___flmul@prod+2
  5056  0C56  3000               	movlw	0
  5057  0C57  00BD               	movwf	___flmul@prod+1
  5058  0C58  3000               	movlw	0
  5059  0C59  00BC               	movwf	___flmul@prod
  5060  0C5A  2C90               	goto	l771
  5061  0C5B                     l2659:
  5062  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5063  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5064  0C5D  0841               	movf	___flmul@temp+1,w
  5065  0C5E  3A80               	xorlw	128
  5066  0C5F  00FF               	movwf	btemp+1
  5067  0C60  3080               	movlw	128
  5068  0C61  027F               	subwf	btemp+1,w
  5069  0C62  1D03               	skipz
  5070  0C63  2C66               	goto	u4005
  5071  0C64  3001               	movlw	1
  5072  0C65  0240               	subwf	___flmul@temp,w
  5073  0C66                     u4005:
  5074  0C66  1803               	skipnc
  5075  0C67  2C69               	goto	u4001
  5076  0C68  2C6A               	goto	u4000
  5077  0C69                     u4001:
  5078  0C69  2C76               	goto	l2665
  5079  0C6A                     u4000:
  5080  0C6A                     l2661:
  5081  0C6A  3000               	movlw	0
  5082  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5083  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5084  0C6D  00BF               	movwf	___flmul@prod+3
  5085  0C6E  3000               	movlw	0
  5086  0C6F  00BE               	movwf	___flmul@prod+2
  5087  0C70  3000               	movlw	0
  5088  0C71  00BD               	movwf	___flmul@prod+1
  5089  0C72  3000               	movlw	0
  5090  0C73  00BC               	movwf	___flmul@prod
  5091  0C74                     l2663:
  5092  0C74  01B5               	clrf	___flmul@sign
  5093  0C75  2C90               	goto	l771
  5094  0C76                     l2665:
  5095  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5096  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5097  0C78  0840               	movf	___flmul@temp,w
  5098  0C79  00B0               	movwf	??___flmul
  5099  0C7A  0830               	movf	??___flmul,w
  5100  0C7B  00BB               	movwf	___flmul@bexp
  5101  0C7C  30FF               	movlw	255
  5102  0C7D  05BC               	andwf	___flmul@prod,f
  5103  0C7E  30FF               	movlw	255
  5104  0C7F  05BD               	andwf	___flmul@prod+1,f
  5105  0C80  307F               	movlw	127
  5106  0C81  05BE               	andwf	___flmul@prod+2,f
  5107  0C82  3000               	movlw	0
  5108  0C83  05BF               	andwf	___flmul@prod+3,f
  5109  0C84                     l2667:
  5110  0C84  1C3B               	btfss	___flmul@bexp,0
  5111  0C85  2C87               	goto	u4011
  5112  0C86  2C88               	goto	u4010
  5113  0C87                     u4011:
  5114  0C87  2C89               	goto	l2671
  5115  0C88                     u4010:
  5116  0C88                     l2669:
  5117  0C88  17BE               	bsf	___flmul@prod+2,7
  5118  0C89                     l2671:
  5119  0C89  083B               	movf	___flmul@bexp,w
  5120  0C8A  00B0               	movwf	??___flmul
  5121  0C8B  1003               	clrc
  5122  0C8C  0C30               	rrf	??___flmul,w
  5123  0C8D  00B1               	movwf	??___flmul+1
  5124  0C8E  0831               	movf	??___flmul+1,w
  5125  0C8F  00BF               	movwf	___flmul@prod+3
  5126  0C90                     l771:
  5127  0C90  0835               	movf	___flmul@sign,w
  5128  0C91  00B0               	movwf	??___flmul
  5129  0C92  0830               	movf	??___flmul,w
  5130  0C93  04BF               	iorwf	___flmul@prod+3,f
  5131  0C94                     l2673:
  5132  0C94  083F               	movf	___flmul@prod+3,w
  5133  0C95  00AB               	movwf	?___flmul+3
  5134  0C96  083E               	movf	___flmul@prod+2,w
  5135  0C97  00AA               	movwf	?___flmul+2
  5136  0C98  083D               	movf	___flmul@prod+1,w
  5137  0C99  00A9               	movwf	?___flmul+1
  5138  0C9A  083C               	movf	___flmul@prod,w
  5139  0C9B  00A8               	movwf	?___flmul
  5140  0C9C                     l759:
  5141  0C9C  0008               	return
  5142  0C9D                     __end_of___flmul:
  5143                           
  5144                           	psect	text10
  5145  07D5                     __ptext10:	
  5146 ;; *************** function __Umul8_16 *****************
  5147 ;; Defined at:
  5148 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  multiplier      1    wreg     unsigned char 
  5151 ;;  multiplicand    1    2[COMMON] unsigned char 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  multiplier      1   10[COMMON] unsigned char 
  5154 ;;  word_mpld       2    8[COMMON] unsigned int 
  5155 ;;  product         2    6[COMMON] unsigned int 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  2    2[COMMON] unsigned int 
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5165 ;;      Params:         2       0       0       0       0
  5166 ;;      Locals:         5       0       0       0       0
  5167 ;;      Temps:          2       0       0       0       0
  5168 ;;      Totals:         9       0       0       0       0
  5169 ;;Total ram usage:        9 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:    1
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		___flmul
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           
  5180                           ;psect for function __Umul8_16
  5181  07D5                     __Umul8_16:
  5182                           
  5183                           ;incstack = 0
  5184                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5185                           ;__Umul8_16@multiplier stored from wreg
  5186  07D5  00FA               	movwf	__Umul8_16@multiplier
  5187  07D6                     l2199:
  5188  07D6  01F6               	clrf	__Umul8_16@product
  5189  07D7  01F7               	clrf	__Umul8_16@product+1
  5190  07D8                     l2201:
  5191  07D8  0872               	movf	__Umul8_16@multiplicand,w
  5192  07D9  00F4               	movwf	??__Umul8_16
  5193  07DA  01F5               	clrf	??__Umul8_16+1
  5194  07DB  0874               	movf	??__Umul8_16,w
  5195  07DC  00F8               	movwf	__Umul8_16@word_mpld
  5196  07DD  0875               	movf	??__Umul8_16+1,w
  5197  07DE  00F9               	movwf	__Umul8_16@word_mpld+1
  5198  07DF                     l2203:
  5199  07DF  1C7A               	btfss	__Umul8_16@multiplier,0
  5200  07E0  2FE2               	goto	u2841
  5201  07E1  2FE3               	goto	u2840
  5202  07E2                     u2841:
  5203  07E2  2FE9               	goto	l778
  5204  07E3                     u2840:
  5205  07E3                     l2205:
  5206  07E3  0878               	movf	__Umul8_16@word_mpld,w
  5207  07E4  07F6               	addwf	__Umul8_16@product,f
  5208  07E5  1803               	skipnc
  5209  07E6  0AF7               	incf	__Umul8_16@product+1,f
  5210  07E7  0879               	movf	__Umul8_16@word_mpld+1,w
  5211  07E8  07F7               	addwf	__Umul8_16@product+1,f
  5212  07E9                     l778:
  5213  07E9  3001               	movlw	1
  5214  07EA                     u2855:
  5215  07EA  1003               	clrc
  5216  07EB  0DF8               	rlf	__Umul8_16@word_mpld,f
  5217  07EC  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  5218  07ED  3EFF               	addlw	-1
  5219  07EE  1D03               	skipz
  5220  07EF  2FEA               	goto	u2855
  5221  07F0  1003               	clrc
  5222  07F1  0CFA               	rrf	__Umul8_16@multiplier,f
  5223  07F2                     l2207:
  5224  07F2  087A               	movf	__Umul8_16@multiplier,w
  5225  07F3  1D03               	btfss	3,2
  5226  07F4  2FF6               	goto	u2861
  5227  07F5  2FF7               	goto	u2860
  5228  07F6                     u2861:
  5229  07F6  2FDF               	goto	l2203
  5230  07F7                     u2860:
  5231  07F7                     l2209:
  5232  07F7  0877               	movf	__Umul8_16@product+1,w
  5233  07F8  00F3               	movwf	?__Umul8_16+1
  5234  07F9  0876               	movf	__Umul8_16@product,w
  5235  07FA  00F2               	movwf	?__Umul8_16
  5236  07FB                     l780:
  5237  07FB  0008               	return
  5238  07FC                     __end_of__Umul8_16:
  5239                           
  5240                           	psect	text11
  5241  1175                     __ptext11:	
  5242 ;; *************** function __tdiv_to_l_ *****************
  5243 ;; Defined at:
  5244 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  f1              4    2[COMMON] float 
  5247 ;;  f2              4    6[COMMON] float 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  quot            4    4[BANK0 ] unsigned long 
  5250 ;;  exp1            1    9[BANK0 ] unsigned char 
  5251 ;;  cntr            1    8[BANK0 ] unsigned char 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  4    2[COMMON] unsigned long 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5261 ;;      Params:         8       0       0       0       0
  5262 ;;      Locals:         0       6       0       0       0
  5263 ;;      Temps:          0       4       0       0       0
  5264 ;;      Totals:         8      10       0       0       0
  5265 ;;Total ram usage:       18 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    1
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_sprintf
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           
  5276                           ;psect for function __tdiv_to_l_
  5277  1175                     __tdiv_to_l_:
  5278  1175                     l2751:	
  5279                           ;incstack = 0
  5280                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5281                           
  5282  1175  0872               	movf	__tdiv_to_l_@f1,w
  5283  1176  1283               	bcf	3,5	;RP0=0, select bank0
  5284  1177  1303               	bcf	3,6	;RP1=0, select bank0
  5285  1178  00A0               	movwf	??__tdiv_to_l_
  5286  1179  0873               	movf	__tdiv_to_l_@f1+1,w
  5287  117A  00A1               	movwf	??__tdiv_to_l_+1
  5288  117B  0874               	movf	__tdiv_to_l_@f1+2,w
  5289  117C  00A2               	movwf	??__tdiv_to_l_+2
  5290  117D  1003               	clrc
  5291  117E  0D21               	rlf	??__tdiv_to_l_+1,w
  5292  117F  0D22               	rlf	??__tdiv_to_l_+2,w
  5293  1180  00A3               	movwf	??__tdiv_to_l_+3
  5294  1181  0823               	movf	??__tdiv_to_l_+3,w
  5295  1182  00A9               	movwf	__tdiv_to_l_@exp1
  5296  1183  0829               	movf	__tdiv_to_l_@exp1,w
  5297  1184  1D03               	btfss	3,2
  5298  1185  2987               	goto	u4301
  5299  1186  2988               	goto	u4300
  5300  1187                     u4301:
  5301  1187  2991               	goto	l2757
  5302  1188                     u4300:
  5303  1188                     l2753:
  5304  1188  3000               	movlw	0
  5305  1189  00F5               	movwf	?__tdiv_to_l_+3
  5306  118A  3000               	movlw	0
  5307  118B  00F4               	movwf	?__tdiv_to_l_+2
  5308  118C  3000               	movlw	0
  5309  118D  00F3               	movwf	?__tdiv_to_l_+1
  5310  118E  3000               	movlw	0
  5311  118F  00F2               	movwf	?__tdiv_to_l_
  5312  1190  2A31               	goto	l553
  5313  1191                     l2757:
  5314  1191  0876               	movf	__tdiv_to_l_@f2,w
  5315  1192  00A0               	movwf	??__tdiv_to_l_
  5316  1193  0877               	movf	__tdiv_to_l_@f2+1,w
  5317  1194  00A1               	movwf	??__tdiv_to_l_+1
  5318  1195  0878               	movf	__tdiv_to_l_@f2+2,w
  5319  1196  00A2               	movwf	??__tdiv_to_l_+2
  5320  1197  1003               	clrc
  5321  1198  0D21               	rlf	??__tdiv_to_l_+1,w
  5322  1199  0D22               	rlf	??__tdiv_to_l_+2,w
  5323  119A  00A3               	movwf	??__tdiv_to_l_+3
  5324  119B  0823               	movf	??__tdiv_to_l_+3,w
  5325  119C  00A8               	movwf	__tdiv_to_l_@cntr
  5326  119D  0828               	movf	__tdiv_to_l_@cntr,w
  5327  119E  1D03               	btfss	3,2
  5328  119F  29A1               	goto	u4311
  5329  11A0  29A2               	goto	u4310
  5330  11A1                     u4311:
  5331  11A1  29A3               	goto	l554
  5332  11A2                     u4310:
  5333  11A2  2988               	goto	l2753
  5334  11A3                     l554:
  5335  11A3  17F3               	bsf	__tdiv_to_l_@f1+1,7
  5336  11A4                     l2763:
  5337  11A4  30FF               	movlw	255
  5338  11A5  05F2               	andwf	__tdiv_to_l_@f1,f
  5339  11A6  30FF               	movlw	255
  5340  11A7  05F3               	andwf	__tdiv_to_l_@f1+1,f
  5341  11A8  3000               	movlw	0
  5342  11A9  05F4               	andwf	__tdiv_to_l_@f1+2,f
  5343  11AA                     l2765:
  5344  11AA  17F7               	bsf	__tdiv_to_l_@f2+1,7
  5345  11AB  30FF               	movlw	255
  5346  11AC  05F6               	andwf	__tdiv_to_l_@f2,f
  5347  11AD  30FF               	movlw	255
  5348  11AE  05F7               	andwf	__tdiv_to_l_@f2+1,f
  5349  11AF  3000               	movlw	0
  5350  11B0  05F8               	andwf	__tdiv_to_l_@f2+2,f
  5351  11B1  3000               	movlw	0
  5352  11B2  00A7               	movwf	__tdiv_to_l_@quot+3
  5353  11B3  3000               	movlw	0
  5354  11B4  00A6               	movwf	__tdiv_to_l_@quot+2
  5355  11B5  3000               	movlw	0
  5356  11B6  00A5               	movwf	__tdiv_to_l_@quot+1
  5357  11B7  3000               	movlw	0
  5358  11B8  00A4               	movwf	__tdiv_to_l_@quot
  5359  11B9                     l2767:
  5360  11B9  307F               	movlw	127
  5361  11BA  02A9               	subwf	__tdiv_to_l_@exp1,f
  5362  11BB                     l2769:
  5363  11BB  3098               	movlw	152
  5364  11BC  0728               	addwf	__tdiv_to_l_@cntr,w
  5365  11BD  00A0               	movwf	??__tdiv_to_l_
  5366  11BE  0820               	movf	??__tdiv_to_l_,w
  5367  11BF  02A9               	subwf	__tdiv_to_l_@exp1,f
  5368  11C0  3018               	movlw	24
  5369  11C1  00A0               	movwf	??__tdiv_to_l_
  5370  11C2  0820               	movf	??__tdiv_to_l_,w
  5371  11C3  00A8               	movwf	__tdiv_to_l_@cntr
  5372  11C4                     l2771:
  5373  11C4  3001               	movlw	1
  5374  11C5  00A0               	movwf	??__tdiv_to_l_
  5375  11C6                     u4325:
  5376  11C6  1003               	clrc
  5377  11C7  0DA4               	rlf	__tdiv_to_l_@quot,f
  5378  11C8  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5379  11C9  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5380  11CA  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5381  11CB  0BA0               	decfsz	??__tdiv_to_l_,f
  5382  11CC  29C6               	goto	u4325
  5383  11CD                     l2773:
  5384  11CD  0878               	movf	__tdiv_to_l_@f2+2,w
  5385  11CE  0274               	subwf	__tdiv_to_l_@f1+2,w
  5386  11CF  1D03               	skipz
  5387  11D0  29D7               	goto	u4335
  5388  11D1  0877               	movf	__tdiv_to_l_@f2+1,w
  5389  11D2  0273               	subwf	__tdiv_to_l_@f1+1,w
  5390  11D3  1D03               	skipz
  5391  11D4  29D7               	goto	u4335
  5392  11D5  0876               	movf	__tdiv_to_l_@f2,w
  5393  11D6  0272               	subwf	__tdiv_to_l_@f1,w
  5394  11D7                     u4335:
  5395  11D7  1C03               	skipc
  5396  11D8  29DA               	goto	u4331
  5397  11D9  29DB               	goto	u4330
  5398  11DA                     u4331:
  5399  11DA  29E6               	goto	l2779
  5400  11DB                     u4330:
  5401  11DB                     l2775:
  5402  11DB  0876               	movf	__tdiv_to_l_@f2,w
  5403  11DC  02F2               	subwf	__tdiv_to_l_@f1,f
  5404  11DD  0877               	movf	__tdiv_to_l_@f2+1,w
  5405  11DE  1C03               	skipc
  5406  11DF  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5407  11E0  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5408  11E1  0878               	movf	__tdiv_to_l_@f2+2,w
  5409  11E2  1C03               	skipc
  5410  11E3  0A78               	incf	__tdiv_to_l_@f2+2,w
  5411  11E4  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5412  11E5                     l2777:
  5413  11E5  1424               	bsf	__tdiv_to_l_@quot,0
  5414  11E6                     l2779:
  5415  11E6  3001               	movlw	1
  5416  11E7                     u4345:
  5417  11E7  1003               	clrc
  5418  11E8  0DF2               	rlf	__tdiv_to_l_@f1,f
  5419  11E9  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5420  11EA  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5421  11EB  3EFF               	addlw	-1
  5422  11EC  1D03               	skipz
  5423  11ED  29E7               	goto	u4345
  5424  11EE                     l2781:
  5425  11EE  3001               	movlw	1
  5426  11EF  02A8               	subwf	__tdiv_to_l_@cntr,f
  5427  11F0  1D03               	btfss	3,2
  5428  11F1  29F3               	goto	u4351
  5429  11F2  29F4               	goto	u4350
  5430  11F3                     u4351:
  5431  11F3  29C4               	goto	l2771
  5432  11F4                     u4350:
  5433  11F4                     l557:
  5434  11F4  1FA9               	btfss	__tdiv_to_l_@exp1,7
  5435  11F5  29F7               	goto	u4361
  5436  11F6  29F8               	goto	u4360
  5437  11F7                     u4361:
  5438  11F7  2A12               	goto	l2791
  5439  11F8                     u4360:
  5440  11F8                     l2783:
  5441  11F8  0829               	movf	__tdiv_to_l_@exp1,w
  5442  11F9  3A80               	xorlw	128
  5443  11FA  3E97               	addlw	151
  5444  11FB  1803               	skipnc
  5445  11FC  29FE               	goto	u4371
  5446  11FD  29FF               	goto	u4370
  5447  11FE                     u4371:
  5448  11FE  2A00               	goto	l2789
  5449  11FF                     u4370:
  5450  11FF  2988               	goto	l2753
  5451  1200                     l2789:
  5452  1200  3001               	movlw	1
  5453  1201                     u4385:
  5454  1201  1003               	clrc
  5455  1202  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  5456  1203  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  5457  1204  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  5458  1205  0CA4               	rrf	__tdiv_to_l_@quot,f
  5459  1206  3EFF               	addlw	-1
  5460  1207  1D03               	skipz
  5461  1208  2A01               	goto	u4385
  5462  1209  3001               	movlw	1
  5463  120A  00A0               	movwf	??__tdiv_to_l_
  5464  120B  0820               	movf	??__tdiv_to_l_,w
  5465  120C  07A9               	addwf	__tdiv_to_l_@exp1,f
  5466  120D  1D03               	btfss	3,2
  5467  120E  2A10               	goto	u4391
  5468  120F  2A11               	goto	u4390
  5469  1210                     u4391:
  5470  1210  2A00               	goto	l2789
  5471  1211                     u4390:
  5472  1211  2A29               	goto	l2799
  5473  1212                     l2791:
  5474  1212  3018               	movlw	24
  5475  1213  0229               	subwf	__tdiv_to_l_@exp1,w
  5476  1214  1C03               	skipc
  5477  1215  2A17               	goto	u4401
  5478  1216  2A18               	goto	u4400
  5479  1217                     u4401:
  5480  1217  2A24               	goto	l564
  5481  1218                     u4400:
  5482  1218  2988               	goto	l2753
  5483  1219                     l2797:
  5484  1219  3001               	movlw	1
  5485  121A  00A0               	movwf	??__tdiv_to_l_
  5486  121B                     u4415:
  5487  121B  1003               	clrc
  5488  121C  0DA4               	rlf	__tdiv_to_l_@quot,f
  5489  121D  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5490  121E  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5491  121F  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5492  1220  0BA0               	decfsz	??__tdiv_to_l_,f
  5493  1221  2A1B               	goto	u4415
  5494  1222  3001               	movlw	1
  5495  1223  02A9               	subwf	__tdiv_to_l_@exp1,f
  5496  1224                     l564:
  5497  1224  0829               	movf	__tdiv_to_l_@exp1,w
  5498  1225  1D03               	btfss	3,2
  5499  1226  2A28               	goto	u4421
  5500  1227  2A29               	goto	u4420
  5501  1228                     u4421:
  5502  1228  2A19               	goto	l2797
  5503  1229                     u4420:
  5504  1229                     l2799:
  5505  1229  0827               	movf	__tdiv_to_l_@quot+3,w
  5506  122A  00F5               	movwf	?__tdiv_to_l_+3
  5507  122B  0826               	movf	__tdiv_to_l_@quot+2,w
  5508  122C  00F4               	movwf	?__tdiv_to_l_+2
  5509  122D  0825               	movf	__tdiv_to_l_@quot+1,w
  5510  122E  00F3               	movwf	?__tdiv_to_l_+1
  5511  122F  0824               	movf	__tdiv_to_l_@quot,w
  5512  1230  00F2               	movwf	?__tdiv_to_l_
  5513  1231                     l553:
  5514  1231  0008               	return
  5515  1232                     __end_of__tdiv_to_l_:
  5516                           
  5517                           	psect	text12
  5518  1232                     __ptext12:	
  5519 ;; *************** function __div_to_l_ *****************
  5520 ;; Defined at:
  5521 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  f1              4    2[COMMON] unsigned long 
  5524 ;;  f2              4    6[COMMON] unsigned long 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  quot            4    0[BANK0 ] unsigned long 
  5527 ;;  exp1            1    5[BANK0 ] unsigned char 
  5528 ;;  cntr            1    4[BANK0 ] unsigned char 
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  4    2[COMMON] unsigned long 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5538 ;;      Params:         8       0       0       0       0
  5539 ;;      Locals:         0       6       0       0       0
  5540 ;;      Temps:          1       0       0       0       0
  5541 ;;      Totals:         9       6       0       0       0
  5542 ;;Total ram usage:       15 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:    1
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_sprintf
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           
  5553                           ;psect for function __div_to_l_
  5554  1232                     __div_to_l_:
  5555  1232                     l2803:	
  5556                           ;incstack = 0
  5557                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5558                           
  5559  1232  1003               	clrc
  5560  1233  0D74               	rlf	__div_to_l_@f1+2,w
  5561  1234  0D75               	rlf	__div_to_l_@f1+3,w
  5562  1235  00FA               	movwf	??__div_to_l_
  5563  1236  087A               	movf	??__div_to_l_,w
  5564  1237  1283               	bcf	3,5	;RP0=0, select bank0
  5565  1238  1303               	bcf	3,6	;RP1=0, select bank0
  5566  1239  00A5               	movwf	__div_to_l_@exp1
  5567  123A  0825               	movf	__div_to_l_@exp1,w
  5568  123B  1D03               	btfss	3,2
  5569  123C  2A3E               	goto	u4431
  5570  123D  2A3F               	goto	u4430
  5571  123E                     u4431:
  5572  123E  2A48               	goto	l2809
  5573  123F                     u4430:
  5574  123F                     l2805:
  5575  123F  3000               	movlw	0
  5576  1240  00F5               	movwf	?__div_to_l_+3
  5577  1241  3000               	movlw	0
  5578  1242  00F4               	movwf	?__div_to_l_+2
  5579  1243  3000               	movlw	0
  5580  1244  00F3               	movwf	?__div_to_l_+1
  5581  1245  3000               	movlw	0
  5582  1246  00F2               	movwf	?__div_to_l_
  5583  1247  2AEF               	goto	l506
  5584  1248                     l2809:
  5585  1248  1003               	clrc
  5586  1249  0D78               	rlf	__div_to_l_@f2+2,w
  5587  124A  0D79               	rlf	__div_to_l_@f2+3,w
  5588  124B  00FA               	movwf	??__div_to_l_
  5589  124C  087A               	movf	??__div_to_l_,w
  5590  124D  00A4               	movwf	__div_to_l_@cntr
  5591  124E  0824               	movf	__div_to_l_@cntr,w
  5592  124F  1D03               	btfss	3,2
  5593  1250  2A52               	goto	u4441
  5594  1251  2A53               	goto	u4440
  5595  1252                     u4441:
  5596  1252  2A54               	goto	l507
  5597  1253                     u4440:
  5598  1253  2A3F               	goto	l2805
  5599  1254                     l507:
  5600  1254  17F4               	bsf	__div_to_l_@f1+2,7
  5601  1255                     l2815:
  5602  1255  30FF               	movlw	255
  5603  1256  05F2               	andwf	__div_to_l_@f1,f
  5604  1257  30FF               	movlw	255
  5605  1258  05F3               	andwf	__div_to_l_@f1+1,f
  5606  1259  30FF               	movlw	255
  5607  125A  05F4               	andwf	__div_to_l_@f1+2,f
  5608  125B  3000               	movlw	0
  5609  125C  05F5               	andwf	__div_to_l_@f1+3,f
  5610  125D                     l2817:
  5611  125D  17F8               	bsf	__div_to_l_@f2+2,7
  5612  125E  30FF               	movlw	255
  5613  125F  05F6               	andwf	__div_to_l_@f2,f
  5614  1260  30FF               	movlw	255
  5615  1261  05F7               	andwf	__div_to_l_@f2+1,f
  5616  1262  30FF               	movlw	255
  5617  1263  05F8               	andwf	__div_to_l_@f2+2,f
  5618  1264  3000               	movlw	0
  5619  1265  05F9               	andwf	__div_to_l_@f2+3,f
  5620  1266  3000               	movlw	0
  5621  1267  00A3               	movwf	__div_to_l_@quot+3
  5622  1268  3000               	movlw	0
  5623  1269  00A2               	movwf	__div_to_l_@quot+2
  5624  126A  3000               	movlw	0
  5625  126B  00A1               	movwf	__div_to_l_@quot+1
  5626  126C  3000               	movlw	0
  5627  126D  00A0               	movwf	__div_to_l_@quot
  5628  126E                     l2819:
  5629  126E  307F               	movlw	127
  5630  126F  02A5               	subwf	__div_to_l_@exp1,f
  5631  1270                     l2821:
  5632  1270  30A0               	movlw	160
  5633  1271  0724               	addwf	__div_to_l_@cntr,w
  5634  1272  00FA               	movwf	??__div_to_l_
  5635  1273  087A               	movf	??__div_to_l_,w
  5636  1274  02A5               	subwf	__div_to_l_@exp1,f
  5637  1275  3020               	movlw	32
  5638  1276  00FA               	movwf	??__div_to_l_
  5639  1277  087A               	movf	??__div_to_l_,w
  5640  1278  00A4               	movwf	__div_to_l_@cntr
  5641  1279                     l2823:
  5642  1279  3001               	movlw	1
  5643  127A  00FA               	movwf	??__div_to_l_
  5644  127B                     u4455:
  5645  127B  1003               	clrc
  5646  127C  0DA0               	rlf	__div_to_l_@quot,f
  5647  127D  0DA1               	rlf	__div_to_l_@quot+1,f
  5648  127E  0DA2               	rlf	__div_to_l_@quot+2,f
  5649  127F  0DA3               	rlf	__div_to_l_@quot+3,f
  5650  1280  0BFA               	decfsz	??__div_to_l_,f
  5651  1281  2A7B               	goto	u4455
  5652  1282                     l2825:
  5653  1282  0879               	movf	__div_to_l_@f2+3,w
  5654  1283  0275               	subwf	__div_to_l_@f1+3,w
  5655  1284  1D03               	skipz
  5656  1285  2A90               	goto	u4465
  5657  1286  0878               	movf	__div_to_l_@f2+2,w
  5658  1287  0274               	subwf	__div_to_l_@f1+2,w
  5659  1288  1D03               	skipz
  5660  1289  2A90               	goto	u4465
  5661  128A  0877               	movf	__div_to_l_@f2+1,w
  5662  128B  0273               	subwf	__div_to_l_@f1+1,w
  5663  128C  1D03               	skipz
  5664  128D  2A90               	goto	u4465
  5665  128E  0876               	movf	__div_to_l_@f2,w
  5666  128F  0272               	subwf	__div_to_l_@f1,w
  5667  1290                     u4465:
  5668  1290  1C03               	skipc
  5669  1291  2A93               	goto	u4461
  5670  1292  2A94               	goto	u4460
  5671  1293                     u4461:
  5672  1293  2AA3               	goto	l2831
  5673  1294                     u4460:
  5674  1294                     l2827:
  5675  1294  0876               	movf	__div_to_l_@f2,w
  5676  1295  02F2               	subwf	__div_to_l_@f1,f
  5677  1296  0877               	movf	__div_to_l_@f2+1,w
  5678  1297  1C03               	skipc
  5679  1298  0F77               	incfsz	__div_to_l_@f2+1,w
  5680  1299  02F3               	subwf	__div_to_l_@f1+1,f
  5681  129A  0878               	movf	__div_to_l_@f2+2,w
  5682  129B  1C03               	skipc
  5683  129C  0F78               	incfsz	__div_to_l_@f2+2,w
  5684  129D  02F4               	subwf	__div_to_l_@f1+2,f
  5685  129E  0879               	movf	__div_to_l_@f2+3,w
  5686  129F  1C03               	skipc
  5687  12A0  0F79               	incfsz	__div_to_l_@f2+3,w
  5688  12A1  02F5               	subwf	__div_to_l_@f1+3,f
  5689  12A2                     l2829:
  5690  12A2  1420               	bsf	__div_to_l_@quot,0
  5691  12A3                     l2831:
  5692  12A3  3001               	movlw	1
  5693  12A4  00FA               	movwf	??__div_to_l_
  5694  12A5                     u4475:
  5695  12A5  1003               	clrc
  5696  12A6  0DF2               	rlf	__div_to_l_@f1,f
  5697  12A7  0DF3               	rlf	__div_to_l_@f1+1,f
  5698  12A8  0DF4               	rlf	__div_to_l_@f1+2,f
  5699  12A9  0DF5               	rlf	__div_to_l_@f1+3,f
  5700  12AA  0BFA               	decfsz	??__div_to_l_,f
  5701  12AB  2AA5               	goto	u4475
  5702  12AC                     l2833:
  5703  12AC  3001               	movlw	1
  5704  12AD  02A4               	subwf	__div_to_l_@cntr,f
  5705  12AE  1D03               	btfss	3,2
  5706  12AF  2AB1               	goto	u4481
  5707  12B0  2AB2               	goto	u4480
  5708  12B1                     u4481:
  5709  12B1  2A79               	goto	l2823
  5710  12B2                     u4480:
  5711  12B2                     l510:
  5712  12B2  1FA5               	btfss	__div_to_l_@exp1,7
  5713  12B3  2AB5               	goto	u4491
  5714  12B4  2AB6               	goto	u4490
  5715  12B5                     u4491:
  5716  12B5  2AD0               	goto	l2843
  5717  12B6                     u4490:
  5718  12B6                     l2835:
  5719  12B6  0825               	movf	__div_to_l_@exp1,w
  5720  12B7  3A80               	xorlw	128
  5721  12B8  3E9F               	addlw	159
  5722  12B9  1803               	skipnc
  5723  12BA  2ABC               	goto	u4501
  5724  12BB  2ABD               	goto	u4500
  5725  12BC                     u4501:
  5726  12BC  2ABE               	goto	l2841
  5727  12BD                     u4500:
  5728  12BD  2A3F               	goto	l2805
  5729  12BE                     l2841:
  5730  12BE  3001               	movlw	1
  5731  12BF                     u4515:
  5732  12BF  1003               	clrc
  5733  12C0  0CA3               	rrf	__div_to_l_@quot+3,f
  5734  12C1  0CA2               	rrf	__div_to_l_@quot+2,f
  5735  12C2  0CA1               	rrf	__div_to_l_@quot+1,f
  5736  12C3  0CA0               	rrf	__div_to_l_@quot,f
  5737  12C4  3EFF               	addlw	-1
  5738  12C5  1D03               	skipz
  5739  12C6  2ABF               	goto	u4515
  5740  12C7  3001               	movlw	1
  5741  12C8  00FA               	movwf	??__div_to_l_
  5742  12C9  087A               	movf	??__div_to_l_,w
  5743  12CA  07A5               	addwf	__div_to_l_@exp1,f
  5744  12CB  1D03               	btfss	3,2
  5745  12CC  2ACE               	goto	u4521
  5746  12CD  2ACF               	goto	u4520
  5747  12CE                     u4521:
  5748  12CE  2ABE               	goto	l2841
  5749  12CF                     u4520:
  5750  12CF  2AE7               	goto	l2851
  5751  12D0                     l2843:
  5752  12D0  3020               	movlw	32
  5753  12D1  0225               	subwf	__div_to_l_@exp1,w
  5754  12D2  1C03               	skipc
  5755  12D3  2AD5               	goto	u4531
  5756  12D4  2AD6               	goto	u4530
  5757  12D5                     u4531:
  5758  12D5  2AE2               	goto	l517
  5759  12D6                     u4530:
  5760  12D6  2A3F               	goto	l2805
  5761  12D7                     l2849:
  5762  12D7  3001               	movlw	1
  5763  12D8  00FA               	movwf	??__div_to_l_
  5764  12D9                     u4545:
  5765  12D9  1003               	clrc
  5766  12DA  0DA0               	rlf	__div_to_l_@quot,f
  5767  12DB  0DA1               	rlf	__div_to_l_@quot+1,f
  5768  12DC  0DA2               	rlf	__div_to_l_@quot+2,f
  5769  12DD  0DA3               	rlf	__div_to_l_@quot+3,f
  5770  12DE  0BFA               	decfsz	??__div_to_l_,f
  5771  12DF  2AD9               	goto	u4545
  5772  12E0  3001               	movlw	1
  5773  12E1  02A5               	subwf	__div_to_l_@exp1,f
  5774  12E2                     l517:
  5775  12E2  0825               	movf	__div_to_l_@exp1,w
  5776  12E3  1D03               	btfss	3,2
  5777  12E4  2AE6               	goto	u4551
  5778  12E5  2AE7               	goto	u4550
  5779  12E6                     u4551:
  5780  12E6  2AD7               	goto	l2849
  5781  12E7                     u4550:
  5782  12E7                     l2851:
  5783  12E7  0823               	movf	__div_to_l_@quot+3,w
  5784  12E8  00F5               	movwf	?__div_to_l_+3
  5785  12E9  0822               	movf	__div_to_l_@quot+2,w
  5786  12EA  00F4               	movwf	?__div_to_l_+2
  5787  12EB  0821               	movf	__div_to_l_@quot+1,w
  5788  12EC  00F3               	movwf	?__div_to_l_+1
  5789  12ED  0820               	movf	__div_to_l_@quot,w
  5790  12EE  00F2               	movwf	?__div_to_l_
  5791  12EF                     l506:
  5792  12EF  0008               	return
  5793  12F0                     __end_of__div_to_l_:
  5794                           
  5795                           	psect	text13
  5796  1D28                     __ptext13:	
  5797 ;; *************** function ___wmul *****************
  5798 ;; Defined at:
  5799 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  multiplier      2    2[COMMON] unsigned int 
  5802 ;;  multiplicand    2    4[COMMON] unsigned int 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;  product         2    6[COMMON] unsigned int 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  2    2[COMMON] unsigned int 
  5807 ;; Registers used:
  5808 ;;		wreg, status,2, status,0
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5814 ;;      Params:         4       0       0       0       0
  5815 ;;      Locals:         2       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0
  5817 ;;      Totals:         6       0       0       0       0
  5818 ;;Total ram usage:        6 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:    1
  5821 ;; This function calls:
  5822 ;;		Nothing
  5823 ;; This function is called by:
  5824 ;;		_sprintf
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           
  5829                           ;psect for function ___wmul
  5830  1D28                     ___wmul:
  5831  1D28                     l2855:	
  5832                           ;incstack = 0
  5833                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5834                           
  5835  1D28  01F6               	clrf	___wmul@product
  5836  1D29  01F7               	clrf	___wmul@product+1
  5837  1D2A                     l2857:
  5838  1D2A  1C72               	btfss	___wmul@multiplier,0
  5839  1D2B  2D2D               	goto	u4561
  5840  1D2C  2D2E               	goto	u4560
  5841  1D2D                     u4561:
  5842  1D2D  2D34               	goto	l336
  5843  1D2E                     u4560:
  5844  1D2E                     l2859:
  5845  1D2E  0874               	movf	___wmul@multiplicand,w
  5846  1D2F  07F6               	addwf	___wmul@product,f
  5847  1D30  1803               	skipnc
  5848  1D31  0AF7               	incf	___wmul@product+1,f
  5849  1D32  0875               	movf	___wmul@multiplicand+1,w
  5850  1D33  07F7               	addwf	___wmul@product+1,f
  5851  1D34                     l336:
  5852  1D34  3001               	movlw	1
  5853  1D35                     u4575:
  5854  1D35  1003               	clrc
  5855  1D36  0DF4               	rlf	___wmul@multiplicand,f
  5856  1D37  0DF5               	rlf	___wmul@multiplicand+1,f
  5857  1D38  3EFF               	addlw	-1
  5858  1D39  1D03               	skipz
  5859  1D3A  2D35               	goto	u4575
  5860  1D3B                     l2861:
  5861  1D3B  3001               	movlw	1
  5862  1D3C                     u4585:
  5863  1D3C  1003               	clrc
  5864  1D3D  0CF3               	rrf	___wmul@multiplier+1,f
  5865  1D3E  0CF2               	rrf	___wmul@multiplier,f
  5866  1D3F  3EFF               	addlw	-1
  5867  1D40  1D03               	skipz
  5868  1D41  2D3C               	goto	u4585
  5869  1D42                     l2863:
  5870  1D42  0872               	movf	___wmul@multiplier,w
  5871  1D43  0473               	iorwf	___wmul@multiplier+1,w
  5872  1D44  1D03               	btfss	3,2
  5873  1D45  2D47               	goto	u4591
  5874  1D46  2D48               	goto	u4590
  5875  1D47                     u4591:
  5876  1D47  2D2A               	goto	l2857
  5877  1D48                     u4590:
  5878  1D48                     l2865:
  5879  1D48  0877               	movf	___wmul@product+1,w
  5880  1D49  00F3               	movwf	?___wmul+1
  5881  1D4A  0876               	movf	___wmul@product,w
  5882  1D4B  00F2               	movwf	?___wmul
  5883  1D4C                     l338:
  5884  1D4C  0008               	return
  5885  1D4D                     __end_of___wmul:
  5886                           
  5887                           	psect	text14
  5888  1E6D                     __ptext14:	
  5889 ;; *************** function ___llmod *****************
  5890 ;; Defined at:
  5891 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  divisor         4    2[COMMON] unsigned long 
  5894 ;;  dividend        4    6[COMMON] unsigned long 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;  counter         1    0[BANK0 ] unsigned char 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  4    2[COMMON] unsigned long 
  5899 ;; Registers used:
  5900 ;;		wreg, status,2, status,0
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5906 ;;      Params:         8       0       0       0       0
  5907 ;;      Locals:         0       1       0       0       0
  5908 ;;      Temps:          1       0       0       0       0
  5909 ;;      Totals:         9       1       0       0       0
  5910 ;;Total ram usage:       10 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    1
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		_sprintf
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           
  5921                           ;psect for function ___llmod
  5922  1E6D                     ___llmod:
  5923  1E6D                     l3523:	
  5924                           ;incstack = 0
  5925                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5926                           
  5927  1E6D  0875               	movf	___llmod@divisor+3,w
  5928  1E6E  0474               	iorwf	___llmod@divisor+2,w
  5929  1E6F  0473               	iorwf	___llmod@divisor+1,w
  5930  1E70  0472               	iorwf	___llmod@divisor,w
  5931  1E71  1903               	skipnz
  5932  1E72  2E74               	goto	u5821
  5933  1E73  2E75               	goto	u5820
  5934  1E74                     u5821:
  5935  1E74  2EBA               	goto	l3539
  5936  1E75                     u5820:
  5937  1E75                     l3525:
  5938  1E75  1283               	bcf	3,5	;RP0=0, select bank0
  5939  1E76  1303               	bcf	3,6	;RP1=0, select bank0
  5940  1E77  01A0               	clrf	___llmod@counter
  5941  1E78  0AA0               	incf	___llmod@counter,f
  5942  1E79  2E87               	goto	l3529
  5943  1E7A                     l3527:
  5944  1E7A  3001               	movlw	1
  5945  1E7B  00FA               	movwf	??___llmod
  5946  1E7C                     u5835:
  5947  1E7C  1003               	clrc
  5948  1E7D  0DF2               	rlf	___llmod@divisor,f
  5949  1E7E  0DF3               	rlf	___llmod@divisor+1,f
  5950  1E7F  0DF4               	rlf	___llmod@divisor+2,f
  5951  1E80  0DF5               	rlf	___llmod@divisor+3,f
  5952  1E81  0BFA               	decfsz	??___llmod,f
  5953  1E82  2E7C               	goto	u5835
  5954  1E83  3001               	movlw	1
  5955  1E84  00FA               	movwf	??___llmod
  5956  1E85  087A               	movf	??___llmod,w
  5957  1E86  07A0               	addwf	___llmod@counter,f
  5958  1E87                     l3529:
  5959  1E87  1FF5               	btfss	___llmod@divisor+3,7
  5960  1E88  2E8A               	goto	u5841
  5961  1E89  2E8B               	goto	u5840
  5962  1E8A                     u5841:
  5963  1E8A  2E7A               	goto	l3527
  5964  1E8B                     u5840:
  5965  1E8B                     l3531:
  5966  1E8B  0875               	movf	___llmod@divisor+3,w
  5967  1E8C  0279               	subwf	___llmod@dividend+3,w
  5968  1E8D  1D03               	skipz
  5969  1E8E  2E99               	goto	u5855
  5970  1E8F  0874               	movf	___llmod@divisor+2,w
  5971  1E90  0278               	subwf	___llmod@dividend+2,w
  5972  1E91  1D03               	skipz
  5973  1E92  2E99               	goto	u5855
  5974  1E93  0873               	movf	___llmod@divisor+1,w
  5975  1E94  0277               	subwf	___llmod@dividend+1,w
  5976  1E95  1D03               	skipz
  5977  1E96  2E99               	goto	u5855
  5978  1E97  0872               	movf	___llmod@divisor,w
  5979  1E98  0276               	subwf	___llmod@dividend,w
  5980  1E99                     u5855:
  5981  1E99  1C03               	skipc
  5982  1E9A  2E9C               	goto	u5851
  5983  1E9B  2E9D               	goto	u5850
  5984  1E9C                     u5851:
  5985  1E9C  2EAB               	goto	l3535
  5986  1E9D                     u5850:
  5987  1E9D                     l3533:
  5988  1E9D  0872               	movf	___llmod@divisor,w
  5989  1E9E  02F6               	subwf	___llmod@dividend,f
  5990  1E9F  0873               	movf	___llmod@divisor+1,w
  5991  1EA0  1C03               	skipc
  5992  1EA1  0F73               	incfsz	___llmod@divisor+1,w
  5993  1EA2  02F7               	subwf	___llmod@dividend+1,f
  5994  1EA3  0874               	movf	___llmod@divisor+2,w
  5995  1EA4  1C03               	skipc
  5996  1EA5  0F74               	incfsz	___llmod@divisor+2,w
  5997  1EA6  02F8               	subwf	___llmod@dividend+2,f
  5998  1EA7  0875               	movf	___llmod@divisor+3,w
  5999  1EA8  1C03               	skipc
  6000  1EA9  0F75               	incfsz	___llmod@divisor+3,w
  6001  1EAA  02F9               	subwf	___llmod@dividend+3,f
  6002  1EAB                     l3535:
  6003  1EAB  3001               	movlw	1
  6004  1EAC                     u5865:
  6005  1EAC  1003               	clrc
  6006  1EAD  0CF5               	rrf	___llmod@divisor+3,f
  6007  1EAE  0CF4               	rrf	___llmod@divisor+2,f
  6008  1EAF  0CF3               	rrf	___llmod@divisor+1,f
  6009  1EB0  0CF2               	rrf	___llmod@divisor,f
  6010  1EB1  3EFF               	addlw	-1
  6011  1EB2  1D03               	skipz
  6012  1EB3  2EAC               	goto	u5865
  6013  1EB4                     l3537:
  6014  1EB4  3001               	movlw	1
  6015  1EB5  02A0               	subwf	___llmod@counter,f
  6016  1EB6  1D03               	btfss	3,2
  6017  1EB7  2EB9               	goto	u5871
  6018  1EB8  2EBA               	goto	u5870
  6019  1EB9                     u5871:
  6020  1EB9  2E8B               	goto	l3531
  6021  1EBA                     u5870:
  6022  1EBA                     l3539:
  6023  1EBA  0879               	movf	___llmod@dividend+3,w
  6024  1EBB  00F5               	movwf	?___llmod+3
  6025  1EBC  0878               	movf	___llmod@dividend+2,w
  6026  1EBD  00F4               	movwf	?___llmod+2
  6027  1EBE  0877               	movf	___llmod@dividend+1,w
  6028  1EBF  00F3               	movwf	?___llmod+1
  6029  1EC0  0876               	movf	___llmod@dividend,w
  6030  1EC1  00F2               	movwf	?___llmod
  6031  1EC2                     l592:
  6032  1EC2  0008               	return
  6033  1EC3                     __end_of___llmod:
  6034                           
  6035                           	psect	text15
  6036  1F1C                     __ptext15:	
  6037 ;; *************** function ___lldiv *****************
  6038 ;; Defined at:
  6039 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  divisor         4    2[COMMON] unsigned long 
  6042 ;;  dividend        4    6[COMMON] unsigned long 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  quotient        4    0[BANK0 ] unsigned long 
  6045 ;;  counter         1    4[BANK0 ] unsigned char 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  4    2[COMMON] unsigned long 
  6048 ;; Registers used:
  6049 ;;		wreg, status,2, status,0
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6055 ;;      Params:         8       0       0       0       0
  6056 ;;      Locals:         0       5       0       0       0
  6057 ;;      Temps:          1       0       0       0       0
  6058 ;;      Totals:         9       5       0       0       0
  6059 ;;Total ram usage:       14 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; Hardware stack levels required when called:    1
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_sprintf
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           
  6070                           ;psect for function ___lldiv
  6071  1F1C                     ___lldiv:
  6072  1F1C                     l2869:	
  6073                           ;incstack = 0
  6074                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6075                           
  6076  1F1C  3000               	movlw	0
  6077  1F1D  1283               	bcf	3,5	;RP0=0, select bank0
  6078  1F1E  1303               	bcf	3,6	;RP1=0, select bank0
  6079  1F1F  00A3               	movwf	___lldiv@quotient+3
  6080  1F20  3000               	movlw	0
  6081  1F21  00A2               	movwf	___lldiv@quotient+2
  6082  1F22  3000               	movlw	0
  6083  1F23  00A1               	movwf	___lldiv@quotient+1
  6084  1F24  3000               	movlw	0
  6085  1F25  00A0               	movwf	___lldiv@quotient
  6086  1F26  0875               	movf	___lldiv@divisor+3,w
  6087  1F27  0474               	iorwf	___lldiv@divisor+2,w
  6088  1F28  0473               	iorwf	___lldiv@divisor+1,w
  6089  1F29  0472               	iorwf	___lldiv@divisor,w
  6090  1F2A  1903               	skipnz
  6091  1F2B  2F2D               	goto	u4601
  6092  1F2C  2F2E               	goto	u4600
  6093  1F2D                     u4601:
  6094  1F2D  2F7B               	goto	l2889
  6095  1F2E                     u4600:
  6096  1F2E                     l2871:
  6097  1F2E  01A4               	clrf	___lldiv@counter
  6098  1F2F  0AA4               	incf	___lldiv@counter,f
  6099  1F30  2F3E               	goto	l2875
  6100  1F31                     l2873:
  6101  1F31  3001               	movlw	1
  6102  1F32  00FA               	movwf	??___lldiv
  6103  1F33                     u4615:
  6104  1F33  1003               	clrc
  6105  1F34  0DF2               	rlf	___lldiv@divisor,f
  6106  1F35  0DF3               	rlf	___lldiv@divisor+1,f
  6107  1F36  0DF4               	rlf	___lldiv@divisor+2,f
  6108  1F37  0DF5               	rlf	___lldiv@divisor+3,f
  6109  1F38  0BFA               	decfsz	??___lldiv,f
  6110  1F39  2F33               	goto	u4615
  6111  1F3A  3001               	movlw	1
  6112  1F3B  00FA               	movwf	??___lldiv
  6113  1F3C  087A               	movf	??___lldiv,w
  6114  1F3D  07A4               	addwf	___lldiv@counter,f
  6115  1F3E                     l2875:
  6116  1F3E  1FF5               	btfss	___lldiv@divisor+3,7
  6117  1F3F  2F41               	goto	u4621
  6118  1F40  2F42               	goto	u4620
  6119  1F41                     u4621:
  6120  1F41  2F31               	goto	l2873
  6121  1F42                     u4620:
  6122  1F42                     l2877:
  6123  1F42  3001               	movlw	1
  6124  1F43  00FA               	movwf	??___lldiv
  6125  1F44                     u4635:
  6126  1F44  1003               	clrc
  6127  1F45  0DA0               	rlf	___lldiv@quotient,f
  6128  1F46  0DA1               	rlf	___lldiv@quotient+1,f
  6129  1F47  0DA2               	rlf	___lldiv@quotient+2,f
  6130  1F48  0DA3               	rlf	___lldiv@quotient+3,f
  6131  1F49  0BFA               	decfsz	??___lldiv,f
  6132  1F4A  2F44               	goto	u4635
  6133  1F4B                     l2879:
  6134  1F4B  0875               	movf	___lldiv@divisor+3,w
  6135  1F4C  0279               	subwf	___lldiv@dividend+3,w
  6136  1F4D  1D03               	skipz
  6137  1F4E  2F59               	goto	u4645
  6138  1F4F  0874               	movf	___lldiv@divisor+2,w
  6139  1F50  0278               	subwf	___lldiv@dividend+2,w
  6140  1F51  1D03               	skipz
  6141  1F52  2F59               	goto	u4645
  6142  1F53  0873               	movf	___lldiv@divisor+1,w
  6143  1F54  0277               	subwf	___lldiv@dividend+1,w
  6144  1F55  1D03               	skipz
  6145  1F56  2F59               	goto	u4645
  6146  1F57  0872               	movf	___lldiv@divisor,w
  6147  1F58  0276               	subwf	___lldiv@dividend,w
  6148  1F59                     u4645:
  6149  1F59  1C03               	skipc
  6150  1F5A  2F5C               	goto	u4641
  6151  1F5B  2F5D               	goto	u4640
  6152  1F5C                     u4641:
  6153  1F5C  2F6C               	goto	l2885
  6154  1F5D                     u4640:
  6155  1F5D                     l2881:
  6156  1F5D  0872               	movf	___lldiv@divisor,w
  6157  1F5E  02F6               	subwf	___lldiv@dividend,f
  6158  1F5F  0873               	movf	___lldiv@divisor+1,w
  6159  1F60  1C03               	skipc
  6160  1F61  0F73               	incfsz	___lldiv@divisor+1,w
  6161  1F62  02F7               	subwf	___lldiv@dividend+1,f
  6162  1F63  0874               	movf	___lldiv@divisor+2,w
  6163  1F64  1C03               	skipc
  6164  1F65  0F74               	incfsz	___lldiv@divisor+2,w
  6165  1F66  02F8               	subwf	___lldiv@dividend+2,f
  6166  1F67  0875               	movf	___lldiv@divisor+3,w
  6167  1F68  1C03               	skipc
  6168  1F69  0F75               	incfsz	___lldiv@divisor+3,w
  6169  1F6A  02F9               	subwf	___lldiv@dividend+3,f
  6170  1F6B                     l2883:
  6171  1F6B  1420               	bsf	___lldiv@quotient,0
  6172  1F6C                     l2885:
  6173  1F6C  3001               	movlw	1
  6174  1F6D                     u4655:
  6175  1F6D  1003               	clrc
  6176  1F6E  0CF5               	rrf	___lldiv@divisor+3,f
  6177  1F6F  0CF4               	rrf	___lldiv@divisor+2,f
  6178  1F70  0CF3               	rrf	___lldiv@divisor+1,f
  6179  1F71  0CF2               	rrf	___lldiv@divisor,f
  6180  1F72  3EFF               	addlw	-1
  6181  1F73  1D03               	skipz
  6182  1F74  2F6D               	goto	u4655
  6183  1F75                     l2887:
  6184  1F75  3001               	movlw	1
  6185  1F76  02A4               	subwf	___lldiv@counter,f
  6186  1F77  1D03               	btfss	3,2
  6187  1F78  2F7A               	goto	u4661
  6188  1F79  2F7B               	goto	u4660
  6189  1F7A                     u4661:
  6190  1F7A  2F42               	goto	l2877
  6191  1F7B                     u4660:
  6192  1F7B                     l2889:
  6193  1F7B  0823               	movf	___lldiv@quotient+3,w
  6194  1F7C  00F5               	movwf	?___lldiv+3
  6195  1F7D  0822               	movf	___lldiv@quotient+2,w
  6196  1F7E  00F4               	movwf	?___lldiv+2
  6197  1F7F  0821               	movf	___lldiv@quotient+1,w
  6198  1F80  00F3               	movwf	?___lldiv+1
  6199  1F81  0820               	movf	___lldiv@quotient,w
  6200  1F82  00F2               	movwf	?___lldiv
  6201  1F83                     l372:
  6202  1F83  0008               	return
  6203  1F84                     __end_of___lldiv:
  6204                           
  6205                           	psect	text16
  6206  1F84                     __ptext16:	
  6207 ;; *************** function ___fltol *****************
  6208 ;; Defined at:
  6209 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  f1              4   53[BANK0 ] unsigned long 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  exp1            1   63[BANK0 ] unsigned char 
  6214 ;;  sign1           1   62[BANK0 ] unsigned char 
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  4   53[BANK0 ] long 
  6217 ;; Registers used:
  6218 ;;		wreg, status,2, status,0
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6224 ;;      Params:         0       4       0       0       0
  6225 ;;      Locals:         0       2       0       0       0
  6226 ;;      Temps:          0       5       0       0       0
  6227 ;;      Totals:         0      11       0       0       0
  6228 ;;Total ram usage:       11 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; Hardware stack levels required when called:    1
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_sprintf
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           
  6239                           ;psect for function ___fltol
  6240  1F84                     ___fltol:
  6241  1F84                     l2933:	
  6242                           ;incstack = 0
  6243                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6244                           
  6245  1F84  1003               	clrc
  6246  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  6247  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  6248  1F87  0D57               	rlf	___fltol@f1+2,w
  6249  1F88  0D58               	rlf	___fltol@f1+3,w
  6250  1F89  00D9               	movwf	??___fltol
  6251  1F8A  0859               	movf	??___fltol,w
  6252  1F8B  00DF               	movwf	___fltol@exp1
  6253  1F8C  085F               	movf	___fltol@exp1,w
  6254  1F8D  1D03               	btfss	3,2
  6255  1F8E  2F90               	goto	u4781
  6256  1F8F  2F91               	goto	u4780
  6257  1F90                     u4781:
  6258  1F90  2F9A               	goto	l2939
  6259  1F91                     u4780:
  6260  1F91                     l2935:
  6261  1F91  3000               	movlw	0
  6262  1F92  00D8               	movwf	?___fltol+3
  6263  1F93  3000               	movlw	0
  6264  1F94  00D7               	movwf	?___fltol+2
  6265  1F95  3000               	movlw	0
  6266  1F96  00D6               	movwf	?___fltol+1
  6267  1F97  3000               	movlw	0
  6268  1F98  00D5               	movwf	?___fltol
  6269  1F99  2FFF               	goto	l539
  6270  1F9A                     l2939:
  6271  1F9A  0855               	movf	___fltol@f1,w
  6272  1F9B  00D9               	movwf	??___fltol
  6273  1F9C  0856               	movf	___fltol@f1+1,w
  6274  1F9D  00DA               	movwf	??___fltol+1
  6275  1F9E  0857               	movf	___fltol@f1+2,w
  6276  1F9F  00DB               	movwf	??___fltol+2
  6277  1FA0  0858               	movf	___fltol@f1+3,w
  6278  1FA1  00DC               	movwf	??___fltol+3
  6279  1FA2  301F               	movlw	31
  6280  1FA3                     u4795:
  6281  1FA3  1003               	clrc
  6282  1FA4  0CDC               	rrf	??___fltol+3,f
  6283  1FA5  0CDB               	rrf	??___fltol+2,f
  6284  1FA6  0CDA               	rrf	??___fltol+1,f
  6285  1FA7  0CD9               	rrf	??___fltol,f
  6286  1FA8                     u4790:
  6287  1FA8  3EFF               	addlw	-1
  6288  1FA9  1D03               	skipz
  6289  1FAA  2FA3               	goto	u4795
  6290  1FAB  0859               	movf	??___fltol,w
  6291  1FAC  00DD               	movwf	??___fltol+4
  6292  1FAD  085D               	movf	??___fltol+4,w
  6293  1FAE  00DE               	movwf	___fltol@sign1
  6294  1FAF                     l2941:
  6295  1FAF  17D7               	bsf	___fltol@f1+2,7
  6296  1FB0                     l2943:
  6297  1FB0  30FF               	movlw	255
  6298  1FB1  05D5               	andwf	___fltol@f1,f
  6299  1FB2  30FF               	movlw	255
  6300  1FB3  05D6               	andwf	___fltol@f1+1,f
  6301  1FB4  30FF               	movlw	255
  6302  1FB5  05D7               	andwf	___fltol@f1+2,f
  6303  1FB6  3000               	movlw	0
  6304  1FB7  05D8               	andwf	___fltol@f1+3,f
  6305  1FB8                     l2945:
  6306  1FB8  3096               	movlw	150
  6307  1FB9  02DF               	subwf	___fltol@exp1,f
  6308  1FBA                     l2947:
  6309  1FBA  1FDF               	btfss	___fltol@exp1,7
  6310  1FBB  2FBD               	goto	u4801
  6311  1FBC  2FBE               	goto	u4800
  6312  1FBD                     u4801:
  6313  1FBD  2FD8               	goto	l2957
  6314  1FBE                     u4800:
  6315  1FBE                     l2949:
  6316  1FBE  085F               	movf	___fltol@exp1,w
  6317  1FBF  3A80               	xorlw	128
  6318  1FC0  3E97               	addlw	151
  6319  1FC1  1803               	skipnc
  6320  1FC2  2FC4               	goto	u4811
  6321  1FC3  2FC5               	goto	u4810
  6322  1FC4                     u4811:
  6323  1FC4  2FC6               	goto	l2955
  6324  1FC5                     u4810:
  6325  1FC5  2F91               	goto	l2935
  6326  1FC6                     l2955:
  6327  1FC6  3001               	movlw	1
  6328  1FC7                     u4825:
  6329  1FC7  1003               	clrc
  6330  1FC8  0CD8               	rrf	___fltol@f1+3,f
  6331  1FC9  0CD7               	rrf	___fltol@f1+2,f
  6332  1FCA  0CD6               	rrf	___fltol@f1+1,f
  6333  1FCB  0CD5               	rrf	___fltol@f1,f
  6334  1FCC  3EFF               	addlw	-1
  6335  1FCD  1D03               	skipz
  6336  1FCE  2FC7               	goto	u4825
  6337  1FCF  3001               	movlw	1
  6338  1FD0  00D9               	movwf	??___fltol
  6339  1FD1  0859               	movf	??___fltol,w
  6340  1FD2  07DF               	addwf	___fltol@exp1,f
  6341  1FD3  1D03               	btfss	3,2
  6342  1FD4  2FD6               	goto	u4831
  6343  1FD5  2FD7               	goto	u4830
  6344  1FD6                     u4831:
  6345  1FD6  2FC6               	goto	l2955
  6346  1FD7                     u4830:
  6347  1FD7  2FEF               	goto	l2965
  6348  1FD8                     l2957:
  6349  1FD8  3020               	movlw	32
  6350  1FD9  025F               	subwf	___fltol@exp1,w
  6351  1FDA  1C03               	skipc
  6352  1FDB  2FDD               	goto	u4841
  6353  1FDC  2FDE               	goto	u4840
  6354  1FDD                     u4841:
  6355  1FDD  2FEA               	goto	l546
  6356  1FDE                     u4840:
  6357  1FDE  2F91               	goto	l2935
  6358  1FDF                     l2963:
  6359  1FDF  3001               	movlw	1
  6360  1FE0  00D9               	movwf	??___fltol
  6361  1FE1                     u4855:
  6362  1FE1  1003               	clrc
  6363  1FE2  0DD5               	rlf	___fltol@f1,f
  6364  1FE3  0DD6               	rlf	___fltol@f1+1,f
  6365  1FE4  0DD7               	rlf	___fltol@f1+2,f
  6366  1FE5  0DD8               	rlf	___fltol@f1+3,f
  6367  1FE6  0BD9               	decfsz	??___fltol,f
  6368  1FE7  2FE1               	goto	u4855
  6369  1FE8  3001               	movlw	1
  6370  1FE9  02DF               	subwf	___fltol@exp1,f
  6371  1FEA                     l546:
  6372  1FEA  085F               	movf	___fltol@exp1,w
  6373  1FEB  1D03               	btfss	3,2
  6374  1FEC  2FEE               	goto	u4861
  6375  1FED  2FEF               	goto	u4860
  6376  1FEE                     u4861:
  6377  1FEE  2FDF               	goto	l2963
  6378  1FEF                     u4860:
  6379  1FEF                     l2965:
  6380  1FEF  085E               	movf	___fltol@sign1,w
  6381  1FF0  1903               	btfsc	3,2
  6382  1FF1  2FF3               	goto	u4871
  6383  1FF2  2FF4               	goto	u4870
  6384  1FF3                     u4871:
  6385  1FF3  2FFF               	goto	l549
  6386  1FF4                     u4870:
  6387  1FF4                     l2967:
  6388  1FF4  09D5               	comf	___fltol@f1,f
  6389  1FF5  09D6               	comf	___fltol@f1+1,f
  6390  1FF6  09D7               	comf	___fltol@f1+2,f
  6391  1FF7  09D8               	comf	___fltol@f1+3,f
  6392  1FF8  0AD5               	incf	___fltol@f1,f
  6393  1FF9  1903               	skipnz
  6394  1FFA  0AD6               	incf	___fltol@f1+1,f
  6395  1FFB  1903               	skipnz
  6396  1FFC  0AD7               	incf	___fltol@f1+2,f
  6397  1FFD  1903               	skipnz
  6398  1FFE  0AD8               	incf	___fltol@f1+3,f
  6399  1FFF                     l549:
  6400  1FFF                     l539:
  6401  1FFF  0008               	return
  6402  2000                     __end_of___fltol:
  6403                           
  6404                           	psect	text17
  6405  1E1D                     __ptext17:	
  6406 ;; *************** function ___flsub *****************
  6407 ;; Defined at:
  6408 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;  a               4    0[BANK1 ] long 
  6411 ;;  b               4    4[BANK1 ] long 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;		None
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  4    0[BANK1 ] long 
  6416 ;; Registers used:
  6417 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6423 ;;      Params:         0       0       8       0       0
  6424 ;;      Locals:         0       0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0
  6426 ;;      Totals:         0       0       8       0       0
  6427 ;;Total ram usage:        8 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    2
  6430 ;; This function calls:
  6431 ;;		___fladd
  6432 ;; This function is called by:
  6433 ;;		_sprintf
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           
  6438                           ;psect for function ___flsub
  6439  1E1D                     ___flsub:
  6440  1E1D                     l2989:	
  6441                           ;incstack = 0
  6442                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6443                           
  6444  1E1D  3080               	movlw	128
  6445  1E1E  1683               	bsf	3,5	;RP0=1, select bank1
  6446  1E1F  1303               	bcf	3,6	;RP1=0, select bank1
  6447  1E20  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6448  1E21                     l2991:
  6449  1E21  0827               	movf	(___flsub@b+3)^(0+128),w
  6450  1E22  1283               	bcf	3,5	;RP0=0, select bank0
  6451  1E23  1303               	bcf	3,6	;RP1=0, select bank0
  6452  1E24  00D9               	movwf	___fladd@b+3
  6453  1E25  1683               	bsf	3,5	;RP0=1, select bank1
  6454  1E26  1303               	bcf	3,6	;RP1=0, select bank1
  6455  1E27  0826               	movf	(___flsub@b+2)^(0+128),w
  6456  1E28  1283               	bcf	3,5	;RP0=0, select bank0
  6457  1E29  1303               	bcf	3,6	;RP1=0, select bank0
  6458  1E2A  00D8               	movwf	___fladd@b+2
  6459  1E2B  1683               	bsf	3,5	;RP0=1, select bank1
  6460  1E2C  1303               	bcf	3,6	;RP1=0, select bank1
  6461  1E2D  0825               	movf	(___flsub@b+1)^(0+128),w
  6462  1E2E  1283               	bcf	3,5	;RP0=0, select bank0
  6463  1E2F  1303               	bcf	3,6	;RP1=0, select bank0
  6464  1E30  00D7               	movwf	___fladd@b+1
  6465  1E31  1683               	bsf	3,5	;RP0=1, select bank1
  6466  1E32  1303               	bcf	3,6	;RP1=0, select bank1
  6467  1E33  0824               	movf	___flsub@b^(0+128),w
  6468  1E34  1283               	bcf	3,5	;RP0=0, select bank0
  6469  1E35  1303               	bcf	3,6	;RP1=0, select bank0
  6470  1E36  00D6               	movwf	___fladd@b
  6471  1E37  1683               	bsf	3,5	;RP0=1, select bank1
  6472  1E38  1303               	bcf	3,6	;RP1=0, select bank1
  6473  1E39  0823               	movf	(___flsub@a+3)^(0+128),w
  6474  1E3A  1283               	bcf	3,5	;RP0=0, select bank0
  6475  1E3B  1303               	bcf	3,6	;RP1=0, select bank0
  6476  1E3C  00DD               	movwf	___fladd@a+3
  6477  1E3D  1683               	bsf	3,5	;RP0=1, select bank1
  6478  1E3E  1303               	bcf	3,6	;RP1=0, select bank1
  6479  1E3F  0822               	movf	(___flsub@a+2)^(0+128),w
  6480  1E40  1283               	bcf	3,5	;RP0=0, select bank0
  6481  1E41  1303               	bcf	3,6	;RP1=0, select bank0
  6482  1E42  00DC               	movwf	___fladd@a+2
  6483  1E43  1683               	bsf	3,5	;RP0=1, select bank1
  6484  1E44  1303               	bcf	3,6	;RP1=0, select bank1
  6485  1E45  0821               	movf	(___flsub@a+1)^(0+128),w
  6486  1E46  1283               	bcf	3,5	;RP0=0, select bank0
  6487  1E47  1303               	bcf	3,6	;RP1=0, select bank0
  6488  1E48  00DB               	movwf	___fladd@a+1
  6489  1E49  1683               	bsf	3,5	;RP0=1, select bank1
  6490  1E4A  1303               	bcf	3,6	;RP1=0, select bank1
  6491  1E4B  0820               	movf	___flsub@a^(0+128),w
  6492  1E4C  1283               	bcf	3,5	;RP0=0, select bank0
  6493  1E4D  1303               	bcf	3,6	;RP1=0, select bank0
  6494  1E4E  00DA               	movwf	___fladd@a
  6495  1E4F  120A  118A  254D  160A  158A  	fcall	___fladd
  6496  1E54  1283               	bcf	3,5	;RP0=0, select bank0
  6497  1E55  1303               	bcf	3,6	;RP1=0, select bank0
  6498  1E56  0859               	movf	?___fladd+3,w
  6499  1E57  1683               	bsf	3,5	;RP0=1, select bank1
  6500  1E58  1303               	bcf	3,6	;RP1=0, select bank1
  6501  1E59  00A3               	movwf	(?___flsub+3)^(0+128)
  6502  1E5A  1283               	bcf	3,5	;RP0=0, select bank0
  6503  1E5B  1303               	bcf	3,6	;RP1=0, select bank0
  6504  1E5C  0858               	movf	?___fladd+2,w
  6505  1E5D  1683               	bsf	3,5	;RP0=1, select bank1
  6506  1E5E  1303               	bcf	3,6	;RP1=0, select bank1
  6507  1E5F  00A2               	movwf	(?___flsub+2)^(0+128)
  6508  1E60  1283               	bcf	3,5	;RP0=0, select bank0
  6509  1E61  1303               	bcf	3,6	;RP1=0, select bank0
  6510  1E62  0857               	movf	?___fladd+1,w
  6511  1E63  1683               	bsf	3,5	;RP0=1, select bank1
  6512  1E64  1303               	bcf	3,6	;RP1=0, select bank1
  6513  1E65  00A1               	movwf	(?___flsub+1)^(0+128)
  6514  1E66  1283               	bcf	3,5	;RP0=0, select bank0
  6515  1E67  1303               	bcf	3,6	;RP1=0, select bank0
  6516  1E68  0856               	movf	?___fladd,w
  6517  1E69  1683               	bsf	3,5	;RP0=1, select bank1
  6518  1E6A  1303               	bcf	3,6	;RP1=0, select bank1
  6519  1E6B  00A0               	movwf	?___flsub^(0+128)
  6520  1E6C                     l709:
  6521  1E6C  0008               	return
  6522  1E6D                     __end_of___flsub:
  6523                           
  6524                           	psect	text18
  6525  054D                     __ptext18:	
  6526 ;; *************** function ___fladd *****************
  6527 ;; Defined at:
  6528 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;  b               4   54[BANK0 ] long 
  6531 ;;  a               4   58[BANK0 ] long 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  grs             1   73[BANK0 ] unsigned char 
  6534 ;;  bexp            1   72[BANK0 ] unsigned char 
  6535 ;;  aexp            1   71[BANK0 ] unsigned char 
  6536 ;;  signs           1   70[BANK0 ] unsigned char 
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  4   54[BANK0 ] unsigned char 
  6539 ;; Registers used:
  6540 ;;		wreg, status,2, status,0, btemp+1
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6546 ;;      Params:         0       8       0       0       0
  6547 ;;      Locals:         0       4       0       0       0
  6548 ;;      Temps:          0       8       0       0       0
  6549 ;;      Totals:         0      20       0       0       0
  6550 ;;Total ram usage:       20 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    1
  6553 ;; This function calls:
  6554 ;;		Nothing
  6555 ;; This function is called by:
  6556 ;;		_sprintf
  6557 ;;		___flsub
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           
  6562                           ;psect for function ___fladd
  6563  054D                     ___fladd:
  6564  054D                     l2343:	
  6565                           ;incstack = 0
  6566                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6567                           
  6568  054D  1283               	bcf	3,5	;RP0=0, select bank0
  6569  054E  1303               	bcf	3,6	;RP1=0, select bank0
  6570  054F  0859               	movf	___fladd@b+3,w
  6571  0550  3980               	andlw	128
  6572  0551  00DE               	movwf	??___fladd
  6573  0552  085E               	movf	??___fladd,w
  6574  0553  00E6               	movwf	___fladd@signs
  6575  0554                     l2345:
  6576  0554  0859               	movf	___fladd@b+3,w
  6577  0555  00DE               	movwf	??___fladd
  6578  0556  075E               	addwf	??___fladd,w
  6579  0557  00DF               	movwf	??___fladd+1
  6580  0558  085F               	movf	??___fladd+1,w
  6581  0559  00E8               	movwf	___fladd@bexp
  6582  055A                     l2347:
  6583  055A  1FD8               	btfss	___fladd@b+2,7
  6584  055B  2D5D               	goto	u3191
  6585  055C  2D5E               	goto	u3190
  6586  055D                     u3191:
  6587  055D  2D5F               	goto	l2351
  6588  055E                     u3190:
  6589  055E                     l2349:
  6590  055E  1468               	bsf	___fladd@bexp,0
  6591  055F                     l2351:
  6592  055F  0868               	movf	___fladd@bexp,w
  6593  0560  1903               	btfsc	3,2
  6594  0561  2D63               	goto	u3201
  6595  0562  2D64               	goto	u3200
  6596  0563                     u3201:
  6597  0563  2D74               	goto	l2361
  6598  0564                     u3200:
  6599  0564                     l2353:
  6600  0564  0A68               	incf	___fladd@bexp,w
  6601  0565  1D03               	btfss	3,2
  6602  0566  2D68               	goto	u3211
  6603  0567  2D69               	goto	u3210
  6604  0568                     u3211:
  6605  0568  2D71               	goto	l2357
  6606  0569                     u3210:
  6607  0569                     l2355:
  6608  0569  3000               	movlw	0
  6609  056A  00D9               	movwf	___fladd@b+3
  6610  056B  3000               	movlw	0
  6611  056C  00D8               	movwf	___fladd@b+2
  6612  056D  3000               	movlw	0
  6613  056E  00D7               	movwf	___fladd@b+1
  6614  056F  3000               	movlw	0
  6615  0570  00D6               	movwf	___fladd@b
  6616  0571                     l2357:
  6617  0571  17D8               	bsf	___fladd@b+2,7
  6618  0572                     l2359:
  6619  0572  01D9               	clrf	___fladd@b+3
  6620  0573  2D7C               	goto	l2363
  6621  0574                     l2361:
  6622  0574  3000               	movlw	0
  6623  0575  00D9               	movwf	___fladd@b+3
  6624  0576  3000               	movlw	0
  6625  0577  00D8               	movwf	___fladd@b+2
  6626  0578  3000               	movlw	0
  6627  0579  00D7               	movwf	___fladd@b+1
  6628  057A  3000               	movlw	0
  6629  057B  00D6               	movwf	___fladd@b
  6630  057C                     l2363:
  6631  057C  085D               	movf	___fladd@a+3,w
  6632  057D  3980               	andlw	128
  6633  057E  00DE               	movwf	??___fladd
  6634  057F  085E               	movf	??___fladd,w
  6635  0580  00E7               	movwf	___fladd@aexp
  6636  0581                     l2365:
  6637  0581  0867               	movf	___fladd@aexp,w
  6638  0582  0666               	xorwf	___fladd@signs,w
  6639  0583  1903               	skipnz
  6640  0584  2D86               	goto	u3221
  6641  0585  2D87               	goto	u3220
  6642  0586                     u3221:
  6643  0586  2D88               	goto	l2369
  6644  0587                     u3220:
  6645  0587                     l2367:
  6646  0587  1766               	bsf	___fladd@signs,6
  6647  0588                     l2369:
  6648  0588  085D               	movf	___fladd@a+3,w
  6649  0589  00DE               	movwf	??___fladd
  6650  058A  075E               	addwf	??___fladd,w
  6651  058B  00DF               	movwf	??___fladd+1
  6652  058C  085F               	movf	??___fladd+1,w
  6653  058D  00E7               	movwf	___fladd@aexp
  6654  058E                     l2371:
  6655  058E  1FDC               	btfss	___fladd@a+2,7
  6656  058F  2D91               	goto	u3231
  6657  0590  2D92               	goto	u3230
  6658  0591                     u3231:
  6659  0591  2D93               	goto	l2375
  6660  0592                     u3230:
  6661  0592                     l2373:
  6662  0592  1467               	bsf	___fladd@aexp,0
  6663  0593                     l2375:
  6664  0593  0867               	movf	___fladd@aexp,w
  6665  0594  1903               	btfsc	3,2
  6666  0595  2D97               	goto	u3241
  6667  0596  2D98               	goto	u3240
  6668  0597                     u3241:
  6669  0597  2DA8               	goto	l2385
  6670  0598                     u3240:
  6671  0598                     l2377:
  6672  0598  0A67               	incf	___fladd@aexp,w
  6673  0599  1D03               	btfss	3,2
  6674  059A  2D9C               	goto	u3251
  6675  059B  2D9D               	goto	u3250
  6676  059C                     u3251:
  6677  059C  2DA5               	goto	l2381
  6678  059D                     u3250:
  6679  059D                     l2379:
  6680  059D  3000               	movlw	0
  6681  059E  00DD               	movwf	___fladd@a+3
  6682  059F  3000               	movlw	0
  6683  05A0  00DC               	movwf	___fladd@a+2
  6684  05A1  3000               	movlw	0
  6685  05A2  00DB               	movwf	___fladd@a+1
  6686  05A3  3000               	movlw	0
  6687  05A4  00DA               	movwf	___fladd@a
  6688  05A5                     l2381:
  6689  05A5  17DC               	bsf	___fladd@a+2,7
  6690  05A6                     l2383:
  6691  05A6  01DD               	clrf	___fladd@a+3
  6692  05A7  2DB0               	goto	l663
  6693  05A8                     l2385:
  6694  05A8  3000               	movlw	0
  6695  05A9  00DD               	movwf	___fladd@a+3
  6696  05AA  3000               	movlw	0
  6697  05AB  00DC               	movwf	___fladd@a+2
  6698  05AC  3000               	movlw	0
  6699  05AD  00DB               	movwf	___fladd@a+1
  6700  05AE  3000               	movlw	0
  6701  05AF  00DA               	movwf	___fladd@a
  6702  05B0                     l663:
  6703  05B0  0868               	movf	___fladd@bexp,w
  6704  05B1  0267               	subwf	___fladd@aexp,w
  6705  05B2  1803               	skipnc
  6706  05B3  2DB5               	goto	u3261
  6707  05B4  2DB6               	goto	u3260
  6708  05B5                     u3261:
  6709  05B5  2DFA               	goto	l2421
  6710  05B6                     u3260:
  6711  05B6                     l2387:
  6712  05B6  1F66               	btfss	___fladd@signs,6
  6713  05B7  2DB9               	goto	u3271
  6714  05B8  2DBA               	goto	u3270
  6715  05B9                     u3271:
  6716  05B9  2DBE               	goto	l2391
  6717  05BA                     u3270:
  6718  05BA                     l2389:
  6719  05BA  3080               	movlw	128
  6720  05BB  00DE               	movwf	??___fladd
  6721  05BC  085E               	movf	??___fladd,w
  6722  05BD  06E6               	xorwf	___fladd@signs,f
  6723  05BE                     l2391:
  6724  05BE  0868               	movf	___fladd@bexp,w
  6725  05BF  00DE               	movwf	??___fladd
  6726  05C0  085E               	movf	??___fladd,w
  6727  05C1  00E9               	movwf	___fladd@grs
  6728  05C2                     l2393:
  6729  05C2  0867               	movf	___fladd@aexp,w
  6730  05C3  00DE               	movwf	??___fladd
  6731  05C4  085E               	movf	??___fladd,w
  6732  05C5  00E8               	movwf	___fladd@bexp
  6733  05C6                     l2395:
  6734  05C6  0869               	movf	___fladd@grs,w
  6735  05C7  00DE               	movwf	??___fladd
  6736  05C8  085E               	movf	??___fladd,w
  6737  05C9  00E7               	movwf	___fladd@aexp
  6738  05CA                     l2397:
  6739  05CA  0856               	movf	___fladd@b,w
  6740  05CB  00DE               	movwf	??___fladd
  6741  05CC  085E               	movf	??___fladd,w
  6742  05CD  00E9               	movwf	___fladd@grs
  6743  05CE                     l2399:
  6744  05CE  085A               	movf	___fladd@a,w
  6745  05CF  00DE               	movwf	??___fladd
  6746  05D0  085E               	movf	??___fladd,w
  6747  05D1  00D6               	movwf	___fladd@b
  6748  05D2                     l2401:
  6749  05D2  0869               	movf	___fladd@grs,w
  6750  05D3  00DE               	movwf	??___fladd
  6751  05D4  085E               	movf	??___fladd,w
  6752  05D5  00DA               	movwf	___fladd@a
  6753  05D6                     l2403:
  6754  05D6  0857               	movf	___fladd@b+1,w
  6755  05D7  00DE               	movwf	??___fladd
  6756  05D8  085E               	movf	??___fladd,w
  6757  05D9  00E9               	movwf	___fladd@grs
  6758  05DA                     l2405:
  6759  05DA  085B               	movf	___fladd@a+1,w
  6760  05DB  00DE               	movwf	??___fladd
  6761  05DC  085E               	movf	??___fladd,w
  6762  05DD  00D7               	movwf	___fladd@b+1
  6763  05DE                     l2407:
  6764  05DE  0869               	movf	___fladd@grs,w
  6765  05DF  00DE               	movwf	??___fladd
  6766  05E0  085E               	movf	??___fladd,w
  6767  05E1  00DB               	movwf	___fladd@a+1
  6768  05E2                     l2409:
  6769  05E2  0858               	movf	___fladd@b+2,w
  6770  05E3  00DE               	movwf	??___fladd
  6771  05E4  085E               	movf	??___fladd,w
  6772  05E5  00E9               	movwf	___fladd@grs
  6773  05E6                     l2411:
  6774  05E6  085C               	movf	___fladd@a+2,w
  6775  05E7  00DE               	movwf	??___fladd
  6776  05E8  085E               	movf	??___fladd,w
  6777  05E9  00D8               	movwf	___fladd@b+2
  6778  05EA                     l2413:
  6779  05EA  0869               	movf	___fladd@grs,w
  6780  05EB  00DE               	movwf	??___fladd
  6781  05EC  085E               	movf	??___fladd,w
  6782  05ED  00DC               	movwf	___fladd@a+2
  6783  05EE                     l2415:
  6784  05EE  0859               	movf	___fladd@b+3,w
  6785  05EF  00DE               	movwf	??___fladd
  6786  05F0  085E               	movf	??___fladd,w
  6787  05F1  00E9               	movwf	___fladd@grs
  6788  05F2                     l2417:
  6789  05F2  085D               	movf	___fladd@a+3,w
  6790  05F3  00DE               	movwf	??___fladd
  6791  05F4  085E               	movf	??___fladd,w
  6792  05F5  00D9               	movwf	___fladd@b+3
  6793  05F6                     l2419:
  6794  05F6  0869               	movf	___fladd@grs,w
  6795  05F7  00DE               	movwf	??___fladd
  6796  05F8  085E               	movf	??___fladd,w
  6797  05F9  00DD               	movwf	___fladd@a+3
  6798  05FA                     l2421:
  6799  05FA  01E9               	clrf	___fladd@grs
  6800  05FB                     l2423:
  6801  05FB  0867               	movf	___fladd@aexp,w
  6802  05FC  00DE               	movwf	??___fladd
  6803  05FD  01DF               	clrf	??___fladd+1
  6804  05FE  085F               	movf	??___fladd+1,w
  6805  05FF  00E1               	movwf	??___fladd+3
  6806  0600  0868               	movf	___fladd@bexp,w
  6807  0601  025E               	subwf	??___fladd,w
  6808  0602  00E0               	movwf	??___fladd+2
  6809  0603  1C03               	skipc
  6810  0604  03E1               	decf	??___fladd+3,f
  6811  0605  0861               	movf	??___fladd+3,w
  6812  0606  3A80               	xorlw	128
  6813  0607  00FF               	movwf	btemp+1
  6814  0608  3080               	movlw	128
  6815  0609  027F               	subwf	btemp+1,w
  6816  060A  1D03               	skipz
  6817  060B  2E0E               	goto	u3285
  6818  060C  301A               	movlw	26
  6819  060D  0260               	subwf	??___fladd+2,w
  6820  060E                     u3285:
  6821  060E  1C03               	skipc
  6822  060F  2E11               	goto	u3281
  6823  0610  2E12               	goto	u3280
  6824  0611                     u3281:
  6825  0611  2E4F               	goto	l2439
  6826  0612                     u3280:
  6827  0612                     l2425:
  6828  0612  1283               	bcf	3,5	;RP0=0, select bank0
  6829  0613  1303               	bcf	3,6	;RP1=0, select bank0
  6830  0614  0859               	movf	___fladd@b+3,w
  6831  0615  0458               	iorwf	___fladd@b+2,w
  6832  0616  0457               	iorwf	___fladd@b+1,w
  6833  0617  0456               	iorwf	___fladd@b,w
  6834  0618  1D03               	skipz
  6835  0619  2E1B               	goto	u3291
  6836  061A  2E1D               	goto	u3290
  6837  061B                     u3291:
  6838  061B  3001               	movlw	1
  6839  061C  2E1E               	goto	u3300
  6840  061D                     u3290:
  6841  061D  3000               	movlw	0
  6842  061E                     u3300:
  6843  061E  00DE               	movwf	??___fladd
  6844  061F  085E               	movf	??___fladd,w
  6845  0620  00E9               	movwf	___fladd@grs
  6846  0621  3000               	movlw	0
  6847  0622  00D9               	movwf	___fladd@b+3
  6848  0623  3000               	movlw	0
  6849  0624  00D8               	movwf	___fladd@b+2
  6850  0625  3000               	movlw	0
  6851  0626  00D7               	movwf	___fladd@b+1
  6852  0627  3000               	movlw	0
  6853  0628  00D6               	movwf	___fladd@b
  6854  0629  0867               	movf	___fladd@aexp,w
  6855  062A  00DE               	movwf	??___fladd
  6856  062B  085E               	movf	??___fladd,w
  6857  062C  00E8               	movwf	___fladd@bexp
  6858  062D  2E57               	goto	l667
  6859  062E                     l669:
  6860  062E  1C69               	btfss	___fladd@grs,0
  6861  062F  2E31               	goto	u3311
  6862  0630  2E32               	goto	u3310
  6863  0631                     u3311:
  6864  0631  2E3B               	goto	l2429
  6865  0632                     u3310:
  6866  0632                     l2427:
  6867  0632  0869               	movf	___fladd@grs,w
  6868  0633  00DE               	movwf	??___fladd
  6869  0634  1003               	clrc
  6870  0635  0C5E               	rrf	??___fladd,w
  6871  0636  3801               	iorlw	1
  6872  0637  00DF               	movwf	??___fladd+1
  6873  0638  085F               	movf	??___fladd+1,w
  6874  0639  00E9               	movwf	___fladd@grs
  6875  063A  2E3D               	goto	l2431
  6876  063B                     l2429:
  6877  063B  1003               	clrc
  6878  063C  0CE9               	rrf	___fladd@grs,f
  6879  063D                     l2431:
  6880  063D  1C56               	btfss	___fladd@b,0
  6881  063E  2E40               	goto	u3321
  6882  063F  2E41               	goto	u3320
  6883  0640                     u3321:
  6884  0640  2E42               	goto	l2435
  6885  0641                     u3320:
  6886  0641                     l2433:
  6887  0641  17E9               	bsf	___fladd@grs,7
  6888  0642                     l2435:
  6889  0642  3001               	movlw	1
  6890  0643  00DE               	movwf	??___fladd
  6891  0644                     u3335:
  6892  0644  0D59               	rlf	___fladd@b+3,w
  6893  0645  0CD9               	rrf	___fladd@b+3,f
  6894  0646  0CD8               	rrf	___fladd@b+2,f
  6895  0647  0CD7               	rrf	___fladd@b+1,f
  6896  0648  0CD6               	rrf	___fladd@b,f
  6897  0649  0BDE               	decfsz	??___fladd& (0+127),f
  6898  064A  2E44               	goto	u3335
  6899  064B                     l2437:
  6900  064B  3001               	movlw	1
  6901  064C  00DE               	movwf	??___fladd
  6902  064D  085E               	movf	??___fladd,w
  6903  064E  07E8               	addwf	___fladd@bexp,f
  6904  064F                     l2439:
  6905  064F  1283               	bcf	3,5	;RP0=0, select bank0
  6906  0650  1303               	bcf	3,6	;RP1=0, select bank0
  6907  0651  0867               	movf	___fladd@aexp,w
  6908  0652  0268               	subwf	___fladd@bexp,w
  6909  0653  1C03               	skipc
  6910  0654  2E56               	goto	u3341
  6911  0655  2E57               	goto	u3340
  6912  0656                     u3341:
  6913  0656  2E2E               	goto	l669
  6914  0657                     u3340:
  6915  0657                     l667:
  6916  0657  1B66               	btfsc	___fladd@signs,6
  6917  0658  2E5A               	goto	u3351
  6918  0659  2E5B               	goto	u3350
  6919  065A                     u3351:
  6920  065A  2EA6               	goto	l2465
  6921  065B                     u3350:
  6922  065B                     l2441:
  6923  065B  0868               	movf	___fladd@bexp,w
  6924  065C  1D03               	btfss	3,2
  6925  065D  2E5F               	goto	u3361
  6926  065E  2E60               	goto	u3360
  6927  065F                     u3361:
  6928  065F  2E69               	goto	l2447
  6929  0660                     u3360:
  6930  0660                     l2443:
  6931  0660  3000               	movlw	0
  6932  0661  00D9               	movwf	?___fladd+3
  6933  0662  3000               	movlw	0
  6934  0663  00D8               	movwf	?___fladd+2
  6935  0664  3000               	movlw	0
  6936  0665  00D7               	movwf	?___fladd+1
  6937  0666  3000               	movlw	0
  6938  0667  00D6               	movwf	?___fladd
  6939  0668  2FD4               	goto	l676
  6940  0669                     l2447:
  6941  0669  085A               	movf	___fladd@a,w
  6942  066A  07D6               	addwf	___fladd@b,f
  6943  066B  085B               	movf	___fladd@a+1,w
  6944  066C  1103               	clrz
  6945  066D  1803               	skipnc
  6946  066E  3E01               	addlw	1
  6947  066F  1903               	skipnz
  6948  0670  2E72               	goto	u3371
  6949  0671  07D7               	addwf	___fladd@b+1,f
  6950  0672                     u3371:
  6951  0672  085C               	movf	___fladd@a+2,w
  6952  0673  1103               	clrz
  6953  0674  1803               	skipnc
  6954  0675  3E01               	addlw	1
  6955  0676  1903               	skipnz
  6956  0677  2E79               	goto	u3372
  6957  0678  07D8               	addwf	___fladd@b+2,f
  6958  0679                     u3372:
  6959  0679  085D               	movf	___fladd@a+3,w
  6960  067A  1103               	clrz
  6961  067B  1803               	skipnc
  6962  067C  3E01               	addlw	1
  6963  067D  1903               	skipnz
  6964  067E  2E80               	goto	u3373
  6965  067F  07D9               	addwf	___fladd@b+3,f
  6966  0680                     u3373:
  6967  0680                     l2449:
  6968  0680  1C59               	btfss	___fladd@b+3,0
  6969  0681  2E83               	goto	u3381
  6970  0682  2E84               	goto	u3380
  6971  0683                     u3381:
  6972  0683  2F5A               	goto	l2499
  6973  0684                     u3380:
  6974  0684                     l2451:
  6975  0684  1C69               	btfss	___fladd@grs,0
  6976  0685  2E87               	goto	u3391
  6977  0686  2E88               	goto	u3390
  6978  0687                     u3391:
  6979  0687  2E91               	goto	l2455
  6980  0688                     u3390:
  6981  0688                     l2453:
  6982  0688  0869               	movf	___fladd@grs,w
  6983  0689  00DE               	movwf	??___fladd
  6984  068A  1003               	clrc
  6985  068B  0C5E               	rrf	??___fladd,w
  6986  068C  3801               	iorlw	1
  6987  068D  00DF               	movwf	??___fladd+1
  6988  068E  085F               	movf	??___fladd+1,w
  6989  068F  00E9               	movwf	___fladd@grs
  6990  0690  2E93               	goto	l2457
  6991  0691                     l2455:
  6992  0691  1003               	clrc
  6993  0692  0CE9               	rrf	___fladd@grs,f
  6994  0693                     l2457:
  6995  0693  1C56               	btfss	___fladd@b,0
  6996  0694  2E96               	goto	u3401
  6997  0695  2E97               	goto	u3400
  6998  0696                     u3401:
  6999  0696  2E98               	goto	l2461
  7000  0697                     u3400:
  7001  0697                     l2459:
  7002  0697  17E9               	bsf	___fladd@grs,7
  7003  0698                     l2461:
  7004  0698  3001               	movlw	1
  7005  0699  00DE               	movwf	??___fladd
  7006  069A                     u3415:
  7007  069A  0D59               	rlf	___fladd@b+3,w
  7008  069B  0CD9               	rrf	___fladd@b+3,f
  7009  069C  0CD8               	rrf	___fladd@b+2,f
  7010  069D  0CD7               	rrf	___fladd@b+1,f
  7011  069E  0CD6               	rrf	___fladd@b,f
  7012  069F  0BDE               	decfsz	??___fladd& (0+127),f
  7013  06A0  2E9A               	goto	u3415
  7014  06A1                     l2463:
  7015  06A1  3001               	movlw	1
  7016  06A2  00DE               	movwf	??___fladd
  7017  06A3  085E               	movf	??___fladd,w
  7018  06A4  07E8               	addwf	___fladd@bexp,f
  7019  06A5  2F5A               	goto	l2499
  7020  06A6                     l2465:
  7021  06A6  0859               	movf	___fladd@b+3,w
  7022  06A7  3A80               	xorlw	128
  7023  06A8  00FF               	movwf	btemp+1
  7024  06A9  085D               	movf	___fladd@a+3,w
  7025  06AA  3A80               	xorlw	128
  7026  06AB  027F               	subwf	btemp+1,w
  7027  06AC  1D03               	skipz
  7028  06AD  2EB8               	goto	u3423
  7029  06AE  085C               	movf	___fladd@a+2,w
  7030  06AF  0258               	subwf	___fladd@b+2,w
  7031  06B0  1D03               	skipz
  7032  06B1  2EB8               	goto	u3423
  7033  06B2  085B               	movf	___fladd@a+1,w
  7034  06B3  0257               	subwf	___fladd@b+1,w
  7035  06B4  1D03               	skipz
  7036  06B5  2EB8               	goto	u3423
  7037  06B6  085A               	movf	___fladd@a,w
  7038  06B7  0256               	subwf	___fladd@b,w
  7039  06B8                     u3423:
  7040  06B8  1803               	skipnc
  7041  06B9  2EBB               	goto	u3421
  7042  06BA  2EBC               	goto	u3420
  7043  06BB                     u3421:
  7044  06BB  2F14               	goto	l2475
  7045  06BC                     u3420:
  7046  06BC                     l2467:
  7047  06BC  30FF               	movlw	255
  7048  06BD  00DE               	movwf	??___fladd
  7049  06BE  30FF               	movlw	255
  7050  06BF  00DF               	movwf	??___fladd+1
  7051  06C0  30FF               	movlw	255
  7052  06C1  00E0               	movwf	??___fladd+2
  7053  06C2  30FF               	movlw	255
  7054  06C3  00E1               	movwf	??___fladd+3
  7055  06C4  085A               	movf	___fladd@a,w
  7056  06C5  00E2               	movwf	??___fladd+4
  7057  06C6  085B               	movf	___fladd@a+1,w
  7058  06C7  00E3               	movwf	??___fladd+5
  7059  06C8  085C               	movf	___fladd@a+2,w
  7060  06C9  00E4               	movwf	??___fladd+6
  7061  06CA  085D               	movf	___fladd@a+3,w
  7062  06CB  00E5               	movwf	??___fladd+7
  7063  06CC  0856               	movf	___fladd@b,w
  7064  06CD  02E2               	subwf	??___fladd+4,f
  7065  06CE  0857               	movf	___fladd@b+1,w
  7066  06CF  1C03               	skipc
  7067  06D0  0F57               	incfsz	___fladd@b+1,w
  7068  06D1  2ED3               	goto	u3431
  7069  06D2  2ED4               	goto	u3432
  7070  06D3                     u3431:
  7071  06D3  02E3               	subwf	??___fladd+5,f
  7072  06D4                     u3432:
  7073  06D4  0858               	movf	___fladd@b+2,w
  7074  06D5  1C03               	skipc
  7075  06D6  0F58               	incfsz	___fladd@b+2,w
  7076  06D7  2ED9               	goto	u3433
  7077  06D8  2EDA               	goto	u3434
  7078  06D9                     u3433:
  7079  06D9  02E4               	subwf	??___fladd+6,f
  7080  06DA                     u3434:
  7081  06DA  0859               	movf	___fladd@b+3,w
  7082  06DB  1C03               	skipc
  7083  06DC  0F59               	incfsz	___fladd@b+3,w
  7084  06DD  2EDF               	goto	u3435
  7085  06DE  2EE0               	goto	u3436
  7086  06DF                     u3435:
  7087  06DF  02E5               	subwf	??___fladd+7,f
  7088  06E0                     u3436:
  7089  06E0  0862               	movf	??___fladd+4,w
  7090  06E1  07DE               	addwf	??___fladd,f
  7091  06E2  0863               	movf	??___fladd+5,w
  7092  06E3  1803               	skipnc
  7093  06E4  0F63               	incfsz	??___fladd+5,w
  7094  06E5  2EE7               	goto	u3440
  7095  06E6  2EE8               	goto	u3441
  7096  06E7                     u3440:
  7097  06E7  07DF               	addwf	??___fladd+1,f
  7098  06E8                     u3441:
  7099  06E8  0864               	movf	??___fladd+6,w
  7100  06E9  1803               	skipnc
  7101  06EA  0F64               	incfsz	??___fladd+6,w
  7102  06EB  2EED               	goto	u3442
  7103  06EC  2EEE               	goto	u3443
  7104  06ED                     u3442:
  7105  06ED  07E0               	addwf	??___fladd+2,f
  7106  06EE                     u3443:
  7107  06EE  0865               	movf	??___fladd+7,w
  7108  06EF  1803               	skipnc
  7109  06F0  0A65               	incf	??___fladd+7,w
  7110  06F1  07E1               	addwf	??___fladd+3,f
  7111  06F2  0861               	movf	??___fladd+3,w
  7112  06F3  00D9               	movwf	___fladd@b+3
  7113  06F4  0860               	movf	??___fladd+2,w
  7114  06F5  00D8               	movwf	___fladd@b+2
  7115  06F6  085F               	movf	??___fladd+1,w
  7116  06F7  00D7               	movwf	___fladd@b+1
  7117  06F8  085E               	movf	??___fladd,w
  7118  06F9  00D6               	movwf	___fladd@b
  7119  06FA                     l2469:
  7120  06FA  3080               	movlw	128
  7121  06FB  00DE               	movwf	??___fladd
  7122  06FC  085E               	movf	??___fladd,w
  7123  06FD  06E6               	xorwf	___fladd@signs,f
  7124  06FE  09E9               	comf	___fladd@grs,f
  7125  06FF  0AE9               	incf	___fladd@grs,f
  7126  0700                     l2471:
  7127  0700  0869               	movf	___fladd@grs,w
  7128  0701  1D03               	btfss	3,2
  7129  0702  2F04               	goto	u3451
  7130  0703  2F05               	goto	u3450
  7131  0704                     u3451:
  7132  0704  2F22               	goto	l684
  7133  0705                     u3450:
  7134  0705                     l2473:
  7135  0705  3001               	movlw	1
  7136  0706  07D6               	addwf	___fladd@b,f
  7137  0707  3000               	movlw	0
  7138  0708  1803               	skipnc
  7139  0709  3001               	movlw	1
  7140  070A  07D7               	addwf	___fladd@b+1,f
  7141  070B  3000               	movlw	0
  7142  070C  1803               	skipnc
  7143  070D  3001               	movlw	1
  7144  070E  07D8               	addwf	___fladd@b+2,f
  7145  070F  3000               	movlw	0
  7146  0710  1803               	skipnc
  7147  0711  3001               	movlw	1
  7148  0712  07D9               	addwf	___fladd@b+3,f
  7149  0713  2F22               	goto	l684
  7150  0714                     l2475:
  7151  0714  085A               	movf	___fladd@a,w
  7152  0715  02D6               	subwf	___fladd@b,f
  7153  0716  085B               	movf	___fladd@a+1,w
  7154  0717  1C03               	skipc
  7155  0718  0F5B               	incfsz	___fladd@a+1,w
  7156  0719  02D7               	subwf	___fladd@b+1,f
  7157  071A  085C               	movf	___fladd@a+2,w
  7158  071B  1C03               	skipc
  7159  071C  0F5C               	incfsz	___fladd@a+2,w
  7160  071D  02D8               	subwf	___fladd@b+2,f
  7161  071E  085D               	movf	___fladd@a+3,w
  7162  071F  1C03               	skipc
  7163  0720  0F5D               	incfsz	___fladd@a+3,w
  7164  0721  02D9               	subwf	___fladd@b+3,f
  7165  0722                     l684:
  7166  0722  0859               	movf	___fladd@b+3,w
  7167  0723  0458               	iorwf	___fladd@b+2,w
  7168  0724  0457               	iorwf	___fladd@b+1,w
  7169  0725  0456               	iorwf	___fladd@b,w
  7170  0726  1D03               	skipz
  7171  0727  2F29               	goto	u3461
  7172  0728  2F2A               	goto	u3460
  7173  0729                     u3461:
  7174  0729  2F56               	goto	l2497
  7175  072A                     u3460:
  7176  072A                     l2477:
  7177  072A  0869               	movf	___fladd@grs,w
  7178  072B  1D03               	btfss	3,2
  7179  072C  2F2E               	goto	u3471
  7180  072D  2F2F               	goto	u3470
  7181  072E                     u3471:
  7182  072E  2F56               	goto	l2497
  7183  072F                     u3470:
  7184  072F                     l2479:
  7185  072F  3000               	movlw	0
  7186  0730  00D9               	movwf	?___fladd+3
  7187  0731  3000               	movlw	0
  7188  0732  00D8               	movwf	?___fladd+2
  7189  0733  3000               	movlw	0
  7190  0734  00D7               	movwf	?___fladd+1
  7191  0735  3000               	movlw	0
  7192  0736  00D6               	movwf	?___fladd
  7193  0737  2FD4               	goto	l676
  7194  0738                     l2483:
  7195  0738  3001               	movlw	1
  7196  0739  00DE               	movwf	??___fladd
  7197  073A                     u3485:
  7198  073A  1003               	clrc
  7199  073B  0DD6               	rlf	___fladd@b,f
  7200  073C  0DD7               	rlf	___fladd@b+1,f
  7201  073D  0DD8               	rlf	___fladd@b+2,f
  7202  073E  0DD9               	rlf	___fladd@b+3,f
  7203  073F  0BDE               	decfsz	??___fladd,f
  7204  0740  2F3A               	goto	u3485
  7205  0741                     l2485:
  7206  0741  1FE9               	btfss	___fladd@grs,7
  7207  0742  2F44               	goto	u3491
  7208  0743  2F45               	goto	u3490
  7209  0744                     u3491:
  7210  0744  2F46               	goto	l688
  7211  0745                     u3490:
  7212  0745                     l2487:
  7213  0745  1456               	bsf	___fladd@b,0
  7214  0746                     l688:
  7215  0746  1C69               	btfss	___fladd@grs,0
  7216  0747  2F49               	goto	u3501
  7217  0748  2F4A               	goto	u3500
  7218  0749                     u3501:
  7219  0749  2F4D               	goto	l2491
  7220  074A                     u3500:
  7221  074A                     l2489:
  7222  074A  1403               	setc
  7223  074B  0DE9               	rlf	___fladd@grs,f
  7224  074C  2F4F               	goto	l2493
  7225  074D                     l2491:
  7226  074D  1003               	clrc
  7227  074E  0DE9               	rlf	___fladd@grs,f
  7228  074F                     l2493:
  7229  074F  0868               	movf	___fladd@bexp,w
  7230  0750  1903               	btfsc	3,2
  7231  0751  2F53               	goto	u3511
  7232  0752  2F54               	goto	u3510
  7233  0753                     u3511:
  7234  0753  2F56               	goto	l2497
  7235  0754                     u3510:
  7236  0754                     l2495:
  7237  0754  3001               	movlw	1
  7238  0755  02E8               	subwf	___fladd@bexp,f
  7239  0756                     l2497:
  7240  0756  1FD8               	btfss	___fladd@b+2,7
  7241  0757  2F59               	goto	u3521
  7242  0758  2F5A               	goto	u3520
  7243  0759                     u3521:
  7244  0759  2F38               	goto	l2483
  7245  075A                     u3520:
  7246  075A                     l2499:
  7247  075A  01E7               	clrf	___fladd@aexp
  7248  075B                     l2501:
  7249  075B  1FE9               	btfss	___fladd@grs,7
  7250  075C  2F5E               	goto	u3531
  7251  075D  2F5F               	goto	u3530
  7252  075E                     u3531:
  7253  075E  2F6D               	goto	l2509
  7254  075F                     u3530:
  7255  075F                     l2503:
  7256  075F  0869               	movf	___fladd@grs,w
  7257  0760  397F               	andlw	127
  7258  0761  1903               	btfsc	3,2
  7259  0762  2F64               	goto	u3541
  7260  0763  2F65               	goto	u3540
  7261  0764                     u3541:
  7262  0764  2F68               	goto	l694
  7263  0765                     u3540:
  7264  0765                     l2505:
  7265  0765  01E7               	clrf	___fladd@aexp
  7266  0766  0AE7               	incf	___fladd@aexp,f
  7267  0767  2F6D               	goto	l2509
  7268  0768                     l694:
  7269  0768  1C56               	btfss	___fladd@b,0
  7270  0769  2F6B               	goto	u3551
  7271  076A  2F6C               	goto	u3550
  7272  076B                     u3551:
  7273  076B  2F6D               	goto	l2509
  7274  076C                     u3550:
  7275  076C  2F65               	goto	l2505
  7276  076D                     l2509:
  7277  076D  0867               	movf	___fladd@aexp,w
  7278  076E  1903               	btfsc	3,2
  7279  076F  2F71               	goto	u3561
  7280  0770  2F72               	goto	u3560
  7281  0771                     u3561:
  7282  0771  2FA6               	goto	l697
  7283  0772                     u3560:
  7284  0772                     l2511:
  7285  0772  3001               	movlw	1
  7286  0773  07D6               	addwf	___fladd@b,f
  7287  0774  3000               	movlw	0
  7288  0775  1803               	skipnc
  7289  0776  3001               	movlw	1
  7290  0777  07D7               	addwf	___fladd@b+1,f
  7291  0778  3000               	movlw	0
  7292  0779  1803               	skipnc
  7293  077A  3001               	movlw	1
  7294  077B  07D8               	addwf	___fladd@b+2,f
  7295  077C  3000               	movlw	0
  7296  077D  1803               	skipnc
  7297  077E  3001               	movlw	1
  7298  077F  07D9               	addwf	___fladd@b+3,f
  7299  0780                     l2513:
  7300  0780  1C59               	btfss	___fladd@b+3,0
  7301  0781  2F83               	goto	u3571
  7302  0782  2F84               	goto	u3570
  7303  0783                     u3571:
  7304  0783  2FA6               	goto	l697
  7305  0784                     u3570:
  7306  0784                     l2515:
  7307  0784  0856               	movf	___fladd@b,w
  7308  0785  00DE               	movwf	??___fladd
  7309  0786  0857               	movf	___fladd@b+1,w
  7310  0787  00DF               	movwf	??___fladd+1
  7311  0788  0858               	movf	___fladd@b+2,w
  7312  0789  00E0               	movwf	??___fladd+2
  7313  078A  0859               	movf	___fladd@b+3,w
  7314  078B  00E1               	movwf	??___fladd+3
  7315  078C  3001               	movlw	1
  7316  078D  00E2               	movwf	??___fladd+4
  7317  078E                     u3585:
  7318  078E  0D61               	rlf	??___fladd+3,w
  7319  078F  0CE1               	rrf	??___fladd+3,f
  7320  0790  0CE0               	rrf	??___fladd+2,f
  7321  0791  0CDF               	rrf	??___fladd+1,f
  7322  0792  0CDE               	rrf	??___fladd,f
  7323  0793                     u3580:
  7324  0793  0BE2               	decfsz	??___fladd+4,f
  7325  0794  2F8E               	goto	u3585
  7326  0795  0861               	movf	??___fladd+3,w
  7327  0796  00D9               	movwf	___fladd@b+3
  7328  0797  0860               	movf	??___fladd+2,w
  7329  0798  00D8               	movwf	___fladd@b+2
  7330  0799  085F               	movf	??___fladd+1,w
  7331  079A  00D7               	movwf	___fladd@b+1
  7332  079B  085E               	movf	??___fladd,w
  7333  079C  00D6               	movwf	___fladd@b
  7334  079D  0A68               	incf	___fladd@bexp,w
  7335  079E  1903               	btfsc	3,2
  7336  079F  2FA1               	goto	u3591
  7337  07A0  2FA2               	goto	u3590
  7338  07A1                     u3591:
  7339  07A1  2FA6               	goto	l697
  7340  07A2                     u3590:
  7341  07A2                     l2517:
  7342  07A2  3001               	movlw	1
  7343  07A3  00DE               	movwf	??___fladd
  7344  07A4  085E               	movf	??___fladd,w
  7345  07A5  07E8               	addwf	___fladd@bexp,f
  7346  07A6                     l697:
  7347  07A6  0A68               	incf	___fladd@bexp,w
  7348  07A7  1903               	btfsc	3,2
  7349  07A8  2FAA               	goto	u3601
  7350  07A9  2FAB               	goto	u3600
  7351  07AA                     u3601:
  7352  07AA  2FB0               	goto	l2521
  7353  07AB                     u3600:
  7354  07AB                     l2519:
  7355  07AB  0868               	movf	___fladd@bexp,w
  7356  07AC  1D03               	btfss	3,2
  7357  07AD  2FAF               	goto	u3611
  7358  07AE  2FB0               	goto	u3610
  7359  07AF                     u3611:
  7360  07AF  2FBE               	goto	l2527
  7361  07B0                     u3610:
  7362  07B0                     l2521:
  7363  07B0  3000               	movlw	0
  7364  07B1  00D9               	movwf	___fladd@b+3
  7365  07B2  3000               	movlw	0
  7366  07B3  00D8               	movwf	___fladd@b+2
  7367  07B4  3000               	movlw	0
  7368  07B5  00D7               	movwf	___fladd@b+1
  7369  07B6  3000               	movlw	0
  7370  07B7  00D6               	movwf	___fladd@b
  7371  07B8                     l2523:
  7372  07B8  0868               	movf	___fladd@bexp,w
  7373  07B9  1D03               	btfss	3,2
  7374  07BA  2FBC               	goto	u3621
  7375  07BB  2FBD               	goto	u3620
  7376  07BC                     u3621:
  7377  07BC  2FBE               	goto	l2527
  7378  07BD                     u3620:
  7379  07BD                     l2525:
  7380  07BD  01E6               	clrf	___fladd@signs
  7381  07BE                     l2527:
  7382  07BE  1C68               	btfss	___fladd@bexp,0
  7383  07BF  2FC1               	goto	u3631
  7384  07C0  2FC2               	goto	u3630
  7385  07C1                     u3631:
  7386  07C1  2FC4               	goto	l2531
  7387  07C2                     u3630:
  7388  07C2                     l2529:
  7389  07C2  17D8               	bsf	___fladd@b+2,7
  7390  07C3  2FC8               	goto	l705
  7391  07C4                     l2531:
  7392  07C4  307F               	movlw	127
  7393  07C5  00DE               	movwf	??___fladd
  7394  07C6  085E               	movf	??___fladd,w
  7395  07C7  05D8               	andwf	___fladd@b+2,f
  7396  07C8                     l705:
  7397  07C8  0868               	movf	___fladd@bexp,w
  7398  07C9  00DE               	movwf	??___fladd
  7399  07CA  1003               	clrc
  7400  07CB  0C5E               	rrf	??___fladd,w
  7401  07CC  00DF               	movwf	??___fladd+1
  7402  07CD  085F               	movf	??___fladd+1,w
  7403  07CE  00D9               	movwf	___fladd@b+3
  7404  07CF                     l2533:
  7405  07CF  1FE6               	btfss	___fladd@signs,7
  7406  07D0  2FD2               	goto	u3641
  7407  07D1  2FD3               	goto	u3640
  7408  07D2                     u3641:
  7409  07D2  2FD4               	goto	l706
  7410  07D3                     u3640:
  7411  07D3                     l2535:
  7412  07D3  17D9               	bsf	___fladd@b+3,7
  7413  07D4                     l706:
  7414  07D4                     l676:
  7415  07D4  0008               	return
  7416  07D5                     __end_of___fladd:
  7417                           
  7418                           	psect	text19
  7419  0804                     __ptext19:	
  7420 ;; *************** function ___flneg *****************
  7421 ;; Defined at:
  7422 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;  f1              4    2[COMMON] unsigned char 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;		None
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  4    2[COMMON] unsigned char 
  7429 ;; Registers used:
  7430 ;;		wreg
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7436 ;;      Params:         4       0       0       0       0
  7437 ;;      Locals:         0       0       0       0       0
  7438 ;;      Temps:          0       0       0       0       0
  7439 ;;      Totals:         4       0       0       0       0
  7440 ;;Total ram usage:        4 bytes
  7441 ;; Hardware stack levels used:    1
  7442 ;; Hardware stack levels required when called:    1
  7443 ;; This function calls:
  7444 ;;		Nothing
  7445 ;; This function is called by:
  7446 ;;		_sprintf
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           
  7451                           ;psect for function ___flneg
  7452  0804                     ___flneg:
  7453  0804                     l2925:	
  7454                           ;incstack = 0
  7455                           ; Regs used in ___flneg: [wreg]
  7456                           
  7457  0804  0875               	movf	___flneg@f1+3,w
  7458  0805  0474               	iorwf	___flneg@f1+2,w
  7459  0806  0473               	iorwf	___flneg@f1+1,w
  7460  0807  0472               	iorwf	___flneg@f1,w
  7461  0808  1903               	skipnz
  7462  0809  280B               	goto	u4771
  7463  080A  280C               	goto	u4770
  7464  080B                     u4771:
  7465  080B  280E               	goto	l2929
  7466  080C                     u4770:
  7467  080C                     l2927:
  7468  080C  3080               	movlw	128
  7469  080D  06F5               	xorwf	___flneg@f1+3,f
  7470  080E                     l2929:
  7471  080E                     l535:
  7472  080E  0008               	return
  7473  080F                     __end_of___flneg:
  7474                           
  7475                           	psect	text20
  7476  1015                     __ptext20:	
  7477 ;; *************** function ___flge *****************
  7478 ;; Defined at:
  7479 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;  ff1             4    2[COMMON] unsigned char 
  7482 ;;  ff2             4    6[COMMON] unsigned char 
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;		None
  7485 ;; Return value:  Size  Location     Type
  7486 ;;		None               void
  7487 ;; Registers used:
  7488 ;;		wreg, status,2, status,0
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7494 ;;      Params:         8       0       0       0       0
  7495 ;;      Locals:         0       0       0       0       0
  7496 ;;      Temps:          0       4       0       0       0
  7497 ;;      Totals:         8       4       0       0       0
  7498 ;;Total ram usage:       12 bytes
  7499 ;; Hardware stack levels used:    1
  7500 ;; Hardware stack levels required when called:    1
  7501 ;; This function calls:
  7502 ;;		Nothing
  7503 ;; This function is called by:
  7504 ;;		_sprintf
  7505 ;; This function uses a non-reentrant model
  7506 ;;
  7507                           
  7508                           
  7509                           ;psect for function ___flge
  7510  1015                     ___flge:
  7511  1015                     l2905:	
  7512                           ;incstack = 0
  7513                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7514                           
  7515  1015  3000               	movlw	0
  7516  1016  0572               	andwf	___flge@ff1,w
  7517  1017  1283               	bcf	3,5	;RP0=0, select bank0
  7518  1018  1303               	bcf	3,6	;RP1=0, select bank0
  7519  1019  00A0               	movwf	??___flge
  7520  101A  3000               	movlw	0
  7521  101B  0573               	andwf	___flge@ff1+1,w
  7522  101C  00A1               	movwf	??___flge+1
  7523  101D  3080               	movlw	128
  7524  101E  0574               	andwf	___flge@ff1+2,w
  7525  101F  00A2               	movwf	??___flge+2
  7526  1020  307F               	movlw	127
  7527  1021  0575               	andwf	___flge@ff1+3,w
  7528  1022  00A3               	movwf	??___flge+3
  7529  1023  0823               	movf	??___flge+3,w
  7530  1024  0422               	iorwf	??___flge+2,w
  7531  1025  0421               	iorwf	??___flge+1,w
  7532  1026  0420               	iorwf	??___flge,w
  7533  1027  1D03               	skipz
  7534  1028  282A               	goto	u4701
  7535  1029  282B               	goto	u4700
  7536  102A                     u4701:
  7537  102A  2833               	goto	l527
  7538  102B                     u4700:
  7539  102B                     l2907:
  7540  102B  3000               	movlw	0
  7541  102C  00F5               	movwf	___flge@ff1+3
  7542  102D  3000               	movlw	0
  7543  102E  00F4               	movwf	___flge@ff1+2
  7544  102F  3000               	movlw	0
  7545  1030  00F3               	movwf	___flge@ff1+1
  7546  1031  3000               	movlw	0
  7547  1032  00F2               	movwf	___flge@ff1
  7548  1033                     l527:
  7549  1033  3000               	movlw	0
  7550  1034  0576               	andwf	___flge@ff2,w
  7551  1035  00A0               	movwf	??___flge
  7552  1036  3000               	movlw	0
  7553  1037  0577               	andwf	___flge@ff2+1,w
  7554  1038  00A1               	movwf	??___flge+1
  7555  1039  3080               	movlw	128
  7556  103A  0578               	andwf	___flge@ff2+2,w
  7557  103B  00A2               	movwf	??___flge+2
  7558  103C  307F               	movlw	127
  7559  103D  0579               	andwf	___flge@ff2+3,w
  7560  103E  00A3               	movwf	??___flge+3
  7561  103F  0823               	movf	??___flge+3,w
  7562  1040  0422               	iorwf	??___flge+2,w
  7563  1041  0421               	iorwf	??___flge+1,w
  7564  1042  0420               	iorwf	??___flge,w
  7565  1043  1D03               	skipz
  7566  1044  2846               	goto	u4711
  7567  1045  2847               	goto	u4710
  7568  1046                     u4711:
  7569  1046  284F               	goto	l2911
  7570  1047                     u4710:
  7571  1047                     l2909:
  7572  1047  3000               	movlw	0
  7573  1048  00F9               	movwf	___flge@ff2+3
  7574  1049  3000               	movlw	0
  7575  104A  00F8               	movwf	___flge@ff2+2
  7576  104B  3000               	movlw	0
  7577  104C  00F7               	movwf	___flge@ff2+1
  7578  104D  3000               	movlw	0
  7579  104E  00F6               	movwf	___flge@ff2
  7580  104F                     l2911:
  7581  104F  1FF5               	btfss	___flge@ff1+3,7
  7582  1050  2852               	goto	u4721
  7583  1051  2853               	goto	u4720
  7584  1052                     u4721:
  7585  1052  2877               	goto	l2915
  7586  1053                     u4720:
  7587  1053                     l2913:
  7588  1053  3000               	movlw	0
  7589  1054  00A0               	movwf	??___flge
  7590  1055  3000               	movlw	0
  7591  1056  00A1               	movwf	??___flge+1
  7592  1057  3000               	movlw	0
  7593  1058  00A2               	movwf	??___flge+2
  7594  1059  3080               	movlw	128
  7595  105A  00A3               	movwf	??___flge+3
  7596  105B  0872               	movf	___flge@ff1,w
  7597  105C  02A0               	subwf	??___flge,f
  7598  105D  0873               	movf	___flge@ff1+1,w
  7599  105E  1C03               	skipc
  7600  105F  0F73               	incfsz	___flge@ff1+1,w
  7601  1060  2862               	goto	u4731
  7602  1061  2863               	goto	u4732
  7603  1062                     u4731:
  7604  1062  02A1               	subwf	??___flge+1,f
  7605  1063                     u4732:
  7606  1063  0874               	movf	___flge@ff1+2,w
  7607  1064  1C03               	skipc
  7608  1065  0F74               	incfsz	___flge@ff1+2,w
  7609  1066  2868               	goto	u4733
  7610  1067  2869               	goto	u4734
  7611  1068                     u4733:
  7612  1068  02A2               	subwf	??___flge+2,f
  7613  1069                     u4734:
  7614  1069  0875               	movf	___flge@ff1+3,w
  7615  106A  1C03               	skipc
  7616  106B  0F75               	incfsz	___flge@ff1+3,w
  7617  106C  286E               	goto	u4735
  7618  106D  286F               	goto	u4736
  7619  106E                     u4735:
  7620  106E  02A3               	subwf	??___flge+3,f
  7621  106F                     u4736:
  7622  106F  0823               	movf	??___flge+3,w
  7623  1070  00F5               	movwf	___flge@ff1+3
  7624  1071  0822               	movf	??___flge+2,w
  7625  1072  00F4               	movwf	___flge@ff1+2
  7626  1073  0821               	movf	??___flge+1,w
  7627  1074  00F3               	movwf	___flge@ff1+1
  7628  1075  0820               	movf	??___flge,w
  7629  1076  00F2               	movwf	___flge@ff1
  7630  1077                     l2915:
  7631  1077  1FF9               	btfss	___flge@ff2+3,7
  7632  1078  287A               	goto	u4741
  7633  1079  287B               	goto	u4740
  7634  107A                     u4741:
  7635  107A  289F               	goto	l530
  7636  107B                     u4740:
  7637  107B                     l2917:
  7638  107B  3000               	movlw	0
  7639  107C  00A0               	movwf	??___flge
  7640  107D  3000               	movlw	0
  7641  107E  00A1               	movwf	??___flge+1
  7642  107F  3000               	movlw	0
  7643  1080  00A2               	movwf	??___flge+2
  7644  1081  3080               	movlw	128
  7645  1082  00A3               	movwf	??___flge+3
  7646  1083  0876               	movf	___flge@ff2,w
  7647  1084  02A0               	subwf	??___flge,f
  7648  1085  0877               	movf	___flge@ff2+1,w
  7649  1086  1C03               	skipc
  7650  1087  0F77               	incfsz	___flge@ff2+1,w
  7651  1088  288A               	goto	u4751
  7652  1089  288B               	goto	u4752
  7653  108A                     u4751:
  7654  108A  02A1               	subwf	??___flge+1,f
  7655  108B                     u4752:
  7656  108B  0878               	movf	___flge@ff2+2,w
  7657  108C  1C03               	skipc
  7658  108D  0F78               	incfsz	___flge@ff2+2,w
  7659  108E  2890               	goto	u4753
  7660  108F  2891               	goto	u4754
  7661  1090                     u4753:
  7662  1090  02A2               	subwf	??___flge+2,f
  7663  1091                     u4754:
  7664  1091  0879               	movf	___flge@ff2+3,w
  7665  1092  1C03               	skipc
  7666  1093  0F79               	incfsz	___flge@ff2+3,w
  7667  1094  2896               	goto	u4755
  7668  1095  2897               	goto	u4756
  7669  1096                     u4755:
  7670  1096  02A3               	subwf	??___flge+3,f
  7671  1097                     u4756:
  7672  1097  0823               	movf	??___flge+3,w
  7673  1098  00F9               	movwf	___flge@ff2+3
  7674  1099  0822               	movf	??___flge+2,w
  7675  109A  00F8               	movwf	___flge@ff2+2
  7676  109B  0821               	movf	??___flge+1,w
  7677  109C  00F7               	movwf	___flge@ff2+1
  7678  109D  0820               	movf	??___flge,w
  7679  109E  00F6               	movwf	___flge@ff2
  7680  109F                     l530:
  7681  109F  3080               	movlw	128
  7682  10A0  06F5               	xorwf	___flge@ff1+3,f
  7683  10A1  3080               	movlw	128
  7684  10A2  06F9               	xorwf	___flge@ff2+3,f
  7685  10A3  0879               	movf	___flge@ff2+3,w
  7686  10A4  0275               	subwf	___flge@ff1+3,w
  7687  10A5  1D03               	skipz
  7688  10A6  28B1               	goto	u4765
  7689  10A7  0878               	movf	___flge@ff2+2,w
  7690  10A8  0274               	subwf	___flge@ff1+2,w
  7691  10A9  1D03               	skipz
  7692  10AA  28B1               	goto	u4765
  7693  10AB  0877               	movf	___flge@ff2+1,w
  7694  10AC  0273               	subwf	___flge@ff1+1,w
  7695  10AD  1D03               	skipz
  7696  10AE  28B1               	goto	u4765
  7697  10AF  0876               	movf	___flge@ff2,w
  7698  10B0  0272               	subwf	___flge@ff1,w
  7699  10B1                     u4765:
  7700  10B1  1803               	skipnc
  7701  10B2  28B4               	goto	u4761
  7702  10B3  28B5               	goto	u4760
  7703  10B4                     u4761:
  7704  10B4  28B7               	goto	l2921
  7705  10B5                     u4760:
  7706  10B5                     l2919:
  7707  10B5  1003               	clrc
  7708  10B6  28B8               	goto	l531
  7709  10B7                     l2921:
  7710  10B7  1403               	setc
  7711  10B8                     l531:
  7712  10B8  0008               	return
  7713  10B9                     __end_of___flge:
  7714                           
  7715                           	psect	text21
  7716  1DCD                     __ptext21:	
  7717 ;; *************** function ___fleq *****************
  7718 ;; Defined at:
  7719 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  ff1             4    2[COMMON] unsigned char 
  7722 ;;  ff2             4    6[COMMON] unsigned char 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;		None
  7725 ;; Return value:  Size  Location     Type
  7726 ;;		None               void
  7727 ;; Registers used:
  7728 ;;		wreg, status,2, status,0
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7734 ;;      Params:         8       0       0       0       0
  7735 ;;      Locals:         0       0       0       0       0
  7736 ;;      Temps:          0       4       0       0       0
  7737 ;;      Totals:         8       4       0       0       0
  7738 ;;Total ram usage:       12 bytes
  7739 ;; Hardware stack levels used:    1
  7740 ;; Hardware stack levels required when called:    1
  7741 ;; This function calls:
  7742 ;;		Nothing
  7743 ;; This function is called by:
  7744 ;;		_sprintf
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           
  7749                           ;psect for function ___fleq
  7750  1DCD                     ___fleq:
  7751  1DCD                     l2893:	
  7752                           ;incstack = 0
  7753                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7754                           
  7755  1DCD  3000               	movlw	0
  7756  1DCE  0572               	andwf	___fleq@ff1,w
  7757  1DCF  1283               	bcf	3,5	;RP0=0, select bank0
  7758  1DD0  1303               	bcf	3,6	;RP1=0, select bank0
  7759  1DD1  00A0               	movwf	??___fleq
  7760  1DD2  3000               	movlw	0
  7761  1DD3  0573               	andwf	___fleq@ff1+1,w
  7762  1DD4  00A1               	movwf	??___fleq+1
  7763  1DD5  3080               	movlw	128
  7764  1DD6  0574               	andwf	___fleq@ff1+2,w
  7765  1DD7  00A2               	movwf	??___fleq+2
  7766  1DD8  307F               	movlw	127
  7767  1DD9  0575               	andwf	___fleq@ff1+3,w
  7768  1DDA  00A3               	movwf	??___fleq+3
  7769  1DDB  0823               	movf	??___fleq+3,w
  7770  1DDC  0422               	iorwf	??___fleq+2,w
  7771  1DDD  0421               	iorwf	??___fleq+1,w
  7772  1DDE  0420               	iorwf	??___fleq,w
  7773  1DDF  1D03               	skipz
  7774  1DE0  2DE2               	goto	u4671
  7775  1DE1  2DE3               	goto	u4670
  7776  1DE2                     u4671:
  7777  1DE2  2DEB               	goto	l522
  7778  1DE3                     u4670:
  7779  1DE3                     l2895:
  7780  1DE3  3000               	movlw	0
  7781  1DE4  00F5               	movwf	___fleq@ff1+3
  7782  1DE5  3000               	movlw	0
  7783  1DE6  00F4               	movwf	___fleq@ff1+2
  7784  1DE7  3000               	movlw	0
  7785  1DE8  00F3               	movwf	___fleq@ff1+1
  7786  1DE9  3000               	movlw	0
  7787  1DEA  00F2               	movwf	___fleq@ff1
  7788  1DEB                     l522:
  7789  1DEB  3000               	movlw	0
  7790  1DEC  0576               	andwf	___fleq@ff2,w
  7791  1DED  00A0               	movwf	??___fleq
  7792  1DEE  3000               	movlw	0
  7793  1DEF  0577               	andwf	___fleq@ff2+1,w
  7794  1DF0  00A1               	movwf	??___fleq+1
  7795  1DF1  3080               	movlw	128
  7796  1DF2  0578               	andwf	___fleq@ff2+2,w
  7797  1DF3  00A2               	movwf	??___fleq+2
  7798  1DF4  307F               	movlw	127
  7799  1DF5  0579               	andwf	___fleq@ff2+3,w
  7800  1DF6  00A3               	movwf	??___fleq+3
  7801  1DF7  0823               	movf	??___fleq+3,w
  7802  1DF8  0422               	iorwf	??___fleq+2,w
  7803  1DF9  0421               	iorwf	??___fleq+1,w
  7804  1DFA  0420               	iorwf	??___fleq,w
  7805  1DFB  1D03               	skipz
  7806  1DFC  2DFE               	goto	u4681
  7807  1DFD  2DFF               	goto	u4680
  7808  1DFE                     u4681:
  7809  1DFE  2E07               	goto	l523
  7810  1DFF                     u4680:
  7811  1DFF                     l2897:
  7812  1DFF  3000               	movlw	0
  7813  1E00  00F9               	movwf	___fleq@ff2+3
  7814  1E01  3000               	movlw	0
  7815  1E02  00F8               	movwf	___fleq@ff2+2
  7816  1E03  3000               	movlw	0
  7817  1E04  00F7               	movwf	___fleq@ff2+1
  7818  1E05  3000               	movlw	0
  7819  1E06  00F6               	movwf	___fleq@ff2
  7820  1E07                     l523:
  7821  1E07  0879               	movf	___fleq@ff2+3,w
  7822  1E08  0675               	xorwf	___fleq@ff1+3,w
  7823  1E09  1D03               	skipz
  7824  1E0A  2E15               	goto	u4695
  7825  1E0B  0878               	movf	___fleq@ff2+2,w
  7826  1E0C  0674               	xorwf	___fleq@ff1+2,w
  7827  1E0D  1D03               	skipz
  7828  1E0E  2E15               	goto	u4695
  7829  1E0F  0877               	movf	___fleq@ff2+1,w
  7830  1E10  0673               	xorwf	___fleq@ff1+1,w
  7831  1E11  1D03               	skipz
  7832  1E12  2E15               	goto	u4695
  7833  1E13  0876               	movf	___fleq@ff2,w
  7834  1E14  0672               	xorwf	___fleq@ff1,w
  7835  1E15                     u4695:
  7836  1E15  1903               	skipnz
  7837  1E16  2E18               	goto	u4691
  7838  1E17  2E19               	goto	u4690
  7839  1E18                     u4691:
  7840  1E18  2E1B               	goto	l2901
  7841  1E19                     u4690:
  7842  1E19                     l2899:
  7843  1E19  1003               	clrc
  7844  1E1A  2E1C               	goto	l524
  7845  1E1B                     l2901:
  7846  1E1B  1403               	setc
  7847  1E1C                     l524:
  7848  1E1C  0008               	return
  7849  1E1D                     __end_of___fleq:
  7850                           
  7851                           	psect	text22
  7852  1CE3                     __ptext22:	
  7853 ;; *************** function _send_crct *****************
  7854 ;; Defined at:
  7855 ;;		line 162 in file "mainp1.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  st              1    wreg     PTR unsigned char 
  7858 ;;		 -> f1(15), 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  st              1    6[COMMON] PTR unsigned char 
  7861 ;;		 -> f1(15), 
  7862 ;;  i               2    4[COMMON] int 
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7872 ;;      Params:         0       0       0       0       0
  7873 ;;      Locals:         3       0       0       0       0
  7874 ;;      Temps:          1       0       0       0       0
  7875 ;;      Totals:         4       0       0       0       0
  7876 ;;Total ram usage:        4 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; Hardware stack levels required when called:    2
  7879 ;; This function calls:
  7880 ;;		_send_char
  7881 ;; This function is called by:
  7882 ;;		_main
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           
  7887                           ;psect for function _send_crct
  7888  1CE3                     _send_crct:
  7889                           
  7890                           ;incstack = 0
  7891                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7892                           ;send_crct@st stored from wreg
  7893  1CE3  00F6               	movwf	send_crct@st
  7894  1CE4                     l3377:
  7895                           
  7896                           ;mainp1.c: 163:     int i = 0;
  7897  1CE4  01F4               	clrf	send_crct@i
  7898  1CE5  01F5               	clrf	send_crct@i+1
  7899                           
  7900                           ;mainp1.c: 164:     while (st[i] != 0){
  7901  1CE6  2CF8               	goto	l3383
  7902  1CE7                     l3379:
  7903                           
  7904                           ;mainp1.c: 165:         send_char(st[i]);
  7905  1CE7  0874               	movf	send_crct@i,w
  7906  1CE8  0776               	addwf	send_crct@st,w
  7907  1CE9  00F3               	movwf	??_send_crct
  7908  1CEA  0873               	movf	??_send_crct,w
  7909  1CEB  0084               	movwf	4
  7910  1CEC  0800               	movf	0,w
  7911  1CED  160A  158A  24B5  160A  158A  	fcall	_send_char
  7912  1CF2                     l3381:
  7913                           
  7914                           ;mainp1.c: 166:         i++;
  7915  1CF2  3001               	movlw	1
  7916  1CF3  07F4               	addwf	send_crct@i,f
  7917  1CF4  1803               	skipnc
  7918  1CF5  0AF5               	incf	send_crct@i+1,f
  7919  1CF6  3000               	movlw	0
  7920  1CF7  07F5               	addwf	send_crct@i+1,f
  7921  1CF8                     l3383:
  7922                           
  7923                           ;mainp1.c: 164:     while (st[i] != 0){
  7924  1CF8  0874               	movf	send_crct@i,w
  7925  1CF9  0776               	addwf	send_crct@st,w
  7926  1CFA  00F3               	movwf	??_send_crct
  7927  1CFB  0873               	movf	??_send_crct,w
  7928  1CFC  0084               	movwf	4
  7929  1CFD  1383               	bcf	3,7	;select IRP bank0
  7930  1CFE  0800               	movf	0,w
  7931  1CFF  1D03               	btfss	3,2
  7932  1D00  2D02               	goto	u5621
  7933  1D01  2D03               	goto	u5620
  7934  1D02                     u5621:
  7935  1D02  2CE7               	goto	l3379
  7936  1D03                     u5620:
  7937  1D03                     l113:
  7938  1D03  0008               	return
  7939  1D04                     __end_of_send_crct:
  7940                           
  7941                           	psect	text23
  7942  1CB5                     __ptext23:	
  7943 ;; *************** function _send_char *****************
  7944 ;; Defined at:
  7945 ;;		line 169 in file "mainp1.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  dato            1    wreg     unsigned char 
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;  dato            1    2[COMMON] unsigned char 
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  1    wreg      void 
  7952 ;; Registers used:
  7953 ;;		wreg
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7959 ;;      Params:         0       0       0       0       0
  7960 ;;      Locals:         1       0       0       0       0
  7961 ;;      Temps:          0       0       0       0       0
  7962 ;;      Totals:         1       0       0       0       0
  7963 ;;Total ram usage:        1 bytes
  7964 ;; Hardware stack levels used:    1
  7965 ;; Hardware stack levels required when called:    1
  7966 ;; This function calls:
  7967 ;;		Nothing
  7968 ;; This function is called by:
  7969 ;;		_send_crct
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           
  7974                           ;psect for function _send_char
  7975  1CB5                     _send_char:
  7976                           
  7977                           ;incstack = 0
  7978                           ; Regs used in _send_char: [wreg]
  7979                           ;send_char@dato stored from wreg
  7980  1CB5  00F2               	movwf	send_char@dato
  7981  1CB6                     l2677:
  7982  1CB6                     l116:	
  7983                           ;mainp1.c: 170:     while(!TXIF);
  7984                           
  7985  1CB6  1283               	bcf	3,5	;RP0=0, select bank0
  7986  1CB7  1303               	bcf	3,6	;RP1=0, select bank0
  7987  1CB8  1E0C               	btfss	12,4	;volatile
  7988  1CB9  2CBB               	goto	u4021
  7989  1CBA  2CBC               	goto	u4020
  7990  1CBB                     u4021:
  7991  1CBB  2CB6               	goto	l116
  7992  1CBC                     u4020:
  7993  1CBC                     l2679:
  7994                           
  7995                           ;mainp1.c: 171:     TXREG = dato;
  7996  1CBC  0872               	movf	send_char@dato,w
  7997  1CBD  0099               	movwf	25	;volatile
  7998  1CBE                     l119:
  7999  1CBE  0008               	return
  8000  1CBF                     __end_of_send_char:
  8001                           
  8002                           	psect	text24
  8003  1D04                     __ptext24:	
  8004 ;; *************** function _conv *****************
  8005 ;; Defined at:
  8006 ;;		line 173 in file "mainp1.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;  aa              2    6[BANK0 ] int 
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;  result          4   10[BANK0 ] float 
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  4    6[BANK0 ] float 
  8013 ;; Registers used:
  8014 ;;		wreg, status,2, status,0, pclath, cstack
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8020 ;;      Params:         0       4       0       0       0
  8021 ;;      Locals:         0       4       0       0       0
  8022 ;;      Temps:          0       0       0       0       0
  8023 ;;      Totals:         0       8       0       0       0
  8024 ;;Total ram usage:        8 bytes
  8025 ;; Hardware stack levels used:    1
  8026 ;; Hardware stack levels required when called:    2
  8027 ;; This function calls:
  8028 ;;		___xxtofl
  8029 ;; This function is called by:
  8030 ;;		_main
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           
  8035                           ;psect for function _conv
  8036  1D04                     _conv:
  8037  1D04                     l3065:	
  8038                           ;incstack = 0
  8039                           ; Regs used in _conv: [wreg+status,2+status,0+pclath+cstack]
  8040                           
  8041                           
  8042                           ;mainp1.c: 174:     float result;;mainp1.c: 175:     result = aa;
  8043  1D04  1283               	bcf	3,5	;RP0=0, select bank0
  8044  1D05  1303               	bcf	3,6	;RP1=0, select bank0
  8045  1D06  0826               	movf	conv@aa,w
  8046  1D07  00F2               	movwf	___xxtofl@val
  8047  1D08  0827               	movf	conv@aa+1,w
  8048  1D09  00F3               	movwf	___xxtofl@val+1
  8049  1D0A  3000               	movlw	0
  8050  1D0B  1BF3               	btfsc	___xxtofl@val+1,7
  8051  1D0C  30FF               	movlw	255
  8052  1D0D  00F4               	movwf	___xxtofl@val+2
  8053  1D0E  00F5               	movwf	___xxtofl@val+3
  8054  1D0F  3001               	movlw	1
  8055  1D10  160A  118A  20B9  160A  158A  	fcall	___xxtofl
  8056  1D15  0875               	movf	?___xxtofl+3,w
  8057  1D16  1283               	bcf	3,5	;RP0=0, select bank0
  8058  1D17  1303               	bcf	3,6	;RP1=0, select bank0
  8059  1D18  00AD               	movwf	conv@result+3
  8060  1D19  0874               	movf	?___xxtofl+2,w
  8061  1D1A  00AC               	movwf	conv@result+2
  8062  1D1B  0873               	movf	?___xxtofl+1,w
  8063  1D1C  00AB               	movwf	conv@result+1
  8064  1D1D  0872               	movf	?___xxtofl,w
  8065  1D1E  00AA               	movwf	conv@result
  8066  1D1F                     l3067:
  8067                           
  8068                           ;mainp1.c: 176:     return result;
  8069  1D1F  082D               	movf	conv@result+3,w
  8070  1D20  00A9               	movwf	?_conv+3
  8071  1D21  082C               	movf	conv@result+2,w
  8072  1D22  00A8               	movwf	?_conv+2
  8073  1D23  082B               	movf	conv@result+1,w
  8074  1D24  00A7               	movwf	?_conv+1
  8075  1D25  082A               	movf	conv@result,w
  8076  1D26  00A6               	movwf	?_conv
  8077  1D27                     l122:
  8078  1D27  0008               	return
  8079  1D28                     __end_of_conv:
  8080                           
  8081                           	psect	text25
  8082  10B9                     __ptext25:	
  8083 ;; *************** function ___xxtofl *****************
  8084 ;; Defined at:
  8085 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  sign            1    wreg     unsigned char 
  8088 ;;  val             4    2[COMMON] long 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;  sign            1    0[BANK0 ] unsigned char 
  8091 ;;  arg             4    2[BANK0 ] unsigned long 
  8092 ;;  exp             1    1[BANK0 ] unsigned char 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  4    2[COMMON] unsigned char 
  8095 ;; Registers used:
  8096 ;;		wreg, status,2, status,0
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8102 ;;      Params:         4       0       0       0       0
  8103 ;;      Locals:         0       6       0       0       0
  8104 ;;      Temps:          4       0       0       0       0
  8105 ;;      Totals:         8       6       0       0       0
  8106 ;;Total ram usage:       14 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    1
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_conv
  8113 ;;		_sprintf
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           
  8118                           ;psect for function ___xxtofl
  8119  10B9                     ___xxtofl:
  8120                           
  8121                           ;incstack = 0
  8122                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8123                           ;___xxtofl@sign stored from wreg
  8124  10B9  1283               	bcf	3,5	;RP0=0, select bank0
  8125  10BA  1303               	bcf	3,6	;RP1=0, select bank0
  8126  10BB  00A0               	movwf	___xxtofl@sign
  8127  10BC                     l2995:
  8128  10BC  0820               	movf	___xxtofl@sign,w
  8129  10BD  1903               	btfsc	3,2
  8130  10BE  28C0               	goto	u4941
  8131  10BF  28C1               	goto	u4940
  8132  10C0                     u4941:
  8133  10C0  28D5               	goto	l3001
  8134  10C1                     u4940:
  8135  10C1                     l2997:
  8136  10C1  1FF5               	btfss	___xxtofl@val+3,7
  8137  10C2  28C4               	goto	u4951
  8138  10C3  28C5               	goto	u4950
  8139  10C4                     u4951:
  8140  10C4  28D5               	goto	l3001
  8141  10C5                     u4950:
  8142  10C5                     l2999:
  8143  10C5  0972               	comf	___xxtofl@val,w
  8144  10C6  00A2               	movwf	___xxtofl@arg
  8145  10C7  0973               	comf	___xxtofl@val+1,w
  8146  10C8  00A3               	movwf	___xxtofl@arg+1
  8147  10C9  0974               	comf	___xxtofl@val+2,w
  8148  10CA  00A4               	movwf	___xxtofl@arg+2
  8149  10CB  0975               	comf	___xxtofl@val+3,w
  8150  10CC  00A5               	movwf	___xxtofl@arg+3
  8151  10CD  0AA2               	incf	___xxtofl@arg,f
  8152  10CE  1903               	skipnz
  8153  10CF  0AA3               	incf	___xxtofl@arg+1,f
  8154  10D0  1903               	skipnz
  8155  10D1  0AA4               	incf	___xxtofl@arg+2,f
  8156  10D2  1903               	skipnz
  8157  10D3  0AA5               	incf	___xxtofl@arg+3,f
  8158  10D4  28DD               	goto	l803
  8159  10D5                     l3001:
  8160  10D5  0875               	movf	___xxtofl@val+3,w
  8161  10D6  00A5               	movwf	___xxtofl@arg+3
  8162  10D7  0874               	movf	___xxtofl@val+2,w
  8163  10D8  00A4               	movwf	___xxtofl@arg+2
  8164  10D9  0873               	movf	___xxtofl@val+1,w
  8165  10DA  00A3               	movwf	___xxtofl@arg+1
  8166  10DB  0872               	movf	___xxtofl@val,w
  8167  10DC  00A2               	movwf	___xxtofl@arg
  8168  10DD                     l803:
  8169  10DD  0875               	movf	___xxtofl@val+3,w
  8170  10DE  0474               	iorwf	___xxtofl@val+2,w
  8171  10DF  0473               	iorwf	___xxtofl@val+1,w
  8172  10E0  0472               	iorwf	___xxtofl@val,w
  8173  10E1  1D03               	skipz
  8174  10E2  28E4               	goto	u4961
  8175  10E3  28E5               	goto	u4960
  8176  10E4                     u4961:
  8177  10E4  28EE               	goto	l3007
  8178  10E5                     u4960:
  8179  10E5                     l3003:
  8180  10E5  3000               	movlw	0
  8181  10E6  00F5               	movwf	?___xxtofl+3
  8182  10E7  3000               	movlw	0
  8183  10E8  00F4               	movwf	?___xxtofl+2
  8184  10E9  3000               	movlw	0
  8185  10EA  00F3               	movwf	?___xxtofl+1
  8186  10EB  3000               	movlw	0
  8187  10EC  00F2               	movwf	?___xxtofl
  8188  10ED  2974               	goto	l805
  8189  10EE                     l3007:
  8190  10EE  3096               	movlw	150
  8191  10EF  00F6               	movwf	??___xxtofl
  8192  10F0  0876               	movf	??___xxtofl,w
  8193  10F1  00A1               	movwf	___xxtofl@exp
  8194  10F2  2900               	goto	l3011
  8195  10F3                     l3009:
  8196  10F3  3001               	movlw	1
  8197  10F4  00F6               	movwf	??___xxtofl
  8198  10F5  0876               	movf	??___xxtofl,w
  8199  10F6  07A1               	addwf	___xxtofl@exp,f
  8200  10F7  3001               	movlw	1
  8201  10F8                     u4975:
  8202  10F8  1003               	clrc
  8203  10F9  0CA5               	rrf	___xxtofl@arg+3,f
  8204  10FA  0CA4               	rrf	___xxtofl@arg+2,f
  8205  10FB  0CA3               	rrf	___xxtofl@arg+1,f
  8206  10FC  0CA2               	rrf	___xxtofl@arg,f
  8207  10FD  3EFF               	addlw	-1
  8208  10FE  1D03               	skipz
  8209  10FF  28F8               	goto	u4975
  8210  1100                     l3011:
  8211  1100  30FE               	movlw	254
  8212  1101  0525               	andwf	___xxtofl@arg+3,w
  8213  1102  1D03               	btfss	3,2
  8214  1103  2905               	goto	u4981
  8215  1104  2906               	goto	u4980
  8216  1105                     u4981:
  8217  1105  28F3               	goto	l3009
  8218  1106                     u4980:
  8219  1106  2922               	goto	l809
  8220  1107                     l3013:
  8221  1107  3001               	movlw	1
  8222  1108  00F6               	movwf	??___xxtofl
  8223  1109  0876               	movf	??___xxtofl,w
  8224  110A  07A1               	addwf	___xxtofl@exp,f
  8225  110B                     l3015:
  8226  110B  3001               	movlw	1
  8227  110C  07A2               	addwf	___xxtofl@arg,f
  8228  110D  3000               	movlw	0
  8229  110E  1803               	skipnc
  8230  110F  3001               	movlw	1
  8231  1110  07A3               	addwf	___xxtofl@arg+1,f
  8232  1111  3000               	movlw	0
  8233  1112  1803               	skipnc
  8234  1113  3001               	movlw	1
  8235  1114  07A4               	addwf	___xxtofl@arg+2,f
  8236  1115  3000               	movlw	0
  8237  1116  1803               	skipnc
  8238  1117  3001               	movlw	1
  8239  1118  07A5               	addwf	___xxtofl@arg+3,f
  8240  1119                     l3017:
  8241  1119  3001               	movlw	1
  8242  111A                     u4995:
  8243  111A  1003               	clrc
  8244  111B  0CA5               	rrf	___xxtofl@arg+3,f
  8245  111C  0CA4               	rrf	___xxtofl@arg+2,f
  8246  111D  0CA3               	rrf	___xxtofl@arg+1,f
  8247  111E  0CA2               	rrf	___xxtofl@arg,f
  8248  111F  3EFF               	addlw	-1
  8249  1120  1D03               	skipz
  8250  1121  291A               	goto	u4995
  8251  1122                     l809:
  8252  1122  30FF               	movlw	255
  8253  1123  0525               	andwf	___xxtofl@arg+3,w
  8254  1124  1D03               	btfss	3,2
  8255  1125  2927               	goto	u5001
  8256  1126  2928               	goto	u5000
  8257  1127                     u5001:
  8258  1127  2907               	goto	l3013
  8259  1128                     u5000:
  8260  1128  2934               	goto	l3021
  8261  1129                     l3019:
  8262  1129  3001               	movlw	1
  8263  112A  02A1               	subwf	___xxtofl@exp,f
  8264  112B  3001               	movlw	1
  8265  112C  00F6               	movwf	??___xxtofl
  8266  112D                     u5015:
  8267  112D  1003               	clrc
  8268  112E  0DA2               	rlf	___xxtofl@arg,f
  8269  112F  0DA3               	rlf	___xxtofl@arg+1,f
  8270  1130  0DA4               	rlf	___xxtofl@arg+2,f
  8271  1131  0DA5               	rlf	___xxtofl@arg+3,f
  8272  1132  0BF6               	decfsz	??___xxtofl,f
  8273  1133  292D               	goto	u5015
  8274  1134                     l3021:
  8275  1134  1BA4               	btfsc	___xxtofl@arg+2,7
  8276  1135  2937               	goto	u5021
  8277  1136  2938               	goto	u5020
  8278  1137                     u5021:
  8279  1137  293E               	goto	l816
  8280  1138                     u5020:
  8281  1138                     l3023:
  8282  1138  3002               	movlw	2
  8283  1139  0221               	subwf	___xxtofl@exp,w
  8284  113A  1803               	skipnc
  8285  113B  293D               	goto	u5031
  8286  113C  293E               	goto	u5030
  8287  113D                     u5031:
  8288  113D  2929               	goto	l3019
  8289  113E                     u5030:
  8290  113E                     l816:
  8291  113E  1821               	btfsc	___xxtofl@exp,0
  8292  113F  2941               	goto	u5041
  8293  1140  2942               	goto	u5040
  8294  1141                     u5041:
  8295  1141  294A               	goto	l817
  8296  1142                     u5040:
  8297  1142                     l3025:
  8298  1142  30FF               	movlw	255
  8299  1143  05A2               	andwf	___xxtofl@arg,f
  8300  1144  30FF               	movlw	255
  8301  1145  05A3               	andwf	___xxtofl@arg+1,f
  8302  1146  307F               	movlw	127
  8303  1147  05A4               	andwf	___xxtofl@arg+2,f
  8304  1148  30FF               	movlw	255
  8305  1149  05A5               	andwf	___xxtofl@arg+3,f
  8306  114A                     l817:
  8307  114A  1003               	clrc
  8308  114B  0CA1               	rrf	___xxtofl@exp,f
  8309  114C                     l3027:
  8310  114C  0821               	movf	___xxtofl@exp,w
  8311  114D  00F6               	movwf	??___xxtofl
  8312  114E  01F7               	clrf	??___xxtofl+1
  8313  114F  01F8               	clrf	??___xxtofl+2
  8314  1150  01F9               	clrf	??___xxtofl+3
  8315  1151  3018               	movlw	24
  8316  1152                     u5055:
  8317  1152  1003               	clrc
  8318  1153  0DF6               	rlf	??___xxtofl,f
  8319  1154  0DF7               	rlf	??___xxtofl+1,f
  8320  1155  0DF8               	rlf	??___xxtofl+2,f
  8321  1156  0DF9               	rlf	??___xxtofl+3,f
  8322  1157                     u5050:
  8323  1157  3EFF               	addlw	-1
  8324  1158  1D03               	skipz
  8325  1159  2952               	goto	u5055
  8326  115A  0876               	movf	??___xxtofl,w
  8327  115B  04A2               	iorwf	___xxtofl@arg,f
  8328  115C  0877               	movf	??___xxtofl+1,w
  8329  115D  04A3               	iorwf	___xxtofl@arg+1,f
  8330  115E  0878               	movf	??___xxtofl+2,w
  8331  115F  04A4               	iorwf	___xxtofl@arg+2,f
  8332  1160  0879               	movf	??___xxtofl+3,w
  8333  1161  04A5               	iorwf	___xxtofl@arg+3,f
  8334  1162                     l3029:
  8335  1162  0820               	movf	___xxtofl@sign,w
  8336  1163  1903               	btfsc	3,2
  8337  1164  2966               	goto	u5061
  8338  1165  2967               	goto	u5060
  8339  1166                     u5061:
  8340  1166  296C               	goto	l3035
  8341  1167                     u5060:
  8342  1167                     l3031:
  8343  1167  1FF5               	btfss	___xxtofl@val+3,7
  8344  1168  296A               	goto	u5071
  8345  1169  296B               	goto	u5070
  8346  116A                     u5071:
  8347  116A  296C               	goto	l3035
  8348  116B                     u5070:
  8349  116B                     l3033:
  8350  116B  17A5               	bsf	___xxtofl@arg+3,7
  8351  116C                     l3035:
  8352  116C  0825               	movf	___xxtofl@arg+3,w
  8353  116D  00F5               	movwf	?___xxtofl+3
  8354  116E  0824               	movf	___xxtofl@arg+2,w
  8355  116F  00F4               	movwf	?___xxtofl+2
  8356  1170  0823               	movf	___xxtofl@arg+1,w
  8357  1171  00F3               	movwf	?___xxtofl+1
  8358  1172  0822               	movf	___xxtofl@arg,w
  8359  1173  00F2               	movwf	?___xxtofl
  8360  1174                     l805:
  8361  1174  0008               	return
  8362  1175                     __end_of___xxtofl:
  8363                           
  8364                           	psect	text26
  8365  1000                     __ptext26:	
  8366 ;; *************** function _cfg_usart *****************
  8367 ;; Defined at:
  8368 ;;		line 140 in file "mainp1.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;		None
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;		None
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  1    wreg      void 
  8375 ;; Registers used:
  8376 ;;		wreg, status,2
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8382 ;;      Params:         0       0       0       0       0
  8383 ;;      Locals:         0       0       0       0       0
  8384 ;;      Temps:          0       0       0       0       0
  8385 ;;      Totals:         0       0       0       0       0
  8386 ;;Total ram usage:        0 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:    1
  8389 ;; This function calls:
  8390 ;;		Nothing
  8391 ;; This function is called by:
  8392 ;;		_main
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           
  8397                           ;psect for function _cfg_usart
  8398  1000                     _cfg_usart:
  8399  1000                     l3047:	
  8400                           ;incstack = 0
  8401                           ; Regs used in _cfg_usart: [wreg+status,2]
  8402                           
  8403                           
  8404                           ;mainp1.c: 142:     TXSTAbits.SYNC = 0;
  8405  1000  1683               	bsf	3,5	;RP0=1, select bank1
  8406  1001  1303               	bcf	3,6	;RP1=0, select bank1
  8407  1002  1218               	bcf	24,4	;volatile
  8408                           
  8409                           ;mainp1.c: 143:     TXSTAbits.BRGH = 1;
  8410  1003  1518               	bsf	24,2	;volatile
  8411                           
  8412                           ;mainp1.c: 145:     BAUDCTLbits.BRG16 = 1;
  8413  1004  1683               	bsf	3,5	;RP0=1, select bank3
  8414  1005  1703               	bsf	3,6	;RP1=1, select bank3
  8415  1006  1587               	bsf	7,3	;volatile
  8416  1007                     l3049:
  8417                           
  8418                           ;mainp1.c: 147:     SPBRG = 103;
  8419  1007  3067               	movlw	103
  8420  1008  1683               	bsf	3,5	;RP0=1, select bank1
  8421  1009  1303               	bcf	3,6	;RP1=0, select bank1
  8422  100A  0099               	movwf	25	;volatile
  8423  100B                     l3051:
  8424                           
  8425                           ;mainp1.c: 148:     SPBRGH = 0;
  8426  100B  019A               	clrf	26	;volatile
  8427  100C                     l3053:
  8428                           
  8429                           ;mainp1.c: 150:     RCSTAbits.SPEN = 1;
  8430  100C  1283               	bcf	3,5	;RP0=0, select bank0
  8431  100D  1303               	bcf	3,6	;RP1=0, select bank0
  8432  100E  1798               	bsf	24,7	;volatile
  8433  100F                     l3055:
  8434                           
  8435                           ;mainp1.c: 151:     RCSTAbits.RX9 = 0;
  8436  100F  1318               	bcf	24,6	;volatile
  8437  1010                     l3057:
  8438                           
  8439                           ;mainp1.c: 152:     RCSTAbits.CREN = 1;
  8440  1010  1618               	bsf	24,4	;volatile
  8441  1011                     l3059:
  8442                           
  8443                           ;mainp1.c: 154:     TXSTAbits.TXEN = 1;
  8444  1011  1683               	bsf	3,5	;RP0=1, select bank1
  8445  1012  1303               	bcf	3,6	;RP1=0, select bank1
  8446  1013  1698               	bsf	24,5	;volatile
  8447  1014                     l107:
  8448  1014  0008               	return
  8449  1015                     __end_of_cfg_usart:
  8450                           
  8451                           	psect	text27
  8452  1CBF                     __ptext27:	
  8453 ;; *************** function _cfg_io *****************
  8454 ;; Defined at:
  8455 ;;		line 113 in file "mainp1.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;		None
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;		None
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      void 
  8462 ;; Registers used:
  8463 ;;		status,2
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8469 ;;      Params:         0       0       0       0       0
  8470 ;;      Locals:         0       0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0
  8472 ;;      Totals:         0       0       0       0       0
  8473 ;;Total ram usage:        0 bytes
  8474 ;; Hardware stack levels used:    1
  8475 ;; Hardware stack levels required when called:    1
  8476 ;; This function calls:
  8477 ;;		Nothing
  8478 ;; This function is called by:
  8479 ;;		_main
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           
  8484                           ;psect for function _cfg_io
  8485  1CBF                     _cfg_io:
  8486  1CBF                     l3039:	
  8487                           ;incstack = 0
  8488                           ; Regs used in _cfg_io: [status,2]
  8489                           
  8490                           
  8491                           ;mainp1.c: 114:     ANSEL = 0;
  8492  1CBF  1683               	bsf	3,5	;RP0=1, select bank3
  8493  1CC0  1703               	bsf	3,6	;RP1=1, select bank3
  8494  1CC1  0188               	clrf	8	;volatile
  8495                           
  8496                           ;mainp1.c: 115:     ANSELH = 0;
  8497  1CC2  0189               	clrf	9	;volatile
  8498  1CC3                     l3041:
  8499                           
  8500                           ;mainp1.c: 117:     TRISAbits.TRISA0 = 0;
  8501  1CC3  1683               	bsf	3,5	;RP0=1, select bank1
  8502  1CC4  1303               	bcf	3,6	;RP1=0, select bank1
  8503  1CC5  1005               	bcf	5,0	;volatile
  8504  1CC6                     l3043:
  8505                           
  8506                           ;mainp1.c: 118:     TRISAbits.TRISA1 = 1;
  8507  1CC6  1485               	bsf	5,1	;volatile
  8508  1CC7                     l3045:
  8509                           
  8510                           ;mainp1.c: 119:     TRISAbits.TRISA2 = 1;
  8511  1CC7  1505               	bsf	5,2	;volatile
  8512                           
  8513                           ;mainp1.c: 120:     TRISB = 0;
  8514  1CC8  0186               	clrf	6	;volatile
  8515                           
  8516                           ;mainp1.c: 121:     TRISD = 0;
  8517  1CC9  0188               	clrf	8	;volatile
  8518                           
  8519                           ;mainp1.c: 122:     TRISB = 0;
  8520  1CCA  0186               	clrf	6	;volatile
  8521                           
  8522                           ;mainp1.c: 124:     PORTB = 0;
  8523  1CCB  1283               	bcf	3,5	;RP0=0, select bank0
  8524  1CCC  1303               	bcf	3,6	;RP1=0, select bank0
  8525  1CCD  0186               	clrf	6	;volatile
  8526                           
  8527                           ;mainp1.c: 125:     PORTD = 0;
  8528  1CCE  0188               	clrf	8	;volatile
  8529                           
  8530                           ;mainp1.c: 126:     PORTA = 0;
  8531  1CCF  0185               	clrf	5	;volatile
  8532  1CD0                     l98:
  8533  1CD0  0008               	return
  8534  1CD1                     __end_of_cfg_io:
  8535                           
  8536                           	psect	text28
  8537  1CA5                     __ptext28:	
  8538 ;; *************** function _cfg_clk *****************
  8539 ;; Defined at:
  8540 ;;		line 129 in file "mainp1.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;		None
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;		None
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  1    wreg      void 
  8547 ;; Registers used:
  8548 ;;		wreg, status,2, status,0
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8554 ;;      Params:         0       0       0       0       0
  8555 ;;      Locals:         0       0       0       0       0
  8556 ;;      Temps:          0       0       0       0       0
  8557 ;;      Totals:         0       0       0       0       0
  8558 ;;Total ram usage:        0 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:    1
  8561 ;; This function calls:
  8562 ;;		Nothing
  8563 ;; This function is called by:
  8564 ;;		_main
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           
  8569                           ;psect for function _cfg_clk
  8570  1CA5                     _cfg_clk:
  8571  1CA5                     l3061:	
  8572                           ;incstack = 0
  8573                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  8574                           
  8575                           
  8576                           ;mainp1.c: 130:     OSCCONbits.IRCF = 0b110;
  8577  1CA5  1683               	bsf	3,5	;RP0=1, select bank1
  8578  1CA6  1303               	bcf	3,6	;RP1=0, select bank1
  8579  1CA7  080F               	movf	15,w	;volatile
  8580  1CA8  398F               	andlw	-113
  8581  1CA9  3860               	iorlw	96
  8582  1CAA  008F               	movwf	15	;volatile
  8583  1CAB                     l3063:
  8584                           
  8585                           ;mainp1.c: 131:     OSCCONbits.SCS = 1;
  8586  1CAB  140F               	bsf	15,0	;volatile
  8587  1CAC                     l101:
  8588  1CAC  0008               	return
  8589  1CAD                     __end_of_cfg_clk:
  8590                           
  8591                           	psect	text29
  8592  1C9E                     __ptext29:	
  8593 ;; *************** function _isr *****************
  8594 ;; Defined at:
  8595 ;;		line 63 in file "mainp1.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;		None
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;		None
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      void 
  8602 ;; Registers used:
  8603 ;;		None
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8609 ;;      Params:         0       0       0       0       0
  8610 ;;      Locals:         0       0       0       0       0
  8611 ;;      Temps:          2       0       0       0       0
  8612 ;;      Totals:         2       0       0       0       0
  8613 ;;Total ram usage:        2 bytes
  8614 ;; Hardware stack levels used:    1
  8615 ;; This function calls:
  8616 ;;		Nothing
  8617 ;; This function is called by:
  8618 ;;		Interrupt level 1
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           
  8622                           
  8623                           ;psect for function _isr
  8624  1C9E                     _isr:
  8625  1C9E                     i1l79:
  8626  1C9E  0871               	movf	??_isr+1,w
  8627  1C9F  008A               	movwf	10
  8628  1CA0  0E70               	swapf	??_isr,w
  8629  1CA1  0083               	movwf	3
  8630  1CA2  0EFE               	swapf	btemp,f
  8631  1CA3  0E7E               	swapf	btemp,w
  8632  1CA4  0009               	retfie
  8633  1CA5                     __end_of_isr:
  8634  007E                     btemp	set	126	;btemp
  8635  007E                     wtemp0	set	126
  8636                           
  8637                           	psect	intentry
  8638  0004                     __pintentry:	
  8639                           ;incstack = 0
  8640                           ; Regs used in _isr: []
  8641                           
  8642  0004                     interrupt_function:
  8643  007E                     saved_w	set	btemp
  8644  0004  00FE               	movwf	btemp
  8645  0005  0E03               	swapf	3,w
  8646  0006  00F0               	movwf	??_isr
  8647  0007  080A               	movf	10,w
  8648  0008  00F1               	movwf	??_isr+1
  8649  0009  160A  158A  2C9E   	ljmp	_isr
  8650                           
  8651                           	psect	config
  8652                           
  8653                           ;Config register CONFIG1 @ 0x2007
  8654                           ;	Oscillator Selection bits
  8655                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8656                           ;	Watchdog Timer Enable bit
  8657                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8658                           ;	Power-up Timer Enable bit
  8659                           ;	PWRTE = OFF, PWRT disabled
  8660                           ;	RE3/MCLR pin function select bit
  8661                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8662                           ;	Code Protection bit
  8663                           ;	CP = OFF, Program memory code protection is disabled
  8664                           ;	Data Code Protection bit
  8665                           ;	CPD = OFF, Data memory code protection is disabled
  8666                           ;	Brown Out Reset Selection bits
  8667                           ;	BOREN = OFF, BOR disabled
  8668                           ;	Internal External Switchover bit
  8669                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8670                           ;	Fail-Safe Clock Monitor Enabled bit
  8671                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8672                           ;	Low Voltage Programming Enable bit
  8673                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8674                           ;	In-Circuit Debugger Mode bit
  8675                           ;	DEBUG = 0x1, unprogrammed default
  8676  2007                     	org	8199
  8677  2007  20D4               	dw	8404
  8678                           
  8679                           ;Config register CONFIG2 @ 0x2008
  8680                           ;	Brown-out Reset Selection bit
  8681                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8682                           ;	Flash Program Memory Self Write Enable bits
  8683                           ;	WRT = OFF, Write protection off
  8684  2008                     	org	8200
  8685  2008  3FFF               	dw	16383
  8686                           
  8687                           	psect	text1_split_1
  8688  001D                     u6010:
  8689  001D                     l3645:
  8690  001D  1683               	bsf	3,5	;RP0=1, select bank1
  8691  001E  1303               	bcf	3,6	;RP1=0, select bank1
  8692  001F  0843               	movf	(sprintf@fval+3)^(0+128),w
  8693  0020  00F5               	movwf	___fleq@ff1+3
  8694  0021  0842               	movf	(sprintf@fval+2)^(0+128),w
  8695  0022  00F4               	movwf	___fleq@ff1+2
  8696  0023  0841               	movf	(sprintf@fval+1)^(0+128),w
  8697  0024  00F3               	movwf	___fleq@ff1+1
  8698  0025  0840               	movf	sprintf@fval^(0+128),w
  8699  0026  00F2               	movwf	___fleq@ff1
  8700  0027  3000               	movlw	0
  8701  0028  00F9               	movwf	___fleq@ff2+3
  8702  0029  3000               	movlw	0
  8703  002A  00F8               	movwf	___fleq@ff2+2
  8704  002B  3000               	movlw	0
  8705  002C  00F7               	movwf	___fleq@ff2+1
  8706  002D  3000               	movlw	0
  8707  002E  00F6               	movwf	___fleq@ff2
  8708  002F  160A  158A  25CD  120A  118A  	fcall	___fleq
  8709  0034  1803               	btfsc	3,0
  8710  0035  2837               	goto	u6021
  8711  0036  2838               	goto	u6020
  8712  0037                     u6021:
  8713  0037  28E0               	goto	l3665
  8714  0038                     u6020:
  8715  0038                     l3647:
  8716  0038  1683               	bsf	3,5	;RP0=1, select bank1
  8717  0039  1303               	bcf	3,6	;RP1=0, select bank1
  8718  003A  0843               	movf	(sprintf@fval+3)^(0+128),w
  8719  003B  1283               	bcf	3,5	;RP0=0, select bank0
  8720  003C  1303               	bcf	3,6	;RP1=0, select bank0
  8721  003D  00D8               	movwf	___fltol@f1+3
  8722  003E  1683               	bsf	3,5	;RP0=1, select bank1
  8723  003F  1303               	bcf	3,6	;RP1=0, select bank1
  8724  0040  0842               	movf	(sprintf@fval+2)^(0+128),w
  8725  0041  1283               	bcf	3,5	;RP0=0, select bank0
  8726  0042  1303               	bcf	3,6	;RP1=0, select bank0
  8727  0043  00D7               	movwf	___fltol@f1+2
  8728  0044  1683               	bsf	3,5	;RP0=1, select bank1
  8729  0045  1303               	bcf	3,6	;RP1=0, select bank1
  8730  0046  0841               	movf	(sprintf@fval+1)^(0+128),w
  8731  0047  1283               	bcf	3,5	;RP0=0, select bank0
  8732  0048  1303               	bcf	3,6	;RP1=0, select bank0
  8733  0049  00D6               	movwf	___fltol@f1+1
  8734  004A  1683               	bsf	3,5	;RP0=1, select bank1
  8735  004B  1303               	bcf	3,6	;RP1=0, select bank1
  8736  004C  0840               	movf	sprintf@fval^(0+128),w
  8737  004D  1283               	bcf	3,5	;RP0=0, select bank0
  8738  004E  1303               	bcf	3,6	;RP1=0, select bank0
  8739  004F  00D5               	movwf	___fltol@f1
  8740  0050  160A  158A  2784  120A  118A  	fcall	___fltol
  8741  0055  1283               	bcf	3,5	;RP0=0, select bank0
  8742  0056  1303               	bcf	3,6	;RP1=0, select bank0
  8743  0057  0858               	movf	?___fltol+3,w
  8744  0058  0457               	iorwf	?___fltol+2,w
  8745  0059  0456               	iorwf	?___fltol+1,w
  8746  005A  0455               	iorwf	?___fltol,w
  8747  005B  1D03               	skipz
  8748  005C  285E               	goto	u6031
  8749  005D  285F               	goto	u6030
  8750  005E                     u6031:
  8751  005E  28E0               	goto	l3665
  8752  005F                     u6030:
  8753  005F                     l3649:
  8754  005F  1683               	bsf	3,5	;RP0=1, select bank1
  8755  0060  1303               	bcf	3,6	;RP1=0, select bank1
  8756  0061  083B               	movf	(sprintf@eexp+1)^(0+128),w
  8757  0062  3A80               	xorlw	128
  8758  0063  00FF               	movwf	btemp+1
  8759  0064  3080               	movlw	128
  8760  0065  027F               	subwf	btemp+1,w
  8761  0066  1D03               	skipz
  8762  0067  286A               	goto	u6045
  8763  0068  3002               	movlw	2
  8764  0069  023A               	subwf	sprintf@eexp^(0+128),w
  8765  006A                     u6045:
  8766  006A  1C03               	skipc
  8767  006B  286D               	goto	u6041
  8768  006C  286E               	goto	u6040
  8769  006D                     u6041:
  8770  006D  28E0               	goto	l3665
  8771  006E                     u6040:
  8772  006E                     l3651:
  8773                           
  8774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8775  006E  1683               	bsf	3,5	;RP0=1, select bank1
  8776  006F  1303               	bcf	3,6	;RP1=0, select bank1
  8777  0070  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  8778  0071  00F5               	movwf	___flge@ff1+3
  8779  0072  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  8780  0073  00F4               	movwf	___flge@ff1+2
  8781  0074  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  8782  0075  00F3               	movwf	___flge@ff1+1
  8783  0076  0836               	movf	sprintf@tmpval^(0+128),w
  8784  0077  00F2               	movwf	___flge@ff1
  8785  0078  3040               	movlw	64
  8786  0079  00F9               	movwf	___flge@ff2+3
  8787  007A  3089               	movlw	137
  8788  007B  00F8               	movwf	___flge@ff2+2
  8789  007C  3070               	movlw	112
  8790  007D  00F7               	movwf	___flge@ff2+1
  8791  007E  305F               	movlw	95
  8792  007F  00F6               	movwf	___flge@ff2
  8793  0080  160A  118A  2015  120A  118A  	fcall	___flge
  8794  0085  1803               	btfsc	3,0
  8795  0086  2888               	goto	u6051
  8796  0087  2889               	goto	u6050
  8797  0088                     u6051:
  8798  0088  2892               	goto	l3655
  8799  0089                     u6050:
  8800  0089                     l3653:
  8801                           
  8802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  8803  0089  30F7               	movlw	247
  8804  008A  1683               	bsf	3,5	;RP0=1, select bank1
  8805  008B  1303               	bcf	3,6	;RP1=0, select bank1
  8806  008C  07BA               	addwf	sprintf@eexp^(0+128),f
  8807  008D  1803               	skipnc
  8808  008E  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  8809  008F  30FF               	movlw	255
  8810  0090  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  8811                           
  8812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8813  0091  289A               	goto	l3657
  8814  0092                     l3655:
  8815                           
  8816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  8817  0092  30F8               	movlw	248
  8818  0093  1683               	bsf	3,5	;RP0=1, select bank1
  8819  0094  1303               	bcf	3,6	;RP1=0, select bank1
  8820  0095  07BA               	addwf	sprintf@eexp^(0+128),f
  8821  0096  1803               	skipnc
  8822  0097  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  8823  0098  30FF               	movlw	255
  8824  0099  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  8825  009A                     l3657:
  8826                           
  8827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8828  009A  083A               	movf	sprintf@eexp^(0+128),w
  8829  009B  120A  158A  249D  120A  118A  	fcall	_scale
  8830  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  8831  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  8832  00A2  0845               	movf	?_scale+3,w
  8833  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  8834  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  8835  00A5  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  8836  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  8837  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  8838  00A8  0844               	movf	?_scale+2,w
  8839  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  8840  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  8841  00AB  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  8842  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  8843  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  8844  00AE  0843               	movf	?_scale+1,w
  8845  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  8846  00B0  1303               	bcf	3,6	;RP1=0, select bank1
  8847  00B1  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  8848  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  8849  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  8850  00B4  0842               	movf	?_scale,w
  8851  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  8852  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  8853  00B7  00B6               	movwf	sprintf@tmpval^(0+128)
  8854  00B8                     l3659:
  8855  00B8  0843               	movf	(sprintf@fval+3)^(0+128),w
  8856  00B9  00F5               	movwf	__div_to_l_@f1+3
  8857  00BA  0842               	movf	(sprintf@fval+2)^(0+128),w
  8858  00BB  00F4               	movwf	__div_to_l_@f1+2
  8859  00BC  0841               	movf	(sprintf@fval+1)^(0+128),w
  8860  00BD  00F3               	movwf	__div_to_l_@f1+1
  8861  00BE  0840               	movf	sprintf@fval^(0+128),w
  8862  00BF  00F2               	movwf	__div_to_l_@f1
  8863  00C0  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  8864  00C1  00F9               	movwf	__div_to_l_@f2+3
  8865  00C2  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  8866  00C3  00F8               	movwf	__div_to_l_@f2+2
  8867  00C4  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  8868  00C5  00F7               	movwf	__div_to_l_@f2+1
  8869  00C6  0836               	movf	sprintf@tmpval^(0+128),w
  8870  00C7  00F6               	movwf	__div_to_l_@f2
  8871  00C8  160A  118A  2232  120A  118A  	fcall	__div_to_l_
  8872  00CD  0875               	movf	?__div_to_l_+3,w
  8873  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  8874  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  8875  00D0  00B5               	movwf	(sprintf@val+3)^(0+128)
  8876  00D1  0874               	movf	?__div_to_l_+2,w
  8877  00D2  00B4               	movwf	(sprintf@val+2)^(0+128)
  8878  00D3  0873               	movf	?__div_to_l_+1,w
  8879  00D4  00B3               	movwf	(sprintf@val+1)^(0+128)
  8880  00D5  0872               	movf	?__div_to_l_,w
  8881  00D6  00B2               	movwf	sprintf@val^(0+128)
  8882  00D7                     l3663:
  8883                           
  8884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  8885  00D7  3000               	movlw	0
  8886  00D8  00C3               	movwf	(sprintf@fval+3)^(0+128)
  8887  00D9  3000               	movlw	0
  8888  00DA  00C2               	movwf	(sprintf@fval+2)^(0+128)
  8889  00DB  3000               	movlw	0
  8890  00DC  00C1               	movwf	(sprintf@fval+1)^(0+128)
  8891  00DD  3000               	movlw	0
  8892  00DE  00C0               	movwf	sprintf@fval^(0+128)
  8893                           
  8894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  8895  00DF  2946               	goto	l3671
  8896  00E0                     l3665:
  8897                           
  8898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  8899  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  8900  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  8901  00E2  0843               	movf	(sprintf@fval+3)^(0+128),w
  8902  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  8903  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  8904  00E5  00D8               	movwf	___fltol@f1+3
  8905  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  8906  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  8907  00E8  0842               	movf	(sprintf@fval+2)^(0+128),w
  8908  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  8909  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  8910  00EB  00D7               	movwf	___fltol@f1+2
  8911  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  8912  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  8913  00EE  0841               	movf	(sprintf@fval+1)^(0+128),w
  8914  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  8915  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  8916  00F1  00D6               	movwf	___fltol@f1+1
  8917  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  8918  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  8919  00F4  0840               	movf	sprintf@fval^(0+128),w
  8920  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  8921  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  8922  00F7  00D5               	movwf	___fltol@f1
  8923  00F8  160A  158A  2784  120A  118A  	fcall	___fltol
  8924  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  8925  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  8926  00FF  0858               	movf	?___fltol+3,w
  8927  0100  1683               	bsf	3,5	;RP0=1, select bank1
  8928  0101  1303               	bcf	3,6	;RP1=0, select bank1
  8929  0102  00B5               	movwf	(sprintf@val+3)^(0+128)
  8930  0103  1283               	bcf	3,5	;RP0=0, select bank0
  8931  0104  1303               	bcf	3,6	;RP1=0, select bank0
  8932  0105  0857               	movf	?___fltol+2,w
  8933  0106  1683               	bsf	3,5	;RP0=1, select bank1
  8934  0107  1303               	bcf	3,6	;RP1=0, select bank1
  8935  0108  00B4               	movwf	(sprintf@val+2)^(0+128)
  8936  0109  1283               	bcf	3,5	;RP0=0, select bank0
  8937  010A  1303               	bcf	3,6	;RP1=0, select bank0
  8938  010B  0856               	movf	?___fltol+1,w
  8939  010C  1683               	bsf	3,5	;RP0=1, select bank1
  8940  010D  1303               	bcf	3,6	;RP1=0, select bank1
  8941  010E  00B3               	movwf	(sprintf@val+1)^(0+128)
  8942  010F  1283               	bcf	3,5	;RP0=0, select bank0
  8943  0110  1303               	bcf	3,6	;RP1=0, select bank0
  8944  0111  0855               	movf	?___fltol,w
  8945  0112  1683               	bsf	3,5	;RP0=1, select bank1
  8946  0113  1303               	bcf	3,6	;RP1=0, select bank1
  8947  0114  00B2               	movwf	sprintf@val^(0+128)
  8948  0115                     l3667:
  8949                           
  8950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  8951  0115  0835               	movf	(sprintf@val+3)^(0+128),w
  8952  0116  00F5               	movwf	___xxtofl@val+3
  8953  0117  0834               	movf	(sprintf@val+2)^(0+128),w
  8954  0118  00F4               	movwf	___xxtofl@val+2
  8955  0119  0833               	movf	(sprintf@val+1)^(0+128),w
  8956  011A  00F3               	movwf	___xxtofl@val+1
  8957  011B  0832               	movf	sprintf@val^(0+128),w
  8958  011C  00F2               	movwf	___xxtofl@val
  8959  011D  3000               	movlw	0
  8960  011E  160A  118A  20B9  120A  118A  	fcall	___xxtofl
  8961  0123  0875               	movf	?___xxtofl+3,w
  8962  0124  1683               	bsf	3,5	;RP0=1, select bank1
  8963  0125  1303               	bcf	3,6	;RP1=0, select bank1
  8964  0126  00A3               	movwf	(___flsub@a+3)^(0+128)
  8965  0127  0874               	movf	?___xxtofl+2,w
  8966  0128  00A2               	movwf	(___flsub@a+2)^(0+128)
  8967  0129  0873               	movf	?___xxtofl+1,w
  8968  012A  00A1               	movwf	(___flsub@a+1)^(0+128)
  8969  012B  0872               	movf	?___xxtofl,w
  8970  012C  00A0               	movwf	___flsub@a^(0+128)
  8971  012D  0843               	movf	(sprintf@fval+3)^(0+128),w
  8972  012E  00A7               	movwf	(___flsub@b+3)^(0+128)
  8973  012F  0842               	movf	(sprintf@fval+2)^(0+128),w
  8974  0130  00A6               	movwf	(___flsub@b+2)^(0+128)
  8975  0131  0841               	movf	(sprintf@fval+1)^(0+128),w
  8976  0132  00A5               	movwf	(___flsub@b+1)^(0+128)
  8977  0133  0840               	movf	sprintf@fval^(0+128),w
  8978  0134  00A4               	movwf	___flsub@b^(0+128)
  8979  0135  160A  158A  261D  120A  118A  	fcall	___flsub
  8980  013A  1683               	bsf	3,5	;RP0=1, select bank1
  8981  013B  1303               	bcf	3,6	;RP1=0, select bank1
  8982  013C  0823               	movf	(?___flsub+3)^(0+128),w
  8983  013D  00C3               	movwf	(sprintf@fval+3)^(0+128)
  8984  013E  0822               	movf	(?___flsub+2)^(0+128),w
  8985  013F  00C2               	movwf	(sprintf@fval+2)^(0+128)
  8986  0140  0821               	movf	(?___flsub+1)^(0+128),w
  8987  0141  00C1               	movwf	(sprintf@fval+1)^(0+128)
  8988  0142  0820               	movf	?___flsub^(0+128),w
  8989  0143  00C0               	movwf	sprintf@fval^(0+128)
  8990  0144                     l3669:
  8991                           
  8992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  8993  0144  01BA               	clrf	sprintf@eexp^(0+128)
  8994  0145  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  8995  0146                     l3671:
  8996                           
  8997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8998  0146  01C7               	clrf	sprintf@c^(0+128)
  8999  0147  0AC7               	incf	sprintf@c^(0+128),f
  9000  0148                     l3677:
  9001                           
  9002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9003  0148  0847               	movf	sprintf@c^(0+128),w
  9004  0149  00A8               	movwf	??_sprintf^(0+128)
  9005  014A  3001               	movlw	1
  9006  014B                     u6065:
  9007  014B  1003               	clrc
  9008  014C  0DA8               	rlf	??_sprintf^(0+128),f
  9009  014D  3EFF               	addlw	-1
  9010  014E  1D03               	skipz
  9011  014F  294B               	goto	u6065
  9012  0150  1003               	clrc
  9013  0151  0D28               	rlf	??_sprintf^(0+128),w
  9014  0152  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9015  0153  0084               	movwf	4
  9016  0154  160A  158A  2000  120A  118A  	fcall	stringdir
  9017  0159  00A9               	movwf	(??_sprintf+1)^(0+128)
  9018  015A  160A  158A  2000  120A  118A  	fcall	stringdir
  9019  015F  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  9020  0160  160A  158A  2000  120A  118A  	fcall	stringdir
  9021  0165  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  9022  0166  160A  158A  2000  120A  118A  	fcall	stringdir
  9023  016B  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  9024  016C  082C               	movf	(??_sprintf+4)^(0+128),w
  9025  016D  0235               	subwf	(sprintf@val+3)^(0+128),w
  9026  016E  1D03               	skipz
  9027  016F  297A               	goto	u6075
  9028  0170  082B               	movf	(??_sprintf+3)^(0+128),w
  9029  0171  0234               	subwf	(sprintf@val+2)^(0+128),w
  9030  0172  1D03               	skipz
  9031  0173  297A               	goto	u6075
  9032  0174  082A               	movf	(??_sprintf+2)^(0+128),w
  9033  0175  0233               	subwf	(sprintf@val+1)^(0+128),w
  9034  0176  1D03               	skipz
  9035  0177  297A               	goto	u6075
  9036  0178  0829               	movf	(??_sprintf+1)^(0+128),w
  9037  0179  0232               	subwf	sprintf@val^(0+128),w
  9038  017A                     u6075:
  9039  017A  1803               	skipnc
  9040  017B  297D               	goto	u6071
  9041  017C  297E               	goto	u6070
  9042  017D                     u6071:
  9043  017D  297F               	goto	l3681
  9044  017E                     u6070:
  9045  017E  2989               	goto	l3683
  9046  017F                     l3681:
  9047  017F  3001               	movlw	1
  9048  0180  00A8               	movwf	??_sprintf^(0+128)
  9049  0181  0828               	movf	??_sprintf^(0+128),w
  9050  0182  07C7               	addwf	sprintf@c^(0+128),f
  9051  0183  300A               	movlw	10
  9052  0184  0647               	xorwf	sprintf@c^(0+128),w
  9053  0185  1D03               	btfss	3,2
  9054  0186  2988               	goto	u6081
  9055  0187  2989               	goto	u6080
  9056  0188                     u6081:
  9057  0188  2948               	goto	l3677
  9058  0189                     u6080:
  9059  0189                     l3683:
  9060                           
  9061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9062  0189  0847               	movf	sprintf@c^(0+128),w
  9063  018A  0744               	addwf	sprintf@prec^(0+128),w
  9064  018B  00A8               	movwf	??_sprintf^(0+128)
  9065  018C  0845               	movf	(sprintf@prec+1)^(0+128),w
  9066  018D  1803               	skipnc
  9067  018E  0A45               	incf	(sprintf@prec+1)^(0+128),w
  9068  018F  00A9               	movwf	(??_sprintf^(0+128)+1)
  9069  0190  083A               	movf	sprintf@eexp^(0+128),w
  9070  0191  0728               	addwf	??_sprintf^(0+128),w
  9071  0192  00AA               	movwf	(??_sprintf+2)^(0+128)
  9072  0193  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9073  0194  1803               	skipnc
  9074  0195  0A3B               	incf	(sprintf@eexp+1)^(0+128),w
  9075  0196  0729               	addwf	(??_sprintf+1)^(0+128),w
  9076  0197  00AB               	movwf	(??_sprintf+3)^(0+128)
  9077  0198  082A               	movf	(??_sprintf+2)^(0+128),w
  9078  0199  02BE               	subwf	sprintf@width^(0+128),f
  9079  019A  082B               	movf	(??_sprintf+3)^(0+128),w
  9080  019B  1C03               	skipc
  9081  019C  03BF               	decf	(sprintf@width+1)^(0+128),f
  9082  019D  02BF               	subwf	(sprintf@width+1)^(0+128),f
  9083                           
  9084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9085  019E  0844               	movf	sprintf@prec^(0+128),w
  9086  019F  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9087  01A0  1903               	btfsc	3,2
  9088  01A1  29A3               	goto	u6091
  9089  01A2  29A4               	goto	u6090
  9090  01A3                     u6091:
  9091  01A3  29AA               	goto	l3687
  9092  01A4                     u6090:
  9093  01A4                     l3685:
  9094                           
  9095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9096  01A4  30FF               	movlw	255
  9097  01A5  07BE               	addwf	sprintf@width^(0+128),f
  9098  01A6  1803               	skipnc
  9099  01A7  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9100  01A8  30FF               	movlw	255
  9101  01A9  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9102  01AA                     l3687:
  9103                           
  9104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9105  01AA  3003               	movlw	3
  9106  01AB  053C               	andwf	sprintf@flag^(0+128),w
  9107  01AC  00A8               	movwf	??_sprintf^(0+128)
  9108  01AD  3000               	movlw	0
  9109  01AE  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9110  01AF  00A9               	movwf	(??_sprintf+1)^(0+128)
  9111  01B0  0828               	movf	??_sprintf^(0+128),w
  9112  01B1  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9113  01B2  1903               	btfsc	3,2
  9114  01B3  29B5               	goto	u6101
  9115  01B4  29B6               	goto	u6100
  9116  01B5                     u6101:
  9117  01B5  29BC               	goto	l3691
  9118  01B6                     u6100:
  9119  01B6                     l3689:
  9120                           
  9121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9122  01B6  30FF               	movlw	255
  9123  01B7  07BE               	addwf	sprintf@width^(0+128),f
  9124  01B8  1803               	skipnc
  9125  01B9  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9126  01BA  30FF               	movlw	255
  9127  01BB  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9128  01BC                     l3691:
  9129                           
  9130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
  9131  01BC  1D3C               	btfss	sprintf@flag^(0+128),2
  9132  01BD  29BF               	goto	u6111
  9133  01BE  29C0               	goto	u6110
  9134  01BF                     u6111:
  9135  01BF  2A0C               	goto	l3713
  9136  01C0                     u6110:
  9137  01C0                     l3693:
  9138                           
  9139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
  9140  01C0  3003               	movlw	3
  9141  01C1  053C               	andwf	sprintf@flag^(0+128),w
  9142  01C2  00A8               	movwf	??_sprintf^(0+128)
  9143  01C3  3000               	movlw	0
  9144  01C4  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9145  01C5  00A9               	movwf	(??_sprintf+1)^(0+128)
  9146  01C6  0828               	movf	??_sprintf^(0+128),w
  9147  01C7  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9148  01C8  1903               	btfsc	3,2
  9149  01C9  29CB               	goto	u6121
  9150  01CA  29CC               	goto	u6120
  9151  01CB                     u6121:
  9152  01CB  29EB               	goto	l3705
  9153  01CC                     u6120:
  9154  01CC                     l3695:
  9155                           
  9156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
  9157  01CC  302D               	movlw	45
  9158  01CD  00A8               	movwf	??_sprintf^(0+128)
  9159  01CE  0846               	movf	sprintf@sp^(0+128),w
  9160  01CF  0084               	movwf	4
  9161  01D0  0828               	movf	??_sprintf^(0+128),w
  9162  01D1  1383               	bcf	3,7	;select IRP bank0
  9163  01D2  0080               	movwf	0
  9164  01D3                     l3697:
  9165  01D3  3001               	movlw	1
  9166  01D4  00A8               	movwf	??_sprintf^(0+128)
  9167  01D5  0828               	movf	??_sprintf^(0+128),w
  9168  01D6  07C6               	addwf	sprintf@sp^(0+128),f
  9169  01D7  29EB               	goto	l3705
  9170  01D8                     l3699:
  9171                           
  9172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
  9173  01D8  3030               	movlw	48
  9174  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  9175  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  9176  01DB  00A8               	movwf	??_sprintf^(0+128)
  9177  01DC  0846               	movf	sprintf@sp^(0+128),w
  9178  01DD  0084               	movwf	4
  9179  01DE  0828               	movf	??_sprintf^(0+128),w
  9180  01DF  1383               	bcf	3,7	;select IRP bank0
  9181  01E0  0080               	movwf	0
  9182  01E1                     l3701:
  9183  01E1  3001               	movlw	1
  9184  01E2  00A8               	movwf	??_sprintf^(0+128)
  9185  01E3  0828               	movf	??_sprintf^(0+128),w
  9186  01E4  07C6               	addwf	sprintf@sp^(0+128),f
  9187  01E5                     l3703:
  9188                           
  9189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
  9190  01E5  30FF               	movlw	255
  9191  01E6  07BE               	addwf	sprintf@width^(0+128),f
  9192  01E7  1803               	skipnc
  9193  01E8  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9194  01E9  30FF               	movlw	255
  9195  01EA  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9196  01EB                     l3705:
  9197                           
  9198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
  9199  01EB  083F               	movf	(sprintf@width+1)^(0+128),w
  9200  01EC  3A80               	xorlw	128
  9201  01ED  00FF               	movwf	btemp+1
  9202  01EE  3080               	movlw	128
  9203  01EF  027F               	subwf	btemp+1,w
  9204  01F0  1D03               	skipz
  9205  01F1  29F4               	goto	u6135
  9206  01F2  3001               	movlw	1
  9207  01F3  023E               	subwf	sprintf@width^(0+128),w
  9208  01F4                     u6135:
  9209  01F4  1803               	skipnc
  9210  01F5  29F7               	goto	u6131
  9211  01F6  29F8               	goto	u6130
  9212  01F7                     u6131:
  9213  01F7  29D8               	goto	l3699
  9214  01F8                     u6130:
  9215  01F8  2A99               	goto	l296
  9216  01F9                     l3707:
  9217                           
  9218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9219  01F9  3020               	movlw	32
  9220  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  9221  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  9222  01FC  00A8               	movwf	??_sprintf^(0+128)
  9223  01FD  0846               	movf	sprintf@sp^(0+128),w
  9224  01FE  0084               	movwf	4
  9225  01FF  0828               	movf	??_sprintf^(0+128),w
  9226  0200  1383               	bcf	3,7	;select IRP bank0
  9227  0201  0080               	movwf	0
  9228  0202                     l3709:
  9229  0202  3001               	movlw	1
  9230  0203  00A8               	movwf	??_sprintf^(0+128)
  9231  0204  0828               	movf	??_sprintf^(0+128),w
  9232  0205  07C6               	addwf	sprintf@sp^(0+128),f
  9233  0206                     l3711:
  9234                           
  9235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
  9236  0206  30FF               	movlw	255
  9237  0207  07BE               	addwf	sprintf@width^(0+128),f
  9238  0208  1803               	skipnc
  9239  0209  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9240  020A  30FF               	movlw	255
  9241  020B  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9242  020C                     l3713:
  9243                           
  9244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9245  020C  083F               	movf	(sprintf@width+1)^(0+128),w
  9246  020D  3A80               	xorlw	128
  9247  020E  00FF               	movwf	btemp+1
  9248  020F  3080               	movlw	128
  9249  0210  027F               	subwf	btemp+1,w
  9250  0211  1D03               	skipz
  9251  0212  2A15               	goto	u6145
  9252  0213  3001               	movlw	1
  9253  0214  023E               	subwf	sprintf@width^(0+128),w
  9254  0215                     u6145:
  9255  0215  1803               	skipnc
  9256  0216  2A18               	goto	u6141
  9257  0217  2A19               	goto	u6140
  9258  0218                     u6141:
  9259  0218  29F9               	goto	l3707
  9260  0219                     u6140:
  9261  0219                     l3715:
  9262                           
  9263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9264  0219  3003               	movlw	3
  9265  021A  1683               	bsf	3,5	;RP0=1, select bank1
  9266  021B  1303               	bcf	3,6	;RP1=0, select bank1
  9267  021C  053C               	andwf	sprintf@flag^(0+128),w
  9268  021D  00A8               	movwf	??_sprintf^(0+128)
  9269  021E  3000               	movlw	0
  9270  021F  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9271  0220  00A9               	movwf	(??_sprintf+1)^(0+128)
  9272  0221  0828               	movf	??_sprintf^(0+128),w
  9273  0222  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9274  0223  1903               	btfsc	3,2
  9275  0224  2A26               	goto	u6151
  9276  0225  2A27               	goto	u6150
  9277  0226                     u6151:
  9278  0226  2A99               	goto	l296
  9279  0227                     u6150:
  9280  0227                     l3717:
  9281                           
  9282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9283  0227  302D               	movlw	45
  9284  0228  00A8               	movwf	??_sprintf^(0+128)
  9285  0229  0846               	movf	sprintf@sp^(0+128),w
  9286  022A  0084               	movwf	4
  9287  022B  0828               	movf	??_sprintf^(0+128),w
  9288  022C  1383               	bcf	3,7	;select IRP bank0
  9289  022D  0080               	movwf	0
  9290  022E                     l3719:
  9291  022E  3001               	movlw	1
  9292  022F  00A8               	movwf	??_sprintf^(0+128)
  9293  0230  0828               	movf	??_sprintf^(0+128),w
  9294  0231  07C6               	addwf	sprintf@sp^(0+128),f
  9295  0232  2A99               	goto	l296
  9296  0233                     l3721:
  9297                           
  9298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9299  0233  0847               	movf	sprintf@c^(0+128),w
  9300  0234  00A8               	movwf	??_sprintf^(0+128)
  9301  0235  3001               	movlw	1
  9302  0236                     u6165:
  9303  0236  1003               	clrc
  9304  0237  0DA8               	rlf	??_sprintf^(0+128),f
  9305  0238  3EFF               	addlw	-1
  9306  0239  1D03               	skipz
  9307  023A  2A36               	goto	u6165
  9308  023B  1003               	clrc
  9309  023C  0D28               	rlf	??_sprintf^(0+128),w
  9310  023D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9311  023E  0084               	movwf	4
  9312  023F  160A  158A  2000  120A  118A  	fcall	stringdir
  9313  0244  00F2               	movwf	___lldiv@divisor
  9314  0245  160A  158A  2000  120A  118A  	fcall	stringdir
  9315  024A  00F3               	movwf	___lldiv@divisor+1
  9316  024B  160A  158A  2000  120A  118A  	fcall	stringdir
  9317  0250  00F4               	movwf	___lldiv@divisor+2
  9318  0251  160A  158A  2000  120A  118A  	fcall	stringdir
  9319  0256  00F5               	movwf	___lldiv@divisor+3
  9320  0257  0835               	movf	(sprintf@val+3)^(0+128),w
  9321  0258  00F9               	movwf	___lldiv@dividend+3
  9322  0259  0834               	movf	(sprintf@val+2)^(0+128),w
  9323  025A  00F8               	movwf	___lldiv@dividend+2
  9324  025B  0833               	movf	(sprintf@val+1)^(0+128),w
  9325  025C  00F7               	movwf	___lldiv@dividend+1
  9326  025D  0832               	movf	sprintf@val^(0+128),w
  9327  025E  00F6               	movwf	___lldiv@dividend
  9328  025F  160A  158A  271C  120A  118A  	fcall	___lldiv
  9329  0264  0875               	movf	?___lldiv+3,w
  9330  0265  1683               	bsf	3,5	;RP0=1, select bank1
  9331  0266  1303               	bcf	3,6	;RP1=0, select bank1
  9332  0267  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9333  0268  0874               	movf	?___lldiv+2,w
  9334  0269  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9335  026A  0873               	movf	?___lldiv+1,w
  9336  026B  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9337  026C  0872               	movf	?___lldiv,w
  9338  026D  00B6               	movwf	sprintf@tmpval^(0+128)
  9339  026E                     l3723:
  9340                           
  9341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9342  026E  3000               	movlw	0
  9343  026F  00F5               	movwf	___llmod@divisor+3
  9344  0270  3000               	movlw	0
  9345  0271  00F4               	movwf	___llmod@divisor+2
  9346  0272  3000               	movlw	0
  9347  0273  00F3               	movwf	___llmod@divisor+1
  9348  0274  300A               	movlw	10
  9349  0275  00F2               	movwf	___llmod@divisor
  9350  0276  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9351  0277  00F9               	movwf	___llmod@dividend+3
  9352  0278  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9353  0279  00F8               	movwf	___llmod@dividend+2
  9354  027A  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9355  027B  00F7               	movwf	___llmod@dividend+1
  9356  027C  0836               	movf	sprintf@tmpval^(0+128),w
  9357  027D  00F6               	movwf	___llmod@dividend
  9358  027E  160A  158A  266D  120A  118A  	fcall	___llmod
  9359  0283  0875               	movf	?___llmod+3,w
  9360  0284  1683               	bsf	3,5	;RP0=1, select bank1
  9361  0285  1303               	bcf	3,6	;RP1=0, select bank1
  9362  0286  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9363  0287  0874               	movf	?___llmod+2,w
  9364  0288  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9365  0289  0873               	movf	?___llmod+1,w
  9366  028A  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9367  028B  0872               	movf	?___llmod,w
  9368  028C  00B6               	movwf	sprintf@tmpval^(0+128)
  9369  028D                     l3725:
  9370                           
  9371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9372  028D  0836               	movf	sprintf@tmpval^(0+128),w
  9373  028E  3E30               	addlw	48
  9374  028F  00A8               	movwf	??_sprintf^(0+128)
  9375  0290  0846               	movf	sprintf@sp^(0+128),w
  9376  0291  0084               	movwf	4
  9377  0292  0828               	movf	??_sprintf^(0+128),w
  9378  0293  1383               	bcf	3,7	;select IRP bank0
  9379  0294  0080               	movwf	0
  9380  0295  3001               	movlw	1
  9381  0296  00A8               	movwf	??_sprintf^(0+128)
  9382  0297  0828               	movf	??_sprintf^(0+128),w
  9383  0298  07C6               	addwf	sprintf@sp^(0+128),f
  9384  0299                     l296:	
  9385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9386                           
  9387                           
  9388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9389  0299  3001               	movlw	1
  9390  029A  1683               	bsf	3,5	;RP0=1, select bank1
  9391  029B  1303               	bcf	3,6	;RP1=0, select bank1
  9392  029C  02C7               	subwf	sprintf@c^(0+128),f
  9393  029D  0A47               	incf	sprintf@c^(0+128),w
  9394  029E  1D03               	btfss	3,2
  9395  029F  2AA1               	goto	u6171
  9396  02A0  2AA2               	goto	u6170
  9397  02A1                     u6171:
  9398  02A1  2A33               	goto	l3721
  9399  02A2                     u6170:
  9400  02A2  2AB6               	goto	l3733
  9401  02A3                     l3727:
  9402                           
  9403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9404  02A3  3030               	movlw	48
  9405  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  9406  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  9407  02A6  00A8               	movwf	??_sprintf^(0+128)
  9408  02A7  0846               	movf	sprintf@sp^(0+128),w
  9409  02A8  0084               	movwf	4
  9410  02A9  0828               	movf	??_sprintf^(0+128),w
  9411  02AA  1383               	bcf	3,7	;select IRP bank0
  9412  02AB  0080               	movwf	0
  9413  02AC                     l3729:
  9414  02AC  3001               	movlw	1
  9415  02AD  00A8               	movwf	??_sprintf^(0+128)
  9416  02AE  0828               	movf	??_sprintf^(0+128),w
  9417  02AF  07C6               	addwf	sprintf@sp^(0+128),f
  9418  02B0                     l3731:
  9419                           
  9420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9421  02B0  30FF               	movlw	255
  9422  02B1  07BA               	addwf	sprintf@eexp^(0+128),f
  9423  02B2  1803               	skipnc
  9424  02B3  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  9425  02B4  30FF               	movlw	255
  9426  02B5  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  9427  02B6                     l3733:
  9428                           
  9429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9430  02B6  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9431  02B7  3A80               	xorlw	128
  9432  02B8  00FF               	movwf	btemp+1
  9433  02B9  3080               	movlw	128
  9434  02BA  027F               	subwf	btemp+1,w
  9435  02BB  1D03               	skipz
  9436  02BC  2ABF               	goto	u6185
  9437  02BD  3001               	movlw	1
  9438  02BE  023A               	subwf	sprintf@eexp^(0+128),w
  9439  02BF                     u6185:
  9440  02BF  1803               	skipnc
  9441  02C0  2AC2               	goto	u6181
  9442  02C1  2AC3               	goto	u6180
  9443  02C2                     u6181:
  9444  02C2  2AA3               	goto	l3727
  9445  02C3                     u6180:
  9446  02C3                     l3735:
  9447                           
  9448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9449  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  9450  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  9451  02C5  0845               	movf	(sprintf@prec+1)^(0+128),w
  9452  02C6  3A80               	xorlw	128
  9453  02C7  00FF               	movwf	btemp+1
  9454  02C8  3080               	movlw	128
  9455  02C9  027F               	subwf	btemp+1,w
  9456  02CA  1D03               	skipz
  9457  02CB  2ACE               	goto	u6195
  9458  02CC  3009               	movlw	9
  9459  02CD  0244               	subwf	sprintf@prec^(0+128),w
  9460  02CE                     u6195:
  9461  02CE  1C03               	skipc
  9462  02CF  2AD1               	goto	u6191
  9463  02D0  2AD2               	goto	u6190
  9464  02D1                     u6191:
  9465  02D1  2AD9               	goto	l3739
  9466  02D2                     u6190:
  9467  02D2                     l3737:
  9468                           
  9469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9470  02D2  3008               	movlw	8
  9471  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  9472  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  9473  02D5  00A8               	movwf	??_sprintf^(0+128)
  9474  02D6  0828               	movf	??_sprintf^(0+128),w
  9475  02D7  00C7               	movwf	sprintf@c^(0+128)
  9476  02D8  2ADF               	goto	l303
  9477  02D9                     l3739:
  9478                           
  9479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9480  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  9481  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  9482  02DB  0844               	movf	sprintf@prec^(0+128),w
  9483  02DC  00A8               	movwf	??_sprintf^(0+128)
  9484  02DD  0828               	movf	??_sprintf^(0+128),w
  9485  02DE  00C7               	movwf	sprintf@c^(0+128)
  9486  02DF                     l303:
  9487                           
  9488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9489  02DF  0847               	movf	sprintf@c^(0+128),w
  9490  02E0  00A8               	movwf	??_sprintf^(0+128)
  9491  02E1  01A9               	clrf	(??_sprintf^(0+128)+1)
  9492  02E2  0828               	movf	??_sprintf^(0+128),w
  9493  02E3  02C4               	subwf	sprintf@prec^(0+128),f
  9494  02E4  0829               	movf	(??_sprintf+1)^(0+128),w
  9495  02E5  1C03               	skipc
  9496  02E6  03C5               	decf	(sprintf@prec+1)^(0+128),f
  9497  02E7  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  9498  02E8                     l3741:
  9499                           
  9500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9501  02E8  0847               	movf	sprintf@c^(0+128),w
  9502  02E9  1903               	btfsc	3,2
  9503  02EA  2AEC               	goto	u6201
  9504  02EB  2AED               	goto	u6200
  9505  02EC                     u6201:
  9506  02EC  2AF8               	goto	l3747
  9507  02ED                     u6200:
  9508  02ED                     l3743:
  9509                           
  9510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9511  02ED  302E               	movlw	46
  9512  02EE  00A8               	movwf	??_sprintf^(0+128)
  9513  02EF  0846               	movf	sprintf@sp^(0+128),w
  9514  02F0  0084               	movwf	4
  9515  02F1  0828               	movf	??_sprintf^(0+128),w
  9516  02F2  1383               	bcf	3,7	;select IRP bank0
  9517  02F3  0080               	movwf	0
  9518  02F4                     l3745:
  9519  02F4  3001               	movlw	1
  9520  02F5  00A8               	movwf	??_sprintf^(0+128)
  9521  02F6  0828               	movf	??_sprintf^(0+128),w
  9522  02F7  07C6               	addwf	sprintf@sp^(0+128),f
  9523  02F8                     l3747:
  9524                           
  9525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9526  02F8  0847               	movf	sprintf@c^(0+128),w
  9527  02F9  120A  158A  249D  120A  118A  	fcall	_scale
  9528  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  9529  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  9530  0300  0845               	movf	?_scale+3,w
  9531  0301  1683               	bsf	3,5	;RP0=1, select bank1
  9532  0302  1303               	bcf	3,6	;RP1=0, select bank1
  9533  0303  00B0               	movwf	(_sprintf$1077+3)^(0+128)
  9534  0304  1283               	bcf	3,5	;RP0=0, select bank0
  9535  0305  1303               	bcf	3,6	;RP1=0, select bank0
  9536  0306  0844               	movf	?_scale+2,w
  9537  0307  1683               	bsf	3,5	;RP0=1, select bank1
  9538  0308  1303               	bcf	3,6	;RP1=0, select bank1
  9539  0309  00AF               	movwf	(_sprintf$1077+2)^(0+128)
  9540  030A  1283               	bcf	3,5	;RP0=0, select bank0
  9541  030B  1303               	bcf	3,6	;RP1=0, select bank0
  9542  030C  0843               	movf	?_scale+1,w
  9543  030D  1683               	bsf	3,5	;RP0=1, select bank1
  9544  030E  1303               	bcf	3,6	;RP1=0, select bank1
  9545  030F  00AE               	movwf	(_sprintf$1077+1)^(0+128)
  9546  0310  1283               	bcf	3,5	;RP0=0, select bank0
  9547  0311  1303               	bcf	3,6	;RP1=0, select bank0
  9548  0312  0842               	movf	?_scale,w
  9549  0313  1683               	bsf	3,5	;RP0=1, select bank1
  9550  0314  1303               	bcf	3,6	;RP1=0, select bank1
  9551  0315  00AD               	movwf	_sprintf$1077^(0+128)
  9552  0316                     l3749:
  9553                           
  9554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9555  0316  0830               	movf	(_sprintf$1077+3)^(0+128),w
  9556  0317  1283               	bcf	3,5	;RP0=0, select bank0
  9557  0318  1303               	bcf	3,6	;RP1=0, select bank0
  9558  0319  00AF               	movwf	___flmul@a+3
  9559  031A  1683               	bsf	3,5	;RP0=1, select bank1
  9560  031B  1303               	bcf	3,6	;RP1=0, select bank1
  9561  031C  082F               	movf	(_sprintf$1077+2)^(0+128),w
  9562  031D  1283               	bcf	3,5	;RP0=0, select bank0
  9563  031E  1303               	bcf	3,6	;RP1=0, select bank0
  9564  031F  00AE               	movwf	___flmul@a+2
  9565  0320  1683               	bsf	3,5	;RP0=1, select bank1
  9566  0321  1303               	bcf	3,6	;RP1=0, select bank1
  9567  0322  082E               	movf	(_sprintf$1077+1)^(0+128),w
  9568  0323  1283               	bcf	3,5	;RP0=0, select bank0
  9569  0324  1303               	bcf	3,6	;RP1=0, select bank0
  9570  0325  00AD               	movwf	___flmul@a+1
  9571  0326  1683               	bsf	3,5	;RP0=1, select bank1
  9572  0327  1303               	bcf	3,6	;RP1=0, select bank1
  9573  0328  082D               	movf	_sprintf$1077^(0+128),w
  9574  0329  1283               	bcf	3,5	;RP0=0, select bank0
  9575  032A  1303               	bcf	3,6	;RP1=0, select bank0
  9576  032B  00AC               	movwf	___flmul@a
  9577  032C  1683               	bsf	3,5	;RP0=1, select bank1
  9578  032D  1303               	bcf	3,6	;RP1=0, select bank1
  9579  032E  0843               	movf	(sprintf@fval+3)^(0+128),w
  9580  032F  1283               	bcf	3,5	;RP0=0, select bank0
  9581  0330  1303               	bcf	3,6	;RP1=0, select bank0
  9582  0331  00AB               	movwf	___flmul@b+3
  9583  0332  1683               	bsf	3,5	;RP0=1, select bank1
  9584  0333  1303               	bcf	3,6	;RP1=0, select bank1
  9585  0334  0842               	movf	(sprintf@fval+2)^(0+128),w
  9586  0335  1283               	bcf	3,5	;RP0=0, select bank0
  9587  0336  1303               	bcf	3,6	;RP1=0, select bank0
  9588  0337  00AA               	movwf	___flmul@b+2
  9589  0338  1683               	bsf	3,5	;RP0=1, select bank1
  9590  0339  1303               	bcf	3,6	;RP1=0, select bank1
  9591  033A  0841               	movf	(sprintf@fval+1)^(0+128),w
  9592  033B  1283               	bcf	3,5	;RP0=0, select bank0
  9593  033C  1303               	bcf	3,6	;RP1=0, select bank0
  9594  033D  00A9               	movwf	___flmul@b+1
  9595  033E  1683               	bsf	3,5	;RP0=1, select bank1
  9596  033F  1303               	bcf	3,6	;RP1=0, select bank1
  9597  0340  0840               	movf	sprintf@fval^(0+128),w
  9598  0341  1283               	bcf	3,5	;RP0=0, select bank0
  9599  0342  1303               	bcf	3,6	;RP1=0, select bank0
  9600  0343  00A8               	movwf	___flmul@b
  9601  0344  120A  158A  213C  120A  118A  	fcall	___flmul
  9602  0349  1283               	bcf	3,5	;RP0=0, select bank0
  9603  034A  1303               	bcf	3,6	;RP1=0, select bank0
  9604  034B  082B               	movf	?___flmul+3,w
  9605  034C  00D8               	movwf	___fltol@f1+3
  9606  034D  082A               	movf	?___flmul+2,w
  9607  034E  00D7               	movwf	___fltol@f1+2
  9608  034F  0829               	movf	?___flmul+1,w
  9609  0350  00D6               	movwf	___fltol@f1+1
  9610  0351  0828               	movf	?___flmul,w
  9611  0352  00D5               	movwf	___fltol@f1
  9612  0353  160A  158A  2784  120A  118A  	fcall	___fltol
  9613  0358  1283               	bcf	3,5	;RP0=0, select bank0
  9614  0359  1303               	bcf	3,6	;RP1=0, select bank0
  9615  035A  0858               	movf	?___fltol+3,w
  9616  035B  1683               	bsf	3,5	;RP0=1, select bank1
  9617  035C  1303               	bcf	3,6	;RP1=0, select bank1
  9618  035D  00B5               	movwf	(sprintf@val+3)^(0+128)
  9619  035E  1283               	bcf	3,5	;RP0=0, select bank0
  9620  035F  1303               	bcf	3,6	;RP1=0, select bank0
  9621  0360  0857               	movf	?___fltol+2,w
  9622  0361  1683               	bsf	3,5	;RP0=1, select bank1
  9623  0362  1303               	bcf	3,6	;RP1=0, select bank1
  9624  0363  00B4               	movwf	(sprintf@val+2)^(0+128)
  9625  0364  1283               	bcf	3,5	;RP0=0, select bank0
  9626  0365  1303               	bcf	3,6	;RP1=0, select bank0
  9627  0366  0856               	movf	?___fltol+1,w
  9628  0367  1683               	bsf	3,5	;RP0=1, select bank1
  9629  0368  1303               	bcf	3,6	;RP1=0, select bank1
  9630  0369  00B3               	movwf	(sprintf@val+1)^(0+128)
  9631  036A  1283               	bcf	3,5	;RP0=0, select bank0
  9632  036B  1303               	bcf	3,6	;RP1=0, select bank0
  9633  036C  0855               	movf	?___fltol,w
  9634  036D  1683               	bsf	3,5	;RP0=1, select bank1
  9635  036E  1303               	bcf	3,6	;RP1=0, select bank1
  9636  036F  00B2               	movwf	sprintf@val^(0+128)
  9637                           
  9638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9639  0370  2C12               	goto	l3759
  9640  0371                     l3751:
  9641                           
  9642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9643  0371  0847               	movf	sprintf@c^(0+128),w
  9644  0372  00A8               	movwf	??_sprintf^(0+128)
  9645  0373  3001               	movlw	1
  9646  0374                     u6215:
  9647  0374  1003               	clrc
  9648  0375  0DA8               	rlf	??_sprintf^(0+128),f
  9649  0376  3EFF               	addlw	-1
  9650  0377  1D03               	skipz
  9651  0378  2B74               	goto	u6215
  9652  0379  1003               	clrc
  9653  037A  0D28               	rlf	??_sprintf^(0+128),w
  9654  037B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9655  037C  0084               	movwf	4
  9656  037D  160A  158A  2000  120A  118A  	fcall	stringdir
  9657  0382  00F2               	movwf	___lldiv@divisor
  9658  0383  160A  158A  2000  120A  118A  	fcall	stringdir
  9659  0388  00F3               	movwf	___lldiv@divisor+1
  9660  0389  160A  158A  2000  120A  118A  	fcall	stringdir
  9661  038E  00F4               	movwf	___lldiv@divisor+2
  9662  038F  160A  158A  2000  120A  118A  	fcall	stringdir
  9663  0394  00F5               	movwf	___lldiv@divisor+3
  9664  0395  0835               	movf	(sprintf@val+3)^(0+128),w
  9665  0396  00F9               	movwf	___lldiv@dividend+3
  9666  0397  0834               	movf	(sprintf@val+2)^(0+128),w
  9667  0398  00F8               	movwf	___lldiv@dividend+2
  9668  0399  0833               	movf	(sprintf@val+1)^(0+128),w
  9669  039A  00F7               	movwf	___lldiv@dividend+1
  9670  039B  0832               	movf	sprintf@val^(0+128),w
  9671  039C  00F6               	movwf	___lldiv@dividend
  9672  039D  160A  158A  271C  120A  118A  	fcall	___lldiv
  9673  03A2  0875               	movf	?___lldiv+3,w
  9674  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  9675  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  9676  03A5  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9677  03A6  0874               	movf	?___lldiv+2,w
  9678  03A7  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9679  03A8  0873               	movf	?___lldiv+1,w
  9680  03A9  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9681  03AA  0872               	movf	?___lldiv,w
  9682  03AB  00B6               	movwf	sprintf@tmpval^(0+128)
  9683  03AC                     l3753:
  9684                           
  9685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9686  03AC  3000               	movlw	0
  9687  03AD  00F5               	movwf	___llmod@divisor+3
  9688  03AE  3000               	movlw	0
  9689  03AF  00F4               	movwf	___llmod@divisor+2
  9690  03B0  3000               	movlw	0
  9691  03B1  00F3               	movwf	___llmod@divisor+1
  9692  03B2  300A               	movlw	10
  9693  03B3  00F2               	movwf	___llmod@divisor
  9694  03B4  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9695  03B5  00F9               	movwf	___llmod@dividend+3
  9696  03B6  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9697  03B7  00F8               	movwf	___llmod@dividend+2
  9698  03B8  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9699  03B9  00F7               	movwf	___llmod@dividend+1
  9700  03BA  0836               	movf	sprintf@tmpval^(0+128),w
  9701  03BB  00F6               	movwf	___llmod@dividend
  9702  03BC  160A  158A  266D  120A  118A  	fcall	___llmod
  9703  03C1  0875               	movf	?___llmod+3,w
  9704  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  9705  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  9706  03C4  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9707  03C5  0874               	movf	?___llmod+2,w
  9708  03C6  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9709  03C7  0873               	movf	?___llmod+1,w
  9710  03C8  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9711  03C9  0872               	movf	?___llmod,w
  9712  03CA  00B6               	movwf	sprintf@tmpval^(0+128)
  9713  03CB                     l3755:
  9714                           
  9715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  9716  03CB  0836               	movf	sprintf@tmpval^(0+128),w
  9717  03CC  3E30               	addlw	48
  9718  03CD  00A8               	movwf	??_sprintf^(0+128)
  9719  03CE  0846               	movf	sprintf@sp^(0+128),w
  9720  03CF  0084               	movwf	4
  9721  03D0  0828               	movf	??_sprintf^(0+128),w
  9722  03D1  1383               	bcf	3,7	;select IRP bank0
  9723  03D2  0080               	movwf	0
  9724  03D3  3001               	movlw	1
  9725  03D4  00A8               	movwf	??_sprintf^(0+128)
  9726  03D5  0828               	movf	??_sprintf^(0+128),w
  9727  03D6  07C6               	addwf	sprintf@sp^(0+128),f
  9728  03D7                     l3757:
  9729                           
  9730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  9731  03D7  0847               	movf	sprintf@c^(0+128),w
  9732  03D8  00A8               	movwf	??_sprintf^(0+128)
  9733  03D9  3001               	movlw	1
  9734  03DA                     u6225:
  9735  03DA  1003               	clrc
  9736  03DB  0DA8               	rlf	??_sprintf^(0+128),f
  9737  03DC  3EFF               	addlw	-1
  9738  03DD  1D03               	skipz
  9739  03DE  2BDA               	goto	u6225
  9740  03DF  1003               	clrc
  9741  03E0  0D28               	rlf	??_sprintf^(0+128),w
  9742  03E1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9743  03E2  0084               	movwf	4
  9744  03E3  160A  158A  2000  120A  118A  	fcall	stringdir
  9745  03E8  00F2               	movwf	___llmod@divisor
  9746  03E9  160A  158A  2000  120A  118A  	fcall	stringdir
  9747  03EE  00F3               	movwf	___llmod@divisor+1
  9748  03EF  160A  158A  2000  120A  118A  	fcall	stringdir
  9749  03F4  00F4               	movwf	___llmod@divisor+2
  9750  03F5  160A  158A  2000  120A  118A  	fcall	stringdir
  9751  03FA  00F5               	movwf	___llmod@divisor+3
  9752  03FB  0835               	movf	(sprintf@val+3)^(0+128),w
  9753  03FC  00F9               	movwf	___llmod@dividend+3
  9754  03FD  0834               	movf	(sprintf@val+2)^(0+128),w
  9755  03FE  00F8               	movwf	___llmod@dividend+2
  9756  03FF  0833               	movf	(sprintf@val+1)^(0+128),w
  9757  0400  00F7               	movwf	___llmod@dividend+1
  9758  0401  0832               	movf	sprintf@val^(0+128),w
  9759  0402  00F6               	movwf	___llmod@dividend
  9760  0403  160A  158A  266D  120A  118A  	fcall	___llmod
  9761  0408  0875               	movf	?___llmod+3,w
  9762  0409  1683               	bsf	3,5	;RP0=1, select bank1
  9763  040A  1303               	bcf	3,6	;RP1=0, select bank1
  9764  040B  00B5               	movwf	(sprintf@val+3)^(0+128)
  9765  040C  0874               	movf	?___llmod+2,w
  9766  040D  00B4               	movwf	(sprintf@val+2)^(0+128)
  9767  040E  0873               	movf	?___llmod+1,w
  9768  040F  00B3               	movwf	(sprintf@val+1)^(0+128)
  9769  0410  0872               	movf	?___llmod,w
  9770  0411  00B2               	movwf	sprintf@val^(0+128)
  9771  0412                     l3759:
  9772                           
  9773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9774  0412  3001               	movlw	1
  9775  0413  02C7               	subwf	sprintf@c^(0+128),f
  9776  0414  0A47               	incf	sprintf@c^(0+128),w
  9777  0415  1D03               	btfss	3,2
  9778  0416  2C18               	goto	u6231
  9779  0417  2C19               	goto	u6230
  9780  0418                     u6231:
  9781  0418  2B71               	goto	l3751
  9782  0419                     u6230:
  9783  0419  2C2B               	goto	l3767
  9784  041A                     l3761:
  9785                           
  9786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  9787  041A  3030               	movlw	48
  9788  041B  00A8               	movwf	??_sprintf^(0+128)
  9789  041C  0846               	movf	sprintf@sp^(0+128),w
  9790  041D  0084               	movwf	4
  9791  041E  0828               	movf	??_sprintf^(0+128),w
  9792  041F  1383               	bcf	3,7	;select IRP bank0
  9793  0420  0080               	movwf	0
  9794  0421                     l3763:
  9795  0421  3001               	movlw	1
  9796  0422  00A8               	movwf	??_sprintf^(0+128)
  9797  0423  0828               	movf	??_sprintf^(0+128),w
  9798  0424  07C6               	addwf	sprintf@sp^(0+128),f
  9799  0425                     l3765:
  9800                           
  9801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9802  0425  30FF               	movlw	255
  9803  0426  07C4               	addwf	sprintf@prec^(0+128),f
  9804  0427  1803               	skipnc
  9805  0428  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  9806  0429  30FF               	movlw	255
  9807  042A  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  9808  042B                     l3767:
  9809                           
  9810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  9811  042B  0844               	movf	sprintf@prec^(0+128),w
  9812  042C  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9813  042D  1D03               	btfss	3,2
  9814  042E  2C30               	goto	u6241
  9815  042F  2C31               	goto	u6240
  9816  0430                     u6241:
  9817  0430  2C1A               	goto	l3761
  9818  0431                     u6240:
  9819  0431  2D30               	goto	l3831
  9820  0432                     l3769:
  9821                           
  9822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  9823  0432  0844               	movf	sprintf@prec^(0+128),w
  9824  0433  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9825  0434  1D03               	btfss	3,2
  9826  0435  2C37               	goto	u6251
  9827  0436  2C38               	goto	u6250
  9828  0437                     u6251:
  9829  0437  2C46               	goto	l311
  9830  0438                     u6250:
  9831  0438                     l3771:
  9832  0438  0835               	movf	(sprintf@val+3)^(0+128),w
  9833  0439  0434               	iorwf	(sprintf@val+2)^(0+128),w
  9834  043A  0433               	iorwf	(sprintf@val+1)^(0+128),w
  9835  043B  0432               	iorwf	sprintf@val^(0+128),w
  9836  043C  1D03               	skipz
  9837  043D  2C3F               	goto	u6261
  9838  043E  2C40               	goto	u6260
  9839  043F                     u6261:
  9840  043F  2C46               	goto	l311
  9841  0440                     u6260:
  9842  0440                     l3773:
  9843                           
  9844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9845  0440  3001               	movlw	1
  9846  0441  07C4               	addwf	sprintf@prec^(0+128),f
  9847  0442  1803               	skipnc
  9848  0443  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  9849  0444  3000               	movlw	0
  9850  0445  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  9851  0446                     l311:
  9852                           
  9853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  9854  0446  0845               	movf	(sprintf@prec+1)^(0+128),w
  9855  0447  3A80               	xorlw	128
  9856  0448  3C80               	sublw	128
  9857  0449  1D03               	skipz
  9858  044A  2C4D               	goto	u6275
  9859  044B  0844               	movf	sprintf@prec^(0+128),w
  9860  044C  0247               	subwf	sprintf@c^(0+128),w
  9861  044D                     u6275:
  9862  044D  1803               	skipnc
  9863  044E  2C50               	goto	u6271
  9864  044F  2C51               	goto	u6270
  9865  0450                     u6271:
  9866  0450  2C58               	goto	l3777
  9867  0451                     u6270:
  9868  0451                     l3775:
  9869                           
  9870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  9871  0451  1683               	bsf	3,5	;RP0=1, select bank1
  9872  0452  1303               	bcf	3,6	;RP1=0, select bank1
  9873  0453  0844               	movf	sprintf@prec^(0+128),w
  9874  0454  00A8               	movwf	??_sprintf^(0+128)
  9875  0455  0828               	movf	??_sprintf^(0+128),w
  9876  0456  00C7               	movwf	sprintf@c^(0+128)
  9877  0457  2C70               	goto	l3781
  9878  0458                     l3777:
  9879  0458  1683               	bsf	3,5	;RP0=1, select bank1
  9880  0459  1303               	bcf	3,6	;RP1=0, select bank1
  9881  045A  0845               	movf	(sprintf@prec+1)^(0+128),w
  9882  045B  3A80               	xorlw	128
  9883  045C  00A8               	movwf	??_sprintf^(0+128)
  9884  045D  3080               	movlw	128
  9885  045E  0228               	subwf	??_sprintf^(0+128),w
  9886  045F  1D03               	skipz
  9887  0460  2C63               	goto	u6285
  9888  0461  0847               	movf	sprintf@c^(0+128),w
  9889  0462  0244               	subwf	sprintf@prec^(0+128),w
  9890  0463                     u6285:
  9891  0463  1803               	skipnc
  9892  0464  2C66               	goto	u6281
  9893  0465  2C67               	goto	u6280
  9894  0466                     u6281:
  9895  0466  2C70               	goto	l3781
  9896  0467                     u6280:
  9897  0467                     l3779:
  9898                           
  9899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  9900  0467  1683               	bsf	3,5	;RP0=1, select bank1
  9901  0468  1303               	bcf	3,6	;RP1=0, select bank1
  9902  0469  0847               	movf	sprintf@c^(0+128),w
  9903  046A  00A8               	movwf	??_sprintf^(0+128)
  9904  046B  01A9               	clrf	(??_sprintf^(0+128)+1)
  9905  046C  0828               	movf	??_sprintf^(0+128),w
  9906  046D  00C4               	movwf	sprintf@prec^(0+128)
  9907  046E  0829               	movf	(??_sprintf+1)^(0+128),w
  9908  046F  00C5               	movwf	(sprintf@prec+1)^(0+128)
  9909  0470                     l3781:
  9910                           
  9911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  9912  0470  1683               	bsf	3,5	;RP0=1, select bank1
  9913  0471  1303               	bcf	3,6	;RP1=0, select bank1
  9914  0472  083E               	movf	sprintf@width^(0+128),w
  9915  0473  043F               	iorwf	(sprintf@width+1)^(0+128),w
  9916  0474  1903               	btfsc	3,2
  9917  0475  2C77               	goto	u6291
  9918  0476  2C78               	goto	u6290
  9919  0477                     u6291:
  9920  0477  2C8A               	goto	l3787
  9921  0478                     u6290:
  9922  0478                     l3783:
  9923  0478  3003               	movlw	3
  9924  0479  053C               	andwf	sprintf@flag^(0+128),w
  9925  047A  00A8               	movwf	??_sprintf^(0+128)
  9926  047B  3000               	movlw	0
  9927  047C  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9928  047D  00A9               	movwf	(??_sprintf+1)^(0+128)
  9929  047E  0828               	movf	??_sprintf^(0+128),w
  9930  047F  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9931  0480  1903               	btfsc	3,2
  9932  0481  2C83               	goto	u6301
  9933  0482  2C84               	goto	u6300
  9934  0483                     u6301:
  9935  0483  2C8A               	goto	l3787
  9936  0484                     u6300:
  9937  0484                     l3785:
  9938                           
  9939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  9940  0484  30FF               	movlw	255
  9941  0485  07BE               	addwf	sprintf@width^(0+128),f
  9942  0486  1803               	skipnc
  9943  0487  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9944  0488  30FF               	movlw	255
  9945  0489  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9946  048A                     l3787:
  9947                           
  9948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  9949  048A  1F3D               	btfss	(sprintf@flag+1)^(0+128),6
  9950  048B  2C8D               	goto	u6311
  9951  048C  2C8E               	goto	u6310
  9952  048D                     u6311:
  9953  048D  2CA9               	goto	l3795
  9954  048E                     u6310:
  9955  048E                     l3789:
  9956                           
  9957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  9958  048E  0845               	movf	(sprintf@prec+1)^(0+128),w
  9959  048F  3A80               	xorlw	128
  9960  0490  00A8               	movwf	??_sprintf^(0+128)
  9961  0491  083F               	movf	(sprintf@width+1)^(0+128),w
  9962  0492  3A80               	xorlw	128
  9963  0493  0228               	subwf	??_sprintf^(0+128),w
  9964  0494  1D03               	skipz
  9965  0495  2C98               	goto	u6325
  9966  0496  083E               	movf	sprintf@width^(0+128),w
  9967  0497  0244               	subwf	sprintf@prec^(0+128),w
  9968  0498                     u6325:
  9969  0498  1803               	skipnc
  9970  0499  2C9B               	goto	u6321
  9971  049A  2C9C               	goto	u6320
  9972  049B                     u6321:
  9973  049B  2CA5               	goto	l3793
  9974  049C                     u6320:
  9975  049C                     l3791:
  9976                           
  9977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  9978  049C  1683               	bsf	3,5	;RP0=1, select bank1
  9979  049D  1303               	bcf	3,6	;RP1=0, select bank1
  9980  049E  0844               	movf	sprintf@prec^(0+128),w
  9981  049F  02BE               	subwf	sprintf@width^(0+128),f
  9982  04A0  0845               	movf	(sprintf@prec+1)^(0+128),w
  9983  04A1  1C03               	skipc
  9984  04A2  03BF               	decf	(sprintf@width+1)^(0+128),f
  9985  04A3  02BF               	subwf	(sprintf@width+1)^(0+128),f
  9986  04A4  2CA9               	goto	l3795
  9987  04A5                     l3793:
  9988                           
  9989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  9990  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  9991  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  9992  04A7  01BE               	clrf	sprintf@width^(0+128)
  9993  04A8  01BF               	clrf	(sprintf@width+1)^(0+128)
  9994  04A9                     l3795:
  9995                           
  9996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  9997  04A9  083F               	movf	(sprintf@width+1)^(0+128),w
  9998  04AA  3A80               	xorlw	128
  9999  04AB  3C80               	sublw	128
 10000  04AC  1D03               	skipz
 10001  04AD  2CB0               	goto	u6335
 10002  04AE  083E               	movf	sprintf@width^(0+128),w
 10003  04AF  0247               	subwf	sprintf@c^(0+128),w
 10004  04B0                     u6335:
 10005  04B0  1803               	skipnc
 10006  04B1  2CB3               	goto	u6331
 10007  04B2  2CB4               	goto	u6330
 10008  04B3                     u6331:
 10009  04B3  2CC0               	goto	l3799
 10010  04B4                     u6330:
 10011  04B4                     l3797:
 10012                           
 10013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10014  04B4  1683               	bsf	3,5	;RP0=1, select bank1
 10015  04B5  1303               	bcf	3,6	;RP1=0, select bank1
 10016  04B6  0847               	movf	sprintf@c^(0+128),w
 10017  04B7  00A8               	movwf	??_sprintf^(0+128)
 10018  04B8  01A9               	clrf	(??_sprintf^(0+128)+1)
 10019  04B9  0828               	movf	??_sprintf^(0+128),w
 10020  04BA  02BE               	subwf	sprintf@width^(0+128),f
 10021  04BB  0829               	movf	(??_sprintf+1)^(0+128),w
 10022  04BC  1C03               	skipc
 10023  04BD  03BF               	decf	(sprintf@width+1)^(0+128),f
 10024  04BE  02BF               	subwf	(sprintf@width+1)^(0+128),f
 10025  04BF  2CC4               	goto	l3801
 10026  04C0                     l3799:
 10027                           
 10028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10029  04C0  1683               	bsf	3,5	;RP0=1, select bank1
 10030  04C1  1303               	bcf	3,6	;RP1=0, select bank1
 10031  04C2  01BE               	clrf	sprintf@width^(0+128)
 10032  04C3  01BF               	clrf	(sprintf@width+1)^(0+128)
 10033  04C4                     l3801:
 10034                           
 10035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
 10036  04C4  1D3C               	btfss	sprintf@flag^(0+128),2
 10037  04C5  2CC7               	goto	u6341
 10038  04C6  2CC8               	goto	u6340
 10039  04C7                     u6341:
 10040  04C7  2CFD               	goto	l3817
 10041  04C8                     u6340:
 10042  04C8                     l3803:
 10043                           
 10044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
 10045  04C8  3003               	movlw	3
 10046  04C9  053C               	andwf	sprintf@flag^(0+128),w
 10047  04CA  00A8               	movwf	??_sprintf^(0+128)
 10048  04CB  3000               	movlw	0
 10049  04CC  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10050  04CD  00A9               	movwf	(??_sprintf+1)^(0+128)
 10051  04CE  0828               	movf	??_sprintf^(0+128),w
 10052  04CF  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10053  04D0  1903               	btfsc	3,2
 10054  04D1  2CD3               	goto	u6351
 10055  04D2  2CD4               	goto	u6350
 10056  04D3                     u6351:
 10057  04D3  2CDF               	goto	l3809
 10058  04D4                     u6350:
 10059  04D4                     l3805:
 10060                           
 10061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
 10062  04D4  302D               	movlw	45
 10063  04D5  00A8               	movwf	??_sprintf^(0+128)
 10064  04D6  0846               	movf	sprintf@sp^(0+128),w
 10065  04D7  0084               	movwf	4
 10066  04D8  0828               	movf	??_sprintf^(0+128),w
 10067  04D9  1383               	bcf	3,7	;select IRP bank0
 10068  04DA  0080               	movwf	0
 10069  04DB                     l3807:
 10070  04DB  3001               	movlw	1
 10071  04DC  00A8               	movwf	??_sprintf^(0+128)
 10072  04DD  0828               	movf	??_sprintf^(0+128),w
 10073  04DE  07C6               	addwf	sprintf@sp^(0+128),f
 10074  04DF                     l3809:
 10075                           
 10076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
 10077  04DF  083E               	movf	sprintf@width^(0+128),w
 10078  04E0  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10079  04E1  1903               	btfsc	3,2
 10080  04E2  2CE4               	goto	u6361
 10081  04E3  2CE5               	goto	u6360
 10082  04E4                     u6361:
 10083  04E4  2D30               	goto	l3831
 10084  04E5                     u6360:
 10085  04E5                     l3811:
 10086                           
 10087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
 10088  04E5  3030               	movlw	48
 10089  04E6  00A8               	movwf	??_sprintf^(0+128)
 10090  04E7  0846               	movf	sprintf@sp^(0+128),w
 10091  04E8  0084               	movwf	4
 10092  04E9  0828               	movf	??_sprintf^(0+128),w
 10093  04EA  1383               	bcf	3,7	;select IRP bank0
 10094  04EB  0080               	movwf	0
 10095  04EC                     l3813:
 10096  04EC  3001               	movlw	1
 10097  04ED  00A8               	movwf	??_sprintf^(0+128)
 10098  04EE  0828               	movf	??_sprintf^(0+128),w
 10099  04EF  07C6               	addwf	sprintf@sp^(0+128),f
 10100  04F0                     l3815:
 10101  04F0  30FF               	movlw	255
 10102  04F1  07BE               	addwf	sprintf@width^(0+128),f
 10103  04F2  1803               	skipnc
 10104  04F3  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10105  04F4  30FF               	movlw	255
 10106  04F5  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10107  04F6  083E               	movf	sprintf@width^(0+128),w
 10108  04F7  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10109  04F8  1D03               	btfss	3,2
 10110  04F9  2CFB               	goto	u6371
 10111  04FA  2CFC               	goto	u6370
 10112  04FB                     u6371:
 10113  04FB  2CE5               	goto	l3811
 10114  04FC                     u6370:
 10115  04FC  2D30               	goto	l3831
 10116  04FD                     l3817:
 10117                           
 10118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10119  04FD  083E               	movf	sprintf@width^(0+128),w
 10120  04FE  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10121  04FF  1903               	btfsc	3,2
 10122  0500  2D02               	goto	u6381
 10123  0501  2D03               	goto	u6380
 10124  0502                     u6381:
 10125  0502  2D1A               	goto	l3825
 10126  0503                     u6380:
 10127  0503                     l3819:
 10128                           
 10129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10130  0503  3020               	movlw	32
 10131  0504  00A8               	movwf	??_sprintf^(0+128)
 10132  0505  0846               	movf	sprintf@sp^(0+128),w
 10133  0506  0084               	movwf	4
 10134  0507  0828               	movf	??_sprintf^(0+128),w
 10135  0508  1383               	bcf	3,7	;select IRP bank0
 10136  0509  0080               	movwf	0
 10137  050A                     l3821:
 10138  050A  3001               	movlw	1
 10139  050B  00A8               	movwf	??_sprintf^(0+128)
 10140  050C  0828               	movf	??_sprintf^(0+128),w
 10141  050D  07C6               	addwf	sprintf@sp^(0+128),f
 10142  050E                     l3823:
 10143  050E  30FF               	movlw	255
 10144  050F  07BE               	addwf	sprintf@width^(0+128),f
 10145  0510  1803               	skipnc
 10146  0511  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10147  0512  30FF               	movlw	255
 10148  0513  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10149  0514  083E               	movf	sprintf@width^(0+128),w
 10150  0515  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10151  0516  1D03               	btfss	3,2
 10152  0517  2D19               	goto	u6391
 10153  0518  2D1A               	goto	u6390
 10154  0519                     u6391:
 10155  0519  2D03               	goto	l3819
 10156  051A                     u6390:
 10157  051A                     l3825:
 10158                           
 10159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10160  051A  3003               	movlw	3
 10161  051B  053C               	andwf	sprintf@flag^(0+128),w
 10162  051C  00A8               	movwf	??_sprintf^(0+128)
 10163  051D  3000               	movlw	0
 10164  051E  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10165  051F  00A9               	movwf	(??_sprintf+1)^(0+128)
 10166  0520  0828               	movf	??_sprintf^(0+128),w
 10167  0521  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10168  0522  1903               	btfsc	3,2
 10169  0523  2D25               	goto	u6401
 10170  0524  2D26               	goto	u6400
 10171  0525                     u6401:
 10172  0525  2D30               	goto	l3831
 10173  0526                     u6400:
 10174  0526                     l3827:
 10175                           
 10176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10177  0526  302D               	movlw	45
 10178  0527  00A8               	movwf	??_sprintf^(0+128)
 10179  0528  0846               	movf	sprintf@sp^(0+128),w
 10180  0529  0084               	movwf	4
 10181  052A  0828               	movf	??_sprintf^(0+128),w
 10182  052B  1383               	bcf	3,7	;select IRP bank0
 10183  052C  0080               	movwf	0
 10184  052D  160A  118A  2D14   	goto	l3549
 10185  0530                     l3831:
 10186                           
 10187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10188  0530  3001               	movlw	1
 10189  0531  1283               	bcf	3,5	;RP0=0, select bank0
 10190  0532  1303               	bcf	3,6	;RP1=0, select bank0
 10191  0533  07EA               	addwf	sprintf@f,f
 10192  0534  30FF               	movlw	-1
 10193  0535  076A               	addwf	sprintf@f,w
 10194  0536  0084               	movwf	4
 10195  0537  160A  158A  2000  120A  118A  	fcall	stringdir
 10196  053C  1683               	bsf	3,5	;RP0=1, select bank1
 10197  053D  1303               	bcf	3,6	;RP1=0, select bank1
 10198  053E  00A8               	movwf	??_sprintf^(0+128)
 10199  053F  0828               	movf	??_sprintf^(0+128),w
 10200  0540  00C7               	movwf	sprintf@c^(0+128)
 10201  0541  0847               	movf	sprintf@c^(0+128),w
 10202  0542  1D03               	btfss	3,2
 10203  0543  2D45               	goto	u6411
 10204  0544  2D48               	goto	u6410
 10205  0545                     u6411:
 10206  0545  160A  118A  2D07   	goto	l3545
 10207  0548                     u6410:
 10208  0548                     l3833:
 10209                           
 10210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10211  0548  0846               	movf	sprintf@sp^(0+128),w
 10212  0549  0084               	movwf	4
 10213  054A  1383               	bcf	3,7	;select IRP bank0
 10214  054B  0180               	clrf	0
 10215  054C                     l332:
 10216  054C  0008               	return
 10217  054D                     __end_of_sprintf:

Data Sizes:
    Strings     10
    Constant    144
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     79      79
    BANK1            80     43      66
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> f1(BANK1[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 15
		 -> f1(BANK1[15]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    _send_crct->_send_char
    _conv->___xxtofl

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   35679
                                             40 BANK1      3     3      0
                            ___awdiv
                            _cfg_clk
                             _cfg_io
                          _cfg_usart
                               _conv
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   33423
                                             74 BANK0      5     0      5
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6139
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              3 COMMON     4     4      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                 8     4      4     595
                                              6 BANK0      8     4      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   _cfg_clk
   _cfg_io
   _cfg_usart
   _conv
     ___xxtofl
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2B      42       7       82.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 23 21:53:45 2021

                      _D 00CF                        _V 00D1                        _i 007B  
                      _v 00CB                        pc 0002                       l90 089F  
                     l91 0925                       l85 0896                       l87 089A  
                     l88 089B                       l98 1CD0                       _f1 00D3  
           ___awdiv@sign 0025                       fsr 0004      ___wmul@multiplicand 0074  
    __Umul8_16@word_mpld 0078                      l101 1CAC                      l113 1D03  
                    l122 1D27                      l107 1014                      l116 1CB6  
                    l119 1CBE                      l231 0FFF                      l311 0446  
                    l303 02DF                      l224 14FC                      l332 054C  
                    l244 151E                      l510 12B2                      l502 1F1B  
                    l336 1D34                      l522 1DEB                      l530 109F  
                    l338 1D4C                      l506 12EF                      l523 1E07  
                    l531 10B8                      l507 1254                      l259 15F9  
                    l524 1E1C                      l372 1F83                      l517 12E2  
                    l527 1033                      l535 080E                      l296 0299  
                    l705 07C8                      l553 1231                      l706 07D4  
                    l546 1FEA                      l554 11A3                      l642 1DCC  
                    l803 10DD                      l539 1FFF                      l564 1224  
                    l652 1D86                      l805 1174                      l709 1E6C  
                    l549 1FFF                      l557 11F4                      l663 05B0  
                    l823 1CE2                      l816 113E                      l592 1EC2  
                    l817 114A                      l809 1122                      l489 0877  
                    l667 0657                      l771 0C90                      l684 0722  
                    l676 07D4                      l780 07FB                      l669 062E  
                    l765 0C08                      l694 0768                      l759 0C9C  
                    l688 0746                      l697 07A6                      l778 07E9  
                    _RA1 0029                      _isr 1C9E                      fsr0 0004  
                    indf 0000             ___awmod@sign 0078             ___flmul@aexp 003A  
           ___flmul@bexp 003B             ___flmul@sign 0035             ___flmul@temp 0040  
           ___flmul@prod 003C             ___fltol@exp1 005F                     l3001 10D5  
                   l2201 07D8                     l3011 1100                     l3003 10E5  
                   l2203 07DF                     l3021 1134                     l3013 1107  
                   l2205 07E3                     l2221 081D                     l2213 080F  
                   l3031 1167                     l3023 1138                     l3015 110B  
                   l3007 10EE                     l2207 07F2                     l2231 0832  
                   l2223 0821                     l2215 0812                     l3041 1CC3  
                   l3033 116B                     l3025 1142                     l3017 1119  
                   l3009 10F3                     l2401 05D2                     l2209 07F7  
                   l2321 1D4D                     l2241 0855                     l2233 0835  
                   l2225 0826                     l2217 0816                     l3043 1CC6  
                   l3051 100B                     l3035 116C                     l3027 114C  
                   l3019 1129                     l2411 05E6                     l2403 05D6  
                   l2331 1D65                     l2323 1D53                     l2251 086E  
                   l2243 085B                     l2235 083C                     l2227 082A  
                   l2219 081B                     l3061 1CA5                     l3045 1CC7  
                   l3053 100C                     l3029 1162                     l2501 075B  
                   l2413 05EA                     l2405 05DA                     l2421 05FA  
                   l2333 1D6F                     l2325 1D56                     l2253 0873  
                   l2245 085C                     l2237 0840                     l2229 082C  
                   l2261 1EC8                     l3063 1CAB                     l3039 1CBF  
                   l3055 100F                     l3047 1000                     l2511 0772  
                   l2503 075F                     l2431 063D                     l2423 05FB  
                   l2415 05EE                     l2407 05DE                     l2351 055F  
                   l2343 054D                     l2335 1D75                     l2327 1D5D  
                   l2247 0863                     l2239 0844                     l2271 1EDE  
                   l2263 1ECD                     l3057 1010                     l3049 1007  
                   l3065 1D04                     l2521 07B0                     l2513 0780  
                   l2505 0765                     l2441 065B                     l2433 0641  
                   l2425 0612                     l2417 05F2                     l2409 05E2  
                   l2353 0564                     l2361 0574                     l2345 0554  
                   l2601 0A99                     l2337 1D7C                     l2329 1D61  
                   l2249 0869                     l2281 1EFA                     l2273 1EE1  
                   l2265 1ECF                     l2257 1EC3                     l3059 1011  
                   l3067 1D1F                     l2531 07C4                     l2523 07B8  
                   l2515 0784                     l2451 0684                     l2443 0660  
                   l2435 0642                     l2427 0632                     l2419 05F6  
                   l2371 058E                     l2363 057C                     l2355 0569  
                   l2347 055A                     l2611 0B29                     l2603 0AA9  
                   l2339 1D82                     l2291 1F17                     l2283 1F00  
                   l2275 1EE8                     l2267 1ED3                     l2259 1EC4  
                   l2533 07CF                     l2525 07BD                     l2517 07A2  
                   l2509 076D                     l2461 0698                     l2453 0688  
                   l2437 064B                     l2429 063B                     l2381 05A5  
                   l2373 0592                     l2365 0581                     l2357 0571  
                   l2349 055E                     l2621 0BBD                     l2613 0B39  
                   l2605 0AC6                     l2541 0949                     l3501 1DC8  
                   l2285 1F07                     l2277 1EEC                     l2269 1ED8  
                   l2701 0CA4                     l2535 07D3                     l2527 07BE  
                   l2519 07AB                     l2471 0700                     l2463 06A1  
                   l2455 0691                     l2447 0669                     l2439 064F  
                   l2391 05BE                     l2383 05A6                     l2375 0593  
                   l2367 0587                     l2359 0572                     l2199 07D6  
                   l2631 0BE2                     l2623 0BCB                     l2615 0B66  
                   l2607 0ADF                     l2551 0960                     l2543 094D  
                   l2279 1EF0                     l2287 1F0D                     l2711 0D97  
                   l2703 0CA6                     l2529 07C2                     l2473 0705  
                   l2457 0693                     l2449 0680                     l2465 06A6  
                   l2393 05C2                     l2377 0598                     l2385 05A8  
                   l2369 0588                     l2641 0C05                     l2625 0BD4  
                   l2633 0BE8                     l2617 0B8C                     l2609 0AFC  
                   l2561 0979                     l2553 0962                     l2545 094E  
                   l2537 093C                     l3513 1408                     l3505 12F3  
                   l2289 1F12                     l2713 0D9E                     l2705 0CAD  
                   l2721 0E53                     l3601 162F                     l2491 074D  
                   l2483 0738                     l2467 06BC                     l2475 0714  
                   l2459 0697                     l2395 05C6                     l2387 05B6  
                   l2379 059D                     l3531 1E8B                     l3523 1E6D  
                   l2803 1232                     l2651 0C24                     l2635 0BEC  
                   l2627 0BD8                     l2619 0BB4                     l2571 098E  
                   l2563 097A                     l2555 096A                     l2547 0953  
                   l2539 0943                     l3515 140E                     l3507 12F9  
                   l2731 0F4B                     l2723 0E5A                     l3611 1677  
                   l3603 163D                     l3381 1CF2                     l2901 1E1B  
                   l2493 074F                     l2485 0741                     l2477 072A  
                   l2469 06FA                     l2397 05CA                     l2389 05BA  
                   l3533 1E9D                     l3525 1E75                     l2821 1270  
                   l2805 123F                     l2661 0C6A                     l2653 0C3D  
                   l2645 0C0D                     l2637 0BED                     l2629 0BD9  
                   l2581 09A9                     l2573 0996                     l2565 097F  
                   l2557 096F                     l2549 0958                     l2741 1CD3  
                   l2717 0E26                     l3701 01E1                     l3621 16B8  
                   l3613 167B                     l3605 1641                     l3383 1CF8  
                   l2911 104F                     l2495 0754                     l2487 0745  
                   l2479 072F                     l2399 05CE                     l3535 1EAB  
                   l3527 1E7A                     l2831 12A3                     l2823 1279  
                   l2815 1255                     l2751 1175                     l2671 0C89  
                   l2663 0C74                     l2647 0C12                     l2655 0C43  
                   l2639 0BF1                     l2591 0A2B                     l2583 09B9  
                   l2575 099B                     l2567 0984                     l2559 0975  
                   l3519 14B9                     l2743 1CD9                     l2735 0FD3  
                   l3711 0206                     l3703 01E5                     l3631 174F  
                   l3623 16DB                     l3615 1694                     l3607 165A  
                   l3551 1519                     l3543 1500                     l3377 1CE4  
                   l2921 10B7                     l2913 1053                     l2905 1015  
                   l2489 074A                     l2497 0756                     l3537 1EB4  
                   l3529 1E87                     l2841 12BE                     l2833 12AC  
                   l2825 1282                     l2817 125D                     l2809 1248  
                   l2753 1188                     l2673 0C94                     l2665 0C76  
                   l2657 0C50                     l2649 0C20                     l2593 0A47  
                   l2585 09C6                     l2577 09A0                     l2569 098C  
                   l3481 1D8B                     l2745 1CDF                     l2729 0F44  
                   l3801 04C4                     l3721 0233                     l3705 01EB  
                   l3713 020C                     l3641 17A3                     l3633 1768  
                   l3625 16DF                     l3617 169F                     l3609 1673  
                   l3561 154D                     l3553 151F                     l3545 1507  
                   l3379 1CE7                     l2915 1077                     l2907 102B  
                   l2499 075A                     l3539 1EBA                     l2851 12E7  
                   l2835 12B6                     l2843 12D0                     l2827 1294  
                   l2819 126E                     l2771 11C4                     l2763 11A4  
                   l2667 0C84                     l2659 0C5B                     l2595 0A63  
                   l2587 09E3                     l3491 1DA3                     l3483 1D91  
                   l2747 1CE1                     l2739 1CD2                     l3811 04E5  
                   l3803 04C8                     l3731 02B0                     l3723 026E  
                   l3715 0219                     l3707 01F9                     l3651 006E  
                   l3643 17EA                     l3635 1771                     l3627 16E5  
                   l3619 16A5                     l3563 1551                     l3571 1593  
                   l3547 150D                     l2677 1CB6                     l2917 107B  
                   l2909 1047                     l2925 0804                     l2941 1FAF  
                   l2933 1F84                     l2861 1D3B                     l2829 12A2  
                   l2781 11EE                     l2773 11CD                     l2765 11AA  
                   l2757 1191                     l2669 0C88                     l2597 0A6C  
                   l2589 09FF                     l3493 1DB4                     l3485 1D94  
                   l3821 050A                     l3813 04EC                     l3805 04D4  
                   l3741 02E8                     l3733 02B6                     l3725 028D  
                   l3717 0227                     l3709 0202                     l3653 0089  
                   l3645 001D                     l3637 178C                     l3629 1704  
                   l3581 15C4                     l3573 15A1                     l3565 1566  
                   l3557 1525                     l3549 1514                     l2679 1CBC  
                   l2919 10B5                     l2927 080C                     l2943 1FB0  
                   l2935 1F91                     l2871 1F2E                     l2863 1D42  
                   l2855 1D28                     l2783 11F8                     l2791 1212  
                   l2775 11DB                     l2767 11B9                     l2599 0A7C  
                   l3495 1DBA                     l3487 1D9B                     l3479 1D87  
                   l3823 050E                     l3815 04F0                     l3807 04DB  
                   l3751 0371                     l3743 02ED                     l3735 02C3  
                   l3727 02A3                     l3719 022E                     l3671 0146  
                   l3663 00D7                     l3655 0092                     l3647 0038  
                   l3639 1794                     l3583 15DB                     l3575 15A4  
                   l3567 157D                     l3559 153B                     l3831 0530  
                   l2929 080E                     l2945 1FB8                     l2881 1F5D  
                   l2873 1F31                     l2865 1D48                     l2857 1D2A  
                   l2849 12D7                     l2777 11E5                     l2769 11BB  
                   l3497 1DBB                     l3489 1D9F                     l3825 051A  
                   l3809 04DF                     l3817 04FD                     l3761 041A  
                   l3753 03AC                     l3745 02F4                     l3737 02D2  
                   l3729 02AC                     l3681 017F                     l3657 009A  
                   l3649 005F                     l3665 00E0                     l3833 0548  
                   l3593 15FB                     l3585 15E1                     l3577 15AA  
                   l3569 1583                     l2963 1FDF                     l2955 1FC6  
                   l2947 1FBA                     l2939 1F9A                     l2883 1F6B  
                   l2875 1F3E                     l2859 1D2E                     l2779 11E6  
                   l3499 1DC2                     l2699 0CA0                     l3827 0526  
                   l3819 0503                     l3771 0438                     l3763 0421  
                   l3755 03CB                     l3747 02F8                     l3739 02D9  
                   l3691 01BC                     l3683 0189                     l3667 0115  
                   l3659 00B8                     l3595 1619                     l3579 15AF  
                   l3587 15F3                     l3851 087D                     l2893 1DCD  
                   l2965 1FEF                     l2949 1FBE                     l2957 1FD8  
                   l2885 1F6C                     l2877 1F42                     l2869 1F1C  
                   l2797 1219                     l2789 1200                     l3781 0470  
                   l3773 0440                     l3765 0425                     l3757 03D7  
                   l3749 0316                     l3693 01C0                     l3685 01A4  
                   l3677 0148                     l3669 0144                     l3597 1627  
                   l3589 15F7                     l3861 088C                     l3853 0882  
                   l2895 1DE3                     l2991 1E21                     l2967 1FF4  
                   l2887 1F75                     l2879 1F4B                     l2799 1229  
                   l3791 049C                     l3783 0478                     l3775 0451  
                   l3767 042B                     l3759 0412                     l3695 01CC  
                   l3687 01AA                     l3599 162B                     l3943 1536  
                   l3871 08F4                     l3863 0893                     l3855 0887  
                   l2897 1DFF                     l2889 1F7B                     l3793 04A5  
                   l3785 0484                     l3777 0458                     l3697 01D3  
                   l3689 01B6                     l3769 0432                     l3945 1611  
                   l3881 092A                     l3873 0918                     l3865 08A0  
                   l3857 088A                     l3849 0878                     l2995 10BC  
                   l2899 1E19                     l3795 04A9                     l3787 048A  
                   l3779 0467                     l3699 01D8                     l3875 091E  
                   l3867 08AA                     l3859 088B                     l2997 10C1  
                   l2989 1E1D                     l3797 04B4                     l3789 048E  
                   l3877 0924                     l3869 08CD                     l2999 10C5  
                   l3799 04C0                     l3879 0929                     ?_isr 0070  
                   STR_1 1896                     u3010 1EF0                     u3011 1EEF  
                   u3020 1EFA                     u3021 1EF9                     u3005 1EE2  
                   u3200 0564                     u4000 0C6A                     u3040 1F0D  
                   u3201 0563                     u4001 0C69                     u3041 1F0C  
                   u3025 1EF6                     u3210 0569                     u4010 0C88  
                   u3130 1D53                     u3050 1F12                     u3211 0568  
                   u4011 0C87                     u3131 1D52                     u3051 1F11  
                   u3035 1F01                     u4020 1CBC                     u3300 061E  
                   u3220 0587                     u4021 1CBB                     u3221 0586  
                   u4005 0C66                     u3310 0632                     u3230 0592  
                   u3150 1D65                     u4110 0CA4                     u3311 0631  
                   u3231 0591                     u3151 1D64                     u4111 0CA3  
                   u5000 1128                     u3400 0697                     u3320 0641  
                   u3240 0598                     u3160 1D6F                     u4200 0E5A  
                   u4120 0CAD                     u5001 1127                     u3401 0696  
                   u3321 0640                     u3241 0597                     u3161 1D6E  
                   u3145 1D57                     u4201 0E59                     u4121 0CAC  
                   u3250 059D                     u3251 059C                     u5020 1138  
                   u3500 074A                     u3420 06BC                     u3340 0657  
                   u3260 05B6                     u4300 1188                     u3180 1D82  
                   u5021 1137                     u3501 0749                     u3421 06BB  
                   u3341 0656                     u3261 05B5                     u4301 1187  
                   u3181 1D81                     u3165 1D6B                     u5030 113E  
                   u3510 0754                     u3350 065B                     u3270 05BA  
                   u3190 055E                     u4310 11A2                     u5031 113D  
                   u5015 112D                     u3511 0753                     u3431 06D3  
                   u3423 06B8                     u3415 069A                     u3351 065A  
                   u3335 0644                     u3271 05B9                     u3191 055D  
                   u4311 11A1                     u3175 1D76                     u4215 0E7C  
                   u4135 0CCF                     u5040 1142                     u3600 07AB  
                   u3520 075A                     u3440 06E7                     u3432 06D4  
                   u3360 0660                     u3280 0612                     u4400 1218  
                   u4240 0F4B                     u4160 0D9E                     u6000 17A3  
                   u5041 1141                     u3601 07AA                     u3521 0759  
                   u3441 06E8                     u3433 06D9                     u3361 065F  
                   u3281 0611                     u4401 1217                     u4241 0F4A  
                   u4225 0EB8                     u4161 0D9D                     u4145 0D0B  
                   u6001 17A2                     u5050 1157                     u3610 07B0  
                   u3530 075F                     u3450 0705                     u3442 06ED  
                   u3434 06DA                     u3290 061D                     u4330 11DB  
                   u6010 001D                     u3611 07AF                     u3531 075E  
                   u3451 0704                     u3443 06EE                     u3435 06DF  
                   u3371 0672                     u3291 061B                     u4331 11DA  
                   u4235 0F03                     u4155 0D56                     u6011 17FA  
                   u5060 1167                     u3620 07BD                     u3540 0765  
                   u3460 072A                     u3436 06E0                     u3380 0684  
                   u3372 0679                     u4500 12BD                     u4420 1229  
                   u3700 0984                     u6100 01B6                     u6020 0038  
                   u5061 1166                     u3621 07BC                     u3541 0764  
                   u3461 0729                     u3381 0683                     u3373 0680  
                   u3285 060E                     u4501 12BC                     u4421 1228  
                   u4325 11C6                     u3701 0983                     u6101 01B5  
                   u6021 0037                     u6005 179F                     u5070 116B  
                   u3630 07C2                     u3550 076C                     u3470 072F  
                   u3390 0688                     u4430 123F                     u4350 11F4  
                   u3710 099B                     u2910 0844                     u6110 01C0  
                   u6030 005F                     u5071 116A                     u5055 1152  
                   u3631 07C1                     u3551 076B                     u3471 072E  
                   u3391 0687                     u4431 123E                     u4415 121B  
                   u4351 11F3                     u4335 11D7                     u3711 099A  
                   u2911 0843                     u4255 0F5E                     u4175 0DB1  
                   u6111 01BF                     u6031 005E                     u6015 17F5  
                   u3640 07D3                     u3560 0772                     u4600 1F2E  
                   u4520 12CF                     u4440 1253                     u4360 11F8  
                   u2840 07E3                     u3720 09A0                     u4280 1CD9  
                   u6200 02ED                     u6120 01CC                     u6040 006E  
                   u3641 07D2                     u3561 0771                     u4601 1F2D  
                   u4521 12CE                     u4441 1252                     u4361 11F7  
                   u4345 11E7                     u2841 07E2                     u3721 099F  
                   u4281 1CD8                     u2905 0836                     u4265 0F9A  
                   u4185 0DED                     u6201 02EC                     u6121 01CB  
                   u6041 006D                     u3570 0784                     u3490 0745  
                   u4530 12D6                     u4370 11FF                     u3650 094D  
                   u4290 1CDF                     u2930 0855                     u6130 01F8  
                   u6050 0089                     u3571 0783                     u3491 0744  
                   u4531 12D5                     u4515 12BF                     u4371 11FE  
                   u3811 0AEE                     u3731 09F1                     u3651 094C  
                   u4291 1CDE                     u2931 0854                     u4275 0FD6  
                   u4195 0E29                     u6131 01F7                     u6051 0088  
                   u4700 102B                     u3580 0793                     u4620 1F42  
                   u4460 1294                     u2860 07F7                     u3900 0BD8  
                   u3812 0AF5                     u3732 09F8                     u3660 0953  
                   u6300 0484                     u6140 0219                     u4701 102A  
                   u3485 073A                     u4621 1F41                     u4461 1293  
                   u2861 07F6                     u3901 0BD7                     u3821 0B1B  
                   u3813 0AFC                     u3805 0AC8                     u3741 0A0D  
                   u3733 09FF                     u3661 0952                     u2925 0845  
                   u6301 0483                     u6141 0218                     u6045 006A  
                   u4710 1047                     u3590 07A2                     u4550 12E7  
                   u4390 1211                     u3822 0B22                     u3742 0A14  
                   u3670 0958                     u2950 0869                     u2870 0816  
                   u6310 048E                     u6230 0419                     u6150 0227  
                   u6070 017E                     u4711 1046                     u3591 07A1  
                   u4615 1F33                     u4551 12E6                     u4455 127B  
                   u4391 1210                     u2855 07EA                     u3831 0B48  
                   u3823 0B29                     u3751 0A39                     u3743 0A1B  
                   u3671 0957                     u2951 0868                     u2935 0851  
                   u2871 0815                     u6311 048D                     u6231 0418  
                   u6215 0374                     u6151 0226                     u6135 01F4  
                   u6071 017D                     u4720 1053                     u4800 1FBE  
                   u4640 1F5D                     u4560 1D2E                     u4480 12B2  
                   u3920 0BEC                     u3840 0B72                     u3832 0B4F  
                   u3752 0A40                     u3680 0979                     u2960 086E  
                   u2880 0821                     u6400 0526                     u6320 049C  
                   u6240 0431                     u6080 0189                     u4721 1052  
                   u3585 078E                     u4801 1FBD                     u4641 1F5C  
                   u4561 1D2D                     u4545 12D9                     u4481 12B1  
                   u4465 1290                     u4385 1201                     u3921 0BEB  
                   u3833 0B56                     u3761 0A55                     u3753 0A47  
                   u3681 0978                     u2961 086D                     u2945 085D  
                   u2881 0820                     u6401 0525                     u6321 049B  
                   u6241 0430                     u6225 03DA                     u6145 0215  
                   u6081 0188                     u6065 014B                     u4810 1FC5  
                   u4490 12B6                     u3930 0BF1                     u3762 0A5C  
                   u3690 097F                     u2890 0832                     u2970 1EC8  
                   u6410 0548                     u6330 04B4                     u6250 0438  
                   u6170 02A2                     u6090 01A4                     u4731 1062  
                   u4811 1FC4                     u4635 1F44                     u4491 12B5  
                   u4475 12A5                     u3931 0BF0                     u3915 0BDB  
                   u3851 0B7E                     u3763 0A63                     u3691 097E  
                   u2891 0831                     u2971 1EC7                     u6411 0545  
                   u6331 04B3                     u6251 0437                     u6171 02A1  
                   u6091 01A3                     u6075 017A                     u5620 1D03  
                   u4740 107B                     u4732 1063                     u4660 1F7B  
                   u3940 0C05                     u3860 0B9A                     u3852 0B85  
                   u2980 1ED3                     u6340 04C8                     u6260 0440  
                   u6180 02C3                     u6420 089A                     u5621 1D02  
                   u4741 107A                     u4733 1068                     u4661 1F7A  
                   u4645 1F59                     u3941 0C04                     u3853 0B8C  
                   u3845 0B6D                     u3781 0A8B                     u2981 1ED2  
                   u6341 04C7                     u6325 0498                     u6261 043F  
                   u6181 02C2                     u6165 0236                     u6421 0899  
                   u4670 1DE3                     u4734 1069                     u4830 1FD7  
                   u4590 1D48                     u3950 0C0C                     u3782 0A92  
                   u5710 1DB4                     u2990 1EDE                     u6350 04D4  
                   u6270 0451                     u6190 02D2                     u6430 089F  
                   u4671 1DE2                     u4751 108A                     u4735 106E  
                   u4831 1FD6                     u4655 1F6D                     u4591 1D47  
                   u4575 1D35                     u3951 0C0B                     u3871 0BA6  
                   u3791 0AB8                     u3783 0A99                     u3775 0A65  
                   u5711 1DB3                     u2991 1EDD                     u6351 04D3  
                   u6335 04B0                     u6271 0450                     u6191 02D1  
                   u6431 089E                     u4680 1DFF                     u4760 10B5  
                   u4752 108B                     u4736 106F                     u4840 1FDE  
                   u3960 0C12                     u3872 0BAD                     u3792 0ABF  
                   u6360 04E5                     u6280 0467                     u6440 0924  
                   u4681 1DFE                     u4761 10B4                     u4753 1090  
                   u4841 1FDD                     u4825 1FC7                     u4585 1D3C  
                   u3961 0C11                     u3873 0BB4                     u3865 0B95  
                   u3793 0AC6                     u5705 1DA4                     u6361 04E4  
                   u6281 0466                     u6185 02BF                     u6441 0923  
                   u4690 1E19                     u4754 1091                     u4770 080C  
                   u3970 0C24                     u5730 1DC8                     u6370 04FC  
                   u6290 0478                     u6450 0929                     u4691 1E18  
                   u4755 1096                     u4771 080B                     u3971 0C23  
                   u5731 1DC7                     u5715 1DB0                     u6371 04FB  
                   u6291 0477                     u6275 044D                     u6195 02CE  
                   u6451 0928                     u4940 10C1                     u4756 1097  
                   u4860 1FEF                     u4780 1F91                     u5820 1E75  
                   u3980 0C33                     u5740 12F9                     u6380 0503  
                   u5900 1593                     u4941 10C0                     u4765 10B1  
                   u4861 1FEE                     u4781 1F90                     u5821 1E74  
                   u3885 0BB6                     u5725 1DBC                     u5805 1478  
                   u5741 12F8                     u6381 0502                     u6285 0463  
                   u5901 1592                     u4950 10C5                     u4870 1FF4  
                   u4790 1FA8                     u3990 0C50                     u5670 1D91  
                   u6390 051A                     u5910 15A1                     i1l79 1C9E  
                   u4951 10C4                     u4695 1E15                     u4871 1FF3  
                   u4855 1FE1                     u3991 0C4F                     u3895 0BCD  
                   u5671 1D90                     u5815 14C4                     u6391 0519  
                   u5911 15A0                     u4960 10E5                     u5840 1E8B  
                   u5920 15F2                     u4961 10E4                     u5841 1E8A  
                   u3985 0C2E                     u5921 15F1                     u5850 1E9D  
                   u5690 1DA3                     u5930 1627                     u4795 1FA3  
                   u5851 1E9C                     u5835 1E7C                     u3995 0C4C  
                   u5691 1DA2                     u5755 1316                     u5931 1624  
                   u6467 0890                     u4980 1106                     u5780 140E  
                   u5940 162B                     u4981 1105                     u5685 1D95  
                   u5781 140D                     u5765 1372                     u5941 162A  
                   u6477 0932                     u5870 1EBA                     u5950 165A  
                   u4975 10F8                     u5871 1EB9                     u5855 1E99  
                   u5775 13C7                     u5951 1659                     u5960 1694  
                   u5880 150D                     u5865 1EAC                     u5961 1693  
                   u5881 150C                     u5970 16DF                     u5890 154D  
                   u4995 111A                     u5795 142B                     u5971 16DE  
                   u5891 154C                     u5980 1768                     u5981 1767  
                   u5990 178C                     u5991 178B                     _TXIF 0064  
                   _conv 1D04                     _main 0878                     btemp 007E  
                   start 000C             _sprintf$1077 00AD                    ??_isr 0070  
          ___fltol@sign1 005E                    ?_conv 0026          __end_of___fladd 07D5  
                  ?_main 0070          __end_of___awdiv 0878          __end_of___flneg 080F  
        __end_of___awmod 1F1C          __end_of___flmul 0C9D          __end_of___flsub 1E6D  
        __end_of___fltol 2000                    _ANSEL 0188          __end_of___lldiv 1F84  
        ___awdiv@divisor 0020          __end_of___llmod 1EC3          __end_of___lwdiv 1DCD  
        __end_of___lwmod 1D87          ___awdiv@counter 0024                    _TMR1H 000F  
                  _TMR1L 000E                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008          __end_of_cfg_clk 1CAD  
                  _TRISB 0086                    _TRISD 0088                    _TXREG 0019  
        __end_of_dpowers 1896                    _scale 0C9D          __end_of_isdigit 1CE3  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 054D          __initialization 000F             __end_of_conv 1D28  
           __end_of_main 093C                   ??_conv 007A                   ??_main 00C8  
   __size_of__tdiv_to_l_ 00BD         ___llmod@dividend 0076                   ?_scale 0042  
       ___awdiv@dividend 0022                   _ANSELH 0189                   _SPBRGH 009A  
                 _TMR1ON 0080         __end_of___xxtofl 1175         __end_of__powers_ 183A  
                 ___flge 1015                   ___fleq 1DCD                ??___fladd 005E  
                 ___wmul 1D28                ??___awdiv 0079                   _cfg_io 1CBF  
              ??___flneg 0076                ??___awmod 0076                ??___flmul 0030  
              ??___flsub 007B                ??___fltol 0059                ??___lldiv 007A  
              ??___llmod 007A                ??___lwdiv 0078                ??___lwmod 0076  
              ??_cfg_clk 0072                   _fround 12F0         ___awdiv@quotient 0026  
        ___awmod@divisor 0072          ___awmod@counter 0077                   conv@aa 0026  
              ??_isdigit 0072       __size_of__Umul8_16 0027                   saved_w 007E  
              ??_sprintf 00A8               ___flge@ff1 0072               ___flge@ff2 0076  
           ___xxtofl@arg 0022             ___xxtofl@exp 0021             ___xxtofl@val 0072  
             ___fleq@ff1 0072               ___fleq@ff2 0076  __end_of__initialization 0019  
             ___flneg@f1 0072               ___fltol@f1 0055           __pcstackCOMMON 0070  
     __size_of_cfg_usart 0015            __end_of_scale 1000               __div_to_l_ 1232  
        __div_to_l_@exp1 0025          __div_to_l_@cntr 0024                  ??_scale 0046  
        __div_to_l_@quot 0020             sprintf@width 00BE               __pbssBANK1 00CB  
          __div_to_l_@f1 0072            __div_to_l_@f2 0076        __end_of__Umul8_16 07FC  
             __pmaintext 0878                  ?___flge 0072                  ?___fleq 0072  
                ?___wmul 0072                  ?_cfg_io 0070               __pintentry 0004  
     __size_of_send_char 000A       __size_of_send_crct 0021                  ?_fround 0042  
              ?___xxtofl 0072              send_crct@st 0076               __stringtab 1800  
      __end_of_cfg_usart 1015        __end_of__npowers_ 186E               _scale$1076 0050  
        __size_of___flge 00A4          __size_of___fleq 0050                  ___fladd 054D  
                ___awdiv 080F                  ___flneg 0804                  ___awmod 1EC3  
                ___flmul 093C                  ___flsub 1E1D                  ___fltol 1F84  
                ___lldiv 1F1C          __size_of___wmul 0025                  ___llmod 1E6D  
        __size_of_cfg_io 0012                  ___lwdiv 1D87                  ___lwmod 1D4D  
                _cfg_clk 1CA5          __size_of_fround 020D                  __ptext1 14FD  
                __ptext2 0C9D                  __ptext3 1EC3                  __ptext4 080F  
                __ptext5 1CD1                  __ptext6 12F0                  __ptext7 1D4D  
                __ptext8 1D87                  __ptext9 093C              ?__div_to_l_ 0072  
                _dpowers 186E                  _isdigit 1CD1             __size_of_isr 0007  
             ??___xxtofl 0076         ___awmod@dividend 0074                  _sprintf 14FD  
                clrloop0 1CAE     end_of_initialization 0019        __end_of_send_char 1CBF  
      __end_of_send_crct 1D04          ___lldiv@divisor 0072          ___lldiv@counter 0024  
              _RCSTAbits 0018                  psplit$0 B002A           __tdiv_to_l_@f1 0072  
         __tdiv_to_l_@f2 0076            send_char@dato 0072            ??__tdiv_to_l_ 0020  
              _PORTAbits 0005                _PORTDbits 0008              ___fladd@grs 0069  
          ___xxtofl@sign 0020                _TRISAbits 0085               conv@result 002A  
            ___flmul@grs 0036                _TXSTAbits 0098      __size_of__div_to_l_ 00BE  
         __end_of___flge 10B9           __end_of___fleq 1E1D           __end_of___wmul 1D4D  
         __end_of_cfg_io 1CD1        pnum$text1_split_1 002A              _BAUDCTLbits 0187  
         __end_of_fround 14FD      start_initialization 000F      __end_of__tdiv_to_l_ 1232  
            __end_of_isr 1CA5          ___llmod@divisor 0072          ___llmod@counter 0020  
               ??___flge 0020                 ??___fleq 0020                 ??___wmul 0076  
               ??_cfg_io 0072                __Umul8_16 07D5                 ??_fround 0046  
          sprintf@tmpval 00B6                ___fladd@a 005A                ___fladd@b 0056  
             fround@prec 0055                ___flmul@a 002C                ___flmul@b 0028  
            __pbssCOMMON 007B                ___flsub@a 00A0                ___flsub@b 00A4  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of___xxtofl 00BC              sprintf@flag 00BC              sprintf@eexp 00BA  
            sprintf@fval 00C0              sprintf@prec 00C4                _cfg_usart 1000  
       ___lwdiv@dividend 0022                 ?___fladd 0056                 ?___awdiv 0020  
               ?___flneg 0072                 ?___awmod 0072                 ?___flmul 0028  
               ?___flsub 00A0                 ?___fltol 0055                 ?___lldiv 0072  
               ?___llmod 0072                __npowers_ 183A               ?__Umul8_16 0072  
               ?___lwdiv 0020                 ?___lwmod 0072                 ?_cfg_clk 0070  
              __pstrings 1800              __tdiv_to_l_ 1175               send_crct@i 0074  
           ??__div_to_l_ 007A                 ?_isdigit 0070         ___lwdiv@quotient 0025  
               ?_sprintf 006A           __size_of_scale 0363        interrupt_function 0004  
         ___wmul@product 0076                clear_ram0 1CAD               ?_cfg_usart 0070  
               _PIE1bits 008C                _send_char 1CB5                _send_crct 1CE3  
     __end_of__div_to_l_ 12F0              __stringbase 1805        ___wmul@multiplier 0072  
             ?_send_char 0070               ?_send_crct 0070              ??__Umul8_16 0074  
       __size_of___fladd 0288         __size_of___awdiv 0069         __size_of___flneg 000B  
       __size_of___awmod 0059         __size_of___flmul 0361         __size_of___flsub 0050  
       __size_of___fltol 007C         __size_of___lldiv 0068         __size_of___llmod 0056  
       __size_of___lwdiv 0046         __size_of___lwmod 003A         __size_of_cfg_clk 0008  
            _fround$1074 0051              _fround$1075 004D       __end_of__stringtab 1806  
            _isdigit$902 0072               sprintf@val 00B2                 ___xxtofl 10B9  
       __size_of_isdigit 0012          ___lwdiv@divisor 0020          ___lwdiv@counter 0024  
               __ptext10 07D5                 __ptext11 1175                 __ptext20 1015  
               __ptext12 1232                 __ptext21 1DCD                 __ptext13 1D28  
               __ptext22 1CE3                 __ptext14 1E6D                 __ptext23 1CB5  
               __ptext15 1F1C                 __ptext24 1D04                 __ptext16 1F84  
               __ptext25 10B9                 __ptext17 1E1D                 __ptext26 1000  
               __ptext18 054D                 __ptext27 1CBF                 __ptext19 0804  
               __ptext28 1CA5                 __ptext29 1C9E                 __powers_ 1806  
       __size_of_sprintf F050            __size_of_conv 0024            __size_of_main 00C4  
              pnum$text1 000B              ??_cfg_usart 0072               _INTCONbits 000B  
               isdigit@c 0073                 scale@scl 0054                 intlevel1 0000  
              sprintf@ap 00B1         __tdiv_to_l_@exp1 0029         __tdiv_to_l_@cntr 0028  
              sprintf@sp 00C6         __tdiv_to_l_@quot 0024         ___lwmod@dividend 0074  
       ___lldiv@dividend 0076              ??_send_char 0072              ??_send_crct 0073  
              stringcode 1800               _OSCCONbits 008F             ?__tdiv_to_l_ 0072  
 __Umul8_16@multiplicand 0072                 sprintf@c 00C7                 sprintf@f 006A  
       ___lldiv@quotient 0020          ___lwmod@divisor 0072          ___lwmod@counter 0077  
               stringdir 1800                 stringtab 1800            ___fladd@signs 0066  
           ___fladd@aexp 0067             ___fladd@bexp 0068     __Umul8_16@multiplier 007A  
      __Umul8_16@product 0076  

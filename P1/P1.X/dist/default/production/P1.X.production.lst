

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 25 00:10:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0105                     	;# 
   151  0107                     	;# 
   152  0108                     	;# 
   153  0109                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0185                     	;# 
   160  0187                     	;# 
   161  0188                     	;# 
   162  0189                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  0105                     	;# 
   229  0107                     	;# 
   230  0108                     	;# 
   231  0109                     	;# 
   232  010C                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0185                     	;# 
   238  0187                     	;# 
   239  0188                     	;# 
   240  0189                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  0105                     	;# 
   307  0107                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0185                     	;# 
   316  0187                     	;# 
   317  0188                     	;# 
   318  0189                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321                           
   322                           	psect	strings
   323  1800                     __pstrings:
   324  1800                     stringtab:
   325  1800                     __stringtab:
   326  1800                     stringcode:	
   327                           ;	String table - string pointers are 1 byte each
   328                           
   329  1800                     stringdir:
   330  1800  3018               	movlw	high stringdir
   331  1801  008A               	movwf	10
   332  1802  0804               	movf	4,w
   333  1803  0A84               	incf	4,f
   334  1804  0782               	addwf	2,f
   335  1805                     __stringbase:
   336  1805  3400               	retlw	0
   337  1806                     __end_of__stringtab:
   338  1806                     __powers_:
   339  1806  3400               	retlw	0
   340  1807  3400               	retlw	0
   341  1808  3480               	retlw	128
   342  1809  343F               	retlw	63
   343  180A  3400               	retlw	0
   344  180B  3400               	retlw	0
   345  180C  3420               	retlw	32
   346  180D  3441               	retlw	65
   347  180E  3400               	retlw	0
   348  180F  3400               	retlw	0
   349  1810  34C8               	retlw	200
   350  1811  3442               	retlw	66
   351  1812  3400               	retlw	0
   352  1813  3400               	retlw	0
   353  1814  347A               	retlw	122
   354  1815  3444               	retlw	68
   355  1816  3400               	retlw	0
   356  1817  3440               	retlw	64
   357  1818  341C               	retlw	28
   358  1819  3446               	retlw	70
   359  181A  3400               	retlw	0
   360  181B  3450               	retlw	80
   361  181C  34C3               	retlw	195
   362  181D  3447               	retlw	71
   363  181E  3400               	retlw	0
   364  181F  3424               	retlw	36
   365  1820  3474               	retlw	116
   366  1821  3449               	retlw	73
   367  1822  3480               	retlw	128
   368  1823  3496               	retlw	150
   369  1824  3418               	retlw	24
   370  1825  344B               	retlw	75
   371  1826  3420               	retlw	32
   372  1827  34BC               	retlw	188
   373  1828  34BE               	retlw	190
   374  1829  344C               	retlw	76
   375  182A  3428               	retlw	40
   376  182B  346B               	retlw	107
   377  182C  346E               	retlw	110
   378  182D  344E               	retlw	78
   379  182E  34F9               	retlw	249
   380  182F  3402               	retlw	2
   381  1830  3415               	retlw	21
   382  1831  3450               	retlw	80
   383  1832  34EC               	retlw	236
   384  1833  3478               	retlw	120
   385  1834  34AD               	retlw	173
   386  1835  3460               	retlw	96
   387  1836  34CA               	retlw	202
   388  1837  34F2               	retlw	242
   389  1838  3449               	retlw	73
   390  1839  3471               	retlw	113
   391  183A                     __end_of__powers_:
   392  183A                     __npowers_:
   393  183A  3400               	retlw	0
   394  183B  3400               	retlw	0
   395  183C  3480               	retlw	128
   396  183D  343F               	retlw	63
   397  183E  34CD               	retlw	205
   398  183F  34CC               	retlw	204
   399  1840  34CC               	retlw	204
   400  1841  343D               	retlw	61
   401  1842  340A               	retlw	10
   402  1843  34D7               	retlw	215
   403  1844  3423               	retlw	35
   404  1845  343C               	retlw	60
   405  1846  346F               	retlw	111
   406  1847  3412               	retlw	18
   407  1848  3483               	retlw	131
   408  1849  343A               	retlw	58
   409  184A  3417               	retlw	23
   410  184B  34B7               	retlw	183
   411  184C  34D1               	retlw	209
   412  184D  3438               	retlw	56
   413  184E  34AC               	retlw	172
   414  184F  34C5               	retlw	197
   415  1850  3427               	retlw	39
   416  1851  3437               	retlw	55
   417  1852  34BD               	retlw	189
   418  1853  3437               	retlw	55
   419  1854  3486               	retlw	134
   420  1855  3435               	retlw	53
   421  1856  3495               	retlw	149
   422  1857  34BF               	retlw	191
   423  1858  34D6               	retlw	214
   424  1859  3433               	retlw	51
   425  185A  3477               	retlw	119
   426  185B  34CC               	retlw	204
   427  185C  342B               	retlw	43
   428  185D  3432               	retlw	50
   429  185E  345F               	retlw	95
   430  185F  3470               	retlw	112
   431  1860  3489               	retlw	137
   432  1861  3430               	retlw	48
   433  1862  34FF               	retlw	255
   434  1863  34E6               	retlw	230
   435  1864  34DB               	retlw	219
   436  1865  342E               	retlw	46
   437  1866  3408               	retlw	8
   438  1867  34E5               	retlw	229
   439  1868  343C               	retlw	60
   440  1869  341E               	retlw	30
   441  186A  3460               	retlw	96
   442  186B  3442               	retlw	66
   443  186C  34A2               	retlw	162
   444  186D  340D               	retlw	13
   445  186E                     __end_of__npowers_:
   446  186E                     _dpowers:
   447  186E  3401               	retlw	1
   448  186F  3400               	retlw	0
   449  1870  3400               	retlw	0
   450  1871  3400               	retlw	0
   451  1872  340A               	retlw	10
   452  1873  3400               	retlw	0
   453  1874  3400               	retlw	0
   454  1875  3400               	retlw	0
   455  1876  3464               	retlw	100
   456  1877  3400               	retlw	0
   457  1878  3400               	retlw	0
   458  1879  3400               	retlw	0
   459  187A  34E8               	retlw	232
   460  187B  3403               	retlw	3
   461  187C  3400               	retlw	0
   462  187D  3400               	retlw	0
   463  187E  3410               	retlw	16
   464  187F  3427               	retlw	39
   465  1880  3400               	retlw	0
   466  1881  3400               	retlw	0
   467  1882  34A0               	retlw	160
   468  1883  3486               	retlw	134
   469  1884  3401               	retlw	1
   470  1885  3400               	retlw	0
   471  1886  3440               	retlw	64
   472  1887  3442               	retlw	66
   473  1888  340F               	retlw	15
   474  1889  3400               	retlw	0
   475  188A  3480               	retlw	128
   476  188B  3496               	retlw	150
   477  188C  3498               	retlw	152
   478  188D  3400               	retlw	0
   479  188E  3400               	retlw	0
   480  188F  34E1               	retlw	225
   481  1890  34F5               	retlw	245
   482  1891  3405               	retlw	5
   483  1892  3400               	retlw	0
   484  1893  34CA               	retlw	202
   485  1894  349A               	retlw	154
   486  1895  343B               	retlw	59
   487  1896                     __end_of_dpowers:
   488  0013                     _SSPBUF	set	19
   489  0014                     _SSPCON	set	20
   490  0019                     _TXREG	set	25
   491  0018                     _RCSTAbits	set	24
   492  000B                     _INTCONbits	set	11
   493  0005                     _PORTA	set	5
   494  0008                     _PORTD	set	8
   495  0006                     _PORTB	set	6
   496  0063                     _SSPIF	set	99
   497  005E                     _PEIE	set	94
   498  005F                     _GIE	set	95
   499  0064                     _TXIF	set	100
   500  0091                     _SSPCON2bits	set	145
   501  0087                     _TRISCbits	set	135
   502  0094                     _SSPSTAT	set	148
   503  0093                     _SSPADD	set	147
   504  0091                     _SSPCON2	set	145
   505  009A                     _SPBRGH	set	154
   506  0099                     _SPBRG	set	153
   507  0098                     _TXSTAbits	set	152
   508  008C                     _PIE1bits	set	140
   509  008F                     _OSCCONbits	set	143
   510  0088                     _TRISD	set	136
   511  0086                     _TRISB	set	134
   512  0085                     _TRISAbits	set	133
   513  0463                     _SSPIE	set	1123
   514  043C                     _TRISC4	set	1084
   515  043B                     _TRISC3	set	1083
   516  0187                     _BAUDCTLbits	set	391
   517  0189                     _ANSELH	set	393
   518  0188                     _ANSEL	set	392
   519  1896                     STR_1:
   520  1896  3425               	retlw	37	;'%'
   521  1897  3430               	retlw	48	;'0'
   522  1898  342E               	retlw	46	;'.'
   523  1899  3430               	retlw	48	;'0'
   524  189A  3466               	retlw	102	;'f'
   525  189B  3400               	retlw	0
   526                           
   527                           	psect	cinit
   528  000F                     start_initialization:	
   529                           ; #config settings
   530                           
   531  000F                     __initialization:
   532                           
   533                           ; Clear objects allocated to COMMON
   534  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   535                           
   536                           ; Clear objects allocated to BANK1
   537  0010  1383               	bcf	3,7	;select IRP bank0
   538  0011  30CB               	movlw	low __pbssBANK1
   539  0012  0084               	movwf	4
   540  0013  30E8               	movlw	low (__pbssBANK1+29)
   541  0014  160A  158A  2403  120A  118A  	fcall	clear_ram0
   542  0019                     end_of_initialization:	
   543                           ;End of C runtime variable initialization code
   544                           
   545  0019                     __end_of__initialization:
   546  0019  0183               	clrf	3
   547  001A  120A  158A  2860   	ljmp	_main	;jump to C main() function
   548                           
   549                           	psect	bssCOMMON
   550  007B                     __pbssCOMMON:
   551  007B                     _i:
   552  007B                     	ds	1
   553                           
   554                           	psect	bssBANK1
   555  00CB                     __pbssBANK1:
   556  00CB                     _v1:
   557  00CB                     	ds	4
   558  00CF                     _v0:
   559  00CF                     	ds	4
   560  00D3                     _D1:
   561  00D3                     	ds	2
   562  00D5                     _D0:
   563  00D5                     	ds	2
   564  00D7                     _V:
   565  00D7                     	ds	2
   566  00D9                     _f1:
   567  00D9                     	ds	15
   568                           
   569                           	psect	clrtext
   570  1C03                     clear_ram0:	
   571                           ;	Called with FSR containing the base address, and
   572                           ;	W with the last address+1
   573                           
   574  1C03  0064               	clrwdt	;clear the watchdog before getting into this loop
   575  1C04                     clrloop0:
   576  1C04  0180               	clrf	0	;clear RAM location pointed to by FSR
   577  1C05  0A84               	incf	4,f	;increment pointer
   578  1C06  0604               	xorwf	4,w	;XOR with final address
   579  1C07  1903               	btfsc	3,2	;have we reached the end yet?
   580  1C08  3400               	retlw	0	;all done for this memory range, return
   581  1C09  0604               	xorwf	4,w	;XOR again to restore value
   582  1C0A  2C04               	goto	clrloop0	;do the next byte
   583                           
   584                           	psect	cstackBANK1
   585  00A0                     __pcstackBANK1:
   586  00A0                     ?___flsub:
   587  00A0                     ___flsub@a:	
   588                           ; 4 bytes @ 0x0
   589                           
   590                           
   591                           ; 4 bytes @ 0x0
   592  00A0                     	ds	4
   593  00A4                     ___flsub@b:
   594                           
   595                           ; 4 bytes @ 0x4
   596  00A4                     	ds	4
   597  00A8                     ??_sprintf:
   598                           
   599                           ; 1 bytes @ 0x8
   600  00A8                     	ds	5
   601  00AD                     _sprintf$1131:
   602                           
   603                           ; 4 bytes @ 0xD
   604  00AD                     	ds	4
   605  00B1                     sprintf@ap:
   606                           
   607                           ; 1 bytes @ 0x11
   608  00B1                     	ds	1
   609  00B2                     sprintf@val:
   610                           
   611                           ; 4 bytes @ 0x12
   612  00B2                     	ds	4
   613  00B6                     sprintf@tmpval:
   614                           
   615                           ; 4 bytes @ 0x16
   616  00B6                     	ds	4
   617  00BA                     sprintf@eexp:
   618                           
   619                           ; 2 bytes @ 0x1A
   620  00BA                     	ds	2
   621  00BC                     sprintf@flag:
   622                           
   623                           ; 2 bytes @ 0x1C
   624  00BC                     	ds	2
   625  00BE                     sprintf@width:
   626                           
   627                           ; 2 bytes @ 0x1E
   628  00BE                     	ds	2
   629  00C0                     sprintf@fval:
   630                           
   631                           ; 4 bytes @ 0x20
   632  00C0                     	ds	4
   633  00C4                     sprintf@prec:
   634                           
   635                           ; 2 bytes @ 0x24
   636  00C4                     	ds	2
   637  00C6                     sprintf@sp:
   638                           
   639                           ; 1 bytes @ 0x26
   640  00C6                     	ds	1
   641  00C7                     sprintf@c:
   642                           
   643                           ; 1 bytes @ 0x27
   644  00C7                     	ds	1
   645  00C8                     ??_main:
   646                           
   647                           ; 1 bytes @ 0x28
   648  00C8                     	ds	3
   649                           
   650                           	psect	cstackCOMMON
   651  0070                     __pcstackCOMMON:
   652  0070                     ?_isdigit:
   653  0070                     ?_cfg_io:	
   654                           ; 1 bit 
   655                           
   656  0070                     ?_cfg_usart:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_cfg_clk:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_I2C_Master_Start:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_I2C_Master_Stop:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_send_crct:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_send_char:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_isr:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ??_isr:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_main:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_I2C_Master_Wait:	
   684                           ; 1 bytes @ 0x0
   685                           
   686                           
   687                           ; 1 bytes @ 0x0
   688  0070                     	ds	2
   689  0072                     ?___fleq:
   690  0072                     ?___flge:	
   691                           ; 1 bit 
   692                           
   693  0072                     ??_cfg_io:	
   694                           ; 1 bit 
   695                           
   696  0072                     ??_cfg_usart:	
   697                           ; 1 bytes @ 0x2
   698                           
   699  0072                     ??_cfg_clk:	
   700                           ; 1 bytes @ 0x2
   701                           
   702  0072                     ??_I2C_Master_Start:	
   703                           ; 1 bytes @ 0x2
   704                           
   705  0072                     ?_I2C_Master_Write:	
   706                           ; 1 bytes @ 0x2
   707                           
   708  0072                     ??_I2C_Master_Stop:	
   709                           ; 1 bytes @ 0x2
   710                           
   711  0072                     ??_send_char:	
   712                           ; 1 bytes @ 0x2
   713                           
   714  0072                     ??_isdigit:	
   715                           ; 1 bytes @ 0x2
   716                           
   717  0072                     ??_I2C_Master_Wait:	
   718                           ; 1 bytes @ 0x2
   719                           
   720  0072                     ?_I2C_Master_Read:	
   721                           ; 1 bytes @ 0x2
   722                           
   723  0072                     ?__Umul8_16:	
   724                           ; 2 bytes @ 0x2
   725                           
   726  0072                     ?___wmul:	
   727                           ; 2 bytes @ 0x2
   728                           
   729  0072                     ?___awmod:	
   730                           ; 2 bytes @ 0x2
   731                           
   732  0072                     ?___lwmod:	
   733                           ; 2 bytes @ 0x2
   734                           
   735  0072                     ?__tdiv_to_l_:	
   736                           ; 2 bytes @ 0x2
   737                           
   738  0072                     ?__div_to_l_:	
   739                           ; 4 bytes @ 0x2
   740                           
   741  0072                     ?___lldiv:	
   742                           ; 4 bytes @ 0x2
   743                           
   744  0072                     ?___flneg:	
   745                           ; 4 bytes @ 0x2
   746                           
   747  0072                     ?___llmod:	
   748                           ; 4 bytes @ 0x2
   749                           
   750  0072                     ?___xxtofl:	
   751                           ; 4 bytes @ 0x2
   752                           
   753  0072                     send_char@dato:	
   754                           ; 4 bytes @ 0x2
   755                           
   756  0072                     __Umul8_16@multiplicand:	
   757                           ; 1 bytes @ 0x2
   758                           
   759  0072                     _isdigit$948:	
   760                           ; 1 bytes @ 0x2
   761                           
   762  0072                     I2C_Master_Write@d:	
   763                           ; 1 bytes @ 0x2
   764                           
   765  0072                     I2C_Master_Read@a:	
   766                           ; 2 bytes @ 0x2
   767                           
   768  0072                     ___wmul@multiplier:	
   769                           ; 2 bytes @ 0x2
   770                           
   771  0072                     ___awmod@divisor:	
   772                           ; 2 bytes @ 0x2
   773                           
   774  0072                     ___lwmod@divisor:	
   775                           ; 2 bytes @ 0x2
   776                           
   777  0072                     ___lldiv@divisor:	
   778                           ; 2 bytes @ 0x2
   779                           
   780  0072                     __div_to_l_@f1:	
   781                           ; 4 bytes @ 0x2
   782                           
   783  0072                     ___fleq@ff1:	
   784                           ; 4 bytes @ 0x2
   785                           
   786  0072                     ___flge@ff1:	
   787                           ; 4 bytes @ 0x2
   788                           
   789  0072                     ___flneg@f1:	
   790                           ; 4 bytes @ 0x2
   791                           
   792  0072                     __tdiv_to_l_@f1:	
   793                           ; 4 bytes @ 0x2
   794                           
   795  0072                     ___llmod@divisor:	
   796                           ; 4 bytes @ 0x2
   797                           
   798  0072                     ___xxtofl@val:	
   799                           ; 4 bytes @ 0x2
   800                           
   801                           
   802                           ; 4 bytes @ 0x2
   803  0072                     	ds	1
   804  0073                     ??_send_crct:
   805  0073                     isdigit@c:	
   806                           ; 1 bytes @ 0x3
   807                           
   808                           
   809                           ; 1 bytes @ 0x3
   810  0073                     	ds	1
   811  0074                     ??_I2C_Master_Write:
   812  0074                     ??_I2C_Master_Read:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0074                     ??__Umul8_16:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0074                     send_crct@i:	
   819                           ; 1 bytes @ 0x4
   820                           
   821  0074                     ___wmul@multiplicand:	
   822                           ; 2 bytes @ 0x4
   823                           
   824  0074                     ___awmod@dividend:	
   825                           ; 2 bytes @ 0x4
   826                           
   827  0074                     ___lwmod@dividend:	
   828                           ; 2 bytes @ 0x4
   829                           
   830                           
   831                           ; 2 bytes @ 0x4
   832  0074                     	ds	2
   833  0076                     ??___wmul:
   834  0076                     ??___awmod:	
   835                           ; 1 bytes @ 0x6
   836                           
   837  0076                     ??___flneg:	
   838                           ; 1 bytes @ 0x6
   839                           
   840  0076                     ??___lwmod:	
   841                           ; 1 bytes @ 0x6
   842                           
   843  0076                     ??___xxtofl:	
   844                           ; 1 bytes @ 0x6
   845                           
   846  0076                     send_crct@st:	
   847                           ; 1 bytes @ 0x6
   848                           
   849  0076                     I2C_Master_Read@temp:	
   850                           ; 1 bytes @ 0x6
   851                           
   852  0076                     ___wmul@product:	
   853                           ; 2 bytes @ 0x6
   854                           
   855  0076                     __Umul8_16@product:	
   856                           ; 2 bytes @ 0x6
   857                           
   858  0076                     ___lldiv@dividend:	
   859                           ; 2 bytes @ 0x6
   860                           
   861  0076                     __div_to_l_@f2:	
   862                           ; 4 bytes @ 0x6
   863                           
   864  0076                     ___fleq@ff2:	
   865                           ; 4 bytes @ 0x6
   866                           
   867  0076                     ___flge@ff2:	
   868                           ; 4 bytes @ 0x6
   869                           
   870  0076                     __tdiv_to_l_@f2:	
   871                           ; 4 bytes @ 0x6
   872                           
   873  0076                     ___llmod@dividend:	
   874                           ; 4 bytes @ 0x6
   875                           
   876                           
   877                           ; 4 bytes @ 0x6
   878  0076                     	ds	1
   879  0077                     ___awmod@counter:
   880  0077                     ___lwmod@counter:	
   881                           ; 1 bytes @ 0x7
   882                           
   883                           
   884                           ; 1 bytes @ 0x7
   885  0077                     	ds	1
   886  0078                     ??___lwdiv:
   887  0078                     ___awmod@sign:	
   888                           ; 1 bytes @ 0x8
   889                           
   890  0078                     __Umul8_16@word_mpld:	
   891                           ; 1 bytes @ 0x8
   892                           
   893                           
   894                           ; 2 bytes @ 0x8
   895  0078                     	ds	1
   896  0079                     ??___awdiv:
   897                           
   898                           ; 1 bytes @ 0x9
   899  0079                     	ds	1
   900  007A                     ??_conv:
   901  007A                     ??__div_to_l_:	
   902                           ; 1 bytes @ 0xA
   903                           
   904  007A                     ??___lldiv:	
   905                           ; 1 bytes @ 0xA
   906                           
   907  007A                     ??___llmod:	
   908                           ; 1 bytes @ 0xA
   909                           
   910  007A                     __Umul8_16@multiplier:	
   911                           ; 1 bytes @ 0xA
   912                           
   913                           
   914                           ; 1 bytes @ 0xA
   915  007A                     	ds	1
   916  007B                     ??___flsub:
   917                           
   918                           	psect	cstackBANK0
   919  0020                     __pcstackBANK0:	
   920                           ; 1 bytes @ 0xB
   921                           
   922  0020                     ??__tdiv_to_l_:
   923  0020                     ??___fleq:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0020                     ??___flge:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0020                     ?___awdiv:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0020                     ?___lwdiv:	
   933                           ; 2 bytes @ 0x0
   934                           
   935  0020                     ___llmod@counter:	
   936                           ; 2 bytes @ 0x0
   937                           
   938  0020                     ___xxtofl@sign:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0020                     ___awdiv@divisor:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0020                     ___lwdiv@divisor:	
   945                           ; 2 bytes @ 0x0
   946                           
   947  0020                     ___lldiv@quotient:	
   948                           ; 2 bytes @ 0x0
   949                           
   950  0020                     __div_to_l_@quot:	
   951                           ; 4 bytes @ 0x0
   952                           
   953                           
   954                           ; 4 bytes @ 0x0
   955  0020                     	ds	1
   956  0021                     ___xxtofl@exp:
   957                           
   958                           ; 1 bytes @ 0x1
   959  0021                     	ds	1
   960  0022                     ___awdiv@dividend:
   961  0022                     ___lwdiv@dividend:	
   962                           ; 2 bytes @ 0x2
   963                           
   964  0022                     ___xxtofl@arg:	
   965                           ; 2 bytes @ 0x2
   966                           
   967                           
   968                           ; 4 bytes @ 0x2
   969  0022                     	ds	2
   970  0024                     ___lldiv@counter:
   971  0024                     ___awdiv@counter:	
   972                           ; 1 bytes @ 0x4
   973                           
   974  0024                     __div_to_l_@cntr:	
   975                           ; 1 bytes @ 0x4
   976                           
   977  0024                     ___lwdiv@counter:	
   978                           ; 1 bytes @ 0x4
   979                           
   980  0024                     __tdiv_to_l_@quot:	
   981                           ; 1 bytes @ 0x4
   982                           
   983                           
   984                           ; 4 bytes @ 0x4
   985  0024                     	ds	1
   986  0025                     ?_I2C_Master_Init:
   987  0025                     ___awdiv@sign:	
   988                           ; 1 bytes @ 0x5
   989                           
   990  0025                     __div_to_l_@exp1:	
   991                           ; 1 bytes @ 0x5
   992                           
   993  0025                     ___lwdiv@quotient:	
   994                           ; 1 bytes @ 0x5
   995                           
   996  0025                     I2C_Master_Init@c:	
   997                           ; 2 bytes @ 0x5
   998                           
   999                           
  1000                           ; 4 bytes @ 0x5
  1001  0025                     	ds	1
  1002  0026                     ?_conv:
  1003  0026                     conv@aa:	
  1004                           ; 4 bytes @ 0x6
  1005                           
  1006  0026                     ___awdiv@quotient:	
  1007                           ; 2 bytes @ 0x6
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x6
  1011  0026                     	ds	2
  1012  0028                     ?___flmul:
  1013  0028                     __tdiv_to_l_@cntr:	
  1014                           ; 4 bytes @ 0x8
  1015                           
  1016  0028                     ___flmul@b:	
  1017                           ; 1 bytes @ 0x8
  1018                           
  1019                           
  1020                           ; 4 bytes @ 0x8
  1021  0028                     	ds	1
  1022  0029                     ??_I2C_Master_Init:
  1023  0029                     __tdiv_to_l_@exp1:	
  1024                           ; 1 bytes @ 0x9
  1025                           
  1026                           
  1027                           ; 1 bytes @ 0x9
  1028  0029                     	ds	1
  1029  002A                     conv@result:
  1030                           
  1031                           ; 4 bytes @ 0xA
  1032  002A                     	ds	2
  1033  002C                     ___flmul@a:
  1034                           
  1035                           ; 4 bytes @ 0xC
  1036  002C                     	ds	4
  1037  0030                     ??___flmul:
  1038                           
  1039                           ; 1 bytes @ 0x10
  1040  0030                     	ds	5
  1041  0035                     ___flmul@sign:
  1042                           
  1043                           ; 1 bytes @ 0x15
  1044  0035                     	ds	1
  1045  0036                     ___flmul@grs:
  1046                           
  1047                           ; 4 bytes @ 0x16
  1048  0036                     	ds	4
  1049  003A                     ___flmul@aexp:
  1050                           
  1051                           ; 1 bytes @ 0x1A
  1052  003A                     	ds	1
  1053  003B                     ___flmul@bexp:
  1054                           
  1055                           ; 1 bytes @ 0x1B
  1056  003B                     	ds	1
  1057  003C                     ___flmul@prod:
  1058                           
  1059                           ; 4 bytes @ 0x1C
  1060  003C                     	ds	4
  1061  0040                     ___flmul@temp:
  1062                           
  1063                           ; 2 bytes @ 0x20
  1064  0040                     	ds	2
  1065  0042                     ?_fround:
  1066  0042                     ?_scale:	
  1067                           ; 4 bytes @ 0x22
  1068                           
  1069                           
  1070                           ; 4 bytes @ 0x22
  1071  0042                     	ds	4
  1072  0046                     ??_fround:
  1073  0046                     ??_scale:	
  1074                           ; 1 bytes @ 0x26
  1075                           
  1076                           
  1077                           ; 1 bytes @ 0x26
  1078  0046                     	ds	7
  1079  004D                     _fround$1129:
  1080                           
  1081                           ; 4 bytes @ 0x2D
  1082  004D                     	ds	3
  1083  0050                     _scale$1130:
  1084                           
  1085                           ; 4 bytes @ 0x30
  1086  0050                     	ds	1
  1087  0051                     _fround$1128:
  1088                           
  1089                           ; 4 bytes @ 0x31
  1090  0051                     	ds	3
  1091  0054                     scale@scl:
  1092                           
  1093                           ; 1 bytes @ 0x34
  1094  0054                     	ds	1
  1095  0055                     ?___fltol:
  1096  0055                     fround@prec:	
  1097                           ; 4 bytes @ 0x35
  1098                           
  1099  0055                     ___fltol@f1:	
  1100                           ; 1 bytes @ 0x35
  1101                           
  1102                           
  1103                           ; 4 bytes @ 0x35
  1104  0055                     	ds	1
  1105  0056                     ?___fladd:
  1106  0056                     ___fladd@b:	
  1107                           ; 4 bytes @ 0x36
  1108                           
  1109                           
  1110                           ; 4 bytes @ 0x36
  1111  0056                     	ds	3
  1112  0059                     ??___fltol:
  1113                           
  1114                           ; 1 bytes @ 0x39
  1115  0059                     	ds	1
  1116  005A                     ___fladd@a:
  1117                           
  1118                           ; 4 bytes @ 0x3A
  1119  005A                     	ds	4
  1120  005E                     ??___fladd:
  1121  005E                     ___fltol@sign1:	
  1122                           ; 1 bytes @ 0x3E
  1123                           
  1124                           
  1125                           ; 1 bytes @ 0x3E
  1126  005E                     	ds	1
  1127  005F                     ___fltol@exp1:
  1128                           
  1129                           ; 1 bytes @ 0x3F
  1130  005F                     	ds	7
  1131  0066                     ___fladd@signs:
  1132                           
  1133                           ; 1 bytes @ 0x46
  1134  0066                     	ds	1
  1135  0067                     ___fladd@aexp:
  1136                           
  1137                           ; 1 bytes @ 0x47
  1138  0067                     	ds	1
  1139  0068                     ___fladd@bexp:
  1140                           
  1141                           ; 1 bytes @ 0x48
  1142  0068                     	ds	1
  1143  0069                     ___fladd@grs:
  1144                           
  1145                           ; 1 bytes @ 0x49
  1146  0069                     	ds	1
  1147  006A                     ?_sprintf:
  1148  006A                     sprintf@f:	
  1149                           ; 2 bytes @ 0x4A
  1150                           
  1151                           
  1152                           ; 1 bytes @ 0x4A
  1153  006A                     	ds	5
  1154                           
  1155                           	psect	maintext
  1156  0860                     __pmaintext:	
  1157 ;;
  1158 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1159 ;;
  1160 ;; *************** function _main *****************
  1161 ;; Defined at:
  1162 ;;		line 74 in file "mainp1.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : B00/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         0       0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0
  1178 ;;      Temps:          0       0       3       0       0
  1179 ;;      Totals:         0       0       3       0       0
  1180 ;;Total ram usage:        3 bytes
  1181 ;; Hardware stack levels required when called:    5
  1182 ;; This function calls:
  1183 ;;		_I2C_Master_Init
  1184 ;;		_I2C_Master_Read
  1185 ;;		_I2C_Master_Start
  1186 ;;		_I2C_Master_Stop
  1187 ;;		_I2C_Master_Write
  1188 ;;		_cfg_clk
  1189 ;;		_cfg_io
  1190 ;;		_cfg_usart
  1191 ;;		_conv
  1192 ;;		_send_crct
  1193 ;;		_sprintf
  1194 ;; This function is called by:
  1195 ;;		Startup code after reset
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           
  1200                           ;psect for function _main
  1201  0860                     _main:
  1202  0860                     l4008:	
  1203                           ;incstack = 0
  1204                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1205                           
  1206                           
  1207                           ;mainp1.c: 75:     cfg_io();
  1208  0860  160A  158A  2449  120A  158A  	fcall	_cfg_io
  1209  0865                     l4010:
  1210                           
  1211                           ;mainp1.c: 77:     cfg_usart();
  1212  0865  160A  118A  2000  120A  158A  	fcall	_cfg_usart
  1213  086A                     l4012:
  1214                           
  1215                           ;mainp1.c: 78:     cfg_clk();
  1216  086A  160A  158A  23FB  120A  158A  	fcall	_cfg_clk
  1217  086F                     l4014:
  1218                           
  1219                           ;mainp1.c: 79:     I2C_Master_Init(100000);
  1220  086F  3000               	movlw	0
  1221  0870  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0871  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0872  00A8               	movwf	I2C_Master_Init@c+3
  1224  0873  3001               	movlw	1
  1225  0874  00A7               	movwf	I2C_Master_Init@c+2
  1226  0875  3086               	movlw	134
  1227  0876  00A6               	movwf	I2C_Master_Init@c+1
  1228  0877  30A0               	movlw	160
  1229  0878  00A5               	movwf	I2C_Master_Init@c
  1230  0879  160A  158A  2505  120A  158A  	fcall	_I2C_Master_Init
  1231  087E                     l4016:
  1232                           
  1233                           ;mainp1.c: 80:     I2C_Master_Start();
  1234  087E  160A  158A  240B  120A  158A  	fcall	_I2C_Master_Start
  1235  0883                     l4018:
  1236                           
  1237                           ;mainp1.c: 81:     I2C_Master_Write(0x72);
  1238  0883  3072               	movlw	114
  1239  0884  00F2               	movwf	I2C_Master_Write@d
  1240  0885  3000               	movlw	0
  1241  0886  00F3               	movwf	I2C_Master_Write@d+1
  1242  0887  160A  158A  241D  120A  158A  	fcall	_I2C_Master_Write
  1243  088C                     l4020:
  1244                           
  1245                           ;mainp1.c: 82:     I2C_Master_Write(0x80);
  1246  088C  3080               	movlw	128
  1247  088D  00F2               	movwf	I2C_Master_Write@d
  1248  088E  3000               	movlw	0
  1249  088F  00F3               	movwf	I2C_Master_Write@d+1
  1250  0890  160A  158A  241D  120A  158A  	fcall	_I2C_Master_Write
  1251  0895                     l4022:
  1252                           
  1253                           ;mainp1.c: 83:     I2C_Master_Write(0x03);
  1254  0895  3003               	movlw	3
  1255  0896  00F2               	movwf	I2C_Master_Write@d
  1256  0897  3000               	movlw	0
  1257  0898  00F3               	movwf	I2C_Master_Write@d+1
  1258  0899  160A  158A  241D  120A  158A  	fcall	_I2C_Master_Write
  1259  089E                     l4024:
  1260                           
  1261                           ;mainp1.c: 124:         I2C_Master_Start();
  1262  089E  160A  158A  240B  120A  158A  	fcall	_I2C_Master_Start
  1263  08A3                     l4026:
  1264                           
  1265                           ;mainp1.c: 125:         I2C_Master_Write(0x73);
  1266  08A3  3073               	movlw	115
  1267  08A4  00F2               	movwf	I2C_Master_Write@d
  1268  08A5  3000               	movlw	0
  1269  08A6  00F3               	movwf	I2C_Master_Write@d+1
  1270  08A7  160A  158A  241D  120A  158A  	fcall	_I2C_Master_Write
  1271  08AC                     l4028:
  1272                           
  1273                           ;mainp1.c: 126:         I2C_Master_Write(0x8C);
  1274  08AC  308C               	movlw	140
  1275  08AD  00F2               	movwf	I2C_Master_Write@d
  1276  08AE  3000               	movlw	0
  1277  08AF  00F3               	movwf	I2C_Master_Write@d+1
  1278  08B0  160A  158A  241D  120A  158A  	fcall	_I2C_Master_Write
  1279  08B5                     l4030:
  1280                           
  1281                           ;mainp1.c: 127:         D0 = I2C_Master_Read(0);
  1282  08B5  3000               	movlw	0
  1283  08B6  00F2               	movwf	I2C_Master_Read@a
  1284  08B7  00F3               	movwf	I2C_Master_Read@a+1
  1285  08B8  160A  158A  24D7  120A  158A  	fcall	_I2C_Master_Read
  1286  08BD  0873               	movf	?_I2C_Master_Read+1,w
  1287  08BE  1683               	bsf	3,5	;RP0=1, select bank1
  1288  08BF  1303               	bcf	3,6	;RP1=0, select bank1
  1289  08C0  00D6               	movwf	(_D0+1)^(0+128)
  1290  08C1  0872               	movf	?_I2C_Master_Read,w
  1291  08C2  00D5               	movwf	_D0^(0+128)
  1292  08C3                     l4032:
  1293                           
  1294                           ;mainp1.c: 128:         I2C_Master_Stop();
  1295  08C3  160A  158A  2414  120A  158A  	fcall	_I2C_Master_Stop
  1296  08C8                     l4034:
  1297                           
  1298                           ;mainp1.c: 129:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1299  08C8  3002               	movlw	2
  1300  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  1301  08CA  1303               	bcf	3,6	;RP1=0, select bank1
  1302  08CB  00CA               	movwf	(??_main^(0+128)+2)
  1303  08CC  3004               	movlw	4
  1304  08CD  00C9               	movwf	(??_main^(0+128)+1)
  1305  08CE  30B9               	movlw	185
  1306  08CF  00C8               	movwf	??_main^(0+128)
  1307  08D0                     u6427:
  1308  08D0  0BC8               	decfsz	??_main^(0+128),f
  1309  08D1  28D0               	goto	u6427
  1310  08D2  0BC9               	decfsz	(??_main^(0+128)+1),f
  1311  08D3  28D0               	goto	u6427
  1312  08D4  0BCA               	decfsz	(??_main^(0+128)+2),f
  1313  08D5  28D0               	goto	u6427
  1314  08D6  28D7               	nop2
  1315                           
  1316                           ;mainp1.c: 138:         v0 = conv(D0);
  1317  08D7  1683               	bsf	3,5	;RP0=1, select bank1
  1318  08D8  1303               	bcf	3,6	;RP1=0, select bank1
  1319  08D9  0856               	movf	(_D0+1)^(0+128),w
  1320  08DA  1283               	bcf	3,5	;RP0=0, select bank0
  1321  08DB  1303               	bcf	3,6	;RP1=0, select bank0
  1322  08DC  00A7               	movwf	conv@aa+1
  1323  08DD  1683               	bsf	3,5	;RP0=1, select bank1
  1324  08DE  1303               	bcf	3,6	;RP1=0, select bank1
  1325  08DF  0855               	movf	_D0^(0+128),w
  1326  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  1327  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  1328  08E2  00A6               	movwf	conv@aa
  1329  08E3  160A  158A  248E  120A  158A  	fcall	_conv
  1330  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  1331  08E9  1303               	bcf	3,6	;RP1=0, select bank0
  1332  08EA  0829               	movf	?_conv+3,w
  1333  08EB  1683               	bsf	3,5	;RP0=1, select bank1
  1334  08EC  1303               	bcf	3,6	;RP1=0, select bank1
  1335  08ED  00D2               	movwf	(_v0+3)^(0+128)
  1336  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  1337  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  1338  08F0  0828               	movf	?_conv+2,w
  1339  08F1  1683               	bsf	3,5	;RP0=1, select bank1
  1340  08F2  1303               	bcf	3,6	;RP1=0, select bank1
  1341  08F3  00D1               	movwf	(_v0+2)^(0+128)
  1342  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  1343  08F5  1303               	bcf	3,6	;RP1=0, select bank0
  1344  08F6  0827               	movf	?_conv+1,w
  1345  08F7  1683               	bsf	3,5	;RP0=1, select bank1
  1346  08F8  1303               	bcf	3,6	;RP1=0, select bank1
  1347  08F9  00D0               	movwf	(_v0+1)^(0+128)
  1348  08FA  1283               	bcf	3,5	;RP0=0, select bank0
  1349  08FB  1303               	bcf	3,6	;RP1=0, select bank0
  1350  08FC  0826               	movf	?_conv,w
  1351  08FD  1683               	bsf	3,5	;RP0=1, select bank1
  1352  08FE  1303               	bcf	3,6	;RP1=0, select bank1
  1353  08FF  00CF               	movwf	_v0^(0+128)
  1354  0900                     l4036:
  1355                           
  1356                           ;mainp1.c: 140:         sprintf(f1, "%0.0f", v0);
  1357  0900  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1358  0901  00C8               	movwf	??_main^(0+128)
  1359  0902  0848               	movf	??_main^(0+128),w
  1360  0903  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0904  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0905  00EA               	movwf	sprintf@f
  1363  0906  1683               	bsf	3,5	;RP0=1, select bank1
  1364  0907  1303               	bcf	3,6	;RP1=0, select bank1
  1365  0908  0852               	movf	(_v0+3)^(0+128),w
  1366  0909  1283               	bcf	3,5	;RP0=0, select bank0
  1367  090A  1303               	bcf	3,6	;RP1=0, select bank0
  1368  090B  00EE               	movwf	?_sprintf+4
  1369  090C  1683               	bsf	3,5	;RP0=1, select bank1
  1370  090D  1303               	bcf	3,6	;RP1=0, select bank1
  1371  090E  0851               	movf	(_v0+2)^(0+128),w
  1372  090F  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0910  1303               	bcf	3,6	;RP1=0, select bank0
  1374  0911  00ED               	movwf	?_sprintf+3
  1375  0912  1683               	bsf	3,5	;RP0=1, select bank1
  1376  0913  1303               	bcf	3,6	;RP1=0, select bank1
  1377  0914  0850               	movf	(_v0+1)^(0+128),w
  1378  0915  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0916  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0917  00EC               	movwf	?_sprintf+2
  1381  0918  1683               	bsf	3,5	;RP0=1, select bank1
  1382  0919  1303               	bcf	3,6	;RP1=0, select bank1
  1383  091A  084F               	movf	_v0^(0+128),w
  1384  091B  1283               	bcf	3,5	;RP0=0, select bank0
  1385  091C  1303               	bcf	3,6	;RP1=0, select bank0
  1386  091D  00EB               	movwf	?_sprintf+1
  1387  091E  30D9               	movlw	(low (_f1| 0))& (0+255)
  1388  091F  160A  118A  24FD  120A  158A  	fcall	_sprintf
  1389  0924                     l4038:
  1390                           
  1391                           ;mainp1.c: 141:         send_crct(f1);
  1392  0924  30D9               	movlw	(low (_f1| 0))& (0+255)
  1393  0925  160A  158A  246D  120A  158A  	fcall	_send_crct
  1394  092A                     l4040:
  1395                           
  1396                           ;mainp1.c: 143:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1397  092A  3003               	movlw	3
  1398  092B  1683               	bsf	3,5	;RP0=1, select bank1
  1399  092C  1303               	bcf	3,6	;RP1=0, select bank1
  1400  092D  00CA               	movwf	(??_main^(0+128)+2)
  1401  092E  308A               	movlw	138
  1402  092F  00C9               	movwf	(??_main^(0+128)+1)
  1403  0930  3055               	movlw	85
  1404  0931  00C8               	movwf	??_main^(0+128)
  1405  0932                     u6437:
  1406  0932  0BC8               	decfsz	??_main^(0+128),f
  1407  0933  2932               	goto	u6437
  1408  0934  0BC9               	decfsz	(??_main^(0+128)+1),f
  1409  0935  2932               	goto	u6437
  1410  0936  0BCA               	decfsz	(??_main^(0+128)+2),f
  1411  0937  2932               	goto	u6437
  1412  0938  289E               	goto	l4024
  1413  0939  120A  118A  280C   	ljmp	start
  1414  093C                     __end_of_main:
  1415                           
  1416                           	psect	text1
  1417  14FD                     __ptext1:	
  1418 ;; *************** function _sprintf *****************
  1419 ;; Defined at:
  1420 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  sp              1    wreg     PTR unsigned char 
  1423 ;;		 -> f1(15), 
  1424 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1425 ;;		 -> STR_1(6), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  sp              1   38[BANK1 ] PTR unsigned char 
  1428 ;;		 -> f1(15), 
  1429 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1430 ;;  tmpval          4   22[BANK1 ] struct .
  1431 ;;  val             4   18[BANK1 ] unsigned long 
  1432 ;;  prec            2   36[BANK1 ] int 
  1433 ;;  width           2   30[BANK1 ] int 
  1434 ;;  flag            2   28[BANK1 ] unsigned short 
  1435 ;;  eexp            2   26[BANK1 ] int 
  1436 ;;  cp              2    0        PTR const unsigned char 
  1437 ;;  len             2    0        unsigned int 
  1438 ;;  c               1   39[BANK1 ] unsigned char 
  1439 ;;  ap              1   17[BANK1 ] PTR void [1]
  1440 ;;		 -> ?_sprintf(2), 
  1441 ;;  d               1    0        unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  2   74[BANK0 ] int 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       5       0       0       0
  1452 ;;      Locals:         0       0      27       0       0
  1453 ;;      Temps:          0       0       5       0       0
  1454 ;;      Totals:         0       5      32       0       0
  1455 ;;Total ram usage:       37 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    4
  1458 ;; This function calls:
  1459 ;;		___awdiv
  1460 ;;		___fladd
  1461 ;;		___fleq
  1462 ;;		___flge
  1463 ;;		___flmul
  1464 ;;		___flneg
  1465 ;;		___flsub
  1466 ;;		___fltol
  1467 ;;		___lldiv
  1468 ;;		___llmod
  1469 ;;		___wmul
  1470 ;;		___xxtofl
  1471 ;;		__div_to_l_
  1472 ;;		__tdiv_to_l_
  1473 ;;		_fround
  1474 ;;		_isdigit
  1475 ;;		_scale
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           
  1482                           ;psect for function _sprintf
  1483  14FD                     _sprintf:
  1484                           
  1485                           ;incstack = 0
  1486                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1487                           ;sprintf@sp stored from wreg
  1488  14FD  1683               	bsf	3,5	;RP0=1, select bank1
  1489  14FE  1303               	bcf	3,6	;RP1=0, select bank1
  1490  14FF  00C6               	movwf	sprintf@sp^(0+128)
  1491  1500                     l3702:
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1494  1500  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1495  1501  00A8               	movwf	??_sprintf^(0+128)
  1496  1502  0828               	movf	??_sprintf^(0+128),w
  1497  1503  00B1               	movwf	sprintf@ap^(0+128)
  1498  1504                     L1:
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1501  1504  120A  118A  2D30   	goto	l3990
  1502  1507                     l3704:
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1505  1507  3025               	movlw	37
  1506  1508  0647               	xorwf	sprintf@c^(0+128),w
  1507  1509  1903               	btfsc	3,2
  1508  150A  2D0C               	goto	u5881
  1509  150B  2D0D               	goto	u5880
  1510  150C                     u5881:
  1511  150C  2D19               	goto	l3710
  1512  150D                     u5880:
  1513  150D                     l3706:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1516  150D  0847               	movf	sprintf@c^(0+128),w
  1517  150E  00A8               	movwf	??_sprintf^(0+128)
  1518  150F  0846               	movf	sprintf@sp^(0+128),w
  1519  1510  0084               	movwf	4
  1520  1511  0828               	movf	??_sprintf^(0+128),w
  1521  1512  1383               	bcf	3,7	;select IRP bank0
  1522  1513  0080               	movwf	0
  1523  1514                     l3708:
  1524  1514  3001               	movlw	1
  1525  1515  00A8               	movwf	??_sprintf^(0+128)
  1526  1516  0828               	movf	??_sprintf^(0+128),w
  1527  1517  07C6               	addwf	sprintf@sp^(0+128),f
  1528                           
  1529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1530  1518  2D04               	goto	L1
  1531  1519                     l3710:
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1534  1519  01BE               	clrf	sprintf@width^(0+128)
  1535  151A  01BF               	clrf	(sprintf@width+1)^(0+128)
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1538  151B  01BC               	clrf	sprintf@flag^(0+128)
  1539  151C  01BD               	clrf	(sprintf@flag+1)^(0+128)
  1540  151D  2D25               	goto	l3716
  1541  151E                     l293:	
  1542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1543                           
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1546  151E  153C               	bsf	sprintf@flag^(0+128),2
  1547  151F                     l3712:
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  1550  151F  3001               	movlw	1
  1551  1520  00A8               	movwf	??_sprintf^(0+128)
  1552  1521  0828               	movf	??_sprintf^(0+128),w
  1553  1522  1283               	bcf	3,5	;RP0=0, select bank0
  1554  1523  1303               	bcf	3,6	;RP1=0, select bank0
  1555  1524  07EA               	addwf	sprintf@f,f
  1556  1525                     l3716:	
  1557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1558                           
  1559  1525  1283               	bcf	3,5	;RP0=0, select bank0
  1560  1526  086A               	movf	sprintf@f,w
  1561  1527  0084               	movwf	4
  1562  1528  160A  158A  2000  160A  118A  	fcall	stringdir
  1563  152D  1683               	bsf	3,5	;RP0=1, select bank1
  1564  152E  1303               	bcf	3,6	;RP1=0, select bank1
  1565  152F  00A8               	movwf	??_sprintf^(0+128)
  1566  1530  01A9               	clrf	(??_sprintf^(0+128)+1)
  1567                           
  1568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1569                           ; Switch size 1, requested type "simple"
  1570                           ; Number of cases is 1, Range of values is 0 to 0
  1571                           ; switch strategies available:
  1572                           ; Name         Instructions Cycles
  1573                           ; simple_byte            4     3 (average)
  1574                           ; direct_byte           11     8 (fixed)
  1575                           ; jumptable            260     6 (fixed)
  1576                           ;	Chosen strategy is simple_byte
  1577  1531  0829               	movf	(??_sprintf+1)^(0+128),w
  1578  1532  3A00               	xorlw	0	; case 0
  1579  1533  1903               	skipnz
  1580  1534  2D36               	goto	l4102
  1581  1535  2D3B               	goto	l3718
  1582  1536                     l4102:
  1583                           
  1584                           ; Switch size 1, requested type "simple"
  1585                           ; Number of cases is 1, Range of values is 48 to 48
  1586                           ; switch strategies available:
  1587                           ; Name         Instructions Cycles
  1588                           ; simple_byte            4     3 (average)
  1589                           ; direct_byte           14    11 (fixed)
  1590                           ; jumptable            263     9 (fixed)
  1591                           ;	Chosen strategy is simple_byte
  1592  1536  0828               	movf	??_sprintf^(0+128),w
  1593  1537  3A30               	xorlw	48	; case 48
  1594  1538  1903               	skipnz
  1595  1539  2D1E               	goto	l293
  1596  153A  2D3B               	goto	l3718
  1597  153B                     l3718:
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1600  153B  1283               	bcf	3,5	;RP0=0, select bank0
  1601  153C  1303               	bcf	3,6	;RP1=0, select bank0
  1602  153D  086A               	movf	sprintf@f,w
  1603  153E  0084               	movwf	4
  1604  153F  160A  158A  2000  160A  118A  	fcall	stringdir
  1605  1544  160A  158A  245B  160A  118A  	fcall	_isdigit
  1606  1549  1C03               	btfss	3,0
  1607  154A  2D4C               	goto	u5891
  1608  154B  2D4D               	goto	u5890
  1609  154C                     u5891:
  1610  154C  2D93               	goto	l3730
  1611  154D                     u5890:
  1612  154D                     l3720:
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1615  154D  1683               	bsf	3,5	;RP0=1, select bank1
  1616  154E  1303               	bcf	3,6	;RP1=0, select bank1
  1617  154F  01BE               	clrf	sprintf@width^(0+128)
  1618  1550  01BF               	clrf	(sprintf@width+1)^(0+128)
  1619  1551                     l3722:
  1620                           
  1621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1622  1551  300A               	movlw	10
  1623  1552  00F2               	movwf	___wmul@multiplier
  1624  1553  3000               	movlw	0
  1625  1554  00F3               	movwf	___wmul@multiplier+1
  1626  1555  1683               	bsf	3,5	;RP0=1, select bank1
  1627  1556  1303               	bcf	3,6	;RP1=0, select bank1
  1628  1557  083F               	movf	(sprintf@width+1)^(0+128),w
  1629  1558  00F5               	movwf	___wmul@multiplicand+1
  1630  1559  083E               	movf	sprintf@width^(0+128),w
  1631  155A  00F4               	movwf	___wmul@multiplicand
  1632  155B  160A  158A  24B2  160A  118A  	fcall	___wmul
  1633  1560  0873               	movf	?___wmul+1,w
  1634  1561  1683               	bsf	3,5	;RP0=1, select bank1
  1635  1562  1303               	bcf	3,6	;RP1=0, select bank1
  1636  1563  00BF               	movwf	(sprintf@width+1)^(0+128)
  1637  1564  0872               	movf	?___wmul,w
  1638  1565  00BE               	movwf	sprintf@width^(0+128)
  1639  1566                     l3724:
  1640                           
  1641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1642  1566  1283               	bcf	3,5	;RP0=0, select bank0
  1643  1567  1303               	bcf	3,6	;RP1=0, select bank0
  1644  1568  086A               	movf	sprintf@f,w
  1645  1569  0084               	movwf	4
  1646  156A  160A  158A  2000  160A  118A  	fcall	stringdir
  1647  156F  3ED0               	addlw	208
  1648  1570  1683               	bsf	3,5	;RP0=1, select bank1
  1649  1571  1303               	bcf	3,6	;RP1=0, select bank1
  1650  1572  00A8               	movwf	??_sprintf^(0+128)
  1651  1573  30FF               	movlw	255
  1652  1574  1803               	skipnc
  1653  1575  3000               	movlw	0
  1654  1576  00A9               	movwf	(??_sprintf^(0+128)+1)
  1655  1577  0828               	movf	??_sprintf^(0+128),w
  1656  1578  07BE               	addwf	sprintf@width^(0+128),f
  1657  1579  1803               	skipnc
  1658  157A  0ABF               	incf	(sprintf@width+1)^(0+128),f
  1659  157B  0829               	movf	(??_sprintf+1)^(0+128),w
  1660  157C  07BF               	addwf	(sprintf@width+1)^(0+128),f
  1661  157D                     l3726:
  1662  157D  3001               	movlw	1
  1663  157E  00A8               	movwf	??_sprintf^(0+128)
  1664  157F  0828               	movf	??_sprintf^(0+128),w
  1665  1580  1283               	bcf	3,5	;RP0=0, select bank0
  1666  1581  1303               	bcf	3,6	;RP1=0, select bank0
  1667  1582  07EA               	addwf	sprintf@f,f
  1668  1583                     l3728:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1671  1583  086A               	movf	sprintf@f,w
  1672  1584  0084               	movwf	4
  1673  1585  160A  158A  2000  160A  118A  	fcall	stringdir
  1674  158A  160A  158A  245B  160A  118A  	fcall	_isdigit
  1675  158F  1803               	btfsc	3,0
  1676  1590  2D92               	goto	u5901
  1677  1591  2D93               	goto	u5900
  1678  1592                     u5901:
  1679  1592  2D51               	goto	l3722
  1680  1593                     u5900:
  1681  1593                     l3730:
  1682                           
  1683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1684  1593  1283               	bcf	3,5	;RP0=0, select bank0
  1685  1594  1303               	bcf	3,6	;RP1=0, select bank0
  1686  1595  086A               	movf	sprintf@f,w
  1687  1596  0084               	movwf	4
  1688  1597  160A  158A  2000  160A  118A  	fcall	stringdir
  1689  159C  3A2E               	xorlw	46
  1690  159D  1D03               	skipz
  1691  159E  2DA0               	goto	u5911
  1692  159F  2DA1               	goto	u5910
  1693  15A0                     u5911:
  1694  15A0  2DF3               	goto	l3746
  1695  15A1                     u5910:
  1696  15A1                     l3732:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1699  15A1  1683               	bsf	3,5	;RP0=1, select bank1
  1700  15A2  1303               	bcf	3,6	;RP1=0, select bank1
  1701  15A3  173D               	bsf	(sprintf@flag^(0+128)+1),6
  1702  15A4                     l3734:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1705  15A4  3001               	movlw	1
  1706  15A5  00A8               	movwf	??_sprintf^(0+128)
  1707  15A6  0828               	movf	??_sprintf^(0+128),w
  1708  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  1709  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  1710  15A9  07EA               	addwf	sprintf@f,f
  1711  15AA                     l3736:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1714  15AA  1683               	bsf	3,5	;RP0=1, select bank1
  1715  15AB  1303               	bcf	3,6	;RP1=0, select bank1
  1716  15AC  01C4               	clrf	sprintf@prec^(0+128)
  1717  15AD  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1720  15AE  2DE1               	goto	l3744
  1721  15AF                     l3738:
  1722                           
  1723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1724  15AF  300A               	movlw	10
  1725  15B0  00F2               	movwf	___wmul@multiplier
  1726  15B1  3000               	movlw	0
  1727  15B2  00F3               	movwf	___wmul@multiplier+1
  1728  15B3  1683               	bsf	3,5	;RP0=1, select bank1
  1729  15B4  1303               	bcf	3,6	;RP1=0, select bank1
  1730  15B5  0845               	movf	(sprintf@prec+1)^(0+128),w
  1731  15B6  00F5               	movwf	___wmul@multiplicand+1
  1732  15B7  0844               	movf	sprintf@prec^(0+128),w
  1733  15B8  00F4               	movwf	___wmul@multiplicand
  1734  15B9  160A  158A  24B2  160A  118A  	fcall	___wmul
  1735  15BE  0873               	movf	?___wmul+1,w
  1736  15BF  1683               	bsf	3,5	;RP0=1, select bank1
  1737  15C0  1303               	bcf	3,6	;RP1=0, select bank1
  1738  15C1  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1739  15C2  0872               	movf	?___wmul,w
  1740  15C3  00C4               	movwf	sprintf@prec^(0+128)
  1741  15C4                     l3740:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1744  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  1745  15C5  1303               	bcf	3,6	;RP1=0, select bank0
  1746  15C6  086A               	movf	sprintf@f,w
  1747  15C7  0084               	movwf	4
  1748  15C8  160A  158A  2000  160A  118A  	fcall	stringdir
  1749  15CD  3ED0               	addlw	208
  1750  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  1751  15CF  1303               	bcf	3,6	;RP1=0, select bank1
  1752  15D0  00A8               	movwf	??_sprintf^(0+128)
  1753  15D1  30FF               	movlw	255
  1754  15D2  1803               	skipnc
  1755  15D3  3000               	movlw	0
  1756  15D4  00A9               	movwf	(??_sprintf^(0+128)+1)
  1757  15D5  0828               	movf	??_sprintf^(0+128),w
  1758  15D6  07C4               	addwf	sprintf@prec^(0+128),f
  1759  15D7  1803               	skipnc
  1760  15D8  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1761  15D9  0829               	movf	(??_sprintf+1)^(0+128),w
  1762  15DA  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1763  15DB                     l3742:
  1764  15DB  3001               	movlw	1
  1765  15DC  00A8               	movwf	??_sprintf^(0+128)
  1766  15DD  0828               	movf	??_sprintf^(0+128),w
  1767  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  1768  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  1769  15E0  07EA               	addwf	sprintf@f,f
  1770  15E1                     l3744:
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1773  15E1  1283               	bcf	3,5	;RP0=0, select bank0
  1774  15E2  086A               	movf	sprintf@f,w
  1775  15E3  0084               	movwf	4
  1776  15E4  160A  158A  2000  160A  118A  	fcall	stringdir
  1777  15E9  160A  158A  245B  160A  118A  	fcall	_isdigit
  1778  15EE  1803               	btfsc	3,0
  1779  15EF  2DF1               	goto	u5921
  1780  15F0  2DF2               	goto	u5920
  1781  15F1                     u5921:
  1782  15F1  2DAF               	goto	l3738
  1783  15F2                     u5920:
  1784  15F2  2DFB               	goto	l3752
  1785  15F3                     l3746:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1788  15F3  1683               	bsf	3,5	;RP0=1, select bank1
  1789  15F4  1303               	bcf	3,6	;RP1=0, select bank1
  1790  15F5  01C4               	clrf	sprintf@prec^(0+128)
  1791  15F6  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1792  15F7                     l3748:
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1795  15F7  163D               	bsf	(sprintf@flag^(0+128)+1),4
  1796  15F8  2DFB               	goto	l3752
  1797  15F9                     l308:	
  1798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1799                           
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1802  15F9  153D               	bsf	(sprintf@flag^(0+128)+1),2
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1805  15FA  2E19               	goto	l3754
  1806  15FB                     l3752:
  1807  15FB  3001               	movlw	1
  1808  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  1809  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  1810  15FE  07EA               	addwf	sprintf@f,f
  1811  15FF  30FF               	movlw	-1
  1812  1600  076A               	addwf	sprintf@f,w
  1813  1601  0084               	movwf	4
  1814  1602  160A  158A  2000  160A  118A  	fcall	stringdir
  1815  1607  1683               	bsf	3,5	;RP0=1, select bank1
  1816  1608  1303               	bcf	3,6	;RP1=0, select bank1
  1817  1609  00C7               	movwf	sprintf@c^(0+128)
  1818  160A  00A8               	movwf	??_sprintf^(0+128)
  1819  160B  01A9               	clrf	(??_sprintf^(0+128)+1)
  1820                           
  1821                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1822                           ; Switch size 1, requested type "simple"
  1823                           ; Number of cases is 1, Range of values is 0 to 0
  1824                           ; switch strategies available:
  1825                           ; Name         Instructions Cycles
  1826                           ; simple_byte            4     3 (average)
  1827                           ; direct_byte           11     8 (fixed)
  1828                           ; jumptable            260     6 (fixed)
  1829                           ;	Chosen strategy is simple_byte
  1830  160C  0829               	movf	(??_sprintf+1)^(0+128),w
  1831  160D  3A00               	xorlw	0	; case 0
  1832  160E  1903               	skipnz
  1833  160F  2E11               	goto	l4104
  1834  1610  2D04               	goto	L1
  1835  1611                     l4104:
  1836                           
  1837                           ; Switch size 1, requested type "simple"
  1838                           ; Number of cases is 2, Range of values is 0 to 102
  1839                           ; switch strategies available:
  1840                           ; Name         Instructions Cycles
  1841                           ; simple_byte            7     4 (average)
  1842                           ; jumptable            260     6 (fixed)
  1843                           ;	Chosen strategy is simple_byte
  1844  1611  0828               	movf	??_sprintf^(0+128),w
  1845  1612  3A00               	xorlw	0	; case 0
  1846  1613  1903               	skipnz
  1847  1614  2FFD               	goto	L3
  1848  1615  3A66               	xorlw	102	; case 102
  1849  1616  1903               	skipnz
  1850  1617  2DF9               	goto	l308
  1851  1618  2D04               	goto	L1
  1852  1619                     l3754:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1855  1619  3000               	movlw	0
  1856  161A  053C               	andwf	sprintf@flag^(0+128),w
  1857  161B  00A8               	movwf	??_sprintf^(0+128)
  1858  161C  3007               	movlw	7
  1859  161D  053D               	andwf	(sprintf@flag+1)^(0+128),w
  1860  161E  00A9               	movwf	(??_sprintf+1)^(0+128)
  1861  161F  0828               	movf	??_sprintf^(0+128),w
  1862  1620  0429               	iorwf	(??_sprintf^(0+128)+1),w
  1863  1621  1903               	btfsc	3,2
  1864  1622  2E24               	goto	u5931
  1865  1623  2E27               	goto	u5930
  1866  1624                     u5931:
  1867  1624  120A  118A  2C32   	goto	l3928
  1868  1627                     u5930:
  1869  1627                     l3756:
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1872  1627  1E3D               	btfss	(sprintf@flag+1)^(0+128),4
  1873  1628  2E2A               	goto	u5941
  1874  1629  2E2B               	goto	u5940
  1875  162A                     u5941:
  1876  162A  2E2F               	goto	l3760
  1877  162B                     u5940:
  1878  162B                     l3758:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1881  162B  3006               	movlw	6
  1882  162C  00C4               	movwf	sprintf@prec^(0+128)
  1883  162D  3000               	movlw	0
  1884  162E  00C5               	movwf	(sprintf@prec^(0+128)+1)
  1885  162F                     l3760:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1888  162F  0831               	movf	sprintf@ap^(0+128),w
  1889  1630  0084               	movwf	4
  1890  1631  1383               	bcf	3,7	;select IRP bank0
  1891  1632  0800               	movf	0,w
  1892  1633  00C0               	movwf	sprintf@fval^(0+128)
  1893  1634  0A84               	incf	4,f
  1894  1635  0800               	movf	0,w
  1895  1636  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1896  1637  0A84               	incf	4,f
  1897  1638  0800               	movf	0,w
  1898  1639  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1899  163A  0A84               	incf	4,f
  1900  163B  0800               	movf	0,w
  1901  163C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1902  163D                     l3762:
  1903  163D  3004               	movlw	4
  1904  163E  00A8               	movwf	??_sprintf^(0+128)
  1905  163F  0828               	movf	??_sprintf^(0+128),w
  1906  1640  07B1               	addwf	sprintf@ap^(0+128),f
  1907  1641                     l3764:
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1910  1641  0843               	movf	(sprintf@fval+3)^(0+128),w
  1911  1642  00F5               	movwf	___flge@ff1+3
  1912  1643  0842               	movf	(sprintf@fval+2)^(0+128),w
  1913  1644  00F4               	movwf	___flge@ff1+2
  1914  1645  0841               	movf	(sprintf@fval+1)^(0+128),w
  1915  1646  00F3               	movwf	___flge@ff1+1
  1916  1647  0840               	movf	sprintf@fval^(0+128),w
  1917  1648  00F2               	movwf	___flge@ff1
  1918  1649  3000               	movlw	0
  1919  164A  00F9               	movwf	___flge@ff2+3
  1920  164B  3000               	movlw	0
  1921  164C  00F8               	movwf	___flge@ff2+2
  1922  164D  3000               	movlw	0
  1923  164E  00F7               	movwf	___flge@ff2+1
  1924  164F  3000               	movlw	0
  1925  1650  00F6               	movwf	___flge@ff2
  1926  1651  160A  118A  2015  160A  118A  	fcall	___flge
  1927  1656  1803               	btfsc	3,0
  1928  1657  2E59               	goto	u5951
  1929  1658  2E5A               	goto	u5950
  1930  1659                     u5951:
  1931  1659  2E77               	goto	l3770
  1932  165A                     u5950:
  1933  165A                     l3766:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1936  165A  1683               	bsf	3,5	;RP0=1, select bank1
  1937  165B  1303               	bcf	3,6	;RP1=0, select bank1
  1938  165C  0843               	movf	(sprintf@fval+3)^(0+128),w
  1939  165D  00F5               	movwf	___flneg@f1+3
  1940  165E  0842               	movf	(sprintf@fval+2)^(0+128),w
  1941  165F  00F4               	movwf	___flneg@f1+2
  1942  1660  0841               	movf	(sprintf@fval+1)^(0+128),w
  1943  1661  00F3               	movwf	___flneg@f1+1
  1944  1662  0840               	movf	sprintf@fval^(0+128),w
  1945  1663  00F2               	movwf	___flneg@f1
  1946  1664  160A  158A  2431  160A  118A  	fcall	___flneg
  1947  1669  0875               	movf	?___flneg+3,w
  1948  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1949  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1950  166C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1951  166D  0874               	movf	?___flneg+2,w
  1952  166E  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1953  166F  0873               	movf	?___flneg+1,w
  1954  1670  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1955  1671  0872               	movf	?___flneg,w
  1956  1672  00C0               	movwf	sprintf@fval^(0+128)
  1957  1673                     l3768:
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1960  1673  3003               	movlw	3
  1961  1674  04BC               	iorwf	sprintf@flag^(0+128),f
  1962  1675  3000               	movlw	0
  1963  1676  04BD               	iorwf	(sprintf@flag+1)^(0+128),f
  1964  1677                     l3770:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1967  1677  1683               	bsf	3,5	;RP0=1, select bank1
  1968  1678  1303               	bcf	3,6	;RP1=0, select bank1
  1969  1679  01BA               	clrf	sprintf@eexp^(0+128)
  1970  167A  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  1971  167B                     l3772:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1974  167B  0843               	movf	(sprintf@fval+3)^(0+128),w
  1975  167C  00F5               	movwf	___fleq@ff1+3
  1976  167D  0842               	movf	(sprintf@fval+2)^(0+128),w
  1977  167E  00F4               	movwf	___fleq@ff1+2
  1978  167F  0841               	movf	(sprintf@fval+1)^(0+128),w
  1979  1680  00F3               	movwf	___fleq@ff1+1
  1980  1681  0840               	movf	sprintf@fval^(0+128),w
  1981  1682  00F2               	movwf	___fleq@ff1
  1982  1683  3000               	movlw	0
  1983  1684  00F9               	movwf	___fleq@ff2+3
  1984  1685  3000               	movlw	0
  1985  1686  00F8               	movwf	___fleq@ff2+2
  1986  1687  3000               	movlw	0
  1987  1688  00F7               	movwf	___fleq@ff2+1
  1988  1689  3000               	movlw	0
  1989  168A  00F6               	movwf	___fleq@ff2
  1990  168B  160A  158A  25BD  160A  118A  	fcall	___fleq
  1991  1690  1803               	btfsc	3,0
  1992  1691  2E93               	goto	u5961
  1993  1692  2E94               	goto	u5960
  1994  1693                     u5961:
  1995  1693  2F94               	goto	l3798
  1996  1694                     u5960:
  1997  1694                     l3774:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2000  1694  1003               	clrc
  2001  1695  1683               	bsf	3,5	;RP0=1, select bank1
  2002  1696  1303               	bcf	3,6	;RP1=0, select bank1
  2003  1697  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  2004  1698  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  2005  1699  3E82               	addlw	130
  2006  169A  00BA               	movwf	sprintf@eexp^(0+128)
  2007  169B  30FF               	movlw	255
  2008  169C  1803               	skipnc
  2009  169D  3000               	movlw	0
  2010  169E  00BB               	movwf	(sprintf@eexp^(0+128)+1)
  2011  169F                     l3776:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2014  169F  30FF               	movlw	255
  2015  16A0  07BA               	addwf	sprintf@eexp^(0+128),f
  2016  16A1  1803               	skipnc
  2017  16A2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2018  16A3  30FF               	movlw	255
  2019  16A4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2020  16A5                     l3778:
  2021                           
  2022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2023  16A5  3003               	movlw	3
  2024  16A6  00F2               	movwf	___wmul@multiplier
  2025  16A7  3000               	movlw	0
  2026  16A8  00F3               	movwf	___wmul@multiplier+1
  2027  16A9  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2028  16AA  00F5               	movwf	___wmul@multiplicand+1
  2029  16AB  083A               	movf	sprintf@eexp^(0+128),w
  2030  16AC  00F4               	movwf	___wmul@multiplicand
  2031  16AD  160A  158A  24B2  160A  118A  	fcall	___wmul
  2032  16B2  0873               	movf	?___wmul+1,w
  2033  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  2034  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  2035  16B5  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  2036  16B6  0872               	movf	?___wmul,w
  2037  16B7  00BA               	movwf	sprintf@eexp^(0+128)
  2038  16B8                     l3780:
  2039                           
  2040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2041  16B8  300A               	movlw	10
  2042  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2043  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2044  16BB  00A0               	movwf	___awdiv@divisor
  2045  16BC  3000               	movlw	0
  2046  16BD  00A1               	movwf	___awdiv@divisor+1
  2047  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  2048  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  2049  16C0  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2050  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  2051  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  2052  16C3  00A3               	movwf	___awdiv@dividend+1
  2053  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  2054  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  2055  16C6  083A               	movf	sprintf@eexp^(0+128),w
  2056  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2057  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2058  16C9  00A2               	movwf	___awdiv@dividend
  2059  16CA  160A  158A  271B  160A  118A  	fcall	___awdiv
  2060  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2061  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  2062  16D1  0821               	movf	?___awdiv+1,w
  2063  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  2064  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  2065  16D4  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  2066  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  2067  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  2068  16D7  0820               	movf	?___awdiv,w
  2069  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  2070  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  2071  16DA  00BA               	movwf	sprintf@eexp^(0+128)
  2072  16DB                     l3782:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2075  16DB  1FBB               	btfss	(sprintf@eexp+1)^(0+128),7
  2076  16DC  2EDE               	goto	u5971
  2077  16DD  2EDF               	goto	u5970
  2078  16DE                     u5971:
  2079  16DE  2EE5               	goto	l3786
  2080  16DF                     u5970:
  2081  16DF                     l3784:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2084  16DF  30FF               	movlw	255
  2085  16E0  07BA               	addwf	sprintf@eexp^(0+128),f
  2086  16E1  1803               	skipnc
  2087  16E2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2088  16E3  30FF               	movlw	255
  2089  16E4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2090  16E5                     l3786:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2093  16E5  033A               	decf	sprintf@eexp^(0+128),w
  2094  16E6  3AFF               	xorlw	255
  2095  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  2096  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2097  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2098  16EE  0845               	movf	?_scale+3,w
  2099  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2100  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2101  16F1  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2102  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2103  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2104  16F4  0844               	movf	?_scale+2,w
  2105  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2106  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2107  16F7  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2108  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2109  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2110  16FA  0843               	movf	?_scale+1,w
  2111  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2112  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2113  16FD  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2114  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2115  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2116  1700  0842               	movf	?_scale,w
  2117  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2118  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2119  1703  00B6               	movwf	sprintf@tmpval^(0+128)
  2120  1704                     l3788:
  2121                           
  2122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2123  1704  0843               	movf	(sprintf@fval+3)^(0+128),w
  2124  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2125  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2126  1707  00AB               	movwf	___flmul@b+3
  2127  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2128  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2129  170A  0842               	movf	(sprintf@fval+2)^(0+128),w
  2130  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2131  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2132  170D  00AA               	movwf	___flmul@b+2
  2133  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2134  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2135  1710  0841               	movf	(sprintf@fval+1)^(0+128),w
  2136  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2137  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2138  1713  00A9               	movwf	___flmul@b+1
  2139  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2140  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2141  1716  0840               	movf	sprintf@fval^(0+128),w
  2142  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2143  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2144  1719  00A8               	movwf	___flmul@b
  2145  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2146  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2147  171C  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2148  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2149  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2150  171F  00AF               	movwf	___flmul@a+3
  2151  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2152  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2153  1722  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2154  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2155  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2156  1725  00AE               	movwf	___flmul@a+2
  2157  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2158  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2159  1728  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2160  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2161  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2162  172B  00AD               	movwf	___flmul@a+1
  2163  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2164  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2165  172E  0836               	movf	sprintf@tmpval^(0+128),w
  2166  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2167  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2168  1731  00AC               	movwf	___flmul@a
  2169  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2170  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2171  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2172  1739  082B               	movf	?___flmul+3,w
  2173  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2174  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2175  173C  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2176  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2177  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2178  173F  082A               	movf	?___flmul+2,w
  2179  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2180  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2181  1742  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2182  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2183  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2184  1745  0829               	movf	?___flmul+1,w
  2185  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2186  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2187  1748  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2188  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2189  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2190  174B  0828               	movf	?___flmul,w
  2191  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2192  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2193  174E  00B6               	movwf	sprintf@tmpval^(0+128)
  2194  174F                     l3790:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2197  174F  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2198  1750  00F5               	movwf	___flge@ff1+3
  2199  1751  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2200  1752  00F4               	movwf	___flge@ff1+2
  2201  1753  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2202  1754  00F3               	movwf	___flge@ff1+1
  2203  1755  0836               	movf	sprintf@tmpval^(0+128),w
  2204  1756  00F2               	movwf	___flge@ff1
  2205  1757  303F               	movlw	63
  2206  1758  00F9               	movwf	___flge@ff2+3
  2207  1759  3080               	movlw	128
  2208  175A  00F8               	movwf	___flge@ff2+2
  2209  175B  3000               	movlw	0
  2210  175C  00F7               	movwf	___flge@ff2+1
  2211  175D  3000               	movlw	0
  2212  175E  00F6               	movwf	___flge@ff2
  2213  175F  160A  118A  2015  160A  118A  	fcall	___flge
  2214  1764  1803               	btfsc	3,0
  2215  1765  2F67               	goto	u5981
  2216  1766  2F68               	goto	u5980
  2217  1767                     u5981:
  2218  1767  2F71               	goto	l3794
  2219  1768                     u5980:
  2220  1768                     l3792:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2223  1768  30FF               	movlw	255
  2224  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2225  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2226  176B  07BA               	addwf	sprintf@eexp^(0+128),f
  2227  176C  1803               	skipnc
  2228  176D  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2229  176E  30FF               	movlw	255
  2230  176F  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2231  1770  2F94               	goto	l3798
  2232  1771                     l3794:
  2233  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2234  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2235  1773  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2236  1774  00F5               	movwf	___flge@ff1+3
  2237  1775  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2238  1776  00F4               	movwf	___flge@ff1+2
  2239  1777  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2240  1778  00F3               	movwf	___flge@ff1+1
  2241  1779  0836               	movf	sprintf@tmpval^(0+128),w
  2242  177A  00F2               	movwf	___flge@ff1
  2243  177B  3041               	movlw	65
  2244  177C  00F9               	movwf	___flge@ff2+3
  2245  177D  3020               	movlw	32
  2246  177E  00F8               	movwf	___flge@ff2+2
  2247  177F  3000               	movlw	0
  2248  1780  00F7               	movwf	___flge@ff2+1
  2249  1781  3000               	movlw	0
  2250  1782  00F6               	movwf	___flge@ff2
  2251  1783  160A  118A  2015  160A  118A  	fcall	___flge
  2252  1788  1C03               	btfss	3,0
  2253  1789  2F8B               	goto	u5991
  2254  178A  2F8C               	goto	u5990
  2255  178B                     u5991:
  2256  178B  2F94               	goto	l3798
  2257  178C                     u5990:
  2258  178C                     l3796:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2261  178C  3001               	movlw	1
  2262  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2263  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2264  178F  07BA               	addwf	sprintf@eexp^(0+128),f
  2265  1790  1803               	skipnc
  2266  1791  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2267  1792  3000               	movlw	0
  2268  1793  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2269  1794                     l3798:
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2272  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2273  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2274  1796  0845               	movf	(sprintf@prec+1)^(0+128),w
  2275  1797  3A80               	xorlw	128
  2276  1798  00FF               	movwf	btemp+1
  2277  1799  3080               	movlw	128
  2278  179A  027F               	subwf	btemp+1,w
  2279  179B  1D03               	skipz
  2280  179C  2F9F               	goto	u6005
  2281  179D  300D               	movlw	13
  2282  179E  0244               	subwf	sprintf@prec^(0+128),w
  2283  179F                     u6005:
  2284  179F  1803               	skipnc
  2285  17A0  2FA2               	goto	u6001
  2286  17A1  2FA3               	goto	u6000
  2287  17A2                     u6001:
  2288  17A2  2FEA               	goto	l3802
  2289  17A3                     u6000:
  2290  17A3                     l3800:
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2293  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2294  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2295  17A5  0844               	movf	sprintf@prec^(0+128),w
  2296  17A6  160A  118A  22F0  160A  118A  	fcall	_fround
  2297  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2298  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2299  17AD  0845               	movf	?_fround+3,w
  2300  17AE  00D9               	movwf	___fladd@b+3
  2301  17AF  0844               	movf	?_fround+2,w
  2302  17B0  00D8               	movwf	___fladd@b+2
  2303  17B1  0843               	movf	?_fround+1,w
  2304  17B2  00D7               	movwf	___fladd@b+1
  2305  17B3  0842               	movf	?_fround,w
  2306  17B4  00D6               	movwf	___fladd@b
  2307  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2308  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2309  17B7  0843               	movf	(sprintf@fval+3)^(0+128),w
  2310  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2311  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2312  17BA  00DD               	movwf	___fladd@a+3
  2313  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2314  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2315  17BD  0842               	movf	(sprintf@fval+2)^(0+128),w
  2316  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2317  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2318  17C0  00DC               	movwf	___fladd@a+2
  2319  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2320  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2321  17C3  0841               	movf	(sprintf@fval+1)^(0+128),w
  2322  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2323  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2324  17C6  00DB               	movwf	___fladd@a+1
  2325  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2326  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2327  17C9  0840               	movf	sprintf@fval^(0+128),w
  2328  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2329  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2330  17CC  00DA               	movwf	___fladd@a
  2331  17CD  120A  118A  254D  160A  118A  	fcall	___fladd
  2332  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2333  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2334  17D4  0859               	movf	?___fladd+3,w
  2335  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2336  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2337  17D7  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2338  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2339  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2340  17DA  0858               	movf	?___fladd+2,w
  2341  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2342  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2343  17DD  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2344  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2345  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2346  17E0  0857               	movf	?___fladd+1,w
  2347  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2348  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2349  17E3  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2350  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2351  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2352  17E6  0856               	movf	?___fladd,w
  2353  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2354  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2355  17E9  00C0               	movwf	sprintf@fval^(0+128)
  2356  17EA                     l3802:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2359  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2360  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2361  17EC  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2362  17ED  3A80               	xorlw	128
  2363  17EE  00FF               	movwf	btemp+1
  2364  17EF  3080               	movlw	128
  2365  17F0  027F               	subwf	btemp+1,w
  2366  17F1  1D03               	skipz
  2367  17F2  2FF5               	goto	u6015
  2368  17F3  300A               	movlw	10
  2369  17F4  023A               	subwf	sprintf@eexp^(0+128),w
  2370  17F5                     u6015:
  2371  17F5  1803               	skipnc
  2372  17F6  2FFA               	goto	u6011
  2373  17F7  120A  118A  281D   	goto	u6010
  2374  17FA                     u6011:
  2375  17FA  120A  118A  286E   	goto	l3810
  2376  17FD                     L3:
  2377  17FD                     L2:
  2378  17FD  120A  118A  2D48   	ljmp	l3992
  2379                           
  2380                           	psect	text2
  2381  0C9D                     __ptext2:	
  2382 ;; *************** function _scale *****************
  2383 ;; Defined at:
  2384 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  scl             1    wreg     char 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  scl             1   52[BANK0 ] char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  4   34[BANK0 ] char 
  2391 ;; Registers used:
  2392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2398 ;;      Params:         0       4       0       0       0
  2399 ;;      Locals:         0       5       0       0       0
  2400 ;;      Temps:          0      10       0       0       0
  2401 ;;      Totals:         0      19       0       0       0
  2402 ;;Total ram usage:       19 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    3
  2405 ;; This function calls:
  2406 ;;		___awdiv
  2407 ;;		___awmod
  2408 ;;		___flmul
  2409 ;; This function is called by:
  2410 ;;		_sprintf
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _scale
  2416  0C9D                     _scale:
  2417                           
  2418                           ;incstack = 0
  2419                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2420                           ;scale@scl stored from wreg
  2421  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0C9F  00D4               	movwf	scale@scl
  2424  0CA0                     l2814:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2427  0CA0  1FD4               	btfss	scale@scl,7
  2428  0CA1  2CA3               	goto	u4131
  2429  0CA2  2CA4               	goto	u4130
  2430  0CA3                     u4131:
  2431  0CA3  2E53               	goto	l2836
  2432  0CA4                     u4130:
  2433  0CA4                     l2816:
  2434                           
  2435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2436  0CA4  09D4               	comf	scale@scl,f
  2437  0CA5  0AD4               	incf	scale@scl,f
  2438  0CA6                     l2818:
  2439                           
  2440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2441  0CA6  0854               	movf	scale@scl,w
  2442  0CA7  3A80               	xorlw	128
  2443  0CA8  3E12               	addlw	-238
  2444  0CA9  1C03               	skipc
  2445  0CAA  2CAC               	goto	u4141
  2446  0CAB  2CAD               	goto	u4140
  2447  0CAC                     u4141:
  2448  0CAC  2D97               	goto	l2826
  2449  0CAD                     u4140:
  2450  0CAD                     l2820:
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2453  0CAD  300A               	movlw	10
  2454  0CAE  00A0               	movwf	___awdiv@divisor
  2455  0CAF  3000               	movlw	0
  2456  0CB0  00A1               	movwf	___awdiv@divisor+1
  2457  0CB1  0854               	movf	scale@scl,w
  2458  0CB2  00F4               	movwf	___awmod@dividend
  2459  0CB3  01F5               	clrf	___awmod@dividend+1
  2460  0CB4  1BF4               	btfsc	___awmod@dividend,7
  2461  0CB5  03F5               	decf	___awmod@dividend+1,f
  2462  0CB6  3064               	movlw	100
  2463  0CB7  00F2               	movwf	___awmod@divisor
  2464  0CB8  3000               	movlw	0
  2465  0CB9  00F3               	movwf	___awmod@divisor+1
  2466  0CBA  120A  158A  2007  120A  158A  	fcall	___awmod
  2467  0CBF  0873               	movf	?___awmod+1,w
  2468  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0CC2  00A3               	movwf	___awdiv@dividend+1
  2471  0CC3  0872               	movf	?___awmod,w
  2472  0CC4  00A2               	movwf	___awdiv@dividend
  2473  0CC5  160A  158A  271B  120A  158A  	fcall	___awdiv
  2474  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0CCC  0820               	movf	?___awdiv,w
  2477  0CCD  00C6               	movwf	??_scale
  2478  0CCE  3001               	movlw	1
  2479  0CCF                     u4155:
  2480  0CCF  1003               	clrc
  2481  0CD0  0DC6               	rlf	??_scale,f
  2482  0CD1  3EFF               	addlw	-1
  2483  0CD2  1D03               	skipz
  2484  0CD3  2CCF               	goto	u4155
  2485  0CD4  1003               	clrc
  2486  0CD5  0D46               	rlf	??_scale,w
  2487  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2488  0CD7  0084               	movwf	4
  2489  0CD8  160A  158A  2000  120A  158A  	fcall	stringdir
  2490  0CDD  00C7               	movwf	??_scale+1
  2491  0CDE  160A  158A  2000  120A  158A  	fcall	stringdir
  2492  0CE3  00C8               	movwf	??_scale+2
  2493  0CE4  160A  158A  2000  120A  158A  	fcall	stringdir
  2494  0CE9  00C9               	movwf	??_scale+3
  2495  0CEA  160A  158A  2000  120A  158A  	fcall	stringdir
  2496  0CEF  00CA               	movwf	??_scale+4
  2497  0CF0  084A               	movf	??_scale+4,w
  2498  0CF1  00AB               	movwf	___flmul@b+3
  2499  0CF2  0849               	movf	??_scale+3,w
  2500  0CF3  00AA               	movwf	___flmul@b+2
  2501  0CF4  0848               	movf	??_scale+2,w
  2502  0CF5  00A9               	movwf	___flmul@b+1
  2503  0CF6  0847               	movf	??_scale+1,w
  2504  0CF7  00A8               	movwf	___flmul@b
  2505  0CF8  3064               	movlw	100
  2506  0CF9  00A0               	movwf	___awdiv@divisor
  2507  0CFA  3000               	movlw	0
  2508  0CFB  00A1               	movwf	___awdiv@divisor+1
  2509  0CFC  0854               	movf	scale@scl,w
  2510  0CFD  00A2               	movwf	___awdiv@dividend
  2511  0CFE  01A3               	clrf	___awdiv@dividend+1
  2512  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2513  0D00  03A3               	decf	___awdiv@dividend+1,f
  2514  0D01  160A  158A  271B  120A  158A  	fcall	___awdiv
  2515  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2516  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2517  0D08  0820               	movf	?___awdiv,w
  2518  0D09  00CB               	movwf	??_scale+5
  2519  0D0A  3001               	movlw	1
  2520  0D0B                     u4165:
  2521  0D0B  1003               	clrc
  2522  0D0C  0DCB               	rlf	??_scale+5,f
  2523  0D0D  3EFF               	addlw	-1
  2524  0D0E  1D03               	skipz
  2525  0D0F  2D0B               	goto	u4165
  2526  0D10  1003               	clrc
  2527  0D11  0D4B               	rlf	??_scale+5,w
  2528  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2529  0D13  0084               	movwf	4
  2530  0D14  160A  158A  2000  120A  158A  	fcall	stringdir
  2531  0D19  00CC               	movwf	??_scale+6
  2532  0D1A  160A  158A  2000  120A  158A  	fcall	stringdir
  2533  0D1F  00CD               	movwf	??_scale+7
  2534  0D20  160A  158A  2000  120A  158A  	fcall	stringdir
  2535  0D25  00CE               	movwf	??_scale+8
  2536  0D26  160A  158A  2000  120A  158A  	fcall	stringdir
  2537  0D2B  00CF               	movwf	??_scale+9
  2538  0D2C  084F               	movf	??_scale+9,w
  2539  0D2D  00AF               	movwf	___flmul@a+3
  2540  0D2E  084E               	movf	??_scale+8,w
  2541  0D2F  00AE               	movwf	___flmul@a+2
  2542  0D30  084D               	movf	??_scale+7,w
  2543  0D31  00AD               	movwf	___flmul@a+1
  2544  0D32  084C               	movf	??_scale+6,w
  2545  0D33  00AC               	movwf	___flmul@a
  2546  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2547  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0D3B  082B               	movf	?___flmul+3,w
  2550  0D3C  00D3               	movwf	_scale$1130+3
  2551  0D3D  082A               	movf	?___flmul+2,w
  2552  0D3E  00D2               	movwf	_scale$1130+2
  2553  0D3F  0829               	movf	?___flmul+1,w
  2554  0D40  00D1               	movwf	_scale$1130+1
  2555  0D41  0828               	movf	?___flmul,w
  2556  0D42  00D0               	movwf	_scale$1130
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2559  0D43  300A               	movlw	10
  2560  0D44  00F2               	movwf	___awmod@divisor
  2561  0D45  3000               	movlw	0
  2562  0D46  00F3               	movwf	___awmod@divisor+1
  2563  0D47  0854               	movf	scale@scl,w
  2564  0D48  00F4               	movwf	___awmod@dividend
  2565  0D49  01F5               	clrf	___awmod@dividend+1
  2566  0D4A  1BF4               	btfsc	___awmod@dividend,7
  2567  0D4B  03F5               	decf	___awmod@dividend+1,f
  2568  0D4C  120A  158A  2007  120A  158A  	fcall	___awmod
  2569  0D51  0872               	movf	?___awmod,w
  2570  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2572  0D54  00C6               	movwf	??_scale
  2573  0D55  3001               	movlw	1
  2574  0D56                     u4175:
  2575  0D56  1003               	clrc
  2576  0D57  0DC6               	rlf	??_scale,f
  2577  0D58  3EFF               	addlw	-1
  2578  0D59  1D03               	skipz
  2579  0D5A  2D56               	goto	u4175
  2580  0D5B  1003               	clrc
  2581  0D5C  0D46               	rlf	??_scale,w
  2582  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2583  0D5E  0084               	movwf	4
  2584  0D5F  160A  158A  2000  120A  158A  	fcall	stringdir
  2585  0D64  00C7               	movwf	??_scale+1
  2586  0D65  160A  158A  2000  120A  158A  	fcall	stringdir
  2587  0D6A  00C8               	movwf	??_scale+2
  2588  0D6B  160A  158A  2000  120A  158A  	fcall	stringdir
  2589  0D70  00C9               	movwf	??_scale+3
  2590  0D71  160A  158A  2000  120A  158A  	fcall	stringdir
  2591  0D76  00CA               	movwf	??_scale+4
  2592  0D77  084A               	movf	??_scale+4,w
  2593  0D78  00AB               	movwf	___flmul@b+3
  2594  0D79  0849               	movf	??_scale+3,w
  2595  0D7A  00AA               	movwf	___flmul@b+2
  2596  0D7B  0848               	movf	??_scale+2,w
  2597  0D7C  00A9               	movwf	___flmul@b+1
  2598  0D7D  0847               	movf	??_scale+1,w
  2599  0D7E  00A8               	movwf	___flmul@b
  2600  0D7F  0853               	movf	_scale$1130+3,w
  2601  0D80  00AF               	movwf	___flmul@a+3
  2602  0D81  0852               	movf	_scale$1130+2,w
  2603  0D82  00AE               	movwf	___flmul@a+2
  2604  0D83  0851               	movf	_scale$1130+1,w
  2605  0D84  00AD               	movwf	___flmul@a+1
  2606  0D85  0850               	movf	_scale$1130,w
  2607  0D86  00AC               	movwf	___flmul@a
  2608  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2609  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0D8E  082B               	movf	?___flmul+3,w
  2612  0D8F  00C5               	movwf	?_scale+3
  2613  0D90  082A               	movf	?___flmul+2,w
  2614  0D91  00C4               	movwf	?_scale+2
  2615  0D92  0829               	movf	?___flmul+1,w
  2616  0D93  00C3               	movwf	?_scale+1
  2617  0D94  0828               	movf	?___flmul,w
  2618  0D95  00C2               	movwf	?_scale
  2619  0D96  2FFF               	goto	l280
  2620  0D97                     l2826:
  2621  0D97  0854               	movf	scale@scl,w
  2622  0D98  3A80               	xorlw	128
  2623  0D99  3E75               	addlw	-139
  2624  0D9A  1C03               	skipc
  2625  0D9B  2D9D               	goto	u4181
  2626  0D9C  2D9E               	goto	u4180
  2627  0D9D                     u4181:
  2628  0D9D  2E26               	goto	l2832
  2629  0D9E                     u4180:
  2630  0D9E                     l2828:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2633  0D9E  300A               	movlw	10
  2634  0D9F  00F2               	movwf	___awmod@divisor
  2635  0DA0  3000               	movlw	0
  2636  0DA1  00F3               	movwf	___awmod@divisor+1
  2637  0DA2  0854               	movf	scale@scl,w
  2638  0DA3  00F4               	movwf	___awmod@dividend
  2639  0DA4  01F5               	clrf	___awmod@dividend+1
  2640  0DA5  1BF4               	btfsc	___awmod@dividend,7
  2641  0DA6  03F5               	decf	___awmod@dividend+1,f
  2642  0DA7  120A  158A  2007  120A  158A  	fcall	___awmod
  2643  0DAC  0872               	movf	?___awmod,w
  2644  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0DAF  00C6               	movwf	??_scale
  2647  0DB0  3001               	movlw	1
  2648  0DB1                     u4195:
  2649  0DB1  1003               	clrc
  2650  0DB2  0DC6               	rlf	??_scale,f
  2651  0DB3  3EFF               	addlw	-1
  2652  0DB4  1D03               	skipz
  2653  0DB5  2DB1               	goto	u4195
  2654  0DB6  1003               	clrc
  2655  0DB7  0D46               	rlf	??_scale,w
  2656  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2657  0DB9  0084               	movwf	4
  2658  0DBA  160A  158A  2000  120A  158A  	fcall	stringdir
  2659  0DBF  00C7               	movwf	??_scale+1
  2660  0DC0  160A  158A  2000  120A  158A  	fcall	stringdir
  2661  0DC5  00C8               	movwf	??_scale+2
  2662  0DC6  160A  158A  2000  120A  158A  	fcall	stringdir
  2663  0DCB  00C9               	movwf	??_scale+3
  2664  0DCC  160A  158A  2000  120A  158A  	fcall	stringdir
  2665  0DD1  00CA               	movwf	??_scale+4
  2666  0DD2  084A               	movf	??_scale+4,w
  2667  0DD3  00AB               	movwf	___flmul@b+3
  2668  0DD4  0849               	movf	??_scale+3,w
  2669  0DD5  00AA               	movwf	___flmul@b+2
  2670  0DD6  0848               	movf	??_scale+2,w
  2671  0DD7  00A9               	movwf	___flmul@b+1
  2672  0DD8  0847               	movf	??_scale+1,w
  2673  0DD9  00A8               	movwf	___flmul@b
  2674  0DDA  300A               	movlw	10
  2675  0DDB  00A0               	movwf	___awdiv@divisor
  2676  0DDC  3000               	movlw	0
  2677  0DDD  00A1               	movwf	___awdiv@divisor+1
  2678  0DDE  0854               	movf	scale@scl,w
  2679  0DDF  00A2               	movwf	___awdiv@dividend
  2680  0DE0  01A3               	clrf	___awdiv@dividend+1
  2681  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2682  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2683  0DE3  160A  158A  271B  120A  158A  	fcall	___awdiv
  2684  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0DEA  0820               	movf	?___awdiv,w
  2687  0DEB  00CB               	movwf	??_scale+5
  2688  0DEC  3001               	movlw	1
  2689  0DED                     u4205:
  2690  0DED  1003               	clrc
  2691  0DEE  0DCB               	rlf	??_scale+5,f
  2692  0DEF  3EFF               	addlw	-1
  2693  0DF0  1D03               	skipz
  2694  0DF1  2DED               	goto	u4205
  2695  0DF2  1003               	clrc
  2696  0DF3  0D4B               	rlf	??_scale+5,w
  2697  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2698  0DF5  0084               	movwf	4
  2699  0DF6  160A  158A  2000  120A  158A  	fcall	stringdir
  2700  0DFB  00CC               	movwf	??_scale+6
  2701  0DFC  160A  158A  2000  120A  158A  	fcall	stringdir
  2702  0E01  00CD               	movwf	??_scale+7
  2703  0E02  160A  158A  2000  120A  158A  	fcall	stringdir
  2704  0E07  00CE               	movwf	??_scale+8
  2705  0E08  160A  158A  2000  120A  158A  	fcall	stringdir
  2706  0E0D  00CF               	movwf	??_scale+9
  2707  0E0E  084F               	movf	??_scale+9,w
  2708  0E0F  00AF               	movwf	___flmul@a+3
  2709  0E10  084E               	movf	??_scale+8,w
  2710  0E11  00AE               	movwf	___flmul@a+2
  2711  0E12  084D               	movf	??_scale+7,w
  2712  0E13  00AD               	movwf	___flmul@a+1
  2713  0E14  084C               	movf	??_scale+6,w
  2714  0E15  00AC               	movwf	___flmul@a
  2715  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2716  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0E1D  082B               	movf	?___flmul+3,w
  2719  0E1E  00C5               	movwf	?_scale+3
  2720  0E1F  082A               	movf	?___flmul+2,w
  2721  0E20  00C4               	movwf	?_scale+2
  2722  0E21  0829               	movf	?___flmul+1,w
  2723  0E22  00C3               	movwf	?_scale+1
  2724  0E23  0828               	movf	?___flmul,w
  2725  0E24  00C2               	movwf	?_scale
  2726  0E25  2FFF               	goto	l280
  2727  0E26                     l2832:
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2730  0E26  0854               	movf	scale@scl,w
  2731  0E27  00C6               	movwf	??_scale
  2732  0E28  3001               	movlw	1
  2733  0E29                     u4215:
  2734  0E29  1003               	clrc
  2735  0E2A  0DC6               	rlf	??_scale,f
  2736  0E2B  3EFF               	addlw	-1
  2737  0E2C  1D03               	skipz
  2738  0E2D  2E29               	goto	u4215
  2739  0E2E  1003               	clrc
  2740  0E2F  0D46               	rlf	??_scale,w
  2741  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2742  0E31  0084               	movwf	4
  2743  0E32  160A  158A  2000  120A  158A  	fcall	stringdir
  2744  0E37  00C7               	movwf	??_scale+1
  2745  0E38  160A  158A  2000  120A  158A  	fcall	stringdir
  2746  0E3D  00C8               	movwf	??_scale+2
  2747  0E3E  160A  158A  2000  120A  158A  	fcall	stringdir
  2748  0E43  00C9               	movwf	??_scale+3
  2749  0E44  160A  158A  2000  120A  158A  	fcall	stringdir
  2750  0E49  00CA               	movwf	??_scale+4
  2751  0E4A  084A               	movf	??_scale+4,w
  2752  0E4B  00C5               	movwf	?_scale+3
  2753  0E4C  0849               	movf	??_scale+3,w
  2754  0E4D  00C4               	movwf	?_scale+2
  2755  0E4E  0848               	movf	??_scale+2,w
  2756  0E4F  00C3               	movwf	?_scale+1
  2757  0E50  0847               	movf	??_scale+1,w
  2758  0E51  00C2               	movwf	?_scale
  2759  0E52  2FFF               	goto	l280
  2760  0E53                     l2836:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2763  0E53  0854               	movf	scale@scl,w
  2764  0E54  3A80               	xorlw	128
  2765  0E55  3E12               	addlw	-238
  2766  0E56  1C03               	skipc
  2767  0E57  2E59               	goto	u4221
  2768  0E58  2E5A               	goto	u4220
  2769  0E59                     u4221:
  2770  0E59  2F44               	goto	l2844
  2771  0E5A                     u4220:
  2772  0E5A                     l2838:
  2773                           
  2774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2775  0E5A  300A               	movlw	10
  2776  0E5B  00A0               	movwf	___awdiv@divisor
  2777  0E5C  3000               	movlw	0
  2778  0E5D  00A1               	movwf	___awdiv@divisor+1
  2779  0E5E  0854               	movf	scale@scl,w
  2780  0E5F  00F4               	movwf	___awmod@dividend
  2781  0E60  01F5               	clrf	___awmod@dividend+1
  2782  0E61  1BF4               	btfsc	___awmod@dividend,7
  2783  0E62  03F5               	decf	___awmod@dividend+1,f
  2784  0E63  3064               	movlw	100
  2785  0E64  00F2               	movwf	___awmod@divisor
  2786  0E65  3000               	movlw	0
  2787  0E66  00F3               	movwf	___awmod@divisor+1
  2788  0E67  120A  158A  2007  120A  158A  	fcall	___awmod
  2789  0E6C  0873               	movf	?___awmod+1,w
  2790  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2791  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0E6F  00A3               	movwf	___awdiv@dividend+1
  2793  0E70  0872               	movf	?___awmod,w
  2794  0E71  00A2               	movwf	___awdiv@dividend
  2795  0E72  160A  158A  271B  120A  158A  	fcall	___awdiv
  2796  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0E79  0820               	movf	?___awdiv,w
  2799  0E7A  00C6               	movwf	??_scale
  2800  0E7B  3001               	movlw	1
  2801  0E7C                     u4235:
  2802  0E7C  1003               	clrc
  2803  0E7D  0DC6               	rlf	??_scale,f
  2804  0E7E  3EFF               	addlw	-1
  2805  0E7F  1D03               	skipz
  2806  0E80  2E7C               	goto	u4235
  2807  0E81  1003               	clrc
  2808  0E82  0D46               	rlf	??_scale,w
  2809  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2810  0E84  0084               	movwf	4
  2811  0E85  160A  158A  2000  120A  158A  	fcall	stringdir
  2812  0E8A  00C7               	movwf	??_scale+1
  2813  0E8B  160A  158A  2000  120A  158A  	fcall	stringdir
  2814  0E90  00C8               	movwf	??_scale+2
  2815  0E91  160A  158A  2000  120A  158A  	fcall	stringdir
  2816  0E96  00C9               	movwf	??_scale+3
  2817  0E97  160A  158A  2000  120A  158A  	fcall	stringdir
  2818  0E9C  00CA               	movwf	??_scale+4
  2819  0E9D  084A               	movf	??_scale+4,w
  2820  0E9E  00AB               	movwf	___flmul@b+3
  2821  0E9F  0849               	movf	??_scale+3,w
  2822  0EA0  00AA               	movwf	___flmul@b+2
  2823  0EA1  0848               	movf	??_scale+2,w
  2824  0EA2  00A9               	movwf	___flmul@b+1
  2825  0EA3  0847               	movf	??_scale+1,w
  2826  0EA4  00A8               	movwf	___flmul@b
  2827  0EA5  3064               	movlw	100
  2828  0EA6  00A0               	movwf	___awdiv@divisor
  2829  0EA7  3000               	movlw	0
  2830  0EA8  00A1               	movwf	___awdiv@divisor+1
  2831  0EA9  0854               	movf	scale@scl,w
  2832  0EAA  00A2               	movwf	___awdiv@dividend
  2833  0EAB  01A3               	clrf	___awdiv@dividend+1
  2834  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2835  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2836  0EAE  160A  158A  271B  120A  158A  	fcall	___awdiv
  2837  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0EB5  0820               	movf	?___awdiv,w
  2840  0EB6  00CB               	movwf	??_scale+5
  2841  0EB7  3001               	movlw	1
  2842  0EB8                     u4245:
  2843  0EB8  1003               	clrc
  2844  0EB9  0DCB               	rlf	??_scale+5,f
  2845  0EBA  3EFF               	addlw	-1
  2846  0EBB  1D03               	skipz
  2847  0EBC  2EB8               	goto	u4245
  2848  0EBD  1003               	clrc
  2849  0EBE  0D4B               	rlf	??_scale+5,w
  2850  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2851  0EC0  0084               	movwf	4
  2852  0EC1  160A  158A  2000  120A  158A  	fcall	stringdir
  2853  0EC6  00CC               	movwf	??_scale+6
  2854  0EC7  160A  158A  2000  120A  158A  	fcall	stringdir
  2855  0ECC  00CD               	movwf	??_scale+7
  2856  0ECD  160A  158A  2000  120A  158A  	fcall	stringdir
  2857  0ED2  00CE               	movwf	??_scale+8
  2858  0ED3  160A  158A  2000  120A  158A  	fcall	stringdir
  2859  0ED8  00CF               	movwf	??_scale+9
  2860  0ED9  084F               	movf	??_scale+9,w
  2861  0EDA  00AF               	movwf	___flmul@a+3
  2862  0EDB  084E               	movf	??_scale+8,w
  2863  0EDC  00AE               	movwf	___flmul@a+2
  2864  0EDD  084D               	movf	??_scale+7,w
  2865  0EDE  00AD               	movwf	___flmul@a+1
  2866  0EDF  084C               	movf	??_scale+6,w
  2867  0EE0  00AC               	movwf	___flmul@a
  2868  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2869  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0EE8  082B               	movf	?___flmul+3,w
  2872  0EE9  00D3               	movwf	_scale$1130+3
  2873  0EEA  082A               	movf	?___flmul+2,w
  2874  0EEB  00D2               	movwf	_scale$1130+2
  2875  0EEC  0829               	movf	?___flmul+1,w
  2876  0EED  00D1               	movwf	_scale$1130+1
  2877  0EEE  0828               	movf	?___flmul,w
  2878  0EEF  00D0               	movwf	_scale$1130
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2881  0EF0  300A               	movlw	10
  2882  0EF1  00F2               	movwf	___awmod@divisor
  2883  0EF2  3000               	movlw	0
  2884  0EF3  00F3               	movwf	___awmod@divisor+1
  2885  0EF4  0854               	movf	scale@scl,w
  2886  0EF5  00F4               	movwf	___awmod@dividend
  2887  0EF6  01F5               	clrf	___awmod@dividend+1
  2888  0EF7  1BF4               	btfsc	___awmod@dividend,7
  2889  0EF8  03F5               	decf	___awmod@dividend+1,f
  2890  0EF9  120A  158A  2007  120A  158A  	fcall	___awmod
  2891  0EFE  0872               	movf	?___awmod,w
  2892  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2893  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2894  0F01  00C6               	movwf	??_scale
  2895  0F02  3001               	movlw	1
  2896  0F03                     u4255:
  2897  0F03  1003               	clrc
  2898  0F04  0DC6               	rlf	??_scale,f
  2899  0F05  3EFF               	addlw	-1
  2900  0F06  1D03               	skipz
  2901  0F07  2F03               	goto	u4255
  2902  0F08  1003               	clrc
  2903  0F09  0D46               	rlf	??_scale,w
  2904  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2905  0F0B  0084               	movwf	4
  2906  0F0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2907  0F11  00C7               	movwf	??_scale+1
  2908  0F12  160A  158A  2000  120A  158A  	fcall	stringdir
  2909  0F17  00C8               	movwf	??_scale+2
  2910  0F18  160A  158A  2000  120A  158A  	fcall	stringdir
  2911  0F1D  00C9               	movwf	??_scale+3
  2912  0F1E  160A  158A  2000  120A  158A  	fcall	stringdir
  2913  0F23  00CA               	movwf	??_scale+4
  2914  0F24  084A               	movf	??_scale+4,w
  2915  0F25  00AB               	movwf	___flmul@b+3
  2916  0F26  0849               	movf	??_scale+3,w
  2917  0F27  00AA               	movwf	___flmul@b+2
  2918  0F28  0848               	movf	??_scale+2,w
  2919  0F29  00A9               	movwf	___flmul@b+1
  2920  0F2A  0847               	movf	??_scale+1,w
  2921  0F2B  00A8               	movwf	___flmul@b
  2922  0F2C  0853               	movf	_scale$1130+3,w
  2923  0F2D  00AF               	movwf	___flmul@a+3
  2924  0F2E  0852               	movf	_scale$1130+2,w
  2925  0F2F  00AE               	movwf	___flmul@a+2
  2926  0F30  0851               	movf	_scale$1130+1,w
  2927  0F31  00AD               	movwf	___flmul@a+1
  2928  0F32  0850               	movf	_scale$1130,w
  2929  0F33  00AC               	movwf	___flmul@a
  2930  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2931  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0F3B  082B               	movf	?___flmul+3,w
  2934  0F3C  00C5               	movwf	?_scale+3
  2935  0F3D  082A               	movf	?___flmul+2,w
  2936  0F3E  00C4               	movwf	?_scale+2
  2937  0F3F  0829               	movf	?___flmul+1,w
  2938  0F40  00C3               	movwf	?_scale+1
  2939  0F41  0828               	movf	?___flmul,w
  2940  0F42  00C2               	movwf	?_scale
  2941  0F43  2FFF               	goto	l280
  2942  0F44                     l2844:
  2943  0F44  0854               	movf	scale@scl,w
  2944  0F45  3A80               	xorlw	128
  2945  0F46  3E75               	addlw	-139
  2946  0F47  1C03               	skipc
  2947  0F48  2F4A               	goto	u4261
  2948  0F49  2F4B               	goto	u4260
  2949  0F4A                     u4261:
  2950  0F4A  2FD3               	goto	l2850
  2951  0F4B                     u4260:
  2952  0F4B                     l2846:
  2953                           
  2954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2955  0F4B  300A               	movlw	10
  2956  0F4C  00F2               	movwf	___awmod@divisor
  2957  0F4D  3000               	movlw	0
  2958  0F4E  00F3               	movwf	___awmod@divisor+1
  2959  0F4F  0854               	movf	scale@scl,w
  2960  0F50  00F4               	movwf	___awmod@dividend
  2961  0F51  01F5               	clrf	___awmod@dividend+1
  2962  0F52  1BF4               	btfsc	___awmod@dividend,7
  2963  0F53  03F5               	decf	___awmod@dividend+1,f
  2964  0F54  120A  158A  2007  120A  158A  	fcall	___awmod
  2965  0F59  0872               	movf	?___awmod,w
  2966  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2968  0F5C  00C6               	movwf	??_scale
  2969  0F5D  3001               	movlw	1
  2970  0F5E                     u4275:
  2971  0F5E  1003               	clrc
  2972  0F5F  0DC6               	rlf	??_scale,f
  2973  0F60  3EFF               	addlw	-1
  2974  0F61  1D03               	skipz
  2975  0F62  2F5E               	goto	u4275
  2976  0F63  1003               	clrc
  2977  0F64  0D46               	rlf	??_scale,w
  2978  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2979  0F66  0084               	movwf	4
  2980  0F67  160A  158A  2000  120A  158A  	fcall	stringdir
  2981  0F6C  00C7               	movwf	??_scale+1
  2982  0F6D  160A  158A  2000  120A  158A  	fcall	stringdir
  2983  0F72  00C8               	movwf	??_scale+2
  2984  0F73  160A  158A  2000  120A  158A  	fcall	stringdir
  2985  0F78  00C9               	movwf	??_scale+3
  2986  0F79  160A  158A  2000  120A  158A  	fcall	stringdir
  2987  0F7E  00CA               	movwf	??_scale+4
  2988  0F7F  084A               	movf	??_scale+4,w
  2989  0F80  00AB               	movwf	___flmul@b+3
  2990  0F81  0849               	movf	??_scale+3,w
  2991  0F82  00AA               	movwf	___flmul@b+2
  2992  0F83  0848               	movf	??_scale+2,w
  2993  0F84  00A9               	movwf	___flmul@b+1
  2994  0F85  0847               	movf	??_scale+1,w
  2995  0F86  00A8               	movwf	___flmul@b
  2996  0F87  300A               	movlw	10
  2997  0F88  00A0               	movwf	___awdiv@divisor
  2998  0F89  3000               	movlw	0
  2999  0F8A  00A1               	movwf	___awdiv@divisor+1
  3000  0F8B  0854               	movf	scale@scl,w
  3001  0F8C  00A2               	movwf	___awdiv@dividend
  3002  0F8D  01A3               	clrf	___awdiv@dividend+1
  3003  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3004  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3005  0F90  160A  158A  271B  120A  158A  	fcall	___awdiv
  3006  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0F97  0820               	movf	?___awdiv,w
  3009  0F98  00CB               	movwf	??_scale+5
  3010  0F99  3001               	movlw	1
  3011  0F9A                     u4285:
  3012  0F9A  1003               	clrc
  3013  0F9B  0DCB               	rlf	??_scale+5,f
  3014  0F9C  3EFF               	addlw	-1
  3015  0F9D  1D03               	skipz
  3016  0F9E  2F9A               	goto	u4285
  3017  0F9F  1003               	clrc
  3018  0FA0  0D4B               	rlf	??_scale+5,w
  3019  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3020  0FA2  0084               	movwf	4
  3021  0FA3  160A  158A  2000  120A  158A  	fcall	stringdir
  3022  0FA8  00CC               	movwf	??_scale+6
  3023  0FA9  160A  158A  2000  120A  158A  	fcall	stringdir
  3024  0FAE  00CD               	movwf	??_scale+7
  3025  0FAF  160A  158A  2000  120A  158A  	fcall	stringdir
  3026  0FB4  00CE               	movwf	??_scale+8
  3027  0FB5  160A  158A  2000  120A  158A  	fcall	stringdir
  3028  0FBA  00CF               	movwf	??_scale+9
  3029  0FBB  084F               	movf	??_scale+9,w
  3030  0FBC  00AF               	movwf	___flmul@a+3
  3031  0FBD  084E               	movf	??_scale+8,w
  3032  0FBE  00AE               	movwf	___flmul@a+2
  3033  0FBF  084D               	movf	??_scale+7,w
  3034  0FC0  00AD               	movwf	___flmul@a+1
  3035  0FC1  084C               	movf	??_scale+6,w
  3036  0FC2  00AC               	movwf	___flmul@a
  3037  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3038  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0FCA  082B               	movf	?___flmul+3,w
  3041  0FCB  00C5               	movwf	?_scale+3
  3042  0FCC  082A               	movf	?___flmul+2,w
  3043  0FCD  00C4               	movwf	?_scale+2
  3044  0FCE  0829               	movf	?___flmul+1,w
  3045  0FCF  00C3               	movwf	?_scale+1
  3046  0FD0  0828               	movf	?___flmul,w
  3047  0FD1  00C2               	movwf	?_scale
  3048  0FD2  2FFF               	goto	l280
  3049  0FD3                     l2850:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3052  0FD3  0854               	movf	scale@scl,w
  3053  0FD4  00C6               	movwf	??_scale
  3054  0FD5  3001               	movlw	1
  3055  0FD6                     u4295:
  3056  0FD6  1003               	clrc
  3057  0FD7  0DC6               	rlf	??_scale,f
  3058  0FD8  3EFF               	addlw	-1
  3059  0FD9  1D03               	skipz
  3060  0FDA  2FD6               	goto	u4295
  3061  0FDB  1003               	clrc
  3062  0FDC  0D46               	rlf	??_scale,w
  3063  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3064  0FDE  0084               	movwf	4
  3065  0FDF  160A  158A  2000  120A  158A  	fcall	stringdir
  3066  0FE4  00C7               	movwf	??_scale+1
  3067  0FE5  160A  158A  2000  120A  158A  	fcall	stringdir
  3068  0FEA  00C8               	movwf	??_scale+2
  3069  0FEB  160A  158A  2000  120A  158A  	fcall	stringdir
  3070  0FF0  00C9               	movwf	??_scale+3
  3071  0FF1  160A  158A  2000  120A  158A  	fcall	stringdir
  3072  0FF6  00CA               	movwf	??_scale+4
  3073  0FF7  084A               	movf	??_scale+4,w
  3074  0FF8  00C5               	movwf	?_scale+3
  3075  0FF9  0849               	movf	??_scale+3,w
  3076  0FFA  00C4               	movwf	?_scale+2
  3077  0FFB  0848               	movf	??_scale+2,w
  3078  0FFC  00C3               	movwf	?_scale+1
  3079  0FFD  0847               	movf	??_scale+1,w
  3080  0FFE  00C2               	movwf	?_scale
  3081  0FFF                     l280:
  3082  0FFF  0008               	return
  3083  1000                     __end_of_scale:
  3084                           
  3085                           	psect	text3
  3086  0807                     __ptext3:	
  3087 ;; *************** function ___awmod *****************
  3088 ;; Defined at:
  3089 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  divisor         2    2[COMMON] int 
  3092 ;;  dividend        2    4[COMMON] int 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  sign            1    8[COMMON] unsigned char 
  3095 ;;  counter         1    7[COMMON] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  2    2[COMMON] int 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2, status,0
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3105 ;;      Params:         4       0       0       0       0
  3106 ;;      Locals:         2       0       0       0       0
  3107 ;;      Temps:          1       0       0       0       0
  3108 ;;      Totals:         7       0       0       0       0
  3109 ;;Total ram usage:        7 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_scale
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           
  3120                           ;psect for function ___awmod
  3121  0807                     ___awmod:
  3122  0807                     l2368:	
  3123                           ;incstack = 0
  3124                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3125                           
  3126  0807  01F8               	clrf	___awmod@sign
  3127  0808                     l2370:
  3128  0808  1FF5               	btfss	___awmod@dividend+1,7
  3129  0809  280B               	goto	u2971
  3130  080A  280C               	goto	u2970
  3131  080B                     u2971:
  3132  080B  2813               	goto	l2376
  3133  080C                     u2970:
  3134  080C                     l2372:
  3135  080C  09F4               	comf	___awmod@dividend,f
  3136  080D  09F5               	comf	___awmod@dividend+1,f
  3137  080E  0AF4               	incf	___awmod@dividend,f
  3138  080F  1903               	skipnz
  3139  0810  0AF5               	incf	___awmod@dividend+1,f
  3140  0811                     l2374:
  3141  0811  01F8               	clrf	___awmod@sign
  3142  0812  0AF8               	incf	___awmod@sign,f
  3143  0813                     l2376:
  3144  0813  1FF3               	btfss	___awmod@divisor+1,7
  3145  0814  2816               	goto	u2981
  3146  0815  2817               	goto	u2980
  3147  0816                     u2981:
  3148  0816  281C               	goto	l2380
  3149  0817                     u2980:
  3150  0817                     l2378:
  3151  0817  09F2               	comf	___awmod@divisor,f
  3152  0818  09F3               	comf	___awmod@divisor+1,f
  3153  0819  0AF2               	incf	___awmod@divisor,f
  3154  081A  1903               	skipnz
  3155  081B  0AF3               	incf	___awmod@divisor+1,f
  3156  081C                     l2380:
  3157  081C  0872               	movf	___awmod@divisor,w
  3158  081D  0473               	iorwf	___awmod@divisor+1,w
  3159  081E  1903               	btfsc	3,2
  3160  081F  2821               	goto	u2991
  3161  0820  2822               	goto	u2990
  3162  0821                     u2991:
  3163  0821  2851               	goto	l2398
  3164  0822                     u2990:
  3165  0822                     l2382:
  3166  0822  01F7               	clrf	___awmod@counter
  3167  0823  0AF7               	incf	___awmod@counter,f
  3168  0824  2830               	goto	l2388
  3169  0825                     l2384:
  3170  0825  3001               	movlw	1
  3171  0826                     u3005:
  3172  0826  1003               	clrc
  3173  0827  0DF2               	rlf	___awmod@divisor,f
  3174  0828  0DF3               	rlf	___awmod@divisor+1,f
  3175  0829  3EFF               	addlw	-1
  3176  082A  1D03               	skipz
  3177  082B  2826               	goto	u3005
  3178  082C                     l2386:
  3179  082C  3001               	movlw	1
  3180  082D  00F6               	movwf	??___awmod
  3181  082E  0876               	movf	??___awmod,w
  3182  082F  07F7               	addwf	___awmod@counter,f
  3183  0830                     l2388:
  3184  0830  1FF3               	btfss	___awmod@divisor+1,7
  3185  0831  2833               	goto	u3011
  3186  0832  2834               	goto	u3010
  3187  0833                     u3011:
  3188  0833  2825               	goto	l2384
  3189  0834                     u3010:
  3190  0834                     l2390:
  3191  0834  0873               	movf	___awmod@divisor+1,w
  3192  0835  0275               	subwf	___awmod@dividend+1,w
  3193  0836  1D03               	skipz
  3194  0837  283A               	goto	u3025
  3195  0838  0872               	movf	___awmod@divisor,w
  3196  0839  0274               	subwf	___awmod@dividend,w
  3197  083A                     u3025:
  3198  083A  1C03               	skipc
  3199  083B  283D               	goto	u3021
  3200  083C  283E               	goto	u3020
  3201  083D                     u3021:
  3202  083D  2844               	goto	l2394
  3203  083E                     u3020:
  3204  083E                     l2392:
  3205  083E  0872               	movf	___awmod@divisor,w
  3206  083F  02F4               	subwf	___awmod@dividend,f
  3207  0840  0873               	movf	___awmod@divisor+1,w
  3208  0841  1C03               	skipc
  3209  0842  03F5               	decf	___awmod@dividend+1,f
  3210  0843  02F5               	subwf	___awmod@dividend+1,f
  3211  0844                     l2394:
  3212  0844  3001               	movlw	1
  3213  0845                     u3035:
  3214  0845  1003               	clrc
  3215  0846  0CF3               	rrf	___awmod@divisor+1,f
  3216  0847  0CF2               	rrf	___awmod@divisor,f
  3217  0848  3EFF               	addlw	-1
  3218  0849  1D03               	skipz
  3219  084A  2845               	goto	u3035
  3220  084B                     l2396:
  3221  084B  3001               	movlw	1
  3222  084C  02F7               	subwf	___awmod@counter,f
  3223  084D  1D03               	btfss	3,2
  3224  084E  2850               	goto	u3041
  3225  084F  2851               	goto	u3040
  3226  0850                     u3041:
  3227  0850  2834               	goto	l2390
  3228  0851                     u3040:
  3229  0851                     l2398:
  3230  0851  0878               	movf	___awmod@sign,w
  3231  0852  1903               	btfsc	3,2
  3232  0853  2855               	goto	u3051
  3233  0854  2856               	goto	u3050
  3234  0855                     u3051:
  3235  0855  285B               	goto	l2402
  3236  0856                     u3050:
  3237  0856                     l2400:
  3238  0856  09F4               	comf	___awmod@dividend,f
  3239  0857  09F5               	comf	___awmod@dividend+1,f
  3240  0858  0AF4               	incf	___awmod@dividend,f
  3241  0859  1903               	skipnz
  3242  085A  0AF5               	incf	___awmod@dividend+1,f
  3243  085B                     l2402:
  3244  085B  0875               	movf	___awmod@dividend+1,w
  3245  085C  00F3               	movwf	?___awmod+1
  3246  085D  0874               	movf	___awmod@dividend,w
  3247  085E  00F2               	movwf	?___awmod
  3248  085F                     l551:
  3249  085F  0008               	return
  3250  0860                     __end_of___awmod:
  3251                           
  3252                           	psect	text4
  3253  1F1B                     __ptext4:	
  3254 ;; *************** function ___awdiv *****************
  3255 ;; Defined at:
  3256 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  divisor         2    0[BANK0 ] int 
  3259 ;;  dividend        2    2[BANK0 ] int 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  quotient        2    6[BANK0 ] int 
  3262 ;;  sign            1    5[BANK0 ] unsigned char 
  3263 ;;  counter         1    4[BANK0 ] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  2    0[BANK0 ] int 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       4       0       0       0
  3274 ;;      Locals:         0       4       0       0       0
  3275 ;;      Temps:          1       0       0       0       0
  3276 ;;      Totals:         1       8       0       0       0
  3277 ;;Total ram usage:        9 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    1
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_scale
  3284 ;;		_sprintf
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           
  3289                           ;psect for function ___awdiv
  3290  1F1B                     ___awdiv:
  3291  1F1B                     l2324:	
  3292                           ;incstack = 0
  3293                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3294                           
  3295  1F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3296  1F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3297  1F1D  01A5               	clrf	___awdiv@sign
  3298  1F1E                     l2326:
  3299  1F1E  1FA1               	btfss	___awdiv@divisor+1,7
  3300  1F1F  2F21               	goto	u2871
  3301  1F20  2F22               	goto	u2870
  3302  1F21                     u2871:
  3303  1F21  2F29               	goto	l2332
  3304  1F22                     u2870:
  3305  1F22                     l2328:
  3306  1F22  09A0               	comf	___awdiv@divisor,f
  3307  1F23  09A1               	comf	___awdiv@divisor+1,f
  3308  1F24  0AA0               	incf	___awdiv@divisor,f
  3309  1F25  1903               	skipnz
  3310  1F26  0AA1               	incf	___awdiv@divisor+1,f
  3311  1F27                     l2330:
  3312  1F27  01A5               	clrf	___awdiv@sign
  3313  1F28  0AA5               	incf	___awdiv@sign,f
  3314  1F29                     l2332:
  3315  1F29  1FA3               	btfss	___awdiv@dividend+1,7
  3316  1F2A  2F2C               	goto	u2881
  3317  1F2B  2F2D               	goto	u2880
  3318  1F2C                     u2881:
  3319  1F2C  2F36               	goto	l2338
  3320  1F2D                     u2880:
  3321  1F2D                     l2334:
  3322  1F2D  09A2               	comf	___awdiv@dividend,f
  3323  1F2E  09A3               	comf	___awdiv@dividend+1,f
  3324  1F2F  0AA2               	incf	___awdiv@dividend,f
  3325  1F30  1903               	skipnz
  3326  1F31  0AA3               	incf	___awdiv@dividend+1,f
  3327  1F32                     l2336:
  3328  1F32  3001               	movlw	1
  3329  1F33  00F9               	movwf	??___awdiv
  3330  1F34  0879               	movf	??___awdiv,w
  3331  1F35  06A5               	xorwf	___awdiv@sign,f
  3332  1F36                     l2338:
  3333  1F36  01A6               	clrf	___awdiv@quotient
  3334  1F37  01A7               	clrf	___awdiv@quotient+1
  3335  1F38                     l2340:
  3336  1F38  0820               	movf	___awdiv@divisor,w
  3337  1F39  0421               	iorwf	___awdiv@divisor+1,w
  3338  1F3A  1903               	btfsc	3,2
  3339  1F3B  2F3D               	goto	u2891
  3340  1F3C  2F3E               	goto	u2890
  3341  1F3D                     u2891:
  3342  1F3D  2F75               	goto	l2360
  3343  1F3E                     u2890:
  3344  1F3E                     l2342:
  3345  1F3E  01A4               	clrf	___awdiv@counter
  3346  1F3F  0AA4               	incf	___awdiv@counter,f
  3347  1F40  2F4C               	goto	l2348
  3348  1F41                     l2344:
  3349  1F41  3001               	movlw	1
  3350  1F42                     u2905:
  3351  1F42  1003               	clrc
  3352  1F43  0DA0               	rlf	___awdiv@divisor,f
  3353  1F44  0DA1               	rlf	___awdiv@divisor+1,f
  3354  1F45  3EFF               	addlw	-1
  3355  1F46  1D03               	skipz
  3356  1F47  2F42               	goto	u2905
  3357  1F48                     l2346:
  3358  1F48  3001               	movlw	1
  3359  1F49  00F9               	movwf	??___awdiv
  3360  1F4A  0879               	movf	??___awdiv,w
  3361  1F4B  07A4               	addwf	___awdiv@counter,f
  3362  1F4C                     l2348:
  3363  1F4C  1FA1               	btfss	___awdiv@divisor+1,7
  3364  1F4D  2F4F               	goto	u2911
  3365  1F4E  2F50               	goto	u2910
  3366  1F4F                     u2911:
  3367  1F4F  2F41               	goto	l2344
  3368  1F50                     u2910:
  3369  1F50                     l2350:
  3370  1F50  3001               	movlw	1
  3371  1F51                     u2925:
  3372  1F51  1003               	clrc
  3373  1F52  0DA6               	rlf	___awdiv@quotient,f
  3374  1F53  0DA7               	rlf	___awdiv@quotient+1,f
  3375  1F54  3EFF               	addlw	-1
  3376  1F55  1D03               	skipz
  3377  1F56  2F51               	goto	u2925
  3378  1F57  0821               	movf	___awdiv@divisor+1,w
  3379  1F58  0223               	subwf	___awdiv@dividend+1,w
  3380  1F59  1D03               	skipz
  3381  1F5A  2F5D               	goto	u2935
  3382  1F5B  0820               	movf	___awdiv@divisor,w
  3383  1F5C  0222               	subwf	___awdiv@dividend,w
  3384  1F5D                     u2935:
  3385  1F5D  1C03               	skipc
  3386  1F5E  2F60               	goto	u2931
  3387  1F5F  2F61               	goto	u2930
  3388  1F60                     u2931:
  3389  1F60  2F68               	goto	l2356
  3390  1F61                     u2930:
  3391  1F61                     l2352:
  3392  1F61  0820               	movf	___awdiv@divisor,w
  3393  1F62  02A2               	subwf	___awdiv@dividend,f
  3394  1F63  0821               	movf	___awdiv@divisor+1,w
  3395  1F64  1C03               	skipc
  3396  1F65  03A3               	decf	___awdiv@dividend+1,f
  3397  1F66  02A3               	subwf	___awdiv@dividend+1,f
  3398  1F67                     l2354:
  3399  1F67  1426               	bsf	___awdiv@quotient,0
  3400  1F68                     l2356:
  3401  1F68  3001               	movlw	1
  3402  1F69                     u2945:
  3403  1F69  1003               	clrc
  3404  1F6A  0CA1               	rrf	___awdiv@divisor+1,f
  3405  1F6B  0CA0               	rrf	___awdiv@divisor,f
  3406  1F6C  3EFF               	addlw	-1
  3407  1F6D  1D03               	skipz
  3408  1F6E  2F69               	goto	u2945
  3409  1F6F                     l2358:
  3410  1F6F  3001               	movlw	1
  3411  1F70  02A4               	subwf	___awdiv@counter,f
  3412  1F71  1D03               	btfss	3,2
  3413  1F72  2F74               	goto	u2951
  3414  1F73  2F75               	goto	u2950
  3415  1F74                     u2951:
  3416  1F74  2F50               	goto	l2350
  3417  1F75                     u2950:
  3418  1F75                     l2360:
  3419  1F75  0825               	movf	___awdiv@sign,w
  3420  1F76  1903               	btfsc	3,2
  3421  1F77  2F79               	goto	u2961
  3422  1F78  2F7A               	goto	u2960
  3423  1F79                     u2961:
  3424  1F79  2F7F               	goto	l2364
  3425  1F7A                     u2960:
  3426  1F7A                     l2362:
  3427  1F7A  09A6               	comf	___awdiv@quotient,f
  3428  1F7B  09A7               	comf	___awdiv@quotient+1,f
  3429  1F7C  0AA6               	incf	___awdiv@quotient,f
  3430  1F7D  1903               	skipnz
  3431  1F7E  0AA7               	incf	___awdiv@quotient+1,f
  3432  1F7F                     l2364:
  3433  1F7F  0827               	movf	___awdiv@quotient+1,w
  3434  1F80  00A1               	movwf	?___awdiv+1
  3435  1F81  0826               	movf	___awdiv@quotient,w
  3436  1F82  00A0               	movwf	?___awdiv
  3437  1F83                     l538:
  3438  1F83  0008               	return
  3439  1F84                     __end_of___awdiv:
  3440                           
  3441                           	psect	text5
  3442  1C5B                     __ptext5:	
  3443 ;; *************** function _isdigit *****************
  3444 ;; Defined at:
  3445 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  c               1    wreg     unsigned char 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  c               1    3[COMMON] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;		None               void
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3459 ;;      Params:         0       0       0       0       0
  3460 ;;      Locals:         2       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0
  3462 ;;      Totals:         2       0       0       0       0
  3463 ;;Total ram usage:        2 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:    1
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_sprintf
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           
  3474                           ;psect for function _isdigit
  3475  1C5B                     _isdigit:
  3476                           
  3477                           ;incstack = 0
  3478                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3479                           ;isdigit@c stored from wreg
  3480  1C5B  00F3               	movwf	isdigit@c
  3481  1C5C                     l2854:
  3482  1C5C  01F2               	clrf	_isdigit$948
  3483  1C5D                     l2856:
  3484  1C5D  303A               	movlw	58
  3485  1C5E  0273               	subwf	isdigit@c,w
  3486  1C5F  1803               	skipnc
  3487  1C60  2C62               	goto	u4301
  3488  1C61  2C63               	goto	u4300
  3489  1C62                     u4301:
  3490  1C62  2C6B               	goto	l2862
  3491  1C63                     u4300:
  3492  1C63                     l2858:
  3493  1C63  3030               	movlw	48
  3494  1C64  0273               	subwf	isdigit@c,w
  3495  1C65  1C03               	skipc
  3496  1C66  2C68               	goto	u4311
  3497  1C67  2C69               	goto	u4310
  3498  1C68                     u4311:
  3499  1C68  2C6B               	goto	l2862
  3500  1C69                     u4310:
  3501  1C69                     l2860:
  3502  1C69  01F2               	clrf	_isdigit$948
  3503  1C6A  0AF2               	incf	_isdigit$948,f
  3504  1C6B                     l2862:
  3505  1C6B  0C72               	rrf	_isdigit$948,w
  3506  1C6C                     l872:
  3507  1C6C  0008               	return
  3508  1C6D                     __end_of_isdigit:
  3509                           
  3510                           	psect	text6
  3511  12F0                     __ptext6:	
  3512 ;; *************** function _fround *****************
  3513 ;; Defined at:
  3514 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  prec            1    wreg     unsigned char 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  prec            1   53[BANK0 ] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  4   34[BANK0 ] unsigned char 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3528 ;;      Params:         0       4       0       0       0
  3529 ;;      Locals:         0       9       0       0       0
  3530 ;;      Temps:          0       7       0       0       0
  3531 ;;      Totals:         0      20       0       0       0
  3532 ;;Total ram usage:       20 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    3
  3535 ;; This function calls:
  3536 ;;		___flmul
  3537 ;;		___lwdiv
  3538 ;;		___lwmod
  3539 ;; This function is called by:
  3540 ;;		_sprintf
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           
  3545                           ;psect for function _fround
  3546  12F0                     _fround:
  3547                           
  3548                           ;incstack = 0
  3549                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3550                           ;fround@prec stored from wreg
  3551  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  3552  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  3553  12F2  00D5               	movwf	fround@prec
  3554  12F3                     l3664:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3557  12F3  306E               	movlw	110
  3558  12F4  0255               	subwf	fround@prec,w
  3559  12F5  1C03               	skipc
  3560  12F6  2AF8               	goto	u5741
  3561  12F7  2AF9               	goto	u5740
  3562  12F8                     u5741:
  3563  12F8  2C08               	goto	l3672
  3564  12F9                     u5740:
  3565  12F9                     l3666:
  3566                           
  3567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3568  12F9  303F               	movlw	63
  3569  12FA  00AB               	movwf	___flmul@b+3
  3570  12FB  3000               	movlw	0
  3571  12FC  00AA               	movwf	___flmul@b+2
  3572  12FD  3000               	movlw	0
  3573  12FE  00A9               	movwf	___flmul@b+1
  3574  12FF  3000               	movlw	0
  3575  1300  00A8               	movwf	___flmul@b
  3576  1301  3064               	movlw	100
  3577  1302  00A0               	movwf	___lwdiv@divisor
  3578  1303  3000               	movlw	0
  3579  1304  00A1               	movwf	___lwdiv@divisor+1
  3580  1305  0855               	movf	fround@prec,w
  3581  1306  00C6               	movwf	??_fround
  3582  1307  01C7               	clrf	??_fround+1
  3583  1308  0846               	movf	??_fround,w
  3584  1309  00A2               	movwf	___lwdiv@dividend
  3585  130A  0847               	movf	??_fround+1,w
  3586  130B  00A3               	movwf	___lwdiv@dividend+1
  3587  130C  160A  158A  2577  160A  118A  	fcall	___lwdiv
  3588  1311  1283               	bcf	3,5	;RP0=0, select bank0
  3589  1312  1303               	bcf	3,6	;RP1=0, select bank0
  3590  1313  0820               	movf	?___lwdiv,w
  3591  1314  00C8               	movwf	??_fround+2
  3592  1315  3001               	movlw	1
  3593  1316                     u5755:
  3594  1316  1003               	clrc
  3595  1317  0DC8               	rlf	??_fround+2,f
  3596  1318  3EFF               	addlw	-1
  3597  1319  1D03               	skipz
  3598  131A  2B16               	goto	u5755
  3599  131B  1003               	clrc
  3600  131C  0D48               	rlf	??_fround+2,w
  3601  131D  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3602  131E  0084               	movwf	4
  3603  131F  160A  158A  2000  160A  118A  	fcall	stringdir
  3604  1324  00C9               	movwf	??_fround+3
  3605  1325  160A  158A  2000  160A  118A  	fcall	stringdir
  3606  132A  00CA               	movwf	??_fround+4
  3607  132B  160A  158A  2000  160A  118A  	fcall	stringdir
  3608  1330  00CB               	movwf	??_fround+5
  3609  1331  160A  158A  2000  160A  118A  	fcall	stringdir
  3610  1336  00CC               	movwf	??_fround+6
  3611  1337  084C               	movf	??_fround+6,w
  3612  1338  00AF               	movwf	___flmul@a+3
  3613  1339  084B               	movf	??_fround+5,w
  3614  133A  00AE               	movwf	___flmul@a+2
  3615  133B  084A               	movf	??_fround+4,w
  3616  133C  00AD               	movwf	___flmul@a+1
  3617  133D  0849               	movf	??_fround+3,w
  3618  133E  00AC               	movwf	___flmul@a
  3619  133F  120A  158A  213C  160A  118A  	fcall	___flmul
  3620  1344  1283               	bcf	3,5	;RP0=0, select bank0
  3621  1345  1303               	bcf	3,6	;RP1=0, select bank0
  3622  1346  082B               	movf	?___flmul+3,w
  3623  1347  00D4               	movwf	_fround$1128+3
  3624  1348  082A               	movf	?___flmul+2,w
  3625  1349  00D3               	movwf	_fround$1128+2
  3626  134A  0829               	movf	?___flmul+1,w
  3627  134B  00D2               	movwf	_fround$1128+1
  3628  134C  0828               	movf	?___flmul,w
  3629  134D  00D1               	movwf	_fround$1128
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3632  134E  300A               	movlw	10
  3633  134F  00A0               	movwf	___lwdiv@divisor
  3634  1350  3000               	movlw	0
  3635  1351  00A1               	movwf	___lwdiv@divisor+1
  3636  1352  0855               	movf	fround@prec,w
  3637  1353  00C6               	movwf	??_fround
  3638  1354  01C7               	clrf	??_fround+1
  3639  1355  0846               	movf	??_fround,w
  3640  1356  00F4               	movwf	___lwmod@dividend
  3641  1357  0847               	movf	??_fround+1,w
  3642  1358  00F5               	movwf	___lwmod@dividend+1
  3643  1359  3064               	movlw	100
  3644  135A  00F2               	movwf	___lwmod@divisor
  3645  135B  3000               	movlw	0
  3646  135C  00F3               	movwf	___lwmod@divisor+1
  3647  135D  160A  158A  253D  160A  118A  	fcall	___lwmod
  3648  1362  0873               	movf	?___lwmod+1,w
  3649  1363  1283               	bcf	3,5	;RP0=0, select bank0
  3650  1364  1303               	bcf	3,6	;RP1=0, select bank0
  3651  1365  00A3               	movwf	___lwdiv@dividend+1
  3652  1366  0872               	movf	?___lwmod,w
  3653  1367  00A2               	movwf	___lwdiv@dividend
  3654  1368  160A  158A  2577  160A  118A  	fcall	___lwdiv
  3655  136D  1283               	bcf	3,5	;RP0=0, select bank0
  3656  136E  1303               	bcf	3,6	;RP1=0, select bank0
  3657  136F  0820               	movf	?___lwdiv,w
  3658  1370  00C8               	movwf	??_fround+2
  3659  1371  3001               	movlw	1
  3660  1372                     u5765:
  3661  1372  1003               	clrc
  3662  1373  0DC8               	rlf	??_fround+2,f
  3663  1374  3EFF               	addlw	-1
  3664  1375  1D03               	skipz
  3665  1376  2B72               	goto	u5765
  3666  1377  1003               	clrc
  3667  1378  0D48               	rlf	??_fround+2,w
  3668  1379  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3669  137A  0084               	movwf	4
  3670  137B  160A  158A  2000  160A  118A  	fcall	stringdir
  3671  1380  00C9               	movwf	??_fround+3
  3672  1381  160A  158A  2000  160A  118A  	fcall	stringdir
  3673  1386  00CA               	movwf	??_fround+4
  3674  1387  160A  158A  2000  160A  118A  	fcall	stringdir
  3675  138C  00CB               	movwf	??_fround+5
  3676  138D  160A  158A  2000  160A  118A  	fcall	stringdir
  3677  1392  00CC               	movwf	??_fround+6
  3678  1393  084C               	movf	??_fround+6,w
  3679  1394  00AB               	movwf	___flmul@b+3
  3680  1395  084B               	movf	??_fround+5,w
  3681  1396  00AA               	movwf	___flmul@b+2
  3682  1397  084A               	movf	??_fround+4,w
  3683  1398  00A9               	movwf	___flmul@b+1
  3684  1399  0849               	movf	??_fround+3,w
  3685  139A  00A8               	movwf	___flmul@b
  3686  139B  0854               	movf	_fround$1128+3,w
  3687  139C  00AF               	movwf	___flmul@a+3
  3688  139D  0853               	movf	_fround$1128+2,w
  3689  139E  00AE               	movwf	___flmul@a+2
  3690  139F  0852               	movf	_fround$1128+1,w
  3691  13A0  00AD               	movwf	___flmul@a+1
  3692  13A1  0851               	movf	_fround$1128,w
  3693  13A2  00AC               	movwf	___flmul@a
  3694  13A3  120A  158A  213C  160A  118A  	fcall	___flmul
  3695  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  3696  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  3697  13AA  082B               	movf	?___flmul+3,w
  3698  13AB  00D0               	movwf	_fround$1129+3
  3699  13AC  082A               	movf	?___flmul+2,w
  3700  13AD  00CF               	movwf	_fround$1129+2
  3701  13AE  0829               	movf	?___flmul+1,w
  3702  13AF  00CE               	movwf	_fround$1129+1
  3703  13B0  0828               	movf	?___flmul,w
  3704  13B1  00CD               	movwf	_fround$1129
  3705                           
  3706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3707  13B2  300A               	movlw	10
  3708  13B3  00F2               	movwf	___lwmod@divisor
  3709  13B4  3000               	movlw	0
  3710  13B5  00F3               	movwf	___lwmod@divisor+1
  3711  13B6  0855               	movf	fround@prec,w
  3712  13B7  00C6               	movwf	??_fround
  3713  13B8  01C7               	clrf	??_fround+1
  3714  13B9  0846               	movf	??_fround,w
  3715  13BA  00F4               	movwf	___lwmod@dividend
  3716  13BB  0847               	movf	??_fround+1,w
  3717  13BC  00F5               	movwf	___lwmod@dividend+1
  3718  13BD  160A  158A  253D  160A  118A  	fcall	___lwmod
  3719  13C2  0872               	movf	?___lwmod,w
  3720  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  3721  13C4  1303               	bcf	3,6	;RP1=0, select bank0
  3722  13C5  00C8               	movwf	??_fround+2
  3723  13C6  3001               	movlw	1
  3724  13C7                     u5775:
  3725  13C7  1003               	clrc
  3726  13C8  0DC8               	rlf	??_fround+2,f
  3727  13C9  3EFF               	addlw	-1
  3728  13CA  1D03               	skipz
  3729  13CB  2BC7               	goto	u5775
  3730  13CC  1003               	clrc
  3731  13CD  0D48               	rlf	??_fround+2,w
  3732  13CE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3733  13CF  0084               	movwf	4
  3734  13D0  160A  158A  2000  160A  118A  	fcall	stringdir
  3735  13D5  00C9               	movwf	??_fround+3
  3736  13D6  160A  158A  2000  160A  118A  	fcall	stringdir
  3737  13DB  00CA               	movwf	??_fround+4
  3738  13DC  160A  158A  2000  160A  118A  	fcall	stringdir
  3739  13E1  00CB               	movwf	??_fround+5
  3740  13E2  160A  158A  2000  160A  118A  	fcall	stringdir
  3741  13E7  00CC               	movwf	??_fround+6
  3742  13E8  084C               	movf	??_fround+6,w
  3743  13E9  00AB               	movwf	___flmul@b+3
  3744  13EA  084B               	movf	??_fround+5,w
  3745  13EB  00AA               	movwf	___flmul@b+2
  3746  13EC  084A               	movf	??_fround+4,w
  3747  13ED  00A9               	movwf	___flmul@b+1
  3748  13EE  0849               	movf	??_fround+3,w
  3749  13EF  00A8               	movwf	___flmul@b
  3750  13F0  0850               	movf	_fround$1129+3,w
  3751  13F1  00AF               	movwf	___flmul@a+3
  3752  13F2  084F               	movf	_fround$1129+2,w
  3753  13F3  00AE               	movwf	___flmul@a+2
  3754  13F4  084E               	movf	_fround$1129+1,w
  3755  13F5  00AD               	movwf	___flmul@a+1
  3756  13F6  084D               	movf	_fround$1129,w
  3757  13F7  00AC               	movwf	___flmul@a
  3758  13F8  120A  158A  213C  160A  118A  	fcall	___flmul
  3759  13FD  1283               	bcf	3,5	;RP0=0, select bank0
  3760  13FE  1303               	bcf	3,6	;RP1=0, select bank0
  3761  13FF  082B               	movf	?___flmul+3,w
  3762  1400  00C5               	movwf	?_fround+3
  3763  1401  082A               	movf	?___flmul+2,w
  3764  1402  00C4               	movwf	?_fround+2
  3765  1403  0829               	movf	?___flmul+1,w
  3766  1404  00C3               	movwf	?_fround+1
  3767  1405  0828               	movf	?___flmul,w
  3768  1406  00C2               	movwf	?_fround
  3769  1407  2CFC               	goto	l273
  3770  1408                     l3672:
  3771  1408  300B               	movlw	11
  3772  1409  0255               	subwf	fround@prec,w
  3773  140A  1C03               	skipc
  3774  140B  2C0D               	goto	u5781
  3775  140C  2C0E               	goto	u5780
  3776  140D                     u5781:
  3777  140D  2CB9               	goto	l3678
  3778  140E                     u5780:
  3779  140E                     l3674:
  3780                           
  3781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3782  140E  303F               	movlw	63
  3783  140F  00AB               	movwf	___flmul@b+3
  3784  1410  3000               	movlw	0
  3785  1411  00AA               	movwf	___flmul@b+2
  3786  1412  3000               	movlw	0
  3787  1413  00A9               	movwf	___flmul@b+1
  3788  1414  3000               	movlw	0
  3789  1415  00A8               	movwf	___flmul@b
  3790  1416  300A               	movlw	10
  3791  1417  00A0               	movwf	___lwdiv@divisor
  3792  1418  3000               	movlw	0
  3793  1419  00A1               	movwf	___lwdiv@divisor+1
  3794  141A  0855               	movf	fround@prec,w
  3795  141B  00C6               	movwf	??_fround
  3796  141C  01C7               	clrf	??_fround+1
  3797  141D  0846               	movf	??_fround,w
  3798  141E  00A2               	movwf	___lwdiv@dividend
  3799  141F  0847               	movf	??_fround+1,w
  3800  1420  00A3               	movwf	___lwdiv@dividend+1
  3801  1421  160A  158A  2577  160A  118A  	fcall	___lwdiv
  3802  1426  1283               	bcf	3,5	;RP0=0, select bank0
  3803  1427  1303               	bcf	3,6	;RP1=0, select bank0
  3804  1428  0820               	movf	?___lwdiv,w
  3805  1429  00C8               	movwf	??_fround+2
  3806  142A  3001               	movlw	1
  3807  142B                     u5795:
  3808  142B  1003               	clrc
  3809  142C  0DC8               	rlf	??_fround+2,f
  3810  142D  3EFF               	addlw	-1
  3811  142E  1D03               	skipz
  3812  142F  2C2B               	goto	u5795
  3813  1430  1003               	clrc
  3814  1431  0D48               	rlf	??_fround+2,w
  3815  1432  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3816  1433  0084               	movwf	4
  3817  1434  160A  158A  2000  160A  118A  	fcall	stringdir
  3818  1439  00C9               	movwf	??_fround+3
  3819  143A  160A  158A  2000  160A  118A  	fcall	stringdir
  3820  143F  00CA               	movwf	??_fround+4
  3821  1440  160A  158A  2000  160A  118A  	fcall	stringdir
  3822  1445  00CB               	movwf	??_fround+5
  3823  1446  160A  158A  2000  160A  118A  	fcall	stringdir
  3824  144B  00CC               	movwf	??_fround+6
  3825  144C  084C               	movf	??_fround+6,w
  3826  144D  00AF               	movwf	___flmul@a+3
  3827  144E  084B               	movf	??_fround+5,w
  3828  144F  00AE               	movwf	___flmul@a+2
  3829  1450  084A               	movf	??_fround+4,w
  3830  1451  00AD               	movwf	___flmul@a+1
  3831  1452  0849               	movf	??_fround+3,w
  3832  1453  00AC               	movwf	___flmul@a
  3833  1454  120A  158A  213C  160A  118A  	fcall	___flmul
  3834  1459  1283               	bcf	3,5	;RP0=0, select bank0
  3835  145A  1303               	bcf	3,6	;RP1=0, select bank0
  3836  145B  082B               	movf	?___flmul+3,w
  3837  145C  00D4               	movwf	_fround$1128+3
  3838  145D  082A               	movf	?___flmul+2,w
  3839  145E  00D3               	movwf	_fround$1128+2
  3840  145F  0829               	movf	?___flmul+1,w
  3841  1460  00D2               	movwf	_fround$1128+1
  3842  1461  0828               	movf	?___flmul,w
  3843  1462  00D1               	movwf	_fround$1128
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3846  1463  300A               	movlw	10
  3847  1464  00F2               	movwf	___lwmod@divisor
  3848  1465  3000               	movlw	0
  3849  1466  00F3               	movwf	___lwmod@divisor+1
  3850  1467  0855               	movf	fround@prec,w
  3851  1468  00C6               	movwf	??_fround
  3852  1469  01C7               	clrf	??_fround+1
  3853  146A  0846               	movf	??_fround,w
  3854  146B  00F4               	movwf	___lwmod@dividend
  3855  146C  0847               	movf	??_fround+1,w
  3856  146D  00F5               	movwf	___lwmod@dividend+1
  3857  146E  160A  158A  253D  160A  118A  	fcall	___lwmod
  3858  1473  0872               	movf	?___lwmod,w
  3859  1474  1283               	bcf	3,5	;RP0=0, select bank0
  3860  1475  1303               	bcf	3,6	;RP1=0, select bank0
  3861  1476  00C8               	movwf	??_fround+2
  3862  1477  3001               	movlw	1
  3863  1478                     u5805:
  3864  1478  1003               	clrc
  3865  1479  0DC8               	rlf	??_fround+2,f
  3866  147A  3EFF               	addlw	-1
  3867  147B  1D03               	skipz
  3868  147C  2C78               	goto	u5805
  3869  147D  1003               	clrc
  3870  147E  0D48               	rlf	??_fround+2,w
  3871  147F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3872  1480  0084               	movwf	4
  3873  1481  160A  158A  2000  160A  118A  	fcall	stringdir
  3874  1486  00C9               	movwf	??_fround+3
  3875  1487  160A  158A  2000  160A  118A  	fcall	stringdir
  3876  148C  00CA               	movwf	??_fround+4
  3877  148D  160A  158A  2000  160A  118A  	fcall	stringdir
  3878  1492  00CB               	movwf	??_fround+5
  3879  1493  160A  158A  2000  160A  118A  	fcall	stringdir
  3880  1498  00CC               	movwf	??_fround+6
  3881  1499  084C               	movf	??_fround+6,w
  3882  149A  00AB               	movwf	___flmul@b+3
  3883  149B  084B               	movf	??_fround+5,w
  3884  149C  00AA               	movwf	___flmul@b+2
  3885  149D  084A               	movf	??_fround+4,w
  3886  149E  00A9               	movwf	___flmul@b+1
  3887  149F  0849               	movf	??_fround+3,w
  3888  14A0  00A8               	movwf	___flmul@b
  3889  14A1  0854               	movf	_fround$1128+3,w
  3890  14A2  00AF               	movwf	___flmul@a+3
  3891  14A3  0853               	movf	_fround$1128+2,w
  3892  14A4  00AE               	movwf	___flmul@a+2
  3893  14A5  0852               	movf	_fround$1128+1,w
  3894  14A6  00AD               	movwf	___flmul@a+1
  3895  14A7  0851               	movf	_fround$1128,w
  3896  14A8  00AC               	movwf	___flmul@a
  3897  14A9  120A  158A  213C  160A  118A  	fcall	___flmul
  3898  14AE  1283               	bcf	3,5	;RP0=0, select bank0
  3899  14AF  1303               	bcf	3,6	;RP1=0, select bank0
  3900  14B0  082B               	movf	?___flmul+3,w
  3901  14B1  00C5               	movwf	?_fround+3
  3902  14B2  082A               	movf	?___flmul+2,w
  3903  14B3  00C4               	movwf	?_fround+2
  3904  14B4  0829               	movf	?___flmul+1,w
  3905  14B5  00C3               	movwf	?_fround+1
  3906  14B6  0828               	movf	?___flmul,w
  3907  14B7  00C2               	movwf	?_fround
  3908  14B8  2CFC               	goto	l273
  3909  14B9                     l3678:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3912  14B9  303F               	movlw	63
  3913  14BA  00AB               	movwf	___flmul@b+3
  3914  14BB  3000               	movlw	0
  3915  14BC  00AA               	movwf	___flmul@b+2
  3916  14BD  3000               	movlw	0
  3917  14BE  00A9               	movwf	___flmul@b+1
  3918  14BF  3000               	movlw	0
  3919  14C0  00A8               	movwf	___flmul@b
  3920  14C1  0855               	movf	fround@prec,w
  3921  14C2  00C6               	movwf	??_fround
  3922  14C3  3001               	movlw	1
  3923  14C4                     u5815:
  3924  14C4  1003               	clrc
  3925  14C5  0DC6               	rlf	??_fround,f
  3926  14C6  3EFF               	addlw	-1
  3927  14C7  1D03               	skipz
  3928  14C8  2CC4               	goto	u5815
  3929  14C9  1003               	clrc
  3930  14CA  0D46               	rlf	??_fround,w
  3931  14CB  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3932  14CC  0084               	movwf	4
  3933  14CD  160A  158A  2000  160A  118A  	fcall	stringdir
  3934  14D2  00C7               	movwf	??_fround+1
  3935  14D3  160A  158A  2000  160A  118A  	fcall	stringdir
  3936  14D8  00C8               	movwf	??_fround+2
  3937  14D9  160A  158A  2000  160A  118A  	fcall	stringdir
  3938  14DE  00C9               	movwf	??_fround+3
  3939  14DF  160A  158A  2000  160A  118A  	fcall	stringdir
  3940  14E4  00CA               	movwf	??_fround+4
  3941  14E5  084A               	movf	??_fround+4,w
  3942  14E6  00AF               	movwf	___flmul@a+3
  3943  14E7  0849               	movf	??_fround+3,w
  3944  14E8  00AE               	movwf	___flmul@a+2
  3945  14E9  0848               	movf	??_fround+2,w
  3946  14EA  00AD               	movwf	___flmul@a+1
  3947  14EB  0847               	movf	??_fround+1,w
  3948  14EC  00AC               	movwf	___flmul@a
  3949  14ED  120A  158A  213C  160A  118A  	fcall	___flmul
  3950  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  3951  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  3952  14F4  082B               	movf	?___flmul+3,w
  3953  14F5  00C5               	movwf	?_fround+3
  3954  14F6  082A               	movf	?___flmul+2,w
  3955  14F7  00C4               	movwf	?_fround+2
  3956  14F8  0829               	movf	?___flmul+1,w
  3957  14F9  00C3               	movwf	?_fround+1
  3958  14FA  0828               	movf	?___flmul,w
  3959  14FB  00C2               	movwf	?_fround
  3960  14FC                     l273:
  3961  14FC  0008               	return
  3962  14FD                     __end_of_fround:
  3963                           
  3964                           	psect	text7
  3965  1D3D                     __ptext7:	
  3966 ;; *************** function ___lwmod *****************
  3967 ;; Defined at:
  3968 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  divisor         2    2[COMMON] unsigned int 
  3971 ;;  dividend        2    4[COMMON] unsigned int 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  counter         1    7[COMMON] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  2    2[COMMON] unsigned int 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3983 ;;      Params:         4       0       0       0       0
  3984 ;;      Locals:         1       0       0       0       0
  3985 ;;      Temps:          1       0       0       0       0
  3986 ;;      Totals:         6       0       0       0       0
  3987 ;;Total ram usage:        6 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    1
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_fround
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           
  3998                           ;psect for function ___lwmod
  3999  1D3D                     ___lwmod:
  4000  1D3D                     l2432:	
  4001                           ;incstack = 0
  4002                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4003                           
  4004  1D3D  0872               	movf	___lwmod@divisor,w
  4005  1D3E  0473               	iorwf	___lwmod@divisor+1,w
  4006  1D3F  1903               	btfsc	3,2
  4007  1D40  2D42               	goto	u3131
  4008  1D41  2D43               	goto	u3130
  4009  1D42                     u3131:
  4010  1D42  2D72               	goto	l2450
  4011  1D43                     u3130:
  4012  1D43                     l2434:
  4013  1D43  01F7               	clrf	___lwmod@counter
  4014  1D44  0AF7               	incf	___lwmod@counter,f
  4015  1D45  2D51               	goto	l2440
  4016  1D46                     l2436:
  4017  1D46  3001               	movlw	1
  4018  1D47                     u3145:
  4019  1D47  1003               	clrc
  4020  1D48  0DF2               	rlf	___lwmod@divisor,f
  4021  1D49  0DF3               	rlf	___lwmod@divisor+1,f
  4022  1D4A  3EFF               	addlw	-1
  4023  1D4B  1D03               	skipz
  4024  1D4C  2D47               	goto	u3145
  4025  1D4D                     l2438:
  4026  1D4D  3001               	movlw	1
  4027  1D4E  00F6               	movwf	??___lwmod
  4028  1D4F  0876               	movf	??___lwmod,w
  4029  1D50  07F7               	addwf	___lwmod@counter,f
  4030  1D51                     l2440:
  4031  1D51  1FF3               	btfss	___lwmod@divisor+1,7
  4032  1D52  2D54               	goto	u3151
  4033  1D53  2D55               	goto	u3150
  4034  1D54                     u3151:
  4035  1D54  2D46               	goto	l2436
  4036  1D55                     u3150:
  4037  1D55                     l2442:
  4038  1D55  0873               	movf	___lwmod@divisor+1,w
  4039  1D56  0275               	subwf	___lwmod@dividend+1,w
  4040  1D57  1D03               	skipz
  4041  1D58  2D5B               	goto	u3165
  4042  1D59  0872               	movf	___lwmod@divisor,w
  4043  1D5A  0274               	subwf	___lwmod@dividend,w
  4044  1D5B                     u3165:
  4045  1D5B  1C03               	skipc
  4046  1D5C  2D5E               	goto	u3161
  4047  1D5D  2D5F               	goto	u3160
  4048  1D5E                     u3161:
  4049  1D5E  2D65               	goto	l2446
  4050  1D5F                     u3160:
  4051  1D5F                     l2444:
  4052  1D5F  0872               	movf	___lwmod@divisor,w
  4053  1D60  02F4               	subwf	___lwmod@dividend,f
  4054  1D61  0873               	movf	___lwmod@divisor+1,w
  4055  1D62  1C03               	skipc
  4056  1D63  03F5               	decf	___lwmod@dividend+1,f
  4057  1D64  02F5               	subwf	___lwmod@dividend+1,f
  4058  1D65                     l2446:
  4059  1D65  3001               	movlw	1
  4060  1D66                     u3175:
  4061  1D66  1003               	clrc
  4062  1D67  0CF3               	rrf	___lwmod@divisor+1,f
  4063  1D68  0CF2               	rrf	___lwmod@divisor,f
  4064  1D69  3EFF               	addlw	-1
  4065  1D6A  1D03               	skipz
  4066  1D6B  2D66               	goto	u3175
  4067  1D6C                     l2448:
  4068  1D6C  3001               	movlw	1
  4069  1D6D  02F7               	subwf	___lwmod@counter,f
  4070  1D6E  1D03               	btfss	3,2
  4071  1D6F  2D71               	goto	u3181
  4072  1D70  2D72               	goto	u3180
  4073  1D71                     u3181:
  4074  1D71  2D55               	goto	l2442
  4075  1D72                     u3180:
  4076  1D72                     l2450:
  4077  1D72  0875               	movf	___lwmod@dividend+1,w
  4078  1D73  00F3               	movwf	?___lwmod+1
  4079  1D74  0874               	movf	___lwmod@dividend,w
  4080  1D75  00F2               	movwf	?___lwmod
  4081  1D76                     l701:
  4082  1D76  0008               	return
  4083  1D77                     __end_of___lwmod:
  4084                           
  4085                           	psect	text8
  4086  1D77                     __ptext8:	
  4087 ;; *************** function ___lwdiv *****************
  4088 ;; Defined at:
  4089 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  divisor         2    0[BANK0 ] unsigned int 
  4092 ;;  dividend        2    2[BANK0 ] unsigned int 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  quotient        2    5[BANK0 ] unsigned int 
  4095 ;;  counter         1    4[BANK0 ] unsigned char 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  2    0[BANK0 ] unsigned int 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         0       4       0       0       0
  4106 ;;      Locals:         0       3       0       0       0
  4107 ;;      Temps:          1       0       0       0       0
  4108 ;;      Totals:         1       7       0       0       0
  4109 ;;Total ram usage:        8 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    1
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_fround
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function ___lwdiv
  4121  1D77                     ___lwdiv:
  4122  1D77                     l3638:	
  4123                           ;incstack = 0
  4124                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4125                           
  4126  1D77  1283               	bcf	3,5	;RP0=0, select bank0
  4127  1D78  1303               	bcf	3,6	;RP1=0, select bank0
  4128  1D79  01A5               	clrf	___lwdiv@quotient
  4129  1D7A  01A6               	clrf	___lwdiv@quotient+1
  4130  1D7B                     l3640:
  4131  1D7B  0820               	movf	___lwdiv@divisor,w
  4132  1D7C  0421               	iorwf	___lwdiv@divisor+1,w
  4133  1D7D  1903               	btfsc	3,2
  4134  1D7E  2D80               	goto	u5671
  4135  1D7F  2D81               	goto	u5670
  4136  1D80                     u5671:
  4137  1D80  2DB8               	goto	l3660
  4138  1D81                     u5670:
  4139  1D81                     l3642:
  4140  1D81  01A4               	clrf	___lwdiv@counter
  4141  1D82  0AA4               	incf	___lwdiv@counter,f
  4142  1D83  2D8F               	goto	l3648
  4143  1D84                     l3644:
  4144  1D84  3001               	movlw	1
  4145  1D85                     u5685:
  4146  1D85  1003               	clrc
  4147  1D86  0DA0               	rlf	___lwdiv@divisor,f
  4148  1D87  0DA1               	rlf	___lwdiv@divisor+1,f
  4149  1D88  3EFF               	addlw	-1
  4150  1D89  1D03               	skipz
  4151  1D8A  2D85               	goto	u5685
  4152  1D8B                     l3646:
  4153  1D8B  3001               	movlw	1
  4154  1D8C  00F8               	movwf	??___lwdiv
  4155  1D8D  0878               	movf	??___lwdiv,w
  4156  1D8E  07A4               	addwf	___lwdiv@counter,f
  4157  1D8F                     l3648:
  4158  1D8F  1FA1               	btfss	___lwdiv@divisor+1,7
  4159  1D90  2D92               	goto	u5691
  4160  1D91  2D93               	goto	u5690
  4161  1D92                     u5691:
  4162  1D92  2D84               	goto	l3644
  4163  1D93                     u5690:
  4164  1D93                     l3650:
  4165  1D93  3001               	movlw	1
  4166  1D94                     u5705:
  4167  1D94  1003               	clrc
  4168  1D95  0DA5               	rlf	___lwdiv@quotient,f
  4169  1D96  0DA6               	rlf	___lwdiv@quotient+1,f
  4170  1D97  3EFF               	addlw	-1
  4171  1D98  1D03               	skipz
  4172  1D99  2D94               	goto	u5705
  4173  1D9A  0821               	movf	___lwdiv@divisor+1,w
  4174  1D9B  0223               	subwf	___lwdiv@dividend+1,w
  4175  1D9C  1D03               	skipz
  4176  1D9D  2DA0               	goto	u5715
  4177  1D9E  0820               	movf	___lwdiv@divisor,w
  4178  1D9F  0222               	subwf	___lwdiv@dividend,w
  4179  1DA0                     u5715:
  4180  1DA0  1C03               	skipc
  4181  1DA1  2DA3               	goto	u5711
  4182  1DA2  2DA4               	goto	u5710
  4183  1DA3                     u5711:
  4184  1DA3  2DAB               	goto	l3656
  4185  1DA4                     u5710:
  4186  1DA4                     l3652:
  4187  1DA4  0820               	movf	___lwdiv@divisor,w
  4188  1DA5  02A2               	subwf	___lwdiv@dividend,f
  4189  1DA6  0821               	movf	___lwdiv@divisor+1,w
  4190  1DA7  1C03               	skipc
  4191  1DA8  03A3               	decf	___lwdiv@dividend+1,f
  4192  1DA9  02A3               	subwf	___lwdiv@dividend+1,f
  4193  1DAA                     l3654:
  4194  1DAA  1425               	bsf	___lwdiv@quotient,0
  4195  1DAB                     l3656:
  4196  1DAB  3001               	movlw	1
  4197  1DAC                     u5725:
  4198  1DAC  1003               	clrc
  4199  1DAD  0CA1               	rrf	___lwdiv@divisor+1,f
  4200  1DAE  0CA0               	rrf	___lwdiv@divisor,f
  4201  1DAF  3EFF               	addlw	-1
  4202  1DB0  1D03               	skipz
  4203  1DB1  2DAC               	goto	u5725
  4204  1DB2                     l3658:
  4205  1DB2  3001               	movlw	1
  4206  1DB3  02A4               	subwf	___lwdiv@counter,f
  4207  1DB4  1D03               	btfss	3,2
  4208  1DB5  2DB7               	goto	u5731
  4209  1DB6  2DB8               	goto	u5730
  4210  1DB7                     u5731:
  4211  1DB7  2D93               	goto	l3650
  4212  1DB8                     u5730:
  4213  1DB8                     l3660:
  4214  1DB8  0826               	movf	___lwdiv@quotient+1,w
  4215  1DB9  00A1               	movwf	?___lwdiv+1
  4216  1DBA  0825               	movf	___lwdiv@quotient,w
  4217  1DBB  00A0               	movwf	?___lwdiv
  4218  1DBC                     l691:
  4219  1DBC  0008               	return
  4220  1DBD                     __end_of___lwdiv:
  4221                           
  4222                           	psect	text9
  4223  093C                     __ptext9:	
  4224 ;; *************** function ___flmul *****************
  4225 ;; Defined at:
  4226 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  b               4    8[BANK0 ] unsigned int 
  4229 ;;  a               4   12[BANK0 ] unsigned int 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  prod            4   28[BANK0 ] struct .
  4232 ;;  grs             4   22[BANK0 ] unsigned long 
  4233 ;;  temp            2   32[BANK0 ] struct .
  4234 ;;  bexp            1   27[BANK0 ] unsigned char 
  4235 ;;  aexp            1   26[BANK0 ] unsigned char 
  4236 ;;  sign            1   21[BANK0 ] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  4    8[BANK0 ] unsigned char 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4246 ;;      Params:         0       8       0       0       0
  4247 ;;      Locals:         0      13       0       0       0
  4248 ;;      Temps:          0       5       0       0       0
  4249 ;;      Totals:         0      26       0       0       0
  4250 ;;Total ram usage:       26 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    2
  4253 ;; This function calls:
  4254 ;;		__Umul8_16
  4255 ;; This function is called by:
  4256 ;;		_fround
  4257 ;;		_scale
  4258 ;;		_sprintf
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function ___flmul
  4264  093C                     ___flmul:
  4265  093C                     l2648:	
  4266                           ;incstack = 0
  4267                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4268                           
  4269  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4270  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4271  093E  082B               	movf	___flmul@b+3,w
  4272  093F  3980               	andlw	128
  4273  0940  00B0               	movwf	??___flmul
  4274  0941  0830               	movf	??___flmul,w
  4275  0942  00B5               	movwf	___flmul@sign
  4276  0943                     l2650:
  4277  0943  082B               	movf	___flmul@b+3,w
  4278  0944  00B0               	movwf	??___flmul
  4279  0945  0730               	addwf	??___flmul,w
  4280  0946  00B1               	movwf	??___flmul+1
  4281  0947  0831               	movf	??___flmul+1,w
  4282  0948  00BB               	movwf	___flmul@bexp
  4283  0949                     l2652:
  4284  0949  1FAA               	btfss	___flmul@b+2,7
  4285  094A  294C               	goto	u3651
  4286  094B  294D               	goto	u3650
  4287  094C                     u3651:
  4288  094C  294E               	goto	l2656
  4289  094D                     u3650:
  4290  094D                     l2654:
  4291  094D  143B               	bsf	___flmul@bexp,0
  4292  094E                     l2656:
  4293  094E  083B               	movf	___flmul@bexp,w
  4294  094F  1903               	btfsc	3,2
  4295  0950  2952               	goto	u3661
  4296  0951  2953               	goto	u3660
  4297  0952                     u3661:
  4298  0952  2962               	goto	l2664
  4299  0953                     u3660:
  4300  0953                     l2658:
  4301  0953  0A3B               	incf	___flmul@bexp,w
  4302  0954  1D03               	btfss	3,2
  4303  0955  2957               	goto	u3671
  4304  0956  2958               	goto	u3670
  4305  0957                     u3671:
  4306  0957  2960               	goto	l2662
  4307  0958                     u3670:
  4308  0958                     l2660:
  4309  0958  3000               	movlw	0
  4310  0959  00AB               	movwf	___flmul@b+3
  4311  095A  3000               	movlw	0
  4312  095B  00AA               	movwf	___flmul@b+2
  4313  095C  3000               	movlw	0
  4314  095D  00A9               	movwf	___flmul@b+1
  4315  095E  3000               	movlw	0
  4316  095F  00A8               	movwf	___flmul@b
  4317  0960                     l2662:
  4318  0960  17AA               	bsf	___flmul@b+2,7
  4319  0961  296A               	goto	l2666
  4320  0962                     l2664:
  4321  0962  3000               	movlw	0
  4322  0963  00AB               	movwf	___flmul@b+3
  4323  0964  3000               	movlw	0
  4324  0965  00AA               	movwf	___flmul@b+2
  4325  0966  3000               	movlw	0
  4326  0967  00A9               	movwf	___flmul@b+1
  4327  0968  3000               	movlw	0
  4328  0969  00A8               	movwf	___flmul@b
  4329  096A                     l2666:
  4330  096A  082F               	movf	___flmul@a+3,w
  4331  096B  3980               	andlw	128
  4332  096C  00B0               	movwf	??___flmul
  4333  096D  0830               	movf	??___flmul,w
  4334  096E  06B5               	xorwf	___flmul@sign,f
  4335  096F                     l2668:
  4336  096F  082F               	movf	___flmul@a+3,w
  4337  0970  00B0               	movwf	??___flmul
  4338  0971  0730               	addwf	??___flmul,w
  4339  0972  00B1               	movwf	??___flmul+1
  4340  0973  0831               	movf	??___flmul+1,w
  4341  0974  00BA               	movwf	___flmul@aexp
  4342  0975                     l2670:
  4343  0975  1FAE               	btfss	___flmul@a+2,7
  4344  0976  2978               	goto	u3681
  4345  0977  2979               	goto	u3680
  4346  0978                     u3681:
  4347  0978  297A               	goto	l2674
  4348  0979                     u3680:
  4349  0979                     l2672:
  4350  0979  143A               	bsf	___flmul@aexp,0
  4351  097A                     l2674:
  4352  097A  083A               	movf	___flmul@aexp,w
  4353  097B  1903               	btfsc	3,2
  4354  097C  297E               	goto	u3691
  4355  097D  297F               	goto	u3690
  4356  097E                     u3691:
  4357  097E  298E               	goto	l2682
  4358  097F                     u3690:
  4359  097F                     l2676:
  4360  097F  0A3A               	incf	___flmul@aexp,w
  4361  0980  1D03               	btfss	3,2
  4362  0981  2983               	goto	u3701
  4363  0982  2984               	goto	u3700
  4364  0983                     u3701:
  4365  0983  298C               	goto	l2680
  4366  0984                     u3700:
  4367  0984                     l2678:
  4368  0984  3000               	movlw	0
  4369  0985  00AF               	movwf	___flmul@a+3
  4370  0986  3000               	movlw	0
  4371  0987  00AE               	movwf	___flmul@a+2
  4372  0988  3000               	movlw	0
  4373  0989  00AD               	movwf	___flmul@a+1
  4374  098A  3000               	movlw	0
  4375  098B  00AC               	movwf	___flmul@a
  4376  098C                     l2680:
  4377  098C  17AE               	bsf	___flmul@a+2,7
  4378  098D  2996               	goto	l2684
  4379  098E                     l2682:
  4380  098E  3000               	movlw	0
  4381  098F  00AF               	movwf	___flmul@a+3
  4382  0990  3000               	movlw	0
  4383  0991  00AE               	movwf	___flmul@a+2
  4384  0992  3000               	movlw	0
  4385  0993  00AD               	movwf	___flmul@a+1
  4386  0994  3000               	movlw	0
  4387  0995  00AC               	movwf	___flmul@a
  4388  0996                     l2684:
  4389  0996  083A               	movf	___flmul@aexp,w
  4390  0997  1903               	btfsc	3,2
  4391  0998  299A               	goto	u3711
  4392  0999  299B               	goto	u3710
  4393  099A                     u3711:
  4394  099A  29A0               	goto	l2688
  4395  099B                     u3710:
  4396  099B                     l2686:
  4397  099B  083B               	movf	___flmul@bexp,w
  4398  099C  1D03               	btfss	3,2
  4399  099D  299F               	goto	u3721
  4400  099E  29A0               	goto	u3720
  4401  099F                     u3721:
  4402  099F  29A9               	goto	l2692
  4403  09A0                     u3720:
  4404  09A0                     l2688:
  4405  09A0  3000               	movlw	0
  4406  09A1  00AB               	movwf	?___flmul+3
  4407  09A2  3000               	movlw	0
  4408  09A3  00AA               	movwf	?___flmul+2
  4409  09A4  3000               	movlw	0
  4410  09A5  00A9               	movwf	?___flmul+1
  4411  09A6  3000               	movlw	0
  4412  09A7  00A8               	movwf	?___flmul
  4413  09A8  2C9C               	goto	l808
  4414  09A9                     l2692:
  4415  09A9  0828               	movf	___flmul@b,w
  4416  09AA  00B0               	movwf	??___flmul
  4417  09AB  0830               	movf	??___flmul,w
  4418  09AC  00F2               	movwf	__Umul8_16@multiplicand
  4419  09AD  082E               	movf	___flmul@a+2,w
  4420  09AE  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4421  09B3  0873               	movf	?__Umul8_16+1,w
  4422  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4423  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4424  09B6  00C1               	movwf	___flmul@temp+1
  4425  09B7  0872               	movf	?__Umul8_16,w
  4426  09B8  00C0               	movwf	___flmul@temp
  4427  09B9                     l2694:
  4428  09B9  0840               	movf	___flmul@temp,w
  4429  09BA  00B0               	movwf	??___flmul
  4430  09BB  01B1               	clrf	??___flmul+1
  4431  09BC  01B2               	clrf	??___flmul+2
  4432  09BD  01B3               	clrf	??___flmul+3
  4433  09BE  0833               	movf	??___flmul+3,w
  4434  09BF  00B9               	movwf	___flmul@grs+3
  4435  09C0  0832               	movf	??___flmul+2,w
  4436  09C1  00B8               	movwf	___flmul@grs+2
  4437  09C2  0831               	movf	??___flmul+1,w
  4438  09C3  00B7               	movwf	___flmul@grs+1
  4439  09C4  0830               	movf	??___flmul,w
  4440  09C5  00B6               	movwf	___flmul@grs
  4441  09C6                     l2696:
  4442  09C6  0841               	movf	___flmul@temp+1,w
  4443  09C7  00B0               	movwf	??___flmul
  4444  09C8  01B1               	clrf	??___flmul+1
  4445  09C9  01B2               	clrf	??___flmul+2
  4446  09CA  01B3               	clrf	??___flmul+3
  4447  09CB  0833               	movf	??___flmul+3,w
  4448  09CC  00BF               	movwf	___flmul@prod+3
  4449  09CD  0832               	movf	??___flmul+2,w
  4450  09CE  00BE               	movwf	___flmul@prod+2
  4451  09CF  0831               	movf	??___flmul+1,w
  4452  09D0  00BD               	movwf	___flmul@prod+1
  4453  09D1  0830               	movf	??___flmul,w
  4454  09D2  00BC               	movwf	___flmul@prod
  4455  09D3  0829               	movf	___flmul@b+1,w
  4456  09D4  00B0               	movwf	??___flmul
  4457  09D5  0830               	movf	??___flmul,w
  4458  09D6  00F2               	movwf	__Umul8_16@multiplicand
  4459  09D7  082D               	movf	___flmul@a+1,w
  4460  09D8  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4461  09DD  0873               	movf	?__Umul8_16+1,w
  4462  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4463  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4464  09E0  00C1               	movwf	___flmul@temp+1
  4465  09E1  0872               	movf	?__Umul8_16,w
  4466  09E2  00C0               	movwf	___flmul@temp
  4467  09E3                     l2698:
  4468  09E3  0840               	movf	___flmul@temp,w
  4469  09E4  00B0               	movwf	??___flmul
  4470  09E5  01B1               	clrf	??___flmul+1
  4471  09E6  01B2               	clrf	??___flmul+2
  4472  09E7  01B3               	clrf	??___flmul+3
  4473  09E8  0830               	movf	??___flmul,w
  4474  09E9  07B6               	addwf	___flmul@grs,f
  4475  09EA  0831               	movf	??___flmul+1,w
  4476  09EB  1103               	clrz
  4477  09EC  1803               	skipnc
  4478  09ED  3E01               	addlw	1
  4479  09EE  1903               	skipnz
  4480  09EF  29F1               	goto	u3731
  4481  09F0  07B7               	addwf	___flmul@grs+1,f
  4482  09F1                     u3731:
  4483  09F1  0832               	movf	??___flmul+2,w
  4484  09F2  1103               	clrz
  4485  09F3  1803               	skipnc
  4486  09F4  3E01               	addlw	1
  4487  09F5  1903               	skipnz
  4488  09F6  29F8               	goto	u3732
  4489  09F7  07B8               	addwf	___flmul@grs+2,f
  4490  09F8                     u3732:
  4491  09F8  0833               	movf	??___flmul+3,w
  4492  09F9  1103               	clrz
  4493  09FA  1803               	skipnc
  4494  09FB  3E01               	addlw	1
  4495  09FC  1903               	skipnz
  4496  09FD  29FF               	goto	u3733
  4497  09FE  07B9               	addwf	___flmul@grs+3,f
  4498  09FF                     u3733:
  4499  09FF                     l2700:
  4500  09FF  0841               	movf	___flmul@temp+1,w
  4501  0A00  00B0               	movwf	??___flmul
  4502  0A01  01B1               	clrf	??___flmul+1
  4503  0A02  01B2               	clrf	??___flmul+2
  4504  0A03  01B3               	clrf	??___flmul+3
  4505  0A04  0830               	movf	??___flmul,w
  4506  0A05  07BC               	addwf	___flmul@prod,f
  4507  0A06  0831               	movf	??___flmul+1,w
  4508  0A07  1103               	clrz
  4509  0A08  1803               	skipnc
  4510  0A09  3E01               	addlw	1
  4511  0A0A  1903               	skipnz
  4512  0A0B  2A0D               	goto	u3741
  4513  0A0C  07BD               	addwf	___flmul@prod+1,f
  4514  0A0D                     u3741:
  4515  0A0D  0832               	movf	??___flmul+2,w
  4516  0A0E  1103               	clrz
  4517  0A0F  1803               	skipnc
  4518  0A10  3E01               	addlw	1
  4519  0A11  1903               	skipnz
  4520  0A12  2A14               	goto	u3742
  4521  0A13  07BE               	addwf	___flmul@prod+2,f
  4522  0A14                     u3742:
  4523  0A14  0833               	movf	??___flmul+3,w
  4524  0A15  1103               	clrz
  4525  0A16  1803               	skipnc
  4526  0A17  3E01               	addlw	1
  4527  0A18  1903               	skipnz
  4528  0A19  2A1B               	goto	u3743
  4529  0A1A  07BF               	addwf	___flmul@prod+3,f
  4530  0A1B                     u3743:
  4531  0A1B  082A               	movf	___flmul@b+2,w
  4532  0A1C  00B0               	movwf	??___flmul
  4533  0A1D  0830               	movf	??___flmul,w
  4534  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  4535  0A1F  082C               	movf	___flmul@a,w
  4536  0A20  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4537  0A25  0873               	movf	?__Umul8_16+1,w
  4538  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4539  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0A28  00C1               	movwf	___flmul@temp+1
  4541  0A29  0872               	movf	?__Umul8_16,w
  4542  0A2A  00C0               	movwf	___flmul@temp
  4543  0A2B                     l2702:
  4544  0A2B  0840               	movf	___flmul@temp,w
  4545  0A2C  00B0               	movwf	??___flmul
  4546  0A2D  01B1               	clrf	??___flmul+1
  4547  0A2E  01B2               	clrf	??___flmul+2
  4548  0A2F  01B3               	clrf	??___flmul+3
  4549  0A30  0830               	movf	??___flmul,w
  4550  0A31  07B6               	addwf	___flmul@grs,f
  4551  0A32  0831               	movf	??___flmul+1,w
  4552  0A33  1103               	clrz
  4553  0A34  1803               	skipnc
  4554  0A35  3E01               	addlw	1
  4555  0A36  1903               	skipnz
  4556  0A37  2A39               	goto	u3751
  4557  0A38  07B7               	addwf	___flmul@grs+1,f
  4558  0A39                     u3751:
  4559  0A39  0832               	movf	??___flmul+2,w
  4560  0A3A  1103               	clrz
  4561  0A3B  1803               	skipnc
  4562  0A3C  3E01               	addlw	1
  4563  0A3D  1903               	skipnz
  4564  0A3E  2A40               	goto	u3752
  4565  0A3F  07B8               	addwf	___flmul@grs+2,f
  4566  0A40                     u3752:
  4567  0A40  0833               	movf	??___flmul+3,w
  4568  0A41  1103               	clrz
  4569  0A42  1803               	skipnc
  4570  0A43  3E01               	addlw	1
  4571  0A44  1903               	skipnz
  4572  0A45  2A47               	goto	u3753
  4573  0A46  07B9               	addwf	___flmul@grs+3,f
  4574  0A47                     u3753:
  4575  0A47                     l2704:
  4576  0A47  0841               	movf	___flmul@temp+1,w
  4577  0A48  00B0               	movwf	??___flmul
  4578  0A49  01B1               	clrf	??___flmul+1
  4579  0A4A  01B2               	clrf	??___flmul+2
  4580  0A4B  01B3               	clrf	??___flmul+3
  4581  0A4C  0830               	movf	??___flmul,w
  4582  0A4D  07BC               	addwf	___flmul@prod,f
  4583  0A4E  0831               	movf	??___flmul+1,w
  4584  0A4F  1103               	clrz
  4585  0A50  1803               	skipnc
  4586  0A51  3E01               	addlw	1
  4587  0A52  1903               	skipnz
  4588  0A53  2A55               	goto	u3761
  4589  0A54  07BD               	addwf	___flmul@prod+1,f
  4590  0A55                     u3761:
  4591  0A55  0832               	movf	??___flmul+2,w
  4592  0A56  1103               	clrz
  4593  0A57  1803               	skipnc
  4594  0A58  3E01               	addlw	1
  4595  0A59  1903               	skipnz
  4596  0A5A  2A5C               	goto	u3762
  4597  0A5B  07BE               	addwf	___flmul@prod+2,f
  4598  0A5C                     u3762:
  4599  0A5C  0833               	movf	??___flmul+3,w
  4600  0A5D  1103               	clrz
  4601  0A5E  1803               	skipnc
  4602  0A5F  3E01               	addlw	1
  4603  0A60  1903               	skipnz
  4604  0A61  2A63               	goto	u3763
  4605  0A62  07BF               	addwf	___flmul@prod+3,f
  4606  0A63                     u3763:
  4607  0A63                     l2706:
  4608  0A63  3008               	movlw	8
  4609  0A64  00B0               	movwf	??___flmul
  4610  0A65                     u3775:
  4611  0A65  1003               	clrc
  4612  0A66  0DB6               	rlf	___flmul@grs,f
  4613  0A67  0DB7               	rlf	___flmul@grs+1,f
  4614  0A68  0DB8               	rlf	___flmul@grs+2,f
  4615  0A69  0DB9               	rlf	___flmul@grs+3,f
  4616  0A6A  0BB0               	decfsz	??___flmul,f
  4617  0A6B  2A65               	goto	u3775
  4618  0A6C                     l2708:
  4619  0A6C  0829               	movf	___flmul@b+1,w
  4620  0A6D  00B0               	movwf	??___flmul
  4621  0A6E  0830               	movf	??___flmul,w
  4622  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  4623  0A70  082C               	movf	___flmul@a,w
  4624  0A71  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4625  0A76  0873               	movf	?__Umul8_16+1,w
  4626  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4627  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4628  0A79  00C1               	movwf	___flmul@temp+1
  4629  0A7A  0872               	movf	?__Umul8_16,w
  4630  0A7B  00C0               	movwf	___flmul@temp
  4631  0A7C                     l2710:
  4632  0A7C  0840               	movf	___flmul@temp,w
  4633  0A7D  00B0               	movwf	??___flmul
  4634  0A7E  0841               	movf	___flmul@temp+1,w
  4635  0A7F  00B1               	movwf	??___flmul+1
  4636  0A80  01B2               	clrf	??___flmul+2
  4637  0A81  01B3               	clrf	??___flmul+3
  4638  0A82  0830               	movf	??___flmul,w
  4639  0A83  07B6               	addwf	___flmul@grs,f
  4640  0A84  0831               	movf	??___flmul+1,w
  4641  0A85  1103               	clrz
  4642  0A86  1803               	skipnc
  4643  0A87  3E01               	addlw	1
  4644  0A88  1903               	skipnz
  4645  0A89  2A8B               	goto	u3781
  4646  0A8A  07B7               	addwf	___flmul@grs+1,f
  4647  0A8B                     u3781:
  4648  0A8B  0832               	movf	??___flmul+2,w
  4649  0A8C  1103               	clrz
  4650  0A8D  1803               	skipnc
  4651  0A8E  3E01               	addlw	1
  4652  0A8F  1903               	skipnz
  4653  0A90  2A92               	goto	u3782
  4654  0A91  07B8               	addwf	___flmul@grs+2,f
  4655  0A92                     u3782:
  4656  0A92  0833               	movf	??___flmul+3,w
  4657  0A93  1103               	clrz
  4658  0A94  1803               	skipnc
  4659  0A95  3E01               	addlw	1
  4660  0A96  1903               	skipnz
  4661  0A97  2A99               	goto	u3783
  4662  0A98  07B9               	addwf	___flmul@grs+3,f
  4663  0A99                     u3783:
  4664  0A99                     l2712:
  4665  0A99  0828               	movf	___flmul@b,w
  4666  0A9A  00B0               	movwf	??___flmul
  4667  0A9B  0830               	movf	??___flmul,w
  4668  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  4669  0A9D  082D               	movf	___flmul@a+1,w
  4670  0A9E  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4671  0AA3  0873               	movf	?__Umul8_16+1,w
  4672  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4674  0AA6  00C1               	movwf	___flmul@temp+1
  4675  0AA7  0872               	movf	?__Umul8_16,w
  4676  0AA8  00C0               	movwf	___flmul@temp
  4677  0AA9                     l2714:
  4678  0AA9  0840               	movf	___flmul@temp,w
  4679  0AAA  00B0               	movwf	??___flmul
  4680  0AAB  0841               	movf	___flmul@temp+1,w
  4681  0AAC  00B1               	movwf	??___flmul+1
  4682  0AAD  01B2               	clrf	??___flmul+2
  4683  0AAE  01B3               	clrf	??___flmul+3
  4684  0AAF  0830               	movf	??___flmul,w
  4685  0AB0  07B6               	addwf	___flmul@grs,f
  4686  0AB1  0831               	movf	??___flmul+1,w
  4687  0AB2  1103               	clrz
  4688  0AB3  1803               	skipnc
  4689  0AB4  3E01               	addlw	1
  4690  0AB5  1903               	skipnz
  4691  0AB6  2AB8               	goto	u3791
  4692  0AB7  07B7               	addwf	___flmul@grs+1,f
  4693  0AB8                     u3791:
  4694  0AB8  0832               	movf	??___flmul+2,w
  4695  0AB9  1103               	clrz
  4696  0ABA  1803               	skipnc
  4697  0ABB  3E01               	addlw	1
  4698  0ABC  1903               	skipnz
  4699  0ABD  2ABF               	goto	u3792
  4700  0ABE  07B8               	addwf	___flmul@grs+2,f
  4701  0ABF                     u3792:
  4702  0ABF  0833               	movf	??___flmul+3,w
  4703  0AC0  1103               	clrz
  4704  0AC1  1803               	skipnc
  4705  0AC2  3E01               	addlw	1
  4706  0AC3  1903               	skipnz
  4707  0AC4  2AC6               	goto	u3793
  4708  0AC5  07B9               	addwf	___flmul@grs+3,f
  4709  0AC6                     u3793:
  4710  0AC6                     l2716:
  4711  0AC6  3008               	movlw	8
  4712  0AC7  00B0               	movwf	??___flmul
  4713  0AC8                     u3805:
  4714  0AC8  1003               	clrc
  4715  0AC9  0DB6               	rlf	___flmul@grs,f
  4716  0ACA  0DB7               	rlf	___flmul@grs+1,f
  4717  0ACB  0DB8               	rlf	___flmul@grs+2,f
  4718  0ACC  0DB9               	rlf	___flmul@grs+3,f
  4719  0ACD  0BB0               	decfsz	??___flmul,f
  4720  0ACE  2AC8               	goto	u3805
  4721  0ACF  0828               	movf	___flmul@b,w
  4722  0AD0  00B0               	movwf	??___flmul
  4723  0AD1  0830               	movf	??___flmul,w
  4724  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  4725  0AD3  082C               	movf	___flmul@a,w
  4726  0AD4  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4727  0AD9  0873               	movf	?__Umul8_16+1,w
  4728  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4729  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4730  0ADC  00C1               	movwf	___flmul@temp+1
  4731  0ADD  0872               	movf	?__Umul8_16,w
  4732  0ADE  00C0               	movwf	___flmul@temp
  4733  0ADF                     l2718:
  4734  0ADF  0840               	movf	___flmul@temp,w
  4735  0AE0  00B0               	movwf	??___flmul
  4736  0AE1  0841               	movf	___flmul@temp+1,w
  4737  0AE2  00B1               	movwf	??___flmul+1
  4738  0AE3  01B2               	clrf	??___flmul+2
  4739  0AE4  01B3               	clrf	??___flmul+3
  4740  0AE5  0830               	movf	??___flmul,w
  4741  0AE6  07B6               	addwf	___flmul@grs,f
  4742  0AE7  0831               	movf	??___flmul+1,w
  4743  0AE8  1103               	clrz
  4744  0AE9  1803               	skipnc
  4745  0AEA  3E01               	addlw	1
  4746  0AEB  1903               	skipnz
  4747  0AEC  2AEE               	goto	u3811
  4748  0AED  07B7               	addwf	___flmul@grs+1,f
  4749  0AEE                     u3811:
  4750  0AEE  0832               	movf	??___flmul+2,w
  4751  0AEF  1103               	clrz
  4752  0AF0  1803               	skipnc
  4753  0AF1  3E01               	addlw	1
  4754  0AF2  1903               	skipnz
  4755  0AF3  2AF5               	goto	u3812
  4756  0AF4  07B8               	addwf	___flmul@grs+2,f
  4757  0AF5                     u3812:
  4758  0AF5  0833               	movf	??___flmul+3,w
  4759  0AF6  1103               	clrz
  4760  0AF7  1803               	skipnc
  4761  0AF8  3E01               	addlw	1
  4762  0AF9  1903               	skipnz
  4763  0AFA  2AFC               	goto	u3813
  4764  0AFB  07B9               	addwf	___flmul@grs+3,f
  4765  0AFC                     u3813:
  4766  0AFC                     l2720:
  4767  0AFC  0829               	movf	___flmul@b+1,w
  4768  0AFD  00B0               	movwf	??___flmul
  4769  0AFE  0830               	movf	??___flmul,w
  4770  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  4771  0B00  082E               	movf	___flmul@a+2,w
  4772  0B01  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4773  0B06  0873               	movf	?__Umul8_16+1,w
  4774  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4775  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4776  0B09  00C1               	movwf	___flmul@temp+1
  4777  0B0A  0872               	movf	?__Umul8_16,w
  4778  0B0B  00C0               	movwf	___flmul@temp
  4779  0B0C  0840               	movf	___flmul@temp,w
  4780  0B0D  00B0               	movwf	??___flmul
  4781  0B0E  0841               	movf	___flmul@temp+1,w
  4782  0B0F  00B1               	movwf	??___flmul+1
  4783  0B10  01B2               	clrf	??___flmul+2
  4784  0B11  01B3               	clrf	??___flmul+3
  4785  0B12  0830               	movf	??___flmul,w
  4786  0B13  07BC               	addwf	___flmul@prod,f
  4787  0B14  0831               	movf	??___flmul+1,w
  4788  0B15  1103               	clrz
  4789  0B16  1803               	skipnc
  4790  0B17  3E01               	addlw	1
  4791  0B18  1903               	skipnz
  4792  0B19  2B1B               	goto	u3821
  4793  0B1A  07BD               	addwf	___flmul@prod+1,f
  4794  0B1B                     u3821:
  4795  0B1B  0832               	movf	??___flmul+2,w
  4796  0B1C  1103               	clrz
  4797  0B1D  1803               	skipnc
  4798  0B1E  3E01               	addlw	1
  4799  0B1F  1903               	skipnz
  4800  0B20  2B22               	goto	u3822
  4801  0B21  07BE               	addwf	___flmul@prod+2,f
  4802  0B22                     u3822:
  4803  0B22  0833               	movf	??___flmul+3,w
  4804  0B23  1103               	clrz
  4805  0B24  1803               	skipnc
  4806  0B25  3E01               	addlw	1
  4807  0B26  1903               	skipnz
  4808  0B27  2B29               	goto	u3823
  4809  0B28  07BF               	addwf	___flmul@prod+3,f
  4810  0B29                     u3823:
  4811  0B29                     l2722:
  4812  0B29  082A               	movf	___flmul@b+2,w
  4813  0B2A  00B0               	movwf	??___flmul
  4814  0B2B  0830               	movf	??___flmul,w
  4815  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  4816  0B2D  082D               	movf	___flmul@a+1,w
  4817  0B2E  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4818  0B33  0873               	movf	?__Umul8_16+1,w
  4819  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4820  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4821  0B36  00C1               	movwf	___flmul@temp+1
  4822  0B37  0872               	movf	?__Umul8_16,w
  4823  0B38  00C0               	movwf	___flmul@temp
  4824  0B39                     l2724:
  4825  0B39  0840               	movf	___flmul@temp,w
  4826  0B3A  00B0               	movwf	??___flmul
  4827  0B3B  0841               	movf	___flmul@temp+1,w
  4828  0B3C  00B1               	movwf	??___flmul+1
  4829  0B3D  01B2               	clrf	??___flmul+2
  4830  0B3E  01B3               	clrf	??___flmul+3
  4831  0B3F  0830               	movf	??___flmul,w
  4832  0B40  07BC               	addwf	___flmul@prod,f
  4833  0B41  0831               	movf	??___flmul+1,w
  4834  0B42  1103               	clrz
  4835  0B43  1803               	skipnc
  4836  0B44  3E01               	addlw	1
  4837  0B45  1903               	skipnz
  4838  0B46  2B48               	goto	u3831
  4839  0B47  07BD               	addwf	___flmul@prod+1,f
  4840  0B48                     u3831:
  4841  0B48  0832               	movf	??___flmul+2,w
  4842  0B49  1103               	clrz
  4843  0B4A  1803               	skipnc
  4844  0B4B  3E01               	addlw	1
  4845  0B4C  1903               	skipnz
  4846  0B4D  2B4F               	goto	u3832
  4847  0B4E  07BE               	addwf	___flmul@prod+2,f
  4848  0B4F                     u3832:
  4849  0B4F  0833               	movf	??___flmul+3,w
  4850  0B50  1103               	clrz
  4851  0B51  1803               	skipnc
  4852  0B52  3E01               	addlw	1
  4853  0B53  1903               	skipnz
  4854  0B54  2B56               	goto	u3833
  4855  0B55  07BF               	addwf	___flmul@prod+3,f
  4856  0B56                     u3833:
  4857  0B56  082A               	movf	___flmul@b+2,w
  4858  0B57  00B0               	movwf	??___flmul
  4859  0B58  0830               	movf	??___flmul,w
  4860  0B59  00F2               	movwf	__Umul8_16@multiplicand
  4861  0B5A  082E               	movf	___flmul@a+2,w
  4862  0B5B  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4863  0B60  0873               	movf	?__Umul8_16+1,w
  4864  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4865  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4866  0B63  00C1               	movwf	___flmul@temp+1
  4867  0B64  0872               	movf	?__Umul8_16,w
  4868  0B65  00C0               	movwf	___flmul@temp
  4869  0B66                     l2726:
  4870  0B66  0840               	movf	___flmul@temp,w
  4871  0B67  00B0               	movwf	??___flmul
  4872  0B68  0841               	movf	___flmul@temp+1,w
  4873  0B69  00B1               	movwf	??___flmul+1
  4874  0B6A  01B2               	clrf	??___flmul+2
  4875  0B6B  01B3               	clrf	??___flmul+3
  4876  0B6C  3008               	movlw	8
  4877  0B6D                     u3845:
  4878  0B6D  1003               	clrc
  4879  0B6E  0DB0               	rlf	??___flmul,f
  4880  0B6F  0DB1               	rlf	??___flmul+1,f
  4881  0B70  0DB2               	rlf	??___flmul+2,f
  4882  0B71  0DB3               	rlf	??___flmul+3,f
  4883  0B72                     u3840:
  4884  0B72  3EFF               	addlw	-1
  4885  0B73  1D03               	skipz
  4886  0B74  2B6D               	goto	u3845
  4887  0B75  0830               	movf	??___flmul,w
  4888  0B76  07BC               	addwf	___flmul@prod,f
  4889  0B77  0831               	movf	??___flmul+1,w
  4890  0B78  1103               	clrz
  4891  0B79  1803               	skipnc
  4892  0B7A  3E01               	addlw	1
  4893  0B7B  1903               	skipnz
  4894  0B7C  2B7E               	goto	u3851
  4895  0B7D  07BD               	addwf	___flmul@prod+1,f
  4896  0B7E                     u3851:
  4897  0B7E  0832               	movf	??___flmul+2,w
  4898  0B7F  1103               	clrz
  4899  0B80  1803               	skipnc
  4900  0B81  3E01               	addlw	1
  4901  0B82  1903               	skipnz
  4902  0B83  2B85               	goto	u3852
  4903  0B84  07BE               	addwf	___flmul@prod+2,f
  4904  0B85                     u3852:
  4905  0B85  0833               	movf	??___flmul+3,w
  4906  0B86  1103               	clrz
  4907  0B87  1803               	skipnc
  4908  0B88  3E01               	addlw	1
  4909  0B89  1903               	skipnz
  4910  0B8A  2B8C               	goto	u3853
  4911  0B8B  07BF               	addwf	___flmul@prod+3,f
  4912  0B8C                     u3853:
  4913  0B8C                     l2728:
  4914  0B8C  0836               	movf	___flmul@grs,w
  4915  0B8D  00B0               	movwf	??___flmul
  4916  0B8E  0837               	movf	___flmul@grs+1,w
  4917  0B8F  00B1               	movwf	??___flmul+1
  4918  0B90  0838               	movf	___flmul@grs+2,w
  4919  0B91  00B2               	movwf	??___flmul+2
  4920  0B92  0839               	movf	___flmul@grs+3,w
  4921  0B93  00B3               	movwf	??___flmul+3
  4922  0B94  3018               	movlw	24
  4923  0B95                     u3865:
  4924  0B95  1003               	clrc
  4925  0B96  0CB3               	rrf	??___flmul+3,f
  4926  0B97  0CB2               	rrf	??___flmul+2,f
  4927  0B98  0CB1               	rrf	??___flmul+1,f
  4928  0B99  0CB0               	rrf	??___flmul,f
  4929  0B9A                     u3860:
  4930  0B9A  3EFF               	addlw	-1
  4931  0B9B  1D03               	skipz
  4932  0B9C  2B95               	goto	u3865
  4933  0B9D  0830               	movf	??___flmul,w
  4934  0B9E  07BC               	addwf	___flmul@prod,f
  4935  0B9F  0831               	movf	??___flmul+1,w
  4936  0BA0  1103               	clrz
  4937  0BA1  1803               	skipnc
  4938  0BA2  3E01               	addlw	1
  4939  0BA3  1903               	skipnz
  4940  0BA4  2BA6               	goto	u3871
  4941  0BA5  07BD               	addwf	___flmul@prod+1,f
  4942  0BA6                     u3871:
  4943  0BA6  0832               	movf	??___flmul+2,w
  4944  0BA7  1103               	clrz
  4945  0BA8  1803               	skipnc
  4946  0BA9  3E01               	addlw	1
  4947  0BAA  1903               	skipnz
  4948  0BAB  2BAD               	goto	u3872
  4949  0BAC  07BE               	addwf	___flmul@prod+2,f
  4950  0BAD                     u3872:
  4951  0BAD  0833               	movf	??___flmul+3,w
  4952  0BAE  1103               	clrz
  4953  0BAF  1803               	skipnc
  4954  0BB0  3E01               	addlw	1
  4955  0BB1  1903               	skipnz
  4956  0BB2  2BB4               	goto	u3873
  4957  0BB3  07BF               	addwf	___flmul@prod+3,f
  4958  0BB4                     u3873:
  4959  0BB4                     l2730:
  4960  0BB4  3008               	movlw	8
  4961  0BB5  00B0               	movwf	??___flmul
  4962  0BB6                     u3885:
  4963  0BB6  1003               	clrc
  4964  0BB7  0DB6               	rlf	___flmul@grs,f
  4965  0BB8  0DB7               	rlf	___flmul@grs+1,f
  4966  0BB9  0DB8               	rlf	___flmul@grs+2,f
  4967  0BBA  0DB9               	rlf	___flmul@grs+3,f
  4968  0BBB  0BB0               	decfsz	??___flmul,f
  4969  0BBC  2BB6               	goto	u3885
  4970  0BBD                     l2732:
  4971  0BBD  083B               	movf	___flmul@bexp,w
  4972  0BBE  073A               	addwf	___flmul@aexp,w
  4973  0BBF  00B0               	movwf	??___flmul
  4974  0BC0  01B1               	clrf	??___flmul+1
  4975  0BC1  0DB1               	rlf	??___flmul+1,f
  4976  0BC2  0830               	movf	??___flmul,w
  4977  0BC3  3E82               	addlw	130
  4978  0BC4  00C0               	movwf	___flmul@temp
  4979  0BC5  0831               	movf	??___flmul+1,w
  4980  0BC6  1803               	skipnc
  4981  0BC7  3E01               	addlw	1
  4982  0BC8  3EFF               	addlw	255
  4983  0BC9  00C1               	movwf	___flmul@temp+1
  4984  0BCA  2BE8               	goto	l2744
  4985  0BCB                     l2734:
  4986  0BCB  3001               	movlw	1
  4987  0BCC  00B0               	movwf	??___flmul
  4988  0BCD                     u3895:
  4989  0BCD  1003               	clrc
  4990  0BCE  0DBC               	rlf	___flmul@prod,f
  4991  0BCF  0DBD               	rlf	___flmul@prod+1,f
  4992  0BD0  0DBE               	rlf	___flmul@prod+2,f
  4993  0BD1  0DBF               	rlf	___flmul@prod+3,f
  4994  0BD2  0BB0               	decfsz	??___flmul,f
  4995  0BD3  2BCD               	goto	u3895
  4996  0BD4                     l2736:
  4997  0BD4  1FB9               	btfss	___flmul@grs+3,7
  4998  0BD5  2BD7               	goto	u3901
  4999  0BD6  2BD8               	goto	u3900
  5000  0BD7                     u3901:
  5001  0BD7  2BD9               	goto	l2740
  5002  0BD8                     u3900:
  5003  0BD8                     l2738:
  5004  0BD8  143C               	bsf	___flmul@prod,0
  5005  0BD9                     l2740:
  5006  0BD9  3001               	movlw	1
  5007  0BDA  00B0               	movwf	??___flmul
  5008  0BDB                     u3915:
  5009  0BDB  1003               	clrc
  5010  0BDC  0DB6               	rlf	___flmul@grs,f
  5011  0BDD  0DB7               	rlf	___flmul@grs+1,f
  5012  0BDE  0DB8               	rlf	___flmul@grs+2,f
  5013  0BDF  0DB9               	rlf	___flmul@grs+3,f
  5014  0BE0  0BB0               	decfsz	??___flmul,f
  5015  0BE1  2BDB               	goto	u3915
  5016  0BE2                     l2742:
  5017  0BE2  30FF               	movlw	255
  5018  0BE3  07C0               	addwf	___flmul@temp,f
  5019  0BE4  1803               	skipnc
  5020  0BE5  0AC1               	incf	___flmul@temp+1,f
  5021  0BE6  30FF               	movlw	255
  5022  0BE7  07C1               	addwf	___flmul@temp+1,f
  5023  0BE8                     l2744:
  5024  0BE8  1FBE               	btfss	___flmul@prod+2,7
  5025  0BE9  2BEB               	goto	u3921
  5026  0BEA  2BEC               	goto	u3920
  5027  0BEB                     u3921:
  5028  0BEB  2BCB               	goto	l2734
  5029  0BEC                     u3920:
  5030  0BEC                     l2746:
  5031  0BEC  01BA               	clrf	___flmul@aexp
  5032  0BED                     l2748:
  5033  0BED  1FB9               	btfss	___flmul@grs+3,7
  5034  0BEE  2BF0               	goto	u3931
  5035  0BEF  2BF1               	goto	u3930
  5036  0BF0                     u3931:
  5037  0BF0  2C0D               	goto	l2756
  5038  0BF1                     u3930:
  5039  0BF1                     l2750:
  5040  0BF1  30FF               	movlw	255
  5041  0BF2  0536               	andwf	___flmul@grs,w
  5042  0BF3  00B0               	movwf	??___flmul
  5043  0BF4  30FF               	movlw	255
  5044  0BF5  0537               	andwf	___flmul@grs+1,w
  5045  0BF6  00B1               	movwf	??___flmul+1
  5046  0BF7  30FF               	movlw	255
  5047  0BF8  0538               	andwf	___flmul@grs+2,w
  5048  0BF9  00B2               	movwf	??___flmul+2
  5049  0BFA  307F               	movlw	127
  5050  0BFB  0539               	andwf	___flmul@grs+3,w
  5051  0BFC  00B3               	movwf	??___flmul+3
  5052  0BFD  0833               	movf	??___flmul+3,w
  5053  0BFE  0432               	iorwf	??___flmul+2,w
  5054  0BFF  0431               	iorwf	??___flmul+1,w
  5055  0C00  0430               	iorwf	??___flmul,w
  5056  0C01  1903               	skipnz
  5057  0C02  2C04               	goto	u3941
  5058  0C03  2C05               	goto	u3940
  5059  0C04                     u3941:
  5060  0C04  2C08               	goto	l814
  5061  0C05                     u3940:
  5062  0C05                     l2752:
  5063  0C05  01BA               	clrf	___flmul@aexp
  5064  0C06  0ABA               	incf	___flmul@aexp,f
  5065  0C07  2C0D               	goto	l2756
  5066  0C08                     l814:
  5067  0C08  1C3C               	btfss	___flmul@prod,0
  5068  0C09  2C0B               	goto	u3951
  5069  0C0A  2C0C               	goto	u3950
  5070  0C0B                     u3951:
  5071  0C0B  2C0D               	goto	l2756
  5072  0C0C                     u3950:
  5073  0C0C  2C05               	goto	l2752
  5074  0C0D                     l2756:
  5075  0C0D  083A               	movf	___flmul@aexp,w
  5076  0C0E  1903               	btfsc	3,2
  5077  0C0F  2C11               	goto	u3961
  5078  0C10  2C12               	goto	u3960
  5079  0C11                     u3961:
  5080  0C11  2C43               	goto	l2766
  5081  0C12                     u3960:
  5082  0C12                     l2758:
  5083  0C12  3001               	movlw	1
  5084  0C13  07BC               	addwf	___flmul@prod,f
  5085  0C14  3000               	movlw	0
  5086  0C15  1803               	skipnc
  5087  0C16  3001               	movlw	1
  5088  0C17  07BD               	addwf	___flmul@prod+1,f
  5089  0C18  3000               	movlw	0
  5090  0C19  1803               	skipnc
  5091  0C1A  3001               	movlw	1
  5092  0C1B  07BE               	addwf	___flmul@prod+2,f
  5093  0C1C  3000               	movlw	0
  5094  0C1D  1803               	skipnc
  5095  0C1E  3001               	movlw	1
  5096  0C1F  07BF               	addwf	___flmul@prod+3,f
  5097  0C20                     l2760:
  5098  0C20  1C3F               	btfss	___flmul@prod+3,0
  5099  0C21  2C23               	goto	u3971
  5100  0C22  2C24               	goto	u3970
  5101  0C23                     u3971:
  5102  0C23  2C43               	goto	l2766
  5103  0C24                     u3970:
  5104  0C24                     l2762:
  5105  0C24  083C               	movf	___flmul@prod,w
  5106  0C25  00B0               	movwf	??___flmul
  5107  0C26  083D               	movf	___flmul@prod+1,w
  5108  0C27  00B1               	movwf	??___flmul+1
  5109  0C28  083E               	movf	___flmul@prod+2,w
  5110  0C29  00B2               	movwf	??___flmul+2
  5111  0C2A  083F               	movf	___flmul@prod+3,w
  5112  0C2B  00B3               	movwf	??___flmul+3
  5113  0C2C  3001               	movlw	1
  5114  0C2D  00B4               	movwf	??___flmul+4
  5115  0C2E                     u3985:
  5116  0C2E  0D33               	rlf	??___flmul+3,w
  5117  0C2F  0CB3               	rrf	??___flmul+3,f
  5118  0C30  0CB2               	rrf	??___flmul+2,f
  5119  0C31  0CB1               	rrf	??___flmul+1,f
  5120  0C32  0CB0               	rrf	??___flmul,f
  5121  0C33                     u3980:
  5122  0C33  0BB4               	decfsz	??___flmul+4,f
  5123  0C34  2C2E               	goto	u3985
  5124  0C35  0833               	movf	??___flmul+3,w
  5125  0C36  00BF               	movwf	___flmul@prod+3
  5126  0C37  0832               	movf	??___flmul+2,w
  5127  0C38  00BE               	movwf	___flmul@prod+2
  5128  0C39  0831               	movf	??___flmul+1,w
  5129  0C3A  00BD               	movwf	___flmul@prod+1
  5130  0C3B  0830               	movf	??___flmul,w
  5131  0C3C  00BC               	movwf	___flmul@prod
  5132  0C3D                     l2764:
  5133  0C3D  3001               	movlw	1
  5134  0C3E  07C0               	addwf	___flmul@temp,f
  5135  0C3F  1803               	skipnc
  5136  0C40  0AC1               	incf	___flmul@temp+1,f
  5137  0C41  3000               	movlw	0
  5138  0C42  07C1               	addwf	___flmul@temp+1,f
  5139  0C43                     l2766:
  5140  0C43  0841               	movf	___flmul@temp+1,w
  5141  0C44  3A80               	xorlw	128
  5142  0C45  00FF               	movwf	btemp+1
  5143  0C46  3080               	movlw	128
  5144  0C47  027F               	subwf	btemp+1,w
  5145  0C48  1D03               	skipz
  5146  0C49  2C4C               	goto	u3995
  5147  0C4A  30FF               	movlw	255
  5148  0C4B  0240               	subwf	___flmul@temp,w
  5149  0C4C                     u3995:
  5150  0C4C  1C03               	skipc
  5151  0C4D  2C4F               	goto	u3991
  5152  0C4E  2C50               	goto	u3990
  5153  0C4F                     u3991:
  5154  0C4F  2C5B               	goto	l2770
  5155  0C50                     u3990:
  5156  0C50                     l2768:
  5157  0C50  307F               	movlw	127
  5158  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5159  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5160  0C53  00BF               	movwf	___flmul@prod+3
  5161  0C54  3080               	movlw	128
  5162  0C55  00BE               	movwf	___flmul@prod+2
  5163  0C56  3000               	movlw	0
  5164  0C57  00BD               	movwf	___flmul@prod+1
  5165  0C58  3000               	movlw	0
  5166  0C59  00BC               	movwf	___flmul@prod
  5167  0C5A  2C90               	goto	l820
  5168  0C5B                     l2770:
  5169  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5170  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5171  0C5D  0841               	movf	___flmul@temp+1,w
  5172  0C5E  3A80               	xorlw	128
  5173  0C5F  00FF               	movwf	btemp+1
  5174  0C60  3080               	movlw	128
  5175  0C61  027F               	subwf	btemp+1,w
  5176  0C62  1D03               	skipz
  5177  0C63  2C66               	goto	u4005
  5178  0C64  3001               	movlw	1
  5179  0C65  0240               	subwf	___flmul@temp,w
  5180  0C66                     u4005:
  5181  0C66  1803               	skipnc
  5182  0C67  2C69               	goto	u4001
  5183  0C68  2C6A               	goto	u4000
  5184  0C69                     u4001:
  5185  0C69  2C76               	goto	l2776
  5186  0C6A                     u4000:
  5187  0C6A                     l2772:
  5188  0C6A  3000               	movlw	0
  5189  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5191  0C6D  00BF               	movwf	___flmul@prod+3
  5192  0C6E  3000               	movlw	0
  5193  0C6F  00BE               	movwf	___flmul@prod+2
  5194  0C70  3000               	movlw	0
  5195  0C71  00BD               	movwf	___flmul@prod+1
  5196  0C72  3000               	movlw	0
  5197  0C73  00BC               	movwf	___flmul@prod
  5198  0C74                     l2774:
  5199  0C74  01B5               	clrf	___flmul@sign
  5200  0C75  2C90               	goto	l820
  5201  0C76                     l2776:
  5202  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5203  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5204  0C78  0840               	movf	___flmul@temp,w
  5205  0C79  00B0               	movwf	??___flmul
  5206  0C7A  0830               	movf	??___flmul,w
  5207  0C7B  00BB               	movwf	___flmul@bexp
  5208  0C7C  30FF               	movlw	255
  5209  0C7D  05BC               	andwf	___flmul@prod,f
  5210  0C7E  30FF               	movlw	255
  5211  0C7F  05BD               	andwf	___flmul@prod+1,f
  5212  0C80  307F               	movlw	127
  5213  0C81  05BE               	andwf	___flmul@prod+2,f
  5214  0C82  3000               	movlw	0
  5215  0C83  05BF               	andwf	___flmul@prod+3,f
  5216  0C84                     l2778:
  5217  0C84  1C3B               	btfss	___flmul@bexp,0
  5218  0C85  2C87               	goto	u4011
  5219  0C86  2C88               	goto	u4010
  5220  0C87                     u4011:
  5221  0C87  2C89               	goto	l2782
  5222  0C88                     u4010:
  5223  0C88                     l2780:
  5224  0C88  17BE               	bsf	___flmul@prod+2,7
  5225  0C89                     l2782:
  5226  0C89  083B               	movf	___flmul@bexp,w
  5227  0C8A  00B0               	movwf	??___flmul
  5228  0C8B  1003               	clrc
  5229  0C8C  0C30               	rrf	??___flmul,w
  5230  0C8D  00B1               	movwf	??___flmul+1
  5231  0C8E  0831               	movf	??___flmul+1,w
  5232  0C8F  00BF               	movwf	___flmul@prod+3
  5233  0C90                     l820:
  5234  0C90  0835               	movf	___flmul@sign,w
  5235  0C91  00B0               	movwf	??___flmul
  5236  0C92  0830               	movf	??___flmul,w
  5237  0C93  04BF               	iorwf	___flmul@prod+3,f
  5238  0C94                     l2784:
  5239  0C94  083F               	movf	___flmul@prod+3,w
  5240  0C95  00AB               	movwf	?___flmul+3
  5241  0C96  083E               	movf	___flmul@prod+2,w
  5242  0C97  00AA               	movwf	?___flmul+2
  5243  0C98  083D               	movf	___flmul@prod+1,w
  5244  0C99  00A9               	movwf	?___flmul+1
  5245  0C9A  083C               	movf	___flmul@prod,w
  5246  0C9B  00A8               	movwf	?___flmul
  5247  0C9C                     l808:
  5248  0C9C  0008               	return
  5249  0C9D                     __end_of___flmul:
  5250                           
  5251                           	psect	text10
  5252  07D5                     __ptext10:	
  5253 ;; *************** function __Umul8_16 *****************
  5254 ;; Defined at:
  5255 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;  multiplier      1    wreg     unsigned char 
  5258 ;;  multiplicand    1    2[COMMON] unsigned char 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  multiplier      1   10[COMMON] unsigned char 
  5261 ;;  word_mpld       2    8[COMMON] unsigned int 
  5262 ;;  product         2    6[COMMON] unsigned int 
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  2    2[COMMON] unsigned int 
  5265 ;; Registers used:
  5266 ;;		wreg, status,2, status,0
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5272 ;;      Params:         2       0       0       0       0
  5273 ;;      Locals:         5       0       0       0       0
  5274 ;;      Temps:          2       0       0       0       0
  5275 ;;      Totals:         9       0       0       0       0
  5276 ;;Total ram usage:        9 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    1
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		___flmul
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           
  5287                           ;psect for function __Umul8_16
  5288  07D5                     __Umul8_16:
  5289                           
  5290                           ;incstack = 0
  5291                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5292                           ;__Umul8_16@multiplier stored from wreg
  5293  07D5  00FA               	movwf	__Umul8_16@multiplier
  5294  07D6                     l2310:
  5295  07D6  01F6               	clrf	__Umul8_16@product
  5296  07D7  01F7               	clrf	__Umul8_16@product+1
  5297  07D8                     l2312:
  5298  07D8  0872               	movf	__Umul8_16@multiplicand,w
  5299  07D9  00F4               	movwf	??__Umul8_16
  5300  07DA  01F5               	clrf	??__Umul8_16+1
  5301  07DB  0874               	movf	??__Umul8_16,w
  5302  07DC  00F8               	movwf	__Umul8_16@word_mpld
  5303  07DD  0875               	movf	??__Umul8_16+1,w
  5304  07DE  00F9               	movwf	__Umul8_16@word_mpld+1
  5305  07DF                     l2314:
  5306  07DF  1C7A               	btfss	__Umul8_16@multiplier,0
  5307  07E0  2FE2               	goto	u2841
  5308  07E1  2FE3               	goto	u2840
  5309  07E2                     u2841:
  5310  07E2  2FE9               	goto	l827
  5311  07E3                     u2840:
  5312  07E3                     l2316:
  5313  07E3  0878               	movf	__Umul8_16@word_mpld,w
  5314  07E4  07F6               	addwf	__Umul8_16@product,f
  5315  07E5  1803               	skipnc
  5316  07E6  0AF7               	incf	__Umul8_16@product+1,f
  5317  07E7  0879               	movf	__Umul8_16@word_mpld+1,w
  5318  07E8  07F7               	addwf	__Umul8_16@product+1,f
  5319  07E9                     l827:
  5320  07E9  3001               	movlw	1
  5321  07EA                     u2855:
  5322  07EA  1003               	clrc
  5323  07EB  0DF8               	rlf	__Umul8_16@word_mpld,f
  5324  07EC  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  5325  07ED  3EFF               	addlw	-1
  5326  07EE  1D03               	skipz
  5327  07EF  2FEA               	goto	u2855
  5328  07F0  1003               	clrc
  5329  07F1  0CFA               	rrf	__Umul8_16@multiplier,f
  5330  07F2                     l2318:
  5331  07F2  087A               	movf	__Umul8_16@multiplier,w
  5332  07F3  1D03               	btfss	3,2
  5333  07F4  2FF6               	goto	u2861
  5334  07F5  2FF7               	goto	u2860
  5335  07F6                     u2861:
  5336  07F6  2FDF               	goto	l2314
  5337  07F7                     u2860:
  5338  07F7                     l2320:
  5339  07F7  0877               	movf	__Umul8_16@product+1,w
  5340  07F8  00F3               	movwf	?__Umul8_16+1
  5341  07F9  0876               	movf	__Umul8_16@product,w
  5342  07FA  00F2               	movwf	?__Umul8_16
  5343  07FB                     l829:
  5344  07FB  0008               	return
  5345  07FC                     __end_of__Umul8_16:
  5346                           
  5347                           	psect	text11
  5348  1175                     __ptext11:	
  5349 ;; *************** function __tdiv_to_l_ *****************
  5350 ;; Defined at:
  5351 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  f1              4    2[COMMON] float 
  5354 ;;  f2              4    6[COMMON] float 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  quot            4    4[BANK0 ] unsigned long 
  5357 ;;  exp1            1    9[BANK0 ] unsigned char 
  5358 ;;  cntr            1    8[BANK0 ] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  4    2[COMMON] unsigned long 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5368 ;;      Params:         8       0       0       0       0
  5369 ;;      Locals:         0       6       0       0       0
  5370 ;;      Temps:          0       4       0       0       0
  5371 ;;      Totals:         8      10       0       0       0
  5372 ;;Total ram usage:       18 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    1
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_sprintf
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           
  5383                           ;psect for function __tdiv_to_l_
  5384  1175                     __tdiv_to_l_:
  5385  1175                     l2866:	
  5386                           ;incstack = 0
  5387                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5388                           
  5389  1175  0872               	movf	__tdiv_to_l_@f1,w
  5390  1176  1283               	bcf	3,5	;RP0=0, select bank0
  5391  1177  1303               	bcf	3,6	;RP1=0, select bank0
  5392  1178  00A0               	movwf	??__tdiv_to_l_
  5393  1179  0873               	movf	__tdiv_to_l_@f1+1,w
  5394  117A  00A1               	movwf	??__tdiv_to_l_+1
  5395  117B  0874               	movf	__tdiv_to_l_@f1+2,w
  5396  117C  00A2               	movwf	??__tdiv_to_l_+2
  5397  117D  1003               	clrc
  5398  117E  0D21               	rlf	??__tdiv_to_l_+1,w
  5399  117F  0D22               	rlf	??__tdiv_to_l_+2,w
  5400  1180  00A3               	movwf	??__tdiv_to_l_+3
  5401  1181  0823               	movf	??__tdiv_to_l_+3,w
  5402  1182  00A9               	movwf	__tdiv_to_l_@exp1
  5403  1183  0829               	movf	__tdiv_to_l_@exp1,w
  5404  1184  1D03               	btfss	3,2
  5405  1185  2987               	goto	u4321
  5406  1186  2988               	goto	u4320
  5407  1187                     u4321:
  5408  1187  2991               	goto	l2872
  5409  1188                     u4320:
  5410  1188                     l2868:
  5411  1188  3000               	movlw	0
  5412  1189  00F5               	movwf	?__tdiv_to_l_+3
  5413  118A  3000               	movlw	0
  5414  118B  00F4               	movwf	?__tdiv_to_l_+2
  5415  118C  3000               	movlw	0
  5416  118D  00F3               	movwf	?__tdiv_to_l_+1
  5417  118E  3000               	movlw	0
  5418  118F  00F2               	movwf	?__tdiv_to_l_
  5419  1190  2A31               	goto	l602
  5420  1191                     l2872:
  5421  1191  0876               	movf	__tdiv_to_l_@f2,w
  5422  1192  00A0               	movwf	??__tdiv_to_l_
  5423  1193  0877               	movf	__tdiv_to_l_@f2+1,w
  5424  1194  00A1               	movwf	??__tdiv_to_l_+1
  5425  1195  0878               	movf	__tdiv_to_l_@f2+2,w
  5426  1196  00A2               	movwf	??__tdiv_to_l_+2
  5427  1197  1003               	clrc
  5428  1198  0D21               	rlf	??__tdiv_to_l_+1,w
  5429  1199  0D22               	rlf	??__tdiv_to_l_+2,w
  5430  119A  00A3               	movwf	??__tdiv_to_l_+3
  5431  119B  0823               	movf	??__tdiv_to_l_+3,w
  5432  119C  00A8               	movwf	__tdiv_to_l_@cntr
  5433  119D  0828               	movf	__tdiv_to_l_@cntr,w
  5434  119E  1D03               	btfss	3,2
  5435  119F  29A1               	goto	u4331
  5436  11A0  29A2               	goto	u4330
  5437  11A1                     u4331:
  5438  11A1  29A3               	goto	l603
  5439  11A2                     u4330:
  5440  11A2  2988               	goto	l2868
  5441  11A3                     l603:
  5442  11A3  17F3               	bsf	__tdiv_to_l_@f1+1,7
  5443  11A4                     l2878:
  5444  11A4  30FF               	movlw	255
  5445  11A5  05F2               	andwf	__tdiv_to_l_@f1,f
  5446  11A6  30FF               	movlw	255
  5447  11A7  05F3               	andwf	__tdiv_to_l_@f1+1,f
  5448  11A8  3000               	movlw	0
  5449  11A9  05F4               	andwf	__tdiv_to_l_@f1+2,f
  5450  11AA                     l2880:
  5451  11AA  17F7               	bsf	__tdiv_to_l_@f2+1,7
  5452  11AB  30FF               	movlw	255
  5453  11AC  05F6               	andwf	__tdiv_to_l_@f2,f
  5454  11AD  30FF               	movlw	255
  5455  11AE  05F7               	andwf	__tdiv_to_l_@f2+1,f
  5456  11AF  3000               	movlw	0
  5457  11B0  05F8               	andwf	__tdiv_to_l_@f2+2,f
  5458  11B1  3000               	movlw	0
  5459  11B2  00A7               	movwf	__tdiv_to_l_@quot+3
  5460  11B3  3000               	movlw	0
  5461  11B4  00A6               	movwf	__tdiv_to_l_@quot+2
  5462  11B5  3000               	movlw	0
  5463  11B6  00A5               	movwf	__tdiv_to_l_@quot+1
  5464  11B7  3000               	movlw	0
  5465  11B8  00A4               	movwf	__tdiv_to_l_@quot
  5466  11B9                     l2882:
  5467  11B9  307F               	movlw	127
  5468  11BA  02A9               	subwf	__tdiv_to_l_@exp1,f
  5469  11BB                     l2884:
  5470  11BB  3098               	movlw	152
  5471  11BC  0728               	addwf	__tdiv_to_l_@cntr,w
  5472  11BD  00A0               	movwf	??__tdiv_to_l_
  5473  11BE  0820               	movf	??__tdiv_to_l_,w
  5474  11BF  02A9               	subwf	__tdiv_to_l_@exp1,f
  5475  11C0  3018               	movlw	24
  5476  11C1  00A0               	movwf	??__tdiv_to_l_
  5477  11C2  0820               	movf	??__tdiv_to_l_,w
  5478  11C3  00A8               	movwf	__tdiv_to_l_@cntr
  5479  11C4                     l2886:
  5480  11C4  3001               	movlw	1
  5481  11C5  00A0               	movwf	??__tdiv_to_l_
  5482  11C6                     u4345:
  5483  11C6  1003               	clrc
  5484  11C7  0DA4               	rlf	__tdiv_to_l_@quot,f
  5485  11C8  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5486  11C9  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5487  11CA  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5488  11CB  0BA0               	decfsz	??__tdiv_to_l_,f
  5489  11CC  29C6               	goto	u4345
  5490  11CD                     l2888:
  5491  11CD  0878               	movf	__tdiv_to_l_@f2+2,w
  5492  11CE  0274               	subwf	__tdiv_to_l_@f1+2,w
  5493  11CF  1D03               	skipz
  5494  11D0  29D7               	goto	u4355
  5495  11D1  0877               	movf	__tdiv_to_l_@f2+1,w
  5496  11D2  0273               	subwf	__tdiv_to_l_@f1+1,w
  5497  11D3  1D03               	skipz
  5498  11D4  29D7               	goto	u4355
  5499  11D5  0876               	movf	__tdiv_to_l_@f2,w
  5500  11D6  0272               	subwf	__tdiv_to_l_@f1,w
  5501  11D7                     u4355:
  5502  11D7  1C03               	skipc
  5503  11D8  29DA               	goto	u4351
  5504  11D9  29DB               	goto	u4350
  5505  11DA                     u4351:
  5506  11DA  29E6               	goto	l2894
  5507  11DB                     u4350:
  5508  11DB                     l2890:
  5509  11DB  0876               	movf	__tdiv_to_l_@f2,w
  5510  11DC  02F2               	subwf	__tdiv_to_l_@f1,f
  5511  11DD  0877               	movf	__tdiv_to_l_@f2+1,w
  5512  11DE  1C03               	skipc
  5513  11DF  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5514  11E0  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5515  11E1  0878               	movf	__tdiv_to_l_@f2+2,w
  5516  11E2  1C03               	skipc
  5517  11E3  0A78               	incf	__tdiv_to_l_@f2+2,w
  5518  11E4  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5519  11E5                     l2892:
  5520  11E5  1424               	bsf	__tdiv_to_l_@quot,0
  5521  11E6                     l2894:
  5522  11E6  3001               	movlw	1
  5523  11E7                     u4365:
  5524  11E7  1003               	clrc
  5525  11E8  0DF2               	rlf	__tdiv_to_l_@f1,f
  5526  11E9  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5527  11EA  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5528  11EB  3EFF               	addlw	-1
  5529  11EC  1D03               	skipz
  5530  11ED  29E7               	goto	u4365
  5531  11EE                     l2896:
  5532  11EE  3001               	movlw	1
  5533  11EF  02A8               	subwf	__tdiv_to_l_@cntr,f
  5534  11F0  1D03               	btfss	3,2
  5535  11F1  29F3               	goto	u4371
  5536  11F2  29F4               	goto	u4370
  5537  11F3                     u4371:
  5538  11F3  29C4               	goto	l2886
  5539  11F4                     u4370:
  5540  11F4                     l606:
  5541  11F4  1FA9               	btfss	__tdiv_to_l_@exp1,7
  5542  11F5  29F7               	goto	u4381
  5543  11F6  29F8               	goto	u4380
  5544  11F7                     u4381:
  5545  11F7  2A12               	goto	l2906
  5546  11F8                     u4380:
  5547  11F8                     l2898:
  5548  11F8  0829               	movf	__tdiv_to_l_@exp1,w
  5549  11F9  3A80               	xorlw	128
  5550  11FA  3E97               	addlw	151
  5551  11FB  1803               	skipnc
  5552  11FC  29FE               	goto	u4391
  5553  11FD  29FF               	goto	u4390
  5554  11FE                     u4391:
  5555  11FE  2A00               	goto	l2904
  5556  11FF                     u4390:
  5557  11FF  2988               	goto	l2868
  5558  1200                     l2904:
  5559  1200  3001               	movlw	1
  5560  1201                     u4405:
  5561  1201  1003               	clrc
  5562  1202  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  5563  1203  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  5564  1204  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  5565  1205  0CA4               	rrf	__tdiv_to_l_@quot,f
  5566  1206  3EFF               	addlw	-1
  5567  1207  1D03               	skipz
  5568  1208  2A01               	goto	u4405
  5569  1209  3001               	movlw	1
  5570  120A  00A0               	movwf	??__tdiv_to_l_
  5571  120B  0820               	movf	??__tdiv_to_l_,w
  5572  120C  07A9               	addwf	__tdiv_to_l_@exp1,f
  5573  120D  1D03               	btfss	3,2
  5574  120E  2A10               	goto	u4411
  5575  120F  2A11               	goto	u4410
  5576  1210                     u4411:
  5577  1210  2A00               	goto	l2904
  5578  1211                     u4410:
  5579  1211  2A29               	goto	l2914
  5580  1212                     l2906:
  5581  1212  3018               	movlw	24
  5582  1213  0229               	subwf	__tdiv_to_l_@exp1,w
  5583  1214  1C03               	skipc
  5584  1215  2A17               	goto	u4421
  5585  1216  2A18               	goto	u4420
  5586  1217                     u4421:
  5587  1217  2A24               	goto	l613
  5588  1218                     u4420:
  5589  1218  2988               	goto	l2868
  5590  1219                     l2912:
  5591  1219  3001               	movlw	1
  5592  121A  00A0               	movwf	??__tdiv_to_l_
  5593  121B                     u4435:
  5594  121B  1003               	clrc
  5595  121C  0DA4               	rlf	__tdiv_to_l_@quot,f
  5596  121D  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5597  121E  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5598  121F  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5599  1220  0BA0               	decfsz	??__tdiv_to_l_,f
  5600  1221  2A1B               	goto	u4435
  5601  1222  3001               	movlw	1
  5602  1223  02A9               	subwf	__tdiv_to_l_@exp1,f
  5603  1224                     l613:
  5604  1224  0829               	movf	__tdiv_to_l_@exp1,w
  5605  1225  1D03               	btfss	3,2
  5606  1226  2A28               	goto	u4441
  5607  1227  2A29               	goto	u4440
  5608  1228                     u4441:
  5609  1228  2A19               	goto	l2912
  5610  1229                     u4440:
  5611  1229                     l2914:
  5612  1229  0827               	movf	__tdiv_to_l_@quot+3,w
  5613  122A  00F5               	movwf	?__tdiv_to_l_+3
  5614  122B  0826               	movf	__tdiv_to_l_@quot+2,w
  5615  122C  00F4               	movwf	?__tdiv_to_l_+2
  5616  122D  0825               	movf	__tdiv_to_l_@quot+1,w
  5617  122E  00F3               	movwf	?__tdiv_to_l_+1
  5618  122F  0824               	movf	__tdiv_to_l_@quot,w
  5619  1230  00F2               	movwf	?__tdiv_to_l_
  5620  1231                     l602:
  5621  1231  0008               	return
  5622  1232                     __end_of__tdiv_to_l_:
  5623                           
  5624                           	psect	text12
  5625  1232                     __ptext12:	
  5626 ;; *************** function __div_to_l_ *****************
  5627 ;; Defined at:
  5628 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  f1              4    2[COMMON] unsigned long 
  5631 ;;  f2              4    6[COMMON] unsigned long 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  quot            4    0[BANK0 ] unsigned long 
  5634 ;;  exp1            1    5[BANK0 ] unsigned char 
  5635 ;;  cntr            1    4[BANK0 ] unsigned char 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  4    2[COMMON] unsigned long 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5645 ;;      Params:         8       0       0       0       0
  5646 ;;      Locals:         0       6       0       0       0
  5647 ;;      Temps:          1       0       0       0       0
  5648 ;;      Totals:         9       6       0       0       0
  5649 ;;Total ram usage:       15 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    1
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_sprintf
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function __div_to_l_
  5661  1232                     __div_to_l_:
  5662  1232                     l2918:	
  5663                           ;incstack = 0
  5664                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5665                           
  5666  1232  1003               	clrc
  5667  1233  0D74               	rlf	__div_to_l_@f1+2,w
  5668  1234  0D75               	rlf	__div_to_l_@f1+3,w
  5669  1235  00FA               	movwf	??__div_to_l_
  5670  1236  087A               	movf	??__div_to_l_,w
  5671  1237  1283               	bcf	3,5	;RP0=0, select bank0
  5672  1238  1303               	bcf	3,6	;RP1=0, select bank0
  5673  1239  00A5               	movwf	__div_to_l_@exp1
  5674  123A  0825               	movf	__div_to_l_@exp1,w
  5675  123B  1D03               	btfss	3,2
  5676  123C  2A3E               	goto	u4451
  5677  123D  2A3F               	goto	u4450
  5678  123E                     u4451:
  5679  123E  2A48               	goto	l2924
  5680  123F                     u4450:
  5681  123F                     l2920:
  5682  123F  3000               	movlw	0
  5683  1240  00F5               	movwf	?__div_to_l_+3
  5684  1241  3000               	movlw	0
  5685  1242  00F4               	movwf	?__div_to_l_+2
  5686  1243  3000               	movlw	0
  5687  1244  00F3               	movwf	?__div_to_l_+1
  5688  1245  3000               	movlw	0
  5689  1246  00F2               	movwf	?__div_to_l_
  5690  1247  2AEF               	goto	l555
  5691  1248                     l2924:
  5692  1248  1003               	clrc
  5693  1249  0D78               	rlf	__div_to_l_@f2+2,w
  5694  124A  0D79               	rlf	__div_to_l_@f2+3,w
  5695  124B  00FA               	movwf	??__div_to_l_
  5696  124C  087A               	movf	??__div_to_l_,w
  5697  124D  00A4               	movwf	__div_to_l_@cntr
  5698  124E  0824               	movf	__div_to_l_@cntr,w
  5699  124F  1D03               	btfss	3,2
  5700  1250  2A52               	goto	u4461
  5701  1251  2A53               	goto	u4460
  5702  1252                     u4461:
  5703  1252  2A54               	goto	l556
  5704  1253                     u4460:
  5705  1253  2A3F               	goto	l2920
  5706  1254                     l556:
  5707  1254  17F4               	bsf	__div_to_l_@f1+2,7
  5708  1255                     l2930:
  5709  1255  30FF               	movlw	255
  5710  1256  05F2               	andwf	__div_to_l_@f1,f
  5711  1257  30FF               	movlw	255
  5712  1258  05F3               	andwf	__div_to_l_@f1+1,f
  5713  1259  30FF               	movlw	255
  5714  125A  05F4               	andwf	__div_to_l_@f1+2,f
  5715  125B  3000               	movlw	0
  5716  125C  05F5               	andwf	__div_to_l_@f1+3,f
  5717  125D                     l2932:
  5718  125D  17F8               	bsf	__div_to_l_@f2+2,7
  5719  125E  30FF               	movlw	255
  5720  125F  05F6               	andwf	__div_to_l_@f2,f
  5721  1260  30FF               	movlw	255
  5722  1261  05F7               	andwf	__div_to_l_@f2+1,f
  5723  1262  30FF               	movlw	255
  5724  1263  05F8               	andwf	__div_to_l_@f2+2,f
  5725  1264  3000               	movlw	0
  5726  1265  05F9               	andwf	__div_to_l_@f2+3,f
  5727  1266  3000               	movlw	0
  5728  1267  00A3               	movwf	__div_to_l_@quot+3
  5729  1268  3000               	movlw	0
  5730  1269  00A2               	movwf	__div_to_l_@quot+2
  5731  126A  3000               	movlw	0
  5732  126B  00A1               	movwf	__div_to_l_@quot+1
  5733  126C  3000               	movlw	0
  5734  126D  00A0               	movwf	__div_to_l_@quot
  5735  126E                     l2934:
  5736  126E  307F               	movlw	127
  5737  126F  02A5               	subwf	__div_to_l_@exp1,f
  5738  1270                     l2936:
  5739  1270  30A0               	movlw	160
  5740  1271  0724               	addwf	__div_to_l_@cntr,w
  5741  1272  00FA               	movwf	??__div_to_l_
  5742  1273  087A               	movf	??__div_to_l_,w
  5743  1274  02A5               	subwf	__div_to_l_@exp1,f
  5744  1275  3020               	movlw	32
  5745  1276  00FA               	movwf	??__div_to_l_
  5746  1277  087A               	movf	??__div_to_l_,w
  5747  1278  00A4               	movwf	__div_to_l_@cntr
  5748  1279                     l2938:
  5749  1279  3001               	movlw	1
  5750  127A  00FA               	movwf	??__div_to_l_
  5751  127B                     u4475:
  5752  127B  1003               	clrc
  5753  127C  0DA0               	rlf	__div_to_l_@quot,f
  5754  127D  0DA1               	rlf	__div_to_l_@quot+1,f
  5755  127E  0DA2               	rlf	__div_to_l_@quot+2,f
  5756  127F  0DA3               	rlf	__div_to_l_@quot+3,f
  5757  1280  0BFA               	decfsz	??__div_to_l_,f
  5758  1281  2A7B               	goto	u4475
  5759  1282                     l2940:
  5760  1282  0879               	movf	__div_to_l_@f2+3,w
  5761  1283  0275               	subwf	__div_to_l_@f1+3,w
  5762  1284  1D03               	skipz
  5763  1285  2A90               	goto	u4485
  5764  1286  0878               	movf	__div_to_l_@f2+2,w
  5765  1287  0274               	subwf	__div_to_l_@f1+2,w
  5766  1288  1D03               	skipz
  5767  1289  2A90               	goto	u4485
  5768  128A  0877               	movf	__div_to_l_@f2+1,w
  5769  128B  0273               	subwf	__div_to_l_@f1+1,w
  5770  128C  1D03               	skipz
  5771  128D  2A90               	goto	u4485
  5772  128E  0876               	movf	__div_to_l_@f2,w
  5773  128F  0272               	subwf	__div_to_l_@f1,w
  5774  1290                     u4485:
  5775  1290  1C03               	skipc
  5776  1291  2A93               	goto	u4481
  5777  1292  2A94               	goto	u4480
  5778  1293                     u4481:
  5779  1293  2AA3               	goto	l2946
  5780  1294                     u4480:
  5781  1294                     l2942:
  5782  1294  0876               	movf	__div_to_l_@f2,w
  5783  1295  02F2               	subwf	__div_to_l_@f1,f
  5784  1296  0877               	movf	__div_to_l_@f2+1,w
  5785  1297  1C03               	skipc
  5786  1298  0F77               	incfsz	__div_to_l_@f2+1,w
  5787  1299  02F3               	subwf	__div_to_l_@f1+1,f
  5788  129A  0878               	movf	__div_to_l_@f2+2,w
  5789  129B  1C03               	skipc
  5790  129C  0F78               	incfsz	__div_to_l_@f2+2,w
  5791  129D  02F4               	subwf	__div_to_l_@f1+2,f
  5792  129E  0879               	movf	__div_to_l_@f2+3,w
  5793  129F  1C03               	skipc
  5794  12A0  0F79               	incfsz	__div_to_l_@f2+3,w
  5795  12A1  02F5               	subwf	__div_to_l_@f1+3,f
  5796  12A2                     l2944:
  5797  12A2  1420               	bsf	__div_to_l_@quot,0
  5798  12A3                     l2946:
  5799  12A3  3001               	movlw	1
  5800  12A4  00FA               	movwf	??__div_to_l_
  5801  12A5                     u4495:
  5802  12A5  1003               	clrc
  5803  12A6  0DF2               	rlf	__div_to_l_@f1,f
  5804  12A7  0DF3               	rlf	__div_to_l_@f1+1,f
  5805  12A8  0DF4               	rlf	__div_to_l_@f1+2,f
  5806  12A9  0DF5               	rlf	__div_to_l_@f1+3,f
  5807  12AA  0BFA               	decfsz	??__div_to_l_,f
  5808  12AB  2AA5               	goto	u4495
  5809  12AC                     l2948:
  5810  12AC  3001               	movlw	1
  5811  12AD  02A4               	subwf	__div_to_l_@cntr,f
  5812  12AE  1D03               	btfss	3,2
  5813  12AF  2AB1               	goto	u4501
  5814  12B0  2AB2               	goto	u4500
  5815  12B1                     u4501:
  5816  12B1  2A79               	goto	l2938
  5817  12B2                     u4500:
  5818  12B2                     l559:
  5819  12B2  1FA5               	btfss	__div_to_l_@exp1,7
  5820  12B3  2AB5               	goto	u4511
  5821  12B4  2AB6               	goto	u4510
  5822  12B5                     u4511:
  5823  12B5  2AD0               	goto	l2958
  5824  12B6                     u4510:
  5825  12B6                     l2950:
  5826  12B6  0825               	movf	__div_to_l_@exp1,w
  5827  12B7  3A80               	xorlw	128
  5828  12B8  3E9F               	addlw	159
  5829  12B9  1803               	skipnc
  5830  12BA  2ABC               	goto	u4521
  5831  12BB  2ABD               	goto	u4520
  5832  12BC                     u4521:
  5833  12BC  2ABE               	goto	l2956
  5834  12BD                     u4520:
  5835  12BD  2A3F               	goto	l2920
  5836  12BE                     l2956:
  5837  12BE  3001               	movlw	1
  5838  12BF                     u4535:
  5839  12BF  1003               	clrc
  5840  12C0  0CA3               	rrf	__div_to_l_@quot+3,f
  5841  12C1  0CA2               	rrf	__div_to_l_@quot+2,f
  5842  12C2  0CA1               	rrf	__div_to_l_@quot+1,f
  5843  12C3  0CA0               	rrf	__div_to_l_@quot,f
  5844  12C4  3EFF               	addlw	-1
  5845  12C5  1D03               	skipz
  5846  12C6  2ABF               	goto	u4535
  5847  12C7  3001               	movlw	1
  5848  12C8  00FA               	movwf	??__div_to_l_
  5849  12C9  087A               	movf	??__div_to_l_,w
  5850  12CA  07A5               	addwf	__div_to_l_@exp1,f
  5851  12CB  1D03               	btfss	3,2
  5852  12CC  2ACE               	goto	u4541
  5853  12CD  2ACF               	goto	u4540
  5854  12CE                     u4541:
  5855  12CE  2ABE               	goto	l2956
  5856  12CF                     u4540:
  5857  12CF  2AE7               	goto	l2966
  5858  12D0                     l2958:
  5859  12D0  3020               	movlw	32
  5860  12D1  0225               	subwf	__div_to_l_@exp1,w
  5861  12D2  1C03               	skipc
  5862  12D3  2AD5               	goto	u4551
  5863  12D4  2AD6               	goto	u4550
  5864  12D5                     u4551:
  5865  12D5  2AE2               	goto	l566
  5866  12D6                     u4550:
  5867  12D6  2A3F               	goto	l2920
  5868  12D7                     l2964:
  5869  12D7  3001               	movlw	1
  5870  12D8  00FA               	movwf	??__div_to_l_
  5871  12D9                     u4565:
  5872  12D9  1003               	clrc
  5873  12DA  0DA0               	rlf	__div_to_l_@quot,f
  5874  12DB  0DA1               	rlf	__div_to_l_@quot+1,f
  5875  12DC  0DA2               	rlf	__div_to_l_@quot+2,f
  5876  12DD  0DA3               	rlf	__div_to_l_@quot+3,f
  5877  12DE  0BFA               	decfsz	??__div_to_l_,f
  5878  12DF  2AD9               	goto	u4565
  5879  12E0  3001               	movlw	1
  5880  12E1  02A5               	subwf	__div_to_l_@exp1,f
  5881  12E2                     l566:
  5882  12E2  0825               	movf	__div_to_l_@exp1,w
  5883  12E3  1D03               	btfss	3,2
  5884  12E4  2AE6               	goto	u4571
  5885  12E5  2AE7               	goto	u4570
  5886  12E6                     u4571:
  5887  12E6  2AD7               	goto	l2964
  5888  12E7                     u4570:
  5889  12E7                     l2966:
  5890  12E7  0823               	movf	__div_to_l_@quot+3,w
  5891  12E8  00F5               	movwf	?__div_to_l_+3
  5892  12E9  0822               	movf	__div_to_l_@quot+2,w
  5893  12EA  00F4               	movwf	?__div_to_l_+2
  5894  12EB  0821               	movf	__div_to_l_@quot+1,w
  5895  12EC  00F3               	movwf	?__div_to_l_+1
  5896  12ED  0820               	movf	__div_to_l_@quot,w
  5897  12EE  00F2               	movwf	?__div_to_l_
  5898  12EF                     l555:
  5899  12EF  0008               	return
  5900  12F0                     __end_of__div_to_l_:
  5901                           
  5902                           	psect	text13
  5903  1CB2                     __ptext13:	
  5904 ;; *************** function ___wmul *****************
  5905 ;; Defined at:
  5906 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  multiplier      2    2[COMMON] unsigned int 
  5909 ;;  multiplicand    2    4[COMMON] unsigned int 
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;  product         2    6[COMMON] unsigned int 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  2    2[COMMON] unsigned int 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5921 ;;      Params:         4       0       0       0       0
  5922 ;;      Locals:         2       0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0
  5924 ;;      Totals:         6       0       0       0       0
  5925 ;;Total ram usage:        6 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:    1
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_sprintf
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           
  5936                           ;psect for function ___wmul
  5937  1CB2                     ___wmul:
  5938  1CB2                     l2970:	
  5939                           ;incstack = 0
  5940                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5941                           
  5942  1CB2  01F6               	clrf	___wmul@product
  5943  1CB3  01F7               	clrf	___wmul@product+1
  5944  1CB4                     l2972:
  5945  1CB4  1C72               	btfss	___wmul@multiplier,0
  5946  1CB5  2CB7               	goto	u4581
  5947  1CB6  2CB8               	goto	u4580
  5948  1CB7                     u4581:
  5949  1CB7  2CBE               	goto	l385
  5950  1CB8                     u4580:
  5951  1CB8                     l2974:
  5952  1CB8  0874               	movf	___wmul@multiplicand,w
  5953  1CB9  07F6               	addwf	___wmul@product,f
  5954  1CBA  1803               	skipnc
  5955  1CBB  0AF7               	incf	___wmul@product+1,f
  5956  1CBC  0875               	movf	___wmul@multiplicand+1,w
  5957  1CBD  07F7               	addwf	___wmul@product+1,f
  5958  1CBE                     l385:
  5959  1CBE  3001               	movlw	1
  5960  1CBF                     u4595:
  5961  1CBF  1003               	clrc
  5962  1CC0  0DF4               	rlf	___wmul@multiplicand,f
  5963  1CC1  0DF5               	rlf	___wmul@multiplicand+1,f
  5964  1CC2  3EFF               	addlw	-1
  5965  1CC3  1D03               	skipz
  5966  1CC4  2CBF               	goto	u4595
  5967  1CC5                     l2976:
  5968  1CC5  3001               	movlw	1
  5969  1CC6                     u4605:
  5970  1CC6  1003               	clrc
  5971  1CC7  0CF3               	rrf	___wmul@multiplier+1,f
  5972  1CC8  0CF2               	rrf	___wmul@multiplier,f
  5973  1CC9  3EFF               	addlw	-1
  5974  1CCA  1D03               	skipz
  5975  1CCB  2CC6               	goto	u4605
  5976  1CCC                     l2978:
  5977  1CCC  0872               	movf	___wmul@multiplier,w
  5978  1CCD  0473               	iorwf	___wmul@multiplier+1,w
  5979  1CCE  1D03               	btfss	3,2
  5980  1CCF  2CD1               	goto	u4611
  5981  1CD0  2CD2               	goto	u4610
  5982  1CD1                     u4611:
  5983  1CD1  2CB4               	goto	l2972
  5984  1CD2                     u4610:
  5985  1CD2                     l2980:
  5986  1CD2  0877               	movf	___wmul@product+1,w
  5987  1CD3  00F3               	movwf	?___wmul+1
  5988  1CD4  0876               	movf	___wmul@product,w
  5989  1CD5  00F2               	movwf	?___wmul
  5990  1CD6                     l387:
  5991  1CD6  0008               	return
  5992  1CD7                     __end_of___wmul:
  5993                           
  5994                           	psect	text14
  5995  1E5D                     __ptext14:	
  5996 ;; *************** function ___llmod *****************
  5997 ;; Defined at:
  5998 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  divisor         4    2[COMMON] unsigned long 
  6001 ;;  dividend        4    6[COMMON] unsigned long 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;  counter         1    0[BANK0 ] unsigned char 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  4    2[COMMON] unsigned long 
  6006 ;; Registers used:
  6007 ;;		wreg, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6013 ;;      Params:         8       0       0       0       0
  6014 ;;      Locals:         0       1       0       0       0
  6015 ;;      Temps:          1       0       0       0       0
  6016 ;;      Totals:         9       1       0       0       0
  6017 ;;Total ram usage:       10 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    1
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_sprintf
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           
  6028                           ;psect for function ___llmod
  6029  1E5D                     ___llmod:
  6030  1E5D                     l3682:	
  6031                           ;incstack = 0
  6032                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6033                           
  6034  1E5D  0875               	movf	___llmod@divisor+3,w
  6035  1E5E  0474               	iorwf	___llmod@divisor+2,w
  6036  1E5F  0473               	iorwf	___llmod@divisor+1,w
  6037  1E60  0472               	iorwf	___llmod@divisor,w
  6038  1E61  1903               	skipnz
  6039  1E62  2E64               	goto	u5821
  6040  1E63  2E65               	goto	u5820
  6041  1E64                     u5821:
  6042  1E64  2EAA               	goto	l3698
  6043  1E65                     u5820:
  6044  1E65                     l3684:
  6045  1E65  1283               	bcf	3,5	;RP0=0, select bank0
  6046  1E66  1303               	bcf	3,6	;RP1=0, select bank0
  6047  1E67  01A0               	clrf	___llmod@counter
  6048  1E68  0AA0               	incf	___llmod@counter,f
  6049  1E69  2E77               	goto	l3688
  6050  1E6A                     l3686:
  6051  1E6A  3001               	movlw	1
  6052  1E6B  00FA               	movwf	??___llmod
  6053  1E6C                     u5835:
  6054  1E6C  1003               	clrc
  6055  1E6D  0DF2               	rlf	___llmod@divisor,f
  6056  1E6E  0DF3               	rlf	___llmod@divisor+1,f
  6057  1E6F  0DF4               	rlf	___llmod@divisor+2,f
  6058  1E70  0DF5               	rlf	___llmod@divisor+3,f
  6059  1E71  0BFA               	decfsz	??___llmod,f
  6060  1E72  2E6C               	goto	u5835
  6061  1E73  3001               	movlw	1
  6062  1E74  00FA               	movwf	??___llmod
  6063  1E75  087A               	movf	??___llmod,w
  6064  1E76  07A0               	addwf	___llmod@counter,f
  6065  1E77                     l3688:
  6066  1E77  1FF5               	btfss	___llmod@divisor+3,7
  6067  1E78  2E7A               	goto	u5841
  6068  1E79  2E7B               	goto	u5840
  6069  1E7A                     u5841:
  6070  1E7A  2E6A               	goto	l3686
  6071  1E7B                     u5840:
  6072  1E7B                     l3690:
  6073  1E7B  0875               	movf	___llmod@divisor+3,w
  6074  1E7C  0279               	subwf	___llmod@dividend+3,w
  6075  1E7D  1D03               	skipz
  6076  1E7E  2E89               	goto	u5855
  6077  1E7F  0874               	movf	___llmod@divisor+2,w
  6078  1E80  0278               	subwf	___llmod@dividend+2,w
  6079  1E81  1D03               	skipz
  6080  1E82  2E89               	goto	u5855
  6081  1E83  0873               	movf	___llmod@divisor+1,w
  6082  1E84  0277               	subwf	___llmod@dividend+1,w
  6083  1E85  1D03               	skipz
  6084  1E86  2E89               	goto	u5855
  6085  1E87  0872               	movf	___llmod@divisor,w
  6086  1E88  0276               	subwf	___llmod@dividend,w
  6087  1E89                     u5855:
  6088  1E89  1C03               	skipc
  6089  1E8A  2E8C               	goto	u5851
  6090  1E8B  2E8D               	goto	u5850
  6091  1E8C                     u5851:
  6092  1E8C  2E9B               	goto	l3694
  6093  1E8D                     u5850:
  6094  1E8D                     l3692:
  6095  1E8D  0872               	movf	___llmod@divisor,w
  6096  1E8E  02F6               	subwf	___llmod@dividend,f
  6097  1E8F  0873               	movf	___llmod@divisor+1,w
  6098  1E90  1C03               	skipc
  6099  1E91  0F73               	incfsz	___llmod@divisor+1,w
  6100  1E92  02F7               	subwf	___llmod@dividend+1,f
  6101  1E93  0874               	movf	___llmod@divisor+2,w
  6102  1E94  1C03               	skipc
  6103  1E95  0F74               	incfsz	___llmod@divisor+2,w
  6104  1E96  02F8               	subwf	___llmod@dividend+2,f
  6105  1E97  0875               	movf	___llmod@divisor+3,w
  6106  1E98  1C03               	skipc
  6107  1E99  0F75               	incfsz	___llmod@divisor+3,w
  6108  1E9A  02F9               	subwf	___llmod@dividend+3,f
  6109  1E9B                     l3694:
  6110  1E9B  3001               	movlw	1
  6111  1E9C                     u5865:
  6112  1E9C  1003               	clrc
  6113  1E9D  0CF5               	rrf	___llmod@divisor+3,f
  6114  1E9E  0CF4               	rrf	___llmod@divisor+2,f
  6115  1E9F  0CF3               	rrf	___llmod@divisor+1,f
  6116  1EA0  0CF2               	rrf	___llmod@divisor,f
  6117  1EA1  3EFF               	addlw	-1
  6118  1EA2  1D03               	skipz
  6119  1EA3  2E9C               	goto	u5865
  6120  1EA4                     l3696:
  6121  1EA4  3001               	movlw	1
  6122  1EA5  02A0               	subwf	___llmod@counter,f
  6123  1EA6  1D03               	btfss	3,2
  6124  1EA7  2EA9               	goto	u5871
  6125  1EA8  2EAA               	goto	u5870
  6126  1EA9                     u5871:
  6127  1EA9  2E7B               	goto	l3690
  6128  1EAA                     u5870:
  6129  1EAA                     l3698:
  6130  1EAA  0879               	movf	___llmod@dividend+3,w
  6131  1EAB  00F5               	movwf	?___llmod+3
  6132  1EAC  0878               	movf	___llmod@dividend+2,w
  6133  1EAD  00F4               	movwf	?___llmod+2
  6134  1EAE  0877               	movf	___llmod@dividend+1,w
  6135  1EAF  00F3               	movwf	?___llmod+1
  6136  1EB0  0876               	movf	___llmod@dividend,w
  6137  1EB1  00F2               	movwf	?___llmod
  6138  1EB2                     l641:
  6139  1EB2  0008               	return
  6140  1EB3                     __end_of___llmod:
  6141                           
  6142                           	psect	text15
  6143  1F84                     __ptext15:	
  6144 ;; *************** function ___fltol *****************
  6145 ;; Defined at:
  6146 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  f1              4   53[BANK0 ] unsigned long 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  exp1            1   63[BANK0 ] unsigned char 
  6151 ;;  sign1           1   62[BANK0 ] unsigned char 
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  4   53[BANK0 ] long 
  6154 ;; Registers used:
  6155 ;;		wreg, status,2, status,0
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6161 ;;      Params:         0       4       0       0       0
  6162 ;;      Locals:         0       2       0       0       0
  6163 ;;      Temps:          0       5       0       0       0
  6164 ;;      Totals:         0      11       0       0       0
  6165 ;;Total ram usage:       11 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:    1
  6168 ;; This function calls:
  6169 ;;		Nothing
  6170 ;; This function is called by:
  6171 ;;		_sprintf
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           
  6176                           ;psect for function ___fltol
  6177  1F84                     ___fltol:
  6178  1F84                     l3048:	
  6179                           ;incstack = 0
  6180                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6181                           
  6182  1F84  1003               	clrc
  6183  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  6184  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  6185  1F87  0D57               	rlf	___fltol@f1+2,w
  6186  1F88  0D58               	rlf	___fltol@f1+3,w
  6187  1F89  00D9               	movwf	??___fltol
  6188  1F8A  0859               	movf	??___fltol,w
  6189  1F8B  00DF               	movwf	___fltol@exp1
  6190  1F8C  085F               	movf	___fltol@exp1,w
  6191  1F8D  1D03               	btfss	3,2
  6192  1F8E  2F90               	goto	u4801
  6193  1F8F  2F91               	goto	u4800
  6194  1F90                     u4801:
  6195  1F90  2F9A               	goto	l3054
  6196  1F91                     u4800:
  6197  1F91                     l3050:
  6198  1F91  3000               	movlw	0
  6199  1F92  00D8               	movwf	?___fltol+3
  6200  1F93  3000               	movlw	0
  6201  1F94  00D7               	movwf	?___fltol+2
  6202  1F95  3000               	movlw	0
  6203  1F96  00D6               	movwf	?___fltol+1
  6204  1F97  3000               	movlw	0
  6205  1F98  00D5               	movwf	?___fltol
  6206  1F99  2FFF               	goto	l588
  6207  1F9A                     l3054:
  6208  1F9A  0855               	movf	___fltol@f1,w
  6209  1F9B  00D9               	movwf	??___fltol
  6210  1F9C  0856               	movf	___fltol@f1+1,w
  6211  1F9D  00DA               	movwf	??___fltol+1
  6212  1F9E  0857               	movf	___fltol@f1+2,w
  6213  1F9F  00DB               	movwf	??___fltol+2
  6214  1FA0  0858               	movf	___fltol@f1+3,w
  6215  1FA1  00DC               	movwf	??___fltol+3
  6216  1FA2  301F               	movlw	31
  6217  1FA3                     u4815:
  6218  1FA3  1003               	clrc
  6219  1FA4  0CDC               	rrf	??___fltol+3,f
  6220  1FA5  0CDB               	rrf	??___fltol+2,f
  6221  1FA6  0CDA               	rrf	??___fltol+1,f
  6222  1FA7  0CD9               	rrf	??___fltol,f
  6223  1FA8                     u4810:
  6224  1FA8  3EFF               	addlw	-1
  6225  1FA9  1D03               	skipz
  6226  1FAA  2FA3               	goto	u4815
  6227  1FAB  0859               	movf	??___fltol,w
  6228  1FAC  00DD               	movwf	??___fltol+4
  6229  1FAD  085D               	movf	??___fltol+4,w
  6230  1FAE  00DE               	movwf	___fltol@sign1
  6231  1FAF                     l3056:
  6232  1FAF  17D7               	bsf	___fltol@f1+2,7
  6233  1FB0                     l3058:
  6234  1FB0  30FF               	movlw	255
  6235  1FB1  05D5               	andwf	___fltol@f1,f
  6236  1FB2  30FF               	movlw	255
  6237  1FB3  05D6               	andwf	___fltol@f1+1,f
  6238  1FB4  30FF               	movlw	255
  6239  1FB5  05D7               	andwf	___fltol@f1+2,f
  6240  1FB6  3000               	movlw	0
  6241  1FB7  05D8               	andwf	___fltol@f1+3,f
  6242  1FB8                     l3060:
  6243  1FB8  3096               	movlw	150
  6244  1FB9  02DF               	subwf	___fltol@exp1,f
  6245  1FBA                     l3062:
  6246  1FBA  1FDF               	btfss	___fltol@exp1,7
  6247  1FBB  2FBD               	goto	u4821
  6248  1FBC  2FBE               	goto	u4820
  6249  1FBD                     u4821:
  6250  1FBD  2FD8               	goto	l3072
  6251  1FBE                     u4820:
  6252  1FBE                     l3064:
  6253  1FBE  085F               	movf	___fltol@exp1,w
  6254  1FBF  3A80               	xorlw	128
  6255  1FC0  3E97               	addlw	151
  6256  1FC1  1803               	skipnc
  6257  1FC2  2FC4               	goto	u4831
  6258  1FC3  2FC5               	goto	u4830
  6259  1FC4                     u4831:
  6260  1FC4  2FC6               	goto	l3070
  6261  1FC5                     u4830:
  6262  1FC5  2F91               	goto	l3050
  6263  1FC6                     l3070:
  6264  1FC6  3001               	movlw	1
  6265  1FC7                     u4845:
  6266  1FC7  1003               	clrc
  6267  1FC8  0CD8               	rrf	___fltol@f1+3,f
  6268  1FC9  0CD7               	rrf	___fltol@f1+2,f
  6269  1FCA  0CD6               	rrf	___fltol@f1+1,f
  6270  1FCB  0CD5               	rrf	___fltol@f1,f
  6271  1FCC  3EFF               	addlw	-1
  6272  1FCD  1D03               	skipz
  6273  1FCE  2FC7               	goto	u4845
  6274  1FCF  3001               	movlw	1
  6275  1FD0  00D9               	movwf	??___fltol
  6276  1FD1  0859               	movf	??___fltol,w
  6277  1FD2  07DF               	addwf	___fltol@exp1,f
  6278  1FD3  1D03               	btfss	3,2
  6279  1FD4  2FD6               	goto	u4851
  6280  1FD5  2FD7               	goto	u4850
  6281  1FD6                     u4851:
  6282  1FD6  2FC6               	goto	l3070
  6283  1FD7                     u4850:
  6284  1FD7  2FEF               	goto	l3080
  6285  1FD8                     l3072:
  6286  1FD8  3020               	movlw	32
  6287  1FD9  025F               	subwf	___fltol@exp1,w
  6288  1FDA  1C03               	skipc
  6289  1FDB  2FDD               	goto	u4861
  6290  1FDC  2FDE               	goto	u4860
  6291  1FDD                     u4861:
  6292  1FDD  2FEA               	goto	l595
  6293  1FDE                     u4860:
  6294  1FDE  2F91               	goto	l3050
  6295  1FDF                     l3078:
  6296  1FDF  3001               	movlw	1
  6297  1FE0  00D9               	movwf	??___fltol
  6298  1FE1                     u4875:
  6299  1FE1  1003               	clrc
  6300  1FE2  0DD5               	rlf	___fltol@f1,f
  6301  1FE3  0DD6               	rlf	___fltol@f1+1,f
  6302  1FE4  0DD7               	rlf	___fltol@f1+2,f
  6303  1FE5  0DD8               	rlf	___fltol@f1+3,f
  6304  1FE6  0BD9               	decfsz	??___fltol,f
  6305  1FE7  2FE1               	goto	u4875
  6306  1FE8  3001               	movlw	1
  6307  1FE9  02DF               	subwf	___fltol@exp1,f
  6308  1FEA                     l595:
  6309  1FEA  085F               	movf	___fltol@exp1,w
  6310  1FEB  1D03               	btfss	3,2
  6311  1FEC  2FEE               	goto	u4881
  6312  1FED  2FEF               	goto	u4880
  6313  1FEE                     u4881:
  6314  1FEE  2FDF               	goto	l3078
  6315  1FEF                     u4880:
  6316  1FEF                     l3080:
  6317  1FEF  085E               	movf	___fltol@sign1,w
  6318  1FF0  1903               	btfsc	3,2
  6319  1FF1  2FF3               	goto	u4891
  6320  1FF2  2FF4               	goto	u4890
  6321  1FF3                     u4891:
  6322  1FF3  2FFF               	goto	l598
  6323  1FF4                     u4890:
  6324  1FF4                     l3082:
  6325  1FF4  09D5               	comf	___fltol@f1,f
  6326  1FF5  09D6               	comf	___fltol@f1+1,f
  6327  1FF6  09D7               	comf	___fltol@f1+2,f
  6328  1FF7  09D8               	comf	___fltol@f1+3,f
  6329  1FF8  0AD5               	incf	___fltol@f1,f
  6330  1FF9  1903               	skipnz
  6331  1FFA  0AD6               	incf	___fltol@f1+1,f
  6332  1FFB  1903               	skipnz
  6333  1FFC  0AD7               	incf	___fltol@f1+2,f
  6334  1FFD  1903               	skipnz
  6335  1FFE  0AD8               	incf	___fltol@f1+3,f
  6336  1FFF                     l598:
  6337  1FFF                     l588:
  6338  1FFF  0008               	return
  6339  2000                     __end_of___fltol:
  6340                           
  6341                           	psect	text16
  6342  1E0D                     __ptext16:	
  6343 ;; *************** function ___flsub *****************
  6344 ;; Defined at:
  6345 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  a               4    0[BANK1 ] long 
  6348 ;;  b               4    4[BANK1 ] long 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  4    0[BANK1 ] long 
  6353 ;; Registers used:
  6354 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6360 ;;      Params:         0       0       8       0       0
  6361 ;;      Locals:         0       0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0
  6363 ;;      Totals:         0       0       8       0       0
  6364 ;;Total ram usage:        8 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    2
  6367 ;; This function calls:
  6368 ;;		___fladd
  6369 ;; This function is called by:
  6370 ;;		_sprintf
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           
  6375                           ;psect for function ___flsub
  6376  1E0D                     ___flsub:
  6377  1E0D                     l3104:	
  6378                           ;incstack = 0
  6379                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6380                           
  6381  1E0D  3080               	movlw	128
  6382  1E0E  1683               	bsf	3,5	;RP0=1, select bank1
  6383  1E0F  1303               	bcf	3,6	;RP1=0, select bank1
  6384  1E10  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6385  1E11                     l3106:
  6386  1E11  0827               	movf	(___flsub@b+3)^(0+128),w
  6387  1E12  1283               	bcf	3,5	;RP0=0, select bank0
  6388  1E13  1303               	bcf	3,6	;RP1=0, select bank0
  6389  1E14  00D9               	movwf	___fladd@b+3
  6390  1E15  1683               	bsf	3,5	;RP0=1, select bank1
  6391  1E16  1303               	bcf	3,6	;RP1=0, select bank1
  6392  1E17  0826               	movf	(___flsub@b+2)^(0+128),w
  6393  1E18  1283               	bcf	3,5	;RP0=0, select bank0
  6394  1E19  1303               	bcf	3,6	;RP1=0, select bank0
  6395  1E1A  00D8               	movwf	___fladd@b+2
  6396  1E1B  1683               	bsf	3,5	;RP0=1, select bank1
  6397  1E1C  1303               	bcf	3,6	;RP1=0, select bank1
  6398  1E1D  0825               	movf	(___flsub@b+1)^(0+128),w
  6399  1E1E  1283               	bcf	3,5	;RP0=0, select bank0
  6400  1E1F  1303               	bcf	3,6	;RP1=0, select bank0
  6401  1E20  00D7               	movwf	___fladd@b+1
  6402  1E21  1683               	bsf	3,5	;RP0=1, select bank1
  6403  1E22  1303               	bcf	3,6	;RP1=0, select bank1
  6404  1E23  0824               	movf	___flsub@b^(0+128),w
  6405  1E24  1283               	bcf	3,5	;RP0=0, select bank0
  6406  1E25  1303               	bcf	3,6	;RP1=0, select bank0
  6407  1E26  00D6               	movwf	___fladd@b
  6408  1E27  1683               	bsf	3,5	;RP0=1, select bank1
  6409  1E28  1303               	bcf	3,6	;RP1=0, select bank1
  6410  1E29  0823               	movf	(___flsub@a+3)^(0+128),w
  6411  1E2A  1283               	bcf	3,5	;RP0=0, select bank0
  6412  1E2B  1303               	bcf	3,6	;RP1=0, select bank0
  6413  1E2C  00DD               	movwf	___fladd@a+3
  6414  1E2D  1683               	bsf	3,5	;RP0=1, select bank1
  6415  1E2E  1303               	bcf	3,6	;RP1=0, select bank1
  6416  1E2F  0822               	movf	(___flsub@a+2)^(0+128),w
  6417  1E30  1283               	bcf	3,5	;RP0=0, select bank0
  6418  1E31  1303               	bcf	3,6	;RP1=0, select bank0
  6419  1E32  00DC               	movwf	___fladd@a+2
  6420  1E33  1683               	bsf	3,5	;RP0=1, select bank1
  6421  1E34  1303               	bcf	3,6	;RP1=0, select bank1
  6422  1E35  0821               	movf	(___flsub@a+1)^(0+128),w
  6423  1E36  1283               	bcf	3,5	;RP0=0, select bank0
  6424  1E37  1303               	bcf	3,6	;RP1=0, select bank0
  6425  1E38  00DB               	movwf	___fladd@a+1
  6426  1E39  1683               	bsf	3,5	;RP0=1, select bank1
  6427  1E3A  1303               	bcf	3,6	;RP1=0, select bank1
  6428  1E3B  0820               	movf	___flsub@a^(0+128),w
  6429  1E3C  1283               	bcf	3,5	;RP0=0, select bank0
  6430  1E3D  1303               	bcf	3,6	;RP1=0, select bank0
  6431  1E3E  00DA               	movwf	___fladd@a
  6432  1E3F  120A  118A  254D  160A  158A  	fcall	___fladd
  6433  1E44  1283               	bcf	3,5	;RP0=0, select bank0
  6434  1E45  1303               	bcf	3,6	;RP1=0, select bank0
  6435  1E46  0859               	movf	?___fladd+3,w
  6436  1E47  1683               	bsf	3,5	;RP0=1, select bank1
  6437  1E48  1303               	bcf	3,6	;RP1=0, select bank1
  6438  1E49  00A3               	movwf	(?___flsub+3)^(0+128)
  6439  1E4A  1283               	bcf	3,5	;RP0=0, select bank0
  6440  1E4B  1303               	bcf	3,6	;RP1=0, select bank0
  6441  1E4C  0858               	movf	?___fladd+2,w
  6442  1E4D  1683               	bsf	3,5	;RP0=1, select bank1
  6443  1E4E  1303               	bcf	3,6	;RP1=0, select bank1
  6444  1E4F  00A2               	movwf	(?___flsub+2)^(0+128)
  6445  1E50  1283               	bcf	3,5	;RP0=0, select bank0
  6446  1E51  1303               	bcf	3,6	;RP1=0, select bank0
  6447  1E52  0857               	movf	?___fladd+1,w
  6448  1E53  1683               	bsf	3,5	;RP0=1, select bank1
  6449  1E54  1303               	bcf	3,6	;RP1=0, select bank1
  6450  1E55  00A1               	movwf	(?___flsub+1)^(0+128)
  6451  1E56  1283               	bcf	3,5	;RP0=0, select bank0
  6452  1E57  1303               	bcf	3,6	;RP1=0, select bank0
  6453  1E58  0856               	movf	?___fladd,w
  6454  1E59  1683               	bsf	3,5	;RP0=1, select bank1
  6455  1E5A  1303               	bcf	3,6	;RP1=0, select bank1
  6456  1E5B  00A0               	movwf	?___flsub^(0+128)
  6457  1E5C                     l758:
  6458  1E5C  0008               	return
  6459  1E5D                     __end_of___flsub:
  6460                           
  6461                           	psect	text17
  6462  054D                     __ptext17:	
  6463 ;; *************** function ___fladd *****************
  6464 ;; Defined at:
  6465 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  b               4   54[BANK0 ] long 
  6468 ;;  a               4   58[BANK0 ] long 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  grs             1   73[BANK0 ] unsigned char 
  6471 ;;  bexp            1   72[BANK0 ] unsigned char 
  6472 ;;  aexp            1   71[BANK0 ] unsigned char 
  6473 ;;  signs           1   70[BANK0 ] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  4   54[BANK0 ] unsigned char 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0, btemp+1
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6483 ;;      Params:         0       8       0       0       0
  6484 ;;      Locals:         0       4       0       0       0
  6485 ;;      Temps:          0       8       0       0       0
  6486 ;;      Totals:         0      20       0       0       0
  6487 ;;Total ram usage:       20 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    1
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		_sprintf
  6494 ;;		___flsub
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           
  6499                           ;psect for function ___fladd
  6500  054D                     ___fladd:
  6501  054D                     l2454:	
  6502                           ;incstack = 0
  6503                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6504                           
  6505  054D  1283               	bcf	3,5	;RP0=0, select bank0
  6506  054E  1303               	bcf	3,6	;RP1=0, select bank0
  6507  054F  0859               	movf	___fladd@b+3,w
  6508  0550  3980               	andlw	128
  6509  0551  00DE               	movwf	??___fladd
  6510  0552  085E               	movf	??___fladd,w
  6511  0553  00E6               	movwf	___fladd@signs
  6512  0554                     l2456:
  6513  0554  0859               	movf	___fladd@b+3,w
  6514  0555  00DE               	movwf	??___fladd
  6515  0556  075E               	addwf	??___fladd,w
  6516  0557  00DF               	movwf	??___fladd+1
  6517  0558  085F               	movf	??___fladd+1,w
  6518  0559  00E8               	movwf	___fladd@bexp
  6519  055A                     l2458:
  6520  055A  1FD8               	btfss	___fladd@b+2,7
  6521  055B  2D5D               	goto	u3191
  6522  055C  2D5E               	goto	u3190
  6523  055D                     u3191:
  6524  055D  2D5F               	goto	l2462
  6525  055E                     u3190:
  6526  055E                     l2460:
  6527  055E  1468               	bsf	___fladd@bexp,0
  6528  055F                     l2462:
  6529  055F  0868               	movf	___fladd@bexp,w
  6530  0560  1903               	btfsc	3,2
  6531  0561  2D63               	goto	u3201
  6532  0562  2D64               	goto	u3200
  6533  0563                     u3201:
  6534  0563  2D74               	goto	l2472
  6535  0564                     u3200:
  6536  0564                     l2464:
  6537  0564  0A68               	incf	___fladd@bexp,w
  6538  0565  1D03               	btfss	3,2
  6539  0566  2D68               	goto	u3211
  6540  0567  2D69               	goto	u3210
  6541  0568                     u3211:
  6542  0568  2D71               	goto	l2468
  6543  0569                     u3210:
  6544  0569                     l2466:
  6545  0569  3000               	movlw	0
  6546  056A  00D9               	movwf	___fladd@b+3
  6547  056B  3000               	movlw	0
  6548  056C  00D8               	movwf	___fladd@b+2
  6549  056D  3000               	movlw	0
  6550  056E  00D7               	movwf	___fladd@b+1
  6551  056F  3000               	movlw	0
  6552  0570  00D6               	movwf	___fladd@b
  6553  0571                     l2468:
  6554  0571  17D8               	bsf	___fladd@b+2,7
  6555  0572                     l2470:
  6556  0572  01D9               	clrf	___fladd@b+3
  6557  0573  2D7C               	goto	l2474
  6558  0574                     l2472:
  6559  0574  3000               	movlw	0
  6560  0575  00D9               	movwf	___fladd@b+3
  6561  0576  3000               	movlw	0
  6562  0577  00D8               	movwf	___fladd@b+2
  6563  0578  3000               	movlw	0
  6564  0579  00D7               	movwf	___fladd@b+1
  6565  057A  3000               	movlw	0
  6566  057B  00D6               	movwf	___fladd@b
  6567  057C                     l2474:
  6568  057C  085D               	movf	___fladd@a+3,w
  6569  057D  3980               	andlw	128
  6570  057E  00DE               	movwf	??___fladd
  6571  057F  085E               	movf	??___fladd,w
  6572  0580  00E7               	movwf	___fladd@aexp
  6573  0581                     l2476:
  6574  0581  0867               	movf	___fladd@aexp,w
  6575  0582  0666               	xorwf	___fladd@signs,w
  6576  0583  1903               	skipnz
  6577  0584  2D86               	goto	u3221
  6578  0585  2D87               	goto	u3220
  6579  0586                     u3221:
  6580  0586  2D88               	goto	l2480
  6581  0587                     u3220:
  6582  0587                     l2478:
  6583  0587  1766               	bsf	___fladd@signs,6
  6584  0588                     l2480:
  6585  0588  085D               	movf	___fladd@a+3,w
  6586  0589  00DE               	movwf	??___fladd
  6587  058A  075E               	addwf	??___fladd,w
  6588  058B  00DF               	movwf	??___fladd+1
  6589  058C  085F               	movf	??___fladd+1,w
  6590  058D  00E7               	movwf	___fladd@aexp
  6591  058E                     l2482:
  6592  058E  1FDC               	btfss	___fladd@a+2,7
  6593  058F  2D91               	goto	u3231
  6594  0590  2D92               	goto	u3230
  6595  0591                     u3231:
  6596  0591  2D93               	goto	l2486
  6597  0592                     u3230:
  6598  0592                     l2484:
  6599  0592  1467               	bsf	___fladd@aexp,0
  6600  0593                     l2486:
  6601  0593  0867               	movf	___fladd@aexp,w
  6602  0594  1903               	btfsc	3,2
  6603  0595  2D97               	goto	u3241
  6604  0596  2D98               	goto	u3240
  6605  0597                     u3241:
  6606  0597  2DA8               	goto	l2496
  6607  0598                     u3240:
  6608  0598                     l2488:
  6609  0598  0A67               	incf	___fladd@aexp,w
  6610  0599  1D03               	btfss	3,2
  6611  059A  2D9C               	goto	u3251
  6612  059B  2D9D               	goto	u3250
  6613  059C                     u3251:
  6614  059C  2DA5               	goto	l2492
  6615  059D                     u3250:
  6616  059D                     l2490:
  6617  059D  3000               	movlw	0
  6618  059E  00DD               	movwf	___fladd@a+3
  6619  059F  3000               	movlw	0
  6620  05A0  00DC               	movwf	___fladd@a+2
  6621  05A1  3000               	movlw	0
  6622  05A2  00DB               	movwf	___fladd@a+1
  6623  05A3  3000               	movlw	0
  6624  05A4  00DA               	movwf	___fladd@a
  6625  05A5                     l2492:
  6626  05A5  17DC               	bsf	___fladd@a+2,7
  6627  05A6                     l2494:
  6628  05A6  01DD               	clrf	___fladd@a+3
  6629  05A7  2DB0               	goto	l712
  6630  05A8                     l2496:
  6631  05A8  3000               	movlw	0
  6632  05A9  00DD               	movwf	___fladd@a+3
  6633  05AA  3000               	movlw	0
  6634  05AB  00DC               	movwf	___fladd@a+2
  6635  05AC  3000               	movlw	0
  6636  05AD  00DB               	movwf	___fladd@a+1
  6637  05AE  3000               	movlw	0
  6638  05AF  00DA               	movwf	___fladd@a
  6639  05B0                     l712:
  6640  05B0  0868               	movf	___fladd@bexp,w
  6641  05B1  0267               	subwf	___fladd@aexp,w
  6642  05B2  1803               	skipnc
  6643  05B3  2DB5               	goto	u3261
  6644  05B4  2DB6               	goto	u3260
  6645  05B5                     u3261:
  6646  05B5  2DFA               	goto	l2532
  6647  05B6                     u3260:
  6648  05B6                     l2498:
  6649  05B6  1F66               	btfss	___fladd@signs,6
  6650  05B7  2DB9               	goto	u3271
  6651  05B8  2DBA               	goto	u3270
  6652  05B9                     u3271:
  6653  05B9  2DBE               	goto	l2502
  6654  05BA                     u3270:
  6655  05BA                     l2500:
  6656  05BA  3080               	movlw	128
  6657  05BB  00DE               	movwf	??___fladd
  6658  05BC  085E               	movf	??___fladd,w
  6659  05BD  06E6               	xorwf	___fladd@signs,f
  6660  05BE                     l2502:
  6661  05BE  0868               	movf	___fladd@bexp,w
  6662  05BF  00DE               	movwf	??___fladd
  6663  05C0  085E               	movf	??___fladd,w
  6664  05C1  00E9               	movwf	___fladd@grs
  6665  05C2                     l2504:
  6666  05C2  0867               	movf	___fladd@aexp,w
  6667  05C3  00DE               	movwf	??___fladd
  6668  05C4  085E               	movf	??___fladd,w
  6669  05C5  00E8               	movwf	___fladd@bexp
  6670  05C6                     l2506:
  6671  05C6  0869               	movf	___fladd@grs,w
  6672  05C7  00DE               	movwf	??___fladd
  6673  05C8  085E               	movf	??___fladd,w
  6674  05C9  00E7               	movwf	___fladd@aexp
  6675  05CA                     l2508:
  6676  05CA  0856               	movf	___fladd@b,w
  6677  05CB  00DE               	movwf	??___fladd
  6678  05CC  085E               	movf	??___fladd,w
  6679  05CD  00E9               	movwf	___fladd@grs
  6680  05CE                     l2510:
  6681  05CE  085A               	movf	___fladd@a,w
  6682  05CF  00DE               	movwf	??___fladd
  6683  05D0  085E               	movf	??___fladd,w
  6684  05D1  00D6               	movwf	___fladd@b
  6685  05D2                     l2512:
  6686  05D2  0869               	movf	___fladd@grs,w
  6687  05D3  00DE               	movwf	??___fladd
  6688  05D4  085E               	movf	??___fladd,w
  6689  05D5  00DA               	movwf	___fladd@a
  6690  05D6                     l2514:
  6691  05D6  0857               	movf	___fladd@b+1,w
  6692  05D7  00DE               	movwf	??___fladd
  6693  05D8  085E               	movf	??___fladd,w
  6694  05D9  00E9               	movwf	___fladd@grs
  6695  05DA                     l2516:
  6696  05DA  085B               	movf	___fladd@a+1,w
  6697  05DB  00DE               	movwf	??___fladd
  6698  05DC  085E               	movf	??___fladd,w
  6699  05DD  00D7               	movwf	___fladd@b+1
  6700  05DE                     l2518:
  6701  05DE  0869               	movf	___fladd@grs,w
  6702  05DF  00DE               	movwf	??___fladd
  6703  05E0  085E               	movf	??___fladd,w
  6704  05E1  00DB               	movwf	___fladd@a+1
  6705  05E2                     l2520:
  6706  05E2  0858               	movf	___fladd@b+2,w
  6707  05E3  00DE               	movwf	??___fladd
  6708  05E4  085E               	movf	??___fladd,w
  6709  05E5  00E9               	movwf	___fladd@grs
  6710  05E6                     l2522:
  6711  05E6  085C               	movf	___fladd@a+2,w
  6712  05E7  00DE               	movwf	??___fladd
  6713  05E8  085E               	movf	??___fladd,w
  6714  05E9  00D8               	movwf	___fladd@b+2
  6715  05EA                     l2524:
  6716  05EA  0869               	movf	___fladd@grs,w
  6717  05EB  00DE               	movwf	??___fladd
  6718  05EC  085E               	movf	??___fladd,w
  6719  05ED  00DC               	movwf	___fladd@a+2
  6720  05EE                     l2526:
  6721  05EE  0859               	movf	___fladd@b+3,w
  6722  05EF  00DE               	movwf	??___fladd
  6723  05F0  085E               	movf	??___fladd,w
  6724  05F1  00E9               	movwf	___fladd@grs
  6725  05F2                     l2528:
  6726  05F2  085D               	movf	___fladd@a+3,w
  6727  05F3  00DE               	movwf	??___fladd
  6728  05F4  085E               	movf	??___fladd,w
  6729  05F5  00D9               	movwf	___fladd@b+3
  6730  05F6                     l2530:
  6731  05F6  0869               	movf	___fladd@grs,w
  6732  05F7  00DE               	movwf	??___fladd
  6733  05F8  085E               	movf	??___fladd,w
  6734  05F9  00DD               	movwf	___fladd@a+3
  6735  05FA                     l2532:
  6736  05FA  01E9               	clrf	___fladd@grs
  6737  05FB                     l2534:
  6738  05FB  0867               	movf	___fladd@aexp,w
  6739  05FC  00DE               	movwf	??___fladd
  6740  05FD  01DF               	clrf	??___fladd+1
  6741  05FE  085F               	movf	??___fladd+1,w
  6742  05FF  00E1               	movwf	??___fladd+3
  6743  0600  0868               	movf	___fladd@bexp,w
  6744  0601  025E               	subwf	??___fladd,w
  6745  0602  00E0               	movwf	??___fladd+2
  6746  0603  1C03               	skipc
  6747  0604  03E1               	decf	??___fladd+3,f
  6748  0605  0861               	movf	??___fladd+3,w
  6749  0606  3A80               	xorlw	128
  6750  0607  00FF               	movwf	btemp+1
  6751  0608  3080               	movlw	128
  6752  0609  027F               	subwf	btemp+1,w
  6753  060A  1D03               	skipz
  6754  060B  2E0E               	goto	u3285
  6755  060C  301A               	movlw	26
  6756  060D  0260               	subwf	??___fladd+2,w
  6757  060E                     u3285:
  6758  060E  1C03               	skipc
  6759  060F  2E11               	goto	u3281
  6760  0610  2E12               	goto	u3280
  6761  0611                     u3281:
  6762  0611  2E4F               	goto	l2550
  6763  0612                     u3280:
  6764  0612                     l2536:
  6765  0612  1283               	bcf	3,5	;RP0=0, select bank0
  6766  0613  1303               	bcf	3,6	;RP1=0, select bank0
  6767  0614  0859               	movf	___fladd@b+3,w
  6768  0615  0458               	iorwf	___fladd@b+2,w
  6769  0616  0457               	iorwf	___fladd@b+1,w
  6770  0617  0456               	iorwf	___fladd@b,w
  6771  0618  1D03               	skipz
  6772  0619  2E1B               	goto	u3291
  6773  061A  2E1D               	goto	u3290
  6774  061B                     u3291:
  6775  061B  3001               	movlw	1
  6776  061C  2E1E               	goto	u3300
  6777  061D                     u3290:
  6778  061D  3000               	movlw	0
  6779  061E                     u3300:
  6780  061E  00DE               	movwf	??___fladd
  6781  061F  085E               	movf	??___fladd,w
  6782  0620  00E9               	movwf	___fladd@grs
  6783  0621  3000               	movlw	0
  6784  0622  00D9               	movwf	___fladd@b+3
  6785  0623  3000               	movlw	0
  6786  0624  00D8               	movwf	___fladd@b+2
  6787  0625  3000               	movlw	0
  6788  0626  00D7               	movwf	___fladd@b+1
  6789  0627  3000               	movlw	0
  6790  0628  00D6               	movwf	___fladd@b
  6791  0629  0867               	movf	___fladd@aexp,w
  6792  062A  00DE               	movwf	??___fladd
  6793  062B  085E               	movf	??___fladd,w
  6794  062C  00E8               	movwf	___fladd@bexp
  6795  062D  2E57               	goto	l716
  6796  062E                     l718:
  6797  062E  1C69               	btfss	___fladd@grs,0
  6798  062F  2E31               	goto	u3311
  6799  0630  2E32               	goto	u3310
  6800  0631                     u3311:
  6801  0631  2E3B               	goto	l2540
  6802  0632                     u3310:
  6803  0632                     l2538:
  6804  0632  0869               	movf	___fladd@grs,w
  6805  0633  00DE               	movwf	??___fladd
  6806  0634  1003               	clrc
  6807  0635  0C5E               	rrf	??___fladd,w
  6808  0636  3801               	iorlw	1
  6809  0637  00DF               	movwf	??___fladd+1
  6810  0638  085F               	movf	??___fladd+1,w
  6811  0639  00E9               	movwf	___fladd@grs
  6812  063A  2E3D               	goto	l2542
  6813  063B                     l2540:
  6814  063B  1003               	clrc
  6815  063C  0CE9               	rrf	___fladd@grs,f
  6816  063D                     l2542:
  6817  063D  1C56               	btfss	___fladd@b,0
  6818  063E  2E40               	goto	u3321
  6819  063F  2E41               	goto	u3320
  6820  0640                     u3321:
  6821  0640  2E42               	goto	l2546
  6822  0641                     u3320:
  6823  0641                     l2544:
  6824  0641  17E9               	bsf	___fladd@grs,7
  6825  0642                     l2546:
  6826  0642  3001               	movlw	1
  6827  0643  00DE               	movwf	??___fladd
  6828  0644                     u3335:
  6829  0644  0D59               	rlf	___fladd@b+3,w
  6830  0645  0CD9               	rrf	___fladd@b+3,f
  6831  0646  0CD8               	rrf	___fladd@b+2,f
  6832  0647  0CD7               	rrf	___fladd@b+1,f
  6833  0648  0CD6               	rrf	___fladd@b,f
  6834  0649  0BDE               	decfsz	??___fladd& (0+127),f
  6835  064A  2E44               	goto	u3335
  6836  064B                     l2548:
  6837  064B  3001               	movlw	1
  6838  064C  00DE               	movwf	??___fladd
  6839  064D  085E               	movf	??___fladd,w
  6840  064E  07E8               	addwf	___fladd@bexp,f
  6841  064F                     l2550:
  6842  064F  1283               	bcf	3,5	;RP0=0, select bank0
  6843  0650  1303               	bcf	3,6	;RP1=0, select bank0
  6844  0651  0867               	movf	___fladd@aexp,w
  6845  0652  0268               	subwf	___fladd@bexp,w
  6846  0653  1C03               	skipc
  6847  0654  2E56               	goto	u3341
  6848  0655  2E57               	goto	u3340
  6849  0656                     u3341:
  6850  0656  2E2E               	goto	l718
  6851  0657                     u3340:
  6852  0657                     l716:
  6853  0657  1B66               	btfsc	___fladd@signs,6
  6854  0658  2E5A               	goto	u3351
  6855  0659  2E5B               	goto	u3350
  6856  065A                     u3351:
  6857  065A  2EA6               	goto	l2576
  6858  065B                     u3350:
  6859  065B                     l2552:
  6860  065B  0868               	movf	___fladd@bexp,w
  6861  065C  1D03               	btfss	3,2
  6862  065D  2E5F               	goto	u3361
  6863  065E  2E60               	goto	u3360
  6864  065F                     u3361:
  6865  065F  2E69               	goto	l2558
  6866  0660                     u3360:
  6867  0660                     l2554:
  6868  0660  3000               	movlw	0
  6869  0661  00D9               	movwf	?___fladd+3
  6870  0662  3000               	movlw	0
  6871  0663  00D8               	movwf	?___fladd+2
  6872  0664  3000               	movlw	0
  6873  0665  00D7               	movwf	?___fladd+1
  6874  0666  3000               	movlw	0
  6875  0667  00D6               	movwf	?___fladd
  6876  0668  2FD4               	goto	l725
  6877  0669                     l2558:
  6878  0669  085A               	movf	___fladd@a,w
  6879  066A  07D6               	addwf	___fladd@b,f
  6880  066B  085B               	movf	___fladd@a+1,w
  6881  066C  1103               	clrz
  6882  066D  1803               	skipnc
  6883  066E  3E01               	addlw	1
  6884  066F  1903               	skipnz
  6885  0670  2E72               	goto	u3371
  6886  0671  07D7               	addwf	___fladd@b+1,f
  6887  0672                     u3371:
  6888  0672  085C               	movf	___fladd@a+2,w
  6889  0673  1103               	clrz
  6890  0674  1803               	skipnc
  6891  0675  3E01               	addlw	1
  6892  0676  1903               	skipnz
  6893  0677  2E79               	goto	u3372
  6894  0678  07D8               	addwf	___fladd@b+2,f
  6895  0679                     u3372:
  6896  0679  085D               	movf	___fladd@a+3,w
  6897  067A  1103               	clrz
  6898  067B  1803               	skipnc
  6899  067C  3E01               	addlw	1
  6900  067D  1903               	skipnz
  6901  067E  2E80               	goto	u3373
  6902  067F  07D9               	addwf	___fladd@b+3,f
  6903  0680                     u3373:
  6904  0680                     l2560:
  6905  0680  1C59               	btfss	___fladd@b+3,0
  6906  0681  2E83               	goto	u3381
  6907  0682  2E84               	goto	u3380
  6908  0683                     u3381:
  6909  0683  2F5A               	goto	l2610
  6910  0684                     u3380:
  6911  0684                     l2562:
  6912  0684  1C69               	btfss	___fladd@grs,0
  6913  0685  2E87               	goto	u3391
  6914  0686  2E88               	goto	u3390
  6915  0687                     u3391:
  6916  0687  2E91               	goto	l2566
  6917  0688                     u3390:
  6918  0688                     l2564:
  6919  0688  0869               	movf	___fladd@grs,w
  6920  0689  00DE               	movwf	??___fladd
  6921  068A  1003               	clrc
  6922  068B  0C5E               	rrf	??___fladd,w
  6923  068C  3801               	iorlw	1
  6924  068D  00DF               	movwf	??___fladd+1
  6925  068E  085F               	movf	??___fladd+1,w
  6926  068F  00E9               	movwf	___fladd@grs
  6927  0690  2E93               	goto	l2568
  6928  0691                     l2566:
  6929  0691  1003               	clrc
  6930  0692  0CE9               	rrf	___fladd@grs,f
  6931  0693                     l2568:
  6932  0693  1C56               	btfss	___fladd@b,0
  6933  0694  2E96               	goto	u3401
  6934  0695  2E97               	goto	u3400
  6935  0696                     u3401:
  6936  0696  2E98               	goto	l2572
  6937  0697                     u3400:
  6938  0697                     l2570:
  6939  0697  17E9               	bsf	___fladd@grs,7
  6940  0698                     l2572:
  6941  0698  3001               	movlw	1
  6942  0699  00DE               	movwf	??___fladd
  6943  069A                     u3415:
  6944  069A  0D59               	rlf	___fladd@b+3,w
  6945  069B  0CD9               	rrf	___fladd@b+3,f
  6946  069C  0CD8               	rrf	___fladd@b+2,f
  6947  069D  0CD7               	rrf	___fladd@b+1,f
  6948  069E  0CD6               	rrf	___fladd@b,f
  6949  069F  0BDE               	decfsz	??___fladd& (0+127),f
  6950  06A0  2E9A               	goto	u3415
  6951  06A1                     l2574:
  6952  06A1  3001               	movlw	1
  6953  06A2  00DE               	movwf	??___fladd
  6954  06A3  085E               	movf	??___fladd,w
  6955  06A4  07E8               	addwf	___fladd@bexp,f
  6956  06A5  2F5A               	goto	l2610
  6957  06A6                     l2576:
  6958  06A6  0859               	movf	___fladd@b+3,w
  6959  06A7  3A80               	xorlw	128
  6960  06A8  00FF               	movwf	btemp+1
  6961  06A9  085D               	movf	___fladd@a+3,w
  6962  06AA  3A80               	xorlw	128
  6963  06AB  027F               	subwf	btemp+1,w
  6964  06AC  1D03               	skipz
  6965  06AD  2EB8               	goto	u3423
  6966  06AE  085C               	movf	___fladd@a+2,w
  6967  06AF  0258               	subwf	___fladd@b+2,w
  6968  06B0  1D03               	skipz
  6969  06B1  2EB8               	goto	u3423
  6970  06B2  085B               	movf	___fladd@a+1,w
  6971  06B3  0257               	subwf	___fladd@b+1,w
  6972  06B4  1D03               	skipz
  6973  06B5  2EB8               	goto	u3423
  6974  06B6  085A               	movf	___fladd@a,w
  6975  06B7  0256               	subwf	___fladd@b,w
  6976  06B8                     u3423:
  6977  06B8  1803               	skipnc
  6978  06B9  2EBB               	goto	u3421
  6979  06BA  2EBC               	goto	u3420
  6980  06BB                     u3421:
  6981  06BB  2F14               	goto	l2586
  6982  06BC                     u3420:
  6983  06BC                     l2578:
  6984  06BC  30FF               	movlw	255
  6985  06BD  00DE               	movwf	??___fladd
  6986  06BE  30FF               	movlw	255
  6987  06BF  00DF               	movwf	??___fladd+1
  6988  06C0  30FF               	movlw	255
  6989  06C1  00E0               	movwf	??___fladd+2
  6990  06C2  30FF               	movlw	255
  6991  06C3  00E1               	movwf	??___fladd+3
  6992  06C4  085A               	movf	___fladd@a,w
  6993  06C5  00E2               	movwf	??___fladd+4
  6994  06C6  085B               	movf	___fladd@a+1,w
  6995  06C7  00E3               	movwf	??___fladd+5
  6996  06C8  085C               	movf	___fladd@a+2,w
  6997  06C9  00E4               	movwf	??___fladd+6
  6998  06CA  085D               	movf	___fladd@a+3,w
  6999  06CB  00E5               	movwf	??___fladd+7
  7000  06CC  0856               	movf	___fladd@b,w
  7001  06CD  02E2               	subwf	??___fladd+4,f
  7002  06CE  0857               	movf	___fladd@b+1,w
  7003  06CF  1C03               	skipc
  7004  06D0  0F57               	incfsz	___fladd@b+1,w
  7005  06D1  2ED3               	goto	u3431
  7006  06D2  2ED4               	goto	u3432
  7007  06D3                     u3431:
  7008  06D3  02E3               	subwf	??___fladd+5,f
  7009  06D4                     u3432:
  7010  06D4  0858               	movf	___fladd@b+2,w
  7011  06D5  1C03               	skipc
  7012  06D6  0F58               	incfsz	___fladd@b+2,w
  7013  06D7  2ED9               	goto	u3433
  7014  06D8  2EDA               	goto	u3434
  7015  06D9                     u3433:
  7016  06D9  02E4               	subwf	??___fladd+6,f
  7017  06DA                     u3434:
  7018  06DA  0859               	movf	___fladd@b+3,w
  7019  06DB  1C03               	skipc
  7020  06DC  0F59               	incfsz	___fladd@b+3,w
  7021  06DD  2EDF               	goto	u3435
  7022  06DE  2EE0               	goto	u3436
  7023  06DF                     u3435:
  7024  06DF  02E5               	subwf	??___fladd+7,f
  7025  06E0                     u3436:
  7026  06E0  0862               	movf	??___fladd+4,w
  7027  06E1  07DE               	addwf	??___fladd,f
  7028  06E2  0863               	movf	??___fladd+5,w
  7029  06E3  1803               	skipnc
  7030  06E4  0F63               	incfsz	??___fladd+5,w
  7031  06E5  2EE7               	goto	u3440
  7032  06E6  2EE8               	goto	u3441
  7033  06E7                     u3440:
  7034  06E7  07DF               	addwf	??___fladd+1,f
  7035  06E8                     u3441:
  7036  06E8  0864               	movf	??___fladd+6,w
  7037  06E9  1803               	skipnc
  7038  06EA  0F64               	incfsz	??___fladd+6,w
  7039  06EB  2EED               	goto	u3442
  7040  06EC  2EEE               	goto	u3443
  7041  06ED                     u3442:
  7042  06ED  07E0               	addwf	??___fladd+2,f
  7043  06EE                     u3443:
  7044  06EE  0865               	movf	??___fladd+7,w
  7045  06EF  1803               	skipnc
  7046  06F0  0A65               	incf	??___fladd+7,w
  7047  06F1  07E1               	addwf	??___fladd+3,f
  7048  06F2  0861               	movf	??___fladd+3,w
  7049  06F3  00D9               	movwf	___fladd@b+3
  7050  06F4  0860               	movf	??___fladd+2,w
  7051  06F5  00D8               	movwf	___fladd@b+2
  7052  06F6  085F               	movf	??___fladd+1,w
  7053  06F7  00D7               	movwf	___fladd@b+1
  7054  06F8  085E               	movf	??___fladd,w
  7055  06F9  00D6               	movwf	___fladd@b
  7056  06FA                     l2580:
  7057  06FA  3080               	movlw	128
  7058  06FB  00DE               	movwf	??___fladd
  7059  06FC  085E               	movf	??___fladd,w
  7060  06FD  06E6               	xorwf	___fladd@signs,f
  7061  06FE  09E9               	comf	___fladd@grs,f
  7062  06FF  0AE9               	incf	___fladd@grs,f
  7063  0700                     l2582:
  7064  0700  0869               	movf	___fladd@grs,w
  7065  0701  1D03               	btfss	3,2
  7066  0702  2F04               	goto	u3451
  7067  0703  2F05               	goto	u3450
  7068  0704                     u3451:
  7069  0704  2F22               	goto	l733
  7070  0705                     u3450:
  7071  0705                     l2584:
  7072  0705  3001               	movlw	1
  7073  0706  07D6               	addwf	___fladd@b,f
  7074  0707  3000               	movlw	0
  7075  0708  1803               	skipnc
  7076  0709  3001               	movlw	1
  7077  070A  07D7               	addwf	___fladd@b+1,f
  7078  070B  3000               	movlw	0
  7079  070C  1803               	skipnc
  7080  070D  3001               	movlw	1
  7081  070E  07D8               	addwf	___fladd@b+2,f
  7082  070F  3000               	movlw	0
  7083  0710  1803               	skipnc
  7084  0711  3001               	movlw	1
  7085  0712  07D9               	addwf	___fladd@b+3,f
  7086  0713  2F22               	goto	l733
  7087  0714                     l2586:
  7088  0714  085A               	movf	___fladd@a,w
  7089  0715  02D6               	subwf	___fladd@b,f
  7090  0716  085B               	movf	___fladd@a+1,w
  7091  0717  1C03               	skipc
  7092  0718  0F5B               	incfsz	___fladd@a+1,w
  7093  0719  02D7               	subwf	___fladd@b+1,f
  7094  071A  085C               	movf	___fladd@a+2,w
  7095  071B  1C03               	skipc
  7096  071C  0F5C               	incfsz	___fladd@a+2,w
  7097  071D  02D8               	subwf	___fladd@b+2,f
  7098  071E  085D               	movf	___fladd@a+3,w
  7099  071F  1C03               	skipc
  7100  0720  0F5D               	incfsz	___fladd@a+3,w
  7101  0721  02D9               	subwf	___fladd@b+3,f
  7102  0722                     l733:
  7103  0722  0859               	movf	___fladd@b+3,w
  7104  0723  0458               	iorwf	___fladd@b+2,w
  7105  0724  0457               	iorwf	___fladd@b+1,w
  7106  0725  0456               	iorwf	___fladd@b,w
  7107  0726  1D03               	skipz
  7108  0727  2F29               	goto	u3461
  7109  0728  2F2A               	goto	u3460
  7110  0729                     u3461:
  7111  0729  2F56               	goto	l2608
  7112  072A                     u3460:
  7113  072A                     l2588:
  7114  072A  0869               	movf	___fladd@grs,w
  7115  072B  1D03               	btfss	3,2
  7116  072C  2F2E               	goto	u3471
  7117  072D  2F2F               	goto	u3470
  7118  072E                     u3471:
  7119  072E  2F56               	goto	l2608
  7120  072F                     u3470:
  7121  072F                     l2590:
  7122  072F  3000               	movlw	0
  7123  0730  00D9               	movwf	?___fladd+3
  7124  0731  3000               	movlw	0
  7125  0732  00D8               	movwf	?___fladd+2
  7126  0733  3000               	movlw	0
  7127  0734  00D7               	movwf	?___fladd+1
  7128  0735  3000               	movlw	0
  7129  0736  00D6               	movwf	?___fladd
  7130  0737  2FD4               	goto	l725
  7131  0738                     l2594:
  7132  0738  3001               	movlw	1
  7133  0739  00DE               	movwf	??___fladd
  7134  073A                     u3485:
  7135  073A  1003               	clrc
  7136  073B  0DD6               	rlf	___fladd@b,f
  7137  073C  0DD7               	rlf	___fladd@b+1,f
  7138  073D  0DD8               	rlf	___fladd@b+2,f
  7139  073E  0DD9               	rlf	___fladd@b+3,f
  7140  073F  0BDE               	decfsz	??___fladd,f
  7141  0740  2F3A               	goto	u3485
  7142  0741                     l2596:
  7143  0741  1FE9               	btfss	___fladd@grs,7
  7144  0742  2F44               	goto	u3491
  7145  0743  2F45               	goto	u3490
  7146  0744                     u3491:
  7147  0744  2F46               	goto	l737
  7148  0745                     u3490:
  7149  0745                     l2598:
  7150  0745  1456               	bsf	___fladd@b,0
  7151  0746                     l737:
  7152  0746  1C69               	btfss	___fladd@grs,0
  7153  0747  2F49               	goto	u3501
  7154  0748  2F4A               	goto	u3500
  7155  0749                     u3501:
  7156  0749  2F4D               	goto	l2602
  7157  074A                     u3500:
  7158  074A                     l2600:
  7159  074A  1403               	setc
  7160  074B  0DE9               	rlf	___fladd@grs,f
  7161  074C  2F4F               	goto	l2604
  7162  074D                     l2602:
  7163  074D  1003               	clrc
  7164  074E  0DE9               	rlf	___fladd@grs,f
  7165  074F                     l2604:
  7166  074F  0868               	movf	___fladd@bexp,w
  7167  0750  1903               	btfsc	3,2
  7168  0751  2F53               	goto	u3511
  7169  0752  2F54               	goto	u3510
  7170  0753                     u3511:
  7171  0753  2F56               	goto	l2608
  7172  0754                     u3510:
  7173  0754                     l2606:
  7174  0754  3001               	movlw	1
  7175  0755  02E8               	subwf	___fladd@bexp,f
  7176  0756                     l2608:
  7177  0756  1FD8               	btfss	___fladd@b+2,7
  7178  0757  2F59               	goto	u3521
  7179  0758  2F5A               	goto	u3520
  7180  0759                     u3521:
  7181  0759  2F38               	goto	l2594
  7182  075A                     u3520:
  7183  075A                     l2610:
  7184  075A  01E7               	clrf	___fladd@aexp
  7185  075B                     l2612:
  7186  075B  1FE9               	btfss	___fladd@grs,7
  7187  075C  2F5E               	goto	u3531
  7188  075D  2F5F               	goto	u3530
  7189  075E                     u3531:
  7190  075E  2F6D               	goto	l2620
  7191  075F                     u3530:
  7192  075F                     l2614:
  7193  075F  0869               	movf	___fladd@grs,w
  7194  0760  397F               	andlw	127
  7195  0761  1903               	btfsc	3,2
  7196  0762  2F64               	goto	u3541
  7197  0763  2F65               	goto	u3540
  7198  0764                     u3541:
  7199  0764  2F68               	goto	l743
  7200  0765                     u3540:
  7201  0765                     l2616:
  7202  0765  01E7               	clrf	___fladd@aexp
  7203  0766  0AE7               	incf	___fladd@aexp,f
  7204  0767  2F6D               	goto	l2620
  7205  0768                     l743:
  7206  0768  1C56               	btfss	___fladd@b,0
  7207  0769  2F6B               	goto	u3551
  7208  076A  2F6C               	goto	u3550
  7209  076B                     u3551:
  7210  076B  2F6D               	goto	l2620
  7211  076C                     u3550:
  7212  076C  2F65               	goto	l2616
  7213  076D                     l2620:
  7214  076D  0867               	movf	___fladd@aexp,w
  7215  076E  1903               	btfsc	3,2
  7216  076F  2F71               	goto	u3561
  7217  0770  2F72               	goto	u3560
  7218  0771                     u3561:
  7219  0771  2FA6               	goto	l746
  7220  0772                     u3560:
  7221  0772                     l2622:
  7222  0772  3001               	movlw	1
  7223  0773  07D6               	addwf	___fladd@b,f
  7224  0774  3000               	movlw	0
  7225  0775  1803               	skipnc
  7226  0776  3001               	movlw	1
  7227  0777  07D7               	addwf	___fladd@b+1,f
  7228  0778  3000               	movlw	0
  7229  0779  1803               	skipnc
  7230  077A  3001               	movlw	1
  7231  077B  07D8               	addwf	___fladd@b+2,f
  7232  077C  3000               	movlw	0
  7233  077D  1803               	skipnc
  7234  077E  3001               	movlw	1
  7235  077F  07D9               	addwf	___fladd@b+3,f
  7236  0780                     l2624:
  7237  0780  1C59               	btfss	___fladd@b+3,0
  7238  0781  2F83               	goto	u3571
  7239  0782  2F84               	goto	u3570
  7240  0783                     u3571:
  7241  0783  2FA6               	goto	l746
  7242  0784                     u3570:
  7243  0784                     l2626:
  7244  0784  0856               	movf	___fladd@b,w
  7245  0785  00DE               	movwf	??___fladd
  7246  0786  0857               	movf	___fladd@b+1,w
  7247  0787  00DF               	movwf	??___fladd+1
  7248  0788  0858               	movf	___fladd@b+2,w
  7249  0789  00E0               	movwf	??___fladd+2
  7250  078A  0859               	movf	___fladd@b+3,w
  7251  078B  00E1               	movwf	??___fladd+3
  7252  078C  3001               	movlw	1
  7253  078D  00E2               	movwf	??___fladd+4
  7254  078E                     u3585:
  7255  078E  0D61               	rlf	??___fladd+3,w
  7256  078F  0CE1               	rrf	??___fladd+3,f
  7257  0790  0CE0               	rrf	??___fladd+2,f
  7258  0791  0CDF               	rrf	??___fladd+1,f
  7259  0792  0CDE               	rrf	??___fladd,f
  7260  0793                     u3580:
  7261  0793  0BE2               	decfsz	??___fladd+4,f
  7262  0794  2F8E               	goto	u3585
  7263  0795  0861               	movf	??___fladd+3,w
  7264  0796  00D9               	movwf	___fladd@b+3
  7265  0797  0860               	movf	??___fladd+2,w
  7266  0798  00D8               	movwf	___fladd@b+2
  7267  0799  085F               	movf	??___fladd+1,w
  7268  079A  00D7               	movwf	___fladd@b+1
  7269  079B  085E               	movf	??___fladd,w
  7270  079C  00D6               	movwf	___fladd@b
  7271  079D  0A68               	incf	___fladd@bexp,w
  7272  079E  1903               	btfsc	3,2
  7273  079F  2FA1               	goto	u3591
  7274  07A0  2FA2               	goto	u3590
  7275  07A1                     u3591:
  7276  07A1  2FA6               	goto	l746
  7277  07A2                     u3590:
  7278  07A2                     l2628:
  7279  07A2  3001               	movlw	1
  7280  07A3  00DE               	movwf	??___fladd
  7281  07A4  085E               	movf	??___fladd,w
  7282  07A5  07E8               	addwf	___fladd@bexp,f
  7283  07A6                     l746:
  7284  07A6  0A68               	incf	___fladd@bexp,w
  7285  07A7  1903               	btfsc	3,2
  7286  07A8  2FAA               	goto	u3601
  7287  07A9  2FAB               	goto	u3600
  7288  07AA                     u3601:
  7289  07AA  2FB0               	goto	l2632
  7290  07AB                     u3600:
  7291  07AB                     l2630:
  7292  07AB  0868               	movf	___fladd@bexp,w
  7293  07AC  1D03               	btfss	3,2
  7294  07AD  2FAF               	goto	u3611
  7295  07AE  2FB0               	goto	u3610
  7296  07AF                     u3611:
  7297  07AF  2FBE               	goto	l2638
  7298  07B0                     u3610:
  7299  07B0                     l2632:
  7300  07B0  3000               	movlw	0
  7301  07B1  00D9               	movwf	___fladd@b+3
  7302  07B2  3000               	movlw	0
  7303  07B3  00D8               	movwf	___fladd@b+2
  7304  07B4  3000               	movlw	0
  7305  07B5  00D7               	movwf	___fladd@b+1
  7306  07B6  3000               	movlw	0
  7307  07B7  00D6               	movwf	___fladd@b
  7308  07B8                     l2634:
  7309  07B8  0868               	movf	___fladd@bexp,w
  7310  07B9  1D03               	btfss	3,2
  7311  07BA  2FBC               	goto	u3621
  7312  07BB  2FBD               	goto	u3620
  7313  07BC                     u3621:
  7314  07BC  2FBE               	goto	l2638
  7315  07BD                     u3620:
  7316  07BD                     l2636:
  7317  07BD  01E6               	clrf	___fladd@signs
  7318  07BE                     l2638:
  7319  07BE  1C68               	btfss	___fladd@bexp,0
  7320  07BF  2FC1               	goto	u3631
  7321  07C0  2FC2               	goto	u3630
  7322  07C1                     u3631:
  7323  07C1  2FC4               	goto	l2642
  7324  07C2                     u3630:
  7325  07C2                     l2640:
  7326  07C2  17D8               	bsf	___fladd@b+2,7
  7327  07C3  2FC8               	goto	l754
  7328  07C4                     l2642:
  7329  07C4  307F               	movlw	127
  7330  07C5  00DE               	movwf	??___fladd
  7331  07C6  085E               	movf	??___fladd,w
  7332  07C7  05D8               	andwf	___fladd@b+2,f
  7333  07C8                     l754:
  7334  07C8  0868               	movf	___fladd@bexp,w
  7335  07C9  00DE               	movwf	??___fladd
  7336  07CA  1003               	clrc
  7337  07CB  0C5E               	rrf	??___fladd,w
  7338  07CC  00DF               	movwf	??___fladd+1
  7339  07CD  085F               	movf	??___fladd+1,w
  7340  07CE  00D9               	movwf	___fladd@b+3
  7341  07CF                     l2644:
  7342  07CF  1FE6               	btfss	___fladd@signs,7
  7343  07D0  2FD2               	goto	u3641
  7344  07D1  2FD3               	goto	u3640
  7345  07D2                     u3641:
  7346  07D2  2FD4               	goto	l755
  7347  07D3                     u3640:
  7348  07D3                     l2646:
  7349  07D3  17D9               	bsf	___fladd@b+3,7
  7350  07D4                     l755:
  7351  07D4                     l725:
  7352  07D4  0008               	return
  7353  07D5                     __end_of___fladd:
  7354                           
  7355                           	psect	text18
  7356  1C31                     __ptext18:	
  7357 ;; *************** function ___flneg *****************
  7358 ;; Defined at:
  7359 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7360 ;; Parameters:    Size  Location     Type
  7361 ;;  f1              4    2[COMMON] unsigned char 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;		None
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  4    2[COMMON] unsigned char 
  7366 ;; Registers used:
  7367 ;;		wreg
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7373 ;;      Params:         4       0       0       0       0
  7374 ;;      Locals:         0       0       0       0       0
  7375 ;;      Temps:          0       0       0       0       0
  7376 ;;      Totals:         4       0       0       0       0
  7377 ;;Total ram usage:        4 bytes
  7378 ;; Hardware stack levels used:    1
  7379 ;; Hardware stack levels required when called:    1
  7380 ;; This function calls:
  7381 ;;		Nothing
  7382 ;; This function is called by:
  7383 ;;		_sprintf
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           
  7388                           ;psect for function ___flneg
  7389  1C31                     ___flneg:
  7390  1C31                     l3040:	
  7391                           ;incstack = 0
  7392                           ; Regs used in ___flneg: [wreg]
  7393                           
  7394  1C31  0875               	movf	___flneg@f1+3,w
  7395  1C32  0474               	iorwf	___flneg@f1+2,w
  7396  1C33  0473               	iorwf	___flneg@f1+1,w
  7397  1C34  0472               	iorwf	___flneg@f1,w
  7398  1C35  1903               	skipnz
  7399  1C36  2C38               	goto	u4791
  7400  1C37  2C39               	goto	u4790
  7401  1C38                     u4791:
  7402  1C38  2C3B               	goto	l3044
  7403  1C39                     u4790:
  7404  1C39                     l3042:
  7405  1C39  3080               	movlw	128
  7406  1C3A  06F5               	xorwf	___flneg@f1+3,f
  7407  1C3B                     l3044:
  7408  1C3B                     l584:
  7409  1C3B  0008               	return
  7410  1C3C                     __end_of___flneg:
  7411                           
  7412                           	psect	text19
  7413  1015                     __ptext19:	
  7414 ;; *************** function ___flge *****************
  7415 ;; Defined at:
  7416 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  ff1             4    2[COMMON] unsigned char 
  7419 ;;  ff2             4    6[COMMON] unsigned char 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;		None
  7422 ;; Return value:  Size  Location     Type
  7423 ;;		None               void
  7424 ;; Registers used:
  7425 ;;		wreg, status,2, status,0
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7431 ;;      Params:         8       0       0       0       0
  7432 ;;      Locals:         0       0       0       0       0
  7433 ;;      Temps:          0       4       0       0       0
  7434 ;;      Totals:         8       4       0       0       0
  7435 ;;Total ram usage:       12 bytes
  7436 ;; Hardware stack levels used:    1
  7437 ;; Hardware stack levels required when called:    1
  7438 ;; This function calls:
  7439 ;;		Nothing
  7440 ;; This function is called by:
  7441 ;;		_sprintf
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           
  7446                           ;psect for function ___flge
  7447  1015                     ___flge:
  7448  1015                     l3020:	
  7449                           ;incstack = 0
  7450                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7451                           
  7452  1015  3000               	movlw	0
  7453  1016  0572               	andwf	___flge@ff1,w
  7454  1017  1283               	bcf	3,5	;RP0=0, select bank0
  7455  1018  1303               	bcf	3,6	;RP1=0, select bank0
  7456  1019  00A0               	movwf	??___flge
  7457  101A  3000               	movlw	0
  7458  101B  0573               	andwf	___flge@ff1+1,w
  7459  101C  00A1               	movwf	??___flge+1
  7460  101D  3080               	movlw	128
  7461  101E  0574               	andwf	___flge@ff1+2,w
  7462  101F  00A2               	movwf	??___flge+2
  7463  1020  307F               	movlw	127
  7464  1021  0575               	andwf	___flge@ff1+3,w
  7465  1022  00A3               	movwf	??___flge+3
  7466  1023  0823               	movf	??___flge+3,w
  7467  1024  0422               	iorwf	??___flge+2,w
  7468  1025  0421               	iorwf	??___flge+1,w
  7469  1026  0420               	iorwf	??___flge,w
  7470  1027  1D03               	skipz
  7471  1028  282A               	goto	u4721
  7472  1029  282B               	goto	u4720
  7473  102A                     u4721:
  7474  102A  2833               	goto	l576
  7475  102B                     u4720:
  7476  102B                     l3022:
  7477  102B  3000               	movlw	0
  7478  102C  00F5               	movwf	___flge@ff1+3
  7479  102D  3000               	movlw	0
  7480  102E  00F4               	movwf	___flge@ff1+2
  7481  102F  3000               	movlw	0
  7482  1030  00F3               	movwf	___flge@ff1+1
  7483  1031  3000               	movlw	0
  7484  1032  00F2               	movwf	___flge@ff1
  7485  1033                     l576:
  7486  1033  3000               	movlw	0
  7487  1034  0576               	andwf	___flge@ff2,w
  7488  1035  00A0               	movwf	??___flge
  7489  1036  3000               	movlw	0
  7490  1037  0577               	andwf	___flge@ff2+1,w
  7491  1038  00A1               	movwf	??___flge+1
  7492  1039  3080               	movlw	128
  7493  103A  0578               	andwf	___flge@ff2+2,w
  7494  103B  00A2               	movwf	??___flge+2
  7495  103C  307F               	movlw	127
  7496  103D  0579               	andwf	___flge@ff2+3,w
  7497  103E  00A3               	movwf	??___flge+3
  7498  103F  0823               	movf	??___flge+3,w
  7499  1040  0422               	iorwf	??___flge+2,w
  7500  1041  0421               	iorwf	??___flge+1,w
  7501  1042  0420               	iorwf	??___flge,w
  7502  1043  1D03               	skipz
  7503  1044  2846               	goto	u4731
  7504  1045  2847               	goto	u4730
  7505  1046                     u4731:
  7506  1046  284F               	goto	l3026
  7507  1047                     u4730:
  7508  1047                     l3024:
  7509  1047  3000               	movlw	0
  7510  1048  00F9               	movwf	___flge@ff2+3
  7511  1049  3000               	movlw	0
  7512  104A  00F8               	movwf	___flge@ff2+2
  7513  104B  3000               	movlw	0
  7514  104C  00F7               	movwf	___flge@ff2+1
  7515  104D  3000               	movlw	0
  7516  104E  00F6               	movwf	___flge@ff2
  7517  104F                     l3026:
  7518  104F  1FF5               	btfss	___flge@ff1+3,7
  7519  1050  2852               	goto	u4741
  7520  1051  2853               	goto	u4740
  7521  1052                     u4741:
  7522  1052  2877               	goto	l3030
  7523  1053                     u4740:
  7524  1053                     l3028:
  7525  1053  3000               	movlw	0
  7526  1054  00A0               	movwf	??___flge
  7527  1055  3000               	movlw	0
  7528  1056  00A1               	movwf	??___flge+1
  7529  1057  3000               	movlw	0
  7530  1058  00A2               	movwf	??___flge+2
  7531  1059  3080               	movlw	128
  7532  105A  00A3               	movwf	??___flge+3
  7533  105B  0872               	movf	___flge@ff1,w
  7534  105C  02A0               	subwf	??___flge,f
  7535  105D  0873               	movf	___flge@ff1+1,w
  7536  105E  1C03               	skipc
  7537  105F  0F73               	incfsz	___flge@ff1+1,w
  7538  1060  2862               	goto	u4751
  7539  1061  2863               	goto	u4752
  7540  1062                     u4751:
  7541  1062  02A1               	subwf	??___flge+1,f
  7542  1063                     u4752:
  7543  1063  0874               	movf	___flge@ff1+2,w
  7544  1064  1C03               	skipc
  7545  1065  0F74               	incfsz	___flge@ff1+2,w
  7546  1066  2868               	goto	u4753
  7547  1067  2869               	goto	u4754
  7548  1068                     u4753:
  7549  1068  02A2               	subwf	??___flge+2,f
  7550  1069                     u4754:
  7551  1069  0875               	movf	___flge@ff1+3,w
  7552  106A  1C03               	skipc
  7553  106B  0F75               	incfsz	___flge@ff1+3,w
  7554  106C  286E               	goto	u4755
  7555  106D  286F               	goto	u4756
  7556  106E                     u4755:
  7557  106E  02A3               	subwf	??___flge+3,f
  7558  106F                     u4756:
  7559  106F  0823               	movf	??___flge+3,w
  7560  1070  00F5               	movwf	___flge@ff1+3
  7561  1071  0822               	movf	??___flge+2,w
  7562  1072  00F4               	movwf	___flge@ff1+2
  7563  1073  0821               	movf	??___flge+1,w
  7564  1074  00F3               	movwf	___flge@ff1+1
  7565  1075  0820               	movf	??___flge,w
  7566  1076  00F2               	movwf	___flge@ff1
  7567  1077                     l3030:
  7568  1077  1FF9               	btfss	___flge@ff2+3,7
  7569  1078  287A               	goto	u4761
  7570  1079  287B               	goto	u4760
  7571  107A                     u4761:
  7572  107A  289F               	goto	l579
  7573  107B                     u4760:
  7574  107B                     l3032:
  7575  107B  3000               	movlw	0
  7576  107C  00A0               	movwf	??___flge
  7577  107D  3000               	movlw	0
  7578  107E  00A1               	movwf	??___flge+1
  7579  107F  3000               	movlw	0
  7580  1080  00A2               	movwf	??___flge+2
  7581  1081  3080               	movlw	128
  7582  1082  00A3               	movwf	??___flge+3
  7583  1083  0876               	movf	___flge@ff2,w
  7584  1084  02A0               	subwf	??___flge,f
  7585  1085  0877               	movf	___flge@ff2+1,w
  7586  1086  1C03               	skipc
  7587  1087  0F77               	incfsz	___flge@ff2+1,w
  7588  1088  288A               	goto	u4771
  7589  1089  288B               	goto	u4772
  7590  108A                     u4771:
  7591  108A  02A1               	subwf	??___flge+1,f
  7592  108B                     u4772:
  7593  108B  0878               	movf	___flge@ff2+2,w
  7594  108C  1C03               	skipc
  7595  108D  0F78               	incfsz	___flge@ff2+2,w
  7596  108E  2890               	goto	u4773
  7597  108F  2891               	goto	u4774
  7598  1090                     u4773:
  7599  1090  02A2               	subwf	??___flge+2,f
  7600  1091                     u4774:
  7601  1091  0879               	movf	___flge@ff2+3,w
  7602  1092  1C03               	skipc
  7603  1093  0F79               	incfsz	___flge@ff2+3,w
  7604  1094  2896               	goto	u4775
  7605  1095  2897               	goto	u4776
  7606  1096                     u4775:
  7607  1096  02A3               	subwf	??___flge+3,f
  7608  1097                     u4776:
  7609  1097  0823               	movf	??___flge+3,w
  7610  1098  00F9               	movwf	___flge@ff2+3
  7611  1099  0822               	movf	??___flge+2,w
  7612  109A  00F8               	movwf	___flge@ff2+2
  7613  109B  0821               	movf	??___flge+1,w
  7614  109C  00F7               	movwf	___flge@ff2+1
  7615  109D  0820               	movf	??___flge,w
  7616  109E  00F6               	movwf	___flge@ff2
  7617  109F                     l579:
  7618  109F  3080               	movlw	128
  7619  10A0  06F5               	xorwf	___flge@ff1+3,f
  7620  10A1  3080               	movlw	128
  7621  10A2  06F9               	xorwf	___flge@ff2+3,f
  7622  10A3  0879               	movf	___flge@ff2+3,w
  7623  10A4  0275               	subwf	___flge@ff1+3,w
  7624  10A5  1D03               	skipz
  7625  10A6  28B1               	goto	u4785
  7626  10A7  0878               	movf	___flge@ff2+2,w
  7627  10A8  0274               	subwf	___flge@ff1+2,w
  7628  10A9  1D03               	skipz
  7629  10AA  28B1               	goto	u4785
  7630  10AB  0877               	movf	___flge@ff2+1,w
  7631  10AC  0273               	subwf	___flge@ff1+1,w
  7632  10AD  1D03               	skipz
  7633  10AE  28B1               	goto	u4785
  7634  10AF  0876               	movf	___flge@ff2,w
  7635  10B0  0272               	subwf	___flge@ff1,w
  7636  10B1                     u4785:
  7637  10B1  1803               	skipnc
  7638  10B2  28B4               	goto	u4781
  7639  10B3  28B5               	goto	u4780
  7640  10B4                     u4781:
  7641  10B4  28B7               	goto	l3036
  7642  10B5                     u4780:
  7643  10B5                     l3034:
  7644  10B5  1003               	clrc
  7645  10B6  28B8               	goto	l580
  7646  10B7                     l3036:
  7647  10B7  1403               	setc
  7648  10B8                     l580:
  7649  10B8  0008               	return
  7650  10B9                     __end_of___flge:
  7651                           
  7652                           	psect	text20
  7653  1DBD                     __ptext20:	
  7654 ;; *************** function ___fleq *****************
  7655 ;; Defined at:
  7656 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  ff1             4    2[COMMON] unsigned char 
  7659 ;;  ff2             4    6[COMMON] unsigned char 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;		None               void
  7664 ;; Registers used:
  7665 ;;		wreg, status,2, status,0
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7671 ;;      Params:         8       0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0
  7673 ;;      Temps:          0       4       0       0       0
  7674 ;;      Totals:         8       4       0       0       0
  7675 ;;Total ram usage:       12 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:    1
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_sprintf
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           
  7686                           ;psect for function ___fleq
  7687  1DBD                     ___fleq:
  7688  1DBD                     l3008:	
  7689                           ;incstack = 0
  7690                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7691                           
  7692  1DBD  3000               	movlw	0
  7693  1DBE  0572               	andwf	___fleq@ff1,w
  7694  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  7695  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  7696  1DC1  00A0               	movwf	??___fleq
  7697  1DC2  3000               	movlw	0
  7698  1DC3  0573               	andwf	___fleq@ff1+1,w
  7699  1DC4  00A1               	movwf	??___fleq+1
  7700  1DC5  3080               	movlw	128
  7701  1DC6  0574               	andwf	___fleq@ff1+2,w
  7702  1DC7  00A2               	movwf	??___fleq+2
  7703  1DC8  307F               	movlw	127
  7704  1DC9  0575               	andwf	___fleq@ff1+3,w
  7705  1DCA  00A3               	movwf	??___fleq+3
  7706  1DCB  0823               	movf	??___fleq+3,w
  7707  1DCC  0422               	iorwf	??___fleq+2,w
  7708  1DCD  0421               	iorwf	??___fleq+1,w
  7709  1DCE  0420               	iorwf	??___fleq,w
  7710  1DCF  1D03               	skipz
  7711  1DD0  2DD2               	goto	u4691
  7712  1DD1  2DD3               	goto	u4690
  7713  1DD2                     u4691:
  7714  1DD2  2DDB               	goto	l571
  7715  1DD3                     u4690:
  7716  1DD3                     l3010:
  7717  1DD3  3000               	movlw	0
  7718  1DD4  00F5               	movwf	___fleq@ff1+3
  7719  1DD5  3000               	movlw	0
  7720  1DD6  00F4               	movwf	___fleq@ff1+2
  7721  1DD7  3000               	movlw	0
  7722  1DD8  00F3               	movwf	___fleq@ff1+1
  7723  1DD9  3000               	movlw	0
  7724  1DDA  00F2               	movwf	___fleq@ff1
  7725  1DDB                     l571:
  7726  1DDB  3000               	movlw	0
  7727  1DDC  0576               	andwf	___fleq@ff2,w
  7728  1DDD  00A0               	movwf	??___fleq
  7729  1DDE  3000               	movlw	0
  7730  1DDF  0577               	andwf	___fleq@ff2+1,w
  7731  1DE0  00A1               	movwf	??___fleq+1
  7732  1DE1  3080               	movlw	128
  7733  1DE2  0578               	andwf	___fleq@ff2+2,w
  7734  1DE3  00A2               	movwf	??___fleq+2
  7735  1DE4  307F               	movlw	127
  7736  1DE5  0579               	andwf	___fleq@ff2+3,w
  7737  1DE6  00A3               	movwf	??___fleq+3
  7738  1DE7  0823               	movf	??___fleq+3,w
  7739  1DE8  0422               	iorwf	??___fleq+2,w
  7740  1DE9  0421               	iorwf	??___fleq+1,w
  7741  1DEA  0420               	iorwf	??___fleq,w
  7742  1DEB  1D03               	skipz
  7743  1DEC  2DEE               	goto	u4701
  7744  1DED  2DEF               	goto	u4700
  7745  1DEE                     u4701:
  7746  1DEE  2DF7               	goto	l572
  7747  1DEF                     u4700:
  7748  1DEF                     l3012:
  7749  1DEF  3000               	movlw	0
  7750  1DF0  00F9               	movwf	___fleq@ff2+3
  7751  1DF1  3000               	movlw	0
  7752  1DF2  00F8               	movwf	___fleq@ff2+2
  7753  1DF3  3000               	movlw	0
  7754  1DF4  00F7               	movwf	___fleq@ff2+1
  7755  1DF5  3000               	movlw	0
  7756  1DF6  00F6               	movwf	___fleq@ff2
  7757  1DF7                     l572:
  7758  1DF7  0879               	movf	___fleq@ff2+3,w
  7759  1DF8  0675               	xorwf	___fleq@ff1+3,w
  7760  1DF9  1D03               	skipz
  7761  1DFA  2E05               	goto	u4715
  7762  1DFB  0878               	movf	___fleq@ff2+2,w
  7763  1DFC  0674               	xorwf	___fleq@ff1+2,w
  7764  1DFD  1D03               	skipz
  7765  1DFE  2E05               	goto	u4715
  7766  1DFF  0877               	movf	___fleq@ff2+1,w
  7767  1E00  0673               	xorwf	___fleq@ff1+1,w
  7768  1E01  1D03               	skipz
  7769  1E02  2E05               	goto	u4715
  7770  1E03  0876               	movf	___fleq@ff2,w
  7771  1E04  0672               	xorwf	___fleq@ff1,w
  7772  1E05                     u4715:
  7773  1E05  1903               	skipnz
  7774  1E06  2E08               	goto	u4711
  7775  1E07  2E09               	goto	u4710
  7776  1E08                     u4711:
  7777  1E08  2E0B               	goto	l3016
  7778  1E09                     u4710:
  7779  1E09                     l3014:
  7780  1E09  1003               	clrc
  7781  1E0A  2E0C               	goto	l573
  7782  1E0B                     l3016:
  7783  1E0B  1403               	setc
  7784  1E0C                     l573:
  7785  1E0C  0008               	return
  7786  1E0D                     __end_of___fleq:
  7787                           
  7788                           	psect	text21
  7789  1C6D                     __ptext21:	
  7790 ;; *************** function _send_crct *****************
  7791 ;; Defined at:
  7792 ;;		line 199 in file "mainp1.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  st              1    wreg     PTR unsigned char 
  7795 ;;		 -> f1(15), 
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;  st              1    6[COMMON] PTR unsigned char 
  7798 ;;		 -> f1(15), 
  7799 ;;  i               2    4[COMMON] int 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  1    wreg      void 
  7802 ;; Registers used:
  7803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7809 ;;      Params:         0       0       0       0       0
  7810 ;;      Locals:         3       0       0       0       0
  7811 ;;      Temps:          1       0       0       0       0
  7812 ;;      Totals:         4       0       0       0       0
  7813 ;;Total ram usage:        4 bytes
  7814 ;; Hardware stack levels used:    1
  7815 ;; Hardware stack levels required when called:    2
  7816 ;; This function calls:
  7817 ;;		_send_char
  7818 ;; This function is called by:
  7819 ;;		_main
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           
  7823                           
  7824                           ;psect for function _send_crct
  7825  1C6D                     _send_crct:
  7826                           
  7827                           ;incstack = 0
  7828                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7829                           ;send_crct@st stored from wreg
  7830  1C6D  00F6               	movwf	send_crct@st
  7831  1C6E                     l3532:
  7832                           
  7833                           ;mainp1.c: 200:     int i = 0;
  7834  1C6E  01F4               	clrf	send_crct@i
  7835  1C6F  01F5               	clrf	send_crct@i+1
  7836                           
  7837                           ;mainp1.c: 201:     while (st[i] != 0){
  7838  1C70  2C82               	goto	l3538
  7839  1C71                     l3534:
  7840                           
  7841                           ;mainp1.c: 202:         send_char(st[i]);
  7842  1C71  0874               	movf	send_crct@i,w
  7843  1C72  0776               	addwf	send_crct@st,w
  7844  1C73  00F3               	movwf	??_send_crct
  7845  1C74  0873               	movf	??_send_crct,w
  7846  1C75  0084               	movwf	4
  7847  1C76  0800               	movf	0,w
  7848  1C77  160A  158A  2427  160A  158A  	fcall	_send_char
  7849  1C7C                     l3536:
  7850                           
  7851                           ;mainp1.c: 203:         i++;
  7852  1C7C  3001               	movlw	1
  7853  1C7D  07F4               	addwf	send_crct@i,f
  7854  1C7E  1803               	skipnc
  7855  1C7F  0AF5               	incf	send_crct@i+1,f
  7856  1C80  3000               	movlw	0
  7857  1C81  07F5               	addwf	send_crct@i+1,f
  7858  1C82                     l3538:
  7859                           
  7860                           ;mainp1.c: 201:     while (st[i] != 0){
  7861  1C82  0874               	movf	send_crct@i,w
  7862  1C83  0776               	addwf	send_crct@st,w
  7863  1C84  00F3               	movwf	??_send_crct
  7864  1C85  0873               	movf	??_send_crct,w
  7865  1C86  0084               	movwf	4
  7866  1C87  1383               	bcf	3,7	;select IRP bank0
  7867  1C88  0800               	movf	0,w
  7868  1C89  1D03               	btfss	3,2
  7869  1C8A  2C8C               	goto	u5661
  7870  1C8B  2C8D               	goto	u5660
  7871  1C8C                     u5661:
  7872  1C8C  2C71               	goto	l3534
  7873  1C8D                     u5660:
  7874  1C8D                     l107:
  7875  1C8D  0008               	return
  7876  1C8E                     __end_of_send_crct:
  7877                           
  7878                           	psect	text22
  7879  1C27                     __ptext22:	
  7880 ;; *************** function _send_char *****************
  7881 ;; Defined at:
  7882 ;;		line 206 in file "mainp1.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  dato            1    wreg     unsigned char 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  dato            1    2[COMMON] unsigned char 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  1    wreg      void 
  7889 ;; Registers used:
  7890 ;;		wreg
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7896 ;;      Params:         0       0       0       0       0
  7897 ;;      Locals:         1       0       0       0       0
  7898 ;;      Temps:          0       0       0       0       0
  7899 ;;      Totals:         1       0       0       0       0
  7900 ;;Total ram usage:        1 bytes
  7901 ;; Hardware stack levels used:    1
  7902 ;; Hardware stack levels required when called:    1
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_send_crct
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           
  7911                           ;psect for function _send_char
  7912  1C27                     _send_char:
  7913                           
  7914                           ;incstack = 0
  7915                           ; Regs used in _send_char: [wreg]
  7916                           ;send_char@dato stored from wreg
  7917  1C27  00F2               	movwf	send_char@dato
  7918  1C28                     l2788:
  7919  1C28                     l110:	
  7920                           ;mainp1.c: 207:     while(!TXIF);
  7921                           
  7922  1C28  1283               	bcf	3,5	;RP0=0, select bank0
  7923  1C29  1303               	bcf	3,6	;RP1=0, select bank0
  7924  1C2A  1E0C               	btfss	12,4	;volatile
  7925  1C2B  2C2D               	goto	u4021
  7926  1C2C  2C2E               	goto	u4020
  7927  1C2D                     u4021:
  7928  1C2D  2C28               	goto	l110
  7929  1C2E                     u4020:
  7930  1C2E                     l2790:
  7931                           
  7932                           ;mainp1.c: 208:     TXREG = dato;
  7933  1C2E  0872               	movf	send_char@dato,w
  7934  1C2F  0099               	movwf	25	;volatile
  7935  1C30                     l113:
  7936  1C30  0008               	return
  7937  1C31                     __end_of_send_char:
  7938                           
  7939                           	psect	text23
  7940  1C8E                     __ptext23:	
  7941 ;; *************** function _conv *****************
  7942 ;; Defined at:
  7943 ;;		line 210 in file "mainp1.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;  aa              2    6[BANK0 ] int 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  result          4   10[BANK0 ] float 
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  4    6[BANK0 ] float 
  7950 ;; Registers used:
  7951 ;;		wreg, status,2, status,0, pclath, cstack
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7957 ;;      Params:         0       4       0       0       0
  7958 ;;      Locals:         0       4       0       0       0
  7959 ;;      Temps:          0       0       0       0       0
  7960 ;;      Totals:         0       8       0       0       0
  7961 ;;Total ram usage:        8 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:    2
  7964 ;; This function calls:
  7965 ;;		___xxtofl
  7966 ;; This function is called by:
  7967 ;;		_main
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           
  7972                           ;psect for function _conv
  7973  1C8E                     _conv:
  7974  1C8E                     l3220:	
  7975                           ;incstack = 0
  7976                           ; Regs used in _conv: [wreg+status,2+status,0+pclath+cstack]
  7977                           
  7978                           
  7979                           ;mainp1.c: 211:     float result;;mainp1.c: 212:     result = aa;
  7980  1C8E  1283               	bcf	3,5	;RP0=0, select bank0
  7981  1C8F  1303               	bcf	3,6	;RP1=0, select bank0
  7982  1C90  0826               	movf	conv@aa,w
  7983  1C91  00F2               	movwf	___xxtofl@val
  7984  1C92  0827               	movf	conv@aa+1,w
  7985  1C93  00F3               	movwf	___xxtofl@val+1
  7986  1C94  3000               	movlw	0
  7987  1C95  1BF3               	btfsc	___xxtofl@val+1,7
  7988  1C96  30FF               	movlw	255
  7989  1C97  00F4               	movwf	___xxtofl@val+2
  7990  1C98  00F5               	movwf	___xxtofl@val+3
  7991  1C99  3001               	movlw	1
  7992  1C9A  160A  118A  20B9  160A  158A  	fcall	___xxtofl
  7993  1C9F  0875               	movf	?___xxtofl+3,w
  7994  1CA0  1283               	bcf	3,5	;RP0=0, select bank0
  7995  1CA1  1303               	bcf	3,6	;RP1=0, select bank0
  7996  1CA2  00AD               	movwf	conv@result+3
  7997  1CA3  0874               	movf	?___xxtofl+2,w
  7998  1CA4  00AC               	movwf	conv@result+2
  7999  1CA5  0873               	movf	?___xxtofl+1,w
  8000  1CA6  00AB               	movwf	conv@result+1
  8001  1CA7  0872               	movf	?___xxtofl,w
  8002  1CA8  00AA               	movwf	conv@result
  8003  1CA9                     l3222:
  8004                           
  8005                           ;mainp1.c: 213:     return result;
  8006  1CA9  082D               	movf	conv@result+3,w
  8007  1CAA  00A9               	movwf	?_conv+3
  8008  1CAB  082C               	movf	conv@result+2,w
  8009  1CAC  00A8               	movwf	?_conv+2
  8010  1CAD  082B               	movf	conv@result+1,w
  8011  1CAE  00A7               	movwf	?_conv+1
  8012  1CAF  082A               	movf	conv@result,w
  8013  1CB0  00A6               	movwf	?_conv
  8014  1CB1                     l116:
  8015  1CB1  0008               	return
  8016  1CB2                     __end_of_conv:
  8017                           
  8018                           	psect	text24
  8019  10B9                     __ptext24:	
  8020 ;; *************** function ___xxtofl *****************
  8021 ;; Defined at:
  8022 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  sign            1    wreg     unsigned char 
  8025 ;;  val             4    2[COMMON] long 
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;  sign            1    0[BANK0 ] unsigned char 
  8028 ;;  arg             4    2[BANK0 ] unsigned long 
  8029 ;;  exp             1    1[BANK0 ] unsigned char 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  4    2[COMMON] unsigned char 
  8032 ;; Registers used:
  8033 ;;		wreg, status,2, status,0
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8039 ;;      Params:         4       0       0       0       0
  8040 ;;      Locals:         0       6       0       0       0
  8041 ;;      Temps:          4       0       0       0       0
  8042 ;;      Totals:         8       6       0       0       0
  8043 ;;Total ram usage:       14 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:    1
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_conv
  8050 ;;		_sprintf
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           
  8055                           ;psect for function ___xxtofl
  8056  10B9                     ___xxtofl:
  8057                           
  8058                           ;incstack = 0
  8059                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8060                           ;___xxtofl@sign stored from wreg
  8061  10B9  1283               	bcf	3,5	;RP0=0, select bank0
  8062  10BA  1303               	bcf	3,6	;RP1=0, select bank0
  8063  10BB  00A0               	movwf	___xxtofl@sign
  8064  10BC                     l3110:
  8065  10BC  0820               	movf	___xxtofl@sign,w
  8066  10BD  1903               	btfsc	3,2
  8067  10BE  28C0               	goto	u4961
  8068  10BF  28C1               	goto	u4960
  8069  10C0                     u4961:
  8070  10C0  28D5               	goto	l3116
  8071  10C1                     u4960:
  8072  10C1                     l3112:
  8073  10C1  1FF5               	btfss	___xxtofl@val+3,7
  8074  10C2  28C4               	goto	u4971
  8075  10C3  28C5               	goto	u4970
  8076  10C4                     u4971:
  8077  10C4  28D5               	goto	l3116
  8078  10C5                     u4970:
  8079  10C5                     l3114:
  8080  10C5  0972               	comf	___xxtofl@val,w
  8081  10C6  00A2               	movwf	___xxtofl@arg
  8082  10C7  0973               	comf	___xxtofl@val+1,w
  8083  10C8  00A3               	movwf	___xxtofl@arg+1
  8084  10C9  0974               	comf	___xxtofl@val+2,w
  8085  10CA  00A4               	movwf	___xxtofl@arg+2
  8086  10CB  0975               	comf	___xxtofl@val+3,w
  8087  10CC  00A5               	movwf	___xxtofl@arg+3
  8088  10CD  0AA2               	incf	___xxtofl@arg,f
  8089  10CE  1903               	skipnz
  8090  10CF  0AA3               	incf	___xxtofl@arg+1,f
  8091  10D0  1903               	skipnz
  8092  10D1  0AA4               	incf	___xxtofl@arg+2,f
  8093  10D2  1903               	skipnz
  8094  10D3  0AA5               	incf	___xxtofl@arg+3,f
  8095  10D4  28DD               	goto	l852
  8096  10D5                     l3116:
  8097  10D5  0875               	movf	___xxtofl@val+3,w
  8098  10D6  00A5               	movwf	___xxtofl@arg+3
  8099  10D7  0874               	movf	___xxtofl@val+2,w
  8100  10D8  00A4               	movwf	___xxtofl@arg+2
  8101  10D9  0873               	movf	___xxtofl@val+1,w
  8102  10DA  00A3               	movwf	___xxtofl@arg+1
  8103  10DB  0872               	movf	___xxtofl@val,w
  8104  10DC  00A2               	movwf	___xxtofl@arg
  8105  10DD                     l852:
  8106  10DD  0875               	movf	___xxtofl@val+3,w
  8107  10DE  0474               	iorwf	___xxtofl@val+2,w
  8108  10DF  0473               	iorwf	___xxtofl@val+1,w
  8109  10E0  0472               	iorwf	___xxtofl@val,w
  8110  10E1  1D03               	skipz
  8111  10E2  28E4               	goto	u4981
  8112  10E3  28E5               	goto	u4980
  8113  10E4                     u4981:
  8114  10E4  28EE               	goto	l3122
  8115  10E5                     u4980:
  8116  10E5                     l3118:
  8117  10E5  3000               	movlw	0
  8118  10E6  00F5               	movwf	?___xxtofl+3
  8119  10E7  3000               	movlw	0
  8120  10E8  00F4               	movwf	?___xxtofl+2
  8121  10E9  3000               	movlw	0
  8122  10EA  00F3               	movwf	?___xxtofl+1
  8123  10EB  3000               	movlw	0
  8124  10EC  00F2               	movwf	?___xxtofl
  8125  10ED  2974               	goto	l854
  8126  10EE                     l3122:
  8127  10EE  3096               	movlw	150
  8128  10EF  00F6               	movwf	??___xxtofl
  8129  10F0  0876               	movf	??___xxtofl,w
  8130  10F1  00A1               	movwf	___xxtofl@exp
  8131  10F2  2900               	goto	l3126
  8132  10F3                     l3124:
  8133  10F3  3001               	movlw	1
  8134  10F4  00F6               	movwf	??___xxtofl
  8135  10F5  0876               	movf	??___xxtofl,w
  8136  10F6  07A1               	addwf	___xxtofl@exp,f
  8137  10F7  3001               	movlw	1
  8138  10F8                     u4995:
  8139  10F8  1003               	clrc
  8140  10F9  0CA5               	rrf	___xxtofl@arg+3,f
  8141  10FA  0CA4               	rrf	___xxtofl@arg+2,f
  8142  10FB  0CA3               	rrf	___xxtofl@arg+1,f
  8143  10FC  0CA2               	rrf	___xxtofl@arg,f
  8144  10FD  3EFF               	addlw	-1
  8145  10FE  1D03               	skipz
  8146  10FF  28F8               	goto	u4995
  8147  1100                     l3126:
  8148  1100  30FE               	movlw	254
  8149  1101  0525               	andwf	___xxtofl@arg+3,w
  8150  1102  1D03               	btfss	3,2
  8151  1103  2905               	goto	u5001
  8152  1104  2906               	goto	u5000
  8153  1105                     u5001:
  8154  1105  28F3               	goto	l3124
  8155  1106                     u5000:
  8156  1106  2922               	goto	l858
  8157  1107                     l3128:
  8158  1107  3001               	movlw	1
  8159  1108  00F6               	movwf	??___xxtofl
  8160  1109  0876               	movf	??___xxtofl,w
  8161  110A  07A1               	addwf	___xxtofl@exp,f
  8162  110B                     l3130:
  8163  110B  3001               	movlw	1
  8164  110C  07A2               	addwf	___xxtofl@arg,f
  8165  110D  3000               	movlw	0
  8166  110E  1803               	skipnc
  8167  110F  3001               	movlw	1
  8168  1110  07A3               	addwf	___xxtofl@arg+1,f
  8169  1111  3000               	movlw	0
  8170  1112  1803               	skipnc
  8171  1113  3001               	movlw	1
  8172  1114  07A4               	addwf	___xxtofl@arg+2,f
  8173  1115  3000               	movlw	0
  8174  1116  1803               	skipnc
  8175  1117  3001               	movlw	1
  8176  1118  07A5               	addwf	___xxtofl@arg+3,f
  8177  1119                     l3132:
  8178  1119  3001               	movlw	1
  8179  111A                     u5015:
  8180  111A  1003               	clrc
  8181  111B  0CA5               	rrf	___xxtofl@arg+3,f
  8182  111C  0CA4               	rrf	___xxtofl@arg+2,f
  8183  111D  0CA3               	rrf	___xxtofl@arg+1,f
  8184  111E  0CA2               	rrf	___xxtofl@arg,f
  8185  111F  3EFF               	addlw	-1
  8186  1120  1D03               	skipz
  8187  1121  291A               	goto	u5015
  8188  1122                     l858:
  8189  1122  30FF               	movlw	255
  8190  1123  0525               	andwf	___xxtofl@arg+3,w
  8191  1124  1D03               	btfss	3,2
  8192  1125  2927               	goto	u5021
  8193  1126  2928               	goto	u5020
  8194  1127                     u5021:
  8195  1127  2907               	goto	l3128
  8196  1128                     u5020:
  8197  1128  2934               	goto	l3136
  8198  1129                     l3134:
  8199  1129  3001               	movlw	1
  8200  112A  02A1               	subwf	___xxtofl@exp,f
  8201  112B  3001               	movlw	1
  8202  112C  00F6               	movwf	??___xxtofl
  8203  112D                     u5035:
  8204  112D  1003               	clrc
  8205  112E  0DA2               	rlf	___xxtofl@arg,f
  8206  112F  0DA3               	rlf	___xxtofl@arg+1,f
  8207  1130  0DA4               	rlf	___xxtofl@arg+2,f
  8208  1131  0DA5               	rlf	___xxtofl@arg+3,f
  8209  1132  0BF6               	decfsz	??___xxtofl,f
  8210  1133  292D               	goto	u5035
  8211  1134                     l3136:
  8212  1134  1BA4               	btfsc	___xxtofl@arg+2,7
  8213  1135  2937               	goto	u5041
  8214  1136  2938               	goto	u5040
  8215  1137                     u5041:
  8216  1137  293E               	goto	l865
  8217  1138                     u5040:
  8218  1138                     l3138:
  8219  1138  3002               	movlw	2
  8220  1139  0221               	subwf	___xxtofl@exp,w
  8221  113A  1803               	skipnc
  8222  113B  293D               	goto	u5051
  8223  113C  293E               	goto	u5050
  8224  113D                     u5051:
  8225  113D  2929               	goto	l3134
  8226  113E                     u5050:
  8227  113E                     l865:
  8228  113E  1821               	btfsc	___xxtofl@exp,0
  8229  113F  2941               	goto	u5061
  8230  1140  2942               	goto	u5060
  8231  1141                     u5061:
  8232  1141  294A               	goto	l866
  8233  1142                     u5060:
  8234  1142                     l3140:
  8235  1142  30FF               	movlw	255
  8236  1143  05A2               	andwf	___xxtofl@arg,f
  8237  1144  30FF               	movlw	255
  8238  1145  05A3               	andwf	___xxtofl@arg+1,f
  8239  1146  307F               	movlw	127
  8240  1147  05A4               	andwf	___xxtofl@arg+2,f
  8241  1148  30FF               	movlw	255
  8242  1149  05A5               	andwf	___xxtofl@arg+3,f
  8243  114A                     l866:
  8244  114A  1003               	clrc
  8245  114B  0CA1               	rrf	___xxtofl@exp,f
  8246  114C                     l3142:
  8247  114C  0821               	movf	___xxtofl@exp,w
  8248  114D  00F6               	movwf	??___xxtofl
  8249  114E  01F7               	clrf	??___xxtofl+1
  8250  114F  01F8               	clrf	??___xxtofl+2
  8251  1150  01F9               	clrf	??___xxtofl+3
  8252  1151  3018               	movlw	24
  8253  1152                     u5075:
  8254  1152  1003               	clrc
  8255  1153  0DF6               	rlf	??___xxtofl,f
  8256  1154  0DF7               	rlf	??___xxtofl+1,f
  8257  1155  0DF8               	rlf	??___xxtofl+2,f
  8258  1156  0DF9               	rlf	??___xxtofl+3,f
  8259  1157                     u5070:
  8260  1157  3EFF               	addlw	-1
  8261  1158  1D03               	skipz
  8262  1159  2952               	goto	u5075
  8263  115A  0876               	movf	??___xxtofl,w
  8264  115B  04A2               	iorwf	___xxtofl@arg,f
  8265  115C  0877               	movf	??___xxtofl+1,w
  8266  115D  04A3               	iorwf	___xxtofl@arg+1,f
  8267  115E  0878               	movf	??___xxtofl+2,w
  8268  115F  04A4               	iorwf	___xxtofl@arg+2,f
  8269  1160  0879               	movf	??___xxtofl+3,w
  8270  1161  04A5               	iorwf	___xxtofl@arg+3,f
  8271  1162                     l3144:
  8272  1162  0820               	movf	___xxtofl@sign,w
  8273  1163  1903               	btfsc	3,2
  8274  1164  2966               	goto	u5081
  8275  1165  2967               	goto	u5080
  8276  1166                     u5081:
  8277  1166  296C               	goto	l3150
  8278  1167                     u5080:
  8279  1167                     l3146:
  8280  1167  1FF5               	btfss	___xxtofl@val+3,7
  8281  1168  296A               	goto	u5091
  8282  1169  296B               	goto	u5090
  8283  116A                     u5091:
  8284  116A  296C               	goto	l3150
  8285  116B                     u5090:
  8286  116B                     l3148:
  8287  116B  17A5               	bsf	___xxtofl@arg+3,7
  8288  116C                     l3150:
  8289  116C  0825               	movf	___xxtofl@arg+3,w
  8290  116D  00F5               	movwf	?___xxtofl+3
  8291  116E  0824               	movf	___xxtofl@arg+2,w
  8292  116F  00F4               	movwf	?___xxtofl+2
  8293  1170  0823               	movf	___xxtofl@arg+1,w
  8294  1171  00F3               	movwf	?___xxtofl+1
  8295  1172  0822               	movf	___xxtofl@arg,w
  8296  1173  00F2               	movwf	?___xxtofl
  8297  1174                     l854:
  8298  1174  0008               	return
  8299  1175                     __end_of___xxtofl:
  8300                           
  8301                           	psect	text25
  8302  1000                     __ptext25:	
  8303 ;; *************** function _cfg_usart *****************
  8304 ;; Defined at:
  8305 ;;		line 177 in file "mainp1.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;		None
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;		None
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  1    wreg      void 
  8312 ;; Registers used:
  8313 ;;		wreg, status,2
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8319 ;;      Params:         0       0       0       0       0
  8320 ;;      Locals:         0       0       0       0       0
  8321 ;;      Temps:          0       0       0       0       0
  8322 ;;      Totals:         0       0       0       0       0
  8323 ;;Total ram usage:        0 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; Hardware stack levels required when called:    1
  8326 ;; This function calls:
  8327 ;;		Nothing
  8328 ;; This function is called by:
  8329 ;;		_main
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           
  8334                           ;psect for function _cfg_usart
  8335  1000                     _cfg_usart:
  8336  1000                     l3162:	
  8337                           ;incstack = 0
  8338                           ; Regs used in _cfg_usart: [wreg+status,2]
  8339                           
  8340                           
  8341                           ;mainp1.c: 179:     TXSTAbits.SYNC = 0;
  8342  1000  1683               	bsf	3,5	;RP0=1, select bank1
  8343  1001  1303               	bcf	3,6	;RP1=0, select bank1
  8344  1002  1218               	bcf	24,4	;volatile
  8345                           
  8346                           ;mainp1.c: 180:     TXSTAbits.BRGH = 1;
  8347  1003  1518               	bsf	24,2	;volatile
  8348                           
  8349                           ;mainp1.c: 182:     BAUDCTLbits.BRG16 = 1;
  8350  1004  1683               	bsf	3,5	;RP0=1, select bank3
  8351  1005  1703               	bsf	3,6	;RP1=1, select bank3
  8352  1006  1587               	bsf	7,3	;volatile
  8353  1007                     l3164:
  8354                           
  8355                           ;mainp1.c: 184:     SPBRG = 103;
  8356  1007  3067               	movlw	103
  8357  1008  1683               	bsf	3,5	;RP0=1, select bank1
  8358  1009  1303               	bcf	3,6	;RP1=0, select bank1
  8359  100A  0099               	movwf	25	;volatile
  8360  100B                     l3166:
  8361                           
  8362                           ;mainp1.c: 185:     SPBRGH = 0;
  8363  100B  019A               	clrf	26	;volatile
  8364  100C                     l3168:
  8365                           
  8366                           ;mainp1.c: 187:     RCSTAbits.SPEN = 1;
  8367  100C  1283               	bcf	3,5	;RP0=0, select bank0
  8368  100D  1303               	bcf	3,6	;RP1=0, select bank0
  8369  100E  1798               	bsf	24,7	;volatile
  8370  100F                     l3170:
  8371                           
  8372                           ;mainp1.c: 188:     RCSTAbits.RX9 = 0;
  8373  100F  1318               	bcf	24,6	;volatile
  8374  1010                     l3172:
  8375                           
  8376                           ;mainp1.c: 189:     RCSTAbits.CREN = 1;
  8377  1010  1618               	bsf	24,4	;volatile
  8378  1011                     l3174:
  8379                           
  8380                           ;mainp1.c: 191:     TXSTAbits.TXEN = 1;
  8381  1011  1683               	bsf	3,5	;RP0=1, select bank1
  8382  1012  1303               	bcf	3,6	;RP1=0, select bank1
  8383  1013  1698               	bsf	24,5	;volatile
  8384  1014                     l101:
  8385  1014  0008               	return
  8386  1015                     __end_of_cfg_usart:
  8387                           
  8388                           	psect	text26
  8389  1C49                     __ptext26:	
  8390 ;; *************** function _cfg_io *****************
  8391 ;; Defined at:
  8392 ;;		line 150 in file "mainp1.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;		None
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;		None
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      void 
  8399 ;; Registers used:
  8400 ;;		status,2
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8406 ;;      Params:         0       0       0       0       0
  8407 ;;      Locals:         0       0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0
  8409 ;;      Totals:         0       0       0       0       0
  8410 ;;Total ram usage:        0 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:    1
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_main
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           
  8421                           ;psect for function _cfg_io
  8422  1C49                     _cfg_io:
  8423  1C49                     l3154:	
  8424                           ;incstack = 0
  8425                           ; Regs used in _cfg_io: [status,2]
  8426                           
  8427                           
  8428                           ;mainp1.c: 151:     ANSEL = 0;
  8429  1C49  1683               	bsf	3,5	;RP0=1, select bank3
  8430  1C4A  1703               	bsf	3,6	;RP1=1, select bank3
  8431  1C4B  0188               	clrf	8	;volatile
  8432                           
  8433                           ;mainp1.c: 152:     ANSELH = 0;
  8434  1C4C  0189               	clrf	9	;volatile
  8435  1C4D                     l3156:
  8436                           
  8437                           ;mainp1.c: 154:     TRISAbits.TRISA0 = 0;
  8438  1C4D  1683               	bsf	3,5	;RP0=1, select bank1
  8439  1C4E  1303               	bcf	3,6	;RP1=0, select bank1
  8440  1C4F  1005               	bcf	5,0	;volatile
  8441  1C50                     l3158:
  8442                           
  8443                           ;mainp1.c: 155:     TRISAbits.TRISA1 = 1;
  8444  1C50  1485               	bsf	5,1	;volatile
  8445  1C51                     l3160:
  8446                           
  8447                           ;mainp1.c: 156:     TRISAbits.TRISA2 = 1;
  8448  1C51  1505               	bsf	5,2	;volatile
  8449                           
  8450                           ;mainp1.c: 157:     TRISB = 0;
  8451  1C52  0186               	clrf	6	;volatile
  8452                           
  8453                           ;mainp1.c: 158:     TRISD = 0;
  8454  1C53  0188               	clrf	8	;volatile
  8455                           
  8456                           ;mainp1.c: 159:     TRISB = 0;
  8457  1C54  0186               	clrf	6	;volatile
  8458                           
  8459                           ;mainp1.c: 161:     PORTB = 0;
  8460  1C55  1283               	bcf	3,5	;RP0=0, select bank0
  8461  1C56  1303               	bcf	3,6	;RP1=0, select bank0
  8462  1C57  0186               	clrf	6	;volatile
  8463                           
  8464                           ;mainp1.c: 162:     PORTD = 0;
  8465  1C58  0188               	clrf	8	;volatile
  8466                           
  8467                           ;mainp1.c: 163:     PORTA = 0;
  8468  1C59  0185               	clrf	5	;volatile
  8469  1C5A                     l92:
  8470  1C5A  0008               	return
  8471  1C5B                     __end_of_cfg_io:
  8472                           
  8473                           	psect	text27
  8474  1BFB                     __ptext27:	
  8475 ;; *************** function _cfg_clk *****************
  8476 ;; Defined at:
  8477 ;;		line 166 in file "mainp1.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;		None
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  1    wreg      void 
  8484 ;; Registers used:
  8485 ;;		wreg, status,2, status,0
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8491 ;;      Params:         0       0       0       0       0
  8492 ;;      Locals:         0       0       0       0       0
  8493 ;;      Temps:          0       0       0       0       0
  8494 ;;      Totals:         0       0       0       0       0
  8495 ;;Total ram usage:        0 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; Hardware stack levels required when called:    1
  8498 ;; This function calls:
  8499 ;;		Nothing
  8500 ;; This function is called by:
  8501 ;;		_main
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           
  8506                           ;psect for function _cfg_clk
  8507  1BFB                     _cfg_clk:
  8508  1BFB                     l3176:	
  8509                           ;incstack = 0
  8510                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  8511                           
  8512                           
  8513                           ;mainp1.c: 167:     OSCCONbits.IRCF = 0b110;
  8514  1BFB  1683               	bsf	3,5	;RP0=1, select bank1
  8515  1BFC  1303               	bcf	3,6	;RP1=0, select bank1
  8516  1BFD  080F               	movf	15,w	;volatile
  8517  1BFE  398F               	andlw	-113
  8518  1BFF  3860               	iorlw	96
  8519  1C00  008F               	movwf	15	;volatile
  8520  1C01                     l3178:
  8521                           
  8522                           ;mainp1.c: 168:     OSCCONbits.SCS = 1;
  8523  1C01  140F               	bsf	15,0	;volatile
  8524  1C02                     l95:
  8525  1C02  0008               	return
  8526  1C03                     __end_of_cfg_clk:
  8527                           
  8528                           	psect	text28
  8529  1C1D                     __ptext28:	
  8530 ;; *************** function _I2C_Master_Write *****************
  8531 ;; Defined at:
  8532 ;;		line 65 in file "I2C.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;  d               2    2[COMMON] unsigned int 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0, pclath, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8546 ;;      Params:         2       0       0       0       0
  8547 ;;      Locals:         0       0       0       0       0
  8548 ;;      Temps:          0       0       0       0       0
  8549 ;;      Totals:         2       0       0       0       0
  8550 ;;Total ram usage:        2 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    2
  8553 ;; This function calls:
  8554 ;;		_I2C_Master_Wait
  8555 ;; This function is called by:
  8556 ;;		_main
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           
  8561                           ;psect for function _I2C_Master_Write
  8562  1C1D                     _I2C_Master_Write:
  8563  1C1D                     l3196:	
  8564                           ;incstack = 0
  8565                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8566                           
  8567                           
  8568                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  8569  1C1D  160A  158A  243C  160A  158A  	fcall	_I2C_Master_Wait
  8570  1C22                     l3198:
  8571                           
  8572                           ;I2C.c: 68:     SSPBUF = d;
  8573  1C22  0872               	movf	I2C_Master_Write@d,w
  8574  1C23  1283               	bcf	3,5	;RP0=0, select bank0
  8575  1C24  1303               	bcf	3,6	;RP1=0, select bank0
  8576  1C25  0093               	movwf	19	;volatile
  8577  1C26                     l163:
  8578  1C26  0008               	return
  8579  1C27                     __end_of_I2C_Master_Write:
  8580                           
  8581                           	psect	text29
  8582  1C14                     __ptext29:	
  8583 ;; *************** function _I2C_Master_Stop *****************
  8584 ;; Defined at:
  8585 ;;		line 55 in file "I2C.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;		None
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;		None
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  1    wreg      void 
  8592 ;; Registers used:
  8593 ;;		wreg, status,2, status,0, pclath, cstack
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8599 ;;      Params:         0       0       0       0       0
  8600 ;;      Locals:         0       0       0       0       0
  8601 ;;      Temps:          0       0       0       0       0
  8602 ;;      Totals:         0       0       0       0       0
  8603 ;;Total ram usage:        0 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:    2
  8606 ;; This function calls:
  8607 ;;		_I2C_Master_Wait
  8608 ;; This function is called by:
  8609 ;;		_main
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           
  8614                           ;psect for function _I2C_Master_Stop
  8615  1C14                     _I2C_Master_Stop:
  8616  1C14                     l3216:	
  8617                           ;incstack = 0
  8618                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8619                           
  8620                           
  8621                           ;I2C.c: 57:     I2C_Master_Wait();
  8622  1C14  160A  158A  243C  160A  158A  	fcall	_I2C_Master_Wait
  8623  1C19                     l3218:
  8624                           
  8625                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  8626  1C19  1683               	bsf	3,5	;RP0=1, select bank1
  8627  1C1A  1303               	bcf	3,6	;RP1=0, select bank1
  8628  1C1B  1511               	bsf	17,2	;volatile
  8629  1C1C                     l160:
  8630  1C1C  0008               	return
  8631  1C1D                     __end_of_I2C_Master_Stop:
  8632                           
  8633                           	psect	text30
  8634  1C0B                     __ptext30:	
  8635 ;; *************** function _I2C_Master_Start *****************
  8636 ;; Defined at:
  8637 ;;		line 39 in file "I2C.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;		None
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;		None
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1    wreg      void 
  8644 ;; Registers used:
  8645 ;;		wreg, status,2, status,0, pclath, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8651 ;;      Params:         0       0       0       0       0
  8652 ;;      Locals:         0       0       0       0       0
  8653 ;;      Temps:          0       0       0       0       0
  8654 ;;      Totals:         0       0       0       0       0
  8655 ;;Total ram usage:        0 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:    2
  8658 ;; This function calls:
  8659 ;;		_I2C_Master_Wait
  8660 ;; This function is called by:
  8661 ;;		_main
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           
  8666                           ;psect for function _I2C_Master_Start
  8667  1C0B                     _I2C_Master_Start:
  8668  1C0B                     l3192:	
  8669                           ;incstack = 0
  8670                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8671                           
  8672                           
  8673                           ;I2C.c: 41:     I2C_Master_Wait();
  8674  1C0B  160A  158A  243C  160A  158A  	fcall	_I2C_Master_Wait
  8675  1C10                     l3194:
  8676                           
  8677                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  8678  1C10  1683               	bsf	3,5	;RP0=1, select bank1
  8679  1C11  1303               	bcf	3,6	;RP1=0, select bank1
  8680  1C12  1411               	bsf	17,0	;volatile
  8681  1C13                     l154:
  8682  1C13  0008               	return
  8683  1C14                     __end_of_I2C_Master_Start:
  8684                           
  8685                           	psect	text31
  8686  1CD7                     __ptext31:	
  8687 ;; *************** function _I2C_Master_Read *****************
  8688 ;; Defined at:
  8689 ;;		line 74 in file "I2C.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;  a               2    2[COMMON] unsigned short 
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;  temp            2    6[COMMON] unsigned short 
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  2    2[COMMON] unsigned short 
  8696 ;; Registers used:
  8697 ;;		wreg, status,2, status,0, pclath, cstack
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 0/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8703 ;;      Params:         2       0       0       0       0
  8704 ;;      Locals:         2       0       0       0       0
  8705 ;;      Temps:          2       0       0       0       0
  8706 ;;      Totals:         6       0       0       0       0
  8707 ;;Total ram usage:        6 bytes
  8708 ;; Hardware stack levels used:    1
  8709 ;; Hardware stack levels required when called:    2
  8710 ;; This function calls:
  8711 ;;		_I2C_Master_Wait
  8712 ;; This function is called by:
  8713 ;;		_main
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           
  8718                           ;psect for function _I2C_Master_Read
  8719  1CD7                     _I2C_Master_Read:
  8720  1CD7                     l3200:	
  8721                           ;incstack = 0
  8722                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  8723                           
  8724                           
  8725                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  8726  1CD7  160A  158A  243C  160A  158A  	fcall	_I2C_Master_Wait
  8727  1CDC                     l3202:
  8728                           
  8729                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  8730  1CDC  1683               	bsf	3,5	;RP0=1, select bank1
  8731  1CDD  1303               	bcf	3,6	;RP1=0, select bank1
  8732  1CDE  1591               	bsf	17,3	;volatile
  8733                           
  8734                           ;I2C.c: 79:     I2C_Master_Wait();
  8735  1CDF  160A  158A  243C  160A  158A  	fcall	_I2C_Master_Wait
  8736  1CE4                     l3204:
  8737                           
  8738                           ;I2C.c: 80:     temp = SSPBUF;
  8739  1CE4  1283               	bcf	3,5	;RP0=0, select bank0
  8740  1CE5  1303               	bcf	3,6	;RP1=0, select bank0
  8741  1CE6  0813               	movf	19,w	;volatile
  8742  1CE7  00F4               	movwf	??_I2C_Master_Read
  8743  1CE8  01F5               	clrf	??_I2C_Master_Read+1
  8744  1CE9  0874               	movf	??_I2C_Master_Read,w
  8745  1CEA  00F6               	movwf	I2C_Master_Read@temp
  8746  1CEB  0875               	movf	??_I2C_Master_Read+1,w
  8747  1CEC  00F7               	movwf	I2C_Master_Read@temp+1
  8748  1CED                     l3206:
  8749                           
  8750                           ;I2C.c: 81:     I2C_Master_Wait();
  8751  1CED  160A  158A  243C  160A  158A  	fcall	_I2C_Master_Wait
  8752  1CF2                     l3208:
  8753                           
  8754                           ;I2C.c: 82:     if(a == 1){
  8755  1CF2  0372               	decf	I2C_Master_Read@a,w
  8756  1CF3  0473               	iorwf	I2C_Master_Read@a+1,w
  8757  1CF4  1D03               	btfss	3,2
  8758  1CF5  2CF7               	goto	u5111
  8759  1CF6  2CF8               	goto	u5110
  8760  1CF7                     u5111:
  8761  1CF7  2CFC               	goto	l166
  8762  1CF8                     u5110:
  8763  1CF8                     l3210:
  8764                           
  8765                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  8766  1CF8  1683               	bsf	3,5	;RP0=1, select bank1
  8767  1CF9  1303               	bcf	3,6	;RP1=0, select bank1
  8768  1CFA  1291               	bcf	17,5	;volatile
  8769                           
  8770                           ;I2C.c: 84:     }else{
  8771  1CFB  2CFF               	goto	l167
  8772  1CFC                     l166:
  8773                           
  8774                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  8775  1CFC  1683               	bsf	3,5	;RP0=1, select bank1
  8776  1CFD  1303               	bcf	3,6	;RP1=0, select bank1
  8777  1CFE  1691               	bsf	17,5	;volatile
  8778  1CFF                     l167:	
  8779                           ;I2C.c: 86:     }
  8780                           
  8781                           
  8782                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  8783  1CFF  1611               	bsf	17,4	;volatile
  8784  1D00                     l3212:
  8785                           
  8786                           ;I2C.c: 88:     return temp;
  8787  1D00  0877               	movf	I2C_Master_Read@temp+1,w
  8788  1D01  00F3               	movwf	?_I2C_Master_Read+1
  8789  1D02  0876               	movf	I2C_Master_Read@temp,w
  8790  1D03  00F2               	movwf	?_I2C_Master_Read
  8791  1D04                     l168:
  8792  1D04  0008               	return
  8793  1D05                     __end_of_I2C_Master_Read:
  8794                           
  8795                           	psect	text32
  8796  1C3C                     __ptext32:	
  8797 ;; *************** function _I2C_Master_Wait *****************
  8798 ;; Defined at:
  8799 ;;		line 32 in file "I2C.c"
  8800 ;; Parameters:    Size  Location     Type
  8801 ;;		None
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;		None
  8804 ;; Return value:  Size  Location     Type
  8805 ;;                  1    wreg      void 
  8806 ;; Registers used:
  8807 ;;		wreg, status,2
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/0
  8810 ;;		On exit  : 0/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8813 ;;      Params:         0       0       0       0       0
  8814 ;;      Locals:         0       0       0       0       0
  8815 ;;      Temps:          0       0       0       0       0
  8816 ;;      Totals:         0       0       0       0       0
  8817 ;;Total ram usage:        0 bytes
  8818 ;; Hardware stack levels used:    1
  8819 ;; Hardware stack levels required when called:    1
  8820 ;; This function calls:
  8821 ;;		Nothing
  8822 ;; This function is called by:
  8823 ;;		_I2C_Master_Start
  8824 ;;		_I2C_Master_Stop
  8825 ;;		_I2C_Master_Write
  8826 ;;		_I2C_Master_Read
  8827 ;;		_I2C_Master_RepeatedStart
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           
  8832                           ;psect for function _I2C_Master_Wait
  8833  1C3C                     _I2C_Master_Wait:
  8834  1C3C                     l2792:	
  8835                           ;incstack = 0
  8836                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8837                           
  8838  1C3C                     l148:	
  8839                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8840                           
  8841  1C3C  1683               	bsf	3,5	;RP0=1, select bank1
  8842  1C3D  1303               	bcf	3,6	;RP1=0, select bank1
  8843  1C3E  1914               	btfsc	20,2	;volatile
  8844  1C3F  2C41               	goto	u4031
  8845  1C40  2C42               	goto	u4030
  8846  1C41                     u4031:
  8847  1C41  2C3C               	goto	l148
  8848  1C42                     u4030:
  8849  1C42                     l2794:
  8850  1C42  0811               	movf	17,w	;volatile
  8851  1C43  391F               	andlw	31
  8852  1C44  1D03               	btfss	3,2
  8853  1C45  2C47               	goto	u4041
  8854  1C46  2C48               	goto	u4040
  8855  1C47                     u4041:
  8856  1C47  2C3C               	goto	l148
  8857  1C48                     u4040:
  8858  1C48                     l151:
  8859  1C48  0008               	return
  8860  1C49                     __end_of_I2C_Master_Wait:
  8861                           
  8862                           	psect	text33
  8863  1D05                     __ptext33:	
  8864 ;; *************** function _I2C_Master_Init *****************
  8865 ;; Defined at:
  8866 ;;		line 16 in file "I2C.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  c               4    5[BANK0 ] const unsigned long 
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;		None
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  1    wreg      void 
  8873 ;; Registers used:
  8874 ;;		wreg, status,2, status,0, pclath, cstack
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8880 ;;      Params:         0       4       0       0       0
  8881 ;;      Locals:         0       0       0       0       0
  8882 ;;      Temps:          0       4       0       0       0
  8883 ;;      Totals:         0       8       0       0       0
  8884 ;;Total ram usage:        8 bytes
  8885 ;; Hardware stack levels used:    1
  8886 ;; Hardware stack levels required when called:    2
  8887 ;; This function calls:
  8888 ;;		___lldiv
  8889 ;; This function is called by:
  8890 ;;		_main
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           
  8895                           ;psect for function _I2C_Master_Init
  8896  1D05                     _I2C_Master_Init:
  8897  1D05                     l3180:	
  8898                           ;incstack = 0
  8899                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  8900                           
  8901                           
  8902                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  8903  1D05  3028               	movlw	40
  8904  1D06  1283               	bcf	3,5	;RP0=0, select bank0
  8905  1D07  1303               	bcf	3,6	;RP1=0, select bank0
  8906  1D08  0094               	movwf	20	;volatile
  8907  1D09                     l3182:
  8908                           
  8909                           ;I2C.c: 19:     SSPCON2 = 0;
  8910  1D09  1683               	bsf	3,5	;RP0=1, select bank1
  8911  1D0A  1303               	bcf	3,6	;RP1=0, select bank1
  8912  1D0B  0191               	clrf	17	;volatile
  8913  1D0C                     l3184:
  8914                           
  8915                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  8916  1D0C  1283               	bcf	3,5	;RP0=0, select bank0
  8917  1D0D  1303               	bcf	3,6	;RP1=0, select bank0
  8918  1D0E  0825               	movf	I2C_Master_Init@c,w
  8919  1D0F  00A9               	movwf	??_I2C_Master_Init
  8920  1D10  0826               	movf	I2C_Master_Init@c+1,w
  8921  1D11  00AA               	movwf	??_I2C_Master_Init+1
  8922  1D12  0827               	movf	I2C_Master_Init@c+2,w
  8923  1D13  00AB               	movwf	??_I2C_Master_Init+2
  8924  1D14  0828               	movf	I2C_Master_Init@c+3,w
  8925  1D15  00AC               	movwf	??_I2C_Master_Init+3
  8926  1D16  3002               	movlw	2
  8927  1D17                     u5105:
  8928  1D17  1003               	clrc
  8929  1D18  0DA9               	rlf	??_I2C_Master_Init,f
  8930  1D19  0DAA               	rlf	??_I2C_Master_Init+1,f
  8931  1D1A  0DAB               	rlf	??_I2C_Master_Init+2,f
  8932  1D1B  0DAC               	rlf	??_I2C_Master_Init+3,f
  8933  1D1C                     u5100:
  8934  1D1C  3EFF               	addlw	-1
  8935  1D1D  1D03               	skipz
  8936  1D1E  2D17               	goto	u5105
  8937  1D1F  082C               	movf	??_I2C_Master_Init+3,w
  8938  1D20  00F5               	movwf	___lldiv@divisor+3
  8939  1D21  082B               	movf	??_I2C_Master_Init+2,w
  8940  1D22  00F4               	movwf	___lldiv@divisor+2
  8941  1D23  082A               	movf	??_I2C_Master_Init+1,w
  8942  1D24  00F3               	movwf	___lldiv@divisor+1
  8943  1D25  0829               	movf	??_I2C_Master_Init,w
  8944  1D26  00F2               	movwf	___lldiv@divisor
  8945  1D27  3000               	movlw	0
  8946  1D28  00F9               	movwf	___lldiv@dividend+3
  8947  1D29  307A               	movlw	122
  8948  1D2A  00F8               	movwf	___lldiv@dividend+2
  8949  1D2B  3012               	movlw	18
  8950  1D2C  00F7               	movwf	___lldiv@dividend+1
  8951  1D2D  3000               	movlw	0
  8952  1D2E  00F6               	movwf	___lldiv@dividend
  8953  1D2F  160A  158A  26B3  160A  158A  	fcall	___lldiv
  8954  1D34  0872               	movf	?___lldiv,w
  8955  1D35  3EFF               	addlw	255
  8956  1D36  1683               	bsf	3,5	;RP0=1, select bank1
  8957  1D37  1303               	bcf	3,6	;RP1=0, select bank1
  8958  1D38  0093               	movwf	19	;volatile
  8959  1D39                     l3186:
  8960                           
  8961                           ;I2C.c: 21:     SSPSTAT = 0;
  8962  1D39  0194               	clrf	20	;volatile
  8963  1D3A                     l3188:
  8964                           
  8965                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  8966  1D3A  1587               	bsf	7,3	;volatile
  8967  1D3B                     l3190:
  8968                           
  8969                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  8970  1D3B  1607               	bsf	7,4	;volatile
  8971  1D3C                     l145:
  8972  1D3C  0008               	return
  8973  1D3D                     __end_of_I2C_Master_Init:
  8974                           
  8975                           	psect	text34
  8976  1EB3                     __ptext34:	
  8977 ;; *************** function ___lldiv *****************
  8978 ;; Defined at:
  8979 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  divisor         4    2[COMMON] unsigned long 
  8982 ;;  dividend        4    6[COMMON] unsigned long 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;  quotient        4    0[BANK0 ] unsigned long 
  8985 ;;  counter         1    4[BANK0 ] unsigned char 
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  4    2[COMMON] unsigned long 
  8988 ;; Registers used:
  8989 ;;		wreg, status,2, status,0
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8995 ;;      Params:         8       0       0       0       0
  8996 ;;      Locals:         0       5       0       0       0
  8997 ;;      Temps:          1       0       0       0       0
  8998 ;;      Totals:         9       5       0       0       0
  8999 ;;Total ram usage:       14 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; Hardware stack levels required when called:    1
  9002 ;; This function calls:
  9003 ;;		Nothing
  9004 ;; This function is called by:
  9005 ;;		_I2C_Master_Init
  9006 ;;		_sprintf
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           
  9011                           ;psect for function ___lldiv
  9012  1EB3                     ___lldiv:
  9013  1EB3                     l2984:	
  9014                           ;incstack = 0
  9015                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9016                           
  9017  1EB3  3000               	movlw	0
  9018  1EB4  1283               	bcf	3,5	;RP0=0, select bank0
  9019  1EB5  1303               	bcf	3,6	;RP1=0, select bank0
  9020  1EB6  00A3               	movwf	___lldiv@quotient+3
  9021  1EB7  3000               	movlw	0
  9022  1EB8  00A2               	movwf	___lldiv@quotient+2
  9023  1EB9  3000               	movlw	0
  9024  1EBA  00A1               	movwf	___lldiv@quotient+1
  9025  1EBB  3000               	movlw	0
  9026  1EBC  00A0               	movwf	___lldiv@quotient
  9027  1EBD  0875               	movf	___lldiv@divisor+3,w
  9028  1EBE  0474               	iorwf	___lldiv@divisor+2,w
  9029  1EBF  0473               	iorwf	___lldiv@divisor+1,w
  9030  1EC0  0472               	iorwf	___lldiv@divisor,w
  9031  1EC1  1903               	skipnz
  9032  1EC2  2EC4               	goto	u4621
  9033  1EC3  2EC5               	goto	u4620
  9034  1EC4                     u4621:
  9035  1EC4  2F12               	goto	l3004
  9036  1EC5                     u4620:
  9037  1EC5                     l2986:
  9038  1EC5  01A4               	clrf	___lldiv@counter
  9039  1EC6  0AA4               	incf	___lldiv@counter,f
  9040  1EC7  2ED5               	goto	l2990
  9041  1EC8                     l2988:
  9042  1EC8  3001               	movlw	1
  9043  1EC9  00FA               	movwf	??___lldiv
  9044  1ECA                     u4635:
  9045  1ECA  1003               	clrc
  9046  1ECB  0DF2               	rlf	___lldiv@divisor,f
  9047  1ECC  0DF3               	rlf	___lldiv@divisor+1,f
  9048  1ECD  0DF4               	rlf	___lldiv@divisor+2,f
  9049  1ECE  0DF5               	rlf	___lldiv@divisor+3,f
  9050  1ECF  0BFA               	decfsz	??___lldiv,f
  9051  1ED0  2ECA               	goto	u4635
  9052  1ED1  3001               	movlw	1
  9053  1ED2  00FA               	movwf	??___lldiv
  9054  1ED3  087A               	movf	??___lldiv,w
  9055  1ED4  07A4               	addwf	___lldiv@counter,f
  9056  1ED5                     l2990:
  9057  1ED5  1FF5               	btfss	___lldiv@divisor+3,7
  9058  1ED6  2ED8               	goto	u4641
  9059  1ED7  2ED9               	goto	u4640
  9060  1ED8                     u4641:
  9061  1ED8  2EC8               	goto	l2988
  9062  1ED9                     u4640:
  9063  1ED9                     l2992:
  9064  1ED9  3001               	movlw	1
  9065  1EDA  00FA               	movwf	??___lldiv
  9066  1EDB                     u4655:
  9067  1EDB  1003               	clrc
  9068  1EDC  0DA0               	rlf	___lldiv@quotient,f
  9069  1EDD  0DA1               	rlf	___lldiv@quotient+1,f
  9070  1EDE  0DA2               	rlf	___lldiv@quotient+2,f
  9071  1EDF  0DA3               	rlf	___lldiv@quotient+3,f
  9072  1EE0  0BFA               	decfsz	??___lldiv,f
  9073  1EE1  2EDB               	goto	u4655
  9074  1EE2                     l2994:
  9075  1EE2  0875               	movf	___lldiv@divisor+3,w
  9076  1EE3  0279               	subwf	___lldiv@dividend+3,w
  9077  1EE4  1D03               	skipz
  9078  1EE5  2EF0               	goto	u4665
  9079  1EE6  0874               	movf	___lldiv@divisor+2,w
  9080  1EE7  0278               	subwf	___lldiv@dividend+2,w
  9081  1EE8  1D03               	skipz
  9082  1EE9  2EF0               	goto	u4665
  9083  1EEA  0873               	movf	___lldiv@divisor+1,w
  9084  1EEB  0277               	subwf	___lldiv@dividend+1,w
  9085  1EEC  1D03               	skipz
  9086  1EED  2EF0               	goto	u4665
  9087  1EEE  0872               	movf	___lldiv@divisor,w
  9088  1EEF  0276               	subwf	___lldiv@dividend,w
  9089  1EF0                     u4665:
  9090  1EF0  1C03               	skipc
  9091  1EF1  2EF3               	goto	u4661
  9092  1EF2  2EF4               	goto	u4660
  9093  1EF3                     u4661:
  9094  1EF3  2F03               	goto	l3000
  9095  1EF4                     u4660:
  9096  1EF4                     l2996:
  9097  1EF4  0872               	movf	___lldiv@divisor,w
  9098  1EF5  02F6               	subwf	___lldiv@dividend,f
  9099  1EF6  0873               	movf	___lldiv@divisor+1,w
  9100  1EF7  1C03               	skipc
  9101  1EF8  0F73               	incfsz	___lldiv@divisor+1,w
  9102  1EF9  02F7               	subwf	___lldiv@dividend+1,f
  9103  1EFA  0874               	movf	___lldiv@divisor+2,w
  9104  1EFB  1C03               	skipc
  9105  1EFC  0F74               	incfsz	___lldiv@divisor+2,w
  9106  1EFD  02F8               	subwf	___lldiv@dividend+2,f
  9107  1EFE  0875               	movf	___lldiv@divisor+3,w
  9108  1EFF  1C03               	skipc
  9109  1F00  0F75               	incfsz	___lldiv@divisor+3,w
  9110  1F01  02F9               	subwf	___lldiv@dividend+3,f
  9111  1F02                     l2998:
  9112  1F02  1420               	bsf	___lldiv@quotient,0
  9113  1F03                     l3000:
  9114  1F03  3001               	movlw	1
  9115  1F04                     u4675:
  9116  1F04  1003               	clrc
  9117  1F05  0CF5               	rrf	___lldiv@divisor+3,f
  9118  1F06  0CF4               	rrf	___lldiv@divisor+2,f
  9119  1F07  0CF3               	rrf	___lldiv@divisor+1,f
  9120  1F08  0CF2               	rrf	___lldiv@divisor,f
  9121  1F09  3EFF               	addlw	-1
  9122  1F0A  1D03               	skipz
  9123  1F0B  2F04               	goto	u4675
  9124  1F0C                     l3002:
  9125  1F0C  3001               	movlw	1
  9126  1F0D  02A4               	subwf	___lldiv@counter,f
  9127  1F0E  1D03               	btfss	3,2
  9128  1F0F  2F11               	goto	u4681
  9129  1F10  2F12               	goto	u4680
  9130  1F11                     u4681:
  9131  1F11  2ED9               	goto	l2992
  9132  1F12                     u4680:
  9133  1F12                     l3004:
  9134  1F12  0823               	movf	___lldiv@quotient+3,w
  9135  1F13  00F5               	movwf	?___lldiv+3
  9136  1F14  0822               	movf	___lldiv@quotient+2,w
  9137  1F15  00F4               	movwf	?___lldiv+2
  9138  1F16  0821               	movf	___lldiv@quotient+1,w
  9139  1F17  00F3               	movwf	?___lldiv+1
  9140  1F18  0820               	movf	___lldiv@quotient,w
  9141  1F19  00F2               	movwf	?___lldiv
  9142  1F1A                     l421:
  9143  1F1A  0008               	return
  9144  1F1B                     __end_of___lldiv:
  9145                           
  9146                           	psect	text35
  9147  0800                     __ptext35:	
  9148 ;; *************** function _isr *****************
  9149 ;; Defined at:
  9150 ;;		line 67 in file "mainp1.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;		None
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;		None
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  1    wreg      void 
  9157 ;; Registers used:
  9158 ;;		None
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9164 ;;      Params:         0       0       0       0       0
  9165 ;;      Locals:         0       0       0       0       0
  9166 ;;      Temps:          2       0       0       0       0
  9167 ;;      Totals:         2       0       0       0       0
  9168 ;;Total ram usage:        2 bytes
  9169 ;; Hardware stack levels used:    1
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		Interrupt level 1
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function _isr
  9179  0800                     _isr:
  9180  0800                     i1l81:
  9181  0800  0871               	movf	??_isr+1,w
  9182  0801  008A               	movwf	10
  9183  0802  0E70               	swapf	??_isr,w
  9184  0803  0083               	movwf	3
  9185  0804  0EFE               	swapf	btemp,f
  9186  0805  0E7E               	swapf	btemp,w
  9187  0806  0009               	retfie
  9188  0807                     __end_of_isr:
  9189  007E                     btemp	set	126	;btemp
  9190  007E                     wtemp0	set	126
  9191                           
  9192                           	psect	intentry
  9193  0004                     __pintentry:	
  9194                           ;incstack = 0
  9195                           ; Regs used in _isr: []
  9196                           
  9197  0004                     interrupt_function:
  9198  007E                     saved_w	set	btemp
  9199  0004  00FE               	movwf	btemp
  9200  0005  0E03               	swapf	3,w
  9201  0006  00F0               	movwf	??_isr
  9202  0007  080A               	movf	10,w
  9203  0008  00F1               	movwf	??_isr+1
  9204  0009  120A  158A  2800   	ljmp	_isr
  9205                           
  9206                           	psect	config
  9207                           
  9208                           ;Config register CONFIG1 @ 0x2007
  9209                           ;	Oscillator Selection bits
  9210                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9211                           ;	Watchdog Timer Enable bit
  9212                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9213                           ;	Power-up Timer Enable bit
  9214                           ;	PWRTE = OFF, PWRT disabled
  9215                           ;	RE3/MCLR pin function select bit
  9216                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9217                           ;	Code Protection bit
  9218                           ;	CP = OFF, Program memory code protection is disabled
  9219                           ;	Data Code Protection bit
  9220                           ;	CPD = OFF, Data memory code protection is disabled
  9221                           ;	Brown Out Reset Selection bits
  9222                           ;	BOREN = OFF, BOR disabled
  9223                           ;	Internal External Switchover bit
  9224                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9225                           ;	Fail-Safe Clock Monitor Enabled bit
  9226                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9227                           ;	Low Voltage Programming Enable bit
  9228                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9229                           ;	In-Circuit Debugger Mode bit
  9230                           ;	DEBUG = 0x1, unprogrammed default
  9231  2007                     	org	8199
  9232  2007  20D4               	dw	8404
  9233                           
  9234                           ;Config register CONFIG2 @ 0x2008
  9235                           ;	Brown-out Reset Selection bit
  9236                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9237                           ;	Flash Program Memory Self Write Enable bits
  9238                           ;	WRT = OFF, Write protection off
  9239  2008                     	org	8200
  9240  2008  3FFF               	dw	16383
  9241                           
  9242                           	psect	text1_split_1
  9243  001D                     u6010:
  9244  001D                     l3804:
  9245  001D  1683               	bsf	3,5	;RP0=1, select bank1
  9246  001E  1303               	bcf	3,6	;RP1=0, select bank1
  9247  001F  0843               	movf	(sprintf@fval+3)^(0+128),w
  9248  0020  00F5               	movwf	___fleq@ff1+3
  9249  0021  0842               	movf	(sprintf@fval+2)^(0+128),w
  9250  0022  00F4               	movwf	___fleq@ff1+2
  9251  0023  0841               	movf	(sprintf@fval+1)^(0+128),w
  9252  0024  00F3               	movwf	___fleq@ff1+1
  9253  0025  0840               	movf	sprintf@fval^(0+128),w
  9254  0026  00F2               	movwf	___fleq@ff1
  9255  0027  3000               	movlw	0
  9256  0028  00F9               	movwf	___fleq@ff2+3
  9257  0029  3000               	movlw	0
  9258  002A  00F8               	movwf	___fleq@ff2+2
  9259  002B  3000               	movlw	0
  9260  002C  00F7               	movwf	___fleq@ff2+1
  9261  002D  3000               	movlw	0
  9262  002E  00F6               	movwf	___fleq@ff2
  9263  002F  160A  158A  25BD  120A  118A  	fcall	___fleq
  9264  0034  1803               	btfsc	3,0
  9265  0035  2837               	goto	u6021
  9266  0036  2838               	goto	u6020
  9267  0037                     u6021:
  9268  0037  28E0               	goto	l3824
  9269  0038                     u6020:
  9270  0038                     l3806:
  9271  0038  1683               	bsf	3,5	;RP0=1, select bank1
  9272  0039  1303               	bcf	3,6	;RP1=0, select bank1
  9273  003A  0843               	movf	(sprintf@fval+3)^(0+128),w
  9274  003B  1283               	bcf	3,5	;RP0=0, select bank0
  9275  003C  1303               	bcf	3,6	;RP1=0, select bank0
  9276  003D  00D8               	movwf	___fltol@f1+3
  9277  003E  1683               	bsf	3,5	;RP0=1, select bank1
  9278  003F  1303               	bcf	3,6	;RP1=0, select bank1
  9279  0040  0842               	movf	(sprintf@fval+2)^(0+128),w
  9280  0041  1283               	bcf	3,5	;RP0=0, select bank0
  9281  0042  1303               	bcf	3,6	;RP1=0, select bank0
  9282  0043  00D7               	movwf	___fltol@f1+2
  9283  0044  1683               	bsf	3,5	;RP0=1, select bank1
  9284  0045  1303               	bcf	3,6	;RP1=0, select bank1
  9285  0046  0841               	movf	(sprintf@fval+1)^(0+128),w
  9286  0047  1283               	bcf	3,5	;RP0=0, select bank0
  9287  0048  1303               	bcf	3,6	;RP1=0, select bank0
  9288  0049  00D6               	movwf	___fltol@f1+1
  9289  004A  1683               	bsf	3,5	;RP0=1, select bank1
  9290  004B  1303               	bcf	3,6	;RP1=0, select bank1
  9291  004C  0840               	movf	sprintf@fval^(0+128),w
  9292  004D  1283               	bcf	3,5	;RP0=0, select bank0
  9293  004E  1303               	bcf	3,6	;RP1=0, select bank0
  9294  004F  00D5               	movwf	___fltol@f1
  9295  0050  160A  158A  2784  120A  118A  	fcall	___fltol
  9296  0055  1283               	bcf	3,5	;RP0=0, select bank0
  9297  0056  1303               	bcf	3,6	;RP1=0, select bank0
  9298  0057  0858               	movf	?___fltol+3,w
  9299  0058  0457               	iorwf	?___fltol+2,w
  9300  0059  0456               	iorwf	?___fltol+1,w
  9301  005A  0455               	iorwf	?___fltol,w
  9302  005B  1D03               	skipz
  9303  005C  285E               	goto	u6031
  9304  005D  285F               	goto	u6030
  9305  005E                     u6031:
  9306  005E  28E0               	goto	l3824
  9307  005F                     u6030:
  9308  005F                     l3808:
  9309  005F  1683               	bsf	3,5	;RP0=1, select bank1
  9310  0060  1303               	bcf	3,6	;RP1=0, select bank1
  9311  0061  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9312  0062  3A80               	xorlw	128
  9313  0063  00FF               	movwf	btemp+1
  9314  0064  3080               	movlw	128
  9315  0065  027F               	subwf	btemp+1,w
  9316  0066  1D03               	skipz
  9317  0067  286A               	goto	u6045
  9318  0068  3002               	movlw	2
  9319  0069  023A               	subwf	sprintf@eexp^(0+128),w
  9320  006A                     u6045:
  9321  006A  1C03               	skipc
  9322  006B  286D               	goto	u6041
  9323  006C  286E               	goto	u6040
  9324  006D                     u6041:
  9325  006D  28E0               	goto	l3824
  9326  006E                     u6040:
  9327  006E                     l3810:
  9328                           
  9329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9330  006E  1683               	bsf	3,5	;RP0=1, select bank1
  9331  006F  1303               	bcf	3,6	;RP1=0, select bank1
  9332  0070  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9333  0071  00F5               	movwf	___flge@ff1+3
  9334  0072  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9335  0073  00F4               	movwf	___flge@ff1+2
  9336  0074  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9337  0075  00F3               	movwf	___flge@ff1+1
  9338  0076  0836               	movf	sprintf@tmpval^(0+128),w
  9339  0077  00F2               	movwf	___flge@ff1
  9340  0078  3040               	movlw	64
  9341  0079  00F9               	movwf	___flge@ff2+3
  9342  007A  3089               	movlw	137
  9343  007B  00F8               	movwf	___flge@ff2+2
  9344  007C  3070               	movlw	112
  9345  007D  00F7               	movwf	___flge@ff2+1
  9346  007E  305F               	movlw	95
  9347  007F  00F6               	movwf	___flge@ff2
  9348  0080  160A  118A  2015  120A  118A  	fcall	___flge
  9349  0085  1803               	btfsc	3,0
  9350  0086  2888               	goto	u6051
  9351  0087  2889               	goto	u6050
  9352  0088                     u6051:
  9353  0088  2892               	goto	l3814
  9354  0089                     u6050:
  9355  0089                     l3812:
  9356                           
  9357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9358  0089  30F7               	movlw	247
  9359  008A  1683               	bsf	3,5	;RP0=1, select bank1
  9360  008B  1303               	bcf	3,6	;RP1=0, select bank1
  9361  008C  07BA               	addwf	sprintf@eexp^(0+128),f
  9362  008D  1803               	skipnc
  9363  008E  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  9364  008F  30FF               	movlw	255
  9365  0090  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  9366                           
  9367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9368  0091  289A               	goto	l3816
  9369  0092                     l3814:
  9370                           
  9371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9372  0092  30F8               	movlw	248
  9373  0093  1683               	bsf	3,5	;RP0=1, select bank1
  9374  0094  1303               	bcf	3,6	;RP1=0, select bank1
  9375  0095  07BA               	addwf	sprintf@eexp^(0+128),f
  9376  0096  1803               	skipnc
  9377  0097  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  9378  0098  30FF               	movlw	255
  9379  0099  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  9380  009A                     l3816:
  9381                           
  9382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9383  009A  083A               	movf	sprintf@eexp^(0+128),w
  9384  009B  120A  158A  249D  120A  118A  	fcall	_scale
  9385  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  9386  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  9387  00A2  0845               	movf	?_scale+3,w
  9388  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  9389  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  9390  00A5  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9391  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  9392  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  9393  00A8  0844               	movf	?_scale+2,w
  9394  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  9395  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  9396  00AB  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9397  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  9398  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  9399  00AE  0843               	movf	?_scale+1,w
  9400  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  9401  00B0  1303               	bcf	3,6	;RP1=0, select bank1
  9402  00B1  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9403  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  9404  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  9405  00B4  0842               	movf	?_scale,w
  9406  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  9407  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  9408  00B7  00B6               	movwf	sprintf@tmpval^(0+128)
  9409  00B8                     l3818:
  9410  00B8  0843               	movf	(sprintf@fval+3)^(0+128),w
  9411  00B9  00F5               	movwf	__div_to_l_@f1+3
  9412  00BA  0842               	movf	(sprintf@fval+2)^(0+128),w
  9413  00BB  00F4               	movwf	__div_to_l_@f1+2
  9414  00BC  0841               	movf	(sprintf@fval+1)^(0+128),w
  9415  00BD  00F3               	movwf	__div_to_l_@f1+1
  9416  00BE  0840               	movf	sprintf@fval^(0+128),w
  9417  00BF  00F2               	movwf	__div_to_l_@f1
  9418  00C0  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9419  00C1  00F9               	movwf	__div_to_l_@f2+3
  9420  00C2  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9421  00C3  00F8               	movwf	__div_to_l_@f2+2
  9422  00C4  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9423  00C5  00F7               	movwf	__div_to_l_@f2+1
  9424  00C6  0836               	movf	sprintf@tmpval^(0+128),w
  9425  00C7  00F6               	movwf	__div_to_l_@f2
  9426  00C8  160A  118A  2232  120A  118A  	fcall	__div_to_l_
  9427  00CD  0875               	movf	?__div_to_l_+3,w
  9428  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  9429  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  9430  00D0  00B5               	movwf	(sprintf@val+3)^(0+128)
  9431  00D1  0874               	movf	?__div_to_l_+2,w
  9432  00D2  00B4               	movwf	(sprintf@val+2)^(0+128)
  9433  00D3  0873               	movf	?__div_to_l_+1,w
  9434  00D4  00B3               	movwf	(sprintf@val+1)^(0+128)
  9435  00D5  0872               	movf	?__div_to_l_,w
  9436  00D6  00B2               	movwf	sprintf@val^(0+128)
  9437  00D7                     l3822:
  9438                           
  9439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9440  00D7  3000               	movlw	0
  9441  00D8  00C3               	movwf	(sprintf@fval+3)^(0+128)
  9442  00D9  3000               	movlw	0
  9443  00DA  00C2               	movwf	(sprintf@fval+2)^(0+128)
  9444  00DB  3000               	movlw	0
  9445  00DC  00C1               	movwf	(sprintf@fval+1)^(0+128)
  9446  00DD  3000               	movlw	0
  9447  00DE  00C0               	movwf	sprintf@fval^(0+128)
  9448                           
  9449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9450  00DF  2946               	goto	l3830
  9451  00E0                     l3824:
  9452                           
  9453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9454  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  9455  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  9456  00E2  0843               	movf	(sprintf@fval+3)^(0+128),w
  9457  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  9458  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  9459  00E5  00D8               	movwf	___fltol@f1+3
  9460  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  9461  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  9462  00E8  0842               	movf	(sprintf@fval+2)^(0+128),w
  9463  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  9464  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  9465  00EB  00D7               	movwf	___fltol@f1+2
  9466  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  9467  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  9468  00EE  0841               	movf	(sprintf@fval+1)^(0+128),w
  9469  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  9470  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  9471  00F1  00D6               	movwf	___fltol@f1+1
  9472  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  9473  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  9474  00F4  0840               	movf	sprintf@fval^(0+128),w
  9475  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  9476  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  9477  00F7  00D5               	movwf	___fltol@f1
  9478  00F8  160A  158A  2784  120A  118A  	fcall	___fltol
  9479  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  9480  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  9481  00FF  0858               	movf	?___fltol+3,w
  9482  0100  1683               	bsf	3,5	;RP0=1, select bank1
  9483  0101  1303               	bcf	3,6	;RP1=0, select bank1
  9484  0102  00B5               	movwf	(sprintf@val+3)^(0+128)
  9485  0103  1283               	bcf	3,5	;RP0=0, select bank0
  9486  0104  1303               	bcf	3,6	;RP1=0, select bank0
  9487  0105  0857               	movf	?___fltol+2,w
  9488  0106  1683               	bsf	3,5	;RP0=1, select bank1
  9489  0107  1303               	bcf	3,6	;RP1=0, select bank1
  9490  0108  00B4               	movwf	(sprintf@val+2)^(0+128)
  9491  0109  1283               	bcf	3,5	;RP0=0, select bank0
  9492  010A  1303               	bcf	3,6	;RP1=0, select bank0
  9493  010B  0856               	movf	?___fltol+1,w
  9494  010C  1683               	bsf	3,5	;RP0=1, select bank1
  9495  010D  1303               	bcf	3,6	;RP1=0, select bank1
  9496  010E  00B3               	movwf	(sprintf@val+1)^(0+128)
  9497  010F  1283               	bcf	3,5	;RP0=0, select bank0
  9498  0110  1303               	bcf	3,6	;RP1=0, select bank0
  9499  0111  0855               	movf	?___fltol,w
  9500  0112  1683               	bsf	3,5	;RP0=1, select bank1
  9501  0113  1303               	bcf	3,6	;RP1=0, select bank1
  9502  0114  00B2               	movwf	sprintf@val^(0+128)
  9503  0115                     l3826:
  9504                           
  9505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9506  0115  0835               	movf	(sprintf@val+3)^(0+128),w
  9507  0116  00F5               	movwf	___xxtofl@val+3
  9508  0117  0834               	movf	(sprintf@val+2)^(0+128),w
  9509  0118  00F4               	movwf	___xxtofl@val+2
  9510  0119  0833               	movf	(sprintf@val+1)^(0+128),w
  9511  011A  00F3               	movwf	___xxtofl@val+1
  9512  011B  0832               	movf	sprintf@val^(0+128),w
  9513  011C  00F2               	movwf	___xxtofl@val
  9514  011D  3000               	movlw	0
  9515  011E  160A  118A  20B9  120A  118A  	fcall	___xxtofl
  9516  0123  0875               	movf	?___xxtofl+3,w
  9517  0124  1683               	bsf	3,5	;RP0=1, select bank1
  9518  0125  1303               	bcf	3,6	;RP1=0, select bank1
  9519  0126  00A3               	movwf	(___flsub@a+3)^(0+128)
  9520  0127  0874               	movf	?___xxtofl+2,w
  9521  0128  00A2               	movwf	(___flsub@a+2)^(0+128)
  9522  0129  0873               	movf	?___xxtofl+1,w
  9523  012A  00A1               	movwf	(___flsub@a+1)^(0+128)
  9524  012B  0872               	movf	?___xxtofl,w
  9525  012C  00A0               	movwf	___flsub@a^(0+128)
  9526  012D  0843               	movf	(sprintf@fval+3)^(0+128),w
  9527  012E  00A7               	movwf	(___flsub@b+3)^(0+128)
  9528  012F  0842               	movf	(sprintf@fval+2)^(0+128),w
  9529  0130  00A6               	movwf	(___flsub@b+2)^(0+128)
  9530  0131  0841               	movf	(sprintf@fval+1)^(0+128),w
  9531  0132  00A5               	movwf	(___flsub@b+1)^(0+128)
  9532  0133  0840               	movf	sprintf@fval^(0+128),w
  9533  0134  00A4               	movwf	___flsub@b^(0+128)
  9534  0135  160A  158A  260D  120A  118A  	fcall	___flsub
  9535  013A  1683               	bsf	3,5	;RP0=1, select bank1
  9536  013B  1303               	bcf	3,6	;RP1=0, select bank1
  9537  013C  0823               	movf	(?___flsub+3)^(0+128),w
  9538  013D  00C3               	movwf	(sprintf@fval+3)^(0+128)
  9539  013E  0822               	movf	(?___flsub+2)^(0+128),w
  9540  013F  00C2               	movwf	(sprintf@fval+2)^(0+128)
  9541  0140  0821               	movf	(?___flsub+1)^(0+128),w
  9542  0141  00C1               	movwf	(sprintf@fval+1)^(0+128)
  9543  0142  0820               	movf	?___flsub^(0+128),w
  9544  0143  00C0               	movwf	sprintf@fval^(0+128)
  9545  0144                     l3828:
  9546                           
  9547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9548  0144  01BA               	clrf	sprintf@eexp^(0+128)
  9549  0145  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  9550  0146                     l3830:
  9551                           
  9552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9553  0146  01C7               	clrf	sprintf@c^(0+128)
  9554  0147  0AC7               	incf	sprintf@c^(0+128),f
  9555  0148                     l3836:
  9556                           
  9557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9558  0148  0847               	movf	sprintf@c^(0+128),w
  9559  0149  00A8               	movwf	??_sprintf^(0+128)
  9560  014A  3001               	movlw	1
  9561  014B                     u6065:
  9562  014B  1003               	clrc
  9563  014C  0DA8               	rlf	??_sprintf^(0+128),f
  9564  014D  3EFF               	addlw	-1
  9565  014E  1D03               	skipz
  9566  014F  294B               	goto	u6065
  9567  0150  1003               	clrc
  9568  0151  0D28               	rlf	??_sprintf^(0+128),w
  9569  0152  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9570  0153  0084               	movwf	4
  9571  0154  160A  158A  2000  120A  118A  	fcall	stringdir
  9572  0159  00A9               	movwf	(??_sprintf+1)^(0+128)
  9573  015A  160A  158A  2000  120A  118A  	fcall	stringdir
  9574  015F  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  9575  0160  160A  158A  2000  120A  118A  	fcall	stringdir
  9576  0165  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  9577  0166  160A  158A  2000  120A  118A  	fcall	stringdir
  9578  016B  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  9579  016C  082C               	movf	(??_sprintf+4)^(0+128),w
  9580  016D  0235               	subwf	(sprintf@val+3)^(0+128),w
  9581  016E  1D03               	skipz
  9582  016F  297A               	goto	u6075
  9583  0170  082B               	movf	(??_sprintf+3)^(0+128),w
  9584  0171  0234               	subwf	(sprintf@val+2)^(0+128),w
  9585  0172  1D03               	skipz
  9586  0173  297A               	goto	u6075
  9587  0174  082A               	movf	(??_sprintf+2)^(0+128),w
  9588  0175  0233               	subwf	(sprintf@val+1)^(0+128),w
  9589  0176  1D03               	skipz
  9590  0177  297A               	goto	u6075
  9591  0178  0829               	movf	(??_sprintf+1)^(0+128),w
  9592  0179  0232               	subwf	sprintf@val^(0+128),w
  9593  017A                     u6075:
  9594  017A  1803               	skipnc
  9595  017B  297D               	goto	u6071
  9596  017C  297E               	goto	u6070
  9597  017D                     u6071:
  9598  017D  297F               	goto	l3840
  9599  017E                     u6070:
  9600  017E  2989               	goto	l3842
  9601  017F                     l3840:
  9602  017F  3001               	movlw	1
  9603  0180  00A8               	movwf	??_sprintf^(0+128)
  9604  0181  0828               	movf	??_sprintf^(0+128),w
  9605  0182  07C7               	addwf	sprintf@c^(0+128),f
  9606  0183  300A               	movlw	10
  9607  0184  0647               	xorwf	sprintf@c^(0+128),w
  9608  0185  1D03               	btfss	3,2
  9609  0186  2988               	goto	u6081
  9610  0187  2989               	goto	u6080
  9611  0188                     u6081:
  9612  0188  2948               	goto	l3836
  9613  0189                     u6080:
  9614  0189                     l3842:
  9615                           
  9616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9617  0189  0847               	movf	sprintf@c^(0+128),w
  9618  018A  0744               	addwf	sprintf@prec^(0+128),w
  9619  018B  00A8               	movwf	??_sprintf^(0+128)
  9620  018C  0845               	movf	(sprintf@prec+1)^(0+128),w
  9621  018D  1803               	skipnc
  9622  018E  0A45               	incf	(sprintf@prec+1)^(0+128),w
  9623  018F  00A9               	movwf	(??_sprintf^(0+128)+1)
  9624  0190  083A               	movf	sprintf@eexp^(0+128),w
  9625  0191  0728               	addwf	??_sprintf^(0+128),w
  9626  0192  00AA               	movwf	(??_sprintf+2)^(0+128)
  9627  0193  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9628  0194  1803               	skipnc
  9629  0195  0A3B               	incf	(sprintf@eexp+1)^(0+128),w
  9630  0196  0729               	addwf	(??_sprintf+1)^(0+128),w
  9631  0197  00AB               	movwf	(??_sprintf+3)^(0+128)
  9632  0198  082A               	movf	(??_sprintf+2)^(0+128),w
  9633  0199  02BE               	subwf	sprintf@width^(0+128),f
  9634  019A  082B               	movf	(??_sprintf+3)^(0+128),w
  9635  019B  1C03               	skipc
  9636  019C  03BF               	decf	(sprintf@width+1)^(0+128),f
  9637  019D  02BF               	subwf	(sprintf@width+1)^(0+128),f
  9638                           
  9639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9640  019E  0844               	movf	sprintf@prec^(0+128),w
  9641  019F  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9642  01A0  1903               	btfsc	3,2
  9643  01A1  29A3               	goto	u6091
  9644  01A2  29A4               	goto	u6090
  9645  01A3                     u6091:
  9646  01A3  29AA               	goto	l3846
  9647  01A4                     u6090:
  9648  01A4                     l3844:
  9649                           
  9650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9651  01A4  30FF               	movlw	255
  9652  01A5  07BE               	addwf	sprintf@width^(0+128),f
  9653  01A6  1803               	skipnc
  9654  01A7  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9655  01A8  30FF               	movlw	255
  9656  01A9  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9657  01AA                     l3846:
  9658                           
  9659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9660  01AA  3003               	movlw	3
  9661  01AB  053C               	andwf	sprintf@flag^(0+128),w
  9662  01AC  00A8               	movwf	??_sprintf^(0+128)
  9663  01AD  3000               	movlw	0
  9664  01AE  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9665  01AF  00A9               	movwf	(??_sprintf+1)^(0+128)
  9666  01B0  0828               	movf	??_sprintf^(0+128),w
  9667  01B1  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9668  01B2  1903               	btfsc	3,2
  9669  01B3  29B5               	goto	u6101
  9670  01B4  29B6               	goto	u6100
  9671  01B5                     u6101:
  9672  01B5  29BC               	goto	l3850
  9673  01B6                     u6100:
  9674  01B6                     l3848:
  9675                           
  9676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9677  01B6  30FF               	movlw	255
  9678  01B7  07BE               	addwf	sprintf@width^(0+128),f
  9679  01B8  1803               	skipnc
  9680  01B9  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9681  01BA  30FF               	movlw	255
  9682  01BB  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9683  01BC                     l3850:
  9684                           
  9685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
  9686  01BC  1D3C               	btfss	sprintf@flag^(0+128),2
  9687  01BD  29BF               	goto	u6111
  9688  01BE  29C0               	goto	u6110
  9689  01BF                     u6111:
  9690  01BF  2A0C               	goto	l3872
  9691  01C0                     u6110:
  9692  01C0                     l3852:
  9693                           
  9694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
  9695  01C0  3003               	movlw	3
  9696  01C1  053C               	andwf	sprintf@flag^(0+128),w
  9697  01C2  00A8               	movwf	??_sprintf^(0+128)
  9698  01C3  3000               	movlw	0
  9699  01C4  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9700  01C5  00A9               	movwf	(??_sprintf+1)^(0+128)
  9701  01C6  0828               	movf	??_sprintf^(0+128),w
  9702  01C7  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9703  01C8  1903               	btfsc	3,2
  9704  01C9  29CB               	goto	u6121
  9705  01CA  29CC               	goto	u6120
  9706  01CB                     u6121:
  9707  01CB  29EB               	goto	l3864
  9708  01CC                     u6120:
  9709  01CC                     l3854:
  9710                           
  9711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
  9712  01CC  302D               	movlw	45
  9713  01CD  00A8               	movwf	??_sprintf^(0+128)
  9714  01CE  0846               	movf	sprintf@sp^(0+128),w
  9715  01CF  0084               	movwf	4
  9716  01D0  0828               	movf	??_sprintf^(0+128),w
  9717  01D1  1383               	bcf	3,7	;select IRP bank0
  9718  01D2  0080               	movwf	0
  9719  01D3                     l3856:
  9720  01D3  3001               	movlw	1
  9721  01D4  00A8               	movwf	??_sprintf^(0+128)
  9722  01D5  0828               	movf	??_sprintf^(0+128),w
  9723  01D6  07C6               	addwf	sprintf@sp^(0+128),f
  9724  01D7  29EB               	goto	l3864
  9725  01D8                     l3858:
  9726                           
  9727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
  9728  01D8  3030               	movlw	48
  9729  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  9730  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  9731  01DB  00A8               	movwf	??_sprintf^(0+128)
  9732  01DC  0846               	movf	sprintf@sp^(0+128),w
  9733  01DD  0084               	movwf	4
  9734  01DE  0828               	movf	??_sprintf^(0+128),w
  9735  01DF  1383               	bcf	3,7	;select IRP bank0
  9736  01E0  0080               	movwf	0
  9737  01E1                     l3860:
  9738  01E1  3001               	movlw	1
  9739  01E2  00A8               	movwf	??_sprintf^(0+128)
  9740  01E3  0828               	movf	??_sprintf^(0+128),w
  9741  01E4  07C6               	addwf	sprintf@sp^(0+128),f
  9742  01E5                     l3862:
  9743                           
  9744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
  9745  01E5  30FF               	movlw	255
  9746  01E6  07BE               	addwf	sprintf@width^(0+128),f
  9747  01E7  1803               	skipnc
  9748  01E8  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9749  01E9  30FF               	movlw	255
  9750  01EA  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9751  01EB                     l3864:
  9752                           
  9753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
  9754  01EB  083F               	movf	(sprintf@width+1)^(0+128),w
  9755  01EC  3A80               	xorlw	128
  9756  01ED  00FF               	movwf	btemp+1
  9757  01EE  3080               	movlw	128
  9758  01EF  027F               	subwf	btemp+1,w
  9759  01F0  1D03               	skipz
  9760  01F1  29F4               	goto	u6135
  9761  01F2  3001               	movlw	1
  9762  01F3  023E               	subwf	sprintf@width^(0+128),w
  9763  01F4                     u6135:
  9764  01F4  1803               	skipnc
  9765  01F5  29F7               	goto	u6131
  9766  01F6  29F8               	goto	u6130
  9767  01F7                     u6131:
  9768  01F7  29D8               	goto	l3858
  9769  01F8                     u6130:
  9770  01F8  2A99               	goto	l345
  9771  01F9                     l3866:
  9772                           
  9773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9774  01F9  3020               	movlw	32
  9775  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  9776  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  9777  01FC  00A8               	movwf	??_sprintf^(0+128)
  9778  01FD  0846               	movf	sprintf@sp^(0+128),w
  9779  01FE  0084               	movwf	4
  9780  01FF  0828               	movf	??_sprintf^(0+128),w
  9781  0200  1383               	bcf	3,7	;select IRP bank0
  9782  0201  0080               	movwf	0
  9783  0202                     l3868:
  9784  0202  3001               	movlw	1
  9785  0203  00A8               	movwf	??_sprintf^(0+128)
  9786  0204  0828               	movf	??_sprintf^(0+128),w
  9787  0205  07C6               	addwf	sprintf@sp^(0+128),f
  9788  0206                     l3870:
  9789                           
  9790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
  9791  0206  30FF               	movlw	255
  9792  0207  07BE               	addwf	sprintf@width^(0+128),f
  9793  0208  1803               	skipnc
  9794  0209  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9795  020A  30FF               	movlw	255
  9796  020B  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9797  020C                     l3872:
  9798                           
  9799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9800  020C  083F               	movf	(sprintf@width+1)^(0+128),w
  9801  020D  3A80               	xorlw	128
  9802  020E  00FF               	movwf	btemp+1
  9803  020F  3080               	movlw	128
  9804  0210  027F               	subwf	btemp+1,w
  9805  0211  1D03               	skipz
  9806  0212  2A15               	goto	u6145
  9807  0213  3001               	movlw	1
  9808  0214  023E               	subwf	sprintf@width^(0+128),w
  9809  0215                     u6145:
  9810  0215  1803               	skipnc
  9811  0216  2A18               	goto	u6141
  9812  0217  2A19               	goto	u6140
  9813  0218                     u6141:
  9814  0218  29F9               	goto	l3866
  9815  0219                     u6140:
  9816  0219                     l3874:
  9817                           
  9818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9819  0219  3003               	movlw	3
  9820  021A  1683               	bsf	3,5	;RP0=1, select bank1
  9821  021B  1303               	bcf	3,6	;RP1=0, select bank1
  9822  021C  053C               	andwf	sprintf@flag^(0+128),w
  9823  021D  00A8               	movwf	??_sprintf^(0+128)
  9824  021E  3000               	movlw	0
  9825  021F  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9826  0220  00A9               	movwf	(??_sprintf+1)^(0+128)
  9827  0221  0828               	movf	??_sprintf^(0+128),w
  9828  0222  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9829  0223  1903               	btfsc	3,2
  9830  0224  2A26               	goto	u6151
  9831  0225  2A27               	goto	u6150
  9832  0226                     u6151:
  9833  0226  2A99               	goto	l345
  9834  0227                     u6150:
  9835  0227                     l3876:
  9836                           
  9837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9838  0227  302D               	movlw	45
  9839  0228  00A8               	movwf	??_sprintf^(0+128)
  9840  0229  0846               	movf	sprintf@sp^(0+128),w
  9841  022A  0084               	movwf	4
  9842  022B  0828               	movf	??_sprintf^(0+128),w
  9843  022C  1383               	bcf	3,7	;select IRP bank0
  9844  022D  0080               	movwf	0
  9845  022E                     l3878:
  9846  022E  3001               	movlw	1
  9847  022F  00A8               	movwf	??_sprintf^(0+128)
  9848  0230  0828               	movf	??_sprintf^(0+128),w
  9849  0231  07C6               	addwf	sprintf@sp^(0+128),f
  9850  0232  2A99               	goto	l345
  9851  0233                     l3880:
  9852                           
  9853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9854  0233  0847               	movf	sprintf@c^(0+128),w
  9855  0234  00A8               	movwf	??_sprintf^(0+128)
  9856  0235  3001               	movlw	1
  9857  0236                     u6165:
  9858  0236  1003               	clrc
  9859  0237  0DA8               	rlf	??_sprintf^(0+128),f
  9860  0238  3EFF               	addlw	-1
  9861  0239  1D03               	skipz
  9862  023A  2A36               	goto	u6165
  9863  023B  1003               	clrc
  9864  023C  0D28               	rlf	??_sprintf^(0+128),w
  9865  023D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9866  023E  0084               	movwf	4
  9867  023F  160A  158A  2000  120A  118A  	fcall	stringdir
  9868  0244  00F2               	movwf	___lldiv@divisor
  9869  0245  160A  158A  2000  120A  118A  	fcall	stringdir
  9870  024A  00F3               	movwf	___lldiv@divisor+1
  9871  024B  160A  158A  2000  120A  118A  	fcall	stringdir
  9872  0250  00F4               	movwf	___lldiv@divisor+2
  9873  0251  160A  158A  2000  120A  118A  	fcall	stringdir
  9874  0256  00F5               	movwf	___lldiv@divisor+3
  9875  0257  0835               	movf	(sprintf@val+3)^(0+128),w
  9876  0258  00F9               	movwf	___lldiv@dividend+3
  9877  0259  0834               	movf	(sprintf@val+2)^(0+128),w
  9878  025A  00F8               	movwf	___lldiv@dividend+2
  9879  025B  0833               	movf	(sprintf@val+1)^(0+128),w
  9880  025C  00F7               	movwf	___lldiv@dividend+1
  9881  025D  0832               	movf	sprintf@val^(0+128),w
  9882  025E  00F6               	movwf	___lldiv@dividend
  9883  025F  160A  158A  26B3  120A  118A  	fcall	___lldiv
  9884  0264  0875               	movf	?___lldiv+3,w
  9885  0265  1683               	bsf	3,5	;RP0=1, select bank1
  9886  0266  1303               	bcf	3,6	;RP1=0, select bank1
  9887  0267  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9888  0268  0874               	movf	?___lldiv+2,w
  9889  0269  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9890  026A  0873               	movf	?___lldiv+1,w
  9891  026B  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9892  026C  0872               	movf	?___lldiv,w
  9893  026D  00B6               	movwf	sprintf@tmpval^(0+128)
  9894  026E                     l3882:
  9895                           
  9896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9897  026E  3000               	movlw	0
  9898  026F  00F5               	movwf	___llmod@divisor+3
  9899  0270  3000               	movlw	0
  9900  0271  00F4               	movwf	___llmod@divisor+2
  9901  0272  3000               	movlw	0
  9902  0273  00F3               	movwf	___llmod@divisor+1
  9903  0274  300A               	movlw	10
  9904  0275  00F2               	movwf	___llmod@divisor
  9905  0276  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9906  0277  00F9               	movwf	___llmod@dividend+3
  9907  0278  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9908  0279  00F8               	movwf	___llmod@dividend+2
  9909  027A  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9910  027B  00F7               	movwf	___llmod@dividend+1
  9911  027C  0836               	movf	sprintf@tmpval^(0+128),w
  9912  027D  00F6               	movwf	___llmod@dividend
  9913  027E  160A  158A  265D  120A  118A  	fcall	___llmod
  9914  0283  0875               	movf	?___llmod+3,w
  9915  0284  1683               	bsf	3,5	;RP0=1, select bank1
  9916  0285  1303               	bcf	3,6	;RP1=0, select bank1
  9917  0286  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9918  0287  0874               	movf	?___llmod+2,w
  9919  0288  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9920  0289  0873               	movf	?___llmod+1,w
  9921  028A  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9922  028B  0872               	movf	?___llmod,w
  9923  028C  00B6               	movwf	sprintf@tmpval^(0+128)
  9924  028D                     l3884:
  9925                           
  9926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9927  028D  0836               	movf	sprintf@tmpval^(0+128),w
  9928  028E  3E30               	addlw	48
  9929  028F  00A8               	movwf	??_sprintf^(0+128)
  9930  0290  0846               	movf	sprintf@sp^(0+128),w
  9931  0291  0084               	movwf	4
  9932  0292  0828               	movf	??_sprintf^(0+128),w
  9933  0293  1383               	bcf	3,7	;select IRP bank0
  9934  0294  0080               	movwf	0
  9935  0295  3001               	movlw	1
  9936  0296  00A8               	movwf	??_sprintf^(0+128)
  9937  0297  0828               	movf	??_sprintf^(0+128),w
  9938  0298  07C6               	addwf	sprintf@sp^(0+128),f
  9939  0299                     l345:	
  9940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9941                           
  9942                           
  9943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9944  0299  3001               	movlw	1
  9945  029A  1683               	bsf	3,5	;RP0=1, select bank1
  9946  029B  1303               	bcf	3,6	;RP1=0, select bank1
  9947  029C  02C7               	subwf	sprintf@c^(0+128),f
  9948  029D  0A47               	incf	sprintf@c^(0+128),w
  9949  029E  1D03               	btfss	3,2
  9950  029F  2AA1               	goto	u6171
  9951  02A0  2AA2               	goto	u6170
  9952  02A1                     u6171:
  9953  02A1  2A33               	goto	l3880
  9954  02A2                     u6170:
  9955  02A2  2AB6               	goto	l3892
  9956  02A3                     l3886:
  9957                           
  9958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9959  02A3  3030               	movlw	48
  9960  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  9961  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  9962  02A6  00A8               	movwf	??_sprintf^(0+128)
  9963  02A7  0846               	movf	sprintf@sp^(0+128),w
  9964  02A8  0084               	movwf	4
  9965  02A9  0828               	movf	??_sprintf^(0+128),w
  9966  02AA  1383               	bcf	3,7	;select IRP bank0
  9967  02AB  0080               	movwf	0
  9968  02AC                     l3888:
  9969  02AC  3001               	movlw	1
  9970  02AD  00A8               	movwf	??_sprintf^(0+128)
  9971  02AE  0828               	movf	??_sprintf^(0+128),w
  9972  02AF  07C6               	addwf	sprintf@sp^(0+128),f
  9973  02B0                     l3890:
  9974                           
  9975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9976  02B0  30FF               	movlw	255
  9977  02B1  07BA               	addwf	sprintf@eexp^(0+128),f
  9978  02B2  1803               	skipnc
  9979  02B3  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  9980  02B4  30FF               	movlw	255
  9981  02B5  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  9982  02B6                     l3892:
  9983                           
  9984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9985  02B6  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9986  02B7  3A80               	xorlw	128
  9987  02B8  00FF               	movwf	btemp+1
  9988  02B9  3080               	movlw	128
  9989  02BA  027F               	subwf	btemp+1,w
  9990  02BB  1D03               	skipz
  9991  02BC  2ABF               	goto	u6185
  9992  02BD  3001               	movlw	1
  9993  02BE  023A               	subwf	sprintf@eexp^(0+128),w
  9994  02BF                     u6185:
  9995  02BF  1803               	skipnc
  9996  02C0  2AC2               	goto	u6181
  9997  02C1  2AC3               	goto	u6180
  9998  02C2                     u6181:
  9999  02C2  2AA3               	goto	l3886
 10000  02C3                     u6180:
 10001  02C3                     l3894:
 10002                           
 10003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10004  02C3  1683               	bsf	3,5	;RP0=1, select bank1
 10005  02C4  1303               	bcf	3,6	;RP1=0, select bank1
 10006  02C5  0845               	movf	(sprintf@prec+1)^(0+128),w
 10007  02C6  3A80               	xorlw	128
 10008  02C7  00FF               	movwf	btemp+1
 10009  02C8  3080               	movlw	128
 10010  02C9  027F               	subwf	btemp+1,w
 10011  02CA  1D03               	skipz
 10012  02CB  2ACE               	goto	u6195
 10013  02CC  3009               	movlw	9
 10014  02CD  0244               	subwf	sprintf@prec^(0+128),w
 10015  02CE                     u6195:
 10016  02CE  1C03               	skipc
 10017  02CF  2AD1               	goto	u6191
 10018  02D0  2AD2               	goto	u6190
 10019  02D1                     u6191:
 10020  02D1  2AD9               	goto	l3898
 10021  02D2                     u6190:
 10022  02D2                     l3896:
 10023                           
 10024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10025  02D2  3008               	movlw	8
 10026  02D3  1683               	bsf	3,5	;RP0=1, select bank1
 10027  02D4  1303               	bcf	3,6	;RP1=0, select bank1
 10028  02D5  00A8               	movwf	??_sprintf^(0+128)
 10029  02D6  0828               	movf	??_sprintf^(0+128),w
 10030  02D7  00C7               	movwf	sprintf@c^(0+128)
 10031  02D8  2ADF               	goto	l352
 10032  02D9                     l3898:
 10033                           
 10034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10035  02D9  1683               	bsf	3,5	;RP0=1, select bank1
 10036  02DA  1303               	bcf	3,6	;RP1=0, select bank1
 10037  02DB  0844               	movf	sprintf@prec^(0+128),w
 10038  02DC  00A8               	movwf	??_sprintf^(0+128)
 10039  02DD  0828               	movf	??_sprintf^(0+128),w
 10040  02DE  00C7               	movwf	sprintf@c^(0+128)
 10041  02DF                     l352:
 10042                           
 10043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10044  02DF  0847               	movf	sprintf@c^(0+128),w
 10045  02E0  00A8               	movwf	??_sprintf^(0+128)
 10046  02E1  01A9               	clrf	(??_sprintf^(0+128)+1)
 10047  02E2  0828               	movf	??_sprintf^(0+128),w
 10048  02E3  02C4               	subwf	sprintf@prec^(0+128),f
 10049  02E4  0829               	movf	(??_sprintf+1)^(0+128),w
 10050  02E5  1C03               	skipc
 10051  02E6  03C5               	decf	(sprintf@prec+1)^(0+128),f
 10052  02E7  02C5               	subwf	(sprintf@prec+1)^(0+128),f
 10053  02E8                     l3900:
 10054                           
 10055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10056  02E8  0847               	movf	sprintf@c^(0+128),w
 10057  02E9  1903               	btfsc	3,2
 10058  02EA  2AEC               	goto	u6201
 10059  02EB  2AED               	goto	u6200
 10060  02EC                     u6201:
 10061  02EC  2AF8               	goto	l3906
 10062  02ED                     u6200:
 10063  02ED                     l3902:
 10064                           
 10065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10066  02ED  302E               	movlw	46
 10067  02EE  00A8               	movwf	??_sprintf^(0+128)
 10068  02EF  0846               	movf	sprintf@sp^(0+128),w
 10069  02F0  0084               	movwf	4
 10070  02F1  0828               	movf	??_sprintf^(0+128),w
 10071  02F2  1383               	bcf	3,7	;select IRP bank0
 10072  02F3  0080               	movwf	0
 10073  02F4                     l3904:
 10074  02F4  3001               	movlw	1
 10075  02F5  00A8               	movwf	??_sprintf^(0+128)
 10076  02F6  0828               	movf	??_sprintf^(0+128),w
 10077  02F7  07C6               	addwf	sprintf@sp^(0+128),f
 10078  02F8                     l3906:
 10079                           
 10080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10081  02F8  0847               	movf	sprintf@c^(0+128),w
 10082  02F9  120A  158A  249D  120A  118A  	fcall	_scale
 10083  02FE  1283               	bcf	3,5	;RP0=0, select bank0
 10084  02FF  1303               	bcf	3,6	;RP1=0, select bank0
 10085  0300  0845               	movf	?_scale+3,w
 10086  0301  1683               	bsf	3,5	;RP0=1, select bank1
 10087  0302  1303               	bcf	3,6	;RP1=0, select bank1
 10088  0303  00B0               	movwf	(_sprintf$1131+3)^(0+128)
 10089  0304  1283               	bcf	3,5	;RP0=0, select bank0
 10090  0305  1303               	bcf	3,6	;RP1=0, select bank0
 10091  0306  0844               	movf	?_scale+2,w
 10092  0307  1683               	bsf	3,5	;RP0=1, select bank1
 10093  0308  1303               	bcf	3,6	;RP1=0, select bank1
 10094  0309  00AF               	movwf	(_sprintf$1131+2)^(0+128)
 10095  030A  1283               	bcf	3,5	;RP0=0, select bank0
 10096  030B  1303               	bcf	3,6	;RP1=0, select bank0
 10097  030C  0843               	movf	?_scale+1,w
 10098  030D  1683               	bsf	3,5	;RP0=1, select bank1
 10099  030E  1303               	bcf	3,6	;RP1=0, select bank1
 10100  030F  00AE               	movwf	(_sprintf$1131+1)^(0+128)
 10101  0310  1283               	bcf	3,5	;RP0=0, select bank0
 10102  0311  1303               	bcf	3,6	;RP1=0, select bank0
 10103  0312  0842               	movf	?_scale,w
 10104  0313  1683               	bsf	3,5	;RP0=1, select bank1
 10105  0314  1303               	bcf	3,6	;RP1=0, select bank1
 10106  0315  00AD               	movwf	_sprintf$1131^(0+128)
 10107  0316                     l3908:
 10108                           
 10109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10110  0316  0830               	movf	(_sprintf$1131+3)^(0+128),w
 10111  0317  1283               	bcf	3,5	;RP0=0, select bank0
 10112  0318  1303               	bcf	3,6	;RP1=0, select bank0
 10113  0319  00AF               	movwf	___flmul@a+3
 10114  031A  1683               	bsf	3,5	;RP0=1, select bank1
 10115  031B  1303               	bcf	3,6	;RP1=0, select bank1
 10116  031C  082F               	movf	(_sprintf$1131+2)^(0+128),w
 10117  031D  1283               	bcf	3,5	;RP0=0, select bank0
 10118  031E  1303               	bcf	3,6	;RP1=0, select bank0
 10119  031F  00AE               	movwf	___flmul@a+2
 10120  0320  1683               	bsf	3,5	;RP0=1, select bank1
 10121  0321  1303               	bcf	3,6	;RP1=0, select bank1
 10122  0322  082E               	movf	(_sprintf$1131+1)^(0+128),w
 10123  0323  1283               	bcf	3,5	;RP0=0, select bank0
 10124  0324  1303               	bcf	3,6	;RP1=0, select bank0
 10125  0325  00AD               	movwf	___flmul@a+1
 10126  0326  1683               	bsf	3,5	;RP0=1, select bank1
 10127  0327  1303               	bcf	3,6	;RP1=0, select bank1
 10128  0328  082D               	movf	_sprintf$1131^(0+128),w
 10129  0329  1283               	bcf	3,5	;RP0=0, select bank0
 10130  032A  1303               	bcf	3,6	;RP1=0, select bank0
 10131  032B  00AC               	movwf	___flmul@a
 10132  032C  1683               	bsf	3,5	;RP0=1, select bank1
 10133  032D  1303               	bcf	3,6	;RP1=0, select bank1
 10134  032E  0843               	movf	(sprintf@fval+3)^(0+128),w
 10135  032F  1283               	bcf	3,5	;RP0=0, select bank0
 10136  0330  1303               	bcf	3,6	;RP1=0, select bank0
 10137  0331  00AB               	movwf	___flmul@b+3
 10138  0332  1683               	bsf	3,5	;RP0=1, select bank1
 10139  0333  1303               	bcf	3,6	;RP1=0, select bank1
 10140  0334  0842               	movf	(sprintf@fval+2)^(0+128),w
 10141  0335  1283               	bcf	3,5	;RP0=0, select bank0
 10142  0336  1303               	bcf	3,6	;RP1=0, select bank0
 10143  0337  00AA               	movwf	___flmul@b+2
 10144  0338  1683               	bsf	3,5	;RP0=1, select bank1
 10145  0339  1303               	bcf	3,6	;RP1=0, select bank1
 10146  033A  0841               	movf	(sprintf@fval+1)^(0+128),w
 10147  033B  1283               	bcf	3,5	;RP0=0, select bank0
 10148  033C  1303               	bcf	3,6	;RP1=0, select bank0
 10149  033D  00A9               	movwf	___flmul@b+1
 10150  033E  1683               	bsf	3,5	;RP0=1, select bank1
 10151  033F  1303               	bcf	3,6	;RP1=0, select bank1
 10152  0340  0840               	movf	sprintf@fval^(0+128),w
 10153  0341  1283               	bcf	3,5	;RP0=0, select bank0
 10154  0342  1303               	bcf	3,6	;RP1=0, select bank0
 10155  0343  00A8               	movwf	___flmul@b
 10156  0344  120A  158A  213C  120A  118A  	fcall	___flmul
 10157  0349  1283               	bcf	3,5	;RP0=0, select bank0
 10158  034A  1303               	bcf	3,6	;RP1=0, select bank0
 10159  034B  082B               	movf	?___flmul+3,w
 10160  034C  00D8               	movwf	___fltol@f1+3
 10161  034D  082A               	movf	?___flmul+2,w
 10162  034E  00D7               	movwf	___fltol@f1+2
 10163  034F  0829               	movf	?___flmul+1,w
 10164  0350  00D6               	movwf	___fltol@f1+1
 10165  0351  0828               	movf	?___flmul,w
 10166  0352  00D5               	movwf	___fltol@f1
 10167  0353  160A  158A  2784  120A  118A  	fcall	___fltol
 10168  0358  1283               	bcf	3,5	;RP0=0, select bank0
 10169  0359  1303               	bcf	3,6	;RP1=0, select bank0
 10170  035A  0858               	movf	?___fltol+3,w
 10171  035B  1683               	bsf	3,5	;RP0=1, select bank1
 10172  035C  1303               	bcf	3,6	;RP1=0, select bank1
 10173  035D  00B5               	movwf	(sprintf@val+3)^(0+128)
 10174  035E  1283               	bcf	3,5	;RP0=0, select bank0
 10175  035F  1303               	bcf	3,6	;RP1=0, select bank0
 10176  0360  0857               	movf	?___fltol+2,w
 10177  0361  1683               	bsf	3,5	;RP0=1, select bank1
 10178  0362  1303               	bcf	3,6	;RP1=0, select bank1
 10179  0363  00B4               	movwf	(sprintf@val+2)^(0+128)
 10180  0364  1283               	bcf	3,5	;RP0=0, select bank0
 10181  0365  1303               	bcf	3,6	;RP1=0, select bank0
 10182  0366  0856               	movf	?___fltol+1,w
 10183  0367  1683               	bsf	3,5	;RP0=1, select bank1
 10184  0368  1303               	bcf	3,6	;RP1=0, select bank1
 10185  0369  00B3               	movwf	(sprintf@val+1)^(0+128)
 10186  036A  1283               	bcf	3,5	;RP0=0, select bank0
 10187  036B  1303               	bcf	3,6	;RP1=0, select bank0
 10188  036C  0855               	movf	?___fltol,w
 10189  036D  1683               	bsf	3,5	;RP0=1, select bank1
 10190  036E  1303               	bcf	3,6	;RP1=0, select bank1
 10191  036F  00B2               	movwf	sprintf@val^(0+128)
 10192                           
 10193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10194  0370  2C12               	goto	l3918
 10195  0371                     l3910:
 10196                           
 10197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10198  0371  0847               	movf	sprintf@c^(0+128),w
 10199  0372  00A8               	movwf	??_sprintf^(0+128)
 10200  0373  3001               	movlw	1
 10201  0374                     u6215:
 10202  0374  1003               	clrc
 10203  0375  0DA8               	rlf	??_sprintf^(0+128),f
 10204  0376  3EFF               	addlw	-1
 10205  0377  1D03               	skipz
 10206  0378  2B74               	goto	u6215
 10207  0379  1003               	clrc
 10208  037A  0D28               	rlf	??_sprintf^(0+128),w
 10209  037B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10210  037C  0084               	movwf	4
 10211  037D  160A  158A  2000  120A  118A  	fcall	stringdir
 10212  0382  00F2               	movwf	___lldiv@divisor
 10213  0383  160A  158A  2000  120A  118A  	fcall	stringdir
 10214  0388  00F3               	movwf	___lldiv@divisor+1
 10215  0389  160A  158A  2000  120A  118A  	fcall	stringdir
 10216  038E  00F4               	movwf	___lldiv@divisor+2
 10217  038F  160A  158A  2000  120A  118A  	fcall	stringdir
 10218  0394  00F5               	movwf	___lldiv@divisor+3
 10219  0395  0835               	movf	(sprintf@val+3)^(0+128),w
 10220  0396  00F9               	movwf	___lldiv@dividend+3
 10221  0397  0834               	movf	(sprintf@val+2)^(0+128),w
 10222  0398  00F8               	movwf	___lldiv@dividend+2
 10223  0399  0833               	movf	(sprintf@val+1)^(0+128),w
 10224  039A  00F7               	movwf	___lldiv@dividend+1
 10225  039B  0832               	movf	sprintf@val^(0+128),w
 10226  039C  00F6               	movwf	___lldiv@dividend
 10227  039D  160A  158A  26B3  120A  118A  	fcall	___lldiv
 10228  03A2  0875               	movf	?___lldiv+3,w
 10229  03A3  1683               	bsf	3,5	;RP0=1, select bank1
 10230  03A4  1303               	bcf	3,6	;RP1=0, select bank1
 10231  03A5  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
 10232  03A6  0874               	movf	?___lldiv+2,w
 10233  03A7  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
 10234  03A8  0873               	movf	?___lldiv+1,w
 10235  03A9  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
 10236  03AA  0872               	movf	?___lldiv,w
 10237  03AB  00B6               	movwf	sprintf@tmpval^(0+128)
 10238  03AC                     l3912:
 10239                           
 10240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10241  03AC  3000               	movlw	0
 10242  03AD  00F5               	movwf	___llmod@divisor+3
 10243  03AE  3000               	movlw	0
 10244  03AF  00F4               	movwf	___llmod@divisor+2
 10245  03B0  3000               	movlw	0
 10246  03B1  00F3               	movwf	___llmod@divisor+1
 10247  03B2  300A               	movlw	10
 10248  03B3  00F2               	movwf	___llmod@divisor
 10249  03B4  0839               	movf	(sprintf@tmpval+3)^(0+128),w
 10250  03B5  00F9               	movwf	___llmod@dividend+3
 10251  03B6  0838               	movf	(sprintf@tmpval+2)^(0+128),w
 10252  03B7  00F8               	movwf	___llmod@dividend+2
 10253  03B8  0837               	movf	(sprintf@tmpval+1)^(0+128),w
 10254  03B9  00F7               	movwf	___llmod@dividend+1
 10255  03BA  0836               	movf	sprintf@tmpval^(0+128),w
 10256  03BB  00F6               	movwf	___llmod@dividend
 10257  03BC  160A  158A  265D  120A  118A  	fcall	___llmod
 10258  03C1  0875               	movf	?___llmod+3,w
 10259  03C2  1683               	bsf	3,5	;RP0=1, select bank1
 10260  03C3  1303               	bcf	3,6	;RP1=0, select bank1
 10261  03C4  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
 10262  03C5  0874               	movf	?___llmod+2,w
 10263  03C6  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
 10264  03C7  0873               	movf	?___llmod+1,w
 10265  03C8  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
 10266  03C9  0872               	movf	?___llmod,w
 10267  03CA  00B6               	movwf	sprintf@tmpval^(0+128)
 10268  03CB                     l3914:
 10269                           
 10270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10271  03CB  0836               	movf	sprintf@tmpval^(0+128),w
 10272  03CC  3E30               	addlw	48
 10273  03CD  00A8               	movwf	??_sprintf^(0+128)
 10274  03CE  0846               	movf	sprintf@sp^(0+128),w
 10275  03CF  0084               	movwf	4
 10276  03D0  0828               	movf	??_sprintf^(0+128),w
 10277  03D1  1383               	bcf	3,7	;select IRP bank0
 10278  03D2  0080               	movwf	0
 10279  03D3  3001               	movlw	1
 10280  03D4  00A8               	movwf	??_sprintf^(0+128)
 10281  03D5  0828               	movf	??_sprintf^(0+128),w
 10282  03D6  07C6               	addwf	sprintf@sp^(0+128),f
 10283  03D7                     l3916:
 10284                           
 10285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10286  03D7  0847               	movf	sprintf@c^(0+128),w
 10287  03D8  00A8               	movwf	??_sprintf^(0+128)
 10288  03D9  3001               	movlw	1
 10289  03DA                     u6225:
 10290  03DA  1003               	clrc
 10291  03DB  0DA8               	rlf	??_sprintf^(0+128),f
 10292  03DC  3EFF               	addlw	-1
 10293  03DD  1D03               	skipz
 10294  03DE  2BDA               	goto	u6225
 10295  03DF  1003               	clrc
 10296  03E0  0D28               	rlf	??_sprintf^(0+128),w
 10297  03E1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10298  03E2  0084               	movwf	4
 10299  03E3  160A  158A  2000  120A  118A  	fcall	stringdir
 10300  03E8  00F2               	movwf	___llmod@divisor
 10301  03E9  160A  158A  2000  120A  118A  	fcall	stringdir
 10302  03EE  00F3               	movwf	___llmod@divisor+1
 10303  03EF  160A  158A  2000  120A  118A  	fcall	stringdir
 10304  03F4  00F4               	movwf	___llmod@divisor+2
 10305  03F5  160A  158A  2000  120A  118A  	fcall	stringdir
 10306  03FA  00F5               	movwf	___llmod@divisor+3
 10307  03FB  0835               	movf	(sprintf@val+3)^(0+128),w
 10308  03FC  00F9               	movwf	___llmod@dividend+3
 10309  03FD  0834               	movf	(sprintf@val+2)^(0+128),w
 10310  03FE  00F8               	movwf	___llmod@dividend+2
 10311  03FF  0833               	movf	(sprintf@val+1)^(0+128),w
 10312  0400  00F7               	movwf	___llmod@dividend+1
 10313  0401  0832               	movf	sprintf@val^(0+128),w
 10314  0402  00F6               	movwf	___llmod@dividend
 10315  0403  160A  158A  265D  120A  118A  	fcall	___llmod
 10316  0408  0875               	movf	?___llmod+3,w
 10317  0409  1683               	bsf	3,5	;RP0=1, select bank1
 10318  040A  1303               	bcf	3,6	;RP1=0, select bank1
 10319  040B  00B5               	movwf	(sprintf@val+3)^(0+128)
 10320  040C  0874               	movf	?___llmod+2,w
 10321  040D  00B4               	movwf	(sprintf@val+2)^(0+128)
 10322  040E  0873               	movf	?___llmod+1,w
 10323  040F  00B3               	movwf	(sprintf@val+1)^(0+128)
 10324  0410  0872               	movf	?___llmod,w
 10325  0411  00B2               	movwf	sprintf@val^(0+128)
 10326  0412                     l3918:
 10327                           
 10328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10329  0412  3001               	movlw	1
 10330  0413  02C7               	subwf	sprintf@c^(0+128),f
 10331  0414  0A47               	incf	sprintf@c^(0+128),w
 10332  0415  1D03               	btfss	3,2
 10333  0416  2C18               	goto	u6231
 10334  0417  2C19               	goto	u6230
 10335  0418                     u6231:
 10336  0418  2B71               	goto	l3910
 10337  0419                     u6230:
 10338  0419  2C2B               	goto	l3926
 10339  041A                     l3920:
 10340                           
 10341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10342  041A  3030               	movlw	48
 10343  041B  00A8               	movwf	??_sprintf^(0+128)
 10344  041C  0846               	movf	sprintf@sp^(0+128),w
 10345  041D  0084               	movwf	4
 10346  041E  0828               	movf	??_sprintf^(0+128),w
 10347  041F  1383               	bcf	3,7	;select IRP bank0
 10348  0420  0080               	movwf	0
 10349  0421                     l3922:
 10350  0421  3001               	movlw	1
 10351  0422  00A8               	movwf	??_sprintf^(0+128)
 10352  0423  0828               	movf	??_sprintf^(0+128),w
 10353  0424  07C6               	addwf	sprintf@sp^(0+128),f
 10354  0425                     l3924:
 10355                           
 10356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10357  0425  30FF               	movlw	255
 10358  0426  07C4               	addwf	sprintf@prec^(0+128),f
 10359  0427  1803               	skipnc
 10360  0428  0AC5               	incf	(sprintf@prec+1)^(0+128),f
 10361  0429  30FF               	movlw	255
 10362  042A  07C5               	addwf	(sprintf@prec+1)^(0+128),f
 10363  042B                     l3926:
 10364                           
 10365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10366  042B  0844               	movf	sprintf@prec^(0+128),w
 10367  042C  0445               	iorwf	(sprintf@prec+1)^(0+128),w
 10368  042D  1D03               	btfss	3,2
 10369  042E  2C30               	goto	u6241
 10370  042F  2C31               	goto	u6240
 10371  0430                     u6241:
 10372  0430  2C1A               	goto	l3920
 10373  0431                     u6240:
 10374  0431  2D30               	goto	l3990
 10375  0432                     l3928:
 10376                           
 10377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10378  0432  0844               	movf	sprintf@prec^(0+128),w
 10379  0433  0445               	iorwf	(sprintf@prec+1)^(0+128),w
 10380  0434  1D03               	btfss	3,2
 10381  0435  2C37               	goto	u6251
 10382  0436  2C38               	goto	u6250
 10383  0437                     u6251:
 10384  0437  2C46               	goto	l360
 10385  0438                     u6250:
 10386  0438                     l3930:
 10387  0438  0835               	movf	(sprintf@val+3)^(0+128),w
 10388  0439  0434               	iorwf	(sprintf@val+2)^(0+128),w
 10389  043A  0433               	iorwf	(sprintf@val+1)^(0+128),w
 10390  043B  0432               	iorwf	sprintf@val^(0+128),w
 10391  043C  1D03               	skipz
 10392  043D  2C3F               	goto	u6261
 10393  043E  2C40               	goto	u6260
 10394  043F                     u6261:
 10395  043F  2C46               	goto	l360
 10396  0440                     u6260:
 10397  0440                     l3932:
 10398                           
 10399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10400  0440  3001               	movlw	1
 10401  0441  07C4               	addwf	sprintf@prec^(0+128),f
 10402  0442  1803               	skipnc
 10403  0443  0AC5               	incf	(sprintf@prec+1)^(0+128),f
 10404  0444  3000               	movlw	0
 10405  0445  07C5               	addwf	(sprintf@prec+1)^(0+128),f
 10406  0446                     l360:
 10407                           
 10408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10409  0446  0845               	movf	(sprintf@prec+1)^(0+128),w
 10410  0447  3A80               	xorlw	128
 10411  0448  3C80               	sublw	128
 10412  0449  1D03               	skipz
 10413  044A  2C4D               	goto	u6275
 10414  044B  0844               	movf	sprintf@prec^(0+128),w
 10415  044C  0247               	subwf	sprintf@c^(0+128),w
 10416  044D                     u6275:
 10417  044D  1803               	skipnc
 10418  044E  2C50               	goto	u6271
 10419  044F  2C51               	goto	u6270
 10420  0450                     u6271:
 10421  0450  2C58               	goto	l3936
 10422  0451                     u6270:
 10423  0451                     l3934:
 10424                           
 10425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10426  0451  1683               	bsf	3,5	;RP0=1, select bank1
 10427  0452  1303               	bcf	3,6	;RP1=0, select bank1
 10428  0453  0844               	movf	sprintf@prec^(0+128),w
 10429  0454  00A8               	movwf	??_sprintf^(0+128)
 10430  0455  0828               	movf	??_sprintf^(0+128),w
 10431  0456  00C7               	movwf	sprintf@c^(0+128)
 10432  0457  2C70               	goto	l3940
 10433  0458                     l3936:
 10434  0458  1683               	bsf	3,5	;RP0=1, select bank1
 10435  0459  1303               	bcf	3,6	;RP1=0, select bank1
 10436  045A  0845               	movf	(sprintf@prec+1)^(0+128),w
 10437  045B  3A80               	xorlw	128
 10438  045C  00A8               	movwf	??_sprintf^(0+128)
 10439  045D  3080               	movlw	128
 10440  045E  0228               	subwf	??_sprintf^(0+128),w
 10441  045F  1D03               	skipz
 10442  0460  2C63               	goto	u6285
 10443  0461  0847               	movf	sprintf@c^(0+128),w
 10444  0462  0244               	subwf	sprintf@prec^(0+128),w
 10445  0463                     u6285:
 10446  0463  1803               	skipnc
 10447  0464  2C66               	goto	u6281
 10448  0465  2C67               	goto	u6280
 10449  0466                     u6281:
 10450  0466  2C70               	goto	l3940
 10451  0467                     u6280:
 10452  0467                     l3938:
 10453                           
 10454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10455  0467  1683               	bsf	3,5	;RP0=1, select bank1
 10456  0468  1303               	bcf	3,6	;RP1=0, select bank1
 10457  0469  0847               	movf	sprintf@c^(0+128),w
 10458  046A  00A8               	movwf	??_sprintf^(0+128)
 10459  046B  01A9               	clrf	(??_sprintf^(0+128)+1)
 10460  046C  0828               	movf	??_sprintf^(0+128),w
 10461  046D  00C4               	movwf	sprintf@prec^(0+128)
 10462  046E  0829               	movf	(??_sprintf+1)^(0+128),w
 10463  046F  00C5               	movwf	(sprintf@prec+1)^(0+128)
 10464  0470                     l3940:
 10465                           
 10466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10467  0470  1683               	bsf	3,5	;RP0=1, select bank1
 10468  0471  1303               	bcf	3,6	;RP1=0, select bank1
 10469  0472  083E               	movf	sprintf@width^(0+128),w
 10470  0473  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10471  0474  1903               	btfsc	3,2
 10472  0475  2C77               	goto	u6291
 10473  0476  2C78               	goto	u6290
 10474  0477                     u6291:
 10475  0477  2C8A               	goto	l3946
 10476  0478                     u6290:
 10477  0478                     l3942:
 10478  0478  3003               	movlw	3
 10479  0479  053C               	andwf	sprintf@flag^(0+128),w
 10480  047A  00A8               	movwf	??_sprintf^(0+128)
 10481  047B  3000               	movlw	0
 10482  047C  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10483  047D  00A9               	movwf	(??_sprintf+1)^(0+128)
 10484  047E  0828               	movf	??_sprintf^(0+128),w
 10485  047F  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10486  0480  1903               	btfsc	3,2
 10487  0481  2C83               	goto	u6301
 10488  0482  2C84               	goto	u6300
 10489  0483                     u6301:
 10490  0483  2C8A               	goto	l3946
 10491  0484                     u6300:
 10492  0484                     l3944:
 10493                           
 10494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10495  0484  30FF               	movlw	255
 10496  0485  07BE               	addwf	sprintf@width^(0+128),f
 10497  0486  1803               	skipnc
 10498  0487  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10499  0488  30FF               	movlw	255
 10500  0489  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10501  048A                     l3946:
 10502                           
 10503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10504  048A  1F3D               	btfss	(sprintf@flag+1)^(0+128),6
 10505  048B  2C8D               	goto	u6311
 10506  048C  2C8E               	goto	u6310
 10507  048D                     u6311:
 10508  048D  2CA9               	goto	l3954
 10509  048E                     u6310:
 10510  048E                     l3948:
 10511                           
 10512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10513  048E  0845               	movf	(sprintf@prec+1)^(0+128),w
 10514  048F  3A80               	xorlw	128
 10515  0490  00A8               	movwf	??_sprintf^(0+128)
 10516  0491  083F               	movf	(sprintf@width+1)^(0+128),w
 10517  0492  3A80               	xorlw	128
 10518  0493  0228               	subwf	??_sprintf^(0+128),w
 10519  0494  1D03               	skipz
 10520  0495  2C98               	goto	u6325
 10521  0496  083E               	movf	sprintf@width^(0+128),w
 10522  0497  0244               	subwf	sprintf@prec^(0+128),w
 10523  0498                     u6325:
 10524  0498  1803               	skipnc
 10525  0499  2C9B               	goto	u6321
 10526  049A  2C9C               	goto	u6320
 10527  049B                     u6321:
 10528  049B  2CA5               	goto	l3952
 10529  049C                     u6320:
 10530  049C                     l3950:
 10531                           
 10532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10533  049C  1683               	bsf	3,5	;RP0=1, select bank1
 10534  049D  1303               	bcf	3,6	;RP1=0, select bank1
 10535  049E  0844               	movf	sprintf@prec^(0+128),w
 10536  049F  02BE               	subwf	sprintf@width^(0+128),f
 10537  04A0  0845               	movf	(sprintf@prec+1)^(0+128),w
 10538  04A1  1C03               	skipc
 10539  04A2  03BF               	decf	(sprintf@width+1)^(0+128),f
 10540  04A3  02BF               	subwf	(sprintf@width+1)^(0+128),f
 10541  04A4  2CA9               	goto	l3954
 10542  04A5                     l3952:
 10543                           
 10544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10545  04A5  1683               	bsf	3,5	;RP0=1, select bank1
 10546  04A6  1303               	bcf	3,6	;RP1=0, select bank1
 10547  04A7  01BE               	clrf	sprintf@width^(0+128)
 10548  04A8  01BF               	clrf	(sprintf@width+1)^(0+128)
 10549  04A9                     l3954:
 10550                           
 10551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10552  04A9  083F               	movf	(sprintf@width+1)^(0+128),w
 10553  04AA  3A80               	xorlw	128
 10554  04AB  3C80               	sublw	128
 10555  04AC  1D03               	skipz
 10556  04AD  2CB0               	goto	u6335
 10557  04AE  083E               	movf	sprintf@width^(0+128),w
 10558  04AF  0247               	subwf	sprintf@c^(0+128),w
 10559  04B0                     u6335:
 10560  04B0  1803               	skipnc
 10561  04B1  2CB3               	goto	u6331
 10562  04B2  2CB4               	goto	u6330
 10563  04B3                     u6331:
 10564  04B3  2CC0               	goto	l3958
 10565  04B4                     u6330:
 10566  04B4                     l3956:
 10567                           
 10568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10569  04B4  1683               	bsf	3,5	;RP0=1, select bank1
 10570  04B5  1303               	bcf	3,6	;RP1=0, select bank1
 10571  04B6  0847               	movf	sprintf@c^(0+128),w
 10572  04B7  00A8               	movwf	??_sprintf^(0+128)
 10573  04B8  01A9               	clrf	(??_sprintf^(0+128)+1)
 10574  04B9  0828               	movf	??_sprintf^(0+128),w
 10575  04BA  02BE               	subwf	sprintf@width^(0+128),f
 10576  04BB  0829               	movf	(??_sprintf+1)^(0+128),w
 10577  04BC  1C03               	skipc
 10578  04BD  03BF               	decf	(sprintf@width+1)^(0+128),f
 10579  04BE  02BF               	subwf	(sprintf@width+1)^(0+128),f
 10580  04BF  2CC4               	goto	l3960
 10581  04C0                     l3958:
 10582                           
 10583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10584  04C0  1683               	bsf	3,5	;RP0=1, select bank1
 10585  04C1  1303               	bcf	3,6	;RP1=0, select bank1
 10586  04C2  01BE               	clrf	sprintf@width^(0+128)
 10587  04C3  01BF               	clrf	(sprintf@width+1)^(0+128)
 10588  04C4                     l3960:
 10589                           
 10590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
 10591  04C4  1D3C               	btfss	sprintf@flag^(0+128),2
 10592  04C5  2CC7               	goto	u6341
 10593  04C6  2CC8               	goto	u6340
 10594  04C7                     u6341:
 10595  04C7  2CFD               	goto	l3976
 10596  04C8                     u6340:
 10597  04C8                     l3962:
 10598                           
 10599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
 10600  04C8  3003               	movlw	3
 10601  04C9  053C               	andwf	sprintf@flag^(0+128),w
 10602  04CA  00A8               	movwf	??_sprintf^(0+128)
 10603  04CB  3000               	movlw	0
 10604  04CC  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10605  04CD  00A9               	movwf	(??_sprintf+1)^(0+128)
 10606  04CE  0828               	movf	??_sprintf^(0+128),w
 10607  04CF  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10608  04D0  1903               	btfsc	3,2
 10609  04D1  2CD3               	goto	u6351
 10610  04D2  2CD4               	goto	u6350
 10611  04D3                     u6351:
 10612  04D3  2CDF               	goto	l3968
 10613  04D4                     u6350:
 10614  04D4                     l3964:
 10615                           
 10616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
 10617  04D4  302D               	movlw	45
 10618  04D5  00A8               	movwf	??_sprintf^(0+128)
 10619  04D6  0846               	movf	sprintf@sp^(0+128),w
 10620  04D7  0084               	movwf	4
 10621  04D8  0828               	movf	??_sprintf^(0+128),w
 10622  04D9  1383               	bcf	3,7	;select IRP bank0
 10623  04DA  0080               	movwf	0
 10624  04DB                     l3966:
 10625  04DB  3001               	movlw	1
 10626  04DC  00A8               	movwf	??_sprintf^(0+128)
 10627  04DD  0828               	movf	??_sprintf^(0+128),w
 10628  04DE  07C6               	addwf	sprintf@sp^(0+128),f
 10629  04DF                     l3968:
 10630                           
 10631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
 10632  04DF  083E               	movf	sprintf@width^(0+128),w
 10633  04E0  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10634  04E1  1903               	btfsc	3,2
 10635  04E2  2CE4               	goto	u6361
 10636  04E3  2CE5               	goto	u6360
 10637  04E4                     u6361:
 10638  04E4  2D30               	goto	l3990
 10639  04E5                     u6360:
 10640  04E5                     l3970:
 10641                           
 10642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
 10643  04E5  3030               	movlw	48
 10644  04E6  00A8               	movwf	??_sprintf^(0+128)
 10645  04E7  0846               	movf	sprintf@sp^(0+128),w
 10646  04E8  0084               	movwf	4
 10647  04E9  0828               	movf	??_sprintf^(0+128),w
 10648  04EA  1383               	bcf	3,7	;select IRP bank0
 10649  04EB  0080               	movwf	0
 10650  04EC                     l3972:
 10651  04EC  3001               	movlw	1
 10652  04ED  00A8               	movwf	??_sprintf^(0+128)
 10653  04EE  0828               	movf	??_sprintf^(0+128),w
 10654  04EF  07C6               	addwf	sprintf@sp^(0+128),f
 10655  04F0                     l3974:
 10656  04F0  30FF               	movlw	255
 10657  04F1  07BE               	addwf	sprintf@width^(0+128),f
 10658  04F2  1803               	skipnc
 10659  04F3  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10660  04F4  30FF               	movlw	255
 10661  04F5  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10662  04F6  083E               	movf	sprintf@width^(0+128),w
 10663  04F7  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10664  04F8  1D03               	btfss	3,2
 10665  04F9  2CFB               	goto	u6371
 10666  04FA  2CFC               	goto	u6370
 10667  04FB                     u6371:
 10668  04FB  2CE5               	goto	l3970
 10669  04FC                     u6370:
 10670  04FC  2D30               	goto	l3990
 10671  04FD                     l3976:
 10672                           
 10673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10674  04FD  083E               	movf	sprintf@width^(0+128),w
 10675  04FE  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10676  04FF  1903               	btfsc	3,2
 10677  0500  2D02               	goto	u6381
 10678  0501  2D03               	goto	u6380
 10679  0502                     u6381:
 10680  0502  2D1A               	goto	l3984
 10681  0503                     u6380:
 10682  0503                     l3978:
 10683                           
 10684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10685  0503  3020               	movlw	32
 10686  0504  00A8               	movwf	??_sprintf^(0+128)
 10687  0505  0846               	movf	sprintf@sp^(0+128),w
 10688  0506  0084               	movwf	4
 10689  0507  0828               	movf	??_sprintf^(0+128),w
 10690  0508  1383               	bcf	3,7	;select IRP bank0
 10691  0509  0080               	movwf	0
 10692  050A                     l3980:
 10693  050A  3001               	movlw	1
 10694  050B  00A8               	movwf	??_sprintf^(0+128)
 10695  050C  0828               	movf	??_sprintf^(0+128),w
 10696  050D  07C6               	addwf	sprintf@sp^(0+128),f
 10697  050E                     l3982:
 10698  050E  30FF               	movlw	255
 10699  050F  07BE               	addwf	sprintf@width^(0+128),f
 10700  0510  1803               	skipnc
 10701  0511  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10702  0512  30FF               	movlw	255
 10703  0513  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10704  0514  083E               	movf	sprintf@width^(0+128),w
 10705  0515  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10706  0516  1D03               	btfss	3,2
 10707  0517  2D19               	goto	u6391
 10708  0518  2D1A               	goto	u6390
 10709  0519                     u6391:
 10710  0519  2D03               	goto	l3978
 10711  051A                     u6390:
 10712  051A                     l3984:
 10713                           
 10714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10715  051A  3003               	movlw	3
 10716  051B  053C               	andwf	sprintf@flag^(0+128),w
 10717  051C  00A8               	movwf	??_sprintf^(0+128)
 10718  051D  3000               	movlw	0
 10719  051E  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10720  051F  00A9               	movwf	(??_sprintf+1)^(0+128)
 10721  0520  0828               	movf	??_sprintf^(0+128),w
 10722  0521  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10723  0522  1903               	btfsc	3,2
 10724  0523  2D25               	goto	u6401
 10725  0524  2D26               	goto	u6400
 10726  0525                     u6401:
 10727  0525  2D30               	goto	l3990
 10728  0526                     u6400:
 10729  0526                     l3986:
 10730                           
 10731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10732  0526  302D               	movlw	45
 10733  0527  00A8               	movwf	??_sprintf^(0+128)
 10734  0528  0846               	movf	sprintf@sp^(0+128),w
 10735  0529  0084               	movwf	4
 10736  052A  0828               	movf	??_sprintf^(0+128),w
 10737  052B  1383               	bcf	3,7	;select IRP bank0
 10738  052C  0080               	movwf	0
 10739  052D  160A  118A  2D14   	goto	l3708
 10740  0530                     l3990:
 10741                           
 10742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10743  0530  3001               	movlw	1
 10744  0531  1283               	bcf	3,5	;RP0=0, select bank0
 10745  0532  1303               	bcf	3,6	;RP1=0, select bank0
 10746  0533  07EA               	addwf	sprintf@f,f
 10747  0534  30FF               	movlw	-1
 10748  0535  076A               	addwf	sprintf@f,w
 10749  0536  0084               	movwf	4
 10750  0537  160A  158A  2000  120A  118A  	fcall	stringdir
 10751  053C  1683               	bsf	3,5	;RP0=1, select bank1
 10752  053D  1303               	bcf	3,6	;RP1=0, select bank1
 10753  053E  00A8               	movwf	??_sprintf^(0+128)
 10754  053F  0828               	movf	??_sprintf^(0+128),w
 10755  0540  00C7               	movwf	sprintf@c^(0+128)
 10756  0541  0847               	movf	sprintf@c^(0+128),w
 10757  0542  1D03               	btfss	3,2
 10758  0543  2D45               	goto	u6411
 10759  0544  2D48               	goto	u6410
 10760  0545                     u6411:
 10761  0545  160A  118A  2D07   	goto	l3704
 10762  0548                     u6410:
 10763  0548                     l3992:
 10764                           
 10765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10766  0548  0846               	movf	sprintf@sp^(0+128),w
 10767  0549  0084               	movwf	4
 10768  054A  1383               	bcf	3,7	;select IRP bank0
 10769  054B  0180               	clrf	0
 10770  054C                     l381:
 10771  054C  0008               	return
 10772  054D                     __end_of_sprintf:

Data Sizes:
    Strings     6
    Constant    144
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     79      79
    BANK1            80     43      72
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> f1(BANK1[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 15
		 -> f1(BANK1[15]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    _send_crct->_send_char
    _conv->___xxtofl
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___xxtofl
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   35250
                                             40 BANK1      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _cfg_clk
                             _cfg_io
                          _cfg_usart
                               _conv
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   33271
                                             74 BANK0      5     0      5
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6139
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              3 COMMON     4     4      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                 8     4      4     595
                                              6 BANK0      8     4      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _cfg_clk
   _cfg_io
   _cfg_usart
   _conv
     ___xxtofl
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2B      48       7       90.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A3      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 25 00:10:29 2021

                        _V 00D7                          _i 007B                          pc 0002  
                       _D0 00D5                         _D1 00D3                         l92 1C5A  
                       l95 1C02                         _f1 00D9               ___awdiv@sign 0025  
                       _v0 00CF                         _v1 00CB                         fsr 0004  
      ___wmul@multiplicand 0074        __Umul8_16@word_mpld 0078                        l101 1014  
                      l110 1C28                        l113 1C30                        l107 1C8D  
                      l116 1CB1                        l151 1C48                        l160 1C1C  
                      l145 1D3C                        l154 1C13                        l163 1C26  
                      l148 1C3C                        l308 15F9                        l421 1F1A  
                      l166 1CFC                        l167 1CFF                        l168 1D04  
                      l280 0FFF                        l360 0446                        l352 02DF  
                      l273 14FC                        l345 0299                        l602 1231  
                      l603 11A3                        l613 1224                        l701 1D76  
                      l381 054C                        l293 151E                        l606 11F4  
                      l551 085F                        l712 05B0                        l641 1EB2  
                      l385 1CBE                        l538 1F83                        l571 1DDB  
                      l387 1CD6                        l555 12EF                        l572 1DF7  
                      l580 10B8                        l716 0657                        l556 1254  
                      l820 0C90                        l573 1E0C                        l733 0722  
                      l725 07D4                        l718 062E                        l566 12E2  
                      l814 0C08                        l743 0768                        l559 12B2  
                      l576 1033                        l584 1C3B                        l808 0C9C  
                      l737 0746                        l754 07C8                        l746 07A6  
                      l579 109F                        l755 07D4                        l595 1FEA  
                      l827 07E9                        l691 1DBC                        l852 10DD  
                      l588 1FFF                        l829 07FB                        l854 1174  
                      l758 1E5C                        l598 1FFF                        l872 1C6C  
                      l865 113E                        l866 114A                        l858 1122  
                      _GIE 005F                        _isr 0800                        fsr0 0004  
                      indf 0000               ___awmod@sign 0078               ___flmul@aexp 003A  
             ___flmul@bexp 003B               ___flmul@sign 0035               ___flmul@temp 0040  
             ___flmul@prod 003C               ___fltol@exp1 005F                       l3000 1F03  
                     l3002 1F0C                       l3010 1DD3                       l3004 1F12  
                     l3012 1DEF                       l3020 1015                       l3110 10BC  
                     l3014 1E09                       l3030 1077                       l3022 102B  
                     l2310 07D6                       l3200 1CD7                       l3112 10C1  
                     l3016 1E0B                       l3008 1DBD                       l3032 107B  
                     l3024 1047                       l3040 1C31                       l3104 1E0D  
                     l2320 07F7                       l2312 07D8                       l2400 0856  
                     l3210 1CF8                       l3202 1CDC                       l3130 110B  
                     l3122 10EE                       l3114 10C5                       l3034 10B5  
                     l3026 104F                       l3042 1C39                       l3106 1E11  
                     l3050 1F91                       l2314 07DF                       l2330 1F27  
                     l2402 085B                       l4010 0865                       l3212 1D00  
                     l3204 1CE4                       l3140 1142                       l3132 1119  
                     l3124 10F3                       l3116 10D5                       l3220 1C8E  
                     l3036 10B7                       l3028 1053                       l3044 1C3B  
                     l2500 05BA                       l3060 1FB8                       l2316 07E3  
                     l2340 1F38                       l2332 1F29                       l2324 1F1B  
                     l4020 088C                       l4012 086A                       l3206 1CED  
                     l3150 116C                       l3142 114C                       l3134 1129  
                     l3126 1100                       l3118 10E5                       l3222 1CA9  
                     l2510 05CE                       l2502 05BE                       l3070 1FC6  
                     l3062 1FBA                       l3054 1F9A                       l2318 07F2  
                     l2350 1F50                       l2342 1F3E                       l2334 1F2D  
                     l2326 1F1E                       l4102 1536                       l4030 08B5  
                     l4022 0895                       l4014 086F                       l3208 1CF2  
                     l3216 1C14                       l3160 1C51                       l3144 1162  
                     l3136 1134                       l3128 1107                       l2600 074A  
                     l2520 05E2                       l2512 05D2                       l2504 05C2  
                     l3080 1FEF                       l3064 1FBE                       l3072 1FD8  
                     l3056 1FAF                       l3048 1F84                       l2440 1D51  
                     l2432 1D3D                       l2352 1F61                       l2344 1F41  
                     l2360 1F75                       l2336 1F32                       l2328 1F22  
                     l4104 1611                       l4040 092A                       l4032 08C3  
                     l4024 089E                       l4016 087E                       l4008 0860  
                     l3218 1C19                       l3154 1C49                       l3170 100F  
                     l3162 1000                       l3146 1167                       l3138 1138  
                     l2602 074D                       l2610 075A                       l2530 05F6  
                     l2522 05E6                       l2514 05D6                       l2506 05C6  
                     l3082 1FF4                       l3058 1FB0                       l2442 1D55  
                     l2434 1D43                       l2450 1D72                       l2362 1F7A  
                     l2354 1F67                       l2346 1F48                       l2338 1F36  
                     l2370 0808                       l4034 08C8                       l4026 08A3  
                     l4018 0883                       l3180 1D05                       l3156 1C4D  
                     l3172 1010                       l3164 1007                       l3148 116B  
                     l2620 076D                       l2612 075B                       l2604 074F  
                     l2540 063B                       l2524 05EA                       l2516 05DA  
                     l2508 05CA                       l2532 05FA                       l2460 055E  
                     l2700 09FF                       l2444 1D5F                       l2436 1D46  
                     l2364 1F7F                       l2356 1F68                       l2348 1F4C  
                     l2380 081C                       l2372 080C                       l4036 0900  
                     l4028 08AC                       l3190 1D3B                       l3182 1D09  
                     l3158 1C50                       l3174 1011                       l3166 100B  
                     l2630 07AB                       l2622 0772                       l2614 075F  
                     l2606 0754                       l2542 063D                       l2550 064F  
                     l2534 05FB                       l2526 05EE                       l2518 05DE  
                     l2470 0572                       l2462 055F                       l2454 054D  
                     l3078 1FDF                       l2710 0A7C                       l2702 0A2B  
                     l2446 1D65                       l2438 1D4D                       l2358 1F6F  
                     l2390 0834                       l2382 0822                       l2374 0811  
                     l4038 0924                       l3184 1D0C                       l3192 1C0B  
                     l3176 1BFB                       l3168 100C                       l2640 07C2  
                     l2632 07B0                       l2624 0780                       l2616 0765  
                     l2608 0756                       l2560 0680                       l2552 065B  
                     l2544 0641                       l2536 0612                       l2528 05F2  
                     l2480 0588                       l2464 0564                       l2472 0574  
                     l2456 0554                       l2720 0AFC                       l2712 0A99  
                     l2704 0A47                       l2448 1D6C                       l2392 083E  
                     l2384 0825                       l2376 0813                       l2368 0807  
                     l3186 1D39                       l3194 1C10                       l3178 1C01  
                     l2642 07C4                       l2634 07B8                       l2626 0784  
                     l2570 0697                       l2562 0684                       l2554 0660  
                     l2546 0642                       l2538 0632                       l2490 059D  
                     l2482 058E                       l2474 057C                       l2466 0569  
                     l2458 055A                       l2730 0BB4                       l2722 0B29  
                     l2714 0AA9                       l2706 0A63                       l2650 0943  
                     l2394 0844                       l2386 082C                       l2378 0817  
                     l3188 1D3A                       l3196 1C1D                       l3532 1C6E  
                     l2644 07CF                       l2636 07BD                       l2628 07A2  
                     l2580 06FA                       l2572 0698                       l2564 0688  
                     l2548 064B                       l2492 05A5                       l2484 0592  
                     l2476 0581                       l2468 0571                       l2740 0BD9  
                     l2732 0BBD                       l2724 0B39                       l2716 0AC6  
                     l2708 0A6C                       l2660 0958                       l2652 0949  
                     l2396 084B                       l2388 0830                       l2820 0CAD  
                     l3198 1C22                       l3534 1C71                       l2646 07D3  
                     l2638 07BE                       l2590 072F                       l2582 0700  
                     l2574 06A1                       l2566 0691                       l2558 0669  
                     l2494 05A6                       l2486 0593                       l2478 0587  
                     l2750 0BF1                       l2742 0BE2                       l2734 0BCB  
                     l2726 0B66                       l2718 0ADF                       l2670 0975  
                     l2662 0960                       l2654 094D                       l2398 0851  
                     l2814 0CA0                       l3710 1519                       l3702 1500  
                     l3536 1C7C                       l2584 0705                       l2568 0693  
                     l2576 06A6                       l2488 0598                       l2496 05A8  
                     l2920 123F                       l2912 1219                       l2904 1200  
                     l2760 0C20                       l2752 0C05                       l2736 0BD4  
                     l2744 0BE8                       l2728 0B8C                       l2680 098C  
                     l2672 0979                       l2664 0962                       l2656 094E  
                     l2648 093C                       l3640 1D7B                       l2832 0E26  
                     l2816 0CA4                       l3800 17A3                       l3720 154D  
                     l3712 151F                       l3704 1507                       l3538 1C82  
                     l2594 0738                       l2578 06BC                       l2586 0714  
                     l2498 05B6                       l2930 1255                       l2914 1229  
                     l2906 1212                       l2770 0C5B                       l2762 0C24  
                     l2746 0BEC                       l2738 0BD8                       l2682 098E  
                     l2674 097A                       l2666 096A                       l2658 0953  
                     l3650 1D93                       l3642 1D81                       l2850 0FD3  
                     l2826 0D97                       l2818 0CA6                       l3810 006E  
                     l3802 17EA                       l3722 1551                       l3730 1593  
                     l3706 150D                       l2596 0741                       l2588 072A  
                     l2940 1282                       l2932 125D                       l2924 1248  
                     l2780 0C88                       l2772 0C6A                       l2764 0C3D  
                     l2756 0C0D                       l2748 0BED                       l2692 09A9  
                     l2684 0996                       l2676 097F                       l2668 096F  
                     l3652 1DA4                       l3644 1D84                       l3660 1DB8  
                     l2860 1C69                       l2844 0F44                       l2828 0D9E  
                     l2836 0E53                       l3900 02E8                       l3812 0089  
                     l3804 001D                       l3740 15C4                       l3732 15A1  
                     l3724 1566                       l3716 1525                       l3708 1514  
                     l2790 1C2E                       l2598 0745                       l2950 12B6  
                     l2942 1294                       l2934 126E                       l2918 1232  
                     l2782 0C89                       l2774 0C74                       l2758 0C12  
                     l2766 0C43                       l2694 09B9                       l2686 099B  
                     l2678 0984                       l3654 1DAA                       l3646 1D8B  
                     l3638 1D77                       l2862 1C6B                       l2854 1C5C  
                     l2846 0F4B                       l2838 0E5A                       l3910 0371  
                     l3902 02ED                       l3830 0146                       l3822 00D7  
                     l3814 0092                       l3806 0038                       l3742 15DB  
                     l3734 15A4                       l3726 157D                       l3718 153B  
                     l2792 1C3C                       l2944 12A2                       l2936 1270  
                     l2880 11AA                       l2872 1191                       l2784 0C94  
                     l2776 0C76                       l2768 0C50                       l2696 09C6  
                     l2688 09A0                       l3656 1DAB                       l3648 1D8F  
                     l3672 1408                       l3664 12F3                       l2856 1C5D  
                     l3920 041A                       l3912 03AC                       l3904 02F4  
                     l3840 017F                       l3816 009A                       l3808 005F  
                     l3824 00E0                       l3760 162F                       l3752 15FB  
                     l3744 15E1                       l3736 15AA                       l3728 1583  
                     l2794 1C42                       l3690 1E7B                       l3682 1E5D  
                     l2970 1CB2                       l2946 12A3                       l2938 1279  
                     l2890 11DB                       l2882 11B9                       l2866 1175  
                     l2778 0C84                       l2698 09E3                       l3658 1DB2  
                     l3674 140E                       l3666 12F9                       l2858 1C63  
                     l3930 0438                       l3922 0421                       l3914 03CB  
                     l3906 02F8                       l3850 01BC                       l3842 0189  
                     l3826 0115                       l3818 00B8                       l3770 1677  
                     l3762 163D                       l3754 1619                       l3738 15AF  
                     l3746 15F3                       l2788 1C28                       l3692 1E8D  
                     l3684 1E65                       l2980 1CD2                       l2972 1CB4  
                     l2964 12D7                       l2956 12BE                       l2948 12AC  
                     l2892 11E5                       l2884 11BB                       l2868 1188  
                     l3940 0470                       l3932 0440                       l3924 0425  
                     l3916 03D7                       l3908 0316                       l3860 01E1  
                     l3852 01C0                       l3844 01A4                       l3836 0148  
                     l3828 0144                       l3780 16B8                       l3772 167B  
                     l3764 1641                       l3756 1627                       l3748 15F7  
                     l2990 1ED5                       l3694 1E9B                       l3686 1E6A  
                     l2974 1CB8                       l2966 12E7                       l2958 12D0  
                     l2894 11E6                       l2886 11C4                       l2878 11A4  
                     l3678 14B9                       l3950 049C                       l3942 0478  
                     l3934 0451                       l3926 042B                       l3918 0412  
                     l3870 0206                       l3862 01E5                       l3854 01CC  
                     l3846 01AA                       l3790 174F                       l3782 16DB  
                     l3774 1694                       l3766 165A                       l3758 162B  
                     l2992 1ED9                       l2984 1EB3                       l3696 1EA4  
                     l3688 1E77                       l2976 1CC5                       l2896 11EE  
                     l2888 11CD                       l3960 04C4                       l3952 04A5  
                     l3944 0484                       l3936 0458                       l3880 0233  
                     l3856 01D3                       l3864 01EB                       l3872 020C  
                     l3848 01B6                       l3792 1768                       l3784 16DF  
                     l3776 169F                       l3768 1673                       l3928 0432  
                     l2994 1EE2                       l2986 1EC5                       l3698 1EAA  
                     l2978 1CCC                       l2898 11F8                       l3970 04E5  
                     l3962 04C8                       l3954 04A9                       l3946 048A  
                     l3938 0467                       l3890 02B0                       l3882 026E  
                     l3874 0219                       l3866 01F9                       l3858 01D8  
                     l3794 1771                       l3786 16E5                       l3778 16A5  
                     l2996 1EF4                       l2988 1EC8                       l3980 050A  
                     l3972 04EC                       l3964 04D4                       l3956 04B4  
                     l3948 048E                       l3892 02B6                       l3884 028D  
                     l3876 0227                       l3868 0202                       l3796 178C  
                     l3788 1704                       l2998 1F02                       l3982 050E  
                     l3974 04F0                       l3966 04DB                       l3958 04C0  
                     l3894 02C3                       l3886 02A3                       l3878 022E  
                     l3798 1794                       l3990 0530                       l3984 051A  
                     l3968 04DF                       l3976 04FD                       l3896 02D2  
                     l3888 02AC                       l3992 0548                       l3986 0526  
                     l3978 0503                       l3898 02D9                       ?_isr 0070  
                     STR_1 1896                       u3010 0834                       u3011 0833  
                     u3020 083E                       u3021 083D                       u3005 0826  
                     u3200 0564                       u4000 0C6A                       u3040 0851  
                     u3201 0563                       u4001 0C69                       u3041 0850  
                     u3025 083A                       u3210 0569                       u4010 0C88  
                     u3130 1D43                       u3050 0856                       u3211 0568  
                     u4011 0C87                       u3131 1D42                       u3051 0855  
                     u3035 0845                       u4020 1C2E                       u3300 061E  
                     u3220 0587                       u4021 1C2D                       u3221 0586  
                     u4005 0C66                       u4030 1C42                       u3310 0632  
                     u3230 0592                       u3150 1D55                       u4031 1C41  
                     u3311 0631                       u3231 0591                       u3151 1D54  
                     u4040 1C48                       u5000 1106                       u3400 0697  
                     u3320 0641                       u3240 0598                       u3160 1D5F  
                     u4041 1C47                       u5001 1105                       u3401 0696  
                     u3321 0640                       u3241 0597                       u3161 1D5E  
                     u3145 1D47                       u3250 059D                       u4130 0CA4  
                     u3251 059C                       u4131 0CA3                       u5100 1D1C  
                     u5020 1128                       u3500 074A                       u3420 06BC  
                     u3340 0657                       u3260 05B6                       u3180 1D72  
                     u4300 1C63                       u4220 0E5A                       u4140 0CAD  
                     u5021 1127                       u3501 0749                       u3421 06BB  
                     u3341 0656                       u3261 05B5                       u3181 1D71  
                     u3165 1D5B                       u4301 1C62                       u4221 0E59  
                     u4205 0DED                       u4141 0CAC                       u5110 1CF8  
                     u3510 0754                       u3350 065B                       u3270 05BA  
                     u3190 055E                       u4310 1C69                       u5111 1CF7  
                     u5015 111A                       u3511 0753                       u3431 06D3  
                     u3423 06B8                       u3415 069A                       u3351 065A  
                     u3335 0644                       u3271 05B9                       u3191 055D  
                     u3175 1D66                       u4311 1C68                       u4215 0E29  
                     u5040 1138                       u3600 07AB                       u3520 075A  
                     u3440 06E7                       u3432 06D4                       u3360 0660  
                     u3280 0612                       u4320 1188                       u6000 17A3  
                     u5105 1D17                       u5041 1137                       u3601 07AA  
                     u3521 0759                       u3441 06E8                       u3433 06D9  
                     u3361 065F                       u3281 0611                       u4321 1187  
                     u6001 17A2                       u5050 113E                       u3610 07B0  
                     u3530 075F                       u3450 0705                       u3442 06ED  
                     u3434 06DA                       u3290 061D                       u4410 1211  
                     u4330 11A2                       u6010 001D                       u5051 113D  
                     u5035 112D                       u3611 07AF                       u3531 075E  
                     u3451 0704                       u3443 06EE                       u3435 06DF  
                     u3371 0672                       u3291 061B                       u4411 1210  
                     u4331 11A1                       u4235 0E7C                       u4155 0CCF  
                     u6011 17FA                       u5060 1142                       u3620 07BD  
                     u3540 0765                       u3460 072A                       u3436 06E0  
                     u3380 0684                       u3372 0679                       u4500 12B2  
                     u4420 1218                       u3700 0984                       u4260 0F4B  
                     u4180 0D9E                       u6100 01B6                       u6020 0038  
                     u5061 1141                       u3621 07BC                       u3541 0764  
                     u3461 0729                       u3381 0683                       u3373 0680  
                     u3285 060E                       u4501 12B1                       u4421 1217  
                     u4405 1201                       u3701 0983                       u4261 0F4A  
                     u4245 0EB8                       u4181 0D9D                       u4165 0D0B  
                     u6101 01B5                       u6021 0037                       u6005 179F  
                     u5070 1157                       u3630 07C2                       u3550 076C  
                     u3470 072F                       u3390 0688                       u4510 12B6  
                     u4350 11DB                       u3710 099B                       u2910 1F50  
                     u6110 01C0                       u6030 005F                       u3631 07C1  
                     u3551 076B                       u3471 072E                       u3391 0687  
                     u4511 12B5                       u4351 11DA                       u3711 099A  
                     u2911 1F4F                       u4255 0F03                       u4175 0D56  
                     u6111 01BF                       u6031 005E                       u6015 17F5  
                     u5080 1167                       u3640 07D3                       u3560 0772  
                     u4520 12BD                       u4440 1229                       u2840 07E3  
                     u3720 09A0                       u6200 02ED                       u6120 01CC  
                     u6040 006E                       u5081 1166                       u3641 07D2  
                     u3561 0771                       u4521 12BC                       u4441 1228  
                     u4345 11C6                       u2841 07E2                       u3721 099F  
                     u2905 1F42                       u6201 02EC                       u6121 01CB  
                     u6041 006D                       u5090 116B                       u3570 0784  
                     u3490 0745                       u4610 1CD2                       u4450 123F  
                     u4370 11F4                       u3650 094D                       u2930 1F61  
                     u6130 01F8                       u6050 0089                       u5091 116A  
                     u5075 1152                       u3571 0783                       u3491 0744  
                     u4611 1CD1                       u4451 123E                       u4435 121B  
                     u4371 11F3                       u4355 11D7                       u3811 0AEE  
                     u3731 09F1                       u3651 094C                       u2931 1F60  
                     u4275 0F5E                       u4195 0DB1                       u6131 01F7  
                     u6051 0088                       _PEIE 005E                       u4620 1EC5  
                     u4700 1DEF                       u3580 0793                       u4540 12CF  
                     u4460 1253                       u4380 11F8                       u2860 07F7  
                     u3900 0BD8                       u3812 0AF5                       u3732 09F8  
                     u3660 0953                       u6300 0484                       u6140 0219  
                     u4621 1EC4                       u4701 1DEE                       u3485 073A  
                     u4605 1CC6                       u4541 12CE                       u4461 1252  
                     u4381 11F7                       u4365 11E7                       u2861 07F6  
                     u3901 0BD7                       u3821 0B1B                       u3813 0AFC  
                     u3805 0AC8                       u3741 0A0D                       u3733 09FF  
                     u3661 0952                       u2925 1F51                       u4285 0F9A  
                     u6301 0483                       u6141 0218                       u6045 006A  
                     u4710 1E09                       u3590 07A2                       u4550 12D6  
                     u4390 11FF                       u3822 0B22                       u3742 0A14  
                     u3670 0958                       u2950 1F75                       u2870 1F22  
                     u6310 048E                       u6230 0419                       u6150 0227  
                     u6070 017E                       u4711 1E08                       u3591 07A1  
                     u4551 12D5                       u4535 12BF                       u4391 11FE  
                     u2855 07EA                       u3831 0B48                       u3823 0B29  
                     u3751 0A39                       u3743 0A1B                       u3671 0957  
                     u2951 1F74                       u2935 1F5D                       u2871 1F21  
                     u4295 0FD6                       u6311 048D                       u6231 0418  
                     u6215 0374                       u6151 0226                       u6135 01F4  
                     u6071 017D                       u4640 1ED9                       u4720 102B  
                     u4800 1F91                       u4480 1294                       u3920 0BEC  
                     u3840 0B72                       u3832 0B4F                       u3752 0A40  
                     u3680 0979                       u2960 1F7A                       u2880 1F2D  
                     u6400 0526                       u6320 049C                       u6240 0431  
                     u6080 0189                       u4641 1ED8                       u4721 102A  
                     u3585 078E                       u4801 1F90                       u4481 1293  
                     u3921 0BEB                       u3833 0B56                       u3761 0A55  
                     u3753 0A47                       u3681 0978                       u2961 1F79  
                     u2945 1F69                       u2881 1F2C                       u6401 0525  
                     u6321 049B                       u6241 0430                       u6225 03DA  
                     u6145 0215                       u6081 0188                       u6065 014B  
                     u4730 1047                       u4810 1FA8                       u4570 12E7  
                     u3930 0BF1                       u3762 0A5C                       u3690 097F  
                     u2890 1F3E                       u2970 080C                       u6410 0548  
                     u6330 04B4                       u6250 0438                       u6170 02A2  
                     u6090 01A4                       u4635 1ECA                       u4715 1E05  
                     u4731 1046                       u4571 12E6                       u4475 127B  
                     u3931 0BF0                       u3915 0BDB                       u3851 0B7E  
                     u3763 0A63                       u3691 097E                       u2891 1F3D  
                     u2971 080B                       u6411 0545                       u6331 04B3  
                     u6251 0437                       u6171 02A1                       u6091 01A3  
                     u6075 017A                       u4660 1EF4                       u4740 1053  
                     u4820 1FBE                       u4580 1CB8                       u3940 0C05  
                     u3860 0B9A                       u3852 0B85                       u2980 0817  
                     u6340 04C8                       u6260 0440                       u6180 02C3  
                     u4661 1EF3                       u4741 1052                       u4821 1FBD  
                     u4581 1CB7                       u4565 12D9                       u4485 1290  
                     u3941 0C04                       u3853 0B8C                       u3845 0B6D  
                     u3781 0A8B                       u2981 0816                       u6341 04C7  
                     u6325 0498                       u6261 043F                       u6181 02C2  
                     u6165 0236                       u4830 1FC5                       u3950 0C0C  
                     u3782 0A92                       u5710 1DA4                       u2990 0822  
                     u6350 04D4                       u6270 0451                       u6190 02D2  
                     u4655 1EDB                       u4751 1062                       u4831 1FC4  
                     u4815 1FA3                       u4495 12A5                       u3951 0C0B  
                     u3871 0BA6                       u3791 0AB8                       u3783 0A99  
                     u3775 0A65                       u5711 1DA3                       u2991 0821  
                     u6351 04D3                       u6335 04B0                       u6271 0450  
                     u6191 02D1                       u4680 1F12                       u4760 107B  
                     u4752 1063                       u3960 0C12                       u3872 0BAD  
                     u3792 0ABF                       u6360 04E5                       u6280 0467  
                     i1l81 0800                       u4681 1F11                       u4665 1EF0  
                     u4761 107A                       u4753 1068                       u3961 0C11  
                     u3873 0BB4                       u3865 0B95                       u3793 0AC6  
                     u5705 1D94                       u6361 04E4                       u6281 0466  
                     u6185 02BF                       u4690 1DD3                       u4754 1069  
                     u4850 1FD7                       u3970 0C24                       u5730 1DB8  
                     u6370 04FC                       u6290 0478                       u4675 1F04  
                     u4691 1DD2                       u4771 108A                       u4755 106E  
                     u4851 1FD6                       u4595 1CBF                       u3971 0C23  
                     u5731 1DB7                       u5715 1DA0                       u6371 04FB  
                     u6291 0477                       u6275 044D                       u6195 02CE  
                     u6427 08D0                       u5660 1C8D                       u4780 10B5  
                     u4772 108B                       u4756 106F                       u4860 1FDE  
                     u5820 1E65                       u3980 0C33                       u5740 12F9  
                     u6380 0503                       u5900 1593                       u5661 1C8C  
                     u4781 10B4                       u4773 1090                       u4861 1FDD  
                     u4845 1FC7                       u5821 1E64                       u3885 0BB6  
                     u5725 1DAC                       u5805 1478                       u5741 12F8  
                     u6381 0502                       u6285 0463                       u5901 1592  
                     u6437 0932                       u4774 1091                       u4790 1C39  
                     u3990 0C50                       u5670 1D81                       u6390 051A  
                     u5910 15A1                       u4775 1096                       u4791 1C38  
                     u3991 0C4F                       u3895 0BCD                       u5671 1D80  
                     u5815 14C4                       u6391 0519                       u5911 15A0  
                     u4960 10C1                       u4776 1097                       u4880 1FEF  
                     u5840 1E7B                       u5920 15F2                       u4961 10C0  
                     u4785 10B1                       u4881 1FEE                       u5841 1E7A  
                     u3985 0C2E                       u5921 15F1                       u4970 10C5  
                     u4890 1FF4                       u5850 1E8D                       u5690 1D93  
                     u5930 1627                       u4971 10C4                       u4891 1FF3  
                     u4875 1FE1                       u5851 1E8C                       u5835 1E6C  
                     u3995 0C4C                       u5691 1D92                       u5755 1316  
                     u5931 1624                       u4980 10E5                       u5780 140E  
                     u5940 162B                       u4981 10E4                       u5685 1D85  
                     u5781 140D                       u5765 1372                       u5941 162A  
                     u5870 1EAA                       u5950 165A                       u5871 1EA9  
                     u5855 1E89                       u5775 13C7                       u5951 1659  
                     u5960 1694                       u5880 150D                       u5865 1E9C  
                     u5961 1693                       u5881 150C                       u5970 16DF  
                     u5890 154D                       u4995 10F8                       u5795 142B  
                     u5971 16DE                       u5891 154C                       u5980 1768  
                     u5981 1767                       u5990 178C                       u5991 178B  
                     _TXIF 0064                       _conv 1C8E                       _main 0860  
                     btemp 007E                       start 000C               _sprintf$1131 00AD  
                    ??_isr 0070           ?_I2C_Master_Init 0025           ?_I2C_Master_Read 0072  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070              ___fltol@sign1 005E  
                    ?_conv 0026            __end_of___fladd 07D5                      ?_main 0070  
          __end_of___awdiv 1F84            __end_of___flneg 1C3C            __end_of___awmod 0860  
          __end_of___flmul 0C9D            __end_of___flsub 1E5D            __end_of___fltol 2000  
                    _ANSEL 0188            __end_of___lldiv 1F1B            ___awdiv@divisor 0020  
          __end_of___llmod 1EB3            __end_of___lwdiv 1DBD            __end_of___lwmod 1D77  
          ___awdiv@counter 0024                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008            __end_of_cfg_clk 1C03  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063                      _TXREG 0019            __end_of_dpowers 1896  
                    _scale 0C9D            __end_of_isdigit 1C6D                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 054D  
          __initialization 000F               __end_of_conv 1CB2               __end_of_main 093C  
                   ??_conv 007A                     ??_main 00C8       __size_of__tdiv_to_l_ 00BD  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072         ??_I2C_Master_Start 0072  
       ??_I2C_Master_Write 0074           ___llmod@dividend 0076                     ?_scale 0042  
         ___awdiv@dividend 0022                     _ANSELH 0189                     _SPBRGH 009A  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 1175  
         __end_of__powers_ 183A                     ___flge 1015                     ___fleq 1DBD  
                ??___fladd 005E                     ___wmul 1CB2                  ??___awdiv 0079  
                   _cfg_io 1C49                  ??___flneg 0076                  ??___awmod 0076  
                ??___flmul 0030                  ??___flsub 007B                  ??___fltol 0059  
                ??___lldiv 007A                  ??___llmod 007A                  ??___lwdiv 0078  
                ??___lwmod 0076                  ??_cfg_clk 0072                     _fround 12F0  
         ___awdiv@quotient 0026            ___awmod@divisor 0072            ___awmod@counter 0077  
                   conv@aa 0026                  ??_isdigit 0072         __size_of__Umul8_16 0027  
                   saved_w 007E                  ??_sprintf 00A8                 ___flge@ff1 0072  
               ___flge@ff2 0076               ___xxtofl@arg 0022               ___xxtofl@exp 0021  
             ___xxtofl@val 0072                 ___fleq@ff1 0072                 ___fleq@ff2 0076  
  __end_of__initialization 0019                 ___flneg@f1 0072                 ___fltol@f1 0055  
           __pcstackCOMMON 0070         __size_of_cfg_usart 0015              __end_of_scale 1000  
               __div_to_l_ 1232            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0046            __div_to_l_@quot 0020               sprintf@width 00BE  
               __pbssBANK1 00CB              __div_to_l_@f1 0072              __div_to_l_@f2 0076  
        __end_of__Umul8_16 07FC                 __pmaintext 0860                    ?___flge 0072  
                  ?___fleq 0072                    ?___wmul 0072                    ?_cfg_io 0070  
               __pintentry 0004         __size_of_send_char 000A         __size_of_send_crct 0021  
                  ?_fround 0042                  ?___xxtofl 0072                    _SSPCON2 0091  
                  _SSPSTAT 0094                send_crct@st 0076                 __stringtab 1800  
        __end_of_cfg_usart 1015          __end_of__npowers_ 186E                 _scale$1130 0050  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 054D  
                  ___awdiv 1F1B                    ___flneg 1C31                    ___awmod 0807  
                  ___flmul 093C                    ___flsub 1E0D                    ___fltol 1F84  
                  ___lldiv 1EB3            __size_of___wmul 0025                    ___llmod 1E5D  
          __size_of_cfg_io 0012                    ___lwdiv 1D77                    ___lwmod 1D3D  
                  _cfg_clk 1BFB            __size_of_fround 020D                    __ptext1 14FD  
                  __ptext2 0C9D                    __ptext3 0807                    __ptext4 1F1B  
                  __ptext5 1C5B                    __ptext6 12F0                    __ptext7 1D3D  
                  __ptext8 1D77                    __ptext9 093C                ?__div_to_l_ 0072  
                  _dpowers 186E                    _isdigit 1C5B               __size_of_isr 0007  
               ??___xxtofl 0076           ___awmod@dividend 0074   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 14FD                    clrloop0 1C04       end_of_initialization 0019  
        __end_of_send_char 1C31          __end_of_send_crct 1C8E  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072            ___lldiv@counter 0024  
                _RCSTAbits 0018           I2C_Master_Init@c 0025           I2C_Master_Read@a 0072  
                  psplit$0 B0030             __tdiv_to_l_@f1 0072             __tdiv_to_l_@f2 0076  
            send_char@dato 0072              ??__tdiv_to_l_ 0020                ___fladd@grs 0069  
            ___xxtofl@sign 0020                  _TRISAbits 0085                  _TRISCbits 0087  
               conv@result 002A                ___flmul@grs 0036                  _TXSTAbits 0098  
      __size_of__div_to_l_ 00BE             __end_of___flge 10B9             __end_of___fleq 1E0D  
           __end_of___wmul 1CD7             __end_of_cfg_io 1C5B          pnum$text1_split_1 0030  
              _BAUDCTLbits 0187             __end_of_fround 14FD        start_initialization 000F  
      __end_of__tdiv_to_l_ 1232                __end_of_isr 0807          ??_I2C_Master_Init 0029  
        ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
          ___llmod@divisor 0072            ___llmod@counter 0020                   ??___flge 0020  
                 ??___fleq 0020                   ??___wmul 0076                   ??_cfg_io 0072  
                __Umul8_16 07D5                   ??_fround 0046              sprintf@tmpval 00B6  
                ___fladd@a 005A                  ___fladd@b 0056                 fround@prec 0055  
                ___flmul@a 002C                  ___flmul@b 0028                __pbssCOMMON 007B  
                ___flsub@a 00A0                  ___flsub@b 00A4                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00BC  
              sprintf@flag 00BC                sprintf@eexp 00BA                sprintf@fval 00C0  
              sprintf@prec 00C4                  _cfg_usart 1000           _I2C_Master_Start 1C0B  
         _I2C_Master_Write 1C1D           ___lwdiv@dividend 0022                   ?___fladd 0056  
                 ?___awdiv 0020                   ?___flneg 0072                   ?___awmod 0072  
                 ?___flmul 0028                   ?___flsub 00A0                   ?___fltol 0055  
                 ?___lldiv 0072                   ?___llmod 0072                  __npowers_ 183A  
               ?__Umul8_16 0072                   ?___lwdiv 0020                   ?___lwmod 0072  
                 ?_cfg_clk 0070                  __pstrings 1800                __tdiv_to_l_ 1175  
               send_crct@i 0074               ??__div_to_l_ 007A                   ?_isdigit 0070  
         ___lwdiv@quotient 0025                   ?_sprintf 006A             __size_of_scale 0363  
        interrupt_function 0004             ___wmul@product 0076                  clear_ram0 1C03  
               ?_cfg_usart 0070                   _PIE1bits 008C                  _send_char 1C27  
                _send_crct 1C6D         __end_of__div_to_l_ 12F0                __stringbase 1805  
        ___wmul@multiplier 0072        I2C_Master_Read@temp 0076                 ?_send_char 0070  
               ?_send_crct 0070                ??__Umul8_16 0074           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003A           __size_of_cfg_clk 0008                _fround$1128 0051  
              _fround$1129 004D         __end_of__stringtab 1806                _isdigit$948 0072  
               sprintf@val 00B2            _I2C_Master_Init 1D05            _I2C_Master_Read 1CD7  
                 ___xxtofl 10B9            _I2C_Master_Wait 1C3C            _I2C_Master_Stop 1C14  
         __size_of_isdigit 0012            ___lwdiv@divisor 0020            ___lwdiv@counter 0024  
                 __ptext10 07D5                   __ptext11 1175                   __ptext20 1DBD  
                 __ptext12 1232                   __ptext21 1C6D                   __ptext13 1CB2  
                 __ptext30 1C0B                   __ptext22 1C27                   __ptext14 1E5D  
                 __ptext31 1CD7                   __ptext23 1C8E                   __ptext15 1F84  
                 __ptext32 1C3C                   __ptext24 10B9                   __ptext16 1E0D  
                 __ptext33 1D05                   __ptext25 1000                   __ptext17 054D  
                 __ptext34 1EB3                   __ptext26 1C49                   __ptext18 1C31  
                 __ptext35 0800                   __ptext27 1BFB                   __ptext19 1015  
                 __ptext28 1C1D                   __ptext29 1C14                   __powers_ 1806  
         __size_of_sprintf F050              __size_of_conv 0024              __size_of_main 00DC  
                pnum$text1 000B                ??_cfg_usart 0072   __end_of_I2C_Master_Start 1C14  
 __end_of_I2C_Master_Write 1C27                 _INTCONbits 000B                   isdigit@c 0073  
                 scale@scl 0054                   intlevel1 0000                  sprintf@ap 00B1  
         __tdiv_to_l_@exp1 0029           __tdiv_to_l_@cntr 0028                  sprintf@sp 00C6  
         __tdiv_to_l_@quot 0024           ___lwmod@dividend 0074           ___lldiv@dividend 0076  
              ??_send_char 0072                ??_send_crct 0073                  stringcode 1800  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 1D3D    __end_of_I2C_Master_Read 1D05  
  __end_of_I2C_Master_Wait 1C49    __end_of_I2C_Master_Stop 1C1D               ?__tdiv_to_l_ 0072  
   __Umul8_16@multiplicand 0072                   sprintf@c 00C7                   sprintf@f 006A  
         ___lldiv@quotient 0020          I2C_Master_Write@d 0072            ___lwmod@divisor 0072  
          ___lwmod@counter 0077                   stringdir 1800                   stringtab 1800  
              _SSPCON2bits 0091              ___fladd@signs 0066               ___fladd@aexp 0067  
             ___fladd@bexp 0068       __Umul8_16@multiplier 007A          __Umul8_16@product 0076  

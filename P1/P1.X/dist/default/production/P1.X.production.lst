

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 24 21:26:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320                           
   321                           	psect	strings
   322  1800                     __pstrings:
   323  1800                     stringtab:
   324  1800                     __stringtab:
   325  1800                     stringcode:	
   326                           ;	String table - string pointers are 1 byte each
   327                           
   328  1800                     stringdir:
   329  1800  3018               	movlw	high stringdir
   330  1801  008A               	movwf	10
   331  1802  0804               	movf	4,w
   332  1803  0A84               	incf	4,f
   333  1804  0782               	addwf	2,f
   334  1805                     __stringbase:
   335  1805  3400               	retlw	0
   336  1806                     __end_of__stringtab:
   337  1806                     __powers_:
   338  1806  3400               	retlw	0
   339  1807  3400               	retlw	0
   340  1808  3480               	retlw	128
   341  1809  343F               	retlw	63
   342  180A  3400               	retlw	0
   343  180B  3400               	retlw	0
   344  180C  3420               	retlw	32
   345  180D  3441               	retlw	65
   346  180E  3400               	retlw	0
   347  180F  3400               	retlw	0
   348  1810  34C8               	retlw	200
   349  1811  3442               	retlw	66
   350  1812  3400               	retlw	0
   351  1813  3400               	retlw	0
   352  1814  347A               	retlw	122
   353  1815  3444               	retlw	68
   354  1816  3400               	retlw	0
   355  1817  3440               	retlw	64
   356  1818  341C               	retlw	28
   357  1819  3446               	retlw	70
   358  181A  3400               	retlw	0
   359  181B  3450               	retlw	80
   360  181C  34C3               	retlw	195
   361  181D  3447               	retlw	71
   362  181E  3400               	retlw	0
   363  181F  3424               	retlw	36
   364  1820  3474               	retlw	116
   365  1821  3449               	retlw	73
   366  1822  3480               	retlw	128
   367  1823  3496               	retlw	150
   368  1824  3418               	retlw	24
   369  1825  344B               	retlw	75
   370  1826  3420               	retlw	32
   371  1827  34BC               	retlw	188
   372  1828  34BE               	retlw	190
   373  1829  344C               	retlw	76
   374  182A  3428               	retlw	40
   375  182B  346B               	retlw	107
   376  182C  346E               	retlw	110
   377  182D  344E               	retlw	78
   378  182E  34F9               	retlw	249
   379  182F  3402               	retlw	2
   380  1830  3415               	retlw	21
   381  1831  3450               	retlw	80
   382  1832  34EC               	retlw	236
   383  1833  3478               	retlw	120
   384  1834  34AD               	retlw	173
   385  1835  3460               	retlw	96
   386  1836  34CA               	retlw	202
   387  1837  34F2               	retlw	242
   388  1838  3449               	retlw	73
   389  1839  3471               	retlw	113
   390  183A                     __end_of__powers_:
   391  183A                     __npowers_:
   392  183A  3400               	retlw	0
   393  183B  3400               	retlw	0
   394  183C  3480               	retlw	128
   395  183D  343F               	retlw	63
   396  183E  34CD               	retlw	205
   397  183F  34CC               	retlw	204
   398  1840  34CC               	retlw	204
   399  1841  343D               	retlw	61
   400  1842  340A               	retlw	10
   401  1843  34D7               	retlw	215
   402  1844  3423               	retlw	35
   403  1845  343C               	retlw	60
   404  1846  346F               	retlw	111
   405  1847  3412               	retlw	18
   406  1848  3483               	retlw	131
   407  1849  343A               	retlw	58
   408  184A  3417               	retlw	23
   409  184B  34B7               	retlw	183
   410  184C  34D1               	retlw	209
   411  184D  3438               	retlw	56
   412  184E  34AC               	retlw	172
   413  184F  34C5               	retlw	197
   414  1850  3427               	retlw	39
   415  1851  3437               	retlw	55
   416  1852  34BD               	retlw	189
   417  1853  3437               	retlw	55
   418  1854  3486               	retlw	134
   419  1855  3435               	retlw	53
   420  1856  3495               	retlw	149
   421  1857  34BF               	retlw	191
   422  1858  34D6               	retlw	214
   423  1859  3433               	retlw	51
   424  185A  3477               	retlw	119
   425  185B  34CC               	retlw	204
   426  185C  342B               	retlw	43
   427  185D  3432               	retlw	50
   428  185E  345F               	retlw	95
   429  185F  3470               	retlw	112
   430  1860  3489               	retlw	137
   431  1861  3430               	retlw	48
   432  1862  34FF               	retlw	255
   433  1863  34E6               	retlw	230
   434  1864  34DB               	retlw	219
   435  1865  342E               	retlw	46
   436  1866  3408               	retlw	8
   437  1867  34E5               	retlw	229
   438  1868  343C               	retlw	60
   439  1869  341E               	retlw	30
   440  186A  3460               	retlw	96
   441  186B  3442               	retlw	66
   442  186C  34A2               	retlw	162
   443  186D  340D               	retlw	13
   444  186E                     __end_of__npowers_:
   445  186E                     _dpowers:
   446  186E  3401               	retlw	1
   447  186F  3400               	retlw	0
   448  1870  3400               	retlw	0
   449  1871  3400               	retlw	0
   450  1872  340A               	retlw	10
   451  1873  3400               	retlw	0
   452  1874  3400               	retlw	0
   453  1875  3400               	retlw	0
   454  1876  3464               	retlw	100
   455  1877  3400               	retlw	0
   456  1878  3400               	retlw	0
   457  1879  3400               	retlw	0
   458  187A  34E8               	retlw	232
   459  187B  3403               	retlw	3
   460  187C  3400               	retlw	0
   461  187D  3400               	retlw	0
   462  187E  3410               	retlw	16
   463  187F  3427               	retlw	39
   464  1880  3400               	retlw	0
   465  1881  3400               	retlw	0
   466  1882  34A0               	retlw	160
   467  1883  3486               	retlw	134
   468  1884  3401               	retlw	1
   469  1885  3400               	retlw	0
   470  1886  3440               	retlw	64
   471  1887  3442               	retlw	66
   472  1888  340F               	retlw	15
   473  1889  3400               	retlw	0
   474  188A  3480               	retlw	128
   475  188B  3496               	retlw	150
   476  188C  3498               	retlw	152
   477  188D  3400               	retlw	0
   478  188E  3400               	retlw	0
   479  188F  34E1               	retlw	225
   480  1890  34F5               	retlw	245
   481  1891  3405               	retlw	5
   482  1892  3400               	retlw	0
   483  1893  34CA               	retlw	202
   484  1894  349A               	retlw	154
   485  1895  343B               	retlw	59
   486  1896                     __end_of_dpowers:
   487  0013                     _SSPBUF	set	19
   488  0014                     _SSPCON	set	20
   489  0019                     _TXREG	set	25
   490  0018                     _RCSTAbits	set	24
   491  000B                     _INTCONbits	set	11
   492  0005                     _PORTA	set	5
   493  0008                     _PORTD	set	8
   494  0006                     _PORTB	set	6
   495  0063                     _SSPIF	set	99
   496  005E                     _PEIE	set	94
   497  005F                     _GIE	set	95
   498  0064                     _TXIF	set	100
   499  0091                     _SSPCON2bits	set	145
   500  0087                     _TRISCbits	set	135
   501  0094                     _SSPSTAT	set	148
   502  0093                     _SSPADD	set	147
   503  0091                     _SSPCON2	set	145
   504  009A                     _SPBRGH	set	154
   505  0099                     _SPBRG	set	153
   506  0098                     _TXSTAbits	set	152
   507  008C                     _PIE1bits	set	140
   508  008F                     _OSCCONbits	set	143
   509  0088                     _TRISD	set	136
   510  0086                     _TRISB	set	134
   511  0085                     _TRISAbits	set	133
   512  0463                     _SSPIE	set	1123
   513  043C                     _TRISC4	set	1084
   514  043B                     _TRISC3	set	1083
   515  0187                     _BAUDCTLbits	set	391
   516  0189                     _ANSELH	set	393
   517  0188                     _ANSEL	set	392
   518  1896                     STR_1:
   519  1896  3425               	retlw	37	;'%'
   520  1897  3430               	retlw	48	;'0'
   521  1898  342E               	retlw	46	;'.'
   522  1899  3430               	retlw	48	;'0'
   523  189A  3466               	retlw	102	;'f'
   524  189B  3420               	retlw	32	;' '
   525  189C  3463               	retlw	99	;'c'
   526  189D  346D               	retlw	109	;'m'
   527  189E  3400               	retlw	0
   528                           
   529                           	psect	cinit
   530  000F                     start_initialization:	
   531                           ; #config settings
   532                           
   533  000F                     __initialization:
   534                           
   535                           ; Clear objects allocated to COMMON
   536  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   537                           
   538                           ; Clear objects allocated to BANK1
   539  0010  1383               	bcf	3,7	;select IRP bank0
   540  0011  30CB               	movlw	low __pbssBANK1
   541  0012  0084               	movwf	4
   542  0013  30E2               	movlw	low (__pbssBANK1+23)
   543  0014  160A  158A  2446  120A  118A  	fcall	clear_ram0
   544  0019                     end_of_initialization:	
   545                           ;End of C runtime variable initialization code
   546                           
   547  0019                     __end_of__initialization:
   548  0019  0183               	clrf	3
   549  001A  120A  158A  2864   	ljmp	_main	;jump to C main() function
   550                           
   551                           	psect	bssCOMMON
   552  007B                     __pbssCOMMON:
   553  007B                     _i:
   554  007B                     	ds	1
   555                           
   556                           	psect	bssBANK1
   557  00CB                     __pbssBANK1:
   558  00CB                     _v:
   559  00CB                     	ds	4
   560  00CF                     _D:
   561  00CF                     	ds	2
   562  00D1                     _V:
   563  00D1                     	ds	2
   564  00D3                     _f1:
   565  00D3                     	ds	15
   566                           
   567                           	psect	clrtext
   568  1C46                     clear_ram0:	
   569                           ;	Called with FSR containing the base address, and
   570                           ;	W with the last address+1
   571                           
   572  1C46  0064               	clrwdt	;clear the watchdog before getting into this loop
   573  1C47                     clrloop0:
   574  1C47  0180               	clrf	0	;clear RAM location pointed to by FSR
   575  1C48  0A84               	incf	4,f	;increment pointer
   576  1C49  0604               	xorwf	4,w	;XOR with final address
   577  1C4A  1903               	btfsc	3,2	;have we reached the end yet?
   578  1C4B  3400               	retlw	0	;all done for this memory range, return
   579  1C4C  0604               	xorwf	4,w	;XOR again to restore value
   580  1C4D  2C47               	goto	clrloop0	;do the next byte
   581                           
   582                           	psect	cstackBANK1
   583  00A0                     __pcstackBANK1:
   584  00A0                     ?___flsub:
   585  00A0                     ___flsub@a:	
   586                           ; 4 bytes @ 0x0
   587                           
   588                           
   589                           ; 4 bytes @ 0x0
   590  00A0                     	ds	4
   591  00A4                     ___flsub@b:
   592                           
   593                           ; 4 bytes @ 0x4
   594  00A4                     	ds	4
   595  00A8                     ??_sprintf:
   596                           
   597                           ; 1 bytes @ 0x8
   598  00A8                     	ds	5
   599  00AD                     _sprintf$1127:
   600                           
   601                           ; 4 bytes @ 0xD
   602  00AD                     	ds	4
   603  00B1                     sprintf@ap:
   604                           
   605                           ; 1 bytes @ 0x11
   606  00B1                     	ds	1
   607  00B2                     sprintf@val:
   608                           
   609                           ; 4 bytes @ 0x12
   610  00B2                     	ds	4
   611  00B6                     sprintf@tmpval:
   612                           
   613                           ; 4 bytes @ 0x16
   614  00B6                     	ds	4
   615  00BA                     sprintf@eexp:
   616                           
   617                           ; 2 bytes @ 0x1A
   618  00BA                     	ds	2
   619  00BC                     sprintf@flag:
   620                           
   621                           ; 2 bytes @ 0x1C
   622  00BC                     	ds	2
   623  00BE                     sprintf@width:
   624                           
   625                           ; 2 bytes @ 0x1E
   626  00BE                     	ds	2
   627  00C0                     sprintf@fval:
   628                           
   629                           ; 4 bytes @ 0x20
   630  00C0                     	ds	4
   631  00C4                     sprintf@prec:
   632                           
   633                           ; 2 bytes @ 0x24
   634  00C4                     	ds	2
   635  00C6                     sprintf@sp:
   636                           
   637                           ; 1 bytes @ 0x26
   638  00C6                     	ds	1
   639  00C7                     sprintf@c:
   640                           
   641                           ; 1 bytes @ 0x27
   642  00C7                     	ds	1
   643  00C8                     ??_main:
   644                           
   645                           ; 1 bytes @ 0x28
   646  00C8                     	ds	3
   647                           
   648                           	psect	cstackCOMMON
   649  0070                     __pcstackCOMMON:
   650  0070                     ?_isdigit:
   651  0070                     ?_cfg_io:	
   652                           ; 1 bit 
   653                           
   654  0070                     ?_cfg_usart:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_cfg_clk:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_I2C_Master_Start:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_I2C_Master_Stop:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_send_crct:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_send_char:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_isr:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ??_isr:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_main:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_I2C_Master_Wait:	
   682                           ; 1 bytes @ 0x0
   683                           
   684                           
   685                           ; 1 bytes @ 0x0
   686  0070                     	ds	2
   687  0072                     ?___fleq:
   688  0072                     ?___flge:	
   689                           ; 1 bit 
   690                           
   691  0072                     ??_cfg_io:	
   692                           ; 1 bit 
   693                           
   694  0072                     ??_cfg_usart:	
   695                           ; 1 bytes @ 0x2
   696                           
   697  0072                     ??_cfg_clk:	
   698                           ; 1 bytes @ 0x2
   699                           
   700  0072                     ??_I2C_Master_Start:	
   701                           ; 1 bytes @ 0x2
   702                           
   703  0072                     ?_I2C_Master_Write:	
   704                           ; 1 bytes @ 0x2
   705                           
   706  0072                     ??_I2C_Master_Stop:	
   707                           ; 1 bytes @ 0x2
   708                           
   709  0072                     ??_send_char:	
   710                           ; 1 bytes @ 0x2
   711                           
   712  0072                     ??_isdigit:	
   713                           ; 1 bytes @ 0x2
   714                           
   715  0072                     ??_I2C_Master_Wait:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     ?_I2C_Master_Read:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ?__Umul8_16:	
   722                           ; 2 bytes @ 0x2
   723                           
   724  0072                     ?___wmul:	
   725                           ; 2 bytes @ 0x2
   726                           
   727  0072                     ?___awmod:	
   728                           ; 2 bytes @ 0x2
   729                           
   730  0072                     ?___lwmod:	
   731                           ; 2 bytes @ 0x2
   732                           
   733  0072                     ?__tdiv_to_l_:	
   734                           ; 2 bytes @ 0x2
   735                           
   736  0072                     ?__div_to_l_:	
   737                           ; 4 bytes @ 0x2
   738                           
   739  0072                     ?___lldiv:	
   740                           ; 4 bytes @ 0x2
   741                           
   742  0072                     ?___flneg:	
   743                           ; 4 bytes @ 0x2
   744                           
   745  0072                     ?___llmod:	
   746                           ; 4 bytes @ 0x2
   747                           
   748  0072                     ?___xxtofl:	
   749                           ; 4 bytes @ 0x2
   750                           
   751  0072                     send_char@dato:	
   752                           ; 4 bytes @ 0x2
   753                           
   754  0072                     __Umul8_16@multiplicand:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     _isdigit$941:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     I2C_Master_Write@d:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     I2C_Master_Read@a:	
   764                           ; 2 bytes @ 0x2
   765                           
   766  0072                     ___wmul@multiplier:	
   767                           ; 2 bytes @ 0x2
   768                           
   769  0072                     ___awmod@divisor:	
   770                           ; 2 bytes @ 0x2
   771                           
   772  0072                     ___lwmod@divisor:	
   773                           ; 2 bytes @ 0x2
   774                           
   775  0072                     ___lldiv@divisor:	
   776                           ; 2 bytes @ 0x2
   777                           
   778  0072                     __div_to_l_@f1:	
   779                           ; 4 bytes @ 0x2
   780                           
   781  0072                     ___fleq@ff1:	
   782                           ; 4 bytes @ 0x2
   783                           
   784  0072                     ___flge@ff1:	
   785                           ; 4 bytes @ 0x2
   786                           
   787  0072                     ___flneg@f1:	
   788                           ; 4 bytes @ 0x2
   789                           
   790  0072                     __tdiv_to_l_@f1:	
   791                           ; 4 bytes @ 0x2
   792                           
   793  0072                     ___llmod@divisor:	
   794                           ; 4 bytes @ 0x2
   795                           
   796  0072                     ___xxtofl@val:	
   797                           ; 4 bytes @ 0x2
   798                           
   799                           
   800                           ; 4 bytes @ 0x2
   801  0072                     	ds	1
   802  0073                     ??_send_crct:
   803  0073                     isdigit@c:	
   804                           ; 1 bytes @ 0x3
   805                           
   806                           
   807                           ; 1 bytes @ 0x3
   808  0073                     	ds	1
   809  0074                     ??_I2C_Master_Write:
   810  0074                     ??_I2C_Master_Read:	
   811                           ; 1 bytes @ 0x4
   812                           
   813  0074                     ??__Umul8_16:	
   814                           ; 1 bytes @ 0x4
   815                           
   816  0074                     send_crct@i:	
   817                           ; 1 bytes @ 0x4
   818                           
   819  0074                     ___wmul@multiplicand:	
   820                           ; 2 bytes @ 0x4
   821                           
   822  0074                     ___awmod@dividend:	
   823                           ; 2 bytes @ 0x4
   824                           
   825  0074                     ___lwmod@dividend:	
   826                           ; 2 bytes @ 0x4
   827                           
   828                           
   829                           ; 2 bytes @ 0x4
   830  0074                     	ds	2
   831  0076                     ??___wmul:
   832  0076                     ??___awmod:	
   833                           ; 1 bytes @ 0x6
   834                           
   835  0076                     ??___flneg:	
   836                           ; 1 bytes @ 0x6
   837                           
   838  0076                     ??___lwmod:	
   839                           ; 1 bytes @ 0x6
   840                           
   841  0076                     ??___xxtofl:	
   842                           ; 1 bytes @ 0x6
   843                           
   844  0076                     send_crct@st:	
   845                           ; 1 bytes @ 0x6
   846                           
   847  0076                     I2C_Master_Read@temp:	
   848                           ; 1 bytes @ 0x6
   849                           
   850  0076                     ___wmul@product:	
   851                           ; 2 bytes @ 0x6
   852                           
   853  0076                     __Umul8_16@product:	
   854                           ; 2 bytes @ 0x6
   855                           
   856  0076                     ___lldiv@dividend:	
   857                           ; 2 bytes @ 0x6
   858                           
   859  0076                     __div_to_l_@f2:	
   860                           ; 4 bytes @ 0x6
   861                           
   862  0076                     ___fleq@ff2:	
   863                           ; 4 bytes @ 0x6
   864                           
   865  0076                     ___flge@ff2:	
   866                           ; 4 bytes @ 0x6
   867                           
   868  0076                     __tdiv_to_l_@f2:	
   869                           ; 4 bytes @ 0x6
   870                           
   871  0076                     ___llmod@dividend:	
   872                           ; 4 bytes @ 0x6
   873                           
   874                           
   875                           ; 4 bytes @ 0x6
   876  0076                     	ds	1
   877  0077                     ___awmod@counter:
   878  0077                     ___lwmod@counter:	
   879                           ; 1 bytes @ 0x7
   880                           
   881                           
   882                           ; 1 bytes @ 0x7
   883  0077                     	ds	1
   884  0078                     ??___lwdiv:
   885  0078                     ___awmod@sign:	
   886                           ; 1 bytes @ 0x8
   887                           
   888  0078                     __Umul8_16@word_mpld:	
   889                           ; 1 bytes @ 0x8
   890                           
   891                           
   892                           ; 2 bytes @ 0x8
   893  0078                     	ds	1
   894  0079                     ??___awdiv:
   895                           
   896                           ; 1 bytes @ 0x9
   897  0079                     	ds	1
   898  007A                     ??_conv:
   899  007A                     ??__div_to_l_:	
   900                           ; 1 bytes @ 0xA
   901                           
   902  007A                     ??___lldiv:	
   903                           ; 1 bytes @ 0xA
   904                           
   905  007A                     ??___llmod:	
   906                           ; 1 bytes @ 0xA
   907                           
   908  007A                     __Umul8_16@multiplier:	
   909                           ; 1 bytes @ 0xA
   910                           
   911                           
   912                           ; 1 bytes @ 0xA
   913  007A                     	ds	1
   914  007B                     ??___flsub:
   915                           
   916                           	psect	cstackBANK0
   917  0020                     __pcstackBANK0:	
   918                           ; 1 bytes @ 0xB
   919                           
   920  0020                     ??__tdiv_to_l_:
   921  0020                     ??___fleq:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0020                     ??___flge:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0020                     ?___awdiv:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0020                     ?___lwdiv:	
   931                           ; 2 bytes @ 0x0
   932                           
   933  0020                     ___llmod@counter:	
   934                           ; 2 bytes @ 0x0
   935                           
   936  0020                     ___xxtofl@sign:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0020                     ___awdiv@divisor:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0020                     ___lwdiv@divisor:	
   943                           ; 2 bytes @ 0x0
   944                           
   945  0020                     ___lldiv@quotient:	
   946                           ; 2 bytes @ 0x0
   947                           
   948  0020                     __div_to_l_@quot:	
   949                           ; 4 bytes @ 0x0
   950                           
   951                           
   952                           ; 4 bytes @ 0x0
   953  0020                     	ds	1
   954  0021                     ___xxtofl@exp:
   955                           
   956                           ; 1 bytes @ 0x1
   957  0021                     	ds	1
   958  0022                     ___awdiv@dividend:
   959  0022                     ___lwdiv@dividend:	
   960                           ; 2 bytes @ 0x2
   961                           
   962  0022                     ___xxtofl@arg:	
   963                           ; 2 bytes @ 0x2
   964                           
   965                           
   966                           ; 4 bytes @ 0x2
   967  0022                     	ds	2
   968  0024                     ___lldiv@counter:
   969  0024                     ___awdiv@counter:	
   970                           ; 1 bytes @ 0x4
   971                           
   972  0024                     __div_to_l_@cntr:	
   973                           ; 1 bytes @ 0x4
   974                           
   975  0024                     ___lwdiv@counter:	
   976                           ; 1 bytes @ 0x4
   977                           
   978  0024                     __tdiv_to_l_@quot:	
   979                           ; 1 bytes @ 0x4
   980                           
   981                           
   982                           ; 4 bytes @ 0x4
   983  0024                     	ds	1
   984  0025                     ___awdiv@sign:
   985  0025                     __div_to_l_@exp1:	
   986                           ; 1 bytes @ 0x5
   987                           
   988  0025                     ___lwdiv@quotient:	
   989                           ; 1 bytes @ 0x5
   990                           
   991                           
   992                           ; 2 bytes @ 0x5
   993  0025                     	ds	1
   994  0026                     ?_conv:
   995  0026                     conv@aa:	
   996                           ; 4 bytes @ 0x6
   997                           
   998  0026                     ___awdiv@quotient:	
   999                           ; 2 bytes @ 0x6
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0x6
  1003  0026                     	ds	2
  1004  0028                     ?___flmul:
  1005  0028                     __tdiv_to_l_@cntr:	
  1006                           ; 4 bytes @ 0x8
  1007                           
  1008  0028                     ___flmul@b:	
  1009                           ; 1 bytes @ 0x8
  1010                           
  1011                           
  1012                           ; 4 bytes @ 0x8
  1013  0028                     	ds	1
  1014  0029                     __tdiv_to_l_@exp1:
  1015                           
  1016                           ; 1 bytes @ 0x9
  1017  0029                     	ds	1
  1018  002A                     conv@result:
  1019                           
  1020                           ; 4 bytes @ 0xA
  1021  002A                     	ds	2
  1022  002C                     ___flmul@a:
  1023                           
  1024                           ; 4 bytes @ 0xC
  1025  002C                     	ds	4
  1026  0030                     ??___flmul:
  1027                           
  1028                           ; 1 bytes @ 0x10
  1029  0030                     	ds	5
  1030  0035                     ___flmul@sign:
  1031                           
  1032                           ; 1 bytes @ 0x15
  1033  0035                     	ds	1
  1034  0036                     ___flmul@grs:
  1035                           
  1036                           ; 4 bytes @ 0x16
  1037  0036                     	ds	4
  1038  003A                     ___flmul@aexp:
  1039                           
  1040                           ; 1 bytes @ 0x1A
  1041  003A                     	ds	1
  1042  003B                     ___flmul@bexp:
  1043                           
  1044                           ; 1 bytes @ 0x1B
  1045  003B                     	ds	1
  1046  003C                     ___flmul@prod:
  1047                           
  1048                           ; 4 bytes @ 0x1C
  1049  003C                     	ds	4
  1050  0040                     ___flmul@temp:
  1051                           
  1052                           ; 2 bytes @ 0x20
  1053  0040                     	ds	2
  1054  0042                     ?_fround:
  1055  0042                     ?_scale:	
  1056                           ; 4 bytes @ 0x22
  1057                           
  1058                           
  1059                           ; 4 bytes @ 0x22
  1060  0042                     	ds	4
  1061  0046                     ??_fround:
  1062  0046                     ??_scale:	
  1063                           ; 1 bytes @ 0x26
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0x26
  1067  0046                     	ds	7
  1068  004D                     _fround$1125:
  1069                           
  1070                           ; 4 bytes @ 0x2D
  1071  004D                     	ds	3
  1072  0050                     _scale$1126:
  1073                           
  1074                           ; 4 bytes @ 0x30
  1075  0050                     	ds	1
  1076  0051                     _fround$1124:
  1077                           
  1078                           ; 4 bytes @ 0x31
  1079  0051                     	ds	3
  1080  0054                     scale@scl:
  1081                           
  1082                           ; 1 bytes @ 0x34
  1083  0054                     	ds	1
  1084  0055                     ?___fltol:
  1085  0055                     fround@prec:	
  1086                           ; 4 bytes @ 0x35
  1087                           
  1088  0055                     ___fltol@f1:	
  1089                           ; 1 bytes @ 0x35
  1090                           
  1091                           
  1092                           ; 4 bytes @ 0x35
  1093  0055                     	ds	1
  1094  0056                     ?___fladd:
  1095  0056                     ___fladd@b:	
  1096                           ; 4 bytes @ 0x36
  1097                           
  1098                           
  1099                           ; 4 bytes @ 0x36
  1100  0056                     	ds	3
  1101  0059                     ??___fltol:
  1102                           
  1103                           ; 1 bytes @ 0x39
  1104  0059                     	ds	1
  1105  005A                     ___fladd@a:
  1106                           
  1107                           ; 4 bytes @ 0x3A
  1108  005A                     	ds	4
  1109  005E                     ??___fladd:
  1110  005E                     ___fltol@sign1:	
  1111                           ; 1 bytes @ 0x3E
  1112                           
  1113                           
  1114                           ; 1 bytes @ 0x3E
  1115  005E                     	ds	1
  1116  005F                     ___fltol@exp1:
  1117                           
  1118                           ; 1 bytes @ 0x3F
  1119  005F                     	ds	7
  1120  0066                     ___fladd@signs:
  1121                           
  1122                           ; 1 bytes @ 0x46
  1123  0066                     	ds	1
  1124  0067                     ___fladd@aexp:
  1125                           
  1126                           ; 1 bytes @ 0x47
  1127  0067                     	ds	1
  1128  0068                     ___fladd@bexp:
  1129                           
  1130                           ; 1 bytes @ 0x48
  1131  0068                     	ds	1
  1132  0069                     ___fladd@grs:
  1133                           
  1134                           ; 1 bytes @ 0x49
  1135  0069                     	ds	1
  1136  006A                     ?_sprintf:
  1137  006A                     sprintf@f:	
  1138                           ; 2 bytes @ 0x4A
  1139                           
  1140                           
  1141                           ; 1 bytes @ 0x4A
  1142  006A                     	ds	5
  1143                           
  1144                           	psect	maintext
  1145  0864                     __pmaintext:	
  1146 ;;
  1147 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1148 ;;
  1149 ;; *************** function _main *****************
  1150 ;; Defined at:
  1151 ;;		line 72 in file "mainp1.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : B00/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1165 ;;      Params:         0       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0
  1167 ;;      Temps:          0       0       3       0       0
  1168 ;;      Totals:         0       0       3       0       0
  1169 ;;Total ram usage:        3 bytes
  1170 ;; Hardware stack levels required when called:    5
  1171 ;; This function calls:
  1172 ;;		_I2C_Master_Read
  1173 ;;		_I2C_Master_Start
  1174 ;;		_I2C_Master_Stop
  1175 ;;		_I2C_Master_Write
  1176 ;;		_cfg_clk
  1177 ;;		_cfg_io
  1178 ;;		_cfg_usart
  1179 ;;		_conv
  1180 ;;		_send_crct
  1181 ;;		_sprintf
  1182 ;; This function is called by:
  1183 ;;		Startup code after reset
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _main
  1189  0864                     _main:
  1190  0864                     l3998:	
  1191                           ;incstack = 0
  1192                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1193                           
  1194                           
  1195                           ;mainp1.c: 73:     cfg_io();
  1196  0864  160A  158A  2481  120A  158A  	fcall	_cfg_io
  1197  0869                     l4000:
  1198                           
  1199                           ;mainp1.c: 75:     cfg_usart();
  1200  0869  160A  118A  2000  120A  158A  	fcall	_cfg_usart
  1201  086E                     l4002:
  1202                           
  1203                           ;mainp1.c: 76:     cfg_clk();
  1204  086E  160A  158A  243E  120A  158A  	fcall	_cfg_clk
  1205  0873                     l4004:
  1206                           
  1207                           ;mainp1.c: 108:         I2C_Master_Start();
  1208  0873  160A  158A  244E  120A  158A  	fcall	_I2C_Master_Start
  1209  0878                     l4006:
  1210                           
  1211                           ;mainp1.c: 109:         I2C_Master_Write(0x72);
  1212  0878  3072               	movlw	114
  1213  0879  00F2               	movwf	I2C_Master_Write@d
  1214  087A  3000               	movlw	0
  1215  087B  00F3               	movwf	I2C_Master_Write@d+1
  1216  087C  160A  158A  2460  120A  158A  	fcall	_I2C_Master_Write
  1217  0881                     l4008:
  1218                           
  1219                           ;mainp1.c: 110:         I2C_Master_Write(0xD0);
  1220  0881  30D0               	movlw	208
  1221  0882  00F2               	movwf	I2C_Master_Write@d
  1222  0883  3000               	movlw	0
  1223  0884  00F3               	movwf	I2C_Master_Write@d+1
  1224  0885  160A  158A  2460  120A  158A  	fcall	_I2C_Master_Write
  1225  088A                     l4010:
  1226                           
  1227                           ;mainp1.c: 111:         I2C_Master_Write(0x03);
  1228  088A  3003               	movlw	3
  1229  088B  00F2               	movwf	I2C_Master_Write@d
  1230  088C  3000               	movlw	0
  1231  088D  00F3               	movwf	I2C_Master_Write@d+1
  1232  088E  160A  158A  2460  120A  158A  	fcall	_I2C_Master_Write
  1233  0893                     l4012:
  1234                           
  1235                           ;mainp1.c: 112:         I2C_Master_Stop();
  1236  0893  160A  158A  2457  120A  158A  	fcall	_I2C_Master_Stop
  1237                           
  1238                           ;mainp1.c: 113:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1239  0898  3002               	movlw	2
  1240  0899  1683               	bsf	3,5	;RP0=1, select bank1
  1241  089A  1303               	bcf	3,6	;RP1=0, select bank1
  1242  089B  00CA               	movwf	(??_main^(0+128)+2)
  1243  089C  3004               	movlw	4
  1244  089D  00C9               	movwf	(??_main^(0+128)+1)
  1245  089E  30B9               	movlw	185
  1246  089F  00C8               	movwf	??_main^(0+128)
  1247  08A0                     u6427:
  1248  08A0  0BC8               	decfsz	??_main^(0+128),f
  1249  08A1  28A0               	goto	u6427
  1250  08A2  0BC9               	decfsz	(??_main^(0+128)+1),f
  1251  08A3  28A0               	goto	u6427
  1252  08A4  0BCA               	decfsz	(??_main^(0+128)+2),f
  1253  08A5  28A0               	goto	u6427
  1254  08A6  28A7               	nop2
  1255  08A7                     l4014:
  1256                           
  1257                           ;mainp1.c: 115:         I2C_Master_Start();
  1258  08A7  160A  158A  244E  120A  158A  	fcall	_I2C_Master_Start
  1259  08AC                     l4016:
  1260                           
  1261                           ;mainp1.c: 116:         I2C_Master_Write(0x73);
  1262  08AC  3073               	movlw	115
  1263  08AD  00F2               	movwf	I2C_Master_Write@d
  1264  08AE  3000               	movlw	0
  1265  08AF  00F3               	movwf	I2C_Master_Write@d+1
  1266  08B0  160A  158A  2460  120A  158A  	fcall	_I2C_Master_Write
  1267  08B5                     l4018:
  1268                           
  1269                           ;mainp1.c: 117:         D = I2C_Master_Read(0);
  1270  08B5  3000               	movlw	0
  1271  08B6  00F2               	movwf	I2C_Master_Read@a
  1272  08B7  00F3               	movwf	I2C_Master_Read@a+1
  1273  08B8  160A  158A  250F  120A  158A  	fcall	_I2C_Master_Read
  1274  08BD  0873               	movf	?_I2C_Master_Read+1,w
  1275  08BE  1683               	bsf	3,5	;RP0=1, select bank1
  1276  08BF  1303               	bcf	3,6	;RP1=0, select bank1
  1277  08C0  00D0               	movwf	(_D+1)^(0+128)
  1278  08C1  0872               	movf	?_I2C_Master_Read,w
  1279  08C2  00CF               	movwf	_D^(0+128)
  1280  08C3                     l4020:
  1281                           
  1282                           ;mainp1.c: 118:         I2C_Master_Stop();
  1283  08C3  160A  158A  2457  120A  158A  	fcall	_I2C_Master_Stop
  1284                           
  1285                           ;mainp1.c: 119:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1286  08C8  3002               	movlw	2
  1287  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  1288  08CA  1303               	bcf	3,6	;RP1=0, select bank1
  1289  08CB  00CA               	movwf	(??_main^(0+128)+2)
  1290  08CC  3004               	movlw	4
  1291  08CD  00C9               	movwf	(??_main^(0+128)+1)
  1292  08CE  30B9               	movlw	185
  1293  08CF  00C8               	movwf	??_main^(0+128)
  1294  08D0                     u6437:
  1295  08D0  0BC8               	decfsz	??_main^(0+128),f
  1296  08D1  28D0               	goto	u6437
  1297  08D2  0BC9               	decfsz	(??_main^(0+128)+1),f
  1298  08D3  28D0               	goto	u6437
  1299  08D4  0BCA               	decfsz	(??_main^(0+128)+2),f
  1300  08D5  28D0               	goto	u6437
  1301  08D6  28D7               	nop2
  1302  08D7                     l4022:
  1303                           
  1304                           ;mainp1.c: 121:         v = conv(D);
  1305  08D7  1683               	bsf	3,5	;RP0=1, select bank1
  1306  08D8  1303               	bcf	3,6	;RP1=0, select bank1
  1307  08D9  0850               	movf	(_D+1)^(0+128),w
  1308  08DA  1283               	bcf	3,5	;RP0=0, select bank0
  1309  08DB  1303               	bcf	3,6	;RP1=0, select bank0
  1310  08DC  00A7               	movwf	conv@aa+1
  1311  08DD  1683               	bsf	3,5	;RP0=1, select bank1
  1312  08DE  1303               	bcf	3,6	;RP1=0, select bank1
  1313  08DF  084F               	movf	_D^(0+128),w
  1314  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  1315  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  1316  08E2  00A6               	movwf	conv@aa
  1317  08E3  160A  158A  24C6  120A  158A  	fcall	_conv
  1318  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  1319  08E9  1303               	bcf	3,6	;RP1=0, select bank0
  1320  08EA  0829               	movf	?_conv+3,w
  1321  08EB  1683               	bsf	3,5	;RP0=1, select bank1
  1322  08EC  1303               	bcf	3,6	;RP1=0, select bank1
  1323  08ED  00CE               	movwf	(_v+3)^(0+128)
  1324  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  1325  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  1326  08F0  0828               	movf	?_conv+2,w
  1327  08F1  1683               	bsf	3,5	;RP0=1, select bank1
  1328  08F2  1303               	bcf	3,6	;RP1=0, select bank1
  1329  08F3  00CD               	movwf	(_v+2)^(0+128)
  1330  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  1331  08F5  1303               	bcf	3,6	;RP1=0, select bank0
  1332  08F6  0827               	movf	?_conv+1,w
  1333  08F7  1683               	bsf	3,5	;RP0=1, select bank1
  1334  08F8  1303               	bcf	3,6	;RP1=0, select bank1
  1335  08F9  00CC               	movwf	(_v+1)^(0+128)
  1336  08FA  1283               	bcf	3,5	;RP0=0, select bank0
  1337  08FB  1303               	bcf	3,6	;RP1=0, select bank0
  1338  08FC  0826               	movf	?_conv,w
  1339  08FD  1683               	bsf	3,5	;RP0=1, select bank1
  1340  08FE  1303               	bcf	3,6	;RP1=0, select bank1
  1341  08FF  00CB               	movwf	_v^(0+128)
  1342  0900                     l4024:
  1343                           
  1344                           ;mainp1.c: 123:         sprintf(f1, "%0.0f cm", v);
  1345  0900  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1346  0901  00C8               	movwf	??_main^(0+128)
  1347  0902  0848               	movf	??_main^(0+128),w
  1348  0903  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0904  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0905  00EA               	movwf	sprintf@f
  1351  0906  1683               	bsf	3,5	;RP0=1, select bank1
  1352  0907  1303               	bcf	3,6	;RP1=0, select bank1
  1353  0908  084E               	movf	(_v+3)^(0+128),w
  1354  0909  1283               	bcf	3,5	;RP0=0, select bank0
  1355  090A  1303               	bcf	3,6	;RP1=0, select bank0
  1356  090B  00EE               	movwf	?_sprintf+4
  1357  090C  1683               	bsf	3,5	;RP0=1, select bank1
  1358  090D  1303               	bcf	3,6	;RP1=0, select bank1
  1359  090E  084D               	movf	(_v+2)^(0+128),w
  1360  090F  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0910  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0911  00ED               	movwf	?_sprintf+3
  1363  0912  1683               	bsf	3,5	;RP0=1, select bank1
  1364  0913  1303               	bcf	3,6	;RP1=0, select bank1
  1365  0914  084C               	movf	(_v+1)^(0+128),w
  1366  0915  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0916  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0917  00EC               	movwf	?_sprintf+2
  1369  0918  1683               	bsf	3,5	;RP0=1, select bank1
  1370  0919  1303               	bcf	3,6	;RP1=0, select bank1
  1371  091A  084B               	movf	_v^(0+128),w
  1372  091B  1283               	bcf	3,5	;RP0=0, select bank0
  1373  091C  1303               	bcf	3,6	;RP1=0, select bank0
  1374  091D  00EB               	movwf	?_sprintf+1
  1375  091E  30D3               	movlw	(low (_f1| 0))& (0+255)
  1376  091F  160A  118A  24FD  120A  158A  	fcall	_sprintf
  1377  0924                     l4026:
  1378                           
  1379                           ;mainp1.c: 124:         send_crct(f1);
  1380  0924  30D3               	movlw	(low (_f1| 0))& (0+255)
  1381  0925  160A  158A  24A5  120A  158A  	fcall	_send_crct
  1382  092A                     l4028:
  1383                           
  1384                           ;mainp1.c: 126:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1385  092A  3003               	movlw	3
  1386  092B  1683               	bsf	3,5	;RP0=1, select bank1
  1387  092C  1303               	bcf	3,6	;RP1=0, select bank1
  1388  092D  00CA               	movwf	(??_main^(0+128)+2)
  1389  092E  308A               	movlw	138
  1390  092F  00C9               	movwf	(??_main^(0+128)+1)
  1391  0930  3055               	movlw	85
  1392  0931  00C8               	movwf	??_main^(0+128)
  1393  0932                     u6447:
  1394  0932  0BC8               	decfsz	??_main^(0+128),f
  1395  0933  2932               	goto	u6447
  1396  0934  0BC9               	decfsz	(??_main^(0+128)+1),f
  1397  0935  2932               	goto	u6447
  1398  0936  0BCA               	decfsz	(??_main^(0+128)+2),f
  1399  0937  2932               	goto	u6447
  1400  0938  2873               	goto	l4004
  1401  0939  120A  118A  280C   	ljmp	start
  1402  093C                     __end_of_main:
  1403                           
  1404                           	psect	text1
  1405  14FD                     __ptext1:	
  1406 ;; *************** function _sprintf *****************
  1407 ;; Defined at:
  1408 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  sp              1    wreg     PTR unsigned char 
  1411 ;;		 -> f1(15), 
  1412 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1413 ;;		 -> STR_1(9), 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  sp              1   38[BANK1 ] PTR unsigned char 
  1416 ;;		 -> f1(15), 
  1417 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1418 ;;  tmpval          4   22[BANK1 ] struct .
  1419 ;;  val             4   18[BANK1 ] unsigned long 
  1420 ;;  prec            2   36[BANK1 ] int 
  1421 ;;  width           2   30[BANK1 ] int 
  1422 ;;  flag            2   28[BANK1 ] unsigned short 
  1423 ;;  eexp            2   26[BANK1 ] int 
  1424 ;;  cp              2    0        PTR const unsigned char 
  1425 ;;  len             2    0        unsigned int 
  1426 ;;  c               1   39[BANK1 ] unsigned char 
  1427 ;;  ap              1   17[BANK1 ] PTR void [1]
  1428 ;;		 -> ?_sprintf(2), 
  1429 ;;  d               1    0        unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  2   74[BANK0 ] int 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1439 ;;      Params:         0       5       0       0       0
  1440 ;;      Locals:         0       0      27       0       0
  1441 ;;      Temps:          0       0       5       0       0
  1442 ;;      Totals:         0       5      32       0       0
  1443 ;;Total ram usage:       37 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    4
  1446 ;; This function calls:
  1447 ;;		___awdiv
  1448 ;;		___fladd
  1449 ;;		___fleq
  1450 ;;		___flge
  1451 ;;		___flmul
  1452 ;;		___flneg
  1453 ;;		___flsub
  1454 ;;		___fltol
  1455 ;;		___lldiv
  1456 ;;		___llmod
  1457 ;;		___wmul
  1458 ;;		___xxtofl
  1459 ;;		__div_to_l_
  1460 ;;		__tdiv_to_l_
  1461 ;;		_fround
  1462 ;;		_isdigit
  1463 ;;		_scale
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _sprintf
  1471  14FD                     _sprintf:
  1472                           
  1473                           ;incstack = 0
  1474                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1475                           ;sprintf@sp stored from wreg
  1476  14FD  1683               	bsf	3,5	;RP0=1, select bank1
  1477  14FE  1303               	bcf	3,6	;RP1=0, select bank1
  1478  14FF  00C6               	movwf	sprintf@sp^(0+128)
  1479  1500                     l3692:
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1482  1500  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1483  1501  00A8               	movwf	??_sprintf^(0+128)
  1484  1502  0828               	movf	??_sprintf^(0+128),w
  1485  1503  00B1               	movwf	sprintf@ap^(0+128)
  1486  1504                     L1:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1489  1504  120A  118A  2D30   	goto	l3980
  1490  1507                     l3694:
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1493  1507  3025               	movlw	37
  1494  1508  0647               	xorwf	sprintf@c^(0+128),w
  1495  1509  1903               	btfsc	3,2
  1496  150A  2D0C               	goto	u5881
  1497  150B  2D0D               	goto	u5880
  1498  150C                     u5881:
  1499  150C  2D19               	goto	l3700
  1500  150D                     u5880:
  1501  150D                     l3696:
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1504  150D  0847               	movf	sprintf@c^(0+128),w
  1505  150E  00A8               	movwf	??_sprintf^(0+128)
  1506  150F  0846               	movf	sprintf@sp^(0+128),w
  1507  1510  0084               	movwf	4
  1508  1511  0828               	movf	??_sprintf^(0+128),w
  1509  1512  1383               	bcf	3,7	;select IRP bank0
  1510  1513  0080               	movwf	0
  1511  1514                     l3698:
  1512  1514  3001               	movlw	1
  1513  1515  00A8               	movwf	??_sprintf^(0+128)
  1514  1516  0828               	movf	??_sprintf^(0+128),w
  1515  1517  07C6               	addwf	sprintf@sp^(0+128),f
  1516                           
  1517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1518  1518  2D04               	goto	L1
  1519  1519                     l3700:
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1522  1519  01BE               	clrf	sprintf@width^(0+128)
  1523  151A  01BF               	clrf	(sprintf@width+1)^(0+128)
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1526  151B  01BC               	clrf	sprintf@flag^(0+128)
  1527  151C  01BD               	clrf	(sprintf@flag+1)^(0+128)
  1528  151D  2D25               	goto	l3706
  1529  151E                     l287:	
  1530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1531                           
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1534  151E  153C               	bsf	sprintf@flag^(0+128),2
  1535  151F                     l3702:
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  1538  151F  3001               	movlw	1
  1539  1520  00A8               	movwf	??_sprintf^(0+128)
  1540  1521  0828               	movf	??_sprintf^(0+128),w
  1541  1522  1283               	bcf	3,5	;RP0=0, select bank0
  1542  1523  1303               	bcf	3,6	;RP1=0, select bank0
  1543  1524  07EA               	addwf	sprintf@f,f
  1544  1525                     l3706:	
  1545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1546                           
  1547  1525  1283               	bcf	3,5	;RP0=0, select bank0
  1548  1526  086A               	movf	sprintf@f,w
  1549  1527  0084               	movwf	4
  1550  1528  160A  158A  2000  160A  118A  	fcall	stringdir
  1551  152D  1683               	bsf	3,5	;RP0=1, select bank1
  1552  152E  1303               	bcf	3,6	;RP1=0, select bank1
  1553  152F  00A8               	movwf	??_sprintf^(0+128)
  1554  1530  01A9               	clrf	(??_sprintf^(0+128)+1)
  1555                           
  1556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1557                           ; Switch size 1, requested type "simple"
  1558                           ; Number of cases is 1, Range of values is 0 to 0
  1559                           ; switch strategies available:
  1560                           ; Name         Instructions Cycles
  1561                           ; simple_byte            4     3 (average)
  1562                           ; direct_byte           11     8 (fixed)
  1563                           ; jumptable            260     6 (fixed)
  1564                           ;	Chosen strategy is simple_byte
  1565  1531  0829               	movf	(??_sprintf+1)^(0+128),w
  1566  1532  3A00               	xorlw	0	; case 0
  1567  1533  1903               	skipnz
  1568  1534  2D36               	goto	l4090
  1569  1535  2D3B               	goto	l3708
  1570  1536                     l4090:
  1571                           
  1572                           ; Switch size 1, requested type "simple"
  1573                           ; Number of cases is 1, Range of values is 48 to 48
  1574                           ; switch strategies available:
  1575                           ; Name         Instructions Cycles
  1576                           ; simple_byte            4     3 (average)
  1577                           ; direct_byte           14    11 (fixed)
  1578                           ; jumptable            263     9 (fixed)
  1579                           ;	Chosen strategy is simple_byte
  1580  1536  0828               	movf	??_sprintf^(0+128),w
  1581  1537  3A30               	xorlw	48	; case 48
  1582  1538  1903               	skipnz
  1583  1539  2D1E               	goto	l287
  1584  153A  2D3B               	goto	l3708
  1585  153B                     l3708:
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1588  153B  1283               	bcf	3,5	;RP0=0, select bank0
  1589  153C  1303               	bcf	3,6	;RP1=0, select bank0
  1590  153D  086A               	movf	sprintf@f,w
  1591  153E  0084               	movwf	4
  1592  153F  160A  158A  2000  160A  118A  	fcall	stringdir
  1593  1544  160A  158A  2493  160A  118A  	fcall	_isdigit
  1594  1549  1C03               	btfss	3,0
  1595  154A  2D4C               	goto	u5891
  1596  154B  2D4D               	goto	u5890
  1597  154C                     u5891:
  1598  154C  2D93               	goto	l3720
  1599  154D                     u5890:
  1600  154D                     l3710:
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1603  154D  1683               	bsf	3,5	;RP0=1, select bank1
  1604  154E  1303               	bcf	3,6	;RP1=0, select bank1
  1605  154F  01BE               	clrf	sprintf@width^(0+128)
  1606  1550  01BF               	clrf	(sprintf@width+1)^(0+128)
  1607  1551                     l3712:
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1610  1551  300A               	movlw	10
  1611  1552  00F2               	movwf	___wmul@multiplier
  1612  1553  3000               	movlw	0
  1613  1554  00F3               	movwf	___wmul@multiplier+1
  1614  1555  1683               	bsf	3,5	;RP0=1, select bank1
  1615  1556  1303               	bcf	3,6	;RP1=0, select bank1
  1616  1557  083F               	movf	(sprintf@width+1)^(0+128),w
  1617  1558  00F5               	movwf	___wmul@multiplicand+1
  1618  1559  083E               	movf	sprintf@width^(0+128),w
  1619  155A  00F4               	movwf	___wmul@multiplicand
  1620  155B  160A  158A  24EA  160A  118A  	fcall	___wmul
  1621  1560  0873               	movf	?___wmul+1,w
  1622  1561  1683               	bsf	3,5	;RP0=1, select bank1
  1623  1562  1303               	bcf	3,6	;RP1=0, select bank1
  1624  1563  00BF               	movwf	(sprintf@width+1)^(0+128)
  1625  1564  0872               	movf	?___wmul,w
  1626  1565  00BE               	movwf	sprintf@width^(0+128)
  1627  1566                     l3714:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1630  1566  1283               	bcf	3,5	;RP0=0, select bank0
  1631  1567  1303               	bcf	3,6	;RP1=0, select bank0
  1632  1568  086A               	movf	sprintf@f,w
  1633  1569  0084               	movwf	4
  1634  156A  160A  158A  2000  160A  118A  	fcall	stringdir
  1635  156F  3ED0               	addlw	208
  1636  1570  1683               	bsf	3,5	;RP0=1, select bank1
  1637  1571  1303               	bcf	3,6	;RP1=0, select bank1
  1638  1572  00A8               	movwf	??_sprintf^(0+128)
  1639  1573  30FF               	movlw	255
  1640  1574  1803               	skipnc
  1641  1575  3000               	movlw	0
  1642  1576  00A9               	movwf	(??_sprintf^(0+128)+1)
  1643  1577  0828               	movf	??_sprintf^(0+128),w
  1644  1578  07BE               	addwf	sprintf@width^(0+128),f
  1645  1579  1803               	skipnc
  1646  157A  0ABF               	incf	(sprintf@width+1)^(0+128),f
  1647  157B  0829               	movf	(??_sprintf+1)^(0+128),w
  1648  157C  07BF               	addwf	(sprintf@width+1)^(0+128),f
  1649  157D                     l3716:
  1650  157D  3001               	movlw	1
  1651  157E  00A8               	movwf	??_sprintf^(0+128)
  1652  157F  0828               	movf	??_sprintf^(0+128),w
  1653  1580  1283               	bcf	3,5	;RP0=0, select bank0
  1654  1581  1303               	bcf	3,6	;RP1=0, select bank0
  1655  1582  07EA               	addwf	sprintf@f,f
  1656  1583                     l3718:
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1659  1583  086A               	movf	sprintf@f,w
  1660  1584  0084               	movwf	4
  1661  1585  160A  158A  2000  160A  118A  	fcall	stringdir
  1662  158A  160A  158A  2493  160A  118A  	fcall	_isdigit
  1663  158F  1803               	btfsc	3,0
  1664  1590  2D92               	goto	u5901
  1665  1591  2D93               	goto	u5900
  1666  1592                     u5901:
  1667  1592  2D51               	goto	l3712
  1668  1593                     u5900:
  1669  1593                     l3720:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1672  1593  1283               	bcf	3,5	;RP0=0, select bank0
  1673  1594  1303               	bcf	3,6	;RP1=0, select bank0
  1674  1595  086A               	movf	sprintf@f,w
  1675  1596  0084               	movwf	4
  1676  1597  160A  158A  2000  160A  118A  	fcall	stringdir
  1677  159C  3A2E               	xorlw	46
  1678  159D  1D03               	skipz
  1679  159E  2DA0               	goto	u5911
  1680  159F  2DA1               	goto	u5910
  1681  15A0                     u5911:
  1682  15A0  2DF3               	goto	l3736
  1683  15A1                     u5910:
  1684  15A1                     l3722:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1687  15A1  1683               	bsf	3,5	;RP0=1, select bank1
  1688  15A2  1303               	bcf	3,6	;RP1=0, select bank1
  1689  15A3  173D               	bsf	(sprintf@flag^(0+128)+1),6
  1690  15A4                     l3724:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1693  15A4  3001               	movlw	1
  1694  15A5  00A8               	movwf	??_sprintf^(0+128)
  1695  15A6  0828               	movf	??_sprintf^(0+128),w
  1696  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  1697  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  1698  15A9  07EA               	addwf	sprintf@f,f
  1699  15AA                     l3726:
  1700                           
  1701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1702  15AA  1683               	bsf	3,5	;RP0=1, select bank1
  1703  15AB  1303               	bcf	3,6	;RP1=0, select bank1
  1704  15AC  01C4               	clrf	sprintf@prec^(0+128)
  1705  15AD  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1708  15AE  2DE1               	goto	l3734
  1709  15AF                     l3728:
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1712  15AF  300A               	movlw	10
  1713  15B0  00F2               	movwf	___wmul@multiplier
  1714  15B1  3000               	movlw	0
  1715  15B2  00F3               	movwf	___wmul@multiplier+1
  1716  15B3  1683               	bsf	3,5	;RP0=1, select bank1
  1717  15B4  1303               	bcf	3,6	;RP1=0, select bank1
  1718  15B5  0845               	movf	(sprintf@prec+1)^(0+128),w
  1719  15B6  00F5               	movwf	___wmul@multiplicand+1
  1720  15B7  0844               	movf	sprintf@prec^(0+128),w
  1721  15B8  00F4               	movwf	___wmul@multiplicand
  1722  15B9  160A  158A  24EA  160A  118A  	fcall	___wmul
  1723  15BE  0873               	movf	?___wmul+1,w
  1724  15BF  1683               	bsf	3,5	;RP0=1, select bank1
  1725  15C0  1303               	bcf	3,6	;RP1=0, select bank1
  1726  15C1  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1727  15C2  0872               	movf	?___wmul,w
  1728  15C3  00C4               	movwf	sprintf@prec^(0+128)
  1729  15C4                     l3730:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1732  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  1733  15C5  1303               	bcf	3,6	;RP1=0, select bank0
  1734  15C6  086A               	movf	sprintf@f,w
  1735  15C7  0084               	movwf	4
  1736  15C8  160A  158A  2000  160A  118A  	fcall	stringdir
  1737  15CD  3ED0               	addlw	208
  1738  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  1739  15CF  1303               	bcf	3,6	;RP1=0, select bank1
  1740  15D0  00A8               	movwf	??_sprintf^(0+128)
  1741  15D1  30FF               	movlw	255
  1742  15D2  1803               	skipnc
  1743  15D3  3000               	movlw	0
  1744  15D4  00A9               	movwf	(??_sprintf^(0+128)+1)
  1745  15D5  0828               	movf	??_sprintf^(0+128),w
  1746  15D6  07C4               	addwf	sprintf@prec^(0+128),f
  1747  15D7  1803               	skipnc
  1748  15D8  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1749  15D9  0829               	movf	(??_sprintf+1)^(0+128),w
  1750  15DA  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1751  15DB                     l3732:
  1752  15DB  3001               	movlw	1
  1753  15DC  00A8               	movwf	??_sprintf^(0+128)
  1754  15DD  0828               	movf	??_sprintf^(0+128),w
  1755  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  1756  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  1757  15E0  07EA               	addwf	sprintf@f,f
  1758  15E1                     l3734:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1761  15E1  1283               	bcf	3,5	;RP0=0, select bank0
  1762  15E2  086A               	movf	sprintf@f,w
  1763  15E3  0084               	movwf	4
  1764  15E4  160A  158A  2000  160A  118A  	fcall	stringdir
  1765  15E9  160A  158A  2493  160A  118A  	fcall	_isdigit
  1766  15EE  1803               	btfsc	3,0
  1767  15EF  2DF1               	goto	u5921
  1768  15F0  2DF2               	goto	u5920
  1769  15F1                     u5921:
  1770  15F1  2DAF               	goto	l3728
  1771  15F2                     u5920:
  1772  15F2  2DFB               	goto	l3742
  1773  15F3                     l3736:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1776  15F3  1683               	bsf	3,5	;RP0=1, select bank1
  1777  15F4  1303               	bcf	3,6	;RP1=0, select bank1
  1778  15F5  01C4               	clrf	sprintf@prec^(0+128)
  1779  15F6  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1780  15F7                     l3738:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1783  15F7  163D               	bsf	(sprintf@flag^(0+128)+1),4
  1784  15F8  2DFB               	goto	l3742
  1785  15F9                     l302:	
  1786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1787                           
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1790  15F9  153D               	bsf	(sprintf@flag^(0+128)+1),2
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1793  15FA  2E19               	goto	l3744
  1794  15FB                     l3742:
  1795  15FB  3001               	movlw	1
  1796  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  1797  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  1798  15FE  07EA               	addwf	sprintf@f,f
  1799  15FF  30FF               	movlw	-1
  1800  1600  076A               	addwf	sprintf@f,w
  1801  1601  0084               	movwf	4
  1802  1602  160A  158A  2000  160A  118A  	fcall	stringdir
  1803  1607  1683               	bsf	3,5	;RP0=1, select bank1
  1804  1608  1303               	bcf	3,6	;RP1=0, select bank1
  1805  1609  00C7               	movwf	sprintf@c^(0+128)
  1806  160A  00A8               	movwf	??_sprintf^(0+128)
  1807  160B  01A9               	clrf	(??_sprintf^(0+128)+1)
  1808                           
  1809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1810                           ; Switch size 1, requested type "simple"
  1811                           ; Number of cases is 1, Range of values is 0 to 0
  1812                           ; switch strategies available:
  1813                           ; Name         Instructions Cycles
  1814                           ; simple_byte            4     3 (average)
  1815                           ; direct_byte           11     8 (fixed)
  1816                           ; jumptable            260     6 (fixed)
  1817                           ;	Chosen strategy is simple_byte
  1818  160C  0829               	movf	(??_sprintf+1)^(0+128),w
  1819  160D  3A00               	xorlw	0	; case 0
  1820  160E  1903               	skipnz
  1821  160F  2E11               	goto	l4092
  1822  1610  2D04               	goto	L1
  1823  1611                     l4092:
  1824                           
  1825                           ; Switch size 1, requested type "simple"
  1826                           ; Number of cases is 2, Range of values is 0 to 102
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte            7     4 (average)
  1830                           ; jumptable            260     6 (fixed)
  1831                           ;	Chosen strategy is simple_byte
  1832  1611  0828               	movf	??_sprintf^(0+128),w
  1833  1612  3A00               	xorlw	0	; case 0
  1834  1613  1903               	skipnz
  1835  1614  2FFD               	goto	L3
  1836  1615  3A66               	xorlw	102	; case 102
  1837  1616  1903               	skipnz
  1838  1617  2DF9               	goto	l302
  1839  1618  2D04               	goto	L1
  1840  1619                     l3744:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1843  1619  3000               	movlw	0
  1844  161A  053C               	andwf	sprintf@flag^(0+128),w
  1845  161B  00A8               	movwf	??_sprintf^(0+128)
  1846  161C  3007               	movlw	7
  1847  161D  053D               	andwf	(sprintf@flag+1)^(0+128),w
  1848  161E  00A9               	movwf	(??_sprintf+1)^(0+128)
  1849  161F  0828               	movf	??_sprintf^(0+128),w
  1850  1620  0429               	iorwf	(??_sprintf^(0+128)+1),w
  1851  1621  1903               	btfsc	3,2
  1852  1622  2E24               	goto	u5931
  1853  1623  2E27               	goto	u5930
  1854  1624                     u5931:
  1855  1624  120A  118A  2C32   	goto	l3918
  1856  1627                     u5930:
  1857  1627                     l3746:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1860  1627  1E3D               	btfss	(sprintf@flag+1)^(0+128),4
  1861  1628  2E2A               	goto	u5941
  1862  1629  2E2B               	goto	u5940
  1863  162A                     u5941:
  1864  162A  2E2F               	goto	l3750
  1865  162B                     u5940:
  1866  162B                     l3748:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1869  162B  3006               	movlw	6
  1870  162C  00C4               	movwf	sprintf@prec^(0+128)
  1871  162D  3000               	movlw	0
  1872  162E  00C5               	movwf	(sprintf@prec^(0+128)+1)
  1873  162F                     l3750:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1876  162F  0831               	movf	sprintf@ap^(0+128),w
  1877  1630  0084               	movwf	4
  1878  1631  1383               	bcf	3,7	;select IRP bank0
  1879  1632  0800               	movf	0,w
  1880  1633  00C0               	movwf	sprintf@fval^(0+128)
  1881  1634  0A84               	incf	4,f
  1882  1635  0800               	movf	0,w
  1883  1636  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1884  1637  0A84               	incf	4,f
  1885  1638  0800               	movf	0,w
  1886  1639  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1887  163A  0A84               	incf	4,f
  1888  163B  0800               	movf	0,w
  1889  163C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1890  163D                     l3752:
  1891  163D  3004               	movlw	4
  1892  163E  00A8               	movwf	??_sprintf^(0+128)
  1893  163F  0828               	movf	??_sprintf^(0+128),w
  1894  1640  07B1               	addwf	sprintf@ap^(0+128),f
  1895  1641                     l3754:
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1898  1641  0843               	movf	(sprintf@fval+3)^(0+128),w
  1899  1642  00F5               	movwf	___flge@ff1+3
  1900  1643  0842               	movf	(sprintf@fval+2)^(0+128),w
  1901  1644  00F4               	movwf	___flge@ff1+2
  1902  1645  0841               	movf	(sprintf@fval+1)^(0+128),w
  1903  1646  00F3               	movwf	___flge@ff1+1
  1904  1647  0840               	movf	sprintf@fval^(0+128),w
  1905  1648  00F2               	movwf	___flge@ff1
  1906  1649  3000               	movlw	0
  1907  164A  00F9               	movwf	___flge@ff2+3
  1908  164B  3000               	movlw	0
  1909  164C  00F8               	movwf	___flge@ff2+2
  1910  164D  3000               	movlw	0
  1911  164E  00F7               	movwf	___flge@ff2+1
  1912  164F  3000               	movlw	0
  1913  1650  00F6               	movwf	___flge@ff2
  1914  1651  160A  118A  2015  160A  118A  	fcall	___flge
  1915  1656  1803               	btfsc	3,0
  1916  1657  2E59               	goto	u5951
  1917  1658  2E5A               	goto	u5950
  1918  1659                     u5951:
  1919  1659  2E77               	goto	l3760
  1920  165A                     u5950:
  1921  165A                     l3756:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1924  165A  1683               	bsf	3,5	;RP0=1, select bank1
  1925  165B  1303               	bcf	3,6	;RP1=0, select bank1
  1926  165C  0843               	movf	(sprintf@fval+3)^(0+128),w
  1927  165D  00F5               	movwf	___flneg@f1+3
  1928  165E  0842               	movf	(sprintf@fval+2)^(0+128),w
  1929  165F  00F4               	movwf	___flneg@f1+2
  1930  1660  0841               	movf	(sprintf@fval+1)^(0+128),w
  1931  1661  00F3               	movwf	___flneg@f1+1
  1932  1662  0840               	movf	sprintf@fval^(0+128),w
  1933  1663  00F2               	movwf	___flneg@f1
  1934  1664  120A  158A  2000  160A  118A  	fcall	___flneg
  1935  1669  0875               	movf	?___flneg+3,w
  1936  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1937  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1938  166C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1939  166D  0874               	movf	?___flneg+2,w
  1940  166E  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1941  166F  0873               	movf	?___flneg+1,w
  1942  1670  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1943  1671  0872               	movf	?___flneg,w
  1944  1672  00C0               	movwf	sprintf@fval^(0+128)
  1945  1673                     l3758:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1948  1673  3003               	movlw	3
  1949  1674  04BC               	iorwf	sprintf@flag^(0+128),f
  1950  1675  3000               	movlw	0
  1951  1676  04BD               	iorwf	(sprintf@flag+1)^(0+128),f
  1952  1677                     l3760:
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1955  1677  1683               	bsf	3,5	;RP0=1, select bank1
  1956  1678  1303               	bcf	3,6	;RP1=0, select bank1
  1957  1679  01BA               	clrf	sprintf@eexp^(0+128)
  1958  167A  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  1959  167B                     l3762:
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1962  167B  0843               	movf	(sprintf@fval+3)^(0+128),w
  1963  167C  00F5               	movwf	___fleq@ff1+3
  1964  167D  0842               	movf	(sprintf@fval+2)^(0+128),w
  1965  167E  00F4               	movwf	___fleq@ff1+2
  1966  167F  0841               	movf	(sprintf@fval+1)^(0+128),w
  1967  1680  00F3               	movwf	___fleq@ff1+1
  1968  1681  0840               	movf	sprintf@fval^(0+128),w
  1969  1682  00F2               	movwf	___fleq@ff1
  1970  1683  3000               	movlw	0
  1971  1684  00F9               	movwf	___fleq@ff2+3
  1972  1685  3000               	movlw	0
  1973  1686  00F8               	movwf	___fleq@ff2+2
  1974  1687  3000               	movlw	0
  1975  1688  00F7               	movwf	___fleq@ff2+1
  1976  1689  3000               	movlw	0
  1977  168A  00F6               	movwf	___fleq@ff2
  1978  168B  160A  158A  25BD  160A  118A  	fcall	___fleq
  1979  1690  1803               	btfsc	3,0
  1980  1691  2E93               	goto	u5961
  1981  1692  2E94               	goto	u5960
  1982  1693                     u5961:
  1983  1693  2F94               	goto	l3788
  1984  1694                     u5960:
  1985  1694                     l3764:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1988  1694  1003               	clrc
  1989  1695  1683               	bsf	3,5	;RP0=1, select bank1
  1990  1696  1303               	bcf	3,6	;RP1=0, select bank1
  1991  1697  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  1992  1698  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  1993  1699  3E82               	addlw	130
  1994  169A  00BA               	movwf	sprintf@eexp^(0+128)
  1995  169B  30FF               	movlw	255
  1996  169C  1803               	skipnc
  1997  169D  3000               	movlw	0
  1998  169E  00BB               	movwf	(sprintf@eexp^(0+128)+1)
  1999  169F                     l3766:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2002  169F  30FF               	movlw	255
  2003  16A0  07BA               	addwf	sprintf@eexp^(0+128),f
  2004  16A1  1803               	skipnc
  2005  16A2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2006  16A3  30FF               	movlw	255
  2007  16A4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2008  16A5                     l3768:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2011  16A5  3003               	movlw	3
  2012  16A6  00F2               	movwf	___wmul@multiplier
  2013  16A7  3000               	movlw	0
  2014  16A8  00F3               	movwf	___wmul@multiplier+1
  2015  16A9  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2016  16AA  00F5               	movwf	___wmul@multiplicand+1
  2017  16AB  083A               	movf	sprintf@eexp^(0+128),w
  2018  16AC  00F4               	movwf	___wmul@multiplicand
  2019  16AD  160A  158A  24EA  160A  118A  	fcall	___wmul
  2020  16B2  0873               	movf	?___wmul+1,w
  2021  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  2022  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  2023  16B5  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  2024  16B6  0872               	movf	?___wmul,w
  2025  16B7  00BA               	movwf	sprintf@eexp^(0+128)
  2026  16B8                     l3770:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2029  16B8  300A               	movlw	10
  2030  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2031  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2032  16BB  00A0               	movwf	___awdiv@divisor
  2033  16BC  3000               	movlw	0
  2034  16BD  00A1               	movwf	___awdiv@divisor+1
  2035  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  2036  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  2037  16C0  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2038  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  2039  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  2040  16C3  00A3               	movwf	___awdiv@dividend+1
  2041  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  2042  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  2043  16C6  083A               	movf	sprintf@eexp^(0+128),w
  2044  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2045  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2046  16C9  00A2               	movwf	___awdiv@dividend
  2047  16CA  160A  158A  271B  160A  118A  	fcall	___awdiv
  2048  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2049  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  2050  16D1  0821               	movf	?___awdiv+1,w
  2051  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  2052  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  2053  16D4  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  2054  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  2055  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  2056  16D7  0820               	movf	?___awdiv,w
  2057  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  2058  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  2059  16DA  00BA               	movwf	sprintf@eexp^(0+128)
  2060  16DB                     l3772:
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2063  16DB  1FBB               	btfss	(sprintf@eexp+1)^(0+128),7
  2064  16DC  2EDE               	goto	u5971
  2065  16DD  2EDF               	goto	u5970
  2066  16DE                     u5971:
  2067  16DE  2EE5               	goto	l3776
  2068  16DF                     u5970:
  2069  16DF                     l3774:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2072  16DF  30FF               	movlw	255
  2073  16E0  07BA               	addwf	sprintf@eexp^(0+128),f
  2074  16E1  1803               	skipnc
  2075  16E2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2076  16E3  30FF               	movlw	255
  2077  16E4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2078  16E5                     l3776:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2081  16E5  033A               	decf	sprintf@eexp^(0+128),w
  2082  16E6  3AFF               	xorlw	255
  2083  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  2084  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2085  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2086  16EE  0845               	movf	?_scale+3,w
  2087  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2088  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2089  16F1  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2090  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2091  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2092  16F4  0844               	movf	?_scale+2,w
  2093  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2094  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2095  16F7  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2096  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2097  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2098  16FA  0843               	movf	?_scale+1,w
  2099  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2100  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2101  16FD  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2102  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2103  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2104  1700  0842               	movf	?_scale,w
  2105  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2106  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2107  1703  00B6               	movwf	sprintf@tmpval^(0+128)
  2108  1704                     l3778:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2111  1704  0843               	movf	(sprintf@fval+3)^(0+128),w
  2112  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2113  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2114  1707  00AB               	movwf	___flmul@b+3
  2115  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2116  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2117  170A  0842               	movf	(sprintf@fval+2)^(0+128),w
  2118  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2119  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2120  170D  00AA               	movwf	___flmul@b+2
  2121  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2122  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2123  1710  0841               	movf	(sprintf@fval+1)^(0+128),w
  2124  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2125  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2126  1713  00A9               	movwf	___flmul@b+1
  2127  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2128  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2129  1716  0840               	movf	sprintf@fval^(0+128),w
  2130  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2131  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2132  1719  00A8               	movwf	___flmul@b
  2133  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2134  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2135  171C  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2136  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2137  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2138  171F  00AF               	movwf	___flmul@a+3
  2139  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2140  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2141  1722  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2142  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2143  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2144  1725  00AE               	movwf	___flmul@a+2
  2145  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2146  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2147  1728  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2148  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2149  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2150  172B  00AD               	movwf	___flmul@a+1
  2151  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2152  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2153  172E  0836               	movf	sprintf@tmpval^(0+128),w
  2154  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2155  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2156  1731  00AC               	movwf	___flmul@a
  2157  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2158  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2159  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2160  1739  082B               	movf	?___flmul+3,w
  2161  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2162  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2163  173C  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2164  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2165  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2166  173F  082A               	movf	?___flmul+2,w
  2167  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2168  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2169  1742  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2170  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2171  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2172  1745  0829               	movf	?___flmul+1,w
  2173  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2174  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2175  1748  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2176  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2177  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2178  174B  0828               	movf	?___flmul,w
  2179  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2180  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2181  174E  00B6               	movwf	sprintf@tmpval^(0+128)
  2182  174F                     l3780:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2185  174F  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2186  1750  00F5               	movwf	___flge@ff1+3
  2187  1751  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2188  1752  00F4               	movwf	___flge@ff1+2
  2189  1753  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2190  1754  00F3               	movwf	___flge@ff1+1
  2191  1755  0836               	movf	sprintf@tmpval^(0+128),w
  2192  1756  00F2               	movwf	___flge@ff1
  2193  1757  303F               	movlw	63
  2194  1758  00F9               	movwf	___flge@ff2+3
  2195  1759  3080               	movlw	128
  2196  175A  00F8               	movwf	___flge@ff2+2
  2197  175B  3000               	movlw	0
  2198  175C  00F7               	movwf	___flge@ff2+1
  2199  175D  3000               	movlw	0
  2200  175E  00F6               	movwf	___flge@ff2
  2201  175F  160A  118A  2015  160A  118A  	fcall	___flge
  2202  1764  1803               	btfsc	3,0
  2203  1765  2F67               	goto	u5981
  2204  1766  2F68               	goto	u5980
  2205  1767                     u5981:
  2206  1767  2F71               	goto	l3784
  2207  1768                     u5980:
  2208  1768                     l3782:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2211  1768  30FF               	movlw	255
  2212  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2213  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2214  176B  07BA               	addwf	sprintf@eexp^(0+128),f
  2215  176C  1803               	skipnc
  2216  176D  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2217  176E  30FF               	movlw	255
  2218  176F  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2219  1770  2F94               	goto	l3788
  2220  1771                     l3784:
  2221  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2222  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2223  1773  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2224  1774  00F5               	movwf	___flge@ff1+3
  2225  1775  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2226  1776  00F4               	movwf	___flge@ff1+2
  2227  1777  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2228  1778  00F3               	movwf	___flge@ff1+1
  2229  1779  0836               	movf	sprintf@tmpval^(0+128),w
  2230  177A  00F2               	movwf	___flge@ff1
  2231  177B  3041               	movlw	65
  2232  177C  00F9               	movwf	___flge@ff2+3
  2233  177D  3020               	movlw	32
  2234  177E  00F8               	movwf	___flge@ff2+2
  2235  177F  3000               	movlw	0
  2236  1780  00F7               	movwf	___flge@ff2+1
  2237  1781  3000               	movlw	0
  2238  1782  00F6               	movwf	___flge@ff2
  2239  1783  160A  118A  2015  160A  118A  	fcall	___flge
  2240  1788  1C03               	btfss	3,0
  2241  1789  2F8B               	goto	u5991
  2242  178A  2F8C               	goto	u5990
  2243  178B                     u5991:
  2244  178B  2F94               	goto	l3788
  2245  178C                     u5990:
  2246  178C                     l3786:
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2249  178C  3001               	movlw	1
  2250  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2251  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2252  178F  07BA               	addwf	sprintf@eexp^(0+128),f
  2253  1790  1803               	skipnc
  2254  1791  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2255  1792  3000               	movlw	0
  2256  1793  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2257  1794                     l3788:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2260  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2261  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2262  1796  0845               	movf	(sprintf@prec+1)^(0+128),w
  2263  1797  3A80               	xorlw	128
  2264  1798  00FF               	movwf	btemp+1
  2265  1799  3080               	movlw	128
  2266  179A  027F               	subwf	btemp+1,w
  2267  179B  1D03               	skipz
  2268  179C  2F9F               	goto	u6005
  2269  179D  300D               	movlw	13
  2270  179E  0244               	subwf	sprintf@prec^(0+128),w
  2271  179F                     u6005:
  2272  179F  1803               	skipnc
  2273  17A0  2FA2               	goto	u6001
  2274  17A1  2FA3               	goto	u6000
  2275  17A2                     u6001:
  2276  17A2  2FEA               	goto	l3792
  2277  17A3                     u6000:
  2278  17A3                     l3790:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2281  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2282  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2283  17A5  0844               	movf	sprintf@prec^(0+128),w
  2284  17A6  160A  118A  22F0  160A  118A  	fcall	_fround
  2285  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2286  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2287  17AD  0845               	movf	?_fround+3,w
  2288  17AE  00D9               	movwf	___fladd@b+3
  2289  17AF  0844               	movf	?_fround+2,w
  2290  17B0  00D8               	movwf	___fladd@b+2
  2291  17B1  0843               	movf	?_fround+1,w
  2292  17B2  00D7               	movwf	___fladd@b+1
  2293  17B3  0842               	movf	?_fround,w
  2294  17B4  00D6               	movwf	___fladd@b
  2295  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2296  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2297  17B7  0843               	movf	(sprintf@fval+3)^(0+128),w
  2298  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2299  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2300  17BA  00DD               	movwf	___fladd@a+3
  2301  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2302  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2303  17BD  0842               	movf	(sprintf@fval+2)^(0+128),w
  2304  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2305  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2306  17C0  00DC               	movwf	___fladd@a+2
  2307  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2308  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2309  17C3  0841               	movf	(sprintf@fval+1)^(0+128),w
  2310  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2311  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2312  17C6  00DB               	movwf	___fladd@a+1
  2313  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2314  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2315  17C9  0840               	movf	sprintf@fval^(0+128),w
  2316  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2317  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2318  17CC  00DA               	movwf	___fladd@a
  2319  17CD  120A  118A  254D  160A  118A  	fcall	___fladd
  2320  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2321  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2322  17D4  0859               	movf	?___fladd+3,w
  2323  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2324  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2325  17D7  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2326  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2327  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2328  17DA  0858               	movf	?___fladd+2,w
  2329  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2330  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2331  17DD  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2332  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2333  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2334  17E0  0857               	movf	?___fladd+1,w
  2335  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2336  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2337  17E3  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2338  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2339  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2340  17E6  0856               	movf	?___fladd,w
  2341  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2342  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2343  17E9  00C0               	movwf	sprintf@fval^(0+128)
  2344  17EA                     l3792:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2347  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2348  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2349  17EC  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2350  17ED  3A80               	xorlw	128
  2351  17EE  00FF               	movwf	btemp+1
  2352  17EF  3080               	movlw	128
  2353  17F0  027F               	subwf	btemp+1,w
  2354  17F1  1D03               	skipz
  2355  17F2  2FF5               	goto	u6015
  2356  17F3  300A               	movlw	10
  2357  17F4  023A               	subwf	sprintf@eexp^(0+128),w
  2358  17F5                     u6015:
  2359  17F5  1803               	skipnc
  2360  17F6  2FFA               	goto	u6011
  2361  17F7  120A  118A  281D   	goto	u6010
  2362  17FA                     u6011:
  2363  17FA  120A  118A  286E   	goto	l3800
  2364  17FD                     L3:
  2365  17FD                     L2:
  2366  17FD  120A  118A  2D48   	ljmp	l3982
  2367                           
  2368                           	psect	text2
  2369  0C9D                     __ptext2:	
  2370 ;; *************** function _scale *****************
  2371 ;; Defined at:
  2372 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  scl             1    wreg     char 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  scl             1   52[BANK0 ] char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  4   34[BANK0 ] char 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         0       4       0       0       0
  2387 ;;      Locals:         0       5       0       0       0
  2388 ;;      Temps:          0      10       0       0       0
  2389 ;;      Totals:         0      19       0       0       0
  2390 ;;Total ram usage:       19 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    3
  2393 ;; This function calls:
  2394 ;;		___awdiv
  2395 ;;		___awmod
  2396 ;;		___flmul
  2397 ;; This function is called by:
  2398 ;;		_sprintf
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           
  2403                           ;psect for function _scale
  2404  0C9D                     _scale:
  2405                           
  2406                           ;incstack = 0
  2407                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2408                           ;scale@scl stored from wreg
  2409  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0C9F  00D4               	movwf	scale@scl
  2412  0CA0                     l2806:
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2415  0CA0  1FD4               	btfss	scale@scl,7
  2416  0CA1  2CA3               	goto	u4131
  2417  0CA2  2CA4               	goto	u4130
  2418  0CA3                     u4131:
  2419  0CA3  2E53               	goto	l2828
  2420  0CA4                     u4130:
  2421  0CA4                     l2808:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2424  0CA4  09D4               	comf	scale@scl,f
  2425  0CA5  0AD4               	incf	scale@scl,f
  2426  0CA6                     l2810:
  2427                           
  2428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2429  0CA6  0854               	movf	scale@scl,w
  2430  0CA7  3A80               	xorlw	128
  2431  0CA8  3E12               	addlw	-238
  2432  0CA9  1C03               	skipc
  2433  0CAA  2CAC               	goto	u4141
  2434  0CAB  2CAD               	goto	u4140
  2435  0CAC                     u4141:
  2436  0CAC  2D97               	goto	l2818
  2437  0CAD                     u4140:
  2438  0CAD                     l2812:
  2439                           
  2440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2441  0CAD  300A               	movlw	10
  2442  0CAE  00A0               	movwf	___awdiv@divisor
  2443  0CAF  3000               	movlw	0
  2444  0CB0  00A1               	movwf	___awdiv@divisor+1
  2445  0CB1  0854               	movf	scale@scl,w
  2446  0CB2  00F4               	movwf	___awmod@dividend
  2447  0CB3  01F5               	clrf	___awmod@dividend+1
  2448  0CB4  1BF4               	btfsc	___awmod@dividend,7
  2449  0CB5  03F5               	decf	___awmod@dividend+1,f
  2450  0CB6  3064               	movlw	100
  2451  0CB7  00F2               	movwf	___awmod@divisor
  2452  0CB8  3000               	movlw	0
  2453  0CB9  00F3               	movwf	___awmod@divisor+1
  2454  0CBA  120A  158A  200B  120A  158A  	fcall	___awmod
  2455  0CBF  0873               	movf	?___awmod+1,w
  2456  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0CC2  00A3               	movwf	___awdiv@dividend+1
  2459  0CC3  0872               	movf	?___awmod,w
  2460  0CC4  00A2               	movwf	___awdiv@dividend
  2461  0CC5  160A  158A  271B  120A  158A  	fcall	___awdiv
  2462  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2463  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0CCC  0820               	movf	?___awdiv,w
  2465  0CCD  00C6               	movwf	??_scale
  2466  0CCE  3001               	movlw	1
  2467  0CCF                     u4155:
  2468  0CCF  1003               	clrc
  2469  0CD0  0DC6               	rlf	??_scale,f
  2470  0CD1  3EFF               	addlw	-1
  2471  0CD2  1D03               	skipz
  2472  0CD3  2CCF               	goto	u4155
  2473  0CD4  1003               	clrc
  2474  0CD5  0D46               	rlf	??_scale,w
  2475  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2476  0CD7  0084               	movwf	4
  2477  0CD8  160A  158A  2000  120A  158A  	fcall	stringdir
  2478  0CDD  00C7               	movwf	??_scale+1
  2479  0CDE  160A  158A  2000  120A  158A  	fcall	stringdir
  2480  0CE3  00C8               	movwf	??_scale+2
  2481  0CE4  160A  158A  2000  120A  158A  	fcall	stringdir
  2482  0CE9  00C9               	movwf	??_scale+3
  2483  0CEA  160A  158A  2000  120A  158A  	fcall	stringdir
  2484  0CEF  00CA               	movwf	??_scale+4
  2485  0CF0  084A               	movf	??_scale+4,w
  2486  0CF1  00AB               	movwf	___flmul@b+3
  2487  0CF2  0849               	movf	??_scale+3,w
  2488  0CF3  00AA               	movwf	___flmul@b+2
  2489  0CF4  0848               	movf	??_scale+2,w
  2490  0CF5  00A9               	movwf	___flmul@b+1
  2491  0CF6  0847               	movf	??_scale+1,w
  2492  0CF7  00A8               	movwf	___flmul@b
  2493  0CF8  3064               	movlw	100
  2494  0CF9  00A0               	movwf	___awdiv@divisor
  2495  0CFA  3000               	movlw	0
  2496  0CFB  00A1               	movwf	___awdiv@divisor+1
  2497  0CFC  0854               	movf	scale@scl,w
  2498  0CFD  00A2               	movwf	___awdiv@dividend
  2499  0CFE  01A3               	clrf	___awdiv@dividend+1
  2500  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2501  0D00  03A3               	decf	___awdiv@dividend+1,f
  2502  0D01  160A  158A  271B  120A  158A  	fcall	___awdiv
  2503  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0D08  0820               	movf	?___awdiv,w
  2506  0D09  00CB               	movwf	??_scale+5
  2507  0D0A  3001               	movlw	1
  2508  0D0B                     u4165:
  2509  0D0B  1003               	clrc
  2510  0D0C  0DCB               	rlf	??_scale+5,f
  2511  0D0D  3EFF               	addlw	-1
  2512  0D0E  1D03               	skipz
  2513  0D0F  2D0B               	goto	u4165
  2514  0D10  1003               	clrc
  2515  0D11  0D4B               	rlf	??_scale+5,w
  2516  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2517  0D13  0084               	movwf	4
  2518  0D14  160A  158A  2000  120A  158A  	fcall	stringdir
  2519  0D19  00CC               	movwf	??_scale+6
  2520  0D1A  160A  158A  2000  120A  158A  	fcall	stringdir
  2521  0D1F  00CD               	movwf	??_scale+7
  2522  0D20  160A  158A  2000  120A  158A  	fcall	stringdir
  2523  0D25  00CE               	movwf	??_scale+8
  2524  0D26  160A  158A  2000  120A  158A  	fcall	stringdir
  2525  0D2B  00CF               	movwf	??_scale+9
  2526  0D2C  084F               	movf	??_scale+9,w
  2527  0D2D  00AF               	movwf	___flmul@a+3
  2528  0D2E  084E               	movf	??_scale+8,w
  2529  0D2F  00AE               	movwf	___flmul@a+2
  2530  0D30  084D               	movf	??_scale+7,w
  2531  0D31  00AD               	movwf	___flmul@a+1
  2532  0D32  084C               	movf	??_scale+6,w
  2533  0D33  00AC               	movwf	___flmul@a
  2534  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2535  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0D3B  082B               	movf	?___flmul+3,w
  2538  0D3C  00D3               	movwf	_scale$1126+3
  2539  0D3D  082A               	movf	?___flmul+2,w
  2540  0D3E  00D2               	movwf	_scale$1126+2
  2541  0D3F  0829               	movf	?___flmul+1,w
  2542  0D40  00D1               	movwf	_scale$1126+1
  2543  0D41  0828               	movf	?___flmul,w
  2544  0D42  00D0               	movwf	_scale$1126
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2547  0D43  300A               	movlw	10
  2548  0D44  00F2               	movwf	___awmod@divisor
  2549  0D45  3000               	movlw	0
  2550  0D46  00F3               	movwf	___awmod@divisor+1
  2551  0D47  0854               	movf	scale@scl,w
  2552  0D48  00F4               	movwf	___awmod@dividend
  2553  0D49  01F5               	clrf	___awmod@dividend+1
  2554  0D4A  1BF4               	btfsc	___awmod@dividend,7
  2555  0D4B  03F5               	decf	___awmod@dividend+1,f
  2556  0D4C  120A  158A  200B  120A  158A  	fcall	___awmod
  2557  0D51  0872               	movf	?___awmod,w
  2558  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2559  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2560  0D54  00C6               	movwf	??_scale
  2561  0D55  3001               	movlw	1
  2562  0D56                     u4175:
  2563  0D56  1003               	clrc
  2564  0D57  0DC6               	rlf	??_scale,f
  2565  0D58  3EFF               	addlw	-1
  2566  0D59  1D03               	skipz
  2567  0D5A  2D56               	goto	u4175
  2568  0D5B  1003               	clrc
  2569  0D5C  0D46               	rlf	??_scale,w
  2570  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2571  0D5E  0084               	movwf	4
  2572  0D5F  160A  158A  2000  120A  158A  	fcall	stringdir
  2573  0D64  00C7               	movwf	??_scale+1
  2574  0D65  160A  158A  2000  120A  158A  	fcall	stringdir
  2575  0D6A  00C8               	movwf	??_scale+2
  2576  0D6B  160A  158A  2000  120A  158A  	fcall	stringdir
  2577  0D70  00C9               	movwf	??_scale+3
  2578  0D71  160A  158A  2000  120A  158A  	fcall	stringdir
  2579  0D76  00CA               	movwf	??_scale+4
  2580  0D77  084A               	movf	??_scale+4,w
  2581  0D78  00AB               	movwf	___flmul@b+3
  2582  0D79  0849               	movf	??_scale+3,w
  2583  0D7A  00AA               	movwf	___flmul@b+2
  2584  0D7B  0848               	movf	??_scale+2,w
  2585  0D7C  00A9               	movwf	___flmul@b+1
  2586  0D7D  0847               	movf	??_scale+1,w
  2587  0D7E  00A8               	movwf	___flmul@b
  2588  0D7F  0853               	movf	_scale$1126+3,w
  2589  0D80  00AF               	movwf	___flmul@a+3
  2590  0D81  0852               	movf	_scale$1126+2,w
  2591  0D82  00AE               	movwf	___flmul@a+2
  2592  0D83  0851               	movf	_scale$1126+1,w
  2593  0D84  00AD               	movwf	___flmul@a+1
  2594  0D85  0850               	movf	_scale$1126,w
  2595  0D86  00AC               	movwf	___flmul@a
  2596  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2597  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2598  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2599  0D8E  082B               	movf	?___flmul+3,w
  2600  0D8F  00C5               	movwf	?_scale+3
  2601  0D90  082A               	movf	?___flmul+2,w
  2602  0D91  00C4               	movwf	?_scale+2
  2603  0D92  0829               	movf	?___flmul+1,w
  2604  0D93  00C3               	movwf	?_scale+1
  2605  0D94  0828               	movf	?___flmul,w
  2606  0D95  00C2               	movwf	?_scale
  2607  0D96  2FFF               	goto	l274
  2608  0D97                     l2818:
  2609  0D97  0854               	movf	scale@scl,w
  2610  0D98  3A80               	xorlw	128
  2611  0D99  3E75               	addlw	-139
  2612  0D9A  1C03               	skipc
  2613  0D9B  2D9D               	goto	u4181
  2614  0D9C  2D9E               	goto	u4180
  2615  0D9D                     u4181:
  2616  0D9D  2E26               	goto	l2824
  2617  0D9E                     u4180:
  2618  0D9E                     l2820:
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2621  0D9E  300A               	movlw	10
  2622  0D9F  00F2               	movwf	___awmod@divisor
  2623  0DA0  3000               	movlw	0
  2624  0DA1  00F3               	movwf	___awmod@divisor+1
  2625  0DA2  0854               	movf	scale@scl,w
  2626  0DA3  00F4               	movwf	___awmod@dividend
  2627  0DA4  01F5               	clrf	___awmod@dividend+1
  2628  0DA5  1BF4               	btfsc	___awmod@dividend,7
  2629  0DA6  03F5               	decf	___awmod@dividend+1,f
  2630  0DA7  120A  158A  200B  120A  158A  	fcall	___awmod
  2631  0DAC  0872               	movf	?___awmod,w
  2632  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2634  0DAF  00C6               	movwf	??_scale
  2635  0DB0  3001               	movlw	1
  2636  0DB1                     u4195:
  2637  0DB1  1003               	clrc
  2638  0DB2  0DC6               	rlf	??_scale,f
  2639  0DB3  3EFF               	addlw	-1
  2640  0DB4  1D03               	skipz
  2641  0DB5  2DB1               	goto	u4195
  2642  0DB6  1003               	clrc
  2643  0DB7  0D46               	rlf	??_scale,w
  2644  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2645  0DB9  0084               	movwf	4
  2646  0DBA  160A  158A  2000  120A  158A  	fcall	stringdir
  2647  0DBF  00C7               	movwf	??_scale+1
  2648  0DC0  160A  158A  2000  120A  158A  	fcall	stringdir
  2649  0DC5  00C8               	movwf	??_scale+2
  2650  0DC6  160A  158A  2000  120A  158A  	fcall	stringdir
  2651  0DCB  00C9               	movwf	??_scale+3
  2652  0DCC  160A  158A  2000  120A  158A  	fcall	stringdir
  2653  0DD1  00CA               	movwf	??_scale+4
  2654  0DD2  084A               	movf	??_scale+4,w
  2655  0DD3  00AB               	movwf	___flmul@b+3
  2656  0DD4  0849               	movf	??_scale+3,w
  2657  0DD5  00AA               	movwf	___flmul@b+2
  2658  0DD6  0848               	movf	??_scale+2,w
  2659  0DD7  00A9               	movwf	___flmul@b+1
  2660  0DD8  0847               	movf	??_scale+1,w
  2661  0DD9  00A8               	movwf	___flmul@b
  2662  0DDA  300A               	movlw	10
  2663  0DDB  00A0               	movwf	___awdiv@divisor
  2664  0DDC  3000               	movlw	0
  2665  0DDD  00A1               	movwf	___awdiv@divisor+1
  2666  0DDE  0854               	movf	scale@scl,w
  2667  0DDF  00A2               	movwf	___awdiv@dividend
  2668  0DE0  01A3               	clrf	___awdiv@dividend+1
  2669  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2670  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2671  0DE3  160A  158A  271B  120A  158A  	fcall	___awdiv
  2672  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0DEA  0820               	movf	?___awdiv,w
  2675  0DEB  00CB               	movwf	??_scale+5
  2676  0DEC  3001               	movlw	1
  2677  0DED                     u4205:
  2678  0DED  1003               	clrc
  2679  0DEE  0DCB               	rlf	??_scale+5,f
  2680  0DEF  3EFF               	addlw	-1
  2681  0DF0  1D03               	skipz
  2682  0DF1  2DED               	goto	u4205
  2683  0DF2  1003               	clrc
  2684  0DF3  0D4B               	rlf	??_scale+5,w
  2685  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2686  0DF5  0084               	movwf	4
  2687  0DF6  160A  158A  2000  120A  158A  	fcall	stringdir
  2688  0DFB  00CC               	movwf	??_scale+6
  2689  0DFC  160A  158A  2000  120A  158A  	fcall	stringdir
  2690  0E01  00CD               	movwf	??_scale+7
  2691  0E02  160A  158A  2000  120A  158A  	fcall	stringdir
  2692  0E07  00CE               	movwf	??_scale+8
  2693  0E08  160A  158A  2000  120A  158A  	fcall	stringdir
  2694  0E0D  00CF               	movwf	??_scale+9
  2695  0E0E  084F               	movf	??_scale+9,w
  2696  0E0F  00AF               	movwf	___flmul@a+3
  2697  0E10  084E               	movf	??_scale+8,w
  2698  0E11  00AE               	movwf	___flmul@a+2
  2699  0E12  084D               	movf	??_scale+7,w
  2700  0E13  00AD               	movwf	___flmul@a+1
  2701  0E14  084C               	movf	??_scale+6,w
  2702  0E15  00AC               	movwf	___flmul@a
  2703  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2704  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0E1D  082B               	movf	?___flmul+3,w
  2707  0E1E  00C5               	movwf	?_scale+3
  2708  0E1F  082A               	movf	?___flmul+2,w
  2709  0E20  00C4               	movwf	?_scale+2
  2710  0E21  0829               	movf	?___flmul+1,w
  2711  0E22  00C3               	movwf	?_scale+1
  2712  0E23  0828               	movf	?___flmul,w
  2713  0E24  00C2               	movwf	?_scale
  2714  0E25  2FFF               	goto	l274
  2715  0E26                     l2824:
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2718  0E26  0854               	movf	scale@scl,w
  2719  0E27  00C6               	movwf	??_scale
  2720  0E28  3001               	movlw	1
  2721  0E29                     u4215:
  2722  0E29  1003               	clrc
  2723  0E2A  0DC6               	rlf	??_scale,f
  2724  0E2B  3EFF               	addlw	-1
  2725  0E2C  1D03               	skipz
  2726  0E2D  2E29               	goto	u4215
  2727  0E2E  1003               	clrc
  2728  0E2F  0D46               	rlf	??_scale,w
  2729  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2730  0E31  0084               	movwf	4
  2731  0E32  160A  158A  2000  120A  158A  	fcall	stringdir
  2732  0E37  00C7               	movwf	??_scale+1
  2733  0E38  160A  158A  2000  120A  158A  	fcall	stringdir
  2734  0E3D  00C8               	movwf	??_scale+2
  2735  0E3E  160A  158A  2000  120A  158A  	fcall	stringdir
  2736  0E43  00C9               	movwf	??_scale+3
  2737  0E44  160A  158A  2000  120A  158A  	fcall	stringdir
  2738  0E49  00CA               	movwf	??_scale+4
  2739  0E4A  084A               	movf	??_scale+4,w
  2740  0E4B  00C5               	movwf	?_scale+3
  2741  0E4C  0849               	movf	??_scale+3,w
  2742  0E4D  00C4               	movwf	?_scale+2
  2743  0E4E  0848               	movf	??_scale+2,w
  2744  0E4F  00C3               	movwf	?_scale+1
  2745  0E50  0847               	movf	??_scale+1,w
  2746  0E51  00C2               	movwf	?_scale
  2747  0E52  2FFF               	goto	l274
  2748  0E53                     l2828:
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2751  0E53  0854               	movf	scale@scl,w
  2752  0E54  3A80               	xorlw	128
  2753  0E55  3E12               	addlw	-238
  2754  0E56  1C03               	skipc
  2755  0E57  2E59               	goto	u4221
  2756  0E58  2E5A               	goto	u4220
  2757  0E59                     u4221:
  2758  0E59  2F44               	goto	l2836
  2759  0E5A                     u4220:
  2760  0E5A                     l2830:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2763  0E5A  300A               	movlw	10
  2764  0E5B  00A0               	movwf	___awdiv@divisor
  2765  0E5C  3000               	movlw	0
  2766  0E5D  00A1               	movwf	___awdiv@divisor+1
  2767  0E5E  0854               	movf	scale@scl,w
  2768  0E5F  00F4               	movwf	___awmod@dividend
  2769  0E60  01F5               	clrf	___awmod@dividend+1
  2770  0E61  1BF4               	btfsc	___awmod@dividend,7
  2771  0E62  03F5               	decf	___awmod@dividend+1,f
  2772  0E63  3064               	movlw	100
  2773  0E64  00F2               	movwf	___awmod@divisor
  2774  0E65  3000               	movlw	0
  2775  0E66  00F3               	movwf	___awmod@divisor+1
  2776  0E67  120A  158A  200B  120A  158A  	fcall	___awmod
  2777  0E6C  0873               	movf	?___awmod+1,w
  2778  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0E6F  00A3               	movwf	___awdiv@dividend+1
  2781  0E70  0872               	movf	?___awmod,w
  2782  0E71  00A2               	movwf	___awdiv@dividend
  2783  0E72  160A  158A  271B  120A  158A  	fcall	___awdiv
  2784  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0E79  0820               	movf	?___awdiv,w
  2787  0E7A  00C6               	movwf	??_scale
  2788  0E7B  3001               	movlw	1
  2789  0E7C                     u4235:
  2790  0E7C  1003               	clrc
  2791  0E7D  0DC6               	rlf	??_scale,f
  2792  0E7E  3EFF               	addlw	-1
  2793  0E7F  1D03               	skipz
  2794  0E80  2E7C               	goto	u4235
  2795  0E81  1003               	clrc
  2796  0E82  0D46               	rlf	??_scale,w
  2797  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2798  0E84  0084               	movwf	4
  2799  0E85  160A  158A  2000  120A  158A  	fcall	stringdir
  2800  0E8A  00C7               	movwf	??_scale+1
  2801  0E8B  160A  158A  2000  120A  158A  	fcall	stringdir
  2802  0E90  00C8               	movwf	??_scale+2
  2803  0E91  160A  158A  2000  120A  158A  	fcall	stringdir
  2804  0E96  00C9               	movwf	??_scale+3
  2805  0E97  160A  158A  2000  120A  158A  	fcall	stringdir
  2806  0E9C  00CA               	movwf	??_scale+4
  2807  0E9D  084A               	movf	??_scale+4,w
  2808  0E9E  00AB               	movwf	___flmul@b+3
  2809  0E9F  0849               	movf	??_scale+3,w
  2810  0EA0  00AA               	movwf	___flmul@b+2
  2811  0EA1  0848               	movf	??_scale+2,w
  2812  0EA2  00A9               	movwf	___flmul@b+1
  2813  0EA3  0847               	movf	??_scale+1,w
  2814  0EA4  00A8               	movwf	___flmul@b
  2815  0EA5  3064               	movlw	100
  2816  0EA6  00A0               	movwf	___awdiv@divisor
  2817  0EA7  3000               	movlw	0
  2818  0EA8  00A1               	movwf	___awdiv@divisor+1
  2819  0EA9  0854               	movf	scale@scl,w
  2820  0EAA  00A2               	movwf	___awdiv@dividend
  2821  0EAB  01A3               	clrf	___awdiv@dividend+1
  2822  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2823  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2824  0EAE  160A  158A  271B  120A  158A  	fcall	___awdiv
  2825  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2826  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2827  0EB5  0820               	movf	?___awdiv,w
  2828  0EB6  00CB               	movwf	??_scale+5
  2829  0EB7  3001               	movlw	1
  2830  0EB8                     u4245:
  2831  0EB8  1003               	clrc
  2832  0EB9  0DCB               	rlf	??_scale+5,f
  2833  0EBA  3EFF               	addlw	-1
  2834  0EBB  1D03               	skipz
  2835  0EBC  2EB8               	goto	u4245
  2836  0EBD  1003               	clrc
  2837  0EBE  0D4B               	rlf	??_scale+5,w
  2838  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2839  0EC0  0084               	movwf	4
  2840  0EC1  160A  158A  2000  120A  158A  	fcall	stringdir
  2841  0EC6  00CC               	movwf	??_scale+6
  2842  0EC7  160A  158A  2000  120A  158A  	fcall	stringdir
  2843  0ECC  00CD               	movwf	??_scale+7
  2844  0ECD  160A  158A  2000  120A  158A  	fcall	stringdir
  2845  0ED2  00CE               	movwf	??_scale+8
  2846  0ED3  160A  158A  2000  120A  158A  	fcall	stringdir
  2847  0ED8  00CF               	movwf	??_scale+9
  2848  0ED9  084F               	movf	??_scale+9,w
  2849  0EDA  00AF               	movwf	___flmul@a+3
  2850  0EDB  084E               	movf	??_scale+8,w
  2851  0EDC  00AE               	movwf	___flmul@a+2
  2852  0EDD  084D               	movf	??_scale+7,w
  2853  0EDE  00AD               	movwf	___flmul@a+1
  2854  0EDF  084C               	movf	??_scale+6,w
  2855  0EE0  00AC               	movwf	___flmul@a
  2856  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2857  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2858  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2859  0EE8  082B               	movf	?___flmul+3,w
  2860  0EE9  00D3               	movwf	_scale$1126+3
  2861  0EEA  082A               	movf	?___flmul+2,w
  2862  0EEB  00D2               	movwf	_scale$1126+2
  2863  0EEC  0829               	movf	?___flmul+1,w
  2864  0EED  00D1               	movwf	_scale$1126+1
  2865  0EEE  0828               	movf	?___flmul,w
  2866  0EEF  00D0               	movwf	_scale$1126
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2869  0EF0  300A               	movlw	10
  2870  0EF1  00F2               	movwf	___awmod@divisor
  2871  0EF2  3000               	movlw	0
  2872  0EF3  00F3               	movwf	___awmod@divisor+1
  2873  0EF4  0854               	movf	scale@scl,w
  2874  0EF5  00F4               	movwf	___awmod@dividend
  2875  0EF6  01F5               	clrf	___awmod@dividend+1
  2876  0EF7  1BF4               	btfsc	___awmod@dividend,7
  2877  0EF8  03F5               	decf	___awmod@dividend+1,f
  2878  0EF9  120A  158A  200B  120A  158A  	fcall	___awmod
  2879  0EFE  0872               	movf	?___awmod,w
  2880  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2881  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2882  0F01  00C6               	movwf	??_scale
  2883  0F02  3001               	movlw	1
  2884  0F03                     u4255:
  2885  0F03  1003               	clrc
  2886  0F04  0DC6               	rlf	??_scale,f
  2887  0F05  3EFF               	addlw	-1
  2888  0F06  1D03               	skipz
  2889  0F07  2F03               	goto	u4255
  2890  0F08  1003               	clrc
  2891  0F09  0D46               	rlf	??_scale,w
  2892  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2893  0F0B  0084               	movwf	4
  2894  0F0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2895  0F11  00C7               	movwf	??_scale+1
  2896  0F12  160A  158A  2000  120A  158A  	fcall	stringdir
  2897  0F17  00C8               	movwf	??_scale+2
  2898  0F18  160A  158A  2000  120A  158A  	fcall	stringdir
  2899  0F1D  00C9               	movwf	??_scale+3
  2900  0F1E  160A  158A  2000  120A  158A  	fcall	stringdir
  2901  0F23  00CA               	movwf	??_scale+4
  2902  0F24  084A               	movf	??_scale+4,w
  2903  0F25  00AB               	movwf	___flmul@b+3
  2904  0F26  0849               	movf	??_scale+3,w
  2905  0F27  00AA               	movwf	___flmul@b+2
  2906  0F28  0848               	movf	??_scale+2,w
  2907  0F29  00A9               	movwf	___flmul@b+1
  2908  0F2A  0847               	movf	??_scale+1,w
  2909  0F2B  00A8               	movwf	___flmul@b
  2910  0F2C  0853               	movf	_scale$1126+3,w
  2911  0F2D  00AF               	movwf	___flmul@a+3
  2912  0F2E  0852               	movf	_scale$1126+2,w
  2913  0F2F  00AE               	movwf	___flmul@a+2
  2914  0F30  0851               	movf	_scale$1126+1,w
  2915  0F31  00AD               	movwf	___flmul@a+1
  2916  0F32  0850               	movf	_scale$1126,w
  2917  0F33  00AC               	movwf	___flmul@a
  2918  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2919  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0F3B  082B               	movf	?___flmul+3,w
  2922  0F3C  00C5               	movwf	?_scale+3
  2923  0F3D  082A               	movf	?___flmul+2,w
  2924  0F3E  00C4               	movwf	?_scale+2
  2925  0F3F  0829               	movf	?___flmul+1,w
  2926  0F40  00C3               	movwf	?_scale+1
  2927  0F41  0828               	movf	?___flmul,w
  2928  0F42  00C2               	movwf	?_scale
  2929  0F43  2FFF               	goto	l274
  2930  0F44                     l2836:
  2931  0F44  0854               	movf	scale@scl,w
  2932  0F45  3A80               	xorlw	128
  2933  0F46  3E75               	addlw	-139
  2934  0F47  1C03               	skipc
  2935  0F48  2F4A               	goto	u4261
  2936  0F49  2F4B               	goto	u4260
  2937  0F4A                     u4261:
  2938  0F4A  2FD3               	goto	l2842
  2939  0F4B                     u4260:
  2940  0F4B                     l2838:
  2941                           
  2942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2943  0F4B  300A               	movlw	10
  2944  0F4C  00F2               	movwf	___awmod@divisor
  2945  0F4D  3000               	movlw	0
  2946  0F4E  00F3               	movwf	___awmod@divisor+1
  2947  0F4F  0854               	movf	scale@scl,w
  2948  0F50  00F4               	movwf	___awmod@dividend
  2949  0F51  01F5               	clrf	___awmod@dividend+1
  2950  0F52  1BF4               	btfsc	___awmod@dividend,7
  2951  0F53  03F5               	decf	___awmod@dividend+1,f
  2952  0F54  120A  158A  200B  120A  158A  	fcall	___awmod
  2953  0F59  0872               	movf	?___awmod,w
  2954  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2955  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0F5C  00C6               	movwf	??_scale
  2957  0F5D  3001               	movlw	1
  2958  0F5E                     u4275:
  2959  0F5E  1003               	clrc
  2960  0F5F  0DC6               	rlf	??_scale,f
  2961  0F60  3EFF               	addlw	-1
  2962  0F61  1D03               	skipz
  2963  0F62  2F5E               	goto	u4275
  2964  0F63  1003               	clrc
  2965  0F64  0D46               	rlf	??_scale,w
  2966  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2967  0F66  0084               	movwf	4
  2968  0F67  160A  158A  2000  120A  158A  	fcall	stringdir
  2969  0F6C  00C7               	movwf	??_scale+1
  2970  0F6D  160A  158A  2000  120A  158A  	fcall	stringdir
  2971  0F72  00C8               	movwf	??_scale+2
  2972  0F73  160A  158A  2000  120A  158A  	fcall	stringdir
  2973  0F78  00C9               	movwf	??_scale+3
  2974  0F79  160A  158A  2000  120A  158A  	fcall	stringdir
  2975  0F7E  00CA               	movwf	??_scale+4
  2976  0F7F  084A               	movf	??_scale+4,w
  2977  0F80  00AB               	movwf	___flmul@b+3
  2978  0F81  0849               	movf	??_scale+3,w
  2979  0F82  00AA               	movwf	___flmul@b+2
  2980  0F83  0848               	movf	??_scale+2,w
  2981  0F84  00A9               	movwf	___flmul@b+1
  2982  0F85  0847               	movf	??_scale+1,w
  2983  0F86  00A8               	movwf	___flmul@b
  2984  0F87  300A               	movlw	10
  2985  0F88  00A0               	movwf	___awdiv@divisor
  2986  0F89  3000               	movlw	0
  2987  0F8A  00A1               	movwf	___awdiv@divisor+1
  2988  0F8B  0854               	movf	scale@scl,w
  2989  0F8C  00A2               	movwf	___awdiv@dividend
  2990  0F8D  01A3               	clrf	___awdiv@dividend+1
  2991  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  2992  0F8F  03A3               	decf	___awdiv@dividend+1,f
  2993  0F90  160A  158A  271B  120A  158A  	fcall	___awdiv
  2994  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0F97  0820               	movf	?___awdiv,w
  2997  0F98  00CB               	movwf	??_scale+5
  2998  0F99  3001               	movlw	1
  2999  0F9A                     u4285:
  3000  0F9A  1003               	clrc
  3001  0F9B  0DCB               	rlf	??_scale+5,f
  3002  0F9C  3EFF               	addlw	-1
  3003  0F9D  1D03               	skipz
  3004  0F9E  2F9A               	goto	u4285
  3005  0F9F  1003               	clrc
  3006  0FA0  0D4B               	rlf	??_scale+5,w
  3007  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3008  0FA2  0084               	movwf	4
  3009  0FA3  160A  158A  2000  120A  158A  	fcall	stringdir
  3010  0FA8  00CC               	movwf	??_scale+6
  3011  0FA9  160A  158A  2000  120A  158A  	fcall	stringdir
  3012  0FAE  00CD               	movwf	??_scale+7
  3013  0FAF  160A  158A  2000  120A  158A  	fcall	stringdir
  3014  0FB4  00CE               	movwf	??_scale+8
  3015  0FB5  160A  158A  2000  120A  158A  	fcall	stringdir
  3016  0FBA  00CF               	movwf	??_scale+9
  3017  0FBB  084F               	movf	??_scale+9,w
  3018  0FBC  00AF               	movwf	___flmul@a+3
  3019  0FBD  084E               	movf	??_scale+8,w
  3020  0FBE  00AE               	movwf	___flmul@a+2
  3021  0FBF  084D               	movf	??_scale+7,w
  3022  0FC0  00AD               	movwf	___flmul@a+1
  3023  0FC1  084C               	movf	??_scale+6,w
  3024  0FC2  00AC               	movwf	___flmul@a
  3025  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3026  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0FCA  082B               	movf	?___flmul+3,w
  3029  0FCB  00C5               	movwf	?_scale+3
  3030  0FCC  082A               	movf	?___flmul+2,w
  3031  0FCD  00C4               	movwf	?_scale+2
  3032  0FCE  0829               	movf	?___flmul+1,w
  3033  0FCF  00C3               	movwf	?_scale+1
  3034  0FD0  0828               	movf	?___flmul,w
  3035  0FD1  00C2               	movwf	?_scale
  3036  0FD2  2FFF               	goto	l274
  3037  0FD3                     l2842:
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3040  0FD3  0854               	movf	scale@scl,w
  3041  0FD4  00C6               	movwf	??_scale
  3042  0FD5  3001               	movlw	1
  3043  0FD6                     u4295:
  3044  0FD6  1003               	clrc
  3045  0FD7  0DC6               	rlf	??_scale,f
  3046  0FD8  3EFF               	addlw	-1
  3047  0FD9  1D03               	skipz
  3048  0FDA  2FD6               	goto	u4295
  3049  0FDB  1003               	clrc
  3050  0FDC  0D46               	rlf	??_scale,w
  3051  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3052  0FDE  0084               	movwf	4
  3053  0FDF  160A  158A  2000  120A  158A  	fcall	stringdir
  3054  0FE4  00C7               	movwf	??_scale+1
  3055  0FE5  160A  158A  2000  120A  158A  	fcall	stringdir
  3056  0FEA  00C8               	movwf	??_scale+2
  3057  0FEB  160A  158A  2000  120A  158A  	fcall	stringdir
  3058  0FF0  00C9               	movwf	??_scale+3
  3059  0FF1  160A  158A  2000  120A  158A  	fcall	stringdir
  3060  0FF6  00CA               	movwf	??_scale+4
  3061  0FF7  084A               	movf	??_scale+4,w
  3062  0FF8  00C5               	movwf	?_scale+3
  3063  0FF9  0849               	movf	??_scale+3,w
  3064  0FFA  00C4               	movwf	?_scale+2
  3065  0FFB  0848               	movf	??_scale+2,w
  3066  0FFC  00C3               	movwf	?_scale+1
  3067  0FFD  0847               	movf	??_scale+1,w
  3068  0FFE  00C2               	movwf	?_scale
  3069  0FFF                     l274:
  3070  0FFF  0008               	return
  3071  1000                     __end_of_scale:
  3072                           
  3073                           	psect	text3
  3074  080B                     __ptext3:	
  3075 ;; *************** function ___awmod *****************
  3076 ;; Defined at:
  3077 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  divisor         2    2[COMMON] int 
  3080 ;;  dividend        2    4[COMMON] int 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  sign            1    8[COMMON] unsigned char 
  3083 ;;  counter         1    7[COMMON] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  2    2[COMMON] int 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         4       0       0       0       0
  3094 ;;      Locals:         2       0       0       0       0
  3095 ;;      Temps:          1       0       0       0       0
  3096 ;;      Totals:         7       0       0       0       0
  3097 ;;Total ram usage:        7 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    1
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_scale
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function ___awmod
  3109  080B                     ___awmod:
  3110  080B                     l2360:	
  3111                           ;incstack = 0
  3112                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3113                           
  3114  080B  01F8               	clrf	___awmod@sign
  3115  080C                     l2362:
  3116  080C  1FF5               	btfss	___awmod@dividend+1,7
  3117  080D  280F               	goto	u2971
  3118  080E  2810               	goto	u2970
  3119  080F                     u2971:
  3120  080F  2817               	goto	l2368
  3121  0810                     u2970:
  3122  0810                     l2364:
  3123  0810  09F4               	comf	___awmod@dividend,f
  3124  0811  09F5               	comf	___awmod@dividend+1,f
  3125  0812  0AF4               	incf	___awmod@dividend,f
  3126  0813  1903               	skipnz
  3127  0814  0AF5               	incf	___awmod@dividend+1,f
  3128  0815                     l2366:
  3129  0815  01F8               	clrf	___awmod@sign
  3130  0816  0AF8               	incf	___awmod@sign,f
  3131  0817                     l2368:
  3132  0817  1FF3               	btfss	___awmod@divisor+1,7
  3133  0818  281A               	goto	u2981
  3134  0819  281B               	goto	u2980
  3135  081A                     u2981:
  3136  081A  2820               	goto	l2372
  3137  081B                     u2980:
  3138  081B                     l2370:
  3139  081B  09F2               	comf	___awmod@divisor,f
  3140  081C  09F3               	comf	___awmod@divisor+1,f
  3141  081D  0AF2               	incf	___awmod@divisor,f
  3142  081E  1903               	skipnz
  3143  081F  0AF3               	incf	___awmod@divisor+1,f
  3144  0820                     l2372:
  3145  0820  0872               	movf	___awmod@divisor,w
  3146  0821  0473               	iorwf	___awmod@divisor+1,w
  3147  0822  1903               	btfsc	3,2
  3148  0823  2825               	goto	u2991
  3149  0824  2826               	goto	u2990
  3150  0825                     u2991:
  3151  0825  2855               	goto	l2390
  3152  0826                     u2990:
  3153  0826                     l2374:
  3154  0826  01F7               	clrf	___awmod@counter
  3155  0827  0AF7               	incf	___awmod@counter,f
  3156  0828  2834               	goto	l2380
  3157  0829                     l2376:
  3158  0829  3001               	movlw	1
  3159  082A                     u3005:
  3160  082A  1003               	clrc
  3161  082B  0DF2               	rlf	___awmod@divisor,f
  3162  082C  0DF3               	rlf	___awmod@divisor+1,f
  3163  082D  3EFF               	addlw	-1
  3164  082E  1D03               	skipz
  3165  082F  282A               	goto	u3005
  3166  0830                     l2378:
  3167  0830  3001               	movlw	1
  3168  0831  00F6               	movwf	??___awmod
  3169  0832  0876               	movf	??___awmod,w
  3170  0833  07F7               	addwf	___awmod@counter,f
  3171  0834                     l2380:
  3172  0834  1FF3               	btfss	___awmod@divisor+1,7
  3173  0835  2837               	goto	u3011
  3174  0836  2838               	goto	u3010
  3175  0837                     u3011:
  3176  0837  2829               	goto	l2376
  3177  0838                     u3010:
  3178  0838                     l2382:
  3179  0838  0873               	movf	___awmod@divisor+1,w
  3180  0839  0275               	subwf	___awmod@dividend+1,w
  3181  083A  1D03               	skipz
  3182  083B  283E               	goto	u3025
  3183  083C  0872               	movf	___awmod@divisor,w
  3184  083D  0274               	subwf	___awmod@dividend,w
  3185  083E                     u3025:
  3186  083E  1C03               	skipc
  3187  083F  2841               	goto	u3021
  3188  0840  2842               	goto	u3020
  3189  0841                     u3021:
  3190  0841  2848               	goto	l2386
  3191  0842                     u3020:
  3192  0842                     l2384:
  3193  0842  0872               	movf	___awmod@divisor,w
  3194  0843  02F4               	subwf	___awmod@dividend,f
  3195  0844  0873               	movf	___awmod@divisor+1,w
  3196  0845  1C03               	skipc
  3197  0846  03F5               	decf	___awmod@dividend+1,f
  3198  0847  02F5               	subwf	___awmod@dividend+1,f
  3199  0848                     l2386:
  3200  0848  3001               	movlw	1
  3201  0849                     u3035:
  3202  0849  1003               	clrc
  3203  084A  0CF3               	rrf	___awmod@divisor+1,f
  3204  084B  0CF2               	rrf	___awmod@divisor,f
  3205  084C  3EFF               	addlw	-1
  3206  084D  1D03               	skipz
  3207  084E  2849               	goto	u3035
  3208  084F                     l2388:
  3209  084F  3001               	movlw	1
  3210  0850  02F7               	subwf	___awmod@counter,f
  3211  0851  1D03               	btfss	3,2
  3212  0852  2854               	goto	u3041
  3213  0853  2855               	goto	u3040
  3214  0854                     u3041:
  3215  0854  2838               	goto	l2382
  3216  0855                     u3040:
  3217  0855                     l2390:
  3218  0855  0878               	movf	___awmod@sign,w
  3219  0856  1903               	btfsc	3,2
  3220  0857  2859               	goto	u3051
  3221  0858  285A               	goto	u3050
  3222  0859                     u3051:
  3223  0859  285F               	goto	l2394
  3224  085A                     u3050:
  3225  085A                     l2392:
  3226  085A  09F4               	comf	___awmod@dividend,f
  3227  085B  09F5               	comf	___awmod@dividend+1,f
  3228  085C  0AF4               	incf	___awmod@dividend,f
  3229  085D  1903               	skipnz
  3230  085E  0AF5               	incf	___awmod@dividend+1,f
  3231  085F                     l2394:
  3232  085F  0875               	movf	___awmod@dividend+1,w
  3233  0860  00F3               	movwf	?___awmod+1
  3234  0861  0874               	movf	___awmod@dividend,w
  3235  0862  00F2               	movwf	?___awmod
  3236  0863                     l545:
  3237  0863  0008               	return
  3238  0864                     __end_of___awmod:
  3239                           
  3240                           	psect	text4
  3241  1F1B                     __ptext4:	
  3242 ;; *************** function ___awdiv *****************
  3243 ;; Defined at:
  3244 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  divisor         2    0[BANK0 ] int 
  3247 ;;  dividend        2    2[BANK0 ] int 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  quotient        2    6[BANK0 ] int 
  3250 ;;  sign            1    5[BANK0 ] unsigned char 
  3251 ;;  counter         1    4[BANK0 ] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2    0[BANK0 ] int 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3261 ;;      Params:         0       4       0       0       0
  3262 ;;      Locals:         0       4       0       0       0
  3263 ;;      Temps:          1       0       0       0       0
  3264 ;;      Totals:         1       8       0       0       0
  3265 ;;Total ram usage:        9 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    1
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_scale
  3272 ;;		_sprintf
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           
  3277                           ;psect for function ___awdiv
  3278  1F1B                     ___awdiv:
  3279  1F1B                     l2316:	
  3280                           ;incstack = 0
  3281                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3282                           
  3283  1F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3284  1F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3285  1F1D  01A5               	clrf	___awdiv@sign
  3286  1F1E                     l2318:
  3287  1F1E  1FA1               	btfss	___awdiv@divisor+1,7
  3288  1F1F  2F21               	goto	u2871
  3289  1F20  2F22               	goto	u2870
  3290  1F21                     u2871:
  3291  1F21  2F29               	goto	l2324
  3292  1F22                     u2870:
  3293  1F22                     l2320:
  3294  1F22  09A0               	comf	___awdiv@divisor,f
  3295  1F23  09A1               	comf	___awdiv@divisor+1,f
  3296  1F24  0AA0               	incf	___awdiv@divisor,f
  3297  1F25  1903               	skipnz
  3298  1F26  0AA1               	incf	___awdiv@divisor+1,f
  3299  1F27                     l2322:
  3300  1F27  01A5               	clrf	___awdiv@sign
  3301  1F28  0AA5               	incf	___awdiv@sign,f
  3302  1F29                     l2324:
  3303  1F29  1FA3               	btfss	___awdiv@dividend+1,7
  3304  1F2A  2F2C               	goto	u2881
  3305  1F2B  2F2D               	goto	u2880
  3306  1F2C                     u2881:
  3307  1F2C  2F36               	goto	l2330
  3308  1F2D                     u2880:
  3309  1F2D                     l2326:
  3310  1F2D  09A2               	comf	___awdiv@dividend,f
  3311  1F2E  09A3               	comf	___awdiv@dividend+1,f
  3312  1F2F  0AA2               	incf	___awdiv@dividend,f
  3313  1F30  1903               	skipnz
  3314  1F31  0AA3               	incf	___awdiv@dividend+1,f
  3315  1F32                     l2328:
  3316  1F32  3001               	movlw	1
  3317  1F33  00F9               	movwf	??___awdiv
  3318  1F34  0879               	movf	??___awdiv,w
  3319  1F35  06A5               	xorwf	___awdiv@sign,f
  3320  1F36                     l2330:
  3321  1F36  01A6               	clrf	___awdiv@quotient
  3322  1F37  01A7               	clrf	___awdiv@quotient+1
  3323  1F38                     l2332:
  3324  1F38  0820               	movf	___awdiv@divisor,w
  3325  1F39  0421               	iorwf	___awdiv@divisor+1,w
  3326  1F3A  1903               	btfsc	3,2
  3327  1F3B  2F3D               	goto	u2891
  3328  1F3C  2F3E               	goto	u2890
  3329  1F3D                     u2891:
  3330  1F3D  2F75               	goto	l2352
  3331  1F3E                     u2890:
  3332  1F3E                     l2334:
  3333  1F3E  01A4               	clrf	___awdiv@counter
  3334  1F3F  0AA4               	incf	___awdiv@counter,f
  3335  1F40  2F4C               	goto	l2340
  3336  1F41                     l2336:
  3337  1F41  3001               	movlw	1
  3338  1F42                     u2905:
  3339  1F42  1003               	clrc
  3340  1F43  0DA0               	rlf	___awdiv@divisor,f
  3341  1F44  0DA1               	rlf	___awdiv@divisor+1,f
  3342  1F45  3EFF               	addlw	-1
  3343  1F46  1D03               	skipz
  3344  1F47  2F42               	goto	u2905
  3345  1F48                     l2338:
  3346  1F48  3001               	movlw	1
  3347  1F49  00F9               	movwf	??___awdiv
  3348  1F4A  0879               	movf	??___awdiv,w
  3349  1F4B  07A4               	addwf	___awdiv@counter,f
  3350  1F4C                     l2340:
  3351  1F4C  1FA1               	btfss	___awdiv@divisor+1,7
  3352  1F4D  2F4F               	goto	u2911
  3353  1F4E  2F50               	goto	u2910
  3354  1F4F                     u2911:
  3355  1F4F  2F41               	goto	l2336
  3356  1F50                     u2910:
  3357  1F50                     l2342:
  3358  1F50  3001               	movlw	1
  3359  1F51                     u2925:
  3360  1F51  1003               	clrc
  3361  1F52  0DA6               	rlf	___awdiv@quotient,f
  3362  1F53  0DA7               	rlf	___awdiv@quotient+1,f
  3363  1F54  3EFF               	addlw	-1
  3364  1F55  1D03               	skipz
  3365  1F56  2F51               	goto	u2925
  3366  1F57  0821               	movf	___awdiv@divisor+1,w
  3367  1F58  0223               	subwf	___awdiv@dividend+1,w
  3368  1F59  1D03               	skipz
  3369  1F5A  2F5D               	goto	u2935
  3370  1F5B  0820               	movf	___awdiv@divisor,w
  3371  1F5C  0222               	subwf	___awdiv@dividend,w
  3372  1F5D                     u2935:
  3373  1F5D  1C03               	skipc
  3374  1F5E  2F60               	goto	u2931
  3375  1F5F  2F61               	goto	u2930
  3376  1F60                     u2931:
  3377  1F60  2F68               	goto	l2348
  3378  1F61                     u2930:
  3379  1F61                     l2344:
  3380  1F61  0820               	movf	___awdiv@divisor,w
  3381  1F62  02A2               	subwf	___awdiv@dividend,f
  3382  1F63  0821               	movf	___awdiv@divisor+1,w
  3383  1F64  1C03               	skipc
  3384  1F65  03A3               	decf	___awdiv@dividend+1,f
  3385  1F66  02A3               	subwf	___awdiv@dividend+1,f
  3386  1F67                     l2346:
  3387  1F67  1426               	bsf	___awdiv@quotient,0
  3388  1F68                     l2348:
  3389  1F68  3001               	movlw	1
  3390  1F69                     u2945:
  3391  1F69  1003               	clrc
  3392  1F6A  0CA1               	rrf	___awdiv@divisor+1,f
  3393  1F6B  0CA0               	rrf	___awdiv@divisor,f
  3394  1F6C  3EFF               	addlw	-1
  3395  1F6D  1D03               	skipz
  3396  1F6E  2F69               	goto	u2945
  3397  1F6F                     l2350:
  3398  1F6F  3001               	movlw	1
  3399  1F70  02A4               	subwf	___awdiv@counter,f
  3400  1F71  1D03               	btfss	3,2
  3401  1F72  2F74               	goto	u2951
  3402  1F73  2F75               	goto	u2950
  3403  1F74                     u2951:
  3404  1F74  2F50               	goto	l2342
  3405  1F75                     u2950:
  3406  1F75                     l2352:
  3407  1F75  0825               	movf	___awdiv@sign,w
  3408  1F76  1903               	btfsc	3,2
  3409  1F77  2F79               	goto	u2961
  3410  1F78  2F7A               	goto	u2960
  3411  1F79                     u2961:
  3412  1F79  2F7F               	goto	l2356
  3413  1F7A                     u2960:
  3414  1F7A                     l2354:
  3415  1F7A  09A6               	comf	___awdiv@quotient,f
  3416  1F7B  09A7               	comf	___awdiv@quotient+1,f
  3417  1F7C  0AA6               	incf	___awdiv@quotient,f
  3418  1F7D  1903               	skipnz
  3419  1F7E  0AA7               	incf	___awdiv@quotient+1,f
  3420  1F7F                     l2356:
  3421  1F7F  0827               	movf	___awdiv@quotient+1,w
  3422  1F80  00A1               	movwf	?___awdiv+1
  3423  1F81  0826               	movf	___awdiv@quotient,w
  3424  1F82  00A0               	movwf	?___awdiv
  3425  1F83                     l532:
  3426  1F83  0008               	return
  3427  1F84                     __end_of___awdiv:
  3428                           
  3429                           	psect	text5
  3430  1C93                     __ptext5:	
  3431 ;; *************** function _isdigit *****************
  3432 ;; Defined at:
  3433 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  c               1    wreg     unsigned char 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  c               1    3[COMMON] unsigned char 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;		None               void
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3447 ;;      Params:         0       0       0       0       0
  3448 ;;      Locals:         2       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0
  3450 ;;      Totals:         2       0       0       0       0
  3451 ;;Total ram usage:        2 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    1
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_sprintf
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           
  3462                           ;psect for function _isdigit
  3463  1C93                     _isdigit:
  3464                           
  3465                           ;incstack = 0
  3466                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3467                           ;isdigit@c stored from wreg
  3468  1C93  00F3               	movwf	isdigit@c
  3469  1C94                     l2846:
  3470  1C94  01F2               	clrf	_isdigit$941
  3471  1C95                     l2848:
  3472  1C95  303A               	movlw	58
  3473  1C96  0273               	subwf	isdigit@c,w
  3474  1C97  1803               	skipnc
  3475  1C98  2C9A               	goto	u4301
  3476  1C99  2C9B               	goto	u4300
  3477  1C9A                     u4301:
  3478  1C9A  2CA3               	goto	l2854
  3479  1C9B                     u4300:
  3480  1C9B                     l2850:
  3481  1C9B  3030               	movlw	48
  3482  1C9C  0273               	subwf	isdigit@c,w
  3483  1C9D  1C03               	skipc
  3484  1C9E  2CA0               	goto	u4311
  3485  1C9F  2CA1               	goto	u4310
  3486  1CA0                     u4311:
  3487  1CA0  2CA3               	goto	l2854
  3488  1CA1                     u4310:
  3489  1CA1                     l2852:
  3490  1CA1  01F2               	clrf	_isdigit$941
  3491  1CA2  0AF2               	incf	_isdigit$941,f
  3492  1CA3                     l2854:
  3493  1CA3  0C72               	rrf	_isdigit$941,w
  3494  1CA4                     l866:
  3495  1CA4  0008               	return
  3496  1CA5                     __end_of_isdigit:
  3497                           
  3498                           	psect	text6
  3499  12F0                     __ptext6:	
  3500 ;; *************** function _fround *****************
  3501 ;; Defined at:
  3502 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  prec            1    wreg     unsigned char 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  prec            1   53[BANK0 ] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  4   34[BANK0 ] unsigned char 
  3509 ;; Registers used:
  3510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3516 ;;      Params:         0       4       0       0       0
  3517 ;;      Locals:         0       9       0       0       0
  3518 ;;      Temps:          0       7       0       0       0
  3519 ;;      Totals:         0      20       0       0       0
  3520 ;;Total ram usage:       20 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    3
  3523 ;; This function calls:
  3524 ;;		___flmul
  3525 ;;		___lwdiv
  3526 ;;		___lwmod
  3527 ;; This function is called by:
  3528 ;;		_sprintf
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           
  3533                           ;psect for function _fround
  3534  12F0                     _fround:
  3535                           
  3536                           ;incstack = 0
  3537                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3538                           ;fround@prec stored from wreg
  3539  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  3540  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  3541  12F2  00D5               	movwf	fround@prec
  3542  12F3                     l3654:
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3545  12F3  306E               	movlw	110
  3546  12F4  0255               	subwf	fround@prec,w
  3547  12F5  1C03               	skipc
  3548  12F6  2AF8               	goto	u5741
  3549  12F7  2AF9               	goto	u5740
  3550  12F8                     u5741:
  3551  12F8  2C08               	goto	l3662
  3552  12F9                     u5740:
  3553  12F9                     l3656:
  3554                           
  3555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3556  12F9  303F               	movlw	63
  3557  12FA  00AB               	movwf	___flmul@b+3
  3558  12FB  3000               	movlw	0
  3559  12FC  00AA               	movwf	___flmul@b+2
  3560  12FD  3000               	movlw	0
  3561  12FE  00A9               	movwf	___flmul@b+1
  3562  12FF  3000               	movlw	0
  3563  1300  00A8               	movwf	___flmul@b
  3564  1301  3064               	movlw	100
  3565  1302  00A0               	movwf	___lwdiv@divisor
  3566  1303  3000               	movlw	0
  3567  1304  00A1               	movwf	___lwdiv@divisor+1
  3568  1305  0855               	movf	fround@prec,w
  3569  1306  00C6               	movwf	??_fround
  3570  1307  01C7               	clrf	??_fround+1
  3571  1308  0846               	movf	??_fround,w
  3572  1309  00A2               	movwf	___lwdiv@dividend
  3573  130A  0847               	movf	??_fround+1,w
  3574  130B  00A3               	movwf	___lwdiv@dividend+1
  3575  130C  160A  158A  2577  160A  118A  	fcall	___lwdiv
  3576  1311  1283               	bcf	3,5	;RP0=0, select bank0
  3577  1312  1303               	bcf	3,6	;RP1=0, select bank0
  3578  1313  0820               	movf	?___lwdiv,w
  3579  1314  00C8               	movwf	??_fround+2
  3580  1315  3001               	movlw	1
  3581  1316                     u5755:
  3582  1316  1003               	clrc
  3583  1317  0DC8               	rlf	??_fround+2,f
  3584  1318  3EFF               	addlw	-1
  3585  1319  1D03               	skipz
  3586  131A  2B16               	goto	u5755
  3587  131B  1003               	clrc
  3588  131C  0D48               	rlf	??_fround+2,w
  3589  131D  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3590  131E  0084               	movwf	4
  3591  131F  160A  158A  2000  160A  118A  	fcall	stringdir
  3592  1324  00C9               	movwf	??_fround+3
  3593  1325  160A  158A  2000  160A  118A  	fcall	stringdir
  3594  132A  00CA               	movwf	??_fround+4
  3595  132B  160A  158A  2000  160A  118A  	fcall	stringdir
  3596  1330  00CB               	movwf	??_fround+5
  3597  1331  160A  158A  2000  160A  118A  	fcall	stringdir
  3598  1336  00CC               	movwf	??_fround+6
  3599  1337  084C               	movf	??_fround+6,w
  3600  1338  00AF               	movwf	___flmul@a+3
  3601  1339  084B               	movf	??_fround+5,w
  3602  133A  00AE               	movwf	___flmul@a+2
  3603  133B  084A               	movf	??_fround+4,w
  3604  133C  00AD               	movwf	___flmul@a+1
  3605  133D  0849               	movf	??_fround+3,w
  3606  133E  00AC               	movwf	___flmul@a
  3607  133F  120A  158A  213C  160A  118A  	fcall	___flmul
  3608  1344  1283               	bcf	3,5	;RP0=0, select bank0
  3609  1345  1303               	bcf	3,6	;RP1=0, select bank0
  3610  1346  082B               	movf	?___flmul+3,w
  3611  1347  00D4               	movwf	_fround$1124+3
  3612  1348  082A               	movf	?___flmul+2,w
  3613  1349  00D3               	movwf	_fround$1124+2
  3614  134A  0829               	movf	?___flmul+1,w
  3615  134B  00D2               	movwf	_fround$1124+1
  3616  134C  0828               	movf	?___flmul,w
  3617  134D  00D1               	movwf	_fround$1124
  3618                           
  3619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3620  134E  300A               	movlw	10
  3621  134F  00A0               	movwf	___lwdiv@divisor
  3622  1350  3000               	movlw	0
  3623  1351  00A1               	movwf	___lwdiv@divisor+1
  3624  1352  0855               	movf	fround@prec,w
  3625  1353  00C6               	movwf	??_fround
  3626  1354  01C7               	clrf	??_fround+1
  3627  1355  0846               	movf	??_fround,w
  3628  1356  00F4               	movwf	___lwmod@dividend
  3629  1357  0847               	movf	??_fround+1,w
  3630  1358  00F5               	movwf	___lwmod@dividend+1
  3631  1359  3064               	movlw	100
  3632  135A  00F2               	movwf	___lwmod@divisor
  3633  135B  3000               	movlw	0
  3634  135C  00F3               	movwf	___lwmod@divisor+1
  3635  135D  160A  158A  253D  160A  118A  	fcall	___lwmod
  3636  1362  0873               	movf	?___lwmod+1,w
  3637  1363  1283               	bcf	3,5	;RP0=0, select bank0
  3638  1364  1303               	bcf	3,6	;RP1=0, select bank0
  3639  1365  00A3               	movwf	___lwdiv@dividend+1
  3640  1366  0872               	movf	?___lwmod,w
  3641  1367  00A2               	movwf	___lwdiv@dividend
  3642  1368  160A  158A  2577  160A  118A  	fcall	___lwdiv
  3643  136D  1283               	bcf	3,5	;RP0=0, select bank0
  3644  136E  1303               	bcf	3,6	;RP1=0, select bank0
  3645  136F  0820               	movf	?___lwdiv,w
  3646  1370  00C8               	movwf	??_fround+2
  3647  1371  3001               	movlw	1
  3648  1372                     u5765:
  3649  1372  1003               	clrc
  3650  1373  0DC8               	rlf	??_fround+2,f
  3651  1374  3EFF               	addlw	-1
  3652  1375  1D03               	skipz
  3653  1376  2B72               	goto	u5765
  3654  1377  1003               	clrc
  3655  1378  0D48               	rlf	??_fround+2,w
  3656  1379  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3657  137A  0084               	movwf	4
  3658  137B  160A  158A  2000  160A  118A  	fcall	stringdir
  3659  1380  00C9               	movwf	??_fround+3
  3660  1381  160A  158A  2000  160A  118A  	fcall	stringdir
  3661  1386  00CA               	movwf	??_fround+4
  3662  1387  160A  158A  2000  160A  118A  	fcall	stringdir
  3663  138C  00CB               	movwf	??_fround+5
  3664  138D  160A  158A  2000  160A  118A  	fcall	stringdir
  3665  1392  00CC               	movwf	??_fround+6
  3666  1393  084C               	movf	??_fround+6,w
  3667  1394  00AB               	movwf	___flmul@b+3
  3668  1395  084B               	movf	??_fround+5,w
  3669  1396  00AA               	movwf	___flmul@b+2
  3670  1397  084A               	movf	??_fround+4,w
  3671  1398  00A9               	movwf	___flmul@b+1
  3672  1399  0849               	movf	??_fround+3,w
  3673  139A  00A8               	movwf	___flmul@b
  3674  139B  0854               	movf	_fround$1124+3,w
  3675  139C  00AF               	movwf	___flmul@a+3
  3676  139D  0853               	movf	_fround$1124+2,w
  3677  139E  00AE               	movwf	___flmul@a+2
  3678  139F  0852               	movf	_fround$1124+1,w
  3679  13A0  00AD               	movwf	___flmul@a+1
  3680  13A1  0851               	movf	_fround$1124,w
  3681  13A2  00AC               	movwf	___flmul@a
  3682  13A3  120A  158A  213C  160A  118A  	fcall	___flmul
  3683  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  3684  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  3685  13AA  082B               	movf	?___flmul+3,w
  3686  13AB  00D0               	movwf	_fround$1125+3
  3687  13AC  082A               	movf	?___flmul+2,w
  3688  13AD  00CF               	movwf	_fround$1125+2
  3689  13AE  0829               	movf	?___flmul+1,w
  3690  13AF  00CE               	movwf	_fround$1125+1
  3691  13B0  0828               	movf	?___flmul,w
  3692  13B1  00CD               	movwf	_fround$1125
  3693                           
  3694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3695  13B2  300A               	movlw	10
  3696  13B3  00F2               	movwf	___lwmod@divisor
  3697  13B4  3000               	movlw	0
  3698  13B5  00F3               	movwf	___lwmod@divisor+1
  3699  13B6  0855               	movf	fround@prec,w
  3700  13B7  00C6               	movwf	??_fround
  3701  13B8  01C7               	clrf	??_fround+1
  3702  13B9  0846               	movf	??_fround,w
  3703  13BA  00F4               	movwf	___lwmod@dividend
  3704  13BB  0847               	movf	??_fround+1,w
  3705  13BC  00F5               	movwf	___lwmod@dividend+1
  3706  13BD  160A  158A  253D  160A  118A  	fcall	___lwmod
  3707  13C2  0872               	movf	?___lwmod,w
  3708  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  3709  13C4  1303               	bcf	3,6	;RP1=0, select bank0
  3710  13C5  00C8               	movwf	??_fround+2
  3711  13C6  3001               	movlw	1
  3712  13C7                     u5775:
  3713  13C7  1003               	clrc
  3714  13C8  0DC8               	rlf	??_fround+2,f
  3715  13C9  3EFF               	addlw	-1
  3716  13CA  1D03               	skipz
  3717  13CB  2BC7               	goto	u5775
  3718  13CC  1003               	clrc
  3719  13CD  0D48               	rlf	??_fround+2,w
  3720  13CE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3721  13CF  0084               	movwf	4
  3722  13D0  160A  158A  2000  160A  118A  	fcall	stringdir
  3723  13D5  00C9               	movwf	??_fround+3
  3724  13D6  160A  158A  2000  160A  118A  	fcall	stringdir
  3725  13DB  00CA               	movwf	??_fround+4
  3726  13DC  160A  158A  2000  160A  118A  	fcall	stringdir
  3727  13E1  00CB               	movwf	??_fround+5
  3728  13E2  160A  158A  2000  160A  118A  	fcall	stringdir
  3729  13E7  00CC               	movwf	??_fround+6
  3730  13E8  084C               	movf	??_fround+6,w
  3731  13E9  00AB               	movwf	___flmul@b+3
  3732  13EA  084B               	movf	??_fround+5,w
  3733  13EB  00AA               	movwf	___flmul@b+2
  3734  13EC  084A               	movf	??_fround+4,w
  3735  13ED  00A9               	movwf	___flmul@b+1
  3736  13EE  0849               	movf	??_fround+3,w
  3737  13EF  00A8               	movwf	___flmul@b
  3738  13F0  0850               	movf	_fround$1125+3,w
  3739  13F1  00AF               	movwf	___flmul@a+3
  3740  13F2  084F               	movf	_fround$1125+2,w
  3741  13F3  00AE               	movwf	___flmul@a+2
  3742  13F4  084E               	movf	_fround$1125+1,w
  3743  13F5  00AD               	movwf	___flmul@a+1
  3744  13F6  084D               	movf	_fround$1125,w
  3745  13F7  00AC               	movwf	___flmul@a
  3746  13F8  120A  158A  213C  160A  118A  	fcall	___flmul
  3747  13FD  1283               	bcf	3,5	;RP0=0, select bank0
  3748  13FE  1303               	bcf	3,6	;RP1=0, select bank0
  3749  13FF  082B               	movf	?___flmul+3,w
  3750  1400  00C5               	movwf	?_fround+3
  3751  1401  082A               	movf	?___flmul+2,w
  3752  1402  00C4               	movwf	?_fround+2
  3753  1403  0829               	movf	?___flmul+1,w
  3754  1404  00C3               	movwf	?_fround+1
  3755  1405  0828               	movf	?___flmul,w
  3756  1406  00C2               	movwf	?_fround
  3757  1407  2CFC               	goto	l267
  3758  1408                     l3662:
  3759  1408  300B               	movlw	11
  3760  1409  0255               	subwf	fround@prec,w
  3761  140A  1C03               	skipc
  3762  140B  2C0D               	goto	u5781
  3763  140C  2C0E               	goto	u5780
  3764  140D                     u5781:
  3765  140D  2CB9               	goto	l3668
  3766  140E                     u5780:
  3767  140E                     l3664:
  3768                           
  3769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3770  140E  303F               	movlw	63
  3771  140F  00AB               	movwf	___flmul@b+3
  3772  1410  3000               	movlw	0
  3773  1411  00AA               	movwf	___flmul@b+2
  3774  1412  3000               	movlw	0
  3775  1413  00A9               	movwf	___flmul@b+1
  3776  1414  3000               	movlw	0
  3777  1415  00A8               	movwf	___flmul@b
  3778  1416  300A               	movlw	10
  3779  1417  00A0               	movwf	___lwdiv@divisor
  3780  1418  3000               	movlw	0
  3781  1419  00A1               	movwf	___lwdiv@divisor+1
  3782  141A  0855               	movf	fround@prec,w
  3783  141B  00C6               	movwf	??_fround
  3784  141C  01C7               	clrf	??_fround+1
  3785  141D  0846               	movf	??_fround,w
  3786  141E  00A2               	movwf	___lwdiv@dividend
  3787  141F  0847               	movf	??_fround+1,w
  3788  1420  00A3               	movwf	___lwdiv@dividend+1
  3789  1421  160A  158A  2577  160A  118A  	fcall	___lwdiv
  3790  1426  1283               	bcf	3,5	;RP0=0, select bank0
  3791  1427  1303               	bcf	3,6	;RP1=0, select bank0
  3792  1428  0820               	movf	?___lwdiv,w
  3793  1429  00C8               	movwf	??_fround+2
  3794  142A  3001               	movlw	1
  3795  142B                     u5795:
  3796  142B  1003               	clrc
  3797  142C  0DC8               	rlf	??_fround+2,f
  3798  142D  3EFF               	addlw	-1
  3799  142E  1D03               	skipz
  3800  142F  2C2B               	goto	u5795
  3801  1430  1003               	clrc
  3802  1431  0D48               	rlf	??_fround+2,w
  3803  1432  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3804  1433  0084               	movwf	4
  3805  1434  160A  158A  2000  160A  118A  	fcall	stringdir
  3806  1439  00C9               	movwf	??_fround+3
  3807  143A  160A  158A  2000  160A  118A  	fcall	stringdir
  3808  143F  00CA               	movwf	??_fround+4
  3809  1440  160A  158A  2000  160A  118A  	fcall	stringdir
  3810  1445  00CB               	movwf	??_fround+5
  3811  1446  160A  158A  2000  160A  118A  	fcall	stringdir
  3812  144B  00CC               	movwf	??_fround+6
  3813  144C  084C               	movf	??_fround+6,w
  3814  144D  00AF               	movwf	___flmul@a+3
  3815  144E  084B               	movf	??_fround+5,w
  3816  144F  00AE               	movwf	___flmul@a+2
  3817  1450  084A               	movf	??_fround+4,w
  3818  1451  00AD               	movwf	___flmul@a+1
  3819  1452  0849               	movf	??_fround+3,w
  3820  1453  00AC               	movwf	___flmul@a
  3821  1454  120A  158A  213C  160A  118A  	fcall	___flmul
  3822  1459  1283               	bcf	3,5	;RP0=0, select bank0
  3823  145A  1303               	bcf	3,6	;RP1=0, select bank0
  3824  145B  082B               	movf	?___flmul+3,w
  3825  145C  00D4               	movwf	_fround$1124+3
  3826  145D  082A               	movf	?___flmul+2,w
  3827  145E  00D3               	movwf	_fround$1124+2
  3828  145F  0829               	movf	?___flmul+1,w
  3829  1460  00D2               	movwf	_fround$1124+1
  3830  1461  0828               	movf	?___flmul,w
  3831  1462  00D1               	movwf	_fround$1124
  3832                           
  3833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3834  1463  300A               	movlw	10
  3835  1464  00F2               	movwf	___lwmod@divisor
  3836  1465  3000               	movlw	0
  3837  1466  00F3               	movwf	___lwmod@divisor+1
  3838  1467  0855               	movf	fround@prec,w
  3839  1468  00C6               	movwf	??_fround
  3840  1469  01C7               	clrf	??_fround+1
  3841  146A  0846               	movf	??_fround,w
  3842  146B  00F4               	movwf	___lwmod@dividend
  3843  146C  0847               	movf	??_fround+1,w
  3844  146D  00F5               	movwf	___lwmod@dividend+1
  3845  146E  160A  158A  253D  160A  118A  	fcall	___lwmod
  3846  1473  0872               	movf	?___lwmod,w
  3847  1474  1283               	bcf	3,5	;RP0=0, select bank0
  3848  1475  1303               	bcf	3,6	;RP1=0, select bank0
  3849  1476  00C8               	movwf	??_fround+2
  3850  1477  3001               	movlw	1
  3851  1478                     u5805:
  3852  1478  1003               	clrc
  3853  1479  0DC8               	rlf	??_fround+2,f
  3854  147A  3EFF               	addlw	-1
  3855  147B  1D03               	skipz
  3856  147C  2C78               	goto	u5805
  3857  147D  1003               	clrc
  3858  147E  0D48               	rlf	??_fround+2,w
  3859  147F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3860  1480  0084               	movwf	4
  3861  1481  160A  158A  2000  160A  118A  	fcall	stringdir
  3862  1486  00C9               	movwf	??_fround+3
  3863  1487  160A  158A  2000  160A  118A  	fcall	stringdir
  3864  148C  00CA               	movwf	??_fround+4
  3865  148D  160A  158A  2000  160A  118A  	fcall	stringdir
  3866  1492  00CB               	movwf	??_fround+5
  3867  1493  160A  158A  2000  160A  118A  	fcall	stringdir
  3868  1498  00CC               	movwf	??_fround+6
  3869  1499  084C               	movf	??_fround+6,w
  3870  149A  00AB               	movwf	___flmul@b+3
  3871  149B  084B               	movf	??_fround+5,w
  3872  149C  00AA               	movwf	___flmul@b+2
  3873  149D  084A               	movf	??_fround+4,w
  3874  149E  00A9               	movwf	___flmul@b+1
  3875  149F  0849               	movf	??_fround+3,w
  3876  14A0  00A8               	movwf	___flmul@b
  3877  14A1  0854               	movf	_fround$1124+3,w
  3878  14A2  00AF               	movwf	___flmul@a+3
  3879  14A3  0853               	movf	_fround$1124+2,w
  3880  14A4  00AE               	movwf	___flmul@a+2
  3881  14A5  0852               	movf	_fround$1124+1,w
  3882  14A6  00AD               	movwf	___flmul@a+1
  3883  14A7  0851               	movf	_fround$1124,w
  3884  14A8  00AC               	movwf	___flmul@a
  3885  14A9  120A  158A  213C  160A  118A  	fcall	___flmul
  3886  14AE  1283               	bcf	3,5	;RP0=0, select bank0
  3887  14AF  1303               	bcf	3,6	;RP1=0, select bank0
  3888  14B0  082B               	movf	?___flmul+3,w
  3889  14B1  00C5               	movwf	?_fround+3
  3890  14B2  082A               	movf	?___flmul+2,w
  3891  14B3  00C4               	movwf	?_fround+2
  3892  14B4  0829               	movf	?___flmul+1,w
  3893  14B5  00C3               	movwf	?_fround+1
  3894  14B6  0828               	movf	?___flmul,w
  3895  14B7  00C2               	movwf	?_fround
  3896  14B8  2CFC               	goto	l267
  3897  14B9                     l3668:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3900  14B9  303F               	movlw	63
  3901  14BA  00AB               	movwf	___flmul@b+3
  3902  14BB  3000               	movlw	0
  3903  14BC  00AA               	movwf	___flmul@b+2
  3904  14BD  3000               	movlw	0
  3905  14BE  00A9               	movwf	___flmul@b+1
  3906  14BF  3000               	movlw	0
  3907  14C0  00A8               	movwf	___flmul@b
  3908  14C1  0855               	movf	fround@prec,w
  3909  14C2  00C6               	movwf	??_fround
  3910  14C3  3001               	movlw	1
  3911  14C4                     u5815:
  3912  14C4  1003               	clrc
  3913  14C5  0DC6               	rlf	??_fround,f
  3914  14C6  3EFF               	addlw	-1
  3915  14C7  1D03               	skipz
  3916  14C8  2CC4               	goto	u5815
  3917  14C9  1003               	clrc
  3918  14CA  0D46               	rlf	??_fround,w
  3919  14CB  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3920  14CC  0084               	movwf	4
  3921  14CD  160A  158A  2000  160A  118A  	fcall	stringdir
  3922  14D2  00C7               	movwf	??_fround+1
  3923  14D3  160A  158A  2000  160A  118A  	fcall	stringdir
  3924  14D8  00C8               	movwf	??_fround+2
  3925  14D9  160A  158A  2000  160A  118A  	fcall	stringdir
  3926  14DE  00C9               	movwf	??_fround+3
  3927  14DF  160A  158A  2000  160A  118A  	fcall	stringdir
  3928  14E4  00CA               	movwf	??_fround+4
  3929  14E5  084A               	movf	??_fround+4,w
  3930  14E6  00AF               	movwf	___flmul@a+3
  3931  14E7  0849               	movf	??_fround+3,w
  3932  14E8  00AE               	movwf	___flmul@a+2
  3933  14E9  0848               	movf	??_fround+2,w
  3934  14EA  00AD               	movwf	___flmul@a+1
  3935  14EB  0847               	movf	??_fround+1,w
  3936  14EC  00AC               	movwf	___flmul@a
  3937  14ED  120A  158A  213C  160A  118A  	fcall	___flmul
  3938  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  3939  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  3940  14F4  082B               	movf	?___flmul+3,w
  3941  14F5  00C5               	movwf	?_fround+3
  3942  14F6  082A               	movf	?___flmul+2,w
  3943  14F7  00C4               	movwf	?_fround+2
  3944  14F8  0829               	movf	?___flmul+1,w
  3945  14F9  00C3               	movwf	?_fround+1
  3946  14FA  0828               	movf	?___flmul,w
  3947  14FB  00C2               	movwf	?_fround
  3948  14FC                     l267:
  3949  14FC  0008               	return
  3950  14FD                     __end_of_fround:
  3951                           
  3952                           	psect	text7
  3953  1D3D                     __ptext7:	
  3954 ;; *************** function ___lwmod *****************
  3955 ;; Defined at:
  3956 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  divisor         2    2[COMMON] unsigned int 
  3959 ;;  dividend        2    4[COMMON] unsigned int 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  counter         1    7[COMMON] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  2    2[COMMON] unsigned int 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         4       0       0       0       0
  3972 ;;      Locals:         1       0       0       0       0
  3973 ;;      Temps:          1       0       0       0       0
  3974 ;;      Totals:         6       0       0       0       0
  3975 ;;Total ram usage:        6 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_fround
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           
  3986                           ;psect for function ___lwmod
  3987  1D3D                     ___lwmod:
  3988  1D3D                     l2424:	
  3989                           ;incstack = 0
  3990                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3991                           
  3992  1D3D  0872               	movf	___lwmod@divisor,w
  3993  1D3E  0473               	iorwf	___lwmod@divisor+1,w
  3994  1D3F  1903               	btfsc	3,2
  3995  1D40  2D42               	goto	u3131
  3996  1D41  2D43               	goto	u3130
  3997  1D42                     u3131:
  3998  1D42  2D72               	goto	l2442
  3999  1D43                     u3130:
  4000  1D43                     l2426:
  4001  1D43  01F7               	clrf	___lwmod@counter
  4002  1D44  0AF7               	incf	___lwmod@counter,f
  4003  1D45  2D51               	goto	l2432
  4004  1D46                     l2428:
  4005  1D46  3001               	movlw	1
  4006  1D47                     u3145:
  4007  1D47  1003               	clrc
  4008  1D48  0DF2               	rlf	___lwmod@divisor,f
  4009  1D49  0DF3               	rlf	___lwmod@divisor+1,f
  4010  1D4A  3EFF               	addlw	-1
  4011  1D4B  1D03               	skipz
  4012  1D4C  2D47               	goto	u3145
  4013  1D4D                     l2430:
  4014  1D4D  3001               	movlw	1
  4015  1D4E  00F6               	movwf	??___lwmod
  4016  1D4F  0876               	movf	??___lwmod,w
  4017  1D50  07F7               	addwf	___lwmod@counter,f
  4018  1D51                     l2432:
  4019  1D51  1FF3               	btfss	___lwmod@divisor+1,7
  4020  1D52  2D54               	goto	u3151
  4021  1D53  2D55               	goto	u3150
  4022  1D54                     u3151:
  4023  1D54  2D46               	goto	l2428
  4024  1D55                     u3150:
  4025  1D55                     l2434:
  4026  1D55  0873               	movf	___lwmod@divisor+1,w
  4027  1D56  0275               	subwf	___lwmod@dividend+1,w
  4028  1D57  1D03               	skipz
  4029  1D58  2D5B               	goto	u3165
  4030  1D59  0872               	movf	___lwmod@divisor,w
  4031  1D5A  0274               	subwf	___lwmod@dividend,w
  4032  1D5B                     u3165:
  4033  1D5B  1C03               	skipc
  4034  1D5C  2D5E               	goto	u3161
  4035  1D5D  2D5F               	goto	u3160
  4036  1D5E                     u3161:
  4037  1D5E  2D65               	goto	l2438
  4038  1D5F                     u3160:
  4039  1D5F                     l2436:
  4040  1D5F  0872               	movf	___lwmod@divisor,w
  4041  1D60  02F4               	subwf	___lwmod@dividend,f
  4042  1D61  0873               	movf	___lwmod@divisor+1,w
  4043  1D62  1C03               	skipc
  4044  1D63  03F5               	decf	___lwmod@dividend+1,f
  4045  1D64  02F5               	subwf	___lwmod@dividend+1,f
  4046  1D65                     l2438:
  4047  1D65  3001               	movlw	1
  4048  1D66                     u3175:
  4049  1D66  1003               	clrc
  4050  1D67  0CF3               	rrf	___lwmod@divisor+1,f
  4051  1D68  0CF2               	rrf	___lwmod@divisor,f
  4052  1D69  3EFF               	addlw	-1
  4053  1D6A  1D03               	skipz
  4054  1D6B  2D66               	goto	u3175
  4055  1D6C                     l2440:
  4056  1D6C  3001               	movlw	1
  4057  1D6D  02F7               	subwf	___lwmod@counter,f
  4058  1D6E  1D03               	btfss	3,2
  4059  1D6F  2D71               	goto	u3181
  4060  1D70  2D72               	goto	u3180
  4061  1D71                     u3181:
  4062  1D71  2D55               	goto	l2434
  4063  1D72                     u3180:
  4064  1D72                     l2442:
  4065  1D72  0875               	movf	___lwmod@dividend+1,w
  4066  1D73  00F3               	movwf	?___lwmod+1
  4067  1D74  0874               	movf	___lwmod@dividend,w
  4068  1D75  00F2               	movwf	?___lwmod
  4069  1D76                     l695:
  4070  1D76  0008               	return
  4071  1D77                     __end_of___lwmod:
  4072                           
  4073                           	psect	text8
  4074  1D77                     __ptext8:	
  4075 ;; *************** function ___lwdiv *****************
  4076 ;; Defined at:
  4077 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  divisor         2    0[BANK0 ] unsigned int 
  4080 ;;  dividend        2    2[BANK0 ] unsigned int 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  quotient        2    5[BANK0 ] unsigned int 
  4083 ;;  counter         1    4[BANK0 ] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  2    0[BANK0 ] unsigned int 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4093 ;;      Params:         0       4       0       0       0
  4094 ;;      Locals:         0       3       0       0       0
  4095 ;;      Temps:          1       0       0       0       0
  4096 ;;      Totals:         1       7       0       0       0
  4097 ;;Total ram usage:        8 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_fround
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           
  4108                           ;psect for function ___lwdiv
  4109  1D77                     ___lwdiv:
  4110  1D77                     l3628:	
  4111                           ;incstack = 0
  4112                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4113                           
  4114  1D77  1283               	bcf	3,5	;RP0=0, select bank0
  4115  1D78  1303               	bcf	3,6	;RP1=0, select bank0
  4116  1D79  01A5               	clrf	___lwdiv@quotient
  4117  1D7A  01A6               	clrf	___lwdiv@quotient+1
  4118  1D7B                     l3630:
  4119  1D7B  0820               	movf	___lwdiv@divisor,w
  4120  1D7C  0421               	iorwf	___lwdiv@divisor+1,w
  4121  1D7D  1903               	btfsc	3,2
  4122  1D7E  2D80               	goto	u5671
  4123  1D7F  2D81               	goto	u5670
  4124  1D80                     u5671:
  4125  1D80  2DB8               	goto	l3650
  4126  1D81                     u5670:
  4127  1D81                     l3632:
  4128  1D81  01A4               	clrf	___lwdiv@counter
  4129  1D82  0AA4               	incf	___lwdiv@counter,f
  4130  1D83  2D8F               	goto	l3638
  4131  1D84                     l3634:
  4132  1D84  3001               	movlw	1
  4133  1D85                     u5685:
  4134  1D85  1003               	clrc
  4135  1D86  0DA0               	rlf	___lwdiv@divisor,f
  4136  1D87  0DA1               	rlf	___lwdiv@divisor+1,f
  4137  1D88  3EFF               	addlw	-1
  4138  1D89  1D03               	skipz
  4139  1D8A  2D85               	goto	u5685
  4140  1D8B                     l3636:
  4141  1D8B  3001               	movlw	1
  4142  1D8C  00F8               	movwf	??___lwdiv
  4143  1D8D  0878               	movf	??___lwdiv,w
  4144  1D8E  07A4               	addwf	___lwdiv@counter,f
  4145  1D8F                     l3638:
  4146  1D8F  1FA1               	btfss	___lwdiv@divisor+1,7
  4147  1D90  2D92               	goto	u5691
  4148  1D91  2D93               	goto	u5690
  4149  1D92                     u5691:
  4150  1D92  2D84               	goto	l3634
  4151  1D93                     u5690:
  4152  1D93                     l3640:
  4153  1D93  3001               	movlw	1
  4154  1D94                     u5705:
  4155  1D94  1003               	clrc
  4156  1D95  0DA5               	rlf	___lwdiv@quotient,f
  4157  1D96  0DA6               	rlf	___lwdiv@quotient+1,f
  4158  1D97  3EFF               	addlw	-1
  4159  1D98  1D03               	skipz
  4160  1D99  2D94               	goto	u5705
  4161  1D9A  0821               	movf	___lwdiv@divisor+1,w
  4162  1D9B  0223               	subwf	___lwdiv@dividend+1,w
  4163  1D9C  1D03               	skipz
  4164  1D9D  2DA0               	goto	u5715
  4165  1D9E  0820               	movf	___lwdiv@divisor,w
  4166  1D9F  0222               	subwf	___lwdiv@dividend,w
  4167  1DA0                     u5715:
  4168  1DA0  1C03               	skipc
  4169  1DA1  2DA3               	goto	u5711
  4170  1DA2  2DA4               	goto	u5710
  4171  1DA3                     u5711:
  4172  1DA3  2DAB               	goto	l3646
  4173  1DA4                     u5710:
  4174  1DA4                     l3642:
  4175  1DA4  0820               	movf	___lwdiv@divisor,w
  4176  1DA5  02A2               	subwf	___lwdiv@dividend,f
  4177  1DA6  0821               	movf	___lwdiv@divisor+1,w
  4178  1DA7  1C03               	skipc
  4179  1DA8  03A3               	decf	___lwdiv@dividend+1,f
  4180  1DA9  02A3               	subwf	___lwdiv@dividend+1,f
  4181  1DAA                     l3644:
  4182  1DAA  1425               	bsf	___lwdiv@quotient,0
  4183  1DAB                     l3646:
  4184  1DAB  3001               	movlw	1
  4185  1DAC                     u5725:
  4186  1DAC  1003               	clrc
  4187  1DAD  0CA1               	rrf	___lwdiv@divisor+1,f
  4188  1DAE  0CA0               	rrf	___lwdiv@divisor,f
  4189  1DAF  3EFF               	addlw	-1
  4190  1DB0  1D03               	skipz
  4191  1DB1  2DAC               	goto	u5725
  4192  1DB2                     l3648:
  4193  1DB2  3001               	movlw	1
  4194  1DB3  02A4               	subwf	___lwdiv@counter,f
  4195  1DB4  1D03               	btfss	3,2
  4196  1DB5  2DB7               	goto	u5731
  4197  1DB6  2DB8               	goto	u5730
  4198  1DB7                     u5731:
  4199  1DB7  2D93               	goto	l3640
  4200  1DB8                     u5730:
  4201  1DB8                     l3650:
  4202  1DB8  0826               	movf	___lwdiv@quotient+1,w
  4203  1DB9  00A1               	movwf	?___lwdiv+1
  4204  1DBA  0825               	movf	___lwdiv@quotient,w
  4205  1DBB  00A0               	movwf	?___lwdiv
  4206  1DBC                     l685:
  4207  1DBC  0008               	return
  4208  1DBD                     __end_of___lwdiv:
  4209                           
  4210                           	psect	text9
  4211  093C                     __ptext9:	
  4212 ;; *************** function ___flmul *****************
  4213 ;; Defined at:
  4214 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  b               4    8[BANK0 ] unsigned int 
  4217 ;;  a               4   12[BANK0 ] unsigned int 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  prod            4   28[BANK0 ] struct .
  4220 ;;  grs             4   22[BANK0 ] unsigned long 
  4221 ;;  temp            2   32[BANK0 ] struct .
  4222 ;;  bexp            1   27[BANK0 ] unsigned char 
  4223 ;;  aexp            1   26[BANK0 ] unsigned char 
  4224 ;;  sign            1   21[BANK0 ] unsigned char 
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  4    8[BANK0 ] unsigned char 
  4227 ;; Registers used:
  4228 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4234 ;;      Params:         0       8       0       0       0
  4235 ;;      Locals:         0      13       0       0       0
  4236 ;;      Temps:          0       5       0       0       0
  4237 ;;      Totals:         0      26       0       0       0
  4238 ;;Total ram usage:       26 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    2
  4241 ;; This function calls:
  4242 ;;		__Umul8_16
  4243 ;; This function is called by:
  4244 ;;		_fround
  4245 ;;		_scale
  4246 ;;		_sprintf
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           
  4251                           ;psect for function ___flmul
  4252  093C                     ___flmul:
  4253  093C                     l2640:	
  4254                           ;incstack = 0
  4255                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4256                           
  4257  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4258  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4259  093E  082B               	movf	___flmul@b+3,w
  4260  093F  3980               	andlw	128
  4261  0940  00B0               	movwf	??___flmul
  4262  0941  0830               	movf	??___flmul,w
  4263  0942  00B5               	movwf	___flmul@sign
  4264  0943                     l2642:
  4265  0943  082B               	movf	___flmul@b+3,w
  4266  0944  00B0               	movwf	??___flmul
  4267  0945  0730               	addwf	??___flmul,w
  4268  0946  00B1               	movwf	??___flmul+1
  4269  0947  0831               	movf	??___flmul+1,w
  4270  0948  00BB               	movwf	___flmul@bexp
  4271  0949                     l2644:
  4272  0949  1FAA               	btfss	___flmul@b+2,7
  4273  094A  294C               	goto	u3651
  4274  094B  294D               	goto	u3650
  4275  094C                     u3651:
  4276  094C  294E               	goto	l2648
  4277  094D                     u3650:
  4278  094D                     l2646:
  4279  094D  143B               	bsf	___flmul@bexp,0
  4280  094E                     l2648:
  4281  094E  083B               	movf	___flmul@bexp,w
  4282  094F  1903               	btfsc	3,2
  4283  0950  2952               	goto	u3661
  4284  0951  2953               	goto	u3660
  4285  0952                     u3661:
  4286  0952  2962               	goto	l2656
  4287  0953                     u3660:
  4288  0953                     l2650:
  4289  0953  0A3B               	incf	___flmul@bexp,w
  4290  0954  1D03               	btfss	3,2
  4291  0955  2957               	goto	u3671
  4292  0956  2958               	goto	u3670
  4293  0957                     u3671:
  4294  0957  2960               	goto	l2654
  4295  0958                     u3670:
  4296  0958                     l2652:
  4297  0958  3000               	movlw	0
  4298  0959  00AB               	movwf	___flmul@b+3
  4299  095A  3000               	movlw	0
  4300  095B  00AA               	movwf	___flmul@b+2
  4301  095C  3000               	movlw	0
  4302  095D  00A9               	movwf	___flmul@b+1
  4303  095E  3000               	movlw	0
  4304  095F  00A8               	movwf	___flmul@b
  4305  0960                     l2654:
  4306  0960  17AA               	bsf	___flmul@b+2,7
  4307  0961  296A               	goto	l2658
  4308  0962                     l2656:
  4309  0962  3000               	movlw	0
  4310  0963  00AB               	movwf	___flmul@b+3
  4311  0964  3000               	movlw	0
  4312  0965  00AA               	movwf	___flmul@b+2
  4313  0966  3000               	movlw	0
  4314  0967  00A9               	movwf	___flmul@b+1
  4315  0968  3000               	movlw	0
  4316  0969  00A8               	movwf	___flmul@b
  4317  096A                     l2658:
  4318  096A  082F               	movf	___flmul@a+3,w
  4319  096B  3980               	andlw	128
  4320  096C  00B0               	movwf	??___flmul
  4321  096D  0830               	movf	??___flmul,w
  4322  096E  06B5               	xorwf	___flmul@sign,f
  4323  096F                     l2660:
  4324  096F  082F               	movf	___flmul@a+3,w
  4325  0970  00B0               	movwf	??___flmul
  4326  0971  0730               	addwf	??___flmul,w
  4327  0972  00B1               	movwf	??___flmul+1
  4328  0973  0831               	movf	??___flmul+1,w
  4329  0974  00BA               	movwf	___flmul@aexp
  4330  0975                     l2662:
  4331  0975  1FAE               	btfss	___flmul@a+2,7
  4332  0976  2978               	goto	u3681
  4333  0977  2979               	goto	u3680
  4334  0978                     u3681:
  4335  0978  297A               	goto	l2666
  4336  0979                     u3680:
  4337  0979                     l2664:
  4338  0979  143A               	bsf	___flmul@aexp,0
  4339  097A                     l2666:
  4340  097A  083A               	movf	___flmul@aexp,w
  4341  097B  1903               	btfsc	3,2
  4342  097C  297E               	goto	u3691
  4343  097D  297F               	goto	u3690
  4344  097E                     u3691:
  4345  097E  298E               	goto	l2674
  4346  097F                     u3690:
  4347  097F                     l2668:
  4348  097F  0A3A               	incf	___flmul@aexp,w
  4349  0980  1D03               	btfss	3,2
  4350  0981  2983               	goto	u3701
  4351  0982  2984               	goto	u3700
  4352  0983                     u3701:
  4353  0983  298C               	goto	l2672
  4354  0984                     u3700:
  4355  0984                     l2670:
  4356  0984  3000               	movlw	0
  4357  0985  00AF               	movwf	___flmul@a+3
  4358  0986  3000               	movlw	0
  4359  0987  00AE               	movwf	___flmul@a+2
  4360  0988  3000               	movlw	0
  4361  0989  00AD               	movwf	___flmul@a+1
  4362  098A  3000               	movlw	0
  4363  098B  00AC               	movwf	___flmul@a
  4364  098C                     l2672:
  4365  098C  17AE               	bsf	___flmul@a+2,7
  4366  098D  2996               	goto	l2676
  4367  098E                     l2674:
  4368  098E  3000               	movlw	0
  4369  098F  00AF               	movwf	___flmul@a+3
  4370  0990  3000               	movlw	0
  4371  0991  00AE               	movwf	___flmul@a+2
  4372  0992  3000               	movlw	0
  4373  0993  00AD               	movwf	___flmul@a+1
  4374  0994  3000               	movlw	0
  4375  0995  00AC               	movwf	___flmul@a
  4376  0996                     l2676:
  4377  0996  083A               	movf	___flmul@aexp,w
  4378  0997  1903               	btfsc	3,2
  4379  0998  299A               	goto	u3711
  4380  0999  299B               	goto	u3710
  4381  099A                     u3711:
  4382  099A  29A0               	goto	l2680
  4383  099B                     u3710:
  4384  099B                     l2678:
  4385  099B  083B               	movf	___flmul@bexp,w
  4386  099C  1D03               	btfss	3,2
  4387  099D  299F               	goto	u3721
  4388  099E  29A0               	goto	u3720
  4389  099F                     u3721:
  4390  099F  29A9               	goto	l2684
  4391  09A0                     u3720:
  4392  09A0                     l2680:
  4393  09A0  3000               	movlw	0
  4394  09A1  00AB               	movwf	?___flmul+3
  4395  09A2  3000               	movlw	0
  4396  09A3  00AA               	movwf	?___flmul+2
  4397  09A4  3000               	movlw	0
  4398  09A5  00A9               	movwf	?___flmul+1
  4399  09A6  3000               	movlw	0
  4400  09A7  00A8               	movwf	?___flmul
  4401  09A8  2C9C               	goto	l802
  4402  09A9                     l2684:
  4403  09A9  0828               	movf	___flmul@b,w
  4404  09AA  00B0               	movwf	??___flmul
  4405  09AB  0830               	movf	??___flmul,w
  4406  09AC  00F2               	movwf	__Umul8_16@multiplicand
  4407  09AD  082E               	movf	___flmul@a+2,w
  4408  09AE  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4409  09B3  0873               	movf	?__Umul8_16+1,w
  4410  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4411  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4412  09B6  00C1               	movwf	___flmul@temp+1
  4413  09B7  0872               	movf	?__Umul8_16,w
  4414  09B8  00C0               	movwf	___flmul@temp
  4415  09B9                     l2686:
  4416  09B9  0840               	movf	___flmul@temp,w
  4417  09BA  00B0               	movwf	??___flmul
  4418  09BB  01B1               	clrf	??___flmul+1
  4419  09BC  01B2               	clrf	??___flmul+2
  4420  09BD  01B3               	clrf	??___flmul+3
  4421  09BE  0833               	movf	??___flmul+3,w
  4422  09BF  00B9               	movwf	___flmul@grs+3
  4423  09C0  0832               	movf	??___flmul+2,w
  4424  09C1  00B8               	movwf	___flmul@grs+2
  4425  09C2  0831               	movf	??___flmul+1,w
  4426  09C3  00B7               	movwf	___flmul@grs+1
  4427  09C4  0830               	movf	??___flmul,w
  4428  09C5  00B6               	movwf	___flmul@grs
  4429  09C6                     l2688:
  4430  09C6  0841               	movf	___flmul@temp+1,w
  4431  09C7  00B0               	movwf	??___flmul
  4432  09C8  01B1               	clrf	??___flmul+1
  4433  09C9  01B2               	clrf	??___flmul+2
  4434  09CA  01B3               	clrf	??___flmul+3
  4435  09CB  0833               	movf	??___flmul+3,w
  4436  09CC  00BF               	movwf	___flmul@prod+3
  4437  09CD  0832               	movf	??___flmul+2,w
  4438  09CE  00BE               	movwf	___flmul@prod+2
  4439  09CF  0831               	movf	??___flmul+1,w
  4440  09D0  00BD               	movwf	___flmul@prod+1
  4441  09D1  0830               	movf	??___flmul,w
  4442  09D2  00BC               	movwf	___flmul@prod
  4443  09D3  0829               	movf	___flmul@b+1,w
  4444  09D4  00B0               	movwf	??___flmul
  4445  09D5  0830               	movf	??___flmul,w
  4446  09D6  00F2               	movwf	__Umul8_16@multiplicand
  4447  09D7  082D               	movf	___flmul@a+1,w
  4448  09D8  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4449  09DD  0873               	movf	?__Umul8_16+1,w
  4450  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4451  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4452  09E0  00C1               	movwf	___flmul@temp+1
  4453  09E1  0872               	movf	?__Umul8_16,w
  4454  09E2  00C0               	movwf	___flmul@temp
  4455  09E3                     l2690:
  4456  09E3  0840               	movf	___flmul@temp,w
  4457  09E4  00B0               	movwf	??___flmul
  4458  09E5  01B1               	clrf	??___flmul+1
  4459  09E6  01B2               	clrf	??___flmul+2
  4460  09E7  01B3               	clrf	??___flmul+3
  4461  09E8  0830               	movf	??___flmul,w
  4462  09E9  07B6               	addwf	___flmul@grs,f
  4463  09EA  0831               	movf	??___flmul+1,w
  4464  09EB  1103               	clrz
  4465  09EC  1803               	skipnc
  4466  09ED  3E01               	addlw	1
  4467  09EE  1903               	skipnz
  4468  09EF  29F1               	goto	u3731
  4469  09F0  07B7               	addwf	___flmul@grs+1,f
  4470  09F1                     u3731:
  4471  09F1  0832               	movf	??___flmul+2,w
  4472  09F2  1103               	clrz
  4473  09F3  1803               	skipnc
  4474  09F4  3E01               	addlw	1
  4475  09F5  1903               	skipnz
  4476  09F6  29F8               	goto	u3732
  4477  09F7  07B8               	addwf	___flmul@grs+2,f
  4478  09F8                     u3732:
  4479  09F8  0833               	movf	??___flmul+3,w
  4480  09F9  1103               	clrz
  4481  09FA  1803               	skipnc
  4482  09FB  3E01               	addlw	1
  4483  09FC  1903               	skipnz
  4484  09FD  29FF               	goto	u3733
  4485  09FE  07B9               	addwf	___flmul@grs+3,f
  4486  09FF                     u3733:
  4487  09FF                     l2692:
  4488  09FF  0841               	movf	___flmul@temp+1,w
  4489  0A00  00B0               	movwf	??___flmul
  4490  0A01  01B1               	clrf	??___flmul+1
  4491  0A02  01B2               	clrf	??___flmul+2
  4492  0A03  01B3               	clrf	??___flmul+3
  4493  0A04  0830               	movf	??___flmul,w
  4494  0A05  07BC               	addwf	___flmul@prod,f
  4495  0A06  0831               	movf	??___flmul+1,w
  4496  0A07  1103               	clrz
  4497  0A08  1803               	skipnc
  4498  0A09  3E01               	addlw	1
  4499  0A0A  1903               	skipnz
  4500  0A0B  2A0D               	goto	u3741
  4501  0A0C  07BD               	addwf	___flmul@prod+1,f
  4502  0A0D                     u3741:
  4503  0A0D  0832               	movf	??___flmul+2,w
  4504  0A0E  1103               	clrz
  4505  0A0F  1803               	skipnc
  4506  0A10  3E01               	addlw	1
  4507  0A11  1903               	skipnz
  4508  0A12  2A14               	goto	u3742
  4509  0A13  07BE               	addwf	___flmul@prod+2,f
  4510  0A14                     u3742:
  4511  0A14  0833               	movf	??___flmul+3,w
  4512  0A15  1103               	clrz
  4513  0A16  1803               	skipnc
  4514  0A17  3E01               	addlw	1
  4515  0A18  1903               	skipnz
  4516  0A19  2A1B               	goto	u3743
  4517  0A1A  07BF               	addwf	___flmul@prod+3,f
  4518  0A1B                     u3743:
  4519  0A1B  082A               	movf	___flmul@b+2,w
  4520  0A1C  00B0               	movwf	??___flmul
  4521  0A1D  0830               	movf	??___flmul,w
  4522  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  4523  0A1F  082C               	movf	___flmul@a,w
  4524  0A20  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4525  0A25  0873               	movf	?__Umul8_16+1,w
  4526  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4527  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4528  0A28  00C1               	movwf	___flmul@temp+1
  4529  0A29  0872               	movf	?__Umul8_16,w
  4530  0A2A  00C0               	movwf	___flmul@temp
  4531  0A2B                     l2694:
  4532  0A2B  0840               	movf	___flmul@temp,w
  4533  0A2C  00B0               	movwf	??___flmul
  4534  0A2D  01B1               	clrf	??___flmul+1
  4535  0A2E  01B2               	clrf	??___flmul+2
  4536  0A2F  01B3               	clrf	??___flmul+3
  4537  0A30  0830               	movf	??___flmul,w
  4538  0A31  07B6               	addwf	___flmul@grs,f
  4539  0A32  0831               	movf	??___flmul+1,w
  4540  0A33  1103               	clrz
  4541  0A34  1803               	skipnc
  4542  0A35  3E01               	addlw	1
  4543  0A36  1903               	skipnz
  4544  0A37  2A39               	goto	u3751
  4545  0A38  07B7               	addwf	___flmul@grs+1,f
  4546  0A39                     u3751:
  4547  0A39  0832               	movf	??___flmul+2,w
  4548  0A3A  1103               	clrz
  4549  0A3B  1803               	skipnc
  4550  0A3C  3E01               	addlw	1
  4551  0A3D  1903               	skipnz
  4552  0A3E  2A40               	goto	u3752
  4553  0A3F  07B8               	addwf	___flmul@grs+2,f
  4554  0A40                     u3752:
  4555  0A40  0833               	movf	??___flmul+3,w
  4556  0A41  1103               	clrz
  4557  0A42  1803               	skipnc
  4558  0A43  3E01               	addlw	1
  4559  0A44  1903               	skipnz
  4560  0A45  2A47               	goto	u3753
  4561  0A46  07B9               	addwf	___flmul@grs+3,f
  4562  0A47                     u3753:
  4563  0A47                     l2696:
  4564  0A47  0841               	movf	___flmul@temp+1,w
  4565  0A48  00B0               	movwf	??___flmul
  4566  0A49  01B1               	clrf	??___flmul+1
  4567  0A4A  01B2               	clrf	??___flmul+2
  4568  0A4B  01B3               	clrf	??___flmul+3
  4569  0A4C  0830               	movf	??___flmul,w
  4570  0A4D  07BC               	addwf	___flmul@prod,f
  4571  0A4E  0831               	movf	??___flmul+1,w
  4572  0A4F  1103               	clrz
  4573  0A50  1803               	skipnc
  4574  0A51  3E01               	addlw	1
  4575  0A52  1903               	skipnz
  4576  0A53  2A55               	goto	u3761
  4577  0A54  07BD               	addwf	___flmul@prod+1,f
  4578  0A55                     u3761:
  4579  0A55  0832               	movf	??___flmul+2,w
  4580  0A56  1103               	clrz
  4581  0A57  1803               	skipnc
  4582  0A58  3E01               	addlw	1
  4583  0A59  1903               	skipnz
  4584  0A5A  2A5C               	goto	u3762
  4585  0A5B  07BE               	addwf	___flmul@prod+2,f
  4586  0A5C                     u3762:
  4587  0A5C  0833               	movf	??___flmul+3,w
  4588  0A5D  1103               	clrz
  4589  0A5E  1803               	skipnc
  4590  0A5F  3E01               	addlw	1
  4591  0A60  1903               	skipnz
  4592  0A61  2A63               	goto	u3763
  4593  0A62  07BF               	addwf	___flmul@prod+3,f
  4594  0A63                     u3763:
  4595  0A63                     l2698:
  4596  0A63  3008               	movlw	8
  4597  0A64  00B0               	movwf	??___flmul
  4598  0A65                     u3775:
  4599  0A65  1003               	clrc
  4600  0A66  0DB6               	rlf	___flmul@grs,f
  4601  0A67  0DB7               	rlf	___flmul@grs+1,f
  4602  0A68  0DB8               	rlf	___flmul@grs+2,f
  4603  0A69  0DB9               	rlf	___flmul@grs+3,f
  4604  0A6A  0BB0               	decfsz	??___flmul,f
  4605  0A6B  2A65               	goto	u3775
  4606  0A6C                     l2700:
  4607  0A6C  0829               	movf	___flmul@b+1,w
  4608  0A6D  00B0               	movwf	??___flmul
  4609  0A6E  0830               	movf	??___flmul,w
  4610  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  4611  0A70  082C               	movf	___flmul@a,w
  4612  0A71  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4613  0A76  0873               	movf	?__Umul8_16+1,w
  4614  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4615  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4616  0A79  00C1               	movwf	___flmul@temp+1
  4617  0A7A  0872               	movf	?__Umul8_16,w
  4618  0A7B  00C0               	movwf	___flmul@temp
  4619  0A7C                     l2702:
  4620  0A7C  0840               	movf	___flmul@temp,w
  4621  0A7D  00B0               	movwf	??___flmul
  4622  0A7E  0841               	movf	___flmul@temp+1,w
  4623  0A7F  00B1               	movwf	??___flmul+1
  4624  0A80  01B2               	clrf	??___flmul+2
  4625  0A81  01B3               	clrf	??___flmul+3
  4626  0A82  0830               	movf	??___flmul,w
  4627  0A83  07B6               	addwf	___flmul@grs,f
  4628  0A84  0831               	movf	??___flmul+1,w
  4629  0A85  1103               	clrz
  4630  0A86  1803               	skipnc
  4631  0A87  3E01               	addlw	1
  4632  0A88  1903               	skipnz
  4633  0A89  2A8B               	goto	u3781
  4634  0A8A  07B7               	addwf	___flmul@grs+1,f
  4635  0A8B                     u3781:
  4636  0A8B  0832               	movf	??___flmul+2,w
  4637  0A8C  1103               	clrz
  4638  0A8D  1803               	skipnc
  4639  0A8E  3E01               	addlw	1
  4640  0A8F  1903               	skipnz
  4641  0A90  2A92               	goto	u3782
  4642  0A91  07B8               	addwf	___flmul@grs+2,f
  4643  0A92                     u3782:
  4644  0A92  0833               	movf	??___flmul+3,w
  4645  0A93  1103               	clrz
  4646  0A94  1803               	skipnc
  4647  0A95  3E01               	addlw	1
  4648  0A96  1903               	skipnz
  4649  0A97  2A99               	goto	u3783
  4650  0A98  07B9               	addwf	___flmul@grs+3,f
  4651  0A99                     u3783:
  4652  0A99                     l2704:
  4653  0A99  0828               	movf	___flmul@b,w
  4654  0A9A  00B0               	movwf	??___flmul
  4655  0A9B  0830               	movf	??___flmul,w
  4656  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  4657  0A9D  082D               	movf	___flmul@a+1,w
  4658  0A9E  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4659  0AA3  0873               	movf	?__Umul8_16+1,w
  4660  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4661  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4662  0AA6  00C1               	movwf	___flmul@temp+1
  4663  0AA7  0872               	movf	?__Umul8_16,w
  4664  0AA8  00C0               	movwf	___flmul@temp
  4665  0AA9                     l2706:
  4666  0AA9  0840               	movf	___flmul@temp,w
  4667  0AAA  00B0               	movwf	??___flmul
  4668  0AAB  0841               	movf	___flmul@temp+1,w
  4669  0AAC  00B1               	movwf	??___flmul+1
  4670  0AAD  01B2               	clrf	??___flmul+2
  4671  0AAE  01B3               	clrf	??___flmul+3
  4672  0AAF  0830               	movf	??___flmul,w
  4673  0AB0  07B6               	addwf	___flmul@grs,f
  4674  0AB1  0831               	movf	??___flmul+1,w
  4675  0AB2  1103               	clrz
  4676  0AB3  1803               	skipnc
  4677  0AB4  3E01               	addlw	1
  4678  0AB5  1903               	skipnz
  4679  0AB6  2AB8               	goto	u3791
  4680  0AB7  07B7               	addwf	___flmul@grs+1,f
  4681  0AB8                     u3791:
  4682  0AB8  0832               	movf	??___flmul+2,w
  4683  0AB9  1103               	clrz
  4684  0ABA  1803               	skipnc
  4685  0ABB  3E01               	addlw	1
  4686  0ABC  1903               	skipnz
  4687  0ABD  2ABF               	goto	u3792
  4688  0ABE  07B8               	addwf	___flmul@grs+2,f
  4689  0ABF                     u3792:
  4690  0ABF  0833               	movf	??___flmul+3,w
  4691  0AC0  1103               	clrz
  4692  0AC1  1803               	skipnc
  4693  0AC2  3E01               	addlw	1
  4694  0AC3  1903               	skipnz
  4695  0AC4  2AC6               	goto	u3793
  4696  0AC5  07B9               	addwf	___flmul@grs+3,f
  4697  0AC6                     u3793:
  4698  0AC6                     l2708:
  4699  0AC6  3008               	movlw	8
  4700  0AC7  00B0               	movwf	??___flmul
  4701  0AC8                     u3805:
  4702  0AC8  1003               	clrc
  4703  0AC9  0DB6               	rlf	___flmul@grs,f
  4704  0ACA  0DB7               	rlf	___flmul@grs+1,f
  4705  0ACB  0DB8               	rlf	___flmul@grs+2,f
  4706  0ACC  0DB9               	rlf	___flmul@grs+3,f
  4707  0ACD  0BB0               	decfsz	??___flmul,f
  4708  0ACE  2AC8               	goto	u3805
  4709  0ACF  0828               	movf	___flmul@b,w
  4710  0AD0  00B0               	movwf	??___flmul
  4711  0AD1  0830               	movf	??___flmul,w
  4712  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  4713  0AD3  082C               	movf	___flmul@a,w
  4714  0AD4  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4715  0AD9  0873               	movf	?__Umul8_16+1,w
  4716  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4717  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4718  0ADC  00C1               	movwf	___flmul@temp+1
  4719  0ADD  0872               	movf	?__Umul8_16,w
  4720  0ADE  00C0               	movwf	___flmul@temp
  4721  0ADF                     l2710:
  4722  0ADF  0840               	movf	___flmul@temp,w
  4723  0AE0  00B0               	movwf	??___flmul
  4724  0AE1  0841               	movf	___flmul@temp+1,w
  4725  0AE2  00B1               	movwf	??___flmul+1
  4726  0AE3  01B2               	clrf	??___flmul+2
  4727  0AE4  01B3               	clrf	??___flmul+3
  4728  0AE5  0830               	movf	??___flmul,w
  4729  0AE6  07B6               	addwf	___flmul@grs,f
  4730  0AE7  0831               	movf	??___flmul+1,w
  4731  0AE8  1103               	clrz
  4732  0AE9  1803               	skipnc
  4733  0AEA  3E01               	addlw	1
  4734  0AEB  1903               	skipnz
  4735  0AEC  2AEE               	goto	u3811
  4736  0AED  07B7               	addwf	___flmul@grs+1,f
  4737  0AEE                     u3811:
  4738  0AEE  0832               	movf	??___flmul+2,w
  4739  0AEF  1103               	clrz
  4740  0AF0  1803               	skipnc
  4741  0AF1  3E01               	addlw	1
  4742  0AF2  1903               	skipnz
  4743  0AF3  2AF5               	goto	u3812
  4744  0AF4  07B8               	addwf	___flmul@grs+2,f
  4745  0AF5                     u3812:
  4746  0AF5  0833               	movf	??___flmul+3,w
  4747  0AF6  1103               	clrz
  4748  0AF7  1803               	skipnc
  4749  0AF8  3E01               	addlw	1
  4750  0AF9  1903               	skipnz
  4751  0AFA  2AFC               	goto	u3813
  4752  0AFB  07B9               	addwf	___flmul@grs+3,f
  4753  0AFC                     u3813:
  4754  0AFC                     l2712:
  4755  0AFC  0829               	movf	___flmul@b+1,w
  4756  0AFD  00B0               	movwf	??___flmul
  4757  0AFE  0830               	movf	??___flmul,w
  4758  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  4759  0B00  082E               	movf	___flmul@a+2,w
  4760  0B01  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4761  0B06  0873               	movf	?__Umul8_16+1,w
  4762  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4763  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4764  0B09  00C1               	movwf	___flmul@temp+1
  4765  0B0A  0872               	movf	?__Umul8_16,w
  4766  0B0B  00C0               	movwf	___flmul@temp
  4767  0B0C  0840               	movf	___flmul@temp,w
  4768  0B0D  00B0               	movwf	??___flmul
  4769  0B0E  0841               	movf	___flmul@temp+1,w
  4770  0B0F  00B1               	movwf	??___flmul+1
  4771  0B10  01B2               	clrf	??___flmul+2
  4772  0B11  01B3               	clrf	??___flmul+3
  4773  0B12  0830               	movf	??___flmul,w
  4774  0B13  07BC               	addwf	___flmul@prod,f
  4775  0B14  0831               	movf	??___flmul+1,w
  4776  0B15  1103               	clrz
  4777  0B16  1803               	skipnc
  4778  0B17  3E01               	addlw	1
  4779  0B18  1903               	skipnz
  4780  0B19  2B1B               	goto	u3821
  4781  0B1A  07BD               	addwf	___flmul@prod+1,f
  4782  0B1B                     u3821:
  4783  0B1B  0832               	movf	??___flmul+2,w
  4784  0B1C  1103               	clrz
  4785  0B1D  1803               	skipnc
  4786  0B1E  3E01               	addlw	1
  4787  0B1F  1903               	skipnz
  4788  0B20  2B22               	goto	u3822
  4789  0B21  07BE               	addwf	___flmul@prod+2,f
  4790  0B22                     u3822:
  4791  0B22  0833               	movf	??___flmul+3,w
  4792  0B23  1103               	clrz
  4793  0B24  1803               	skipnc
  4794  0B25  3E01               	addlw	1
  4795  0B26  1903               	skipnz
  4796  0B27  2B29               	goto	u3823
  4797  0B28  07BF               	addwf	___flmul@prod+3,f
  4798  0B29                     u3823:
  4799  0B29                     l2714:
  4800  0B29  082A               	movf	___flmul@b+2,w
  4801  0B2A  00B0               	movwf	??___flmul
  4802  0B2B  0830               	movf	??___flmul,w
  4803  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  4804  0B2D  082D               	movf	___flmul@a+1,w
  4805  0B2E  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4806  0B33  0873               	movf	?__Umul8_16+1,w
  4807  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4808  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4809  0B36  00C1               	movwf	___flmul@temp+1
  4810  0B37  0872               	movf	?__Umul8_16,w
  4811  0B38  00C0               	movwf	___flmul@temp
  4812  0B39                     l2716:
  4813  0B39  0840               	movf	___flmul@temp,w
  4814  0B3A  00B0               	movwf	??___flmul
  4815  0B3B  0841               	movf	___flmul@temp+1,w
  4816  0B3C  00B1               	movwf	??___flmul+1
  4817  0B3D  01B2               	clrf	??___flmul+2
  4818  0B3E  01B3               	clrf	??___flmul+3
  4819  0B3F  0830               	movf	??___flmul,w
  4820  0B40  07BC               	addwf	___flmul@prod,f
  4821  0B41  0831               	movf	??___flmul+1,w
  4822  0B42  1103               	clrz
  4823  0B43  1803               	skipnc
  4824  0B44  3E01               	addlw	1
  4825  0B45  1903               	skipnz
  4826  0B46  2B48               	goto	u3831
  4827  0B47  07BD               	addwf	___flmul@prod+1,f
  4828  0B48                     u3831:
  4829  0B48  0832               	movf	??___flmul+2,w
  4830  0B49  1103               	clrz
  4831  0B4A  1803               	skipnc
  4832  0B4B  3E01               	addlw	1
  4833  0B4C  1903               	skipnz
  4834  0B4D  2B4F               	goto	u3832
  4835  0B4E  07BE               	addwf	___flmul@prod+2,f
  4836  0B4F                     u3832:
  4837  0B4F  0833               	movf	??___flmul+3,w
  4838  0B50  1103               	clrz
  4839  0B51  1803               	skipnc
  4840  0B52  3E01               	addlw	1
  4841  0B53  1903               	skipnz
  4842  0B54  2B56               	goto	u3833
  4843  0B55  07BF               	addwf	___flmul@prod+3,f
  4844  0B56                     u3833:
  4845  0B56  082A               	movf	___flmul@b+2,w
  4846  0B57  00B0               	movwf	??___flmul
  4847  0B58  0830               	movf	??___flmul,w
  4848  0B59  00F2               	movwf	__Umul8_16@multiplicand
  4849  0B5A  082E               	movf	___flmul@a+2,w
  4850  0B5B  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  4851  0B60  0873               	movf	?__Umul8_16+1,w
  4852  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4853  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4854  0B63  00C1               	movwf	___flmul@temp+1
  4855  0B64  0872               	movf	?__Umul8_16,w
  4856  0B65  00C0               	movwf	___flmul@temp
  4857  0B66                     l2718:
  4858  0B66  0840               	movf	___flmul@temp,w
  4859  0B67  00B0               	movwf	??___flmul
  4860  0B68  0841               	movf	___flmul@temp+1,w
  4861  0B69  00B1               	movwf	??___flmul+1
  4862  0B6A  01B2               	clrf	??___flmul+2
  4863  0B6B  01B3               	clrf	??___flmul+3
  4864  0B6C  3008               	movlw	8
  4865  0B6D                     u3845:
  4866  0B6D  1003               	clrc
  4867  0B6E  0DB0               	rlf	??___flmul,f
  4868  0B6F  0DB1               	rlf	??___flmul+1,f
  4869  0B70  0DB2               	rlf	??___flmul+2,f
  4870  0B71  0DB3               	rlf	??___flmul+3,f
  4871  0B72                     u3840:
  4872  0B72  3EFF               	addlw	-1
  4873  0B73  1D03               	skipz
  4874  0B74  2B6D               	goto	u3845
  4875  0B75  0830               	movf	??___flmul,w
  4876  0B76  07BC               	addwf	___flmul@prod,f
  4877  0B77  0831               	movf	??___flmul+1,w
  4878  0B78  1103               	clrz
  4879  0B79  1803               	skipnc
  4880  0B7A  3E01               	addlw	1
  4881  0B7B  1903               	skipnz
  4882  0B7C  2B7E               	goto	u3851
  4883  0B7D  07BD               	addwf	___flmul@prod+1,f
  4884  0B7E                     u3851:
  4885  0B7E  0832               	movf	??___flmul+2,w
  4886  0B7F  1103               	clrz
  4887  0B80  1803               	skipnc
  4888  0B81  3E01               	addlw	1
  4889  0B82  1903               	skipnz
  4890  0B83  2B85               	goto	u3852
  4891  0B84  07BE               	addwf	___flmul@prod+2,f
  4892  0B85                     u3852:
  4893  0B85  0833               	movf	??___flmul+3,w
  4894  0B86  1103               	clrz
  4895  0B87  1803               	skipnc
  4896  0B88  3E01               	addlw	1
  4897  0B89  1903               	skipnz
  4898  0B8A  2B8C               	goto	u3853
  4899  0B8B  07BF               	addwf	___flmul@prod+3,f
  4900  0B8C                     u3853:
  4901  0B8C                     l2720:
  4902  0B8C  0836               	movf	___flmul@grs,w
  4903  0B8D  00B0               	movwf	??___flmul
  4904  0B8E  0837               	movf	___flmul@grs+1,w
  4905  0B8F  00B1               	movwf	??___flmul+1
  4906  0B90  0838               	movf	___flmul@grs+2,w
  4907  0B91  00B2               	movwf	??___flmul+2
  4908  0B92  0839               	movf	___flmul@grs+3,w
  4909  0B93  00B3               	movwf	??___flmul+3
  4910  0B94  3018               	movlw	24
  4911  0B95                     u3865:
  4912  0B95  1003               	clrc
  4913  0B96  0CB3               	rrf	??___flmul+3,f
  4914  0B97  0CB2               	rrf	??___flmul+2,f
  4915  0B98  0CB1               	rrf	??___flmul+1,f
  4916  0B99  0CB0               	rrf	??___flmul,f
  4917  0B9A                     u3860:
  4918  0B9A  3EFF               	addlw	-1
  4919  0B9B  1D03               	skipz
  4920  0B9C  2B95               	goto	u3865
  4921  0B9D  0830               	movf	??___flmul,w
  4922  0B9E  07BC               	addwf	___flmul@prod,f
  4923  0B9F  0831               	movf	??___flmul+1,w
  4924  0BA0  1103               	clrz
  4925  0BA1  1803               	skipnc
  4926  0BA2  3E01               	addlw	1
  4927  0BA3  1903               	skipnz
  4928  0BA4  2BA6               	goto	u3871
  4929  0BA5  07BD               	addwf	___flmul@prod+1,f
  4930  0BA6                     u3871:
  4931  0BA6  0832               	movf	??___flmul+2,w
  4932  0BA7  1103               	clrz
  4933  0BA8  1803               	skipnc
  4934  0BA9  3E01               	addlw	1
  4935  0BAA  1903               	skipnz
  4936  0BAB  2BAD               	goto	u3872
  4937  0BAC  07BE               	addwf	___flmul@prod+2,f
  4938  0BAD                     u3872:
  4939  0BAD  0833               	movf	??___flmul+3,w
  4940  0BAE  1103               	clrz
  4941  0BAF  1803               	skipnc
  4942  0BB0  3E01               	addlw	1
  4943  0BB1  1903               	skipnz
  4944  0BB2  2BB4               	goto	u3873
  4945  0BB3  07BF               	addwf	___flmul@prod+3,f
  4946  0BB4                     u3873:
  4947  0BB4                     l2722:
  4948  0BB4  3008               	movlw	8
  4949  0BB5  00B0               	movwf	??___flmul
  4950  0BB6                     u3885:
  4951  0BB6  1003               	clrc
  4952  0BB7  0DB6               	rlf	___flmul@grs,f
  4953  0BB8  0DB7               	rlf	___flmul@grs+1,f
  4954  0BB9  0DB8               	rlf	___flmul@grs+2,f
  4955  0BBA  0DB9               	rlf	___flmul@grs+3,f
  4956  0BBB  0BB0               	decfsz	??___flmul,f
  4957  0BBC  2BB6               	goto	u3885
  4958  0BBD                     l2724:
  4959  0BBD  083B               	movf	___flmul@bexp,w
  4960  0BBE  073A               	addwf	___flmul@aexp,w
  4961  0BBF  00B0               	movwf	??___flmul
  4962  0BC0  01B1               	clrf	??___flmul+1
  4963  0BC1  0DB1               	rlf	??___flmul+1,f
  4964  0BC2  0830               	movf	??___flmul,w
  4965  0BC3  3E82               	addlw	130
  4966  0BC4  00C0               	movwf	___flmul@temp
  4967  0BC5  0831               	movf	??___flmul+1,w
  4968  0BC6  1803               	skipnc
  4969  0BC7  3E01               	addlw	1
  4970  0BC8  3EFF               	addlw	255
  4971  0BC9  00C1               	movwf	___flmul@temp+1
  4972  0BCA  2BE8               	goto	l2736
  4973  0BCB                     l2726:
  4974  0BCB  3001               	movlw	1
  4975  0BCC  00B0               	movwf	??___flmul
  4976  0BCD                     u3895:
  4977  0BCD  1003               	clrc
  4978  0BCE  0DBC               	rlf	___flmul@prod,f
  4979  0BCF  0DBD               	rlf	___flmul@prod+1,f
  4980  0BD0  0DBE               	rlf	___flmul@prod+2,f
  4981  0BD1  0DBF               	rlf	___flmul@prod+3,f
  4982  0BD2  0BB0               	decfsz	??___flmul,f
  4983  0BD3  2BCD               	goto	u3895
  4984  0BD4                     l2728:
  4985  0BD4  1FB9               	btfss	___flmul@grs+3,7
  4986  0BD5  2BD7               	goto	u3901
  4987  0BD6  2BD8               	goto	u3900
  4988  0BD7                     u3901:
  4989  0BD7  2BD9               	goto	l2732
  4990  0BD8                     u3900:
  4991  0BD8                     l2730:
  4992  0BD8  143C               	bsf	___flmul@prod,0
  4993  0BD9                     l2732:
  4994  0BD9  3001               	movlw	1
  4995  0BDA  00B0               	movwf	??___flmul
  4996  0BDB                     u3915:
  4997  0BDB  1003               	clrc
  4998  0BDC  0DB6               	rlf	___flmul@grs,f
  4999  0BDD  0DB7               	rlf	___flmul@grs+1,f
  5000  0BDE  0DB8               	rlf	___flmul@grs+2,f
  5001  0BDF  0DB9               	rlf	___flmul@grs+3,f
  5002  0BE0  0BB0               	decfsz	??___flmul,f
  5003  0BE1  2BDB               	goto	u3915
  5004  0BE2                     l2734:
  5005  0BE2  30FF               	movlw	255
  5006  0BE3  07C0               	addwf	___flmul@temp,f
  5007  0BE4  1803               	skipnc
  5008  0BE5  0AC1               	incf	___flmul@temp+1,f
  5009  0BE6  30FF               	movlw	255
  5010  0BE7  07C1               	addwf	___flmul@temp+1,f
  5011  0BE8                     l2736:
  5012  0BE8  1FBE               	btfss	___flmul@prod+2,7
  5013  0BE9  2BEB               	goto	u3921
  5014  0BEA  2BEC               	goto	u3920
  5015  0BEB                     u3921:
  5016  0BEB  2BCB               	goto	l2726
  5017  0BEC                     u3920:
  5018  0BEC                     l2738:
  5019  0BEC  01BA               	clrf	___flmul@aexp
  5020  0BED                     l2740:
  5021  0BED  1FB9               	btfss	___flmul@grs+3,7
  5022  0BEE  2BF0               	goto	u3931
  5023  0BEF  2BF1               	goto	u3930
  5024  0BF0                     u3931:
  5025  0BF0  2C0D               	goto	l2748
  5026  0BF1                     u3930:
  5027  0BF1                     l2742:
  5028  0BF1  30FF               	movlw	255
  5029  0BF2  0536               	andwf	___flmul@grs,w
  5030  0BF3  00B0               	movwf	??___flmul
  5031  0BF4  30FF               	movlw	255
  5032  0BF5  0537               	andwf	___flmul@grs+1,w
  5033  0BF6  00B1               	movwf	??___flmul+1
  5034  0BF7  30FF               	movlw	255
  5035  0BF8  0538               	andwf	___flmul@grs+2,w
  5036  0BF9  00B2               	movwf	??___flmul+2
  5037  0BFA  307F               	movlw	127
  5038  0BFB  0539               	andwf	___flmul@grs+3,w
  5039  0BFC  00B3               	movwf	??___flmul+3
  5040  0BFD  0833               	movf	??___flmul+3,w
  5041  0BFE  0432               	iorwf	??___flmul+2,w
  5042  0BFF  0431               	iorwf	??___flmul+1,w
  5043  0C00  0430               	iorwf	??___flmul,w
  5044  0C01  1903               	skipnz
  5045  0C02  2C04               	goto	u3941
  5046  0C03  2C05               	goto	u3940
  5047  0C04                     u3941:
  5048  0C04  2C08               	goto	l808
  5049  0C05                     u3940:
  5050  0C05                     l2744:
  5051  0C05  01BA               	clrf	___flmul@aexp
  5052  0C06  0ABA               	incf	___flmul@aexp,f
  5053  0C07  2C0D               	goto	l2748
  5054  0C08                     l808:
  5055  0C08  1C3C               	btfss	___flmul@prod,0
  5056  0C09  2C0B               	goto	u3951
  5057  0C0A  2C0C               	goto	u3950
  5058  0C0B                     u3951:
  5059  0C0B  2C0D               	goto	l2748
  5060  0C0C                     u3950:
  5061  0C0C  2C05               	goto	l2744
  5062  0C0D                     l2748:
  5063  0C0D  083A               	movf	___flmul@aexp,w
  5064  0C0E  1903               	btfsc	3,2
  5065  0C0F  2C11               	goto	u3961
  5066  0C10  2C12               	goto	u3960
  5067  0C11                     u3961:
  5068  0C11  2C43               	goto	l2758
  5069  0C12                     u3960:
  5070  0C12                     l2750:
  5071  0C12  3001               	movlw	1
  5072  0C13  07BC               	addwf	___flmul@prod,f
  5073  0C14  3000               	movlw	0
  5074  0C15  1803               	skipnc
  5075  0C16  3001               	movlw	1
  5076  0C17  07BD               	addwf	___flmul@prod+1,f
  5077  0C18  3000               	movlw	0
  5078  0C19  1803               	skipnc
  5079  0C1A  3001               	movlw	1
  5080  0C1B  07BE               	addwf	___flmul@prod+2,f
  5081  0C1C  3000               	movlw	0
  5082  0C1D  1803               	skipnc
  5083  0C1E  3001               	movlw	1
  5084  0C1F  07BF               	addwf	___flmul@prod+3,f
  5085  0C20                     l2752:
  5086  0C20  1C3F               	btfss	___flmul@prod+3,0
  5087  0C21  2C23               	goto	u3971
  5088  0C22  2C24               	goto	u3970
  5089  0C23                     u3971:
  5090  0C23  2C43               	goto	l2758
  5091  0C24                     u3970:
  5092  0C24                     l2754:
  5093  0C24  083C               	movf	___flmul@prod,w
  5094  0C25  00B0               	movwf	??___flmul
  5095  0C26  083D               	movf	___flmul@prod+1,w
  5096  0C27  00B1               	movwf	??___flmul+1
  5097  0C28  083E               	movf	___flmul@prod+2,w
  5098  0C29  00B2               	movwf	??___flmul+2
  5099  0C2A  083F               	movf	___flmul@prod+3,w
  5100  0C2B  00B3               	movwf	??___flmul+3
  5101  0C2C  3001               	movlw	1
  5102  0C2D  00B4               	movwf	??___flmul+4
  5103  0C2E                     u3985:
  5104  0C2E  0D33               	rlf	??___flmul+3,w
  5105  0C2F  0CB3               	rrf	??___flmul+3,f
  5106  0C30  0CB2               	rrf	??___flmul+2,f
  5107  0C31  0CB1               	rrf	??___flmul+1,f
  5108  0C32  0CB0               	rrf	??___flmul,f
  5109  0C33                     u3980:
  5110  0C33  0BB4               	decfsz	??___flmul+4,f
  5111  0C34  2C2E               	goto	u3985
  5112  0C35  0833               	movf	??___flmul+3,w
  5113  0C36  00BF               	movwf	___flmul@prod+3
  5114  0C37  0832               	movf	??___flmul+2,w
  5115  0C38  00BE               	movwf	___flmul@prod+2
  5116  0C39  0831               	movf	??___flmul+1,w
  5117  0C3A  00BD               	movwf	___flmul@prod+1
  5118  0C3B  0830               	movf	??___flmul,w
  5119  0C3C  00BC               	movwf	___flmul@prod
  5120  0C3D                     l2756:
  5121  0C3D  3001               	movlw	1
  5122  0C3E  07C0               	addwf	___flmul@temp,f
  5123  0C3F  1803               	skipnc
  5124  0C40  0AC1               	incf	___flmul@temp+1,f
  5125  0C41  3000               	movlw	0
  5126  0C42  07C1               	addwf	___flmul@temp+1,f
  5127  0C43                     l2758:
  5128  0C43  0841               	movf	___flmul@temp+1,w
  5129  0C44  3A80               	xorlw	128
  5130  0C45  00FF               	movwf	btemp+1
  5131  0C46  3080               	movlw	128
  5132  0C47  027F               	subwf	btemp+1,w
  5133  0C48  1D03               	skipz
  5134  0C49  2C4C               	goto	u3995
  5135  0C4A  30FF               	movlw	255
  5136  0C4B  0240               	subwf	___flmul@temp,w
  5137  0C4C                     u3995:
  5138  0C4C  1C03               	skipc
  5139  0C4D  2C4F               	goto	u3991
  5140  0C4E  2C50               	goto	u3990
  5141  0C4F                     u3991:
  5142  0C4F  2C5B               	goto	l2762
  5143  0C50                     u3990:
  5144  0C50                     l2760:
  5145  0C50  307F               	movlw	127
  5146  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5148  0C53  00BF               	movwf	___flmul@prod+3
  5149  0C54  3080               	movlw	128
  5150  0C55  00BE               	movwf	___flmul@prod+2
  5151  0C56  3000               	movlw	0
  5152  0C57  00BD               	movwf	___flmul@prod+1
  5153  0C58  3000               	movlw	0
  5154  0C59  00BC               	movwf	___flmul@prod
  5155  0C5A  2C90               	goto	l814
  5156  0C5B                     l2762:
  5157  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5158  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5159  0C5D  0841               	movf	___flmul@temp+1,w
  5160  0C5E  3A80               	xorlw	128
  5161  0C5F  00FF               	movwf	btemp+1
  5162  0C60  3080               	movlw	128
  5163  0C61  027F               	subwf	btemp+1,w
  5164  0C62  1D03               	skipz
  5165  0C63  2C66               	goto	u4005
  5166  0C64  3001               	movlw	1
  5167  0C65  0240               	subwf	___flmul@temp,w
  5168  0C66                     u4005:
  5169  0C66  1803               	skipnc
  5170  0C67  2C69               	goto	u4001
  5171  0C68  2C6A               	goto	u4000
  5172  0C69                     u4001:
  5173  0C69  2C76               	goto	l2768
  5174  0C6A                     u4000:
  5175  0C6A                     l2764:
  5176  0C6A  3000               	movlw	0
  5177  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5179  0C6D  00BF               	movwf	___flmul@prod+3
  5180  0C6E  3000               	movlw	0
  5181  0C6F  00BE               	movwf	___flmul@prod+2
  5182  0C70  3000               	movlw	0
  5183  0C71  00BD               	movwf	___flmul@prod+1
  5184  0C72  3000               	movlw	0
  5185  0C73  00BC               	movwf	___flmul@prod
  5186  0C74                     l2766:
  5187  0C74  01B5               	clrf	___flmul@sign
  5188  0C75  2C90               	goto	l814
  5189  0C76                     l2768:
  5190  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5191  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5192  0C78  0840               	movf	___flmul@temp,w
  5193  0C79  00B0               	movwf	??___flmul
  5194  0C7A  0830               	movf	??___flmul,w
  5195  0C7B  00BB               	movwf	___flmul@bexp
  5196  0C7C  30FF               	movlw	255
  5197  0C7D  05BC               	andwf	___flmul@prod,f
  5198  0C7E  30FF               	movlw	255
  5199  0C7F  05BD               	andwf	___flmul@prod+1,f
  5200  0C80  307F               	movlw	127
  5201  0C81  05BE               	andwf	___flmul@prod+2,f
  5202  0C82  3000               	movlw	0
  5203  0C83  05BF               	andwf	___flmul@prod+3,f
  5204  0C84                     l2770:
  5205  0C84  1C3B               	btfss	___flmul@bexp,0
  5206  0C85  2C87               	goto	u4011
  5207  0C86  2C88               	goto	u4010
  5208  0C87                     u4011:
  5209  0C87  2C89               	goto	l2774
  5210  0C88                     u4010:
  5211  0C88                     l2772:
  5212  0C88  17BE               	bsf	___flmul@prod+2,7
  5213  0C89                     l2774:
  5214  0C89  083B               	movf	___flmul@bexp,w
  5215  0C8A  00B0               	movwf	??___flmul
  5216  0C8B  1003               	clrc
  5217  0C8C  0C30               	rrf	??___flmul,w
  5218  0C8D  00B1               	movwf	??___flmul+1
  5219  0C8E  0831               	movf	??___flmul+1,w
  5220  0C8F  00BF               	movwf	___flmul@prod+3
  5221  0C90                     l814:
  5222  0C90  0835               	movf	___flmul@sign,w
  5223  0C91  00B0               	movwf	??___flmul
  5224  0C92  0830               	movf	??___flmul,w
  5225  0C93  04BF               	iorwf	___flmul@prod+3,f
  5226  0C94                     l2776:
  5227  0C94  083F               	movf	___flmul@prod+3,w
  5228  0C95  00AB               	movwf	?___flmul+3
  5229  0C96  083E               	movf	___flmul@prod+2,w
  5230  0C97  00AA               	movwf	?___flmul+2
  5231  0C98  083D               	movf	___flmul@prod+1,w
  5232  0C99  00A9               	movwf	?___flmul+1
  5233  0C9A  083C               	movf	___flmul@prod,w
  5234  0C9B  00A8               	movwf	?___flmul
  5235  0C9C                     l802:
  5236  0C9C  0008               	return
  5237  0C9D                     __end_of___flmul:
  5238                           
  5239                           	psect	text10
  5240  07D5                     __ptext10:	
  5241 ;; *************** function __Umul8_16 *****************
  5242 ;; Defined at:
  5243 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  multiplier      1    wreg     unsigned char 
  5246 ;;  multiplicand    1    2[COMMON] unsigned char 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  multiplier      1   10[COMMON] unsigned char 
  5249 ;;  word_mpld       2    8[COMMON] unsigned int 
  5250 ;;  product         2    6[COMMON] unsigned int 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  2    2[COMMON] unsigned int 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5260 ;;      Params:         2       0       0       0       0
  5261 ;;      Locals:         5       0       0       0       0
  5262 ;;      Temps:          2       0       0       0       0
  5263 ;;      Totals:         9       0       0       0       0
  5264 ;;Total ram usage:        9 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    1
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		___flmul
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           
  5275                           ;psect for function __Umul8_16
  5276  07D5                     __Umul8_16:
  5277                           
  5278                           ;incstack = 0
  5279                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5280                           ;__Umul8_16@multiplier stored from wreg
  5281  07D5  00FA               	movwf	__Umul8_16@multiplier
  5282  07D6                     l2302:
  5283  07D6  01F6               	clrf	__Umul8_16@product
  5284  07D7  01F7               	clrf	__Umul8_16@product+1
  5285  07D8                     l2304:
  5286  07D8  0872               	movf	__Umul8_16@multiplicand,w
  5287  07D9  00F4               	movwf	??__Umul8_16
  5288  07DA  01F5               	clrf	??__Umul8_16+1
  5289  07DB  0874               	movf	??__Umul8_16,w
  5290  07DC  00F8               	movwf	__Umul8_16@word_mpld
  5291  07DD  0875               	movf	??__Umul8_16+1,w
  5292  07DE  00F9               	movwf	__Umul8_16@word_mpld+1
  5293  07DF                     l2306:
  5294  07DF  1C7A               	btfss	__Umul8_16@multiplier,0
  5295  07E0  2FE2               	goto	u2841
  5296  07E1  2FE3               	goto	u2840
  5297  07E2                     u2841:
  5298  07E2  2FE9               	goto	l821
  5299  07E3                     u2840:
  5300  07E3                     l2308:
  5301  07E3  0878               	movf	__Umul8_16@word_mpld,w
  5302  07E4  07F6               	addwf	__Umul8_16@product,f
  5303  07E5  1803               	skipnc
  5304  07E6  0AF7               	incf	__Umul8_16@product+1,f
  5305  07E7  0879               	movf	__Umul8_16@word_mpld+1,w
  5306  07E8  07F7               	addwf	__Umul8_16@product+1,f
  5307  07E9                     l821:
  5308  07E9  3001               	movlw	1
  5309  07EA                     u2855:
  5310  07EA  1003               	clrc
  5311  07EB  0DF8               	rlf	__Umul8_16@word_mpld,f
  5312  07EC  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  5313  07ED  3EFF               	addlw	-1
  5314  07EE  1D03               	skipz
  5315  07EF  2FEA               	goto	u2855
  5316  07F0  1003               	clrc
  5317  07F1  0CFA               	rrf	__Umul8_16@multiplier,f
  5318  07F2                     l2310:
  5319  07F2  087A               	movf	__Umul8_16@multiplier,w
  5320  07F3  1D03               	btfss	3,2
  5321  07F4  2FF6               	goto	u2861
  5322  07F5  2FF7               	goto	u2860
  5323  07F6                     u2861:
  5324  07F6  2FDF               	goto	l2306
  5325  07F7                     u2860:
  5326  07F7                     l2312:
  5327  07F7  0877               	movf	__Umul8_16@product+1,w
  5328  07F8  00F3               	movwf	?__Umul8_16+1
  5329  07F9  0876               	movf	__Umul8_16@product,w
  5330  07FA  00F2               	movwf	?__Umul8_16
  5331  07FB                     l823:
  5332  07FB  0008               	return
  5333  07FC                     __end_of__Umul8_16:
  5334                           
  5335                           	psect	text11
  5336  1175                     __ptext11:	
  5337 ;; *************** function __tdiv_to_l_ *****************
  5338 ;; Defined at:
  5339 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  f1              4    2[COMMON] float 
  5342 ;;  f2              4    6[COMMON] float 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  quot            4    4[BANK0 ] unsigned long 
  5345 ;;  exp1            1    9[BANK0 ] unsigned char 
  5346 ;;  cntr            1    8[BANK0 ] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  4    2[COMMON] unsigned long 
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5356 ;;      Params:         8       0       0       0       0
  5357 ;;      Locals:         0       6       0       0       0
  5358 ;;      Temps:          0       4       0       0       0
  5359 ;;      Totals:         8      10       0       0       0
  5360 ;;Total ram usage:       18 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    1
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_sprintf
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           
  5371                           ;psect for function __tdiv_to_l_
  5372  1175                     __tdiv_to_l_:
  5373  1175                     l2858:	
  5374                           ;incstack = 0
  5375                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5376                           
  5377  1175  0872               	movf	__tdiv_to_l_@f1,w
  5378  1176  1283               	bcf	3,5	;RP0=0, select bank0
  5379  1177  1303               	bcf	3,6	;RP1=0, select bank0
  5380  1178  00A0               	movwf	??__tdiv_to_l_
  5381  1179  0873               	movf	__tdiv_to_l_@f1+1,w
  5382  117A  00A1               	movwf	??__tdiv_to_l_+1
  5383  117B  0874               	movf	__tdiv_to_l_@f1+2,w
  5384  117C  00A2               	movwf	??__tdiv_to_l_+2
  5385  117D  1003               	clrc
  5386  117E  0D21               	rlf	??__tdiv_to_l_+1,w
  5387  117F  0D22               	rlf	??__tdiv_to_l_+2,w
  5388  1180  00A3               	movwf	??__tdiv_to_l_+3
  5389  1181  0823               	movf	??__tdiv_to_l_+3,w
  5390  1182  00A9               	movwf	__tdiv_to_l_@exp1
  5391  1183  0829               	movf	__tdiv_to_l_@exp1,w
  5392  1184  1D03               	btfss	3,2
  5393  1185  2987               	goto	u4321
  5394  1186  2988               	goto	u4320
  5395  1187                     u4321:
  5396  1187  2991               	goto	l2864
  5397  1188                     u4320:
  5398  1188                     l2860:
  5399  1188  3000               	movlw	0
  5400  1189  00F5               	movwf	?__tdiv_to_l_+3
  5401  118A  3000               	movlw	0
  5402  118B  00F4               	movwf	?__tdiv_to_l_+2
  5403  118C  3000               	movlw	0
  5404  118D  00F3               	movwf	?__tdiv_to_l_+1
  5405  118E  3000               	movlw	0
  5406  118F  00F2               	movwf	?__tdiv_to_l_
  5407  1190  2A31               	goto	l596
  5408  1191                     l2864:
  5409  1191  0876               	movf	__tdiv_to_l_@f2,w
  5410  1192  00A0               	movwf	??__tdiv_to_l_
  5411  1193  0877               	movf	__tdiv_to_l_@f2+1,w
  5412  1194  00A1               	movwf	??__tdiv_to_l_+1
  5413  1195  0878               	movf	__tdiv_to_l_@f2+2,w
  5414  1196  00A2               	movwf	??__tdiv_to_l_+2
  5415  1197  1003               	clrc
  5416  1198  0D21               	rlf	??__tdiv_to_l_+1,w
  5417  1199  0D22               	rlf	??__tdiv_to_l_+2,w
  5418  119A  00A3               	movwf	??__tdiv_to_l_+3
  5419  119B  0823               	movf	??__tdiv_to_l_+3,w
  5420  119C  00A8               	movwf	__tdiv_to_l_@cntr
  5421  119D  0828               	movf	__tdiv_to_l_@cntr,w
  5422  119E  1D03               	btfss	3,2
  5423  119F  29A1               	goto	u4331
  5424  11A0  29A2               	goto	u4330
  5425  11A1                     u4331:
  5426  11A1  29A3               	goto	l597
  5427  11A2                     u4330:
  5428  11A2  2988               	goto	l2860
  5429  11A3                     l597:
  5430  11A3  17F3               	bsf	__tdiv_to_l_@f1+1,7
  5431  11A4                     l2870:
  5432  11A4  30FF               	movlw	255
  5433  11A5  05F2               	andwf	__tdiv_to_l_@f1,f
  5434  11A6  30FF               	movlw	255
  5435  11A7  05F3               	andwf	__tdiv_to_l_@f1+1,f
  5436  11A8  3000               	movlw	0
  5437  11A9  05F4               	andwf	__tdiv_to_l_@f1+2,f
  5438  11AA                     l2872:
  5439  11AA  17F7               	bsf	__tdiv_to_l_@f2+1,7
  5440  11AB  30FF               	movlw	255
  5441  11AC  05F6               	andwf	__tdiv_to_l_@f2,f
  5442  11AD  30FF               	movlw	255
  5443  11AE  05F7               	andwf	__tdiv_to_l_@f2+1,f
  5444  11AF  3000               	movlw	0
  5445  11B0  05F8               	andwf	__tdiv_to_l_@f2+2,f
  5446  11B1  3000               	movlw	0
  5447  11B2  00A7               	movwf	__tdiv_to_l_@quot+3
  5448  11B3  3000               	movlw	0
  5449  11B4  00A6               	movwf	__tdiv_to_l_@quot+2
  5450  11B5  3000               	movlw	0
  5451  11B6  00A5               	movwf	__tdiv_to_l_@quot+1
  5452  11B7  3000               	movlw	0
  5453  11B8  00A4               	movwf	__tdiv_to_l_@quot
  5454  11B9                     l2874:
  5455  11B9  307F               	movlw	127
  5456  11BA  02A9               	subwf	__tdiv_to_l_@exp1,f
  5457  11BB                     l2876:
  5458  11BB  3098               	movlw	152
  5459  11BC  0728               	addwf	__tdiv_to_l_@cntr,w
  5460  11BD  00A0               	movwf	??__tdiv_to_l_
  5461  11BE  0820               	movf	??__tdiv_to_l_,w
  5462  11BF  02A9               	subwf	__tdiv_to_l_@exp1,f
  5463  11C0  3018               	movlw	24
  5464  11C1  00A0               	movwf	??__tdiv_to_l_
  5465  11C2  0820               	movf	??__tdiv_to_l_,w
  5466  11C3  00A8               	movwf	__tdiv_to_l_@cntr
  5467  11C4                     l2878:
  5468  11C4  3001               	movlw	1
  5469  11C5  00A0               	movwf	??__tdiv_to_l_
  5470  11C6                     u4345:
  5471  11C6  1003               	clrc
  5472  11C7  0DA4               	rlf	__tdiv_to_l_@quot,f
  5473  11C8  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5474  11C9  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5475  11CA  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5476  11CB  0BA0               	decfsz	??__tdiv_to_l_,f
  5477  11CC  29C6               	goto	u4345
  5478  11CD                     l2880:
  5479  11CD  0878               	movf	__tdiv_to_l_@f2+2,w
  5480  11CE  0274               	subwf	__tdiv_to_l_@f1+2,w
  5481  11CF  1D03               	skipz
  5482  11D0  29D7               	goto	u4355
  5483  11D1  0877               	movf	__tdiv_to_l_@f2+1,w
  5484  11D2  0273               	subwf	__tdiv_to_l_@f1+1,w
  5485  11D3  1D03               	skipz
  5486  11D4  29D7               	goto	u4355
  5487  11D5  0876               	movf	__tdiv_to_l_@f2,w
  5488  11D6  0272               	subwf	__tdiv_to_l_@f1,w
  5489  11D7                     u4355:
  5490  11D7  1C03               	skipc
  5491  11D8  29DA               	goto	u4351
  5492  11D9  29DB               	goto	u4350
  5493  11DA                     u4351:
  5494  11DA  29E6               	goto	l2886
  5495  11DB                     u4350:
  5496  11DB                     l2882:
  5497  11DB  0876               	movf	__tdiv_to_l_@f2,w
  5498  11DC  02F2               	subwf	__tdiv_to_l_@f1,f
  5499  11DD  0877               	movf	__tdiv_to_l_@f2+1,w
  5500  11DE  1C03               	skipc
  5501  11DF  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5502  11E0  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5503  11E1  0878               	movf	__tdiv_to_l_@f2+2,w
  5504  11E2  1C03               	skipc
  5505  11E3  0A78               	incf	__tdiv_to_l_@f2+2,w
  5506  11E4  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5507  11E5                     l2884:
  5508  11E5  1424               	bsf	__tdiv_to_l_@quot,0
  5509  11E6                     l2886:
  5510  11E6  3001               	movlw	1
  5511  11E7                     u4365:
  5512  11E7  1003               	clrc
  5513  11E8  0DF2               	rlf	__tdiv_to_l_@f1,f
  5514  11E9  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5515  11EA  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5516  11EB  3EFF               	addlw	-1
  5517  11EC  1D03               	skipz
  5518  11ED  29E7               	goto	u4365
  5519  11EE                     l2888:
  5520  11EE  3001               	movlw	1
  5521  11EF  02A8               	subwf	__tdiv_to_l_@cntr,f
  5522  11F0  1D03               	btfss	3,2
  5523  11F1  29F3               	goto	u4371
  5524  11F2  29F4               	goto	u4370
  5525  11F3                     u4371:
  5526  11F3  29C4               	goto	l2878
  5527  11F4                     u4370:
  5528  11F4                     l600:
  5529  11F4  1FA9               	btfss	__tdiv_to_l_@exp1,7
  5530  11F5  29F7               	goto	u4381
  5531  11F6  29F8               	goto	u4380
  5532  11F7                     u4381:
  5533  11F7  2A12               	goto	l2898
  5534  11F8                     u4380:
  5535  11F8                     l2890:
  5536  11F8  0829               	movf	__tdiv_to_l_@exp1,w
  5537  11F9  3A80               	xorlw	128
  5538  11FA  3E97               	addlw	151
  5539  11FB  1803               	skipnc
  5540  11FC  29FE               	goto	u4391
  5541  11FD  29FF               	goto	u4390
  5542  11FE                     u4391:
  5543  11FE  2A00               	goto	l2896
  5544  11FF                     u4390:
  5545  11FF  2988               	goto	l2860
  5546  1200                     l2896:
  5547  1200  3001               	movlw	1
  5548  1201                     u4405:
  5549  1201  1003               	clrc
  5550  1202  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  5551  1203  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  5552  1204  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  5553  1205  0CA4               	rrf	__tdiv_to_l_@quot,f
  5554  1206  3EFF               	addlw	-1
  5555  1207  1D03               	skipz
  5556  1208  2A01               	goto	u4405
  5557  1209  3001               	movlw	1
  5558  120A  00A0               	movwf	??__tdiv_to_l_
  5559  120B  0820               	movf	??__tdiv_to_l_,w
  5560  120C  07A9               	addwf	__tdiv_to_l_@exp1,f
  5561  120D  1D03               	btfss	3,2
  5562  120E  2A10               	goto	u4411
  5563  120F  2A11               	goto	u4410
  5564  1210                     u4411:
  5565  1210  2A00               	goto	l2896
  5566  1211                     u4410:
  5567  1211  2A29               	goto	l2906
  5568  1212                     l2898:
  5569  1212  3018               	movlw	24
  5570  1213  0229               	subwf	__tdiv_to_l_@exp1,w
  5571  1214  1C03               	skipc
  5572  1215  2A17               	goto	u4421
  5573  1216  2A18               	goto	u4420
  5574  1217                     u4421:
  5575  1217  2A24               	goto	l607
  5576  1218                     u4420:
  5577  1218  2988               	goto	l2860
  5578  1219                     l2904:
  5579  1219  3001               	movlw	1
  5580  121A  00A0               	movwf	??__tdiv_to_l_
  5581  121B                     u4435:
  5582  121B  1003               	clrc
  5583  121C  0DA4               	rlf	__tdiv_to_l_@quot,f
  5584  121D  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5585  121E  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5586  121F  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5587  1220  0BA0               	decfsz	??__tdiv_to_l_,f
  5588  1221  2A1B               	goto	u4435
  5589  1222  3001               	movlw	1
  5590  1223  02A9               	subwf	__tdiv_to_l_@exp1,f
  5591  1224                     l607:
  5592  1224  0829               	movf	__tdiv_to_l_@exp1,w
  5593  1225  1D03               	btfss	3,2
  5594  1226  2A28               	goto	u4441
  5595  1227  2A29               	goto	u4440
  5596  1228                     u4441:
  5597  1228  2A19               	goto	l2904
  5598  1229                     u4440:
  5599  1229                     l2906:
  5600  1229  0827               	movf	__tdiv_to_l_@quot+3,w
  5601  122A  00F5               	movwf	?__tdiv_to_l_+3
  5602  122B  0826               	movf	__tdiv_to_l_@quot+2,w
  5603  122C  00F4               	movwf	?__tdiv_to_l_+2
  5604  122D  0825               	movf	__tdiv_to_l_@quot+1,w
  5605  122E  00F3               	movwf	?__tdiv_to_l_+1
  5606  122F  0824               	movf	__tdiv_to_l_@quot,w
  5607  1230  00F2               	movwf	?__tdiv_to_l_
  5608  1231                     l596:
  5609  1231  0008               	return
  5610  1232                     __end_of__tdiv_to_l_:
  5611                           
  5612                           	psect	text12
  5613  1232                     __ptext12:	
  5614 ;; *************** function __div_to_l_ *****************
  5615 ;; Defined at:
  5616 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  f1              4    2[COMMON] unsigned long 
  5619 ;;  f2              4    6[COMMON] unsigned long 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  quot            4    0[BANK0 ] unsigned long 
  5622 ;;  exp1            1    5[BANK0 ] unsigned char 
  5623 ;;  cntr            1    4[BANK0 ] unsigned char 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  4    2[COMMON] unsigned long 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5633 ;;      Params:         8       0       0       0       0
  5634 ;;      Locals:         0       6       0       0       0
  5635 ;;      Temps:          1       0       0       0       0
  5636 ;;      Totals:         9       6       0       0       0
  5637 ;;Total ram usage:       15 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:    1
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_sprintf
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           
  5648                           ;psect for function __div_to_l_
  5649  1232                     __div_to_l_:
  5650  1232                     l2910:	
  5651                           ;incstack = 0
  5652                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5653                           
  5654  1232  1003               	clrc
  5655  1233  0D74               	rlf	__div_to_l_@f1+2,w
  5656  1234  0D75               	rlf	__div_to_l_@f1+3,w
  5657  1235  00FA               	movwf	??__div_to_l_
  5658  1236  087A               	movf	??__div_to_l_,w
  5659  1237  1283               	bcf	3,5	;RP0=0, select bank0
  5660  1238  1303               	bcf	3,6	;RP1=0, select bank0
  5661  1239  00A5               	movwf	__div_to_l_@exp1
  5662  123A  0825               	movf	__div_to_l_@exp1,w
  5663  123B  1D03               	btfss	3,2
  5664  123C  2A3E               	goto	u4451
  5665  123D  2A3F               	goto	u4450
  5666  123E                     u4451:
  5667  123E  2A48               	goto	l2916
  5668  123F                     u4450:
  5669  123F                     l2912:
  5670  123F  3000               	movlw	0
  5671  1240  00F5               	movwf	?__div_to_l_+3
  5672  1241  3000               	movlw	0
  5673  1242  00F4               	movwf	?__div_to_l_+2
  5674  1243  3000               	movlw	0
  5675  1244  00F3               	movwf	?__div_to_l_+1
  5676  1245  3000               	movlw	0
  5677  1246  00F2               	movwf	?__div_to_l_
  5678  1247  2AEF               	goto	l549
  5679  1248                     l2916:
  5680  1248  1003               	clrc
  5681  1249  0D78               	rlf	__div_to_l_@f2+2,w
  5682  124A  0D79               	rlf	__div_to_l_@f2+3,w
  5683  124B  00FA               	movwf	??__div_to_l_
  5684  124C  087A               	movf	??__div_to_l_,w
  5685  124D  00A4               	movwf	__div_to_l_@cntr
  5686  124E  0824               	movf	__div_to_l_@cntr,w
  5687  124F  1D03               	btfss	3,2
  5688  1250  2A52               	goto	u4461
  5689  1251  2A53               	goto	u4460
  5690  1252                     u4461:
  5691  1252  2A54               	goto	l550
  5692  1253                     u4460:
  5693  1253  2A3F               	goto	l2912
  5694  1254                     l550:
  5695  1254  17F4               	bsf	__div_to_l_@f1+2,7
  5696  1255                     l2922:
  5697  1255  30FF               	movlw	255
  5698  1256  05F2               	andwf	__div_to_l_@f1,f
  5699  1257  30FF               	movlw	255
  5700  1258  05F3               	andwf	__div_to_l_@f1+1,f
  5701  1259  30FF               	movlw	255
  5702  125A  05F4               	andwf	__div_to_l_@f1+2,f
  5703  125B  3000               	movlw	0
  5704  125C  05F5               	andwf	__div_to_l_@f1+3,f
  5705  125D                     l2924:
  5706  125D  17F8               	bsf	__div_to_l_@f2+2,7
  5707  125E  30FF               	movlw	255
  5708  125F  05F6               	andwf	__div_to_l_@f2,f
  5709  1260  30FF               	movlw	255
  5710  1261  05F7               	andwf	__div_to_l_@f2+1,f
  5711  1262  30FF               	movlw	255
  5712  1263  05F8               	andwf	__div_to_l_@f2+2,f
  5713  1264  3000               	movlw	0
  5714  1265  05F9               	andwf	__div_to_l_@f2+3,f
  5715  1266  3000               	movlw	0
  5716  1267  00A3               	movwf	__div_to_l_@quot+3
  5717  1268  3000               	movlw	0
  5718  1269  00A2               	movwf	__div_to_l_@quot+2
  5719  126A  3000               	movlw	0
  5720  126B  00A1               	movwf	__div_to_l_@quot+1
  5721  126C  3000               	movlw	0
  5722  126D  00A0               	movwf	__div_to_l_@quot
  5723  126E                     l2926:
  5724  126E  307F               	movlw	127
  5725  126F  02A5               	subwf	__div_to_l_@exp1,f
  5726  1270                     l2928:
  5727  1270  30A0               	movlw	160
  5728  1271  0724               	addwf	__div_to_l_@cntr,w
  5729  1272  00FA               	movwf	??__div_to_l_
  5730  1273  087A               	movf	??__div_to_l_,w
  5731  1274  02A5               	subwf	__div_to_l_@exp1,f
  5732  1275  3020               	movlw	32
  5733  1276  00FA               	movwf	??__div_to_l_
  5734  1277  087A               	movf	??__div_to_l_,w
  5735  1278  00A4               	movwf	__div_to_l_@cntr
  5736  1279                     l2930:
  5737  1279  3001               	movlw	1
  5738  127A  00FA               	movwf	??__div_to_l_
  5739  127B                     u4475:
  5740  127B  1003               	clrc
  5741  127C  0DA0               	rlf	__div_to_l_@quot,f
  5742  127D  0DA1               	rlf	__div_to_l_@quot+1,f
  5743  127E  0DA2               	rlf	__div_to_l_@quot+2,f
  5744  127F  0DA3               	rlf	__div_to_l_@quot+3,f
  5745  1280  0BFA               	decfsz	??__div_to_l_,f
  5746  1281  2A7B               	goto	u4475
  5747  1282                     l2932:
  5748  1282  0879               	movf	__div_to_l_@f2+3,w
  5749  1283  0275               	subwf	__div_to_l_@f1+3,w
  5750  1284  1D03               	skipz
  5751  1285  2A90               	goto	u4485
  5752  1286  0878               	movf	__div_to_l_@f2+2,w
  5753  1287  0274               	subwf	__div_to_l_@f1+2,w
  5754  1288  1D03               	skipz
  5755  1289  2A90               	goto	u4485
  5756  128A  0877               	movf	__div_to_l_@f2+1,w
  5757  128B  0273               	subwf	__div_to_l_@f1+1,w
  5758  128C  1D03               	skipz
  5759  128D  2A90               	goto	u4485
  5760  128E  0876               	movf	__div_to_l_@f2,w
  5761  128F  0272               	subwf	__div_to_l_@f1,w
  5762  1290                     u4485:
  5763  1290  1C03               	skipc
  5764  1291  2A93               	goto	u4481
  5765  1292  2A94               	goto	u4480
  5766  1293                     u4481:
  5767  1293  2AA3               	goto	l2938
  5768  1294                     u4480:
  5769  1294                     l2934:
  5770  1294  0876               	movf	__div_to_l_@f2,w
  5771  1295  02F2               	subwf	__div_to_l_@f1,f
  5772  1296  0877               	movf	__div_to_l_@f2+1,w
  5773  1297  1C03               	skipc
  5774  1298  0F77               	incfsz	__div_to_l_@f2+1,w
  5775  1299  02F3               	subwf	__div_to_l_@f1+1,f
  5776  129A  0878               	movf	__div_to_l_@f2+2,w
  5777  129B  1C03               	skipc
  5778  129C  0F78               	incfsz	__div_to_l_@f2+2,w
  5779  129D  02F4               	subwf	__div_to_l_@f1+2,f
  5780  129E  0879               	movf	__div_to_l_@f2+3,w
  5781  129F  1C03               	skipc
  5782  12A0  0F79               	incfsz	__div_to_l_@f2+3,w
  5783  12A1  02F5               	subwf	__div_to_l_@f1+3,f
  5784  12A2                     l2936:
  5785  12A2  1420               	bsf	__div_to_l_@quot,0
  5786  12A3                     l2938:
  5787  12A3  3001               	movlw	1
  5788  12A4  00FA               	movwf	??__div_to_l_
  5789  12A5                     u4495:
  5790  12A5  1003               	clrc
  5791  12A6  0DF2               	rlf	__div_to_l_@f1,f
  5792  12A7  0DF3               	rlf	__div_to_l_@f1+1,f
  5793  12A8  0DF4               	rlf	__div_to_l_@f1+2,f
  5794  12A9  0DF5               	rlf	__div_to_l_@f1+3,f
  5795  12AA  0BFA               	decfsz	??__div_to_l_,f
  5796  12AB  2AA5               	goto	u4495
  5797  12AC                     l2940:
  5798  12AC  3001               	movlw	1
  5799  12AD  02A4               	subwf	__div_to_l_@cntr,f
  5800  12AE  1D03               	btfss	3,2
  5801  12AF  2AB1               	goto	u4501
  5802  12B0  2AB2               	goto	u4500
  5803  12B1                     u4501:
  5804  12B1  2A79               	goto	l2930
  5805  12B2                     u4500:
  5806  12B2                     l553:
  5807  12B2  1FA5               	btfss	__div_to_l_@exp1,7
  5808  12B3  2AB5               	goto	u4511
  5809  12B4  2AB6               	goto	u4510
  5810  12B5                     u4511:
  5811  12B5  2AD0               	goto	l2950
  5812  12B6                     u4510:
  5813  12B6                     l2942:
  5814  12B6  0825               	movf	__div_to_l_@exp1,w
  5815  12B7  3A80               	xorlw	128
  5816  12B8  3E9F               	addlw	159
  5817  12B9  1803               	skipnc
  5818  12BA  2ABC               	goto	u4521
  5819  12BB  2ABD               	goto	u4520
  5820  12BC                     u4521:
  5821  12BC  2ABE               	goto	l2948
  5822  12BD                     u4520:
  5823  12BD  2A3F               	goto	l2912
  5824  12BE                     l2948:
  5825  12BE  3001               	movlw	1
  5826  12BF                     u4535:
  5827  12BF  1003               	clrc
  5828  12C0  0CA3               	rrf	__div_to_l_@quot+3,f
  5829  12C1  0CA2               	rrf	__div_to_l_@quot+2,f
  5830  12C2  0CA1               	rrf	__div_to_l_@quot+1,f
  5831  12C3  0CA0               	rrf	__div_to_l_@quot,f
  5832  12C4  3EFF               	addlw	-1
  5833  12C5  1D03               	skipz
  5834  12C6  2ABF               	goto	u4535
  5835  12C7  3001               	movlw	1
  5836  12C8  00FA               	movwf	??__div_to_l_
  5837  12C9  087A               	movf	??__div_to_l_,w
  5838  12CA  07A5               	addwf	__div_to_l_@exp1,f
  5839  12CB  1D03               	btfss	3,2
  5840  12CC  2ACE               	goto	u4541
  5841  12CD  2ACF               	goto	u4540
  5842  12CE                     u4541:
  5843  12CE  2ABE               	goto	l2948
  5844  12CF                     u4540:
  5845  12CF  2AE7               	goto	l2958
  5846  12D0                     l2950:
  5847  12D0  3020               	movlw	32
  5848  12D1  0225               	subwf	__div_to_l_@exp1,w
  5849  12D2  1C03               	skipc
  5850  12D3  2AD5               	goto	u4551
  5851  12D4  2AD6               	goto	u4550
  5852  12D5                     u4551:
  5853  12D5  2AE2               	goto	l560
  5854  12D6                     u4550:
  5855  12D6  2A3F               	goto	l2912
  5856  12D7                     l2956:
  5857  12D7  3001               	movlw	1
  5858  12D8  00FA               	movwf	??__div_to_l_
  5859  12D9                     u4565:
  5860  12D9  1003               	clrc
  5861  12DA  0DA0               	rlf	__div_to_l_@quot,f
  5862  12DB  0DA1               	rlf	__div_to_l_@quot+1,f
  5863  12DC  0DA2               	rlf	__div_to_l_@quot+2,f
  5864  12DD  0DA3               	rlf	__div_to_l_@quot+3,f
  5865  12DE  0BFA               	decfsz	??__div_to_l_,f
  5866  12DF  2AD9               	goto	u4565
  5867  12E0  3001               	movlw	1
  5868  12E1  02A5               	subwf	__div_to_l_@exp1,f
  5869  12E2                     l560:
  5870  12E2  0825               	movf	__div_to_l_@exp1,w
  5871  12E3  1D03               	btfss	3,2
  5872  12E4  2AE6               	goto	u4571
  5873  12E5  2AE7               	goto	u4570
  5874  12E6                     u4571:
  5875  12E6  2AD7               	goto	l2956
  5876  12E7                     u4570:
  5877  12E7                     l2958:
  5878  12E7  0823               	movf	__div_to_l_@quot+3,w
  5879  12E8  00F5               	movwf	?__div_to_l_+3
  5880  12E9  0822               	movf	__div_to_l_@quot+2,w
  5881  12EA  00F4               	movwf	?__div_to_l_+2
  5882  12EB  0821               	movf	__div_to_l_@quot+1,w
  5883  12EC  00F3               	movwf	?__div_to_l_+1
  5884  12ED  0820               	movf	__div_to_l_@quot,w
  5885  12EE  00F2               	movwf	?__div_to_l_
  5886  12EF                     l549:
  5887  12EF  0008               	return
  5888  12F0                     __end_of__div_to_l_:
  5889                           
  5890                           	psect	text13
  5891  1CEA                     __ptext13:	
  5892 ;; *************** function ___wmul *****************
  5893 ;; Defined at:
  5894 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  multiplier      2    2[COMMON] unsigned int 
  5897 ;;  multiplicand    2    4[COMMON] unsigned int 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  product         2    6[COMMON] unsigned int 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  2    2[COMMON] unsigned int 
  5902 ;; Registers used:
  5903 ;;		wreg, status,2, status,0
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5909 ;;      Params:         4       0       0       0       0
  5910 ;;      Locals:         2       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0
  5912 ;;      Totals:         6       0       0       0       0
  5913 ;;Total ram usage:        6 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    1
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_sprintf
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           
  5924                           ;psect for function ___wmul
  5925  1CEA                     ___wmul:
  5926  1CEA                     l2962:	
  5927                           ;incstack = 0
  5928                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5929                           
  5930  1CEA  01F6               	clrf	___wmul@product
  5931  1CEB  01F7               	clrf	___wmul@product+1
  5932  1CEC                     l2964:
  5933  1CEC  1C72               	btfss	___wmul@multiplier,0
  5934  1CED  2CEF               	goto	u4581
  5935  1CEE  2CF0               	goto	u4580
  5936  1CEF                     u4581:
  5937  1CEF  2CF6               	goto	l379
  5938  1CF0                     u4580:
  5939  1CF0                     l2966:
  5940  1CF0  0874               	movf	___wmul@multiplicand,w
  5941  1CF1  07F6               	addwf	___wmul@product,f
  5942  1CF2  1803               	skipnc
  5943  1CF3  0AF7               	incf	___wmul@product+1,f
  5944  1CF4  0875               	movf	___wmul@multiplicand+1,w
  5945  1CF5  07F7               	addwf	___wmul@product+1,f
  5946  1CF6                     l379:
  5947  1CF6  3001               	movlw	1
  5948  1CF7                     u4595:
  5949  1CF7  1003               	clrc
  5950  1CF8  0DF4               	rlf	___wmul@multiplicand,f
  5951  1CF9  0DF5               	rlf	___wmul@multiplicand+1,f
  5952  1CFA  3EFF               	addlw	-1
  5953  1CFB  1D03               	skipz
  5954  1CFC  2CF7               	goto	u4595
  5955  1CFD                     l2968:
  5956  1CFD  3001               	movlw	1
  5957  1CFE                     u4605:
  5958  1CFE  1003               	clrc
  5959  1CFF  0CF3               	rrf	___wmul@multiplier+1,f
  5960  1D00  0CF2               	rrf	___wmul@multiplier,f
  5961  1D01  3EFF               	addlw	-1
  5962  1D02  1D03               	skipz
  5963  1D03  2CFE               	goto	u4605
  5964  1D04                     l2970:
  5965  1D04  0872               	movf	___wmul@multiplier,w
  5966  1D05  0473               	iorwf	___wmul@multiplier+1,w
  5967  1D06  1D03               	btfss	3,2
  5968  1D07  2D09               	goto	u4611
  5969  1D08  2D0A               	goto	u4610
  5970  1D09                     u4611:
  5971  1D09  2CEC               	goto	l2964
  5972  1D0A                     u4610:
  5973  1D0A                     l2972:
  5974  1D0A  0877               	movf	___wmul@product+1,w
  5975  1D0B  00F3               	movwf	?___wmul+1
  5976  1D0C  0876               	movf	___wmul@product,w
  5977  1D0D  00F2               	movwf	?___wmul
  5978  1D0E                     l381:
  5979  1D0E  0008               	return
  5980  1D0F                     __end_of___wmul:
  5981                           
  5982                           	psect	text14
  5983  1E5D                     __ptext14:	
  5984 ;; *************** function ___llmod *****************
  5985 ;; Defined at:
  5986 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  divisor         4    2[COMMON] unsigned long 
  5989 ;;  dividend        4    6[COMMON] unsigned long 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  counter         1    0[BANK0 ] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  4    2[COMMON] unsigned long 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6001 ;;      Params:         8       0       0       0       0
  6002 ;;      Locals:         0       1       0       0       0
  6003 ;;      Temps:          1       0       0       0       0
  6004 ;;      Totals:         9       1       0       0       0
  6005 ;;Total ram usage:       10 bytes
  6006 ;; Hardware stack levels used:    1
  6007 ;; Hardware stack levels required when called:    1
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_sprintf
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           
  6016                           ;psect for function ___llmod
  6017  1E5D                     ___llmod:
  6018  1E5D                     l3672:	
  6019                           ;incstack = 0
  6020                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6021                           
  6022  1E5D  0875               	movf	___llmod@divisor+3,w
  6023  1E5E  0474               	iorwf	___llmod@divisor+2,w
  6024  1E5F  0473               	iorwf	___llmod@divisor+1,w
  6025  1E60  0472               	iorwf	___llmod@divisor,w
  6026  1E61  1903               	skipnz
  6027  1E62  2E64               	goto	u5821
  6028  1E63  2E65               	goto	u5820
  6029  1E64                     u5821:
  6030  1E64  2EAA               	goto	l3688
  6031  1E65                     u5820:
  6032  1E65                     l3674:
  6033  1E65  1283               	bcf	3,5	;RP0=0, select bank0
  6034  1E66  1303               	bcf	3,6	;RP1=0, select bank0
  6035  1E67  01A0               	clrf	___llmod@counter
  6036  1E68  0AA0               	incf	___llmod@counter,f
  6037  1E69  2E77               	goto	l3678
  6038  1E6A                     l3676:
  6039  1E6A  3001               	movlw	1
  6040  1E6B  00FA               	movwf	??___llmod
  6041  1E6C                     u5835:
  6042  1E6C  1003               	clrc
  6043  1E6D  0DF2               	rlf	___llmod@divisor,f
  6044  1E6E  0DF3               	rlf	___llmod@divisor+1,f
  6045  1E6F  0DF4               	rlf	___llmod@divisor+2,f
  6046  1E70  0DF5               	rlf	___llmod@divisor+3,f
  6047  1E71  0BFA               	decfsz	??___llmod,f
  6048  1E72  2E6C               	goto	u5835
  6049  1E73  3001               	movlw	1
  6050  1E74  00FA               	movwf	??___llmod
  6051  1E75  087A               	movf	??___llmod,w
  6052  1E76  07A0               	addwf	___llmod@counter,f
  6053  1E77                     l3678:
  6054  1E77  1FF5               	btfss	___llmod@divisor+3,7
  6055  1E78  2E7A               	goto	u5841
  6056  1E79  2E7B               	goto	u5840
  6057  1E7A                     u5841:
  6058  1E7A  2E6A               	goto	l3676
  6059  1E7B                     u5840:
  6060  1E7B                     l3680:
  6061  1E7B  0875               	movf	___llmod@divisor+3,w
  6062  1E7C  0279               	subwf	___llmod@dividend+3,w
  6063  1E7D  1D03               	skipz
  6064  1E7E  2E89               	goto	u5855
  6065  1E7F  0874               	movf	___llmod@divisor+2,w
  6066  1E80  0278               	subwf	___llmod@dividend+2,w
  6067  1E81  1D03               	skipz
  6068  1E82  2E89               	goto	u5855
  6069  1E83  0873               	movf	___llmod@divisor+1,w
  6070  1E84  0277               	subwf	___llmod@dividend+1,w
  6071  1E85  1D03               	skipz
  6072  1E86  2E89               	goto	u5855
  6073  1E87  0872               	movf	___llmod@divisor,w
  6074  1E88  0276               	subwf	___llmod@dividend,w
  6075  1E89                     u5855:
  6076  1E89  1C03               	skipc
  6077  1E8A  2E8C               	goto	u5851
  6078  1E8B  2E8D               	goto	u5850
  6079  1E8C                     u5851:
  6080  1E8C  2E9B               	goto	l3684
  6081  1E8D                     u5850:
  6082  1E8D                     l3682:
  6083  1E8D  0872               	movf	___llmod@divisor,w
  6084  1E8E  02F6               	subwf	___llmod@dividend,f
  6085  1E8F  0873               	movf	___llmod@divisor+1,w
  6086  1E90  1C03               	skipc
  6087  1E91  0F73               	incfsz	___llmod@divisor+1,w
  6088  1E92  02F7               	subwf	___llmod@dividend+1,f
  6089  1E93  0874               	movf	___llmod@divisor+2,w
  6090  1E94  1C03               	skipc
  6091  1E95  0F74               	incfsz	___llmod@divisor+2,w
  6092  1E96  02F8               	subwf	___llmod@dividend+2,f
  6093  1E97  0875               	movf	___llmod@divisor+3,w
  6094  1E98  1C03               	skipc
  6095  1E99  0F75               	incfsz	___llmod@divisor+3,w
  6096  1E9A  02F9               	subwf	___llmod@dividend+3,f
  6097  1E9B                     l3684:
  6098  1E9B  3001               	movlw	1
  6099  1E9C                     u5865:
  6100  1E9C  1003               	clrc
  6101  1E9D  0CF5               	rrf	___llmod@divisor+3,f
  6102  1E9E  0CF4               	rrf	___llmod@divisor+2,f
  6103  1E9F  0CF3               	rrf	___llmod@divisor+1,f
  6104  1EA0  0CF2               	rrf	___llmod@divisor,f
  6105  1EA1  3EFF               	addlw	-1
  6106  1EA2  1D03               	skipz
  6107  1EA3  2E9C               	goto	u5865
  6108  1EA4                     l3686:
  6109  1EA4  3001               	movlw	1
  6110  1EA5  02A0               	subwf	___llmod@counter,f
  6111  1EA6  1D03               	btfss	3,2
  6112  1EA7  2EA9               	goto	u5871
  6113  1EA8  2EAA               	goto	u5870
  6114  1EA9                     u5871:
  6115  1EA9  2E7B               	goto	l3680
  6116  1EAA                     u5870:
  6117  1EAA                     l3688:
  6118  1EAA  0879               	movf	___llmod@dividend+3,w
  6119  1EAB  00F5               	movwf	?___llmod+3
  6120  1EAC  0878               	movf	___llmod@dividend+2,w
  6121  1EAD  00F4               	movwf	?___llmod+2
  6122  1EAE  0877               	movf	___llmod@dividend+1,w
  6123  1EAF  00F3               	movwf	?___llmod+1
  6124  1EB0  0876               	movf	___llmod@dividend,w
  6125  1EB1  00F2               	movwf	?___llmod
  6126  1EB2                     l635:
  6127  1EB2  0008               	return
  6128  1EB3                     __end_of___llmod:
  6129                           
  6130                           	psect	text15
  6131  1EB3                     __ptext15:	
  6132 ;; *************** function ___lldiv *****************
  6133 ;; Defined at:
  6134 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  divisor         4    2[COMMON] unsigned long 
  6137 ;;  dividend        4    6[COMMON] unsigned long 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  quotient        4    0[BANK0 ] unsigned long 
  6140 ;;  counter         1    4[BANK0 ] unsigned char 
  6141 ;; Return value:  Size  Location     Type
  6142 ;;                  4    2[COMMON] unsigned long 
  6143 ;; Registers used:
  6144 ;;		wreg, status,2, status,0
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/0
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6150 ;;      Params:         8       0       0       0       0
  6151 ;;      Locals:         0       5       0       0       0
  6152 ;;      Temps:          1       0       0       0       0
  6153 ;;      Totals:         9       5       0       0       0
  6154 ;;Total ram usage:       14 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; Hardware stack levels required when called:    1
  6157 ;; This function calls:
  6158 ;;		Nothing
  6159 ;; This function is called by:
  6160 ;;		_sprintf
  6161 ;;		_I2C_Master_Init
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           
  6166                           ;psect for function ___lldiv
  6167  1EB3                     ___lldiv:
  6168  1EB3                     l2976:	
  6169                           ;incstack = 0
  6170                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6171                           
  6172  1EB3  3000               	movlw	0
  6173  1EB4  1283               	bcf	3,5	;RP0=0, select bank0
  6174  1EB5  1303               	bcf	3,6	;RP1=0, select bank0
  6175  1EB6  00A3               	movwf	___lldiv@quotient+3
  6176  1EB7  3000               	movlw	0
  6177  1EB8  00A2               	movwf	___lldiv@quotient+2
  6178  1EB9  3000               	movlw	0
  6179  1EBA  00A1               	movwf	___lldiv@quotient+1
  6180  1EBB  3000               	movlw	0
  6181  1EBC  00A0               	movwf	___lldiv@quotient
  6182  1EBD  0875               	movf	___lldiv@divisor+3,w
  6183  1EBE  0474               	iorwf	___lldiv@divisor+2,w
  6184  1EBF  0473               	iorwf	___lldiv@divisor+1,w
  6185  1EC0  0472               	iorwf	___lldiv@divisor,w
  6186  1EC1  1903               	skipnz
  6187  1EC2  2EC4               	goto	u4621
  6188  1EC3  2EC5               	goto	u4620
  6189  1EC4                     u4621:
  6190  1EC4  2F12               	goto	l2996
  6191  1EC5                     u4620:
  6192  1EC5                     l2978:
  6193  1EC5  01A4               	clrf	___lldiv@counter
  6194  1EC6  0AA4               	incf	___lldiv@counter,f
  6195  1EC7  2ED5               	goto	l2982
  6196  1EC8                     l2980:
  6197  1EC8  3001               	movlw	1
  6198  1EC9  00FA               	movwf	??___lldiv
  6199  1ECA                     u4635:
  6200  1ECA  1003               	clrc
  6201  1ECB  0DF2               	rlf	___lldiv@divisor,f
  6202  1ECC  0DF3               	rlf	___lldiv@divisor+1,f
  6203  1ECD  0DF4               	rlf	___lldiv@divisor+2,f
  6204  1ECE  0DF5               	rlf	___lldiv@divisor+3,f
  6205  1ECF  0BFA               	decfsz	??___lldiv,f
  6206  1ED0  2ECA               	goto	u4635
  6207  1ED1  3001               	movlw	1
  6208  1ED2  00FA               	movwf	??___lldiv
  6209  1ED3  087A               	movf	??___lldiv,w
  6210  1ED4  07A4               	addwf	___lldiv@counter,f
  6211  1ED5                     l2982:
  6212  1ED5  1FF5               	btfss	___lldiv@divisor+3,7
  6213  1ED6  2ED8               	goto	u4641
  6214  1ED7  2ED9               	goto	u4640
  6215  1ED8                     u4641:
  6216  1ED8  2EC8               	goto	l2980
  6217  1ED9                     u4640:
  6218  1ED9                     l2984:
  6219  1ED9  3001               	movlw	1
  6220  1EDA  00FA               	movwf	??___lldiv
  6221  1EDB                     u4655:
  6222  1EDB  1003               	clrc
  6223  1EDC  0DA0               	rlf	___lldiv@quotient,f
  6224  1EDD  0DA1               	rlf	___lldiv@quotient+1,f
  6225  1EDE  0DA2               	rlf	___lldiv@quotient+2,f
  6226  1EDF  0DA3               	rlf	___lldiv@quotient+3,f
  6227  1EE0  0BFA               	decfsz	??___lldiv,f
  6228  1EE1  2EDB               	goto	u4655
  6229  1EE2                     l2986:
  6230  1EE2  0875               	movf	___lldiv@divisor+3,w
  6231  1EE3  0279               	subwf	___lldiv@dividend+3,w
  6232  1EE4  1D03               	skipz
  6233  1EE5  2EF0               	goto	u4665
  6234  1EE6  0874               	movf	___lldiv@divisor+2,w
  6235  1EE7  0278               	subwf	___lldiv@dividend+2,w
  6236  1EE8  1D03               	skipz
  6237  1EE9  2EF0               	goto	u4665
  6238  1EEA  0873               	movf	___lldiv@divisor+1,w
  6239  1EEB  0277               	subwf	___lldiv@dividend+1,w
  6240  1EEC  1D03               	skipz
  6241  1EED  2EF0               	goto	u4665
  6242  1EEE  0872               	movf	___lldiv@divisor,w
  6243  1EEF  0276               	subwf	___lldiv@dividend,w
  6244  1EF0                     u4665:
  6245  1EF0  1C03               	skipc
  6246  1EF1  2EF3               	goto	u4661
  6247  1EF2  2EF4               	goto	u4660
  6248  1EF3                     u4661:
  6249  1EF3  2F03               	goto	l2992
  6250  1EF4                     u4660:
  6251  1EF4                     l2988:
  6252  1EF4  0872               	movf	___lldiv@divisor,w
  6253  1EF5  02F6               	subwf	___lldiv@dividend,f
  6254  1EF6  0873               	movf	___lldiv@divisor+1,w
  6255  1EF7  1C03               	skipc
  6256  1EF8  0F73               	incfsz	___lldiv@divisor+1,w
  6257  1EF9  02F7               	subwf	___lldiv@dividend+1,f
  6258  1EFA  0874               	movf	___lldiv@divisor+2,w
  6259  1EFB  1C03               	skipc
  6260  1EFC  0F74               	incfsz	___lldiv@divisor+2,w
  6261  1EFD  02F8               	subwf	___lldiv@dividend+2,f
  6262  1EFE  0875               	movf	___lldiv@divisor+3,w
  6263  1EFF  1C03               	skipc
  6264  1F00  0F75               	incfsz	___lldiv@divisor+3,w
  6265  1F01  02F9               	subwf	___lldiv@dividend+3,f
  6266  1F02                     l2990:
  6267  1F02  1420               	bsf	___lldiv@quotient,0
  6268  1F03                     l2992:
  6269  1F03  3001               	movlw	1
  6270  1F04                     u4675:
  6271  1F04  1003               	clrc
  6272  1F05  0CF5               	rrf	___lldiv@divisor+3,f
  6273  1F06  0CF4               	rrf	___lldiv@divisor+2,f
  6274  1F07  0CF3               	rrf	___lldiv@divisor+1,f
  6275  1F08  0CF2               	rrf	___lldiv@divisor,f
  6276  1F09  3EFF               	addlw	-1
  6277  1F0A  1D03               	skipz
  6278  1F0B  2F04               	goto	u4675
  6279  1F0C                     l2994:
  6280  1F0C  3001               	movlw	1
  6281  1F0D  02A4               	subwf	___lldiv@counter,f
  6282  1F0E  1D03               	btfss	3,2
  6283  1F0F  2F11               	goto	u4681
  6284  1F10  2F12               	goto	u4680
  6285  1F11                     u4681:
  6286  1F11  2ED9               	goto	l2984
  6287  1F12                     u4680:
  6288  1F12                     l2996:
  6289  1F12  0823               	movf	___lldiv@quotient+3,w
  6290  1F13  00F5               	movwf	?___lldiv+3
  6291  1F14  0822               	movf	___lldiv@quotient+2,w
  6292  1F15  00F4               	movwf	?___lldiv+2
  6293  1F16  0821               	movf	___lldiv@quotient+1,w
  6294  1F17  00F3               	movwf	?___lldiv+1
  6295  1F18  0820               	movf	___lldiv@quotient,w
  6296  1F19  00F2               	movwf	?___lldiv
  6297  1F1A                     l415:
  6298  1F1A  0008               	return
  6299  1F1B                     __end_of___lldiv:
  6300                           
  6301                           	psect	text16
  6302  1F84                     __ptext16:	
  6303 ;; *************** function ___fltol *****************
  6304 ;; Defined at:
  6305 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  f1              4   53[BANK0 ] unsigned long 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;  exp1            1   63[BANK0 ] unsigned char 
  6310 ;;  sign1           1   62[BANK0 ] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  4   53[BANK0 ] long 
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, status,0
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6320 ;;      Params:         0       4       0       0       0
  6321 ;;      Locals:         0       2       0       0       0
  6322 ;;      Temps:          0       5       0       0       0
  6323 ;;      Totals:         0      11       0       0       0
  6324 ;;Total ram usage:       11 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    1
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_sprintf
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           
  6335                           ;psect for function ___fltol
  6336  1F84                     ___fltol:
  6337  1F84                     l3040:	
  6338                           ;incstack = 0
  6339                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6340                           
  6341  1F84  1003               	clrc
  6342  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  6343  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  6344  1F87  0D57               	rlf	___fltol@f1+2,w
  6345  1F88  0D58               	rlf	___fltol@f1+3,w
  6346  1F89  00D9               	movwf	??___fltol
  6347  1F8A  0859               	movf	??___fltol,w
  6348  1F8B  00DF               	movwf	___fltol@exp1
  6349  1F8C  085F               	movf	___fltol@exp1,w
  6350  1F8D  1D03               	btfss	3,2
  6351  1F8E  2F90               	goto	u4801
  6352  1F8F  2F91               	goto	u4800
  6353  1F90                     u4801:
  6354  1F90  2F9A               	goto	l3046
  6355  1F91                     u4800:
  6356  1F91                     l3042:
  6357  1F91  3000               	movlw	0
  6358  1F92  00D8               	movwf	?___fltol+3
  6359  1F93  3000               	movlw	0
  6360  1F94  00D7               	movwf	?___fltol+2
  6361  1F95  3000               	movlw	0
  6362  1F96  00D6               	movwf	?___fltol+1
  6363  1F97  3000               	movlw	0
  6364  1F98  00D5               	movwf	?___fltol
  6365  1F99  2FFF               	goto	l582
  6366  1F9A                     l3046:
  6367  1F9A  0855               	movf	___fltol@f1,w
  6368  1F9B  00D9               	movwf	??___fltol
  6369  1F9C  0856               	movf	___fltol@f1+1,w
  6370  1F9D  00DA               	movwf	??___fltol+1
  6371  1F9E  0857               	movf	___fltol@f1+2,w
  6372  1F9F  00DB               	movwf	??___fltol+2
  6373  1FA0  0858               	movf	___fltol@f1+3,w
  6374  1FA1  00DC               	movwf	??___fltol+3
  6375  1FA2  301F               	movlw	31
  6376  1FA3                     u4815:
  6377  1FA3  1003               	clrc
  6378  1FA4  0CDC               	rrf	??___fltol+3,f
  6379  1FA5  0CDB               	rrf	??___fltol+2,f
  6380  1FA6  0CDA               	rrf	??___fltol+1,f
  6381  1FA7  0CD9               	rrf	??___fltol,f
  6382  1FA8                     u4810:
  6383  1FA8  3EFF               	addlw	-1
  6384  1FA9  1D03               	skipz
  6385  1FAA  2FA3               	goto	u4815
  6386  1FAB  0859               	movf	??___fltol,w
  6387  1FAC  00DD               	movwf	??___fltol+4
  6388  1FAD  085D               	movf	??___fltol+4,w
  6389  1FAE  00DE               	movwf	___fltol@sign1
  6390  1FAF                     l3048:
  6391  1FAF  17D7               	bsf	___fltol@f1+2,7
  6392  1FB0                     l3050:
  6393  1FB0  30FF               	movlw	255
  6394  1FB1  05D5               	andwf	___fltol@f1,f
  6395  1FB2  30FF               	movlw	255
  6396  1FB3  05D6               	andwf	___fltol@f1+1,f
  6397  1FB4  30FF               	movlw	255
  6398  1FB5  05D7               	andwf	___fltol@f1+2,f
  6399  1FB6  3000               	movlw	0
  6400  1FB7  05D8               	andwf	___fltol@f1+3,f
  6401  1FB8                     l3052:
  6402  1FB8  3096               	movlw	150
  6403  1FB9  02DF               	subwf	___fltol@exp1,f
  6404  1FBA                     l3054:
  6405  1FBA  1FDF               	btfss	___fltol@exp1,7
  6406  1FBB  2FBD               	goto	u4821
  6407  1FBC  2FBE               	goto	u4820
  6408  1FBD                     u4821:
  6409  1FBD  2FD8               	goto	l3064
  6410  1FBE                     u4820:
  6411  1FBE                     l3056:
  6412  1FBE  085F               	movf	___fltol@exp1,w
  6413  1FBF  3A80               	xorlw	128
  6414  1FC0  3E97               	addlw	151
  6415  1FC1  1803               	skipnc
  6416  1FC2  2FC4               	goto	u4831
  6417  1FC3  2FC5               	goto	u4830
  6418  1FC4                     u4831:
  6419  1FC4  2FC6               	goto	l3062
  6420  1FC5                     u4830:
  6421  1FC5  2F91               	goto	l3042
  6422  1FC6                     l3062:
  6423  1FC6  3001               	movlw	1
  6424  1FC7                     u4845:
  6425  1FC7  1003               	clrc
  6426  1FC8  0CD8               	rrf	___fltol@f1+3,f
  6427  1FC9  0CD7               	rrf	___fltol@f1+2,f
  6428  1FCA  0CD6               	rrf	___fltol@f1+1,f
  6429  1FCB  0CD5               	rrf	___fltol@f1,f
  6430  1FCC  3EFF               	addlw	-1
  6431  1FCD  1D03               	skipz
  6432  1FCE  2FC7               	goto	u4845
  6433  1FCF  3001               	movlw	1
  6434  1FD0  00D9               	movwf	??___fltol
  6435  1FD1  0859               	movf	??___fltol,w
  6436  1FD2  07DF               	addwf	___fltol@exp1,f
  6437  1FD3  1D03               	btfss	3,2
  6438  1FD4  2FD6               	goto	u4851
  6439  1FD5  2FD7               	goto	u4850
  6440  1FD6                     u4851:
  6441  1FD6  2FC6               	goto	l3062
  6442  1FD7                     u4850:
  6443  1FD7  2FEF               	goto	l3072
  6444  1FD8                     l3064:
  6445  1FD8  3020               	movlw	32
  6446  1FD9  025F               	subwf	___fltol@exp1,w
  6447  1FDA  1C03               	skipc
  6448  1FDB  2FDD               	goto	u4861
  6449  1FDC  2FDE               	goto	u4860
  6450  1FDD                     u4861:
  6451  1FDD  2FEA               	goto	l589
  6452  1FDE                     u4860:
  6453  1FDE  2F91               	goto	l3042
  6454  1FDF                     l3070:
  6455  1FDF  3001               	movlw	1
  6456  1FE0  00D9               	movwf	??___fltol
  6457  1FE1                     u4875:
  6458  1FE1  1003               	clrc
  6459  1FE2  0DD5               	rlf	___fltol@f1,f
  6460  1FE3  0DD6               	rlf	___fltol@f1+1,f
  6461  1FE4  0DD7               	rlf	___fltol@f1+2,f
  6462  1FE5  0DD8               	rlf	___fltol@f1+3,f
  6463  1FE6  0BD9               	decfsz	??___fltol,f
  6464  1FE7  2FE1               	goto	u4875
  6465  1FE8  3001               	movlw	1
  6466  1FE9  02DF               	subwf	___fltol@exp1,f
  6467  1FEA                     l589:
  6468  1FEA  085F               	movf	___fltol@exp1,w
  6469  1FEB  1D03               	btfss	3,2
  6470  1FEC  2FEE               	goto	u4881
  6471  1FED  2FEF               	goto	u4880
  6472  1FEE                     u4881:
  6473  1FEE  2FDF               	goto	l3070
  6474  1FEF                     u4880:
  6475  1FEF                     l3072:
  6476  1FEF  085E               	movf	___fltol@sign1,w
  6477  1FF0  1903               	btfsc	3,2
  6478  1FF1  2FF3               	goto	u4891
  6479  1FF2  2FF4               	goto	u4890
  6480  1FF3                     u4891:
  6481  1FF3  2FFF               	goto	l592
  6482  1FF4                     u4890:
  6483  1FF4                     l3074:
  6484  1FF4  09D5               	comf	___fltol@f1,f
  6485  1FF5  09D6               	comf	___fltol@f1+1,f
  6486  1FF6  09D7               	comf	___fltol@f1+2,f
  6487  1FF7  09D8               	comf	___fltol@f1+3,f
  6488  1FF8  0AD5               	incf	___fltol@f1,f
  6489  1FF9  1903               	skipnz
  6490  1FFA  0AD6               	incf	___fltol@f1+1,f
  6491  1FFB  1903               	skipnz
  6492  1FFC  0AD7               	incf	___fltol@f1+2,f
  6493  1FFD  1903               	skipnz
  6494  1FFE  0AD8               	incf	___fltol@f1+3,f
  6495  1FFF                     l592:
  6496  1FFF                     l582:
  6497  1FFF  0008               	return
  6498  2000                     __end_of___fltol:
  6499                           
  6500                           	psect	text17
  6501  1E0D                     __ptext17:	
  6502 ;; *************** function ___flsub *****************
  6503 ;; Defined at:
  6504 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  a               4    0[BANK1 ] long 
  6507 ;;  b               4    4[BANK1 ] long 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  4    0[BANK1 ] long 
  6512 ;; Registers used:
  6513 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6519 ;;      Params:         0       0       8       0       0
  6520 ;;      Locals:         0       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0
  6522 ;;      Totals:         0       0       8       0       0
  6523 ;;Total ram usage:        8 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    2
  6526 ;; This function calls:
  6527 ;;		___fladd
  6528 ;; This function is called by:
  6529 ;;		_sprintf
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           
  6534                           ;psect for function ___flsub
  6535  1E0D                     ___flsub:
  6536  1E0D                     l3096:	
  6537                           ;incstack = 0
  6538                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6539                           
  6540  1E0D  3080               	movlw	128
  6541  1E0E  1683               	bsf	3,5	;RP0=1, select bank1
  6542  1E0F  1303               	bcf	3,6	;RP1=0, select bank1
  6543  1E10  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6544  1E11                     l3098:
  6545  1E11  0827               	movf	(___flsub@b+3)^(0+128),w
  6546  1E12  1283               	bcf	3,5	;RP0=0, select bank0
  6547  1E13  1303               	bcf	3,6	;RP1=0, select bank0
  6548  1E14  00D9               	movwf	___fladd@b+3
  6549  1E15  1683               	bsf	3,5	;RP0=1, select bank1
  6550  1E16  1303               	bcf	3,6	;RP1=0, select bank1
  6551  1E17  0826               	movf	(___flsub@b+2)^(0+128),w
  6552  1E18  1283               	bcf	3,5	;RP0=0, select bank0
  6553  1E19  1303               	bcf	3,6	;RP1=0, select bank0
  6554  1E1A  00D8               	movwf	___fladd@b+2
  6555  1E1B  1683               	bsf	3,5	;RP0=1, select bank1
  6556  1E1C  1303               	bcf	3,6	;RP1=0, select bank1
  6557  1E1D  0825               	movf	(___flsub@b+1)^(0+128),w
  6558  1E1E  1283               	bcf	3,5	;RP0=0, select bank0
  6559  1E1F  1303               	bcf	3,6	;RP1=0, select bank0
  6560  1E20  00D7               	movwf	___fladd@b+1
  6561  1E21  1683               	bsf	3,5	;RP0=1, select bank1
  6562  1E22  1303               	bcf	3,6	;RP1=0, select bank1
  6563  1E23  0824               	movf	___flsub@b^(0+128),w
  6564  1E24  1283               	bcf	3,5	;RP0=0, select bank0
  6565  1E25  1303               	bcf	3,6	;RP1=0, select bank0
  6566  1E26  00D6               	movwf	___fladd@b
  6567  1E27  1683               	bsf	3,5	;RP0=1, select bank1
  6568  1E28  1303               	bcf	3,6	;RP1=0, select bank1
  6569  1E29  0823               	movf	(___flsub@a+3)^(0+128),w
  6570  1E2A  1283               	bcf	3,5	;RP0=0, select bank0
  6571  1E2B  1303               	bcf	3,6	;RP1=0, select bank0
  6572  1E2C  00DD               	movwf	___fladd@a+3
  6573  1E2D  1683               	bsf	3,5	;RP0=1, select bank1
  6574  1E2E  1303               	bcf	3,6	;RP1=0, select bank1
  6575  1E2F  0822               	movf	(___flsub@a+2)^(0+128),w
  6576  1E30  1283               	bcf	3,5	;RP0=0, select bank0
  6577  1E31  1303               	bcf	3,6	;RP1=0, select bank0
  6578  1E32  00DC               	movwf	___fladd@a+2
  6579  1E33  1683               	bsf	3,5	;RP0=1, select bank1
  6580  1E34  1303               	bcf	3,6	;RP1=0, select bank1
  6581  1E35  0821               	movf	(___flsub@a+1)^(0+128),w
  6582  1E36  1283               	bcf	3,5	;RP0=0, select bank0
  6583  1E37  1303               	bcf	3,6	;RP1=0, select bank0
  6584  1E38  00DB               	movwf	___fladd@a+1
  6585  1E39  1683               	bsf	3,5	;RP0=1, select bank1
  6586  1E3A  1303               	bcf	3,6	;RP1=0, select bank1
  6587  1E3B  0820               	movf	___flsub@a^(0+128),w
  6588  1E3C  1283               	bcf	3,5	;RP0=0, select bank0
  6589  1E3D  1303               	bcf	3,6	;RP1=0, select bank0
  6590  1E3E  00DA               	movwf	___fladd@a
  6591  1E3F  120A  118A  254D  160A  158A  	fcall	___fladd
  6592  1E44  1283               	bcf	3,5	;RP0=0, select bank0
  6593  1E45  1303               	bcf	3,6	;RP1=0, select bank0
  6594  1E46  0859               	movf	?___fladd+3,w
  6595  1E47  1683               	bsf	3,5	;RP0=1, select bank1
  6596  1E48  1303               	bcf	3,6	;RP1=0, select bank1
  6597  1E49  00A3               	movwf	(?___flsub+3)^(0+128)
  6598  1E4A  1283               	bcf	3,5	;RP0=0, select bank0
  6599  1E4B  1303               	bcf	3,6	;RP1=0, select bank0
  6600  1E4C  0858               	movf	?___fladd+2,w
  6601  1E4D  1683               	bsf	3,5	;RP0=1, select bank1
  6602  1E4E  1303               	bcf	3,6	;RP1=0, select bank1
  6603  1E4F  00A2               	movwf	(?___flsub+2)^(0+128)
  6604  1E50  1283               	bcf	3,5	;RP0=0, select bank0
  6605  1E51  1303               	bcf	3,6	;RP1=0, select bank0
  6606  1E52  0857               	movf	?___fladd+1,w
  6607  1E53  1683               	bsf	3,5	;RP0=1, select bank1
  6608  1E54  1303               	bcf	3,6	;RP1=0, select bank1
  6609  1E55  00A1               	movwf	(?___flsub+1)^(0+128)
  6610  1E56  1283               	bcf	3,5	;RP0=0, select bank0
  6611  1E57  1303               	bcf	3,6	;RP1=0, select bank0
  6612  1E58  0856               	movf	?___fladd,w
  6613  1E59  1683               	bsf	3,5	;RP0=1, select bank1
  6614  1E5A  1303               	bcf	3,6	;RP1=0, select bank1
  6615  1E5B  00A0               	movwf	?___flsub^(0+128)
  6616  1E5C                     l752:
  6617  1E5C  0008               	return
  6618  1E5D                     __end_of___flsub:
  6619                           
  6620                           	psect	text18
  6621  054D                     __ptext18:	
  6622 ;; *************** function ___fladd *****************
  6623 ;; Defined at:
  6624 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;  b               4   54[BANK0 ] long 
  6627 ;;  a               4   58[BANK0 ] long 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;  grs             1   73[BANK0 ] unsigned char 
  6630 ;;  bexp            1   72[BANK0 ] unsigned char 
  6631 ;;  aexp            1   71[BANK0 ] unsigned char 
  6632 ;;  signs           1   70[BANK0 ] unsigned char 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  4   54[BANK0 ] unsigned char 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0, btemp+1
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6642 ;;      Params:         0       8       0       0       0
  6643 ;;      Locals:         0       4       0       0       0
  6644 ;;      Temps:          0       8       0       0       0
  6645 ;;      Totals:         0      20       0       0       0
  6646 ;;Total ram usage:       20 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    1
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_sprintf
  6653 ;;		___flsub
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           
  6658                           ;psect for function ___fladd
  6659  054D                     ___fladd:
  6660  054D                     l2446:	
  6661                           ;incstack = 0
  6662                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6663                           
  6664  054D  1283               	bcf	3,5	;RP0=0, select bank0
  6665  054E  1303               	bcf	3,6	;RP1=0, select bank0
  6666  054F  0859               	movf	___fladd@b+3,w
  6667  0550  3980               	andlw	128
  6668  0551  00DE               	movwf	??___fladd
  6669  0552  085E               	movf	??___fladd,w
  6670  0553  00E6               	movwf	___fladd@signs
  6671  0554                     l2448:
  6672  0554  0859               	movf	___fladd@b+3,w
  6673  0555  00DE               	movwf	??___fladd
  6674  0556  075E               	addwf	??___fladd,w
  6675  0557  00DF               	movwf	??___fladd+1
  6676  0558  085F               	movf	??___fladd+1,w
  6677  0559  00E8               	movwf	___fladd@bexp
  6678  055A                     l2450:
  6679  055A  1FD8               	btfss	___fladd@b+2,7
  6680  055B  2D5D               	goto	u3191
  6681  055C  2D5E               	goto	u3190
  6682  055D                     u3191:
  6683  055D  2D5F               	goto	l2454
  6684  055E                     u3190:
  6685  055E                     l2452:
  6686  055E  1468               	bsf	___fladd@bexp,0
  6687  055F                     l2454:
  6688  055F  0868               	movf	___fladd@bexp,w
  6689  0560  1903               	btfsc	3,2
  6690  0561  2D63               	goto	u3201
  6691  0562  2D64               	goto	u3200
  6692  0563                     u3201:
  6693  0563  2D74               	goto	l2464
  6694  0564                     u3200:
  6695  0564                     l2456:
  6696  0564  0A68               	incf	___fladd@bexp,w
  6697  0565  1D03               	btfss	3,2
  6698  0566  2D68               	goto	u3211
  6699  0567  2D69               	goto	u3210
  6700  0568                     u3211:
  6701  0568  2D71               	goto	l2460
  6702  0569                     u3210:
  6703  0569                     l2458:
  6704  0569  3000               	movlw	0
  6705  056A  00D9               	movwf	___fladd@b+3
  6706  056B  3000               	movlw	0
  6707  056C  00D8               	movwf	___fladd@b+2
  6708  056D  3000               	movlw	0
  6709  056E  00D7               	movwf	___fladd@b+1
  6710  056F  3000               	movlw	0
  6711  0570  00D6               	movwf	___fladd@b
  6712  0571                     l2460:
  6713  0571  17D8               	bsf	___fladd@b+2,7
  6714  0572                     l2462:
  6715  0572  01D9               	clrf	___fladd@b+3
  6716  0573  2D7C               	goto	l2466
  6717  0574                     l2464:
  6718  0574  3000               	movlw	0
  6719  0575  00D9               	movwf	___fladd@b+3
  6720  0576  3000               	movlw	0
  6721  0577  00D8               	movwf	___fladd@b+2
  6722  0578  3000               	movlw	0
  6723  0579  00D7               	movwf	___fladd@b+1
  6724  057A  3000               	movlw	0
  6725  057B  00D6               	movwf	___fladd@b
  6726  057C                     l2466:
  6727  057C  085D               	movf	___fladd@a+3,w
  6728  057D  3980               	andlw	128
  6729  057E  00DE               	movwf	??___fladd
  6730  057F  085E               	movf	??___fladd,w
  6731  0580  00E7               	movwf	___fladd@aexp
  6732  0581                     l2468:
  6733  0581  0867               	movf	___fladd@aexp,w
  6734  0582  0666               	xorwf	___fladd@signs,w
  6735  0583  1903               	skipnz
  6736  0584  2D86               	goto	u3221
  6737  0585  2D87               	goto	u3220
  6738  0586                     u3221:
  6739  0586  2D88               	goto	l2472
  6740  0587                     u3220:
  6741  0587                     l2470:
  6742  0587  1766               	bsf	___fladd@signs,6
  6743  0588                     l2472:
  6744  0588  085D               	movf	___fladd@a+3,w
  6745  0589  00DE               	movwf	??___fladd
  6746  058A  075E               	addwf	??___fladd,w
  6747  058B  00DF               	movwf	??___fladd+1
  6748  058C  085F               	movf	??___fladd+1,w
  6749  058D  00E7               	movwf	___fladd@aexp
  6750  058E                     l2474:
  6751  058E  1FDC               	btfss	___fladd@a+2,7
  6752  058F  2D91               	goto	u3231
  6753  0590  2D92               	goto	u3230
  6754  0591                     u3231:
  6755  0591  2D93               	goto	l2478
  6756  0592                     u3230:
  6757  0592                     l2476:
  6758  0592  1467               	bsf	___fladd@aexp,0
  6759  0593                     l2478:
  6760  0593  0867               	movf	___fladd@aexp,w
  6761  0594  1903               	btfsc	3,2
  6762  0595  2D97               	goto	u3241
  6763  0596  2D98               	goto	u3240
  6764  0597                     u3241:
  6765  0597  2DA8               	goto	l2488
  6766  0598                     u3240:
  6767  0598                     l2480:
  6768  0598  0A67               	incf	___fladd@aexp,w
  6769  0599  1D03               	btfss	3,2
  6770  059A  2D9C               	goto	u3251
  6771  059B  2D9D               	goto	u3250
  6772  059C                     u3251:
  6773  059C  2DA5               	goto	l2484
  6774  059D                     u3250:
  6775  059D                     l2482:
  6776  059D  3000               	movlw	0
  6777  059E  00DD               	movwf	___fladd@a+3
  6778  059F  3000               	movlw	0
  6779  05A0  00DC               	movwf	___fladd@a+2
  6780  05A1  3000               	movlw	0
  6781  05A2  00DB               	movwf	___fladd@a+1
  6782  05A3  3000               	movlw	0
  6783  05A4  00DA               	movwf	___fladd@a
  6784  05A5                     l2484:
  6785  05A5  17DC               	bsf	___fladd@a+2,7
  6786  05A6                     l2486:
  6787  05A6  01DD               	clrf	___fladd@a+3
  6788  05A7  2DB0               	goto	l706
  6789  05A8                     l2488:
  6790  05A8  3000               	movlw	0
  6791  05A9  00DD               	movwf	___fladd@a+3
  6792  05AA  3000               	movlw	0
  6793  05AB  00DC               	movwf	___fladd@a+2
  6794  05AC  3000               	movlw	0
  6795  05AD  00DB               	movwf	___fladd@a+1
  6796  05AE  3000               	movlw	0
  6797  05AF  00DA               	movwf	___fladd@a
  6798  05B0                     l706:
  6799  05B0  0868               	movf	___fladd@bexp,w
  6800  05B1  0267               	subwf	___fladd@aexp,w
  6801  05B2  1803               	skipnc
  6802  05B3  2DB5               	goto	u3261
  6803  05B4  2DB6               	goto	u3260
  6804  05B5                     u3261:
  6805  05B5  2DFA               	goto	l2524
  6806  05B6                     u3260:
  6807  05B6                     l2490:
  6808  05B6  1F66               	btfss	___fladd@signs,6
  6809  05B7  2DB9               	goto	u3271
  6810  05B8  2DBA               	goto	u3270
  6811  05B9                     u3271:
  6812  05B9  2DBE               	goto	l2494
  6813  05BA                     u3270:
  6814  05BA                     l2492:
  6815  05BA  3080               	movlw	128
  6816  05BB  00DE               	movwf	??___fladd
  6817  05BC  085E               	movf	??___fladd,w
  6818  05BD  06E6               	xorwf	___fladd@signs,f
  6819  05BE                     l2494:
  6820  05BE  0868               	movf	___fladd@bexp,w
  6821  05BF  00DE               	movwf	??___fladd
  6822  05C0  085E               	movf	??___fladd,w
  6823  05C1  00E9               	movwf	___fladd@grs
  6824  05C2                     l2496:
  6825  05C2  0867               	movf	___fladd@aexp,w
  6826  05C3  00DE               	movwf	??___fladd
  6827  05C4  085E               	movf	??___fladd,w
  6828  05C5  00E8               	movwf	___fladd@bexp
  6829  05C6                     l2498:
  6830  05C6  0869               	movf	___fladd@grs,w
  6831  05C7  00DE               	movwf	??___fladd
  6832  05C8  085E               	movf	??___fladd,w
  6833  05C9  00E7               	movwf	___fladd@aexp
  6834  05CA                     l2500:
  6835  05CA  0856               	movf	___fladd@b,w
  6836  05CB  00DE               	movwf	??___fladd
  6837  05CC  085E               	movf	??___fladd,w
  6838  05CD  00E9               	movwf	___fladd@grs
  6839  05CE                     l2502:
  6840  05CE  085A               	movf	___fladd@a,w
  6841  05CF  00DE               	movwf	??___fladd
  6842  05D0  085E               	movf	??___fladd,w
  6843  05D1  00D6               	movwf	___fladd@b
  6844  05D2                     l2504:
  6845  05D2  0869               	movf	___fladd@grs,w
  6846  05D3  00DE               	movwf	??___fladd
  6847  05D4  085E               	movf	??___fladd,w
  6848  05D5  00DA               	movwf	___fladd@a
  6849  05D6                     l2506:
  6850  05D6  0857               	movf	___fladd@b+1,w
  6851  05D7  00DE               	movwf	??___fladd
  6852  05D8  085E               	movf	??___fladd,w
  6853  05D9  00E9               	movwf	___fladd@grs
  6854  05DA                     l2508:
  6855  05DA  085B               	movf	___fladd@a+1,w
  6856  05DB  00DE               	movwf	??___fladd
  6857  05DC  085E               	movf	??___fladd,w
  6858  05DD  00D7               	movwf	___fladd@b+1
  6859  05DE                     l2510:
  6860  05DE  0869               	movf	___fladd@grs,w
  6861  05DF  00DE               	movwf	??___fladd
  6862  05E0  085E               	movf	??___fladd,w
  6863  05E1  00DB               	movwf	___fladd@a+1
  6864  05E2                     l2512:
  6865  05E2  0858               	movf	___fladd@b+2,w
  6866  05E3  00DE               	movwf	??___fladd
  6867  05E4  085E               	movf	??___fladd,w
  6868  05E5  00E9               	movwf	___fladd@grs
  6869  05E6                     l2514:
  6870  05E6  085C               	movf	___fladd@a+2,w
  6871  05E7  00DE               	movwf	??___fladd
  6872  05E8  085E               	movf	??___fladd,w
  6873  05E9  00D8               	movwf	___fladd@b+2
  6874  05EA                     l2516:
  6875  05EA  0869               	movf	___fladd@grs,w
  6876  05EB  00DE               	movwf	??___fladd
  6877  05EC  085E               	movf	??___fladd,w
  6878  05ED  00DC               	movwf	___fladd@a+2
  6879  05EE                     l2518:
  6880  05EE  0859               	movf	___fladd@b+3,w
  6881  05EF  00DE               	movwf	??___fladd
  6882  05F0  085E               	movf	??___fladd,w
  6883  05F1  00E9               	movwf	___fladd@grs
  6884  05F2                     l2520:
  6885  05F2  085D               	movf	___fladd@a+3,w
  6886  05F3  00DE               	movwf	??___fladd
  6887  05F4  085E               	movf	??___fladd,w
  6888  05F5  00D9               	movwf	___fladd@b+3
  6889  05F6                     l2522:
  6890  05F6  0869               	movf	___fladd@grs,w
  6891  05F7  00DE               	movwf	??___fladd
  6892  05F8  085E               	movf	??___fladd,w
  6893  05F9  00DD               	movwf	___fladd@a+3
  6894  05FA                     l2524:
  6895  05FA  01E9               	clrf	___fladd@grs
  6896  05FB                     l2526:
  6897  05FB  0867               	movf	___fladd@aexp,w
  6898  05FC  00DE               	movwf	??___fladd
  6899  05FD  01DF               	clrf	??___fladd+1
  6900  05FE  085F               	movf	??___fladd+1,w
  6901  05FF  00E1               	movwf	??___fladd+3
  6902  0600  0868               	movf	___fladd@bexp,w
  6903  0601  025E               	subwf	??___fladd,w
  6904  0602  00E0               	movwf	??___fladd+2
  6905  0603  1C03               	skipc
  6906  0604  03E1               	decf	??___fladd+3,f
  6907  0605  0861               	movf	??___fladd+3,w
  6908  0606  3A80               	xorlw	128
  6909  0607  00FF               	movwf	btemp+1
  6910  0608  3080               	movlw	128
  6911  0609  027F               	subwf	btemp+1,w
  6912  060A  1D03               	skipz
  6913  060B  2E0E               	goto	u3285
  6914  060C  301A               	movlw	26
  6915  060D  0260               	subwf	??___fladd+2,w
  6916  060E                     u3285:
  6917  060E  1C03               	skipc
  6918  060F  2E11               	goto	u3281
  6919  0610  2E12               	goto	u3280
  6920  0611                     u3281:
  6921  0611  2E4F               	goto	l2542
  6922  0612                     u3280:
  6923  0612                     l2528:
  6924  0612  1283               	bcf	3,5	;RP0=0, select bank0
  6925  0613  1303               	bcf	3,6	;RP1=0, select bank0
  6926  0614  0859               	movf	___fladd@b+3,w
  6927  0615  0458               	iorwf	___fladd@b+2,w
  6928  0616  0457               	iorwf	___fladd@b+1,w
  6929  0617  0456               	iorwf	___fladd@b,w
  6930  0618  1D03               	skipz
  6931  0619  2E1B               	goto	u3291
  6932  061A  2E1D               	goto	u3290
  6933  061B                     u3291:
  6934  061B  3001               	movlw	1
  6935  061C  2E1E               	goto	u3300
  6936  061D                     u3290:
  6937  061D  3000               	movlw	0
  6938  061E                     u3300:
  6939  061E  00DE               	movwf	??___fladd
  6940  061F  085E               	movf	??___fladd,w
  6941  0620  00E9               	movwf	___fladd@grs
  6942  0621  3000               	movlw	0
  6943  0622  00D9               	movwf	___fladd@b+3
  6944  0623  3000               	movlw	0
  6945  0624  00D8               	movwf	___fladd@b+2
  6946  0625  3000               	movlw	0
  6947  0626  00D7               	movwf	___fladd@b+1
  6948  0627  3000               	movlw	0
  6949  0628  00D6               	movwf	___fladd@b
  6950  0629  0867               	movf	___fladd@aexp,w
  6951  062A  00DE               	movwf	??___fladd
  6952  062B  085E               	movf	??___fladd,w
  6953  062C  00E8               	movwf	___fladd@bexp
  6954  062D  2E57               	goto	l710
  6955  062E                     l712:
  6956  062E  1C69               	btfss	___fladd@grs,0
  6957  062F  2E31               	goto	u3311
  6958  0630  2E32               	goto	u3310
  6959  0631                     u3311:
  6960  0631  2E3B               	goto	l2532
  6961  0632                     u3310:
  6962  0632                     l2530:
  6963  0632  0869               	movf	___fladd@grs,w
  6964  0633  00DE               	movwf	??___fladd
  6965  0634  1003               	clrc
  6966  0635  0C5E               	rrf	??___fladd,w
  6967  0636  3801               	iorlw	1
  6968  0637  00DF               	movwf	??___fladd+1
  6969  0638  085F               	movf	??___fladd+1,w
  6970  0639  00E9               	movwf	___fladd@grs
  6971  063A  2E3D               	goto	l2534
  6972  063B                     l2532:
  6973  063B  1003               	clrc
  6974  063C  0CE9               	rrf	___fladd@grs,f
  6975  063D                     l2534:
  6976  063D  1C56               	btfss	___fladd@b,0
  6977  063E  2E40               	goto	u3321
  6978  063F  2E41               	goto	u3320
  6979  0640                     u3321:
  6980  0640  2E42               	goto	l2538
  6981  0641                     u3320:
  6982  0641                     l2536:
  6983  0641  17E9               	bsf	___fladd@grs,7
  6984  0642                     l2538:
  6985  0642  3001               	movlw	1
  6986  0643  00DE               	movwf	??___fladd
  6987  0644                     u3335:
  6988  0644  0D59               	rlf	___fladd@b+3,w
  6989  0645  0CD9               	rrf	___fladd@b+3,f
  6990  0646  0CD8               	rrf	___fladd@b+2,f
  6991  0647  0CD7               	rrf	___fladd@b+1,f
  6992  0648  0CD6               	rrf	___fladd@b,f
  6993  0649  0BDE               	decfsz	??___fladd& (0+127),f
  6994  064A  2E44               	goto	u3335
  6995  064B                     l2540:
  6996  064B  3001               	movlw	1
  6997  064C  00DE               	movwf	??___fladd
  6998  064D  085E               	movf	??___fladd,w
  6999  064E  07E8               	addwf	___fladd@bexp,f
  7000  064F                     l2542:
  7001  064F  1283               	bcf	3,5	;RP0=0, select bank0
  7002  0650  1303               	bcf	3,6	;RP1=0, select bank0
  7003  0651  0867               	movf	___fladd@aexp,w
  7004  0652  0268               	subwf	___fladd@bexp,w
  7005  0653  1C03               	skipc
  7006  0654  2E56               	goto	u3341
  7007  0655  2E57               	goto	u3340
  7008  0656                     u3341:
  7009  0656  2E2E               	goto	l712
  7010  0657                     u3340:
  7011  0657                     l710:
  7012  0657  1B66               	btfsc	___fladd@signs,6
  7013  0658  2E5A               	goto	u3351
  7014  0659  2E5B               	goto	u3350
  7015  065A                     u3351:
  7016  065A  2EA6               	goto	l2568
  7017  065B                     u3350:
  7018  065B                     l2544:
  7019  065B  0868               	movf	___fladd@bexp,w
  7020  065C  1D03               	btfss	3,2
  7021  065D  2E5F               	goto	u3361
  7022  065E  2E60               	goto	u3360
  7023  065F                     u3361:
  7024  065F  2E69               	goto	l2550
  7025  0660                     u3360:
  7026  0660                     l2546:
  7027  0660  3000               	movlw	0
  7028  0661  00D9               	movwf	?___fladd+3
  7029  0662  3000               	movlw	0
  7030  0663  00D8               	movwf	?___fladd+2
  7031  0664  3000               	movlw	0
  7032  0665  00D7               	movwf	?___fladd+1
  7033  0666  3000               	movlw	0
  7034  0667  00D6               	movwf	?___fladd
  7035  0668  2FD4               	goto	l719
  7036  0669                     l2550:
  7037  0669  085A               	movf	___fladd@a,w
  7038  066A  07D6               	addwf	___fladd@b,f
  7039  066B  085B               	movf	___fladd@a+1,w
  7040  066C  1103               	clrz
  7041  066D  1803               	skipnc
  7042  066E  3E01               	addlw	1
  7043  066F  1903               	skipnz
  7044  0670  2E72               	goto	u3371
  7045  0671  07D7               	addwf	___fladd@b+1,f
  7046  0672                     u3371:
  7047  0672  085C               	movf	___fladd@a+2,w
  7048  0673  1103               	clrz
  7049  0674  1803               	skipnc
  7050  0675  3E01               	addlw	1
  7051  0676  1903               	skipnz
  7052  0677  2E79               	goto	u3372
  7053  0678  07D8               	addwf	___fladd@b+2,f
  7054  0679                     u3372:
  7055  0679  085D               	movf	___fladd@a+3,w
  7056  067A  1103               	clrz
  7057  067B  1803               	skipnc
  7058  067C  3E01               	addlw	1
  7059  067D  1903               	skipnz
  7060  067E  2E80               	goto	u3373
  7061  067F  07D9               	addwf	___fladd@b+3,f
  7062  0680                     u3373:
  7063  0680                     l2552:
  7064  0680  1C59               	btfss	___fladd@b+3,0
  7065  0681  2E83               	goto	u3381
  7066  0682  2E84               	goto	u3380
  7067  0683                     u3381:
  7068  0683  2F5A               	goto	l2602
  7069  0684                     u3380:
  7070  0684                     l2554:
  7071  0684  1C69               	btfss	___fladd@grs,0
  7072  0685  2E87               	goto	u3391
  7073  0686  2E88               	goto	u3390
  7074  0687                     u3391:
  7075  0687  2E91               	goto	l2558
  7076  0688                     u3390:
  7077  0688                     l2556:
  7078  0688  0869               	movf	___fladd@grs,w
  7079  0689  00DE               	movwf	??___fladd
  7080  068A  1003               	clrc
  7081  068B  0C5E               	rrf	??___fladd,w
  7082  068C  3801               	iorlw	1
  7083  068D  00DF               	movwf	??___fladd+1
  7084  068E  085F               	movf	??___fladd+1,w
  7085  068F  00E9               	movwf	___fladd@grs
  7086  0690  2E93               	goto	l2560
  7087  0691                     l2558:
  7088  0691  1003               	clrc
  7089  0692  0CE9               	rrf	___fladd@grs,f
  7090  0693                     l2560:
  7091  0693  1C56               	btfss	___fladd@b,0
  7092  0694  2E96               	goto	u3401
  7093  0695  2E97               	goto	u3400
  7094  0696                     u3401:
  7095  0696  2E98               	goto	l2564
  7096  0697                     u3400:
  7097  0697                     l2562:
  7098  0697  17E9               	bsf	___fladd@grs,7
  7099  0698                     l2564:
  7100  0698  3001               	movlw	1
  7101  0699  00DE               	movwf	??___fladd
  7102  069A                     u3415:
  7103  069A  0D59               	rlf	___fladd@b+3,w
  7104  069B  0CD9               	rrf	___fladd@b+3,f
  7105  069C  0CD8               	rrf	___fladd@b+2,f
  7106  069D  0CD7               	rrf	___fladd@b+1,f
  7107  069E  0CD6               	rrf	___fladd@b,f
  7108  069F  0BDE               	decfsz	??___fladd& (0+127),f
  7109  06A0  2E9A               	goto	u3415
  7110  06A1                     l2566:
  7111  06A1  3001               	movlw	1
  7112  06A2  00DE               	movwf	??___fladd
  7113  06A3  085E               	movf	??___fladd,w
  7114  06A4  07E8               	addwf	___fladd@bexp,f
  7115  06A5  2F5A               	goto	l2602
  7116  06A6                     l2568:
  7117  06A6  0859               	movf	___fladd@b+3,w
  7118  06A7  3A80               	xorlw	128
  7119  06A8  00FF               	movwf	btemp+1
  7120  06A9  085D               	movf	___fladd@a+3,w
  7121  06AA  3A80               	xorlw	128
  7122  06AB  027F               	subwf	btemp+1,w
  7123  06AC  1D03               	skipz
  7124  06AD  2EB8               	goto	u3423
  7125  06AE  085C               	movf	___fladd@a+2,w
  7126  06AF  0258               	subwf	___fladd@b+2,w
  7127  06B0  1D03               	skipz
  7128  06B1  2EB8               	goto	u3423
  7129  06B2  085B               	movf	___fladd@a+1,w
  7130  06B3  0257               	subwf	___fladd@b+1,w
  7131  06B4  1D03               	skipz
  7132  06B5  2EB8               	goto	u3423
  7133  06B6  085A               	movf	___fladd@a,w
  7134  06B7  0256               	subwf	___fladd@b,w
  7135  06B8                     u3423:
  7136  06B8  1803               	skipnc
  7137  06B9  2EBB               	goto	u3421
  7138  06BA  2EBC               	goto	u3420
  7139  06BB                     u3421:
  7140  06BB  2F14               	goto	l2578
  7141  06BC                     u3420:
  7142  06BC                     l2570:
  7143  06BC  30FF               	movlw	255
  7144  06BD  00DE               	movwf	??___fladd
  7145  06BE  30FF               	movlw	255
  7146  06BF  00DF               	movwf	??___fladd+1
  7147  06C0  30FF               	movlw	255
  7148  06C1  00E0               	movwf	??___fladd+2
  7149  06C2  30FF               	movlw	255
  7150  06C3  00E1               	movwf	??___fladd+3
  7151  06C4  085A               	movf	___fladd@a,w
  7152  06C5  00E2               	movwf	??___fladd+4
  7153  06C6  085B               	movf	___fladd@a+1,w
  7154  06C7  00E3               	movwf	??___fladd+5
  7155  06C8  085C               	movf	___fladd@a+2,w
  7156  06C9  00E4               	movwf	??___fladd+6
  7157  06CA  085D               	movf	___fladd@a+3,w
  7158  06CB  00E5               	movwf	??___fladd+7
  7159  06CC  0856               	movf	___fladd@b,w
  7160  06CD  02E2               	subwf	??___fladd+4,f
  7161  06CE  0857               	movf	___fladd@b+1,w
  7162  06CF  1C03               	skipc
  7163  06D0  0F57               	incfsz	___fladd@b+1,w
  7164  06D1  2ED3               	goto	u3431
  7165  06D2  2ED4               	goto	u3432
  7166  06D3                     u3431:
  7167  06D3  02E3               	subwf	??___fladd+5,f
  7168  06D4                     u3432:
  7169  06D4  0858               	movf	___fladd@b+2,w
  7170  06D5  1C03               	skipc
  7171  06D6  0F58               	incfsz	___fladd@b+2,w
  7172  06D7  2ED9               	goto	u3433
  7173  06D8  2EDA               	goto	u3434
  7174  06D9                     u3433:
  7175  06D9  02E4               	subwf	??___fladd+6,f
  7176  06DA                     u3434:
  7177  06DA  0859               	movf	___fladd@b+3,w
  7178  06DB  1C03               	skipc
  7179  06DC  0F59               	incfsz	___fladd@b+3,w
  7180  06DD  2EDF               	goto	u3435
  7181  06DE  2EE0               	goto	u3436
  7182  06DF                     u3435:
  7183  06DF  02E5               	subwf	??___fladd+7,f
  7184  06E0                     u3436:
  7185  06E0  0862               	movf	??___fladd+4,w
  7186  06E1  07DE               	addwf	??___fladd,f
  7187  06E2  0863               	movf	??___fladd+5,w
  7188  06E3  1803               	skipnc
  7189  06E4  0F63               	incfsz	??___fladd+5,w
  7190  06E5  2EE7               	goto	u3440
  7191  06E6  2EE8               	goto	u3441
  7192  06E7                     u3440:
  7193  06E7  07DF               	addwf	??___fladd+1,f
  7194  06E8                     u3441:
  7195  06E8  0864               	movf	??___fladd+6,w
  7196  06E9  1803               	skipnc
  7197  06EA  0F64               	incfsz	??___fladd+6,w
  7198  06EB  2EED               	goto	u3442
  7199  06EC  2EEE               	goto	u3443
  7200  06ED                     u3442:
  7201  06ED  07E0               	addwf	??___fladd+2,f
  7202  06EE                     u3443:
  7203  06EE  0865               	movf	??___fladd+7,w
  7204  06EF  1803               	skipnc
  7205  06F0  0A65               	incf	??___fladd+7,w
  7206  06F1  07E1               	addwf	??___fladd+3,f
  7207  06F2  0861               	movf	??___fladd+3,w
  7208  06F3  00D9               	movwf	___fladd@b+3
  7209  06F4  0860               	movf	??___fladd+2,w
  7210  06F5  00D8               	movwf	___fladd@b+2
  7211  06F6  085F               	movf	??___fladd+1,w
  7212  06F7  00D7               	movwf	___fladd@b+1
  7213  06F8  085E               	movf	??___fladd,w
  7214  06F9  00D6               	movwf	___fladd@b
  7215  06FA                     l2572:
  7216  06FA  3080               	movlw	128
  7217  06FB  00DE               	movwf	??___fladd
  7218  06FC  085E               	movf	??___fladd,w
  7219  06FD  06E6               	xorwf	___fladd@signs,f
  7220  06FE  09E9               	comf	___fladd@grs,f
  7221  06FF  0AE9               	incf	___fladd@grs,f
  7222  0700                     l2574:
  7223  0700  0869               	movf	___fladd@grs,w
  7224  0701  1D03               	btfss	3,2
  7225  0702  2F04               	goto	u3451
  7226  0703  2F05               	goto	u3450
  7227  0704                     u3451:
  7228  0704  2F22               	goto	l727
  7229  0705                     u3450:
  7230  0705                     l2576:
  7231  0705  3001               	movlw	1
  7232  0706  07D6               	addwf	___fladd@b,f
  7233  0707  3000               	movlw	0
  7234  0708  1803               	skipnc
  7235  0709  3001               	movlw	1
  7236  070A  07D7               	addwf	___fladd@b+1,f
  7237  070B  3000               	movlw	0
  7238  070C  1803               	skipnc
  7239  070D  3001               	movlw	1
  7240  070E  07D8               	addwf	___fladd@b+2,f
  7241  070F  3000               	movlw	0
  7242  0710  1803               	skipnc
  7243  0711  3001               	movlw	1
  7244  0712  07D9               	addwf	___fladd@b+3,f
  7245  0713  2F22               	goto	l727
  7246  0714                     l2578:
  7247  0714  085A               	movf	___fladd@a,w
  7248  0715  02D6               	subwf	___fladd@b,f
  7249  0716  085B               	movf	___fladd@a+1,w
  7250  0717  1C03               	skipc
  7251  0718  0F5B               	incfsz	___fladd@a+1,w
  7252  0719  02D7               	subwf	___fladd@b+1,f
  7253  071A  085C               	movf	___fladd@a+2,w
  7254  071B  1C03               	skipc
  7255  071C  0F5C               	incfsz	___fladd@a+2,w
  7256  071D  02D8               	subwf	___fladd@b+2,f
  7257  071E  085D               	movf	___fladd@a+3,w
  7258  071F  1C03               	skipc
  7259  0720  0F5D               	incfsz	___fladd@a+3,w
  7260  0721  02D9               	subwf	___fladd@b+3,f
  7261  0722                     l727:
  7262  0722  0859               	movf	___fladd@b+3,w
  7263  0723  0458               	iorwf	___fladd@b+2,w
  7264  0724  0457               	iorwf	___fladd@b+1,w
  7265  0725  0456               	iorwf	___fladd@b,w
  7266  0726  1D03               	skipz
  7267  0727  2F29               	goto	u3461
  7268  0728  2F2A               	goto	u3460
  7269  0729                     u3461:
  7270  0729  2F56               	goto	l2600
  7271  072A                     u3460:
  7272  072A                     l2580:
  7273  072A  0869               	movf	___fladd@grs,w
  7274  072B  1D03               	btfss	3,2
  7275  072C  2F2E               	goto	u3471
  7276  072D  2F2F               	goto	u3470
  7277  072E                     u3471:
  7278  072E  2F56               	goto	l2600
  7279  072F                     u3470:
  7280  072F                     l2582:
  7281  072F  3000               	movlw	0
  7282  0730  00D9               	movwf	?___fladd+3
  7283  0731  3000               	movlw	0
  7284  0732  00D8               	movwf	?___fladd+2
  7285  0733  3000               	movlw	0
  7286  0734  00D7               	movwf	?___fladd+1
  7287  0735  3000               	movlw	0
  7288  0736  00D6               	movwf	?___fladd
  7289  0737  2FD4               	goto	l719
  7290  0738                     l2586:
  7291  0738  3001               	movlw	1
  7292  0739  00DE               	movwf	??___fladd
  7293  073A                     u3485:
  7294  073A  1003               	clrc
  7295  073B  0DD6               	rlf	___fladd@b,f
  7296  073C  0DD7               	rlf	___fladd@b+1,f
  7297  073D  0DD8               	rlf	___fladd@b+2,f
  7298  073E  0DD9               	rlf	___fladd@b+3,f
  7299  073F  0BDE               	decfsz	??___fladd,f
  7300  0740  2F3A               	goto	u3485
  7301  0741                     l2588:
  7302  0741  1FE9               	btfss	___fladd@grs,7
  7303  0742  2F44               	goto	u3491
  7304  0743  2F45               	goto	u3490
  7305  0744                     u3491:
  7306  0744  2F46               	goto	l731
  7307  0745                     u3490:
  7308  0745                     l2590:
  7309  0745  1456               	bsf	___fladd@b,0
  7310  0746                     l731:
  7311  0746  1C69               	btfss	___fladd@grs,0
  7312  0747  2F49               	goto	u3501
  7313  0748  2F4A               	goto	u3500
  7314  0749                     u3501:
  7315  0749  2F4D               	goto	l2594
  7316  074A                     u3500:
  7317  074A                     l2592:
  7318  074A  1403               	setc
  7319  074B  0DE9               	rlf	___fladd@grs,f
  7320  074C  2F4F               	goto	l2596
  7321  074D                     l2594:
  7322  074D  1003               	clrc
  7323  074E  0DE9               	rlf	___fladd@grs,f
  7324  074F                     l2596:
  7325  074F  0868               	movf	___fladd@bexp,w
  7326  0750  1903               	btfsc	3,2
  7327  0751  2F53               	goto	u3511
  7328  0752  2F54               	goto	u3510
  7329  0753                     u3511:
  7330  0753  2F56               	goto	l2600
  7331  0754                     u3510:
  7332  0754                     l2598:
  7333  0754  3001               	movlw	1
  7334  0755  02E8               	subwf	___fladd@bexp,f
  7335  0756                     l2600:
  7336  0756  1FD8               	btfss	___fladd@b+2,7
  7337  0757  2F59               	goto	u3521
  7338  0758  2F5A               	goto	u3520
  7339  0759                     u3521:
  7340  0759  2F38               	goto	l2586
  7341  075A                     u3520:
  7342  075A                     l2602:
  7343  075A  01E7               	clrf	___fladd@aexp
  7344  075B                     l2604:
  7345  075B  1FE9               	btfss	___fladd@grs,7
  7346  075C  2F5E               	goto	u3531
  7347  075D  2F5F               	goto	u3530
  7348  075E                     u3531:
  7349  075E  2F6D               	goto	l2612
  7350  075F                     u3530:
  7351  075F                     l2606:
  7352  075F  0869               	movf	___fladd@grs,w
  7353  0760  397F               	andlw	127
  7354  0761  1903               	btfsc	3,2
  7355  0762  2F64               	goto	u3541
  7356  0763  2F65               	goto	u3540
  7357  0764                     u3541:
  7358  0764  2F68               	goto	l737
  7359  0765                     u3540:
  7360  0765                     l2608:
  7361  0765  01E7               	clrf	___fladd@aexp
  7362  0766  0AE7               	incf	___fladd@aexp,f
  7363  0767  2F6D               	goto	l2612
  7364  0768                     l737:
  7365  0768  1C56               	btfss	___fladd@b,0
  7366  0769  2F6B               	goto	u3551
  7367  076A  2F6C               	goto	u3550
  7368  076B                     u3551:
  7369  076B  2F6D               	goto	l2612
  7370  076C                     u3550:
  7371  076C  2F65               	goto	l2608
  7372  076D                     l2612:
  7373  076D  0867               	movf	___fladd@aexp,w
  7374  076E  1903               	btfsc	3,2
  7375  076F  2F71               	goto	u3561
  7376  0770  2F72               	goto	u3560
  7377  0771                     u3561:
  7378  0771  2FA6               	goto	l740
  7379  0772                     u3560:
  7380  0772                     l2614:
  7381  0772  3001               	movlw	1
  7382  0773  07D6               	addwf	___fladd@b,f
  7383  0774  3000               	movlw	0
  7384  0775  1803               	skipnc
  7385  0776  3001               	movlw	1
  7386  0777  07D7               	addwf	___fladd@b+1,f
  7387  0778  3000               	movlw	0
  7388  0779  1803               	skipnc
  7389  077A  3001               	movlw	1
  7390  077B  07D8               	addwf	___fladd@b+2,f
  7391  077C  3000               	movlw	0
  7392  077D  1803               	skipnc
  7393  077E  3001               	movlw	1
  7394  077F  07D9               	addwf	___fladd@b+3,f
  7395  0780                     l2616:
  7396  0780  1C59               	btfss	___fladd@b+3,0
  7397  0781  2F83               	goto	u3571
  7398  0782  2F84               	goto	u3570
  7399  0783                     u3571:
  7400  0783  2FA6               	goto	l740
  7401  0784                     u3570:
  7402  0784                     l2618:
  7403  0784  0856               	movf	___fladd@b,w
  7404  0785  00DE               	movwf	??___fladd
  7405  0786  0857               	movf	___fladd@b+1,w
  7406  0787  00DF               	movwf	??___fladd+1
  7407  0788  0858               	movf	___fladd@b+2,w
  7408  0789  00E0               	movwf	??___fladd+2
  7409  078A  0859               	movf	___fladd@b+3,w
  7410  078B  00E1               	movwf	??___fladd+3
  7411  078C  3001               	movlw	1
  7412  078D  00E2               	movwf	??___fladd+4
  7413  078E                     u3585:
  7414  078E  0D61               	rlf	??___fladd+3,w
  7415  078F  0CE1               	rrf	??___fladd+3,f
  7416  0790  0CE0               	rrf	??___fladd+2,f
  7417  0791  0CDF               	rrf	??___fladd+1,f
  7418  0792  0CDE               	rrf	??___fladd,f
  7419  0793                     u3580:
  7420  0793  0BE2               	decfsz	??___fladd+4,f
  7421  0794  2F8E               	goto	u3585
  7422  0795  0861               	movf	??___fladd+3,w
  7423  0796  00D9               	movwf	___fladd@b+3
  7424  0797  0860               	movf	??___fladd+2,w
  7425  0798  00D8               	movwf	___fladd@b+2
  7426  0799  085F               	movf	??___fladd+1,w
  7427  079A  00D7               	movwf	___fladd@b+1
  7428  079B  085E               	movf	??___fladd,w
  7429  079C  00D6               	movwf	___fladd@b
  7430  079D  0A68               	incf	___fladd@bexp,w
  7431  079E  1903               	btfsc	3,2
  7432  079F  2FA1               	goto	u3591
  7433  07A0  2FA2               	goto	u3590
  7434  07A1                     u3591:
  7435  07A1  2FA6               	goto	l740
  7436  07A2                     u3590:
  7437  07A2                     l2620:
  7438  07A2  3001               	movlw	1
  7439  07A3  00DE               	movwf	??___fladd
  7440  07A4  085E               	movf	??___fladd,w
  7441  07A5  07E8               	addwf	___fladd@bexp,f
  7442  07A6                     l740:
  7443  07A6  0A68               	incf	___fladd@bexp,w
  7444  07A7  1903               	btfsc	3,2
  7445  07A8  2FAA               	goto	u3601
  7446  07A9  2FAB               	goto	u3600
  7447  07AA                     u3601:
  7448  07AA  2FB0               	goto	l2624
  7449  07AB                     u3600:
  7450  07AB                     l2622:
  7451  07AB  0868               	movf	___fladd@bexp,w
  7452  07AC  1D03               	btfss	3,2
  7453  07AD  2FAF               	goto	u3611
  7454  07AE  2FB0               	goto	u3610
  7455  07AF                     u3611:
  7456  07AF  2FBE               	goto	l2630
  7457  07B0                     u3610:
  7458  07B0                     l2624:
  7459  07B0  3000               	movlw	0
  7460  07B1  00D9               	movwf	___fladd@b+3
  7461  07B2  3000               	movlw	0
  7462  07B3  00D8               	movwf	___fladd@b+2
  7463  07B4  3000               	movlw	0
  7464  07B5  00D7               	movwf	___fladd@b+1
  7465  07B6  3000               	movlw	0
  7466  07B7  00D6               	movwf	___fladd@b
  7467  07B8                     l2626:
  7468  07B8  0868               	movf	___fladd@bexp,w
  7469  07B9  1D03               	btfss	3,2
  7470  07BA  2FBC               	goto	u3621
  7471  07BB  2FBD               	goto	u3620
  7472  07BC                     u3621:
  7473  07BC  2FBE               	goto	l2630
  7474  07BD                     u3620:
  7475  07BD                     l2628:
  7476  07BD  01E6               	clrf	___fladd@signs
  7477  07BE                     l2630:
  7478  07BE  1C68               	btfss	___fladd@bexp,0
  7479  07BF  2FC1               	goto	u3631
  7480  07C0  2FC2               	goto	u3630
  7481  07C1                     u3631:
  7482  07C1  2FC4               	goto	l2634
  7483  07C2                     u3630:
  7484  07C2                     l2632:
  7485  07C2  17D8               	bsf	___fladd@b+2,7
  7486  07C3  2FC8               	goto	l748
  7487  07C4                     l2634:
  7488  07C4  307F               	movlw	127
  7489  07C5  00DE               	movwf	??___fladd
  7490  07C6  085E               	movf	??___fladd,w
  7491  07C7  05D8               	andwf	___fladd@b+2,f
  7492  07C8                     l748:
  7493  07C8  0868               	movf	___fladd@bexp,w
  7494  07C9  00DE               	movwf	??___fladd
  7495  07CA  1003               	clrc
  7496  07CB  0C5E               	rrf	??___fladd,w
  7497  07CC  00DF               	movwf	??___fladd+1
  7498  07CD  085F               	movf	??___fladd+1,w
  7499  07CE  00D9               	movwf	___fladd@b+3
  7500  07CF                     l2636:
  7501  07CF  1FE6               	btfss	___fladd@signs,7
  7502  07D0  2FD2               	goto	u3641
  7503  07D1  2FD3               	goto	u3640
  7504  07D2                     u3641:
  7505  07D2  2FD4               	goto	l749
  7506  07D3                     u3640:
  7507  07D3                     l2638:
  7508  07D3  17D9               	bsf	___fladd@b+3,7
  7509  07D4                     l749:
  7510  07D4                     l719:
  7511  07D4  0008               	return
  7512  07D5                     __end_of___fladd:
  7513                           
  7514                           	psect	text19
  7515  0800                     __ptext19:	
  7516 ;; *************** function ___flneg *****************
  7517 ;; Defined at:
  7518 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  f1              4    2[COMMON] unsigned char 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;		None
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  4    2[COMMON] unsigned char 
  7525 ;; Registers used:
  7526 ;;		wreg
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7532 ;;      Params:         4       0       0       0       0
  7533 ;;      Locals:         0       0       0       0       0
  7534 ;;      Temps:          0       0       0       0       0
  7535 ;;      Totals:         4       0       0       0       0
  7536 ;;Total ram usage:        4 bytes
  7537 ;; Hardware stack levels used:    1
  7538 ;; Hardware stack levels required when called:    1
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_sprintf
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           
  7547                           ;psect for function ___flneg
  7548  0800                     ___flneg:
  7549  0800                     l3032:	
  7550                           ;incstack = 0
  7551                           ; Regs used in ___flneg: [wreg]
  7552                           
  7553  0800  0875               	movf	___flneg@f1+3,w
  7554  0801  0474               	iorwf	___flneg@f1+2,w
  7555  0802  0473               	iorwf	___flneg@f1+1,w
  7556  0803  0472               	iorwf	___flneg@f1,w
  7557  0804  1903               	skipnz
  7558  0805  2807               	goto	u4791
  7559  0806  2808               	goto	u4790
  7560  0807                     u4791:
  7561  0807  280A               	goto	l3036
  7562  0808                     u4790:
  7563  0808                     l3034:
  7564  0808  3080               	movlw	128
  7565  0809  06F5               	xorwf	___flneg@f1+3,f
  7566  080A                     l3036:
  7567  080A                     l578:
  7568  080A  0008               	return
  7569  080B                     __end_of___flneg:
  7570                           
  7571                           	psect	text20
  7572  1015                     __ptext20:	
  7573 ;; *************** function ___flge *****************
  7574 ;; Defined at:
  7575 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  ff1             4    2[COMMON] unsigned char 
  7578 ;;  ff2             4    6[COMMON] unsigned char 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;		None
  7581 ;; Return value:  Size  Location     Type
  7582 ;;		None               void
  7583 ;; Registers used:
  7584 ;;		wreg, status,2, status,0
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7590 ;;      Params:         8       0       0       0       0
  7591 ;;      Locals:         0       0       0       0       0
  7592 ;;      Temps:          0       4       0       0       0
  7593 ;;      Totals:         8       4       0       0       0
  7594 ;;Total ram usage:       12 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; Hardware stack levels required when called:    1
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_sprintf
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604                           
  7605                           ;psect for function ___flge
  7606  1015                     ___flge:
  7607  1015                     l3012:	
  7608                           ;incstack = 0
  7609                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7610                           
  7611  1015  3000               	movlw	0
  7612  1016  0572               	andwf	___flge@ff1,w
  7613  1017  1283               	bcf	3,5	;RP0=0, select bank0
  7614  1018  1303               	bcf	3,6	;RP1=0, select bank0
  7615  1019  00A0               	movwf	??___flge
  7616  101A  3000               	movlw	0
  7617  101B  0573               	andwf	___flge@ff1+1,w
  7618  101C  00A1               	movwf	??___flge+1
  7619  101D  3080               	movlw	128
  7620  101E  0574               	andwf	___flge@ff1+2,w
  7621  101F  00A2               	movwf	??___flge+2
  7622  1020  307F               	movlw	127
  7623  1021  0575               	andwf	___flge@ff1+3,w
  7624  1022  00A3               	movwf	??___flge+3
  7625  1023  0823               	movf	??___flge+3,w
  7626  1024  0422               	iorwf	??___flge+2,w
  7627  1025  0421               	iorwf	??___flge+1,w
  7628  1026  0420               	iorwf	??___flge,w
  7629  1027  1D03               	skipz
  7630  1028  282A               	goto	u4721
  7631  1029  282B               	goto	u4720
  7632  102A                     u4721:
  7633  102A  2833               	goto	l570
  7634  102B                     u4720:
  7635  102B                     l3014:
  7636  102B  3000               	movlw	0
  7637  102C  00F5               	movwf	___flge@ff1+3
  7638  102D  3000               	movlw	0
  7639  102E  00F4               	movwf	___flge@ff1+2
  7640  102F  3000               	movlw	0
  7641  1030  00F3               	movwf	___flge@ff1+1
  7642  1031  3000               	movlw	0
  7643  1032  00F2               	movwf	___flge@ff1
  7644  1033                     l570:
  7645  1033  3000               	movlw	0
  7646  1034  0576               	andwf	___flge@ff2,w
  7647  1035  00A0               	movwf	??___flge
  7648  1036  3000               	movlw	0
  7649  1037  0577               	andwf	___flge@ff2+1,w
  7650  1038  00A1               	movwf	??___flge+1
  7651  1039  3080               	movlw	128
  7652  103A  0578               	andwf	___flge@ff2+2,w
  7653  103B  00A2               	movwf	??___flge+2
  7654  103C  307F               	movlw	127
  7655  103D  0579               	andwf	___flge@ff2+3,w
  7656  103E  00A3               	movwf	??___flge+3
  7657  103F  0823               	movf	??___flge+3,w
  7658  1040  0422               	iorwf	??___flge+2,w
  7659  1041  0421               	iorwf	??___flge+1,w
  7660  1042  0420               	iorwf	??___flge,w
  7661  1043  1D03               	skipz
  7662  1044  2846               	goto	u4731
  7663  1045  2847               	goto	u4730
  7664  1046                     u4731:
  7665  1046  284F               	goto	l3018
  7666  1047                     u4730:
  7667  1047                     l3016:
  7668  1047  3000               	movlw	0
  7669  1048  00F9               	movwf	___flge@ff2+3
  7670  1049  3000               	movlw	0
  7671  104A  00F8               	movwf	___flge@ff2+2
  7672  104B  3000               	movlw	0
  7673  104C  00F7               	movwf	___flge@ff2+1
  7674  104D  3000               	movlw	0
  7675  104E  00F6               	movwf	___flge@ff2
  7676  104F                     l3018:
  7677  104F  1FF5               	btfss	___flge@ff1+3,7
  7678  1050  2852               	goto	u4741
  7679  1051  2853               	goto	u4740
  7680  1052                     u4741:
  7681  1052  2877               	goto	l3022
  7682  1053                     u4740:
  7683  1053                     l3020:
  7684  1053  3000               	movlw	0
  7685  1054  00A0               	movwf	??___flge
  7686  1055  3000               	movlw	0
  7687  1056  00A1               	movwf	??___flge+1
  7688  1057  3000               	movlw	0
  7689  1058  00A2               	movwf	??___flge+2
  7690  1059  3080               	movlw	128
  7691  105A  00A3               	movwf	??___flge+3
  7692  105B  0872               	movf	___flge@ff1,w
  7693  105C  02A0               	subwf	??___flge,f
  7694  105D  0873               	movf	___flge@ff1+1,w
  7695  105E  1C03               	skipc
  7696  105F  0F73               	incfsz	___flge@ff1+1,w
  7697  1060  2862               	goto	u4751
  7698  1061  2863               	goto	u4752
  7699  1062                     u4751:
  7700  1062  02A1               	subwf	??___flge+1,f
  7701  1063                     u4752:
  7702  1063  0874               	movf	___flge@ff1+2,w
  7703  1064  1C03               	skipc
  7704  1065  0F74               	incfsz	___flge@ff1+2,w
  7705  1066  2868               	goto	u4753
  7706  1067  2869               	goto	u4754
  7707  1068                     u4753:
  7708  1068  02A2               	subwf	??___flge+2,f
  7709  1069                     u4754:
  7710  1069  0875               	movf	___flge@ff1+3,w
  7711  106A  1C03               	skipc
  7712  106B  0F75               	incfsz	___flge@ff1+3,w
  7713  106C  286E               	goto	u4755
  7714  106D  286F               	goto	u4756
  7715  106E                     u4755:
  7716  106E  02A3               	subwf	??___flge+3,f
  7717  106F                     u4756:
  7718  106F  0823               	movf	??___flge+3,w
  7719  1070  00F5               	movwf	___flge@ff1+3
  7720  1071  0822               	movf	??___flge+2,w
  7721  1072  00F4               	movwf	___flge@ff1+2
  7722  1073  0821               	movf	??___flge+1,w
  7723  1074  00F3               	movwf	___flge@ff1+1
  7724  1075  0820               	movf	??___flge,w
  7725  1076  00F2               	movwf	___flge@ff1
  7726  1077                     l3022:
  7727  1077  1FF9               	btfss	___flge@ff2+3,7
  7728  1078  287A               	goto	u4761
  7729  1079  287B               	goto	u4760
  7730  107A                     u4761:
  7731  107A  289F               	goto	l573
  7732  107B                     u4760:
  7733  107B                     l3024:
  7734  107B  3000               	movlw	0
  7735  107C  00A0               	movwf	??___flge
  7736  107D  3000               	movlw	0
  7737  107E  00A1               	movwf	??___flge+1
  7738  107F  3000               	movlw	0
  7739  1080  00A2               	movwf	??___flge+2
  7740  1081  3080               	movlw	128
  7741  1082  00A3               	movwf	??___flge+3
  7742  1083  0876               	movf	___flge@ff2,w
  7743  1084  02A0               	subwf	??___flge,f
  7744  1085  0877               	movf	___flge@ff2+1,w
  7745  1086  1C03               	skipc
  7746  1087  0F77               	incfsz	___flge@ff2+1,w
  7747  1088  288A               	goto	u4771
  7748  1089  288B               	goto	u4772
  7749  108A                     u4771:
  7750  108A  02A1               	subwf	??___flge+1,f
  7751  108B                     u4772:
  7752  108B  0878               	movf	___flge@ff2+2,w
  7753  108C  1C03               	skipc
  7754  108D  0F78               	incfsz	___flge@ff2+2,w
  7755  108E  2890               	goto	u4773
  7756  108F  2891               	goto	u4774
  7757  1090                     u4773:
  7758  1090  02A2               	subwf	??___flge+2,f
  7759  1091                     u4774:
  7760  1091  0879               	movf	___flge@ff2+3,w
  7761  1092  1C03               	skipc
  7762  1093  0F79               	incfsz	___flge@ff2+3,w
  7763  1094  2896               	goto	u4775
  7764  1095  2897               	goto	u4776
  7765  1096                     u4775:
  7766  1096  02A3               	subwf	??___flge+3,f
  7767  1097                     u4776:
  7768  1097  0823               	movf	??___flge+3,w
  7769  1098  00F9               	movwf	___flge@ff2+3
  7770  1099  0822               	movf	??___flge+2,w
  7771  109A  00F8               	movwf	___flge@ff2+2
  7772  109B  0821               	movf	??___flge+1,w
  7773  109C  00F7               	movwf	___flge@ff2+1
  7774  109D  0820               	movf	??___flge,w
  7775  109E  00F6               	movwf	___flge@ff2
  7776  109F                     l573:
  7777  109F  3080               	movlw	128
  7778  10A0  06F5               	xorwf	___flge@ff1+3,f
  7779  10A1  3080               	movlw	128
  7780  10A2  06F9               	xorwf	___flge@ff2+3,f
  7781  10A3  0879               	movf	___flge@ff2+3,w
  7782  10A4  0275               	subwf	___flge@ff1+3,w
  7783  10A5  1D03               	skipz
  7784  10A6  28B1               	goto	u4785
  7785  10A7  0878               	movf	___flge@ff2+2,w
  7786  10A8  0274               	subwf	___flge@ff1+2,w
  7787  10A9  1D03               	skipz
  7788  10AA  28B1               	goto	u4785
  7789  10AB  0877               	movf	___flge@ff2+1,w
  7790  10AC  0273               	subwf	___flge@ff1+1,w
  7791  10AD  1D03               	skipz
  7792  10AE  28B1               	goto	u4785
  7793  10AF  0876               	movf	___flge@ff2,w
  7794  10B0  0272               	subwf	___flge@ff1,w
  7795  10B1                     u4785:
  7796  10B1  1803               	skipnc
  7797  10B2  28B4               	goto	u4781
  7798  10B3  28B5               	goto	u4780
  7799  10B4                     u4781:
  7800  10B4  28B7               	goto	l3028
  7801  10B5                     u4780:
  7802  10B5                     l3026:
  7803  10B5  1003               	clrc
  7804  10B6  28B8               	goto	l574
  7805  10B7                     l3028:
  7806  10B7  1403               	setc
  7807  10B8                     l574:
  7808  10B8  0008               	return
  7809  10B9                     __end_of___flge:
  7810                           
  7811                           	psect	text21
  7812  1DBD                     __ptext21:	
  7813 ;; *************** function ___fleq *****************
  7814 ;; Defined at:
  7815 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  ff1             4    2[COMMON] unsigned char 
  7818 ;;  ff2             4    6[COMMON] unsigned char 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;		None               void
  7823 ;; Registers used:
  7824 ;;		wreg, status,2, status,0
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7830 ;;      Params:         8       0       0       0       0
  7831 ;;      Locals:         0       0       0       0       0
  7832 ;;      Temps:          0       4       0       0       0
  7833 ;;      Totals:         8       4       0       0       0
  7834 ;;Total ram usage:       12 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    1
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_sprintf
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           
  7845                           ;psect for function ___fleq
  7846  1DBD                     ___fleq:
  7847  1DBD                     l3000:	
  7848                           ;incstack = 0
  7849                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7850                           
  7851  1DBD  3000               	movlw	0
  7852  1DBE  0572               	andwf	___fleq@ff1,w
  7853  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  7854  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  7855  1DC1  00A0               	movwf	??___fleq
  7856  1DC2  3000               	movlw	0
  7857  1DC3  0573               	andwf	___fleq@ff1+1,w
  7858  1DC4  00A1               	movwf	??___fleq+1
  7859  1DC5  3080               	movlw	128
  7860  1DC6  0574               	andwf	___fleq@ff1+2,w
  7861  1DC7  00A2               	movwf	??___fleq+2
  7862  1DC8  307F               	movlw	127
  7863  1DC9  0575               	andwf	___fleq@ff1+3,w
  7864  1DCA  00A3               	movwf	??___fleq+3
  7865  1DCB  0823               	movf	??___fleq+3,w
  7866  1DCC  0422               	iorwf	??___fleq+2,w
  7867  1DCD  0421               	iorwf	??___fleq+1,w
  7868  1DCE  0420               	iorwf	??___fleq,w
  7869  1DCF  1D03               	skipz
  7870  1DD0  2DD2               	goto	u4691
  7871  1DD1  2DD3               	goto	u4690
  7872  1DD2                     u4691:
  7873  1DD2  2DDB               	goto	l565
  7874  1DD3                     u4690:
  7875  1DD3                     l3002:
  7876  1DD3  3000               	movlw	0
  7877  1DD4  00F5               	movwf	___fleq@ff1+3
  7878  1DD5  3000               	movlw	0
  7879  1DD6  00F4               	movwf	___fleq@ff1+2
  7880  1DD7  3000               	movlw	0
  7881  1DD8  00F3               	movwf	___fleq@ff1+1
  7882  1DD9  3000               	movlw	0
  7883  1DDA  00F2               	movwf	___fleq@ff1
  7884  1DDB                     l565:
  7885  1DDB  3000               	movlw	0
  7886  1DDC  0576               	andwf	___fleq@ff2,w
  7887  1DDD  00A0               	movwf	??___fleq
  7888  1DDE  3000               	movlw	0
  7889  1DDF  0577               	andwf	___fleq@ff2+1,w
  7890  1DE0  00A1               	movwf	??___fleq+1
  7891  1DE1  3080               	movlw	128
  7892  1DE2  0578               	andwf	___fleq@ff2+2,w
  7893  1DE3  00A2               	movwf	??___fleq+2
  7894  1DE4  307F               	movlw	127
  7895  1DE5  0579               	andwf	___fleq@ff2+3,w
  7896  1DE6  00A3               	movwf	??___fleq+3
  7897  1DE7  0823               	movf	??___fleq+3,w
  7898  1DE8  0422               	iorwf	??___fleq+2,w
  7899  1DE9  0421               	iorwf	??___fleq+1,w
  7900  1DEA  0420               	iorwf	??___fleq,w
  7901  1DEB  1D03               	skipz
  7902  1DEC  2DEE               	goto	u4701
  7903  1DED  2DEF               	goto	u4700
  7904  1DEE                     u4701:
  7905  1DEE  2DF7               	goto	l566
  7906  1DEF                     u4700:
  7907  1DEF                     l3004:
  7908  1DEF  3000               	movlw	0
  7909  1DF0  00F9               	movwf	___fleq@ff2+3
  7910  1DF1  3000               	movlw	0
  7911  1DF2  00F8               	movwf	___fleq@ff2+2
  7912  1DF3  3000               	movlw	0
  7913  1DF4  00F7               	movwf	___fleq@ff2+1
  7914  1DF5  3000               	movlw	0
  7915  1DF6  00F6               	movwf	___fleq@ff2
  7916  1DF7                     l566:
  7917  1DF7  0879               	movf	___fleq@ff2+3,w
  7918  1DF8  0675               	xorwf	___fleq@ff1+3,w
  7919  1DF9  1D03               	skipz
  7920  1DFA  2E05               	goto	u4715
  7921  1DFB  0878               	movf	___fleq@ff2+2,w
  7922  1DFC  0674               	xorwf	___fleq@ff1+2,w
  7923  1DFD  1D03               	skipz
  7924  1DFE  2E05               	goto	u4715
  7925  1DFF  0877               	movf	___fleq@ff2+1,w
  7926  1E00  0673               	xorwf	___fleq@ff1+1,w
  7927  1E01  1D03               	skipz
  7928  1E02  2E05               	goto	u4715
  7929  1E03  0876               	movf	___fleq@ff2,w
  7930  1E04  0672               	xorwf	___fleq@ff1,w
  7931  1E05                     u4715:
  7932  1E05  1903               	skipnz
  7933  1E06  2E08               	goto	u4711
  7934  1E07  2E09               	goto	u4710
  7935  1E08                     u4711:
  7936  1E08  2E0B               	goto	l3008
  7937  1E09                     u4710:
  7938  1E09                     l3006:
  7939  1E09  1003               	clrc
  7940  1E0A  2E0C               	goto	l567
  7941  1E0B                     l3008:
  7942  1E0B  1403               	setc
  7943  1E0C                     l567:
  7944  1E0C  0008               	return
  7945  1E0D                     __end_of___fleq:
  7946                           
  7947                           	psect	text22
  7948  1CA5                     __ptext22:	
  7949 ;; *************** function _send_crct *****************
  7950 ;; Defined at:
  7951 ;;		line 182 in file "mainp1.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;  st              1    wreg     PTR unsigned char 
  7954 ;;		 -> f1(15), 
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;  st              1    6[COMMON] PTR unsigned char 
  7957 ;;		 -> f1(15), 
  7958 ;;  i               2    4[COMMON] int 
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      void 
  7961 ;; Registers used:
  7962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7968 ;;      Params:         0       0       0       0       0
  7969 ;;      Locals:         3       0       0       0       0
  7970 ;;      Temps:          1       0       0       0       0
  7971 ;;      Totals:         4       0       0       0       0
  7972 ;;Total ram usage:        4 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; Hardware stack levels required when called:    2
  7975 ;; This function calls:
  7976 ;;		_send_char
  7977 ;; This function is called by:
  7978 ;;		_main
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           
  7983                           ;psect for function _send_crct
  7984  1CA5                     _send_crct:
  7985                           
  7986                           ;incstack = 0
  7987                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7988                           ;send_crct@st stored from wreg
  7989  1CA5  00F6               	movwf	send_crct@st
  7990  1CA6                     l3512:
  7991                           
  7992                           ;mainp1.c: 183:     int i = 0;
  7993  1CA6  01F4               	clrf	send_crct@i
  7994  1CA7  01F5               	clrf	send_crct@i+1
  7995                           
  7996                           ;mainp1.c: 184:     while (st[i] != 0){
  7997  1CA8  2CBA               	goto	l3518
  7998  1CA9                     l3514:
  7999                           
  8000                           ;mainp1.c: 185:         send_char(st[i]);
  8001  1CA9  0874               	movf	send_crct@i,w
  8002  1CAA  0776               	addwf	send_crct@st,w
  8003  1CAB  00F3               	movwf	??_send_crct
  8004  1CAC  0873               	movf	??_send_crct,w
  8005  1CAD  0084               	movwf	4
  8006  1CAE  0800               	movf	0,w
  8007  1CAF  160A  158A  246A  160A  158A  	fcall	_send_char
  8008  1CB4                     l3516:
  8009                           
  8010                           ;mainp1.c: 186:         i++;
  8011  1CB4  3001               	movlw	1
  8012  1CB5  07F4               	addwf	send_crct@i,f
  8013  1CB6  1803               	skipnc
  8014  1CB7  0AF5               	incf	send_crct@i+1,f
  8015  1CB8  3000               	movlw	0
  8016  1CB9  07F5               	addwf	send_crct@i+1,f
  8017  1CBA                     l3518:
  8018                           
  8019                           ;mainp1.c: 184:     while (st[i] != 0){
  8020  1CBA  0874               	movf	send_crct@i,w
  8021  1CBB  0776               	addwf	send_crct@st,w
  8022  1CBC  00F3               	movwf	??_send_crct
  8023  1CBD  0873               	movf	??_send_crct,w
  8024  1CBE  0084               	movwf	4
  8025  1CBF  1383               	bcf	3,7	;select IRP bank0
  8026  1CC0  0800               	movf	0,w
  8027  1CC1  1D03               	btfss	3,2
  8028  1CC2  2CC4               	goto	u5651
  8029  1CC3  2CC5               	goto	u5650
  8030  1CC4                     u5651:
  8031  1CC4  2CA9               	goto	l3514
  8032  1CC5                     u5650:
  8033  1CC5                     l101:
  8034  1CC5  0008               	return
  8035  1CC6                     __end_of_send_crct:
  8036                           
  8037                           	psect	text23
  8038  1C6A                     __ptext23:	
  8039 ;; *************** function _send_char *****************
  8040 ;; Defined at:
  8041 ;;		line 189 in file "mainp1.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  dato            1    wreg     unsigned char 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  dato            1    2[COMMON] unsigned char 
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      void 
  8048 ;; Registers used:
  8049 ;;		wreg
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8055 ;;      Params:         0       0       0       0       0
  8056 ;;      Locals:         1       0       0       0       0
  8057 ;;      Temps:          0       0       0       0       0
  8058 ;;      Totals:         1       0       0       0       0
  8059 ;;Total ram usage:        1 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:    1
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_send_crct
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           
  8070                           ;psect for function _send_char
  8071  1C6A                     _send_char:
  8072                           
  8073                           ;incstack = 0
  8074                           ; Regs used in _send_char: [wreg]
  8075                           ;send_char@dato stored from wreg
  8076  1C6A  00F2               	movwf	send_char@dato
  8077  1C6B                     l2780:
  8078  1C6B                     l104:	
  8079                           ;mainp1.c: 190:     while(!TXIF);
  8080                           
  8081  1C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8082  1C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8083  1C6D  1E0C               	btfss	12,4	;volatile
  8084  1C6E  2C70               	goto	u4021
  8085  1C6F  2C71               	goto	u4020
  8086  1C70                     u4021:
  8087  1C70  2C6B               	goto	l104
  8088  1C71                     u4020:
  8089  1C71                     l2782:
  8090                           
  8091                           ;mainp1.c: 191:     TXREG = dato;
  8092  1C71  0872               	movf	send_char@dato,w
  8093  1C72  0099               	movwf	25	;volatile
  8094  1C73                     l107:
  8095  1C73  0008               	return
  8096  1C74                     __end_of_send_char:
  8097                           
  8098                           	psect	text24
  8099  1CC6                     __ptext24:	
  8100 ;; *************** function _conv *****************
  8101 ;; Defined at:
  8102 ;;		line 193 in file "mainp1.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;  aa              2    6[BANK0 ] int 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;  result          4   10[BANK0 ] float 
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  4    6[BANK0 ] float 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2, status,0, pclath, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8116 ;;      Params:         0       4       0       0       0
  8117 ;;      Locals:         0       4       0       0       0
  8118 ;;      Temps:          0       0       0       0       0
  8119 ;;      Totals:         0       8       0       0       0
  8120 ;;Total ram usage:        8 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    2
  8123 ;; This function calls:
  8124 ;;		___xxtofl
  8125 ;; This function is called by:
  8126 ;;		_main
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           
  8131                           ;psect for function _conv
  8132  1CC6                     _conv:
  8133  1CC6                     l3200:	
  8134                           ;incstack = 0
  8135                           ; Regs used in _conv: [wreg+status,2+status,0+pclath+cstack]
  8136                           
  8137                           
  8138                           ;mainp1.c: 194:     float result;;mainp1.c: 195:     result = aa;
  8139  1CC6  1283               	bcf	3,5	;RP0=0, select bank0
  8140  1CC7  1303               	bcf	3,6	;RP1=0, select bank0
  8141  1CC8  0826               	movf	conv@aa,w
  8142  1CC9  00F2               	movwf	___xxtofl@val
  8143  1CCA  0827               	movf	conv@aa+1,w
  8144  1CCB  00F3               	movwf	___xxtofl@val+1
  8145  1CCC  3000               	movlw	0
  8146  1CCD  1BF3               	btfsc	___xxtofl@val+1,7
  8147  1CCE  30FF               	movlw	255
  8148  1CCF  00F4               	movwf	___xxtofl@val+2
  8149  1CD0  00F5               	movwf	___xxtofl@val+3
  8150  1CD1  3001               	movlw	1
  8151  1CD2  160A  118A  20B9  160A  158A  	fcall	___xxtofl
  8152  1CD7  0875               	movf	?___xxtofl+3,w
  8153  1CD8  1283               	bcf	3,5	;RP0=0, select bank0
  8154  1CD9  1303               	bcf	3,6	;RP1=0, select bank0
  8155  1CDA  00AD               	movwf	conv@result+3
  8156  1CDB  0874               	movf	?___xxtofl+2,w
  8157  1CDC  00AC               	movwf	conv@result+2
  8158  1CDD  0873               	movf	?___xxtofl+1,w
  8159  1CDE  00AB               	movwf	conv@result+1
  8160  1CDF  0872               	movf	?___xxtofl,w
  8161  1CE0  00AA               	movwf	conv@result
  8162  1CE1                     l3202:
  8163                           
  8164                           ;mainp1.c: 196:     return result;
  8165  1CE1  082D               	movf	conv@result+3,w
  8166  1CE2  00A9               	movwf	?_conv+3
  8167  1CE3  082C               	movf	conv@result+2,w
  8168  1CE4  00A8               	movwf	?_conv+2
  8169  1CE5  082B               	movf	conv@result+1,w
  8170  1CE6  00A7               	movwf	?_conv+1
  8171  1CE7  082A               	movf	conv@result,w
  8172  1CE8  00A6               	movwf	?_conv
  8173  1CE9                     l110:
  8174  1CE9  0008               	return
  8175  1CEA                     __end_of_conv:
  8176                           
  8177                           	psect	text25
  8178  10B9                     __ptext25:	
  8179 ;; *************** function ___xxtofl *****************
  8180 ;; Defined at:
  8181 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;  sign            1    wreg     unsigned char 
  8184 ;;  val             4    2[COMMON] long 
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;  sign            1    0[BANK0 ] unsigned char 
  8187 ;;  arg             4    2[BANK0 ] unsigned long 
  8188 ;;  exp             1    1[BANK0 ] unsigned char 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  4    2[COMMON] unsigned char 
  8191 ;; Registers used:
  8192 ;;		wreg, status,2, status,0
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8198 ;;      Params:         4       0       0       0       0
  8199 ;;      Locals:         0       6       0       0       0
  8200 ;;      Temps:          4       0       0       0       0
  8201 ;;      Totals:         8       6       0       0       0
  8202 ;;Total ram usage:       14 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:    1
  8205 ;; This function calls:
  8206 ;;		Nothing
  8207 ;; This function is called by:
  8208 ;;		_conv
  8209 ;;		_sprintf
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           
  8214                           ;psect for function ___xxtofl
  8215  10B9                     ___xxtofl:
  8216                           
  8217                           ;incstack = 0
  8218                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8219                           ;___xxtofl@sign stored from wreg
  8220  10B9  1283               	bcf	3,5	;RP0=0, select bank0
  8221  10BA  1303               	bcf	3,6	;RP1=0, select bank0
  8222  10BB  00A0               	movwf	___xxtofl@sign
  8223  10BC                     l3102:
  8224  10BC  0820               	movf	___xxtofl@sign,w
  8225  10BD  1903               	btfsc	3,2
  8226  10BE  28C0               	goto	u4961
  8227  10BF  28C1               	goto	u4960
  8228  10C0                     u4961:
  8229  10C0  28D5               	goto	l3108
  8230  10C1                     u4960:
  8231  10C1                     l3104:
  8232  10C1  1FF5               	btfss	___xxtofl@val+3,7
  8233  10C2  28C4               	goto	u4971
  8234  10C3  28C5               	goto	u4970
  8235  10C4                     u4971:
  8236  10C4  28D5               	goto	l3108
  8237  10C5                     u4970:
  8238  10C5                     l3106:
  8239  10C5  0972               	comf	___xxtofl@val,w
  8240  10C6  00A2               	movwf	___xxtofl@arg
  8241  10C7  0973               	comf	___xxtofl@val+1,w
  8242  10C8  00A3               	movwf	___xxtofl@arg+1
  8243  10C9  0974               	comf	___xxtofl@val+2,w
  8244  10CA  00A4               	movwf	___xxtofl@arg+2
  8245  10CB  0975               	comf	___xxtofl@val+3,w
  8246  10CC  00A5               	movwf	___xxtofl@arg+3
  8247  10CD  0AA2               	incf	___xxtofl@arg,f
  8248  10CE  1903               	skipnz
  8249  10CF  0AA3               	incf	___xxtofl@arg+1,f
  8250  10D0  1903               	skipnz
  8251  10D1  0AA4               	incf	___xxtofl@arg+2,f
  8252  10D2  1903               	skipnz
  8253  10D3  0AA5               	incf	___xxtofl@arg+3,f
  8254  10D4  28DD               	goto	l846
  8255  10D5                     l3108:
  8256  10D5  0875               	movf	___xxtofl@val+3,w
  8257  10D6  00A5               	movwf	___xxtofl@arg+3
  8258  10D7  0874               	movf	___xxtofl@val+2,w
  8259  10D8  00A4               	movwf	___xxtofl@arg+2
  8260  10D9  0873               	movf	___xxtofl@val+1,w
  8261  10DA  00A3               	movwf	___xxtofl@arg+1
  8262  10DB  0872               	movf	___xxtofl@val,w
  8263  10DC  00A2               	movwf	___xxtofl@arg
  8264  10DD                     l846:
  8265  10DD  0875               	movf	___xxtofl@val+3,w
  8266  10DE  0474               	iorwf	___xxtofl@val+2,w
  8267  10DF  0473               	iorwf	___xxtofl@val+1,w
  8268  10E0  0472               	iorwf	___xxtofl@val,w
  8269  10E1  1D03               	skipz
  8270  10E2  28E4               	goto	u4981
  8271  10E3  28E5               	goto	u4980
  8272  10E4                     u4981:
  8273  10E4  28EE               	goto	l3114
  8274  10E5                     u4980:
  8275  10E5                     l3110:
  8276  10E5  3000               	movlw	0
  8277  10E6  00F5               	movwf	?___xxtofl+3
  8278  10E7  3000               	movlw	0
  8279  10E8  00F4               	movwf	?___xxtofl+2
  8280  10E9  3000               	movlw	0
  8281  10EA  00F3               	movwf	?___xxtofl+1
  8282  10EB  3000               	movlw	0
  8283  10EC  00F2               	movwf	?___xxtofl
  8284  10ED  2974               	goto	l848
  8285  10EE                     l3114:
  8286  10EE  3096               	movlw	150
  8287  10EF  00F6               	movwf	??___xxtofl
  8288  10F0  0876               	movf	??___xxtofl,w
  8289  10F1  00A1               	movwf	___xxtofl@exp
  8290  10F2  2900               	goto	l3118
  8291  10F3                     l3116:
  8292  10F3  3001               	movlw	1
  8293  10F4  00F6               	movwf	??___xxtofl
  8294  10F5  0876               	movf	??___xxtofl,w
  8295  10F6  07A1               	addwf	___xxtofl@exp,f
  8296  10F7  3001               	movlw	1
  8297  10F8                     u4995:
  8298  10F8  1003               	clrc
  8299  10F9  0CA5               	rrf	___xxtofl@arg+3,f
  8300  10FA  0CA4               	rrf	___xxtofl@arg+2,f
  8301  10FB  0CA3               	rrf	___xxtofl@arg+1,f
  8302  10FC  0CA2               	rrf	___xxtofl@arg,f
  8303  10FD  3EFF               	addlw	-1
  8304  10FE  1D03               	skipz
  8305  10FF  28F8               	goto	u4995
  8306  1100                     l3118:
  8307  1100  30FE               	movlw	254
  8308  1101  0525               	andwf	___xxtofl@arg+3,w
  8309  1102  1D03               	btfss	3,2
  8310  1103  2905               	goto	u5001
  8311  1104  2906               	goto	u5000
  8312  1105                     u5001:
  8313  1105  28F3               	goto	l3116
  8314  1106                     u5000:
  8315  1106  2922               	goto	l852
  8316  1107                     l3120:
  8317  1107  3001               	movlw	1
  8318  1108  00F6               	movwf	??___xxtofl
  8319  1109  0876               	movf	??___xxtofl,w
  8320  110A  07A1               	addwf	___xxtofl@exp,f
  8321  110B                     l3122:
  8322  110B  3001               	movlw	1
  8323  110C  07A2               	addwf	___xxtofl@arg,f
  8324  110D  3000               	movlw	0
  8325  110E  1803               	skipnc
  8326  110F  3001               	movlw	1
  8327  1110  07A3               	addwf	___xxtofl@arg+1,f
  8328  1111  3000               	movlw	0
  8329  1112  1803               	skipnc
  8330  1113  3001               	movlw	1
  8331  1114  07A4               	addwf	___xxtofl@arg+2,f
  8332  1115  3000               	movlw	0
  8333  1116  1803               	skipnc
  8334  1117  3001               	movlw	1
  8335  1118  07A5               	addwf	___xxtofl@arg+3,f
  8336  1119                     l3124:
  8337  1119  3001               	movlw	1
  8338  111A                     u5015:
  8339  111A  1003               	clrc
  8340  111B  0CA5               	rrf	___xxtofl@arg+3,f
  8341  111C  0CA4               	rrf	___xxtofl@arg+2,f
  8342  111D  0CA3               	rrf	___xxtofl@arg+1,f
  8343  111E  0CA2               	rrf	___xxtofl@arg,f
  8344  111F  3EFF               	addlw	-1
  8345  1120  1D03               	skipz
  8346  1121  291A               	goto	u5015
  8347  1122                     l852:
  8348  1122  30FF               	movlw	255
  8349  1123  0525               	andwf	___xxtofl@arg+3,w
  8350  1124  1D03               	btfss	3,2
  8351  1125  2927               	goto	u5021
  8352  1126  2928               	goto	u5020
  8353  1127                     u5021:
  8354  1127  2907               	goto	l3120
  8355  1128                     u5020:
  8356  1128  2934               	goto	l3128
  8357  1129                     l3126:
  8358  1129  3001               	movlw	1
  8359  112A  02A1               	subwf	___xxtofl@exp,f
  8360  112B  3001               	movlw	1
  8361  112C  00F6               	movwf	??___xxtofl
  8362  112D                     u5035:
  8363  112D  1003               	clrc
  8364  112E  0DA2               	rlf	___xxtofl@arg,f
  8365  112F  0DA3               	rlf	___xxtofl@arg+1,f
  8366  1130  0DA4               	rlf	___xxtofl@arg+2,f
  8367  1131  0DA5               	rlf	___xxtofl@arg+3,f
  8368  1132  0BF6               	decfsz	??___xxtofl,f
  8369  1133  292D               	goto	u5035
  8370  1134                     l3128:
  8371  1134  1BA4               	btfsc	___xxtofl@arg+2,7
  8372  1135  2937               	goto	u5041
  8373  1136  2938               	goto	u5040
  8374  1137                     u5041:
  8375  1137  293E               	goto	l859
  8376  1138                     u5040:
  8377  1138                     l3130:
  8378  1138  3002               	movlw	2
  8379  1139  0221               	subwf	___xxtofl@exp,w
  8380  113A  1803               	skipnc
  8381  113B  293D               	goto	u5051
  8382  113C  293E               	goto	u5050
  8383  113D                     u5051:
  8384  113D  2929               	goto	l3126
  8385  113E                     u5050:
  8386  113E                     l859:
  8387  113E  1821               	btfsc	___xxtofl@exp,0
  8388  113F  2941               	goto	u5061
  8389  1140  2942               	goto	u5060
  8390  1141                     u5061:
  8391  1141  294A               	goto	l860
  8392  1142                     u5060:
  8393  1142                     l3132:
  8394  1142  30FF               	movlw	255
  8395  1143  05A2               	andwf	___xxtofl@arg,f
  8396  1144  30FF               	movlw	255
  8397  1145  05A3               	andwf	___xxtofl@arg+1,f
  8398  1146  307F               	movlw	127
  8399  1147  05A4               	andwf	___xxtofl@arg+2,f
  8400  1148  30FF               	movlw	255
  8401  1149  05A5               	andwf	___xxtofl@arg+3,f
  8402  114A                     l860:
  8403  114A  1003               	clrc
  8404  114B  0CA1               	rrf	___xxtofl@exp,f
  8405  114C                     l3134:
  8406  114C  0821               	movf	___xxtofl@exp,w
  8407  114D  00F6               	movwf	??___xxtofl
  8408  114E  01F7               	clrf	??___xxtofl+1
  8409  114F  01F8               	clrf	??___xxtofl+2
  8410  1150  01F9               	clrf	??___xxtofl+3
  8411  1151  3018               	movlw	24
  8412  1152                     u5075:
  8413  1152  1003               	clrc
  8414  1153  0DF6               	rlf	??___xxtofl,f
  8415  1154  0DF7               	rlf	??___xxtofl+1,f
  8416  1155  0DF8               	rlf	??___xxtofl+2,f
  8417  1156  0DF9               	rlf	??___xxtofl+3,f
  8418  1157                     u5070:
  8419  1157  3EFF               	addlw	-1
  8420  1158  1D03               	skipz
  8421  1159  2952               	goto	u5075
  8422  115A  0876               	movf	??___xxtofl,w
  8423  115B  04A2               	iorwf	___xxtofl@arg,f
  8424  115C  0877               	movf	??___xxtofl+1,w
  8425  115D  04A3               	iorwf	___xxtofl@arg+1,f
  8426  115E  0878               	movf	??___xxtofl+2,w
  8427  115F  04A4               	iorwf	___xxtofl@arg+2,f
  8428  1160  0879               	movf	??___xxtofl+3,w
  8429  1161  04A5               	iorwf	___xxtofl@arg+3,f
  8430  1162                     l3136:
  8431  1162  0820               	movf	___xxtofl@sign,w
  8432  1163  1903               	btfsc	3,2
  8433  1164  2966               	goto	u5081
  8434  1165  2967               	goto	u5080
  8435  1166                     u5081:
  8436  1166  296C               	goto	l3142
  8437  1167                     u5080:
  8438  1167                     l3138:
  8439  1167  1FF5               	btfss	___xxtofl@val+3,7
  8440  1168  296A               	goto	u5091
  8441  1169  296B               	goto	u5090
  8442  116A                     u5091:
  8443  116A  296C               	goto	l3142
  8444  116B                     u5090:
  8445  116B                     l3140:
  8446  116B  17A5               	bsf	___xxtofl@arg+3,7
  8447  116C                     l3142:
  8448  116C  0825               	movf	___xxtofl@arg+3,w
  8449  116D  00F5               	movwf	?___xxtofl+3
  8450  116E  0824               	movf	___xxtofl@arg+2,w
  8451  116F  00F4               	movwf	?___xxtofl+2
  8452  1170  0823               	movf	___xxtofl@arg+1,w
  8453  1171  00F3               	movwf	?___xxtofl+1
  8454  1172  0822               	movf	___xxtofl@arg,w
  8455  1173  00F2               	movwf	?___xxtofl
  8456  1174                     l848:
  8457  1174  0008               	return
  8458  1175                     __end_of___xxtofl:
  8459                           
  8460                           	psect	text26
  8461  1000                     __ptext26:	
  8462 ;; *************** function _cfg_usart *****************
  8463 ;; Defined at:
  8464 ;;		line 160 in file "mainp1.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;		None
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;		None
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  1    wreg      void 
  8471 ;; Registers used:
  8472 ;;		wreg, status,2
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8478 ;;      Params:         0       0       0       0       0
  8479 ;;      Locals:         0       0       0       0       0
  8480 ;;      Temps:          0       0       0       0       0
  8481 ;;      Totals:         0       0       0       0       0
  8482 ;;Total ram usage:        0 bytes
  8483 ;; Hardware stack levels used:    1
  8484 ;; Hardware stack levels required when called:    1
  8485 ;; This function calls:
  8486 ;;		Nothing
  8487 ;; This function is called by:
  8488 ;;		_main
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           
  8493                           ;psect for function _cfg_usart
  8494  1000                     _cfg_usart:
  8495  1000                     l3154:	
  8496                           ;incstack = 0
  8497                           ; Regs used in _cfg_usart: [wreg+status,2]
  8498                           
  8499                           
  8500                           ;mainp1.c: 162:     TXSTAbits.SYNC = 0;
  8501  1000  1683               	bsf	3,5	;RP0=1, select bank1
  8502  1001  1303               	bcf	3,6	;RP1=0, select bank1
  8503  1002  1218               	bcf	24,4	;volatile
  8504                           
  8505                           ;mainp1.c: 163:     TXSTAbits.BRGH = 1;
  8506  1003  1518               	bsf	24,2	;volatile
  8507                           
  8508                           ;mainp1.c: 165:     BAUDCTLbits.BRG16 = 1;
  8509  1004  1683               	bsf	3,5	;RP0=1, select bank3
  8510  1005  1703               	bsf	3,6	;RP1=1, select bank3
  8511  1006  1587               	bsf	7,3	;volatile
  8512  1007                     l3156:
  8513                           
  8514                           ;mainp1.c: 167:     SPBRG = 103;
  8515  1007  3067               	movlw	103
  8516  1008  1683               	bsf	3,5	;RP0=1, select bank1
  8517  1009  1303               	bcf	3,6	;RP1=0, select bank1
  8518  100A  0099               	movwf	25	;volatile
  8519  100B                     l3158:
  8520                           
  8521                           ;mainp1.c: 168:     SPBRGH = 0;
  8522  100B  019A               	clrf	26	;volatile
  8523  100C                     l3160:
  8524                           
  8525                           ;mainp1.c: 170:     RCSTAbits.SPEN = 1;
  8526  100C  1283               	bcf	3,5	;RP0=0, select bank0
  8527  100D  1303               	bcf	3,6	;RP1=0, select bank0
  8528  100E  1798               	bsf	24,7	;volatile
  8529  100F                     l3162:
  8530                           
  8531                           ;mainp1.c: 171:     RCSTAbits.RX9 = 0;
  8532  100F  1318               	bcf	24,6	;volatile
  8533  1010                     l3164:
  8534                           
  8535                           ;mainp1.c: 172:     RCSTAbits.CREN = 1;
  8536  1010  1618               	bsf	24,4	;volatile
  8537  1011                     l3166:
  8538                           
  8539                           ;mainp1.c: 174:     TXSTAbits.TXEN = 1;
  8540  1011  1683               	bsf	3,5	;RP0=1, select bank1
  8541  1012  1303               	bcf	3,6	;RP1=0, select bank1
  8542  1013  1698               	bsf	24,5	;volatile
  8543  1014                     l95:
  8544  1014  0008               	return
  8545  1015                     __end_of_cfg_usart:
  8546                           
  8547                           	psect	text27
  8548  1C81                     __ptext27:	
  8549 ;; *************** function _cfg_io *****************
  8550 ;; Defined at:
  8551 ;;		line 133 in file "mainp1.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;		None
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      void 
  8558 ;; Registers used:
  8559 ;;		status,2
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8565 ;;      Params:         0       0       0       0       0
  8566 ;;      Locals:         0       0       0       0       0
  8567 ;;      Temps:          0       0       0       0       0
  8568 ;;      Totals:         0       0       0       0       0
  8569 ;;Total ram usage:        0 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; Hardware stack levels required when called:    1
  8572 ;; This function calls:
  8573 ;;		Nothing
  8574 ;; This function is called by:
  8575 ;;		_main
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           
  8580                           ;psect for function _cfg_io
  8581  1C81                     _cfg_io:
  8582  1C81                     l3146:	
  8583                           ;incstack = 0
  8584                           ; Regs used in _cfg_io: [status,2]
  8585                           
  8586                           
  8587                           ;mainp1.c: 134:     ANSEL = 0;
  8588  1C81  1683               	bsf	3,5	;RP0=1, select bank3
  8589  1C82  1703               	bsf	3,6	;RP1=1, select bank3
  8590  1C83  0188               	clrf	8	;volatile
  8591                           
  8592                           ;mainp1.c: 135:     ANSELH = 0;
  8593  1C84  0189               	clrf	9	;volatile
  8594  1C85                     l3148:
  8595                           
  8596                           ;mainp1.c: 137:     TRISAbits.TRISA0 = 0;
  8597  1C85  1683               	bsf	3,5	;RP0=1, select bank1
  8598  1C86  1303               	bcf	3,6	;RP1=0, select bank1
  8599  1C87  1005               	bcf	5,0	;volatile
  8600  1C88                     l3150:
  8601                           
  8602                           ;mainp1.c: 138:     TRISAbits.TRISA1 = 1;
  8603  1C88  1485               	bsf	5,1	;volatile
  8604  1C89                     l3152:
  8605                           
  8606                           ;mainp1.c: 139:     TRISAbits.TRISA2 = 1;
  8607  1C89  1505               	bsf	5,2	;volatile
  8608                           
  8609                           ;mainp1.c: 140:     TRISB = 0;
  8610  1C8A  0186               	clrf	6	;volatile
  8611                           
  8612                           ;mainp1.c: 141:     TRISD = 0;
  8613  1C8B  0188               	clrf	8	;volatile
  8614                           
  8615                           ;mainp1.c: 142:     TRISB = 0;
  8616  1C8C  0186               	clrf	6	;volatile
  8617                           
  8618                           ;mainp1.c: 144:     PORTB = 0;
  8619  1C8D  1283               	bcf	3,5	;RP0=0, select bank0
  8620  1C8E  1303               	bcf	3,6	;RP1=0, select bank0
  8621  1C8F  0186               	clrf	6	;volatile
  8622                           
  8623                           ;mainp1.c: 145:     PORTD = 0;
  8624  1C90  0188               	clrf	8	;volatile
  8625                           
  8626                           ;mainp1.c: 146:     PORTA = 0;
  8627  1C91  0185               	clrf	5	;volatile
  8628  1C92                     l86:
  8629  1C92  0008               	return
  8630  1C93                     __end_of_cfg_io:
  8631                           
  8632                           	psect	text28
  8633  1C3E                     __ptext28:	
  8634 ;; *************** function _cfg_clk *****************
  8635 ;; Defined at:
  8636 ;;		line 149 in file "mainp1.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;		None
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;		None
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  1    wreg      void 
  8643 ;; Registers used:
  8644 ;;		wreg, status,2, status,0
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8650 ;;      Params:         0       0       0       0       0
  8651 ;;      Locals:         0       0       0       0       0
  8652 ;;      Temps:          0       0       0       0       0
  8653 ;;      Totals:         0       0       0       0       0
  8654 ;;Total ram usage:        0 bytes
  8655 ;; Hardware stack levels used:    1
  8656 ;; Hardware stack levels required when called:    1
  8657 ;; This function calls:
  8658 ;;		Nothing
  8659 ;; This function is called by:
  8660 ;;		_main
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           
  8665                           ;psect for function _cfg_clk
  8666  1C3E                     _cfg_clk:
  8667  1C3E                     l3168:	
  8668                           ;incstack = 0
  8669                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  8670                           
  8671                           
  8672                           ;mainp1.c: 150:     OSCCONbits.IRCF = 0b110;
  8673  1C3E  1683               	bsf	3,5	;RP0=1, select bank1
  8674  1C3F  1303               	bcf	3,6	;RP1=0, select bank1
  8675  1C40  080F               	movf	15,w	;volatile
  8676  1C41  398F               	andlw	-113
  8677  1C42  3860               	iorlw	96
  8678  1C43  008F               	movwf	15	;volatile
  8679  1C44                     l3170:
  8680                           
  8681                           ;mainp1.c: 151:     OSCCONbits.SCS = 1;
  8682  1C44  140F               	bsf	15,0	;volatile
  8683  1C45                     l89:
  8684  1C45  0008               	return
  8685  1C46                     __end_of_cfg_clk:
  8686                           
  8687                           	psect	text29
  8688  1C60                     __ptext29:	
  8689 ;; *************** function _I2C_Master_Write *****************
  8690 ;; Defined at:
  8691 ;;		line 65 in file "I2C.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;  d               2    2[COMMON] unsigned int 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;		None
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, status,2, status,0, pclath, cstack
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8705 ;;      Params:         2       0       0       0       0
  8706 ;;      Locals:         0       0       0       0       0
  8707 ;;      Temps:          0       0       0       0       0
  8708 ;;      Totals:         2       0       0       0       0
  8709 ;;Total ram usage:        2 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:    2
  8712 ;; This function calls:
  8713 ;;		_I2C_Master_Wait
  8714 ;; This function is called by:
  8715 ;;		_main
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           
  8720                           ;psect for function _I2C_Master_Write
  8721  1C60                     _I2C_Master_Write:
  8722  1C60                     l3176:	
  8723                           ;incstack = 0
  8724                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8725                           
  8726                           
  8727                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  8728  1C60  160A  158A  2474  160A  158A  	fcall	_I2C_Master_Wait
  8729  1C65                     l3178:
  8730                           
  8731                           ;I2C.c: 68:     SSPBUF = d;
  8732  1C65  0872               	movf	I2C_Master_Write@d,w
  8733  1C66  1283               	bcf	3,5	;RP0=0, select bank0
  8734  1C67  1303               	bcf	3,6	;RP1=0, select bank0
  8735  1C68  0093               	movwf	19	;volatile
  8736  1C69                     l157:
  8737  1C69  0008               	return
  8738  1C6A                     __end_of_I2C_Master_Write:
  8739                           
  8740                           	psect	text30
  8741  1C57                     __ptext30:	
  8742 ;; *************** function _I2C_Master_Stop *****************
  8743 ;; Defined at:
  8744 ;;		line 55 in file "I2C.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;		None
  8747 ;; Auto vars:     Size  Location     Type
  8748 ;;		None
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  1    wreg      void 
  8751 ;; Registers used:
  8752 ;;		wreg, status,2, status,0, pclath, cstack
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8758 ;;      Params:         0       0       0       0       0
  8759 ;;      Locals:         0       0       0       0       0
  8760 ;;      Temps:          0       0       0       0       0
  8761 ;;      Totals:         0       0       0       0       0
  8762 ;;Total ram usage:        0 bytes
  8763 ;; Hardware stack levels used:    1
  8764 ;; Hardware stack levels required when called:    2
  8765 ;; This function calls:
  8766 ;;		_I2C_Master_Wait
  8767 ;; This function is called by:
  8768 ;;		_main
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           
  8773                           ;psect for function _I2C_Master_Stop
  8774  1C57                     _I2C_Master_Stop:
  8775  1C57                     l3180:	
  8776                           ;incstack = 0
  8777                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8778                           
  8779                           
  8780                           ;I2C.c: 57:     I2C_Master_Wait();
  8781  1C57  160A  158A  2474  160A  158A  	fcall	_I2C_Master_Wait
  8782  1C5C                     l3182:
  8783                           
  8784                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  8785  1C5C  1683               	bsf	3,5	;RP0=1, select bank1
  8786  1C5D  1303               	bcf	3,6	;RP1=0, select bank1
  8787  1C5E  1511               	bsf	17,2	;volatile
  8788  1C5F                     l154:
  8789  1C5F  0008               	return
  8790  1C60                     __end_of_I2C_Master_Stop:
  8791                           
  8792                           	psect	text31
  8793  1C4E                     __ptext31:	
  8794 ;; *************** function _I2C_Master_Start *****************
  8795 ;; Defined at:
  8796 ;;		line 39 in file "I2C.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;		None
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg, status,2, status,0, pclath, cstack
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8810 ;;      Params:         0       0       0       0       0
  8811 ;;      Locals:         0       0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0
  8813 ;;      Totals:         0       0       0       0       0
  8814 ;;Total ram usage:        0 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    2
  8817 ;; This function calls:
  8818 ;;		_I2C_Master_Wait
  8819 ;; This function is called by:
  8820 ;;		_main
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           
  8825                           ;psect for function _I2C_Master_Start
  8826  1C4E                     _I2C_Master_Start:
  8827  1C4E                     l3172:	
  8828                           ;incstack = 0
  8829                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8830                           
  8831                           
  8832                           ;I2C.c: 41:     I2C_Master_Wait();
  8833  1C4E  160A  158A  2474  160A  158A  	fcall	_I2C_Master_Wait
  8834  1C53                     l3174:
  8835                           
  8836                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  8837  1C53  1683               	bsf	3,5	;RP0=1, select bank1
  8838  1C54  1303               	bcf	3,6	;RP1=0, select bank1
  8839  1C55  1411               	bsf	17,0	;volatile
  8840  1C56                     l148:
  8841  1C56  0008               	return
  8842  1C57                     __end_of_I2C_Master_Start:
  8843                           
  8844                           	psect	text32
  8845  1D0F                     __ptext32:	
  8846 ;; *************** function _I2C_Master_Read *****************
  8847 ;; Defined at:
  8848 ;;		line 74 in file "I2C.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;  a               2    2[COMMON] unsigned short 
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;  temp            2    6[COMMON] unsigned short 
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  2    2[COMMON] unsigned short 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2, status,0, pclath, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8862 ;;      Params:         2       0       0       0       0
  8863 ;;      Locals:         2       0       0       0       0
  8864 ;;      Temps:          2       0       0       0       0
  8865 ;;      Totals:         6       0       0       0       0
  8866 ;;Total ram usage:        6 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:    2
  8869 ;; This function calls:
  8870 ;;		_I2C_Master_Wait
  8871 ;; This function is called by:
  8872 ;;		_main
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           
  8877                           ;psect for function _I2C_Master_Read
  8878  1D0F                     _I2C_Master_Read:
  8879  1D0F                     l3184:	
  8880                           ;incstack = 0
  8881                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  8882                           
  8883                           
  8884                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  8885  1D0F  160A  158A  2474  160A  158A  	fcall	_I2C_Master_Wait
  8886  1D14                     l3186:
  8887                           
  8888                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  8889  1D14  1683               	bsf	3,5	;RP0=1, select bank1
  8890  1D15  1303               	bcf	3,6	;RP1=0, select bank1
  8891  1D16  1591               	bsf	17,3	;volatile
  8892                           
  8893                           ;I2C.c: 79:     I2C_Master_Wait();
  8894  1D17  160A  158A  2474  160A  158A  	fcall	_I2C_Master_Wait
  8895  1D1C                     l3188:
  8896                           
  8897                           ;I2C.c: 80:     temp = SSPBUF;
  8898  1D1C  1283               	bcf	3,5	;RP0=0, select bank0
  8899  1D1D  1303               	bcf	3,6	;RP1=0, select bank0
  8900  1D1E  0813               	movf	19,w	;volatile
  8901  1D1F  00F4               	movwf	??_I2C_Master_Read
  8902  1D20  01F5               	clrf	??_I2C_Master_Read+1
  8903  1D21  0874               	movf	??_I2C_Master_Read,w
  8904  1D22  00F6               	movwf	I2C_Master_Read@temp
  8905  1D23  0875               	movf	??_I2C_Master_Read+1,w
  8906  1D24  00F7               	movwf	I2C_Master_Read@temp+1
  8907  1D25                     l3190:
  8908                           
  8909                           ;I2C.c: 81:     I2C_Master_Wait();
  8910  1D25  160A  158A  2474  160A  158A  	fcall	_I2C_Master_Wait
  8911  1D2A                     l3192:
  8912                           
  8913                           ;I2C.c: 82:     if(a == 1){
  8914  1D2A  0372               	decf	I2C_Master_Read@a,w
  8915  1D2B  0473               	iorwf	I2C_Master_Read@a+1,w
  8916  1D2C  1D03               	btfss	3,2
  8917  1D2D  2D2F               	goto	u5101
  8918  1D2E  2D30               	goto	u5100
  8919  1D2F                     u5101:
  8920  1D2F  2D34               	goto	l160
  8921  1D30                     u5100:
  8922  1D30                     l3194:
  8923                           
  8924                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  8925  1D30  1683               	bsf	3,5	;RP0=1, select bank1
  8926  1D31  1303               	bcf	3,6	;RP1=0, select bank1
  8927  1D32  1291               	bcf	17,5	;volatile
  8928                           
  8929                           ;I2C.c: 84:     }else{
  8930  1D33  2D37               	goto	l161
  8931  1D34                     l160:
  8932                           
  8933                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  8934  1D34  1683               	bsf	3,5	;RP0=1, select bank1
  8935  1D35  1303               	bcf	3,6	;RP1=0, select bank1
  8936  1D36  1691               	bsf	17,5	;volatile
  8937  1D37                     l161:	
  8938                           ;I2C.c: 86:     }
  8939                           
  8940                           
  8941                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  8942  1D37  1611               	bsf	17,4	;volatile
  8943  1D38                     l3196:
  8944                           
  8945                           ;I2C.c: 88:     return temp;
  8946  1D38  0877               	movf	I2C_Master_Read@temp+1,w
  8947  1D39  00F3               	movwf	?_I2C_Master_Read+1
  8948  1D3A  0876               	movf	I2C_Master_Read@temp,w
  8949  1D3B  00F2               	movwf	?_I2C_Master_Read
  8950  1D3C                     l162:
  8951  1D3C  0008               	return
  8952  1D3D                     __end_of_I2C_Master_Read:
  8953                           
  8954                           	psect	text33
  8955  1C74                     __ptext33:	
  8956 ;; *************** function _I2C_Master_Wait *****************
  8957 ;; Defined at:
  8958 ;;		line 32 in file "I2C.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;		None
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;		None
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  1    wreg      void 
  8965 ;; Registers used:
  8966 ;;		wreg, status,2
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8972 ;;      Params:         0       0       0       0       0
  8973 ;;      Locals:         0       0       0       0       0
  8974 ;;      Temps:          0       0       0       0       0
  8975 ;;      Totals:         0       0       0       0       0
  8976 ;;Total ram usage:        0 bytes
  8977 ;; Hardware stack levels used:    1
  8978 ;; Hardware stack levels required when called:    1
  8979 ;; This function calls:
  8980 ;;		Nothing
  8981 ;; This function is called by:
  8982 ;;		_I2C_Master_Start
  8983 ;;		_I2C_Master_Stop
  8984 ;;		_I2C_Master_Write
  8985 ;;		_I2C_Master_Read
  8986 ;;		_I2C_Master_RepeatedStart
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           
  8991                           ;psect for function _I2C_Master_Wait
  8992  1C74                     _I2C_Master_Wait:
  8993  1C74                     l2784:	
  8994                           ;incstack = 0
  8995                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8996                           
  8997  1C74                     l142:	
  8998                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8999                           
  9000  1C74  1683               	bsf	3,5	;RP0=1, select bank1
  9001  1C75  1303               	bcf	3,6	;RP1=0, select bank1
  9002  1C76  1914               	btfsc	20,2	;volatile
  9003  1C77  2C79               	goto	u4031
  9004  1C78  2C7A               	goto	u4030
  9005  1C79                     u4031:
  9006  1C79  2C74               	goto	l142
  9007  1C7A                     u4030:
  9008  1C7A                     l2786:
  9009  1C7A  0811               	movf	17,w	;volatile
  9010  1C7B  391F               	andlw	31
  9011  1C7C  1D03               	btfss	3,2
  9012  1C7D  2C7F               	goto	u4041
  9013  1C7E  2C80               	goto	u4040
  9014  1C7F                     u4041:
  9015  1C7F  2C74               	goto	l142
  9016  1C80                     u4040:
  9017  1C80                     l145:
  9018  1C80  0008               	return
  9019  1C81                     __end_of_I2C_Master_Wait:
  9020                           
  9021                           	psect	text34
  9022  1C37                     __ptext34:	
  9023 ;; *************** function _isr *****************
  9024 ;; Defined at:
  9025 ;;		line 65 in file "mainp1.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		None
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9039 ;;      Params:         0       0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0
  9041 ;;      Temps:          2       0       0       0       0
  9042 ;;      Totals:         2       0       0       0       0
  9043 ;;Total ram usage:        2 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; This function calls:
  9046 ;;		Nothing
  9047 ;; This function is called by:
  9048 ;;		Interrupt level 1
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           
  9053                           ;psect for function _isr
  9054  1C37                     _isr:
  9055  1C37                     i1l75:
  9056  1C37  0871               	movf	??_isr+1,w
  9057  1C38  008A               	movwf	10
  9058  1C39  0E70               	swapf	??_isr,w
  9059  1C3A  0083               	movwf	3
  9060  1C3B  0EFE               	swapf	btemp,f
  9061  1C3C  0E7E               	swapf	btemp,w
  9062  1C3D  0009               	retfie
  9063  1C3E                     __end_of_isr:
  9064  007E                     btemp	set	126	;btemp
  9065  007E                     wtemp0	set	126
  9066                           
  9067                           	psect	intentry
  9068  0004                     __pintentry:	
  9069                           ;incstack = 0
  9070                           ; Regs used in _isr: []
  9071                           
  9072  0004                     interrupt_function:
  9073  007E                     saved_w	set	btemp
  9074  0004  00FE               	movwf	btemp
  9075  0005  0E03               	swapf	3,w
  9076  0006  00F0               	movwf	??_isr
  9077  0007  080A               	movf	10,w
  9078  0008  00F1               	movwf	??_isr+1
  9079  0009  160A  158A  2C37   	ljmp	_isr
  9080                           
  9081                           	psect	config
  9082                           
  9083                           ;Config register CONFIG1 @ 0x2007
  9084                           ;	Oscillator Selection bits
  9085                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9086                           ;	Watchdog Timer Enable bit
  9087                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9088                           ;	Power-up Timer Enable bit
  9089                           ;	PWRTE = OFF, PWRT disabled
  9090                           ;	RE3/MCLR pin function select bit
  9091                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9092                           ;	Code Protection bit
  9093                           ;	CP = OFF, Program memory code protection is disabled
  9094                           ;	Data Code Protection bit
  9095                           ;	CPD = OFF, Data memory code protection is disabled
  9096                           ;	Brown Out Reset Selection bits
  9097                           ;	BOREN = OFF, BOR disabled
  9098                           ;	Internal External Switchover bit
  9099                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9100                           ;	Fail-Safe Clock Monitor Enabled bit
  9101                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9102                           ;	Low Voltage Programming Enable bit
  9103                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9104                           ;	In-Circuit Debugger Mode bit
  9105                           ;	DEBUG = 0x1, unprogrammed default
  9106  2007                     	org	8199
  9107  2007  20D4               	dw	8404
  9108                           
  9109                           ;Config register CONFIG2 @ 0x2008
  9110                           ;	Brown-out Reset Selection bit
  9111                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9112                           ;	Flash Program Memory Self Write Enable bits
  9113                           ;	WRT = OFF, Write protection off
  9114  2008                     	org	8200
  9115  2008  3FFF               	dw	16383
  9116                           
  9117                           	psect	text1_split_1
  9118  001D                     u6010:
  9119  001D                     l3794:
  9120  001D  1683               	bsf	3,5	;RP0=1, select bank1
  9121  001E  1303               	bcf	3,6	;RP1=0, select bank1
  9122  001F  0843               	movf	(sprintf@fval+3)^(0+128),w
  9123  0020  00F5               	movwf	___fleq@ff1+3
  9124  0021  0842               	movf	(sprintf@fval+2)^(0+128),w
  9125  0022  00F4               	movwf	___fleq@ff1+2
  9126  0023  0841               	movf	(sprintf@fval+1)^(0+128),w
  9127  0024  00F3               	movwf	___fleq@ff1+1
  9128  0025  0840               	movf	sprintf@fval^(0+128),w
  9129  0026  00F2               	movwf	___fleq@ff1
  9130  0027  3000               	movlw	0
  9131  0028  00F9               	movwf	___fleq@ff2+3
  9132  0029  3000               	movlw	0
  9133  002A  00F8               	movwf	___fleq@ff2+2
  9134  002B  3000               	movlw	0
  9135  002C  00F7               	movwf	___fleq@ff2+1
  9136  002D  3000               	movlw	0
  9137  002E  00F6               	movwf	___fleq@ff2
  9138  002F  160A  158A  25BD  120A  118A  	fcall	___fleq
  9139  0034  1803               	btfsc	3,0
  9140  0035  2837               	goto	u6021
  9141  0036  2838               	goto	u6020
  9142  0037                     u6021:
  9143  0037  28E0               	goto	l3814
  9144  0038                     u6020:
  9145  0038                     l3796:
  9146  0038  1683               	bsf	3,5	;RP0=1, select bank1
  9147  0039  1303               	bcf	3,6	;RP1=0, select bank1
  9148  003A  0843               	movf	(sprintf@fval+3)^(0+128),w
  9149  003B  1283               	bcf	3,5	;RP0=0, select bank0
  9150  003C  1303               	bcf	3,6	;RP1=0, select bank0
  9151  003D  00D8               	movwf	___fltol@f1+3
  9152  003E  1683               	bsf	3,5	;RP0=1, select bank1
  9153  003F  1303               	bcf	3,6	;RP1=0, select bank1
  9154  0040  0842               	movf	(sprintf@fval+2)^(0+128),w
  9155  0041  1283               	bcf	3,5	;RP0=0, select bank0
  9156  0042  1303               	bcf	3,6	;RP1=0, select bank0
  9157  0043  00D7               	movwf	___fltol@f1+2
  9158  0044  1683               	bsf	3,5	;RP0=1, select bank1
  9159  0045  1303               	bcf	3,6	;RP1=0, select bank1
  9160  0046  0841               	movf	(sprintf@fval+1)^(0+128),w
  9161  0047  1283               	bcf	3,5	;RP0=0, select bank0
  9162  0048  1303               	bcf	3,6	;RP1=0, select bank0
  9163  0049  00D6               	movwf	___fltol@f1+1
  9164  004A  1683               	bsf	3,5	;RP0=1, select bank1
  9165  004B  1303               	bcf	3,6	;RP1=0, select bank1
  9166  004C  0840               	movf	sprintf@fval^(0+128),w
  9167  004D  1283               	bcf	3,5	;RP0=0, select bank0
  9168  004E  1303               	bcf	3,6	;RP1=0, select bank0
  9169  004F  00D5               	movwf	___fltol@f1
  9170  0050  160A  158A  2784  120A  118A  	fcall	___fltol
  9171  0055  1283               	bcf	3,5	;RP0=0, select bank0
  9172  0056  1303               	bcf	3,6	;RP1=0, select bank0
  9173  0057  0858               	movf	?___fltol+3,w
  9174  0058  0457               	iorwf	?___fltol+2,w
  9175  0059  0456               	iorwf	?___fltol+1,w
  9176  005A  0455               	iorwf	?___fltol,w
  9177  005B  1D03               	skipz
  9178  005C  285E               	goto	u6031
  9179  005D  285F               	goto	u6030
  9180  005E                     u6031:
  9181  005E  28E0               	goto	l3814
  9182  005F                     u6030:
  9183  005F                     l3798:
  9184  005F  1683               	bsf	3,5	;RP0=1, select bank1
  9185  0060  1303               	bcf	3,6	;RP1=0, select bank1
  9186  0061  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9187  0062  3A80               	xorlw	128
  9188  0063  00FF               	movwf	btemp+1
  9189  0064  3080               	movlw	128
  9190  0065  027F               	subwf	btemp+1,w
  9191  0066  1D03               	skipz
  9192  0067  286A               	goto	u6045
  9193  0068  3002               	movlw	2
  9194  0069  023A               	subwf	sprintf@eexp^(0+128),w
  9195  006A                     u6045:
  9196  006A  1C03               	skipc
  9197  006B  286D               	goto	u6041
  9198  006C  286E               	goto	u6040
  9199  006D                     u6041:
  9200  006D  28E0               	goto	l3814
  9201  006E                     u6040:
  9202  006E                     l3800:
  9203                           
  9204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9205  006E  1683               	bsf	3,5	;RP0=1, select bank1
  9206  006F  1303               	bcf	3,6	;RP1=0, select bank1
  9207  0070  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9208  0071  00F5               	movwf	___flge@ff1+3
  9209  0072  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9210  0073  00F4               	movwf	___flge@ff1+2
  9211  0074  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9212  0075  00F3               	movwf	___flge@ff1+1
  9213  0076  0836               	movf	sprintf@tmpval^(0+128),w
  9214  0077  00F2               	movwf	___flge@ff1
  9215  0078  3040               	movlw	64
  9216  0079  00F9               	movwf	___flge@ff2+3
  9217  007A  3089               	movlw	137
  9218  007B  00F8               	movwf	___flge@ff2+2
  9219  007C  3070               	movlw	112
  9220  007D  00F7               	movwf	___flge@ff2+1
  9221  007E  305F               	movlw	95
  9222  007F  00F6               	movwf	___flge@ff2
  9223  0080  160A  118A  2015  120A  118A  	fcall	___flge
  9224  0085  1803               	btfsc	3,0
  9225  0086  2888               	goto	u6051
  9226  0087  2889               	goto	u6050
  9227  0088                     u6051:
  9228  0088  2892               	goto	l3804
  9229  0089                     u6050:
  9230  0089                     l3802:
  9231                           
  9232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9233  0089  30F7               	movlw	247
  9234  008A  1683               	bsf	3,5	;RP0=1, select bank1
  9235  008B  1303               	bcf	3,6	;RP1=0, select bank1
  9236  008C  07BA               	addwf	sprintf@eexp^(0+128),f
  9237  008D  1803               	skipnc
  9238  008E  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  9239  008F  30FF               	movlw	255
  9240  0090  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  9241                           
  9242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9243  0091  289A               	goto	l3806
  9244  0092                     l3804:
  9245                           
  9246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9247  0092  30F8               	movlw	248
  9248  0093  1683               	bsf	3,5	;RP0=1, select bank1
  9249  0094  1303               	bcf	3,6	;RP1=0, select bank1
  9250  0095  07BA               	addwf	sprintf@eexp^(0+128),f
  9251  0096  1803               	skipnc
  9252  0097  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  9253  0098  30FF               	movlw	255
  9254  0099  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  9255  009A                     l3806:
  9256                           
  9257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9258  009A  083A               	movf	sprintf@eexp^(0+128),w
  9259  009B  120A  158A  249D  120A  118A  	fcall	_scale
  9260  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  9261  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  9262  00A2  0845               	movf	?_scale+3,w
  9263  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  9264  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  9265  00A5  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9266  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  9267  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  9268  00A8  0844               	movf	?_scale+2,w
  9269  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  9270  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  9271  00AB  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9272  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  9273  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  9274  00AE  0843               	movf	?_scale+1,w
  9275  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  9276  00B0  1303               	bcf	3,6	;RP1=0, select bank1
  9277  00B1  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9278  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  9279  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  9280  00B4  0842               	movf	?_scale,w
  9281  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  9282  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  9283  00B7  00B6               	movwf	sprintf@tmpval^(0+128)
  9284  00B8                     l3808:
  9285  00B8  0843               	movf	(sprintf@fval+3)^(0+128),w
  9286  00B9  00F5               	movwf	__div_to_l_@f1+3
  9287  00BA  0842               	movf	(sprintf@fval+2)^(0+128),w
  9288  00BB  00F4               	movwf	__div_to_l_@f1+2
  9289  00BC  0841               	movf	(sprintf@fval+1)^(0+128),w
  9290  00BD  00F3               	movwf	__div_to_l_@f1+1
  9291  00BE  0840               	movf	sprintf@fval^(0+128),w
  9292  00BF  00F2               	movwf	__div_to_l_@f1
  9293  00C0  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9294  00C1  00F9               	movwf	__div_to_l_@f2+3
  9295  00C2  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9296  00C3  00F8               	movwf	__div_to_l_@f2+2
  9297  00C4  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9298  00C5  00F7               	movwf	__div_to_l_@f2+1
  9299  00C6  0836               	movf	sprintf@tmpval^(0+128),w
  9300  00C7  00F6               	movwf	__div_to_l_@f2
  9301  00C8  160A  118A  2232  120A  118A  	fcall	__div_to_l_
  9302  00CD  0875               	movf	?__div_to_l_+3,w
  9303  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  9304  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  9305  00D0  00B5               	movwf	(sprintf@val+3)^(0+128)
  9306  00D1  0874               	movf	?__div_to_l_+2,w
  9307  00D2  00B4               	movwf	(sprintf@val+2)^(0+128)
  9308  00D3  0873               	movf	?__div_to_l_+1,w
  9309  00D4  00B3               	movwf	(sprintf@val+1)^(0+128)
  9310  00D5  0872               	movf	?__div_to_l_,w
  9311  00D6  00B2               	movwf	sprintf@val^(0+128)
  9312  00D7                     l3812:
  9313                           
  9314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9315  00D7  3000               	movlw	0
  9316  00D8  00C3               	movwf	(sprintf@fval+3)^(0+128)
  9317  00D9  3000               	movlw	0
  9318  00DA  00C2               	movwf	(sprintf@fval+2)^(0+128)
  9319  00DB  3000               	movlw	0
  9320  00DC  00C1               	movwf	(sprintf@fval+1)^(0+128)
  9321  00DD  3000               	movlw	0
  9322  00DE  00C0               	movwf	sprintf@fval^(0+128)
  9323                           
  9324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9325  00DF  2946               	goto	l3820
  9326  00E0                     l3814:
  9327                           
  9328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9329  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  9330  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  9331  00E2  0843               	movf	(sprintf@fval+3)^(0+128),w
  9332  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  9333  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  9334  00E5  00D8               	movwf	___fltol@f1+3
  9335  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  9336  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  9337  00E8  0842               	movf	(sprintf@fval+2)^(0+128),w
  9338  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  9339  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  9340  00EB  00D7               	movwf	___fltol@f1+2
  9341  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  9342  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  9343  00EE  0841               	movf	(sprintf@fval+1)^(0+128),w
  9344  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  9345  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  9346  00F1  00D6               	movwf	___fltol@f1+1
  9347  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  9348  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  9349  00F4  0840               	movf	sprintf@fval^(0+128),w
  9350  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  9351  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  9352  00F7  00D5               	movwf	___fltol@f1
  9353  00F8  160A  158A  2784  120A  118A  	fcall	___fltol
  9354  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  9355  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  9356  00FF  0858               	movf	?___fltol+3,w
  9357  0100  1683               	bsf	3,5	;RP0=1, select bank1
  9358  0101  1303               	bcf	3,6	;RP1=0, select bank1
  9359  0102  00B5               	movwf	(sprintf@val+3)^(0+128)
  9360  0103  1283               	bcf	3,5	;RP0=0, select bank0
  9361  0104  1303               	bcf	3,6	;RP1=0, select bank0
  9362  0105  0857               	movf	?___fltol+2,w
  9363  0106  1683               	bsf	3,5	;RP0=1, select bank1
  9364  0107  1303               	bcf	3,6	;RP1=0, select bank1
  9365  0108  00B4               	movwf	(sprintf@val+2)^(0+128)
  9366  0109  1283               	bcf	3,5	;RP0=0, select bank0
  9367  010A  1303               	bcf	3,6	;RP1=0, select bank0
  9368  010B  0856               	movf	?___fltol+1,w
  9369  010C  1683               	bsf	3,5	;RP0=1, select bank1
  9370  010D  1303               	bcf	3,6	;RP1=0, select bank1
  9371  010E  00B3               	movwf	(sprintf@val+1)^(0+128)
  9372  010F  1283               	bcf	3,5	;RP0=0, select bank0
  9373  0110  1303               	bcf	3,6	;RP1=0, select bank0
  9374  0111  0855               	movf	?___fltol,w
  9375  0112  1683               	bsf	3,5	;RP0=1, select bank1
  9376  0113  1303               	bcf	3,6	;RP1=0, select bank1
  9377  0114  00B2               	movwf	sprintf@val^(0+128)
  9378  0115                     l3816:
  9379                           
  9380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9381  0115  0835               	movf	(sprintf@val+3)^(0+128),w
  9382  0116  00F5               	movwf	___xxtofl@val+3
  9383  0117  0834               	movf	(sprintf@val+2)^(0+128),w
  9384  0118  00F4               	movwf	___xxtofl@val+2
  9385  0119  0833               	movf	(sprintf@val+1)^(0+128),w
  9386  011A  00F3               	movwf	___xxtofl@val+1
  9387  011B  0832               	movf	sprintf@val^(0+128),w
  9388  011C  00F2               	movwf	___xxtofl@val
  9389  011D  3000               	movlw	0
  9390  011E  160A  118A  20B9  120A  118A  	fcall	___xxtofl
  9391  0123  0875               	movf	?___xxtofl+3,w
  9392  0124  1683               	bsf	3,5	;RP0=1, select bank1
  9393  0125  1303               	bcf	3,6	;RP1=0, select bank1
  9394  0126  00A3               	movwf	(___flsub@a+3)^(0+128)
  9395  0127  0874               	movf	?___xxtofl+2,w
  9396  0128  00A2               	movwf	(___flsub@a+2)^(0+128)
  9397  0129  0873               	movf	?___xxtofl+1,w
  9398  012A  00A1               	movwf	(___flsub@a+1)^(0+128)
  9399  012B  0872               	movf	?___xxtofl,w
  9400  012C  00A0               	movwf	___flsub@a^(0+128)
  9401  012D  0843               	movf	(sprintf@fval+3)^(0+128),w
  9402  012E  00A7               	movwf	(___flsub@b+3)^(0+128)
  9403  012F  0842               	movf	(sprintf@fval+2)^(0+128),w
  9404  0130  00A6               	movwf	(___flsub@b+2)^(0+128)
  9405  0131  0841               	movf	(sprintf@fval+1)^(0+128),w
  9406  0132  00A5               	movwf	(___flsub@b+1)^(0+128)
  9407  0133  0840               	movf	sprintf@fval^(0+128),w
  9408  0134  00A4               	movwf	___flsub@b^(0+128)
  9409  0135  160A  158A  260D  120A  118A  	fcall	___flsub
  9410  013A  1683               	bsf	3,5	;RP0=1, select bank1
  9411  013B  1303               	bcf	3,6	;RP1=0, select bank1
  9412  013C  0823               	movf	(?___flsub+3)^(0+128),w
  9413  013D  00C3               	movwf	(sprintf@fval+3)^(0+128)
  9414  013E  0822               	movf	(?___flsub+2)^(0+128),w
  9415  013F  00C2               	movwf	(sprintf@fval+2)^(0+128)
  9416  0140  0821               	movf	(?___flsub+1)^(0+128),w
  9417  0141  00C1               	movwf	(sprintf@fval+1)^(0+128)
  9418  0142  0820               	movf	?___flsub^(0+128),w
  9419  0143  00C0               	movwf	sprintf@fval^(0+128)
  9420  0144                     l3818:
  9421                           
  9422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9423  0144  01BA               	clrf	sprintf@eexp^(0+128)
  9424  0145  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  9425  0146                     l3820:
  9426                           
  9427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9428  0146  01C7               	clrf	sprintf@c^(0+128)
  9429  0147  0AC7               	incf	sprintf@c^(0+128),f
  9430  0148                     l3826:
  9431                           
  9432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9433  0148  0847               	movf	sprintf@c^(0+128),w
  9434  0149  00A8               	movwf	??_sprintf^(0+128)
  9435  014A  3001               	movlw	1
  9436  014B                     u6065:
  9437  014B  1003               	clrc
  9438  014C  0DA8               	rlf	??_sprintf^(0+128),f
  9439  014D  3EFF               	addlw	-1
  9440  014E  1D03               	skipz
  9441  014F  294B               	goto	u6065
  9442  0150  1003               	clrc
  9443  0151  0D28               	rlf	??_sprintf^(0+128),w
  9444  0152  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9445  0153  0084               	movwf	4
  9446  0154  160A  158A  2000  120A  118A  	fcall	stringdir
  9447  0159  00A9               	movwf	(??_sprintf+1)^(0+128)
  9448  015A  160A  158A  2000  120A  118A  	fcall	stringdir
  9449  015F  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  9450  0160  160A  158A  2000  120A  118A  	fcall	stringdir
  9451  0165  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  9452  0166  160A  158A  2000  120A  118A  	fcall	stringdir
  9453  016B  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  9454  016C  082C               	movf	(??_sprintf+4)^(0+128),w
  9455  016D  0235               	subwf	(sprintf@val+3)^(0+128),w
  9456  016E  1D03               	skipz
  9457  016F  297A               	goto	u6075
  9458  0170  082B               	movf	(??_sprintf+3)^(0+128),w
  9459  0171  0234               	subwf	(sprintf@val+2)^(0+128),w
  9460  0172  1D03               	skipz
  9461  0173  297A               	goto	u6075
  9462  0174  082A               	movf	(??_sprintf+2)^(0+128),w
  9463  0175  0233               	subwf	(sprintf@val+1)^(0+128),w
  9464  0176  1D03               	skipz
  9465  0177  297A               	goto	u6075
  9466  0178  0829               	movf	(??_sprintf+1)^(0+128),w
  9467  0179  0232               	subwf	sprintf@val^(0+128),w
  9468  017A                     u6075:
  9469  017A  1803               	skipnc
  9470  017B  297D               	goto	u6071
  9471  017C  297E               	goto	u6070
  9472  017D                     u6071:
  9473  017D  297F               	goto	l3830
  9474  017E                     u6070:
  9475  017E  2989               	goto	l3832
  9476  017F                     l3830:
  9477  017F  3001               	movlw	1
  9478  0180  00A8               	movwf	??_sprintf^(0+128)
  9479  0181  0828               	movf	??_sprintf^(0+128),w
  9480  0182  07C7               	addwf	sprintf@c^(0+128),f
  9481  0183  300A               	movlw	10
  9482  0184  0647               	xorwf	sprintf@c^(0+128),w
  9483  0185  1D03               	btfss	3,2
  9484  0186  2988               	goto	u6081
  9485  0187  2989               	goto	u6080
  9486  0188                     u6081:
  9487  0188  2948               	goto	l3826
  9488  0189                     u6080:
  9489  0189                     l3832:
  9490                           
  9491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9492  0189  0847               	movf	sprintf@c^(0+128),w
  9493  018A  0744               	addwf	sprintf@prec^(0+128),w
  9494  018B  00A8               	movwf	??_sprintf^(0+128)
  9495  018C  0845               	movf	(sprintf@prec+1)^(0+128),w
  9496  018D  1803               	skipnc
  9497  018E  0A45               	incf	(sprintf@prec+1)^(0+128),w
  9498  018F  00A9               	movwf	(??_sprintf^(0+128)+1)
  9499  0190  083A               	movf	sprintf@eexp^(0+128),w
  9500  0191  0728               	addwf	??_sprintf^(0+128),w
  9501  0192  00AA               	movwf	(??_sprintf+2)^(0+128)
  9502  0193  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9503  0194  1803               	skipnc
  9504  0195  0A3B               	incf	(sprintf@eexp+1)^(0+128),w
  9505  0196  0729               	addwf	(??_sprintf+1)^(0+128),w
  9506  0197  00AB               	movwf	(??_sprintf+3)^(0+128)
  9507  0198  082A               	movf	(??_sprintf+2)^(0+128),w
  9508  0199  02BE               	subwf	sprintf@width^(0+128),f
  9509  019A  082B               	movf	(??_sprintf+3)^(0+128),w
  9510  019B  1C03               	skipc
  9511  019C  03BF               	decf	(sprintf@width+1)^(0+128),f
  9512  019D  02BF               	subwf	(sprintf@width+1)^(0+128),f
  9513                           
  9514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9515  019E  0844               	movf	sprintf@prec^(0+128),w
  9516  019F  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9517  01A0  1903               	btfsc	3,2
  9518  01A1  29A3               	goto	u6091
  9519  01A2  29A4               	goto	u6090
  9520  01A3                     u6091:
  9521  01A3  29AA               	goto	l3836
  9522  01A4                     u6090:
  9523  01A4                     l3834:
  9524                           
  9525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9526  01A4  30FF               	movlw	255
  9527  01A5  07BE               	addwf	sprintf@width^(0+128),f
  9528  01A6  1803               	skipnc
  9529  01A7  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9530  01A8  30FF               	movlw	255
  9531  01A9  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9532  01AA                     l3836:
  9533                           
  9534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9535  01AA  3003               	movlw	3
  9536  01AB  053C               	andwf	sprintf@flag^(0+128),w
  9537  01AC  00A8               	movwf	??_sprintf^(0+128)
  9538  01AD  3000               	movlw	0
  9539  01AE  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9540  01AF  00A9               	movwf	(??_sprintf+1)^(0+128)
  9541  01B0  0828               	movf	??_sprintf^(0+128),w
  9542  01B1  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9543  01B2  1903               	btfsc	3,2
  9544  01B3  29B5               	goto	u6101
  9545  01B4  29B6               	goto	u6100
  9546  01B5                     u6101:
  9547  01B5  29BC               	goto	l3840
  9548  01B6                     u6100:
  9549  01B6                     l3838:
  9550                           
  9551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9552  01B6  30FF               	movlw	255
  9553  01B7  07BE               	addwf	sprintf@width^(0+128),f
  9554  01B8  1803               	skipnc
  9555  01B9  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9556  01BA  30FF               	movlw	255
  9557  01BB  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9558  01BC                     l3840:
  9559                           
  9560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
  9561  01BC  1D3C               	btfss	sprintf@flag^(0+128),2
  9562  01BD  29BF               	goto	u6111
  9563  01BE  29C0               	goto	u6110
  9564  01BF                     u6111:
  9565  01BF  2A0C               	goto	l3862
  9566  01C0                     u6110:
  9567  01C0                     l3842:
  9568                           
  9569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
  9570  01C0  3003               	movlw	3
  9571  01C1  053C               	andwf	sprintf@flag^(0+128),w
  9572  01C2  00A8               	movwf	??_sprintf^(0+128)
  9573  01C3  3000               	movlw	0
  9574  01C4  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9575  01C5  00A9               	movwf	(??_sprintf+1)^(0+128)
  9576  01C6  0828               	movf	??_sprintf^(0+128),w
  9577  01C7  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9578  01C8  1903               	btfsc	3,2
  9579  01C9  29CB               	goto	u6121
  9580  01CA  29CC               	goto	u6120
  9581  01CB                     u6121:
  9582  01CB  29EB               	goto	l3854
  9583  01CC                     u6120:
  9584  01CC                     l3844:
  9585                           
  9586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
  9587  01CC  302D               	movlw	45
  9588  01CD  00A8               	movwf	??_sprintf^(0+128)
  9589  01CE  0846               	movf	sprintf@sp^(0+128),w
  9590  01CF  0084               	movwf	4
  9591  01D0  0828               	movf	??_sprintf^(0+128),w
  9592  01D1  1383               	bcf	3,7	;select IRP bank0
  9593  01D2  0080               	movwf	0
  9594  01D3                     l3846:
  9595  01D3  3001               	movlw	1
  9596  01D4  00A8               	movwf	??_sprintf^(0+128)
  9597  01D5  0828               	movf	??_sprintf^(0+128),w
  9598  01D6  07C6               	addwf	sprintf@sp^(0+128),f
  9599  01D7  29EB               	goto	l3854
  9600  01D8                     l3848:
  9601                           
  9602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
  9603  01D8  3030               	movlw	48
  9604  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  9605  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  9606  01DB  00A8               	movwf	??_sprintf^(0+128)
  9607  01DC  0846               	movf	sprintf@sp^(0+128),w
  9608  01DD  0084               	movwf	4
  9609  01DE  0828               	movf	??_sprintf^(0+128),w
  9610  01DF  1383               	bcf	3,7	;select IRP bank0
  9611  01E0  0080               	movwf	0
  9612  01E1                     l3850:
  9613  01E1  3001               	movlw	1
  9614  01E2  00A8               	movwf	??_sprintf^(0+128)
  9615  01E3  0828               	movf	??_sprintf^(0+128),w
  9616  01E4  07C6               	addwf	sprintf@sp^(0+128),f
  9617  01E5                     l3852:
  9618                           
  9619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
  9620  01E5  30FF               	movlw	255
  9621  01E6  07BE               	addwf	sprintf@width^(0+128),f
  9622  01E7  1803               	skipnc
  9623  01E8  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9624  01E9  30FF               	movlw	255
  9625  01EA  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9626  01EB                     l3854:
  9627                           
  9628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
  9629  01EB  083F               	movf	(sprintf@width+1)^(0+128),w
  9630  01EC  3A80               	xorlw	128
  9631  01ED  00FF               	movwf	btemp+1
  9632  01EE  3080               	movlw	128
  9633  01EF  027F               	subwf	btemp+1,w
  9634  01F0  1D03               	skipz
  9635  01F1  29F4               	goto	u6135
  9636  01F2  3001               	movlw	1
  9637  01F3  023E               	subwf	sprintf@width^(0+128),w
  9638  01F4                     u6135:
  9639  01F4  1803               	skipnc
  9640  01F5  29F7               	goto	u6131
  9641  01F6  29F8               	goto	u6130
  9642  01F7                     u6131:
  9643  01F7  29D8               	goto	l3848
  9644  01F8                     u6130:
  9645  01F8  2A99               	goto	l339
  9646  01F9                     l3856:
  9647                           
  9648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9649  01F9  3020               	movlw	32
  9650  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  9651  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  9652  01FC  00A8               	movwf	??_sprintf^(0+128)
  9653  01FD  0846               	movf	sprintf@sp^(0+128),w
  9654  01FE  0084               	movwf	4
  9655  01FF  0828               	movf	??_sprintf^(0+128),w
  9656  0200  1383               	bcf	3,7	;select IRP bank0
  9657  0201  0080               	movwf	0
  9658  0202                     l3858:
  9659  0202  3001               	movlw	1
  9660  0203  00A8               	movwf	??_sprintf^(0+128)
  9661  0204  0828               	movf	??_sprintf^(0+128),w
  9662  0205  07C6               	addwf	sprintf@sp^(0+128),f
  9663  0206                     l3860:
  9664                           
  9665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
  9666  0206  30FF               	movlw	255
  9667  0207  07BE               	addwf	sprintf@width^(0+128),f
  9668  0208  1803               	skipnc
  9669  0209  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9670  020A  30FF               	movlw	255
  9671  020B  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9672  020C                     l3862:
  9673                           
  9674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9675  020C  083F               	movf	(sprintf@width+1)^(0+128),w
  9676  020D  3A80               	xorlw	128
  9677  020E  00FF               	movwf	btemp+1
  9678  020F  3080               	movlw	128
  9679  0210  027F               	subwf	btemp+1,w
  9680  0211  1D03               	skipz
  9681  0212  2A15               	goto	u6145
  9682  0213  3001               	movlw	1
  9683  0214  023E               	subwf	sprintf@width^(0+128),w
  9684  0215                     u6145:
  9685  0215  1803               	skipnc
  9686  0216  2A18               	goto	u6141
  9687  0217  2A19               	goto	u6140
  9688  0218                     u6141:
  9689  0218  29F9               	goto	l3856
  9690  0219                     u6140:
  9691  0219                     l3864:
  9692                           
  9693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9694  0219  3003               	movlw	3
  9695  021A  1683               	bsf	3,5	;RP0=1, select bank1
  9696  021B  1303               	bcf	3,6	;RP1=0, select bank1
  9697  021C  053C               	andwf	sprintf@flag^(0+128),w
  9698  021D  00A8               	movwf	??_sprintf^(0+128)
  9699  021E  3000               	movlw	0
  9700  021F  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9701  0220  00A9               	movwf	(??_sprintf+1)^(0+128)
  9702  0221  0828               	movf	??_sprintf^(0+128),w
  9703  0222  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9704  0223  1903               	btfsc	3,2
  9705  0224  2A26               	goto	u6151
  9706  0225  2A27               	goto	u6150
  9707  0226                     u6151:
  9708  0226  2A99               	goto	l339
  9709  0227                     u6150:
  9710  0227                     l3866:
  9711                           
  9712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9713  0227  302D               	movlw	45
  9714  0228  00A8               	movwf	??_sprintf^(0+128)
  9715  0229  0846               	movf	sprintf@sp^(0+128),w
  9716  022A  0084               	movwf	4
  9717  022B  0828               	movf	??_sprintf^(0+128),w
  9718  022C  1383               	bcf	3,7	;select IRP bank0
  9719  022D  0080               	movwf	0
  9720  022E                     l3868:
  9721  022E  3001               	movlw	1
  9722  022F  00A8               	movwf	??_sprintf^(0+128)
  9723  0230  0828               	movf	??_sprintf^(0+128),w
  9724  0231  07C6               	addwf	sprintf@sp^(0+128),f
  9725  0232  2A99               	goto	l339
  9726  0233                     l3870:
  9727                           
  9728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9729  0233  0847               	movf	sprintf@c^(0+128),w
  9730  0234  00A8               	movwf	??_sprintf^(0+128)
  9731  0235  3001               	movlw	1
  9732  0236                     u6165:
  9733  0236  1003               	clrc
  9734  0237  0DA8               	rlf	??_sprintf^(0+128),f
  9735  0238  3EFF               	addlw	-1
  9736  0239  1D03               	skipz
  9737  023A  2A36               	goto	u6165
  9738  023B  1003               	clrc
  9739  023C  0D28               	rlf	??_sprintf^(0+128),w
  9740  023D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9741  023E  0084               	movwf	4
  9742  023F  160A  158A  2000  120A  118A  	fcall	stringdir
  9743  0244  00F2               	movwf	___lldiv@divisor
  9744  0245  160A  158A  2000  120A  118A  	fcall	stringdir
  9745  024A  00F3               	movwf	___lldiv@divisor+1
  9746  024B  160A  158A  2000  120A  118A  	fcall	stringdir
  9747  0250  00F4               	movwf	___lldiv@divisor+2
  9748  0251  160A  158A  2000  120A  118A  	fcall	stringdir
  9749  0256  00F5               	movwf	___lldiv@divisor+3
  9750  0257  0835               	movf	(sprintf@val+3)^(0+128),w
  9751  0258  00F9               	movwf	___lldiv@dividend+3
  9752  0259  0834               	movf	(sprintf@val+2)^(0+128),w
  9753  025A  00F8               	movwf	___lldiv@dividend+2
  9754  025B  0833               	movf	(sprintf@val+1)^(0+128),w
  9755  025C  00F7               	movwf	___lldiv@dividend+1
  9756  025D  0832               	movf	sprintf@val^(0+128),w
  9757  025E  00F6               	movwf	___lldiv@dividend
  9758  025F  160A  158A  26B3  120A  118A  	fcall	___lldiv
  9759  0264  0875               	movf	?___lldiv+3,w
  9760  0265  1683               	bsf	3,5	;RP0=1, select bank1
  9761  0266  1303               	bcf	3,6	;RP1=0, select bank1
  9762  0267  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9763  0268  0874               	movf	?___lldiv+2,w
  9764  0269  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9765  026A  0873               	movf	?___lldiv+1,w
  9766  026B  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9767  026C  0872               	movf	?___lldiv,w
  9768  026D  00B6               	movwf	sprintf@tmpval^(0+128)
  9769  026E                     l3872:
  9770                           
  9771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9772  026E  3000               	movlw	0
  9773  026F  00F5               	movwf	___llmod@divisor+3
  9774  0270  3000               	movlw	0
  9775  0271  00F4               	movwf	___llmod@divisor+2
  9776  0272  3000               	movlw	0
  9777  0273  00F3               	movwf	___llmod@divisor+1
  9778  0274  300A               	movlw	10
  9779  0275  00F2               	movwf	___llmod@divisor
  9780  0276  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9781  0277  00F9               	movwf	___llmod@dividend+3
  9782  0278  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9783  0279  00F8               	movwf	___llmod@dividend+2
  9784  027A  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9785  027B  00F7               	movwf	___llmod@dividend+1
  9786  027C  0836               	movf	sprintf@tmpval^(0+128),w
  9787  027D  00F6               	movwf	___llmod@dividend
  9788  027E  160A  158A  265D  120A  118A  	fcall	___llmod
  9789  0283  0875               	movf	?___llmod+3,w
  9790  0284  1683               	bsf	3,5	;RP0=1, select bank1
  9791  0285  1303               	bcf	3,6	;RP1=0, select bank1
  9792  0286  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9793  0287  0874               	movf	?___llmod+2,w
  9794  0288  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9795  0289  0873               	movf	?___llmod+1,w
  9796  028A  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9797  028B  0872               	movf	?___llmod,w
  9798  028C  00B6               	movwf	sprintf@tmpval^(0+128)
  9799  028D                     l3874:
  9800                           
  9801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9802  028D  0836               	movf	sprintf@tmpval^(0+128),w
  9803  028E  3E30               	addlw	48
  9804  028F  00A8               	movwf	??_sprintf^(0+128)
  9805  0290  0846               	movf	sprintf@sp^(0+128),w
  9806  0291  0084               	movwf	4
  9807  0292  0828               	movf	??_sprintf^(0+128),w
  9808  0293  1383               	bcf	3,7	;select IRP bank0
  9809  0294  0080               	movwf	0
  9810  0295  3001               	movlw	1
  9811  0296  00A8               	movwf	??_sprintf^(0+128)
  9812  0297  0828               	movf	??_sprintf^(0+128),w
  9813  0298  07C6               	addwf	sprintf@sp^(0+128),f
  9814  0299                     l339:	
  9815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9816                           
  9817                           
  9818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9819  0299  3001               	movlw	1
  9820  029A  1683               	bsf	3,5	;RP0=1, select bank1
  9821  029B  1303               	bcf	3,6	;RP1=0, select bank1
  9822  029C  02C7               	subwf	sprintf@c^(0+128),f
  9823  029D  0A47               	incf	sprintf@c^(0+128),w
  9824  029E  1D03               	btfss	3,2
  9825  029F  2AA1               	goto	u6171
  9826  02A0  2AA2               	goto	u6170
  9827  02A1                     u6171:
  9828  02A1  2A33               	goto	l3870
  9829  02A2                     u6170:
  9830  02A2  2AB6               	goto	l3882
  9831  02A3                     l3876:
  9832                           
  9833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9834  02A3  3030               	movlw	48
  9835  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  9836  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  9837  02A6  00A8               	movwf	??_sprintf^(0+128)
  9838  02A7  0846               	movf	sprintf@sp^(0+128),w
  9839  02A8  0084               	movwf	4
  9840  02A9  0828               	movf	??_sprintf^(0+128),w
  9841  02AA  1383               	bcf	3,7	;select IRP bank0
  9842  02AB  0080               	movwf	0
  9843  02AC                     l3878:
  9844  02AC  3001               	movlw	1
  9845  02AD  00A8               	movwf	??_sprintf^(0+128)
  9846  02AE  0828               	movf	??_sprintf^(0+128),w
  9847  02AF  07C6               	addwf	sprintf@sp^(0+128),f
  9848  02B0                     l3880:
  9849                           
  9850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9851  02B0  30FF               	movlw	255
  9852  02B1  07BA               	addwf	sprintf@eexp^(0+128),f
  9853  02B2  1803               	skipnc
  9854  02B3  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  9855  02B4  30FF               	movlw	255
  9856  02B5  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  9857  02B6                     l3882:
  9858                           
  9859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9860  02B6  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9861  02B7  3A80               	xorlw	128
  9862  02B8  00FF               	movwf	btemp+1
  9863  02B9  3080               	movlw	128
  9864  02BA  027F               	subwf	btemp+1,w
  9865  02BB  1D03               	skipz
  9866  02BC  2ABF               	goto	u6185
  9867  02BD  3001               	movlw	1
  9868  02BE  023A               	subwf	sprintf@eexp^(0+128),w
  9869  02BF                     u6185:
  9870  02BF  1803               	skipnc
  9871  02C0  2AC2               	goto	u6181
  9872  02C1  2AC3               	goto	u6180
  9873  02C2                     u6181:
  9874  02C2  2AA3               	goto	l3876
  9875  02C3                     u6180:
  9876  02C3                     l3884:
  9877                           
  9878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9879  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  9880  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  9881  02C5  0845               	movf	(sprintf@prec+1)^(0+128),w
  9882  02C6  3A80               	xorlw	128
  9883  02C7  00FF               	movwf	btemp+1
  9884  02C8  3080               	movlw	128
  9885  02C9  027F               	subwf	btemp+1,w
  9886  02CA  1D03               	skipz
  9887  02CB  2ACE               	goto	u6195
  9888  02CC  3009               	movlw	9
  9889  02CD  0244               	subwf	sprintf@prec^(0+128),w
  9890  02CE                     u6195:
  9891  02CE  1C03               	skipc
  9892  02CF  2AD1               	goto	u6191
  9893  02D0  2AD2               	goto	u6190
  9894  02D1                     u6191:
  9895  02D1  2AD9               	goto	l3888
  9896  02D2                     u6190:
  9897  02D2                     l3886:
  9898                           
  9899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9900  02D2  3008               	movlw	8
  9901  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  9902  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  9903  02D5  00A8               	movwf	??_sprintf^(0+128)
  9904  02D6  0828               	movf	??_sprintf^(0+128),w
  9905  02D7  00C7               	movwf	sprintf@c^(0+128)
  9906  02D8  2ADF               	goto	l346
  9907  02D9                     l3888:
  9908                           
  9909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9910  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  9911  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  9912  02DB  0844               	movf	sprintf@prec^(0+128),w
  9913  02DC  00A8               	movwf	??_sprintf^(0+128)
  9914  02DD  0828               	movf	??_sprintf^(0+128),w
  9915  02DE  00C7               	movwf	sprintf@c^(0+128)
  9916  02DF                     l346:
  9917                           
  9918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9919  02DF  0847               	movf	sprintf@c^(0+128),w
  9920  02E0  00A8               	movwf	??_sprintf^(0+128)
  9921  02E1  01A9               	clrf	(??_sprintf^(0+128)+1)
  9922  02E2  0828               	movf	??_sprintf^(0+128),w
  9923  02E3  02C4               	subwf	sprintf@prec^(0+128),f
  9924  02E4  0829               	movf	(??_sprintf+1)^(0+128),w
  9925  02E5  1C03               	skipc
  9926  02E6  03C5               	decf	(sprintf@prec+1)^(0+128),f
  9927  02E7  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  9928  02E8                     l3890:
  9929                           
  9930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9931  02E8  0847               	movf	sprintf@c^(0+128),w
  9932  02E9  1903               	btfsc	3,2
  9933  02EA  2AEC               	goto	u6201
  9934  02EB  2AED               	goto	u6200
  9935  02EC                     u6201:
  9936  02EC  2AF8               	goto	l3896
  9937  02ED                     u6200:
  9938  02ED                     l3892:
  9939                           
  9940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9941  02ED  302E               	movlw	46
  9942  02EE  00A8               	movwf	??_sprintf^(0+128)
  9943  02EF  0846               	movf	sprintf@sp^(0+128),w
  9944  02F0  0084               	movwf	4
  9945  02F1  0828               	movf	??_sprintf^(0+128),w
  9946  02F2  1383               	bcf	3,7	;select IRP bank0
  9947  02F3  0080               	movwf	0
  9948  02F4                     l3894:
  9949  02F4  3001               	movlw	1
  9950  02F5  00A8               	movwf	??_sprintf^(0+128)
  9951  02F6  0828               	movf	??_sprintf^(0+128),w
  9952  02F7  07C6               	addwf	sprintf@sp^(0+128),f
  9953  02F8                     l3896:
  9954                           
  9955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9956  02F8  0847               	movf	sprintf@c^(0+128),w
  9957  02F9  120A  158A  249D  120A  118A  	fcall	_scale
  9958  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  9959  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  9960  0300  0845               	movf	?_scale+3,w
  9961  0301  1683               	bsf	3,5	;RP0=1, select bank1
  9962  0302  1303               	bcf	3,6	;RP1=0, select bank1
  9963  0303  00B0               	movwf	(_sprintf$1127+3)^(0+128)
  9964  0304  1283               	bcf	3,5	;RP0=0, select bank0
  9965  0305  1303               	bcf	3,6	;RP1=0, select bank0
  9966  0306  0844               	movf	?_scale+2,w
  9967  0307  1683               	bsf	3,5	;RP0=1, select bank1
  9968  0308  1303               	bcf	3,6	;RP1=0, select bank1
  9969  0309  00AF               	movwf	(_sprintf$1127+2)^(0+128)
  9970  030A  1283               	bcf	3,5	;RP0=0, select bank0
  9971  030B  1303               	bcf	3,6	;RP1=0, select bank0
  9972  030C  0843               	movf	?_scale+1,w
  9973  030D  1683               	bsf	3,5	;RP0=1, select bank1
  9974  030E  1303               	bcf	3,6	;RP1=0, select bank1
  9975  030F  00AE               	movwf	(_sprintf$1127+1)^(0+128)
  9976  0310  1283               	bcf	3,5	;RP0=0, select bank0
  9977  0311  1303               	bcf	3,6	;RP1=0, select bank0
  9978  0312  0842               	movf	?_scale,w
  9979  0313  1683               	bsf	3,5	;RP0=1, select bank1
  9980  0314  1303               	bcf	3,6	;RP1=0, select bank1
  9981  0315  00AD               	movwf	_sprintf$1127^(0+128)
  9982  0316                     l3898:
  9983                           
  9984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9985  0316  0830               	movf	(_sprintf$1127+3)^(0+128),w
  9986  0317  1283               	bcf	3,5	;RP0=0, select bank0
  9987  0318  1303               	bcf	3,6	;RP1=0, select bank0
  9988  0319  00AF               	movwf	___flmul@a+3
  9989  031A  1683               	bsf	3,5	;RP0=1, select bank1
  9990  031B  1303               	bcf	3,6	;RP1=0, select bank1
  9991  031C  082F               	movf	(_sprintf$1127+2)^(0+128),w
  9992  031D  1283               	bcf	3,5	;RP0=0, select bank0
  9993  031E  1303               	bcf	3,6	;RP1=0, select bank0
  9994  031F  00AE               	movwf	___flmul@a+2
  9995  0320  1683               	bsf	3,5	;RP0=1, select bank1
  9996  0321  1303               	bcf	3,6	;RP1=0, select bank1
  9997  0322  082E               	movf	(_sprintf$1127+1)^(0+128),w
  9998  0323  1283               	bcf	3,5	;RP0=0, select bank0
  9999  0324  1303               	bcf	3,6	;RP1=0, select bank0
 10000  0325  00AD               	movwf	___flmul@a+1
 10001  0326  1683               	bsf	3,5	;RP0=1, select bank1
 10002  0327  1303               	bcf	3,6	;RP1=0, select bank1
 10003  0328  082D               	movf	_sprintf$1127^(0+128),w
 10004  0329  1283               	bcf	3,5	;RP0=0, select bank0
 10005  032A  1303               	bcf	3,6	;RP1=0, select bank0
 10006  032B  00AC               	movwf	___flmul@a
 10007  032C  1683               	bsf	3,5	;RP0=1, select bank1
 10008  032D  1303               	bcf	3,6	;RP1=0, select bank1
 10009  032E  0843               	movf	(sprintf@fval+3)^(0+128),w
 10010  032F  1283               	bcf	3,5	;RP0=0, select bank0
 10011  0330  1303               	bcf	3,6	;RP1=0, select bank0
 10012  0331  00AB               	movwf	___flmul@b+3
 10013  0332  1683               	bsf	3,5	;RP0=1, select bank1
 10014  0333  1303               	bcf	3,6	;RP1=0, select bank1
 10015  0334  0842               	movf	(sprintf@fval+2)^(0+128),w
 10016  0335  1283               	bcf	3,5	;RP0=0, select bank0
 10017  0336  1303               	bcf	3,6	;RP1=0, select bank0
 10018  0337  00AA               	movwf	___flmul@b+2
 10019  0338  1683               	bsf	3,5	;RP0=1, select bank1
 10020  0339  1303               	bcf	3,6	;RP1=0, select bank1
 10021  033A  0841               	movf	(sprintf@fval+1)^(0+128),w
 10022  033B  1283               	bcf	3,5	;RP0=0, select bank0
 10023  033C  1303               	bcf	3,6	;RP1=0, select bank0
 10024  033D  00A9               	movwf	___flmul@b+1
 10025  033E  1683               	bsf	3,5	;RP0=1, select bank1
 10026  033F  1303               	bcf	3,6	;RP1=0, select bank1
 10027  0340  0840               	movf	sprintf@fval^(0+128),w
 10028  0341  1283               	bcf	3,5	;RP0=0, select bank0
 10029  0342  1303               	bcf	3,6	;RP1=0, select bank0
 10030  0343  00A8               	movwf	___flmul@b
 10031  0344  120A  158A  213C  120A  118A  	fcall	___flmul
 10032  0349  1283               	bcf	3,5	;RP0=0, select bank0
 10033  034A  1303               	bcf	3,6	;RP1=0, select bank0
 10034  034B  082B               	movf	?___flmul+3,w
 10035  034C  00D8               	movwf	___fltol@f1+3
 10036  034D  082A               	movf	?___flmul+2,w
 10037  034E  00D7               	movwf	___fltol@f1+2
 10038  034F  0829               	movf	?___flmul+1,w
 10039  0350  00D6               	movwf	___fltol@f1+1
 10040  0351  0828               	movf	?___flmul,w
 10041  0352  00D5               	movwf	___fltol@f1
 10042  0353  160A  158A  2784  120A  118A  	fcall	___fltol
 10043  0358  1283               	bcf	3,5	;RP0=0, select bank0
 10044  0359  1303               	bcf	3,6	;RP1=0, select bank0
 10045  035A  0858               	movf	?___fltol+3,w
 10046  035B  1683               	bsf	3,5	;RP0=1, select bank1
 10047  035C  1303               	bcf	3,6	;RP1=0, select bank1
 10048  035D  00B5               	movwf	(sprintf@val+3)^(0+128)
 10049  035E  1283               	bcf	3,5	;RP0=0, select bank0
 10050  035F  1303               	bcf	3,6	;RP1=0, select bank0
 10051  0360  0857               	movf	?___fltol+2,w
 10052  0361  1683               	bsf	3,5	;RP0=1, select bank1
 10053  0362  1303               	bcf	3,6	;RP1=0, select bank1
 10054  0363  00B4               	movwf	(sprintf@val+2)^(0+128)
 10055  0364  1283               	bcf	3,5	;RP0=0, select bank0
 10056  0365  1303               	bcf	3,6	;RP1=0, select bank0
 10057  0366  0856               	movf	?___fltol+1,w
 10058  0367  1683               	bsf	3,5	;RP0=1, select bank1
 10059  0368  1303               	bcf	3,6	;RP1=0, select bank1
 10060  0369  00B3               	movwf	(sprintf@val+1)^(0+128)
 10061  036A  1283               	bcf	3,5	;RP0=0, select bank0
 10062  036B  1303               	bcf	3,6	;RP1=0, select bank0
 10063  036C  0855               	movf	?___fltol,w
 10064  036D  1683               	bsf	3,5	;RP0=1, select bank1
 10065  036E  1303               	bcf	3,6	;RP1=0, select bank1
 10066  036F  00B2               	movwf	sprintf@val^(0+128)
 10067                           
 10068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10069  0370  2C12               	goto	l3908
 10070  0371                     l3900:
 10071                           
 10072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10073  0371  0847               	movf	sprintf@c^(0+128),w
 10074  0372  00A8               	movwf	??_sprintf^(0+128)
 10075  0373  3001               	movlw	1
 10076  0374                     u6215:
 10077  0374  1003               	clrc
 10078  0375  0DA8               	rlf	??_sprintf^(0+128),f
 10079  0376  3EFF               	addlw	-1
 10080  0377  1D03               	skipz
 10081  0378  2B74               	goto	u6215
 10082  0379  1003               	clrc
 10083  037A  0D28               	rlf	??_sprintf^(0+128),w
 10084  037B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10085  037C  0084               	movwf	4
 10086  037D  160A  158A  2000  120A  118A  	fcall	stringdir
 10087  0382  00F2               	movwf	___lldiv@divisor
 10088  0383  160A  158A  2000  120A  118A  	fcall	stringdir
 10089  0388  00F3               	movwf	___lldiv@divisor+1
 10090  0389  160A  158A  2000  120A  118A  	fcall	stringdir
 10091  038E  00F4               	movwf	___lldiv@divisor+2
 10092  038F  160A  158A  2000  120A  118A  	fcall	stringdir
 10093  0394  00F5               	movwf	___lldiv@divisor+3
 10094  0395  0835               	movf	(sprintf@val+3)^(0+128),w
 10095  0396  00F9               	movwf	___lldiv@dividend+3
 10096  0397  0834               	movf	(sprintf@val+2)^(0+128),w
 10097  0398  00F8               	movwf	___lldiv@dividend+2
 10098  0399  0833               	movf	(sprintf@val+1)^(0+128),w
 10099  039A  00F7               	movwf	___lldiv@dividend+1
 10100  039B  0832               	movf	sprintf@val^(0+128),w
 10101  039C  00F6               	movwf	___lldiv@dividend
 10102  039D  160A  158A  26B3  120A  118A  	fcall	___lldiv
 10103  03A2  0875               	movf	?___lldiv+3,w
 10104  03A3  1683               	bsf	3,5	;RP0=1, select bank1
 10105  03A4  1303               	bcf	3,6	;RP1=0, select bank1
 10106  03A5  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
 10107  03A6  0874               	movf	?___lldiv+2,w
 10108  03A7  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
 10109  03A8  0873               	movf	?___lldiv+1,w
 10110  03A9  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
 10111  03AA  0872               	movf	?___lldiv,w
 10112  03AB  00B6               	movwf	sprintf@tmpval^(0+128)
 10113  03AC                     l3902:
 10114                           
 10115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10116  03AC  3000               	movlw	0
 10117  03AD  00F5               	movwf	___llmod@divisor+3
 10118  03AE  3000               	movlw	0
 10119  03AF  00F4               	movwf	___llmod@divisor+2
 10120  03B0  3000               	movlw	0
 10121  03B1  00F3               	movwf	___llmod@divisor+1
 10122  03B2  300A               	movlw	10
 10123  03B3  00F2               	movwf	___llmod@divisor
 10124  03B4  0839               	movf	(sprintf@tmpval+3)^(0+128),w
 10125  03B5  00F9               	movwf	___llmod@dividend+3
 10126  03B6  0838               	movf	(sprintf@tmpval+2)^(0+128),w
 10127  03B7  00F8               	movwf	___llmod@dividend+2
 10128  03B8  0837               	movf	(sprintf@tmpval+1)^(0+128),w
 10129  03B9  00F7               	movwf	___llmod@dividend+1
 10130  03BA  0836               	movf	sprintf@tmpval^(0+128),w
 10131  03BB  00F6               	movwf	___llmod@dividend
 10132  03BC  160A  158A  265D  120A  118A  	fcall	___llmod
 10133  03C1  0875               	movf	?___llmod+3,w
 10134  03C2  1683               	bsf	3,5	;RP0=1, select bank1
 10135  03C3  1303               	bcf	3,6	;RP1=0, select bank1
 10136  03C4  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
 10137  03C5  0874               	movf	?___llmod+2,w
 10138  03C6  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
 10139  03C7  0873               	movf	?___llmod+1,w
 10140  03C8  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
 10141  03C9  0872               	movf	?___llmod,w
 10142  03CA  00B6               	movwf	sprintf@tmpval^(0+128)
 10143  03CB                     l3904:
 10144                           
 10145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10146  03CB  0836               	movf	sprintf@tmpval^(0+128),w
 10147  03CC  3E30               	addlw	48
 10148  03CD  00A8               	movwf	??_sprintf^(0+128)
 10149  03CE  0846               	movf	sprintf@sp^(0+128),w
 10150  03CF  0084               	movwf	4
 10151  03D0  0828               	movf	??_sprintf^(0+128),w
 10152  03D1  1383               	bcf	3,7	;select IRP bank0
 10153  03D2  0080               	movwf	0
 10154  03D3  3001               	movlw	1
 10155  03D4  00A8               	movwf	??_sprintf^(0+128)
 10156  03D5  0828               	movf	??_sprintf^(0+128),w
 10157  03D6  07C6               	addwf	sprintf@sp^(0+128),f
 10158  03D7                     l3906:
 10159                           
 10160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10161  03D7  0847               	movf	sprintf@c^(0+128),w
 10162  03D8  00A8               	movwf	??_sprintf^(0+128)
 10163  03D9  3001               	movlw	1
 10164  03DA                     u6225:
 10165  03DA  1003               	clrc
 10166  03DB  0DA8               	rlf	??_sprintf^(0+128),f
 10167  03DC  3EFF               	addlw	-1
 10168  03DD  1D03               	skipz
 10169  03DE  2BDA               	goto	u6225
 10170  03DF  1003               	clrc
 10171  03E0  0D28               	rlf	??_sprintf^(0+128),w
 10172  03E1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10173  03E2  0084               	movwf	4
 10174  03E3  160A  158A  2000  120A  118A  	fcall	stringdir
 10175  03E8  00F2               	movwf	___llmod@divisor
 10176  03E9  160A  158A  2000  120A  118A  	fcall	stringdir
 10177  03EE  00F3               	movwf	___llmod@divisor+1
 10178  03EF  160A  158A  2000  120A  118A  	fcall	stringdir
 10179  03F4  00F4               	movwf	___llmod@divisor+2
 10180  03F5  160A  158A  2000  120A  118A  	fcall	stringdir
 10181  03FA  00F5               	movwf	___llmod@divisor+3
 10182  03FB  0835               	movf	(sprintf@val+3)^(0+128),w
 10183  03FC  00F9               	movwf	___llmod@dividend+3
 10184  03FD  0834               	movf	(sprintf@val+2)^(0+128),w
 10185  03FE  00F8               	movwf	___llmod@dividend+2
 10186  03FF  0833               	movf	(sprintf@val+1)^(0+128),w
 10187  0400  00F7               	movwf	___llmod@dividend+1
 10188  0401  0832               	movf	sprintf@val^(0+128),w
 10189  0402  00F6               	movwf	___llmod@dividend
 10190  0403  160A  158A  265D  120A  118A  	fcall	___llmod
 10191  0408  0875               	movf	?___llmod+3,w
 10192  0409  1683               	bsf	3,5	;RP0=1, select bank1
 10193  040A  1303               	bcf	3,6	;RP1=0, select bank1
 10194  040B  00B5               	movwf	(sprintf@val+3)^(0+128)
 10195  040C  0874               	movf	?___llmod+2,w
 10196  040D  00B4               	movwf	(sprintf@val+2)^(0+128)
 10197  040E  0873               	movf	?___llmod+1,w
 10198  040F  00B3               	movwf	(sprintf@val+1)^(0+128)
 10199  0410  0872               	movf	?___llmod,w
 10200  0411  00B2               	movwf	sprintf@val^(0+128)
 10201  0412                     l3908:
 10202                           
 10203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10204  0412  3001               	movlw	1
 10205  0413  02C7               	subwf	sprintf@c^(0+128),f
 10206  0414  0A47               	incf	sprintf@c^(0+128),w
 10207  0415  1D03               	btfss	3,2
 10208  0416  2C18               	goto	u6231
 10209  0417  2C19               	goto	u6230
 10210  0418                     u6231:
 10211  0418  2B71               	goto	l3900
 10212  0419                     u6230:
 10213  0419  2C2B               	goto	l3916
 10214  041A                     l3910:
 10215                           
 10216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10217  041A  3030               	movlw	48
 10218  041B  00A8               	movwf	??_sprintf^(0+128)
 10219  041C  0846               	movf	sprintf@sp^(0+128),w
 10220  041D  0084               	movwf	4
 10221  041E  0828               	movf	??_sprintf^(0+128),w
 10222  041F  1383               	bcf	3,7	;select IRP bank0
 10223  0420  0080               	movwf	0
 10224  0421                     l3912:
 10225  0421  3001               	movlw	1
 10226  0422  00A8               	movwf	??_sprintf^(0+128)
 10227  0423  0828               	movf	??_sprintf^(0+128),w
 10228  0424  07C6               	addwf	sprintf@sp^(0+128),f
 10229  0425                     l3914:
 10230                           
 10231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10232  0425  30FF               	movlw	255
 10233  0426  07C4               	addwf	sprintf@prec^(0+128),f
 10234  0427  1803               	skipnc
 10235  0428  0AC5               	incf	(sprintf@prec+1)^(0+128),f
 10236  0429  30FF               	movlw	255
 10237  042A  07C5               	addwf	(sprintf@prec+1)^(0+128),f
 10238  042B                     l3916:
 10239                           
 10240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10241  042B  0844               	movf	sprintf@prec^(0+128),w
 10242  042C  0445               	iorwf	(sprintf@prec+1)^(0+128),w
 10243  042D  1D03               	btfss	3,2
 10244  042E  2C30               	goto	u6241
 10245  042F  2C31               	goto	u6240
 10246  0430                     u6241:
 10247  0430  2C1A               	goto	l3910
 10248  0431                     u6240:
 10249  0431  2D30               	goto	l3980
 10250  0432                     l3918:
 10251                           
 10252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10253  0432  0844               	movf	sprintf@prec^(0+128),w
 10254  0433  0445               	iorwf	(sprintf@prec+1)^(0+128),w
 10255  0434  1D03               	btfss	3,2
 10256  0435  2C37               	goto	u6251
 10257  0436  2C38               	goto	u6250
 10258  0437                     u6251:
 10259  0437  2C46               	goto	l354
 10260  0438                     u6250:
 10261  0438                     l3920:
 10262  0438  0835               	movf	(sprintf@val+3)^(0+128),w
 10263  0439  0434               	iorwf	(sprintf@val+2)^(0+128),w
 10264  043A  0433               	iorwf	(sprintf@val+1)^(0+128),w
 10265  043B  0432               	iorwf	sprintf@val^(0+128),w
 10266  043C  1D03               	skipz
 10267  043D  2C3F               	goto	u6261
 10268  043E  2C40               	goto	u6260
 10269  043F                     u6261:
 10270  043F  2C46               	goto	l354
 10271  0440                     u6260:
 10272  0440                     l3922:
 10273                           
 10274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10275  0440  3001               	movlw	1
 10276  0441  07C4               	addwf	sprintf@prec^(0+128),f
 10277  0442  1803               	skipnc
 10278  0443  0AC5               	incf	(sprintf@prec+1)^(0+128),f
 10279  0444  3000               	movlw	0
 10280  0445  07C5               	addwf	(sprintf@prec+1)^(0+128),f
 10281  0446                     l354:
 10282                           
 10283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10284  0446  0845               	movf	(sprintf@prec+1)^(0+128),w
 10285  0447  3A80               	xorlw	128
 10286  0448  3C80               	sublw	128
 10287  0449  1D03               	skipz
 10288  044A  2C4D               	goto	u6275
 10289  044B  0844               	movf	sprintf@prec^(0+128),w
 10290  044C  0247               	subwf	sprintf@c^(0+128),w
 10291  044D                     u6275:
 10292  044D  1803               	skipnc
 10293  044E  2C50               	goto	u6271
 10294  044F  2C51               	goto	u6270
 10295  0450                     u6271:
 10296  0450  2C58               	goto	l3926
 10297  0451                     u6270:
 10298  0451                     l3924:
 10299                           
 10300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10301  0451  1683               	bsf	3,5	;RP0=1, select bank1
 10302  0452  1303               	bcf	3,6	;RP1=0, select bank1
 10303  0453  0844               	movf	sprintf@prec^(0+128),w
 10304  0454  00A8               	movwf	??_sprintf^(0+128)
 10305  0455  0828               	movf	??_sprintf^(0+128),w
 10306  0456  00C7               	movwf	sprintf@c^(0+128)
 10307  0457  2C70               	goto	l3930
 10308  0458                     l3926:
 10309  0458  1683               	bsf	3,5	;RP0=1, select bank1
 10310  0459  1303               	bcf	3,6	;RP1=0, select bank1
 10311  045A  0845               	movf	(sprintf@prec+1)^(0+128),w
 10312  045B  3A80               	xorlw	128
 10313  045C  00A8               	movwf	??_sprintf^(0+128)
 10314  045D  3080               	movlw	128
 10315  045E  0228               	subwf	??_sprintf^(0+128),w
 10316  045F  1D03               	skipz
 10317  0460  2C63               	goto	u6285
 10318  0461  0847               	movf	sprintf@c^(0+128),w
 10319  0462  0244               	subwf	sprintf@prec^(0+128),w
 10320  0463                     u6285:
 10321  0463  1803               	skipnc
 10322  0464  2C66               	goto	u6281
 10323  0465  2C67               	goto	u6280
 10324  0466                     u6281:
 10325  0466  2C70               	goto	l3930
 10326  0467                     u6280:
 10327  0467                     l3928:
 10328                           
 10329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10330  0467  1683               	bsf	3,5	;RP0=1, select bank1
 10331  0468  1303               	bcf	3,6	;RP1=0, select bank1
 10332  0469  0847               	movf	sprintf@c^(0+128),w
 10333  046A  00A8               	movwf	??_sprintf^(0+128)
 10334  046B  01A9               	clrf	(??_sprintf^(0+128)+1)
 10335  046C  0828               	movf	??_sprintf^(0+128),w
 10336  046D  00C4               	movwf	sprintf@prec^(0+128)
 10337  046E  0829               	movf	(??_sprintf+1)^(0+128),w
 10338  046F  00C5               	movwf	(sprintf@prec+1)^(0+128)
 10339  0470                     l3930:
 10340                           
 10341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10342  0470  1683               	bsf	3,5	;RP0=1, select bank1
 10343  0471  1303               	bcf	3,6	;RP1=0, select bank1
 10344  0472  083E               	movf	sprintf@width^(0+128),w
 10345  0473  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10346  0474  1903               	btfsc	3,2
 10347  0475  2C77               	goto	u6291
 10348  0476  2C78               	goto	u6290
 10349  0477                     u6291:
 10350  0477  2C8A               	goto	l3936
 10351  0478                     u6290:
 10352  0478                     l3932:
 10353  0478  3003               	movlw	3
 10354  0479  053C               	andwf	sprintf@flag^(0+128),w
 10355  047A  00A8               	movwf	??_sprintf^(0+128)
 10356  047B  3000               	movlw	0
 10357  047C  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10358  047D  00A9               	movwf	(??_sprintf+1)^(0+128)
 10359  047E  0828               	movf	??_sprintf^(0+128),w
 10360  047F  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10361  0480  1903               	btfsc	3,2
 10362  0481  2C83               	goto	u6301
 10363  0482  2C84               	goto	u6300
 10364  0483                     u6301:
 10365  0483  2C8A               	goto	l3936
 10366  0484                     u6300:
 10367  0484                     l3934:
 10368                           
 10369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10370  0484  30FF               	movlw	255
 10371  0485  07BE               	addwf	sprintf@width^(0+128),f
 10372  0486  1803               	skipnc
 10373  0487  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10374  0488  30FF               	movlw	255
 10375  0489  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10376  048A                     l3936:
 10377                           
 10378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10379  048A  1F3D               	btfss	(sprintf@flag+1)^(0+128),6
 10380  048B  2C8D               	goto	u6311
 10381  048C  2C8E               	goto	u6310
 10382  048D                     u6311:
 10383  048D  2CA9               	goto	l3944
 10384  048E                     u6310:
 10385  048E                     l3938:
 10386                           
 10387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10388  048E  0845               	movf	(sprintf@prec+1)^(0+128),w
 10389  048F  3A80               	xorlw	128
 10390  0490  00A8               	movwf	??_sprintf^(0+128)
 10391  0491  083F               	movf	(sprintf@width+1)^(0+128),w
 10392  0492  3A80               	xorlw	128
 10393  0493  0228               	subwf	??_sprintf^(0+128),w
 10394  0494  1D03               	skipz
 10395  0495  2C98               	goto	u6325
 10396  0496  083E               	movf	sprintf@width^(0+128),w
 10397  0497  0244               	subwf	sprintf@prec^(0+128),w
 10398  0498                     u6325:
 10399  0498  1803               	skipnc
 10400  0499  2C9B               	goto	u6321
 10401  049A  2C9C               	goto	u6320
 10402  049B                     u6321:
 10403  049B  2CA5               	goto	l3942
 10404  049C                     u6320:
 10405  049C                     l3940:
 10406                           
 10407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10408  049C  1683               	bsf	3,5	;RP0=1, select bank1
 10409  049D  1303               	bcf	3,6	;RP1=0, select bank1
 10410  049E  0844               	movf	sprintf@prec^(0+128),w
 10411  049F  02BE               	subwf	sprintf@width^(0+128),f
 10412  04A0  0845               	movf	(sprintf@prec+1)^(0+128),w
 10413  04A1  1C03               	skipc
 10414  04A2  03BF               	decf	(sprintf@width+1)^(0+128),f
 10415  04A3  02BF               	subwf	(sprintf@width+1)^(0+128),f
 10416  04A4  2CA9               	goto	l3944
 10417  04A5                     l3942:
 10418                           
 10419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10420  04A5  1683               	bsf	3,5	;RP0=1, select bank1
 10421  04A6  1303               	bcf	3,6	;RP1=0, select bank1
 10422  04A7  01BE               	clrf	sprintf@width^(0+128)
 10423  04A8  01BF               	clrf	(sprintf@width+1)^(0+128)
 10424  04A9                     l3944:
 10425                           
 10426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10427  04A9  083F               	movf	(sprintf@width+1)^(0+128),w
 10428  04AA  3A80               	xorlw	128
 10429  04AB  3C80               	sublw	128
 10430  04AC  1D03               	skipz
 10431  04AD  2CB0               	goto	u6335
 10432  04AE  083E               	movf	sprintf@width^(0+128),w
 10433  04AF  0247               	subwf	sprintf@c^(0+128),w
 10434  04B0                     u6335:
 10435  04B0  1803               	skipnc
 10436  04B1  2CB3               	goto	u6331
 10437  04B2  2CB4               	goto	u6330
 10438  04B3                     u6331:
 10439  04B3  2CC0               	goto	l3948
 10440  04B4                     u6330:
 10441  04B4                     l3946:
 10442                           
 10443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10444  04B4  1683               	bsf	3,5	;RP0=1, select bank1
 10445  04B5  1303               	bcf	3,6	;RP1=0, select bank1
 10446  04B6  0847               	movf	sprintf@c^(0+128),w
 10447  04B7  00A8               	movwf	??_sprintf^(0+128)
 10448  04B8  01A9               	clrf	(??_sprintf^(0+128)+1)
 10449  04B9  0828               	movf	??_sprintf^(0+128),w
 10450  04BA  02BE               	subwf	sprintf@width^(0+128),f
 10451  04BB  0829               	movf	(??_sprintf+1)^(0+128),w
 10452  04BC  1C03               	skipc
 10453  04BD  03BF               	decf	(sprintf@width+1)^(0+128),f
 10454  04BE  02BF               	subwf	(sprintf@width+1)^(0+128),f
 10455  04BF  2CC4               	goto	l3950
 10456  04C0                     l3948:
 10457                           
 10458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10459  04C0  1683               	bsf	3,5	;RP0=1, select bank1
 10460  04C1  1303               	bcf	3,6	;RP1=0, select bank1
 10461  04C2  01BE               	clrf	sprintf@width^(0+128)
 10462  04C3  01BF               	clrf	(sprintf@width+1)^(0+128)
 10463  04C4                     l3950:
 10464                           
 10465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
 10466  04C4  1D3C               	btfss	sprintf@flag^(0+128),2
 10467  04C5  2CC7               	goto	u6341
 10468  04C6  2CC8               	goto	u6340
 10469  04C7                     u6341:
 10470  04C7  2CFD               	goto	l3966
 10471  04C8                     u6340:
 10472  04C8                     l3952:
 10473                           
 10474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
 10475  04C8  3003               	movlw	3
 10476  04C9  053C               	andwf	sprintf@flag^(0+128),w
 10477  04CA  00A8               	movwf	??_sprintf^(0+128)
 10478  04CB  3000               	movlw	0
 10479  04CC  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10480  04CD  00A9               	movwf	(??_sprintf+1)^(0+128)
 10481  04CE  0828               	movf	??_sprintf^(0+128),w
 10482  04CF  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10483  04D0  1903               	btfsc	3,2
 10484  04D1  2CD3               	goto	u6351
 10485  04D2  2CD4               	goto	u6350
 10486  04D3                     u6351:
 10487  04D3  2CDF               	goto	l3958
 10488  04D4                     u6350:
 10489  04D4                     l3954:
 10490                           
 10491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
 10492  04D4  302D               	movlw	45
 10493  04D5  00A8               	movwf	??_sprintf^(0+128)
 10494  04D6  0846               	movf	sprintf@sp^(0+128),w
 10495  04D7  0084               	movwf	4
 10496  04D8  0828               	movf	??_sprintf^(0+128),w
 10497  04D9  1383               	bcf	3,7	;select IRP bank0
 10498  04DA  0080               	movwf	0
 10499  04DB                     l3956:
 10500  04DB  3001               	movlw	1
 10501  04DC  00A8               	movwf	??_sprintf^(0+128)
 10502  04DD  0828               	movf	??_sprintf^(0+128),w
 10503  04DE  07C6               	addwf	sprintf@sp^(0+128),f
 10504  04DF                     l3958:
 10505                           
 10506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
 10507  04DF  083E               	movf	sprintf@width^(0+128),w
 10508  04E0  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10509  04E1  1903               	btfsc	3,2
 10510  04E2  2CE4               	goto	u6361
 10511  04E3  2CE5               	goto	u6360
 10512  04E4                     u6361:
 10513  04E4  2D30               	goto	l3980
 10514  04E5                     u6360:
 10515  04E5                     l3960:
 10516                           
 10517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
 10518  04E5  3030               	movlw	48
 10519  04E6  00A8               	movwf	??_sprintf^(0+128)
 10520  04E7  0846               	movf	sprintf@sp^(0+128),w
 10521  04E8  0084               	movwf	4
 10522  04E9  0828               	movf	??_sprintf^(0+128),w
 10523  04EA  1383               	bcf	3,7	;select IRP bank0
 10524  04EB  0080               	movwf	0
 10525  04EC                     l3962:
 10526  04EC  3001               	movlw	1
 10527  04ED  00A8               	movwf	??_sprintf^(0+128)
 10528  04EE  0828               	movf	??_sprintf^(0+128),w
 10529  04EF  07C6               	addwf	sprintf@sp^(0+128),f
 10530  04F0                     l3964:
 10531  04F0  30FF               	movlw	255
 10532  04F1  07BE               	addwf	sprintf@width^(0+128),f
 10533  04F2  1803               	skipnc
 10534  04F3  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10535  04F4  30FF               	movlw	255
 10536  04F5  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10537  04F6  083E               	movf	sprintf@width^(0+128),w
 10538  04F7  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10539  04F8  1D03               	btfss	3,2
 10540  04F9  2CFB               	goto	u6371
 10541  04FA  2CFC               	goto	u6370
 10542  04FB                     u6371:
 10543  04FB  2CE5               	goto	l3960
 10544  04FC                     u6370:
 10545  04FC  2D30               	goto	l3980
 10546  04FD                     l3966:
 10547                           
 10548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10549  04FD  083E               	movf	sprintf@width^(0+128),w
 10550  04FE  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10551  04FF  1903               	btfsc	3,2
 10552  0500  2D02               	goto	u6381
 10553  0501  2D03               	goto	u6380
 10554  0502                     u6381:
 10555  0502  2D1A               	goto	l3974
 10556  0503                     u6380:
 10557  0503                     l3968:
 10558                           
 10559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10560  0503  3020               	movlw	32
 10561  0504  00A8               	movwf	??_sprintf^(0+128)
 10562  0505  0846               	movf	sprintf@sp^(0+128),w
 10563  0506  0084               	movwf	4
 10564  0507  0828               	movf	??_sprintf^(0+128),w
 10565  0508  1383               	bcf	3,7	;select IRP bank0
 10566  0509  0080               	movwf	0
 10567  050A                     l3970:
 10568  050A  3001               	movlw	1
 10569  050B  00A8               	movwf	??_sprintf^(0+128)
 10570  050C  0828               	movf	??_sprintf^(0+128),w
 10571  050D  07C6               	addwf	sprintf@sp^(0+128),f
 10572  050E                     l3972:
 10573  050E  30FF               	movlw	255
 10574  050F  07BE               	addwf	sprintf@width^(0+128),f
 10575  0510  1803               	skipnc
 10576  0511  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10577  0512  30FF               	movlw	255
 10578  0513  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10579  0514  083E               	movf	sprintf@width^(0+128),w
 10580  0515  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10581  0516  1D03               	btfss	3,2
 10582  0517  2D19               	goto	u6391
 10583  0518  2D1A               	goto	u6390
 10584  0519                     u6391:
 10585  0519  2D03               	goto	l3968
 10586  051A                     u6390:
 10587  051A                     l3974:
 10588                           
 10589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10590  051A  3003               	movlw	3
 10591  051B  053C               	andwf	sprintf@flag^(0+128),w
 10592  051C  00A8               	movwf	??_sprintf^(0+128)
 10593  051D  3000               	movlw	0
 10594  051E  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10595  051F  00A9               	movwf	(??_sprintf+1)^(0+128)
 10596  0520  0828               	movf	??_sprintf^(0+128),w
 10597  0521  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10598  0522  1903               	btfsc	3,2
 10599  0523  2D25               	goto	u6401
 10600  0524  2D26               	goto	u6400
 10601  0525                     u6401:
 10602  0525  2D30               	goto	l3980
 10603  0526                     u6400:
 10604  0526                     l3976:
 10605                           
 10606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10607  0526  302D               	movlw	45
 10608  0527  00A8               	movwf	??_sprintf^(0+128)
 10609  0528  0846               	movf	sprintf@sp^(0+128),w
 10610  0529  0084               	movwf	4
 10611  052A  0828               	movf	??_sprintf^(0+128),w
 10612  052B  1383               	bcf	3,7	;select IRP bank0
 10613  052C  0080               	movwf	0
 10614  052D  160A  118A  2D14   	goto	l3698
 10615  0530                     l3980:
 10616                           
 10617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10618  0530  3001               	movlw	1
 10619  0531  1283               	bcf	3,5	;RP0=0, select bank0
 10620  0532  1303               	bcf	3,6	;RP1=0, select bank0
 10621  0533  07EA               	addwf	sprintf@f,f
 10622  0534  30FF               	movlw	-1
 10623  0535  076A               	addwf	sprintf@f,w
 10624  0536  0084               	movwf	4
 10625  0537  160A  158A  2000  120A  118A  	fcall	stringdir
 10626  053C  1683               	bsf	3,5	;RP0=1, select bank1
 10627  053D  1303               	bcf	3,6	;RP1=0, select bank1
 10628  053E  00A8               	movwf	??_sprintf^(0+128)
 10629  053F  0828               	movf	??_sprintf^(0+128),w
 10630  0540  00C7               	movwf	sprintf@c^(0+128)
 10631  0541  0847               	movf	sprintf@c^(0+128),w
 10632  0542  1D03               	btfss	3,2
 10633  0543  2D45               	goto	u6411
 10634  0544  2D48               	goto	u6410
 10635  0545                     u6411:
 10636  0545  160A  118A  2D07   	goto	l3694
 10637  0548                     u6410:
 10638  0548                     l3982:
 10639                           
 10640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10641  0548  0846               	movf	sprintf@sp^(0+128),w
 10642  0549  0084               	movwf	4
 10643  054A  1383               	bcf	3,7	;select IRP bank0
 10644  054B  0180               	clrf	0
 10645  054C                     l375:
 10646  054C  0008               	return
 10647  054D                     __end_of_sprintf:

Data Sizes:
    Strings     9
    Constant    144
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     79      79
    BANK1            80     43      66
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> f1(BANK1[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 15
		 -> f1(BANK1[15]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    _send_crct->_send_char
    _conv->___xxtofl

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34458
                                             40 BANK1      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _cfg_clk
                             _cfg_io
                          _cfg_usart
                               _conv
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   33271
                                             74 BANK0      5     0      5
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6139
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              3 COMMON     4     4      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                 8     4      4     595
                                              6 BANK0      8     4      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     326
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _cfg_clk
   _cfg_io
   _cfg_usart
   _conv
     ___xxtofl
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2B      42       7       82.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 24 21:26:34 2021

                        _D 00CF                          _V 00D1                          _i 007B  
                        _v 00CB                          pc 0002                         l86 1C92  
                       l95 1014                         l89 1C45                         _f1 00D3  
             ___awdiv@sign 0025                         fsr 0004        ___wmul@multiplicand 0074  
      __Umul8_16@word_mpld 0078                        l101 1CC5                        l110 1CE9  
                      l104 1C6B                        l107 1C73                        l142 1C74  
                      l302 15F9                        l160 1D34                        l145 1C80  
                      l161 1D37                        l162 1D3C                        l154 1C5F  
                      l148 1C56                        l157 1C69                        l415 1F1A  
                      l600 11F4                        l274 0FFF                        l354 0446  
                      l346 02DF                        l267 14FC                        l339 0299  
                      l532 1F83                        l381 1D0E                        l710 0657  
                      l550 1254                        l607 1224                        l375 054C  
                      l287 151E                        l712 062E                        l560 12E2  
                      l553 12B2                        l545 0863                        l570 1033  
                      l706 05B0                        l802 0C9C                        l731 0746  
                      l635 1EB2                        l379 1CF6                        l740 07A6  
                      l565 1DDB                        l573 109F                        l549 12EF  
                      l821 07E9                        l566 1DF7                        l574 10B8  
                      l582 1FFF                        l814 0C90                        l567 1E0C  
                      l727 0722                        l719 07D4                        l823 07FB  
                      l752 1E5C                        l592 1FFF                        l808 0C08  
                      l737 0768                        l578 080A                        l860 114A  
                      l852 1122                        l748 07C8                        l596 1231  
                      l749 07D4                        l589 1FEA                        l597 11A3  
                      l685 1DBC                        l846 10DD                        l695 1D76  
                      l848 1174                        l866 1CA4                        l859 113E  
                      _GIE 005F                        _isr 1C37                        fsr0 0004  
                      indf 0000               ___awmod@sign 0078               ___flmul@aexp 003A  
             ___flmul@bexp 003B               ___flmul@sign 0035               ___flmul@temp 0040  
             ___flmul@prod 003C               ___fltol@exp1 005F                       l3000 1DBD  
                     l3002 1DD3                       l3004 1DEF                       l3020 1053  
                     l3012 1015                       l3110 10E5                       l3102 10BC  
                     l3006 1E09                       l3022 1077                       l3014 102B  
                     l2310 07F2                       l2302 07D6                       l3120 1107  
                     l3104 10C1                       l3200 1CC6                       l3008 1E0B  
                     l3024 107B                       l3016 1047                       l3032 0800  
                     l3040 1F84                       l2312 07F7                       l2304 07D8  
                     l2320 1F22                       l4000 0869                       l3130 1138  
                     l3122 110B                       l3114 10EE                       l3106 10C5  
                     l3202 1CE1                       l3026 10B5                       l3018 104F  
                     l3034 0808                       l3050 1FB0                       l3042 1F91  
                     l2306 07DF                       l2330 1F36                       l2322 1F27  
                     l4010 088A                       l4002 086E                       l3140 116B  
                     l3132 1142                       l3124 1119                       l3116 10F3  
                     l3108 10D5                       l3028 10B7                       l3036 080A  
                     l2500 05CA                       l3052 1FB8                       l2308 07E3  
                     l2340 1F4C                       l2332 1F38                       l2324 1F29  
                     l2316 1F1B                       l4020 08C3                       l4012 0893  
                     l4004 0873                       l3150 1C88                       l3142 116C  
                     l3134 114C                       l3126 1129                       l3118 1100  
                     l2510 05DE                       l2502 05CE                       l3070 1FDF  
                     l3062 1FC6                       l3054 1FBA                       l3046 1F9A  
                     l2430 1D4D                       l2350 1F6F                       l2342 1F50  
                     l2334 1F3E                       l2326 1F2D                       l2318 1F1E  
                     l4022 08D7                       l4014 08A7                       l4006 0878  
                     l3152 1C89                       l3160 100C                       l3136 1162  
                     l3128 1134                       l2600 0756                       l2520 05F2  
                     l2512 05E2                       l2504 05D2                       l3072 1FEF  
                     l3056 1FBE                       l3064 1FD8                       l3048 1FAF  
                     l2440 1D6C                       l2432 1D51                       l2424 1D3D  
                     l2344 1F61                       l2336 1F41                       l2352 1F75  
                     l2328 1F32                       l2360 080B                       l4024 0900  
                     l4016 08AC                       l4008 0881                       l3170 1C44  
                     l3146 1C81                       l3162 100F                       l3154 1000  
                     l3138 1167                       l2602 075A                       l2530 0632  
                     l2522 05F6                       l2514 05E6                       l2506 05D6  
                     l2450 055A                       l3074 1FF4                       l2434 1D55  
                     l2426 1D43                       l2442 1D72                       l2354 1F7A  
                     l2346 1F67                       l2338 1F48                       l2370 081B  
                     l2362 080C                       l4026 0924                       l4018 08B5  
                     l3172 1C4E                       l3180 1C57                       l3148 1C85  
                     l3164 1010                       l3156 1007                       l2620 07A2  
                     l2612 076D                       l2604 075B                       l2540 064B  
                     l2532 063B                       l2516 05EA                       l2508 05DA  
                     l2524 05FA                       l2460 0571                       l2452 055E  
                     l2700 0A6C                       l2436 1D5F                       l2428 1D46  
                     l2356 1F7F                       l2348 1F68                       l2380 0834  
                     l2372 0820                       l2364 0810                       l4028 092A  
                     l3190 1D25                       l3174 1C53                       l3182 1C5C  
                     l3166 1011                       l3158 100B                       l2630 07BE  
                     l2622 07AB                       l2614 0772                       l2606 075F  
                     l2550 0669                       l2534 063D                       l2542 064F  
                     l2526 05FB                       l2518 05EE                       l2470 0587  
                     l2462 0572                       l2454 055F                       l2446 054D  
                     l2710 0ADF                       l2702 0A7C                       l2438 1D65  
                     l2382 0838                       l2374 0826                       l2390 0855  
                     l2366 0815                       l3192 1D2A                       l3184 1D0F  
                     l3176 1C60                       l3168 1C3E                       l3512 1CA6  
                     l2632 07C2                       l2624 07B0                       l2616 0780  
                     l2608 0765                       l2560 0693                       l2552 0680  
                     l2544 065B                       l2536 0641                       l2528 0612  
                     l2480 0598                       l2472 0588                       l2456 0564  
                     l2464 0574                       l2448 0554                       l3096 1E0D  
                     l2720 0B8C                       l2712 0AFC                       l2704 0A99  
                     l2640 093C                       l2392 085A                       l2384 0842  
                     l2376 0829                       l2368 0817                       l3194 1D30  
                     l3186 1D14                       l3178 1C65                       l3514 1CA9  
                     l2634 07C4                       l2626 07B8                       l2618 0784  
                     l2570 06BC                       l2562 0697                       l2554 0684  
                     l2546 0660                       l2538 0642                       l2490 05B6  
                     l2482 059D                       l2474 058E                       l2466 057C  
                     l2458 0569                       l3098 1E11                       l2730 0BD8  
                     l2722 0BB4                       l2714 0B29                       l2706 0AA9  
                     l2650 0953                       l2642 0943                       l2394 085F  
                     l2386 0848                       l2378 0830                       l2810 0CA6  
                     l4090 1536                       l3196 1D38                       l3188 1D1C  
                     l3516 1CB4                       l2636 07CF                       l2628 07BD  
                     l2580 072A                       l2572 06FA                       l2564 0698  
                     l2556 0688                       l2492 05BA                       l2484 05A5  
                     l2476 0592                       l2468 0581                       l2740 0BED  
                     l2732 0BD9                       l2724 0BBD                       l2716 0B39  
                     l2708 0AC6                       l2660 096F                       l2652 0958  
                     l2644 0949                       l2388 084F                       l2820 0D9E  
                     l2812 0CAD                       l4092 1611                       l3700 1519  
                     l3518 1CBA                       l2638 07D3                       l2590 0745  
                     l2582 072F                       l2574 0700                       l2566 06A1  
                     l2558 0691                       l2494 05BE                       l2486 05A6  
                     l2478 0593                       l2910 1232                       l2750 0C12  
                     l2742 0BF1                       l2734 0BE2                       l2726 0BCB  
                     l2718 0B66                       l2670 0984                       l2662 0975  
                     l2654 0960                       l2646 094D                       l3630 1D7B  
                     l2830 0E5A                       l2806 0CA0                       l3710 154D  
                     l3702 151F                       l2592 074A                       l2576 0705  
                     l2568 06A6                       l2496 05C2                       l2488 05A8  
                     l2912 123F                       l2904 1219                       l2760 0C50  
                     l2752 0C20                       l2744 0C05                       l2728 0BD4  
                     l2736 0BE8                       l2680 09A0                       l2672 098C  
                     l2664 0979                       l2656 0962                       l2648 094E  
                     l3640 1D93                       l3632 1D81                       l2824 0E26  
                     l2808 0CA4                       l3800 006E                       l3712 1551  
                     l3720 1593                       l2594 074D                       l2586 0738  
                     l2578 0714                       l2498 05C6                       l2930 1279  
                     l2922 1255                       l2906 1229                       l2770 0C84  
                     l2762 0C5B                       l2754 0C24                       l2738 0BEC  
                     l2690 09E3                       l2674 098E                       l2666 097A  
                     l2658 096A                       l3642 1DA4                       l3634 1D84  
                     l3650 1DB8                       l2850 1C9B                       l2842 0FD3  
                     l2818 0D97                       l3802 0089                       l3730 15C4  
                     l3722 15A1                       l3714 1566                       l3706 1525  
                     l2780 1C6B                       l2596 074F                       l2588 0741  
                     l2940 12AC                       l2932 1282                       l2924 125D  
                     l2916 1248                       l2860 1188                       l2772 0C88  
                     l2764 0C6A                       l2756 0C3D                       l2748 0C0D  
                     l2692 09FF                       l2684 09A9                       l2676 0996  
                     l2668 097F                       l3644 1DAA                       l3636 1D8B  
                     l3628 1D77                       l2852 1CA1                       l2836 0F44  
                     l2828 0E53                       l3900 0371                       l3820 0146  
                     l3812 00D7                       l3804 0092                       l3732 15DB  
                     l3724 15A4                       l3716 157D                       l3708 153B  
                     l2782 1C71                       l2598 0754                       l2942 12B6  
                     l2950 12D0                       l2934 1294                       l2926 126E  
                     l2870 11A4                       l2774 0C89                       l2766 0C74  
                     l2758 0C43                       l2694 0A2B                       l2686 09B9  
                     l2678 099B                       l3646 1DAB                       l3638 1D8F  
                     l3662 1408                       l3654 12F3                       l2854 1CA3  
                     l2846 1C94                       l2838 0F4B                       l3910 041A  
                     l3902 03AC                       l3830 017F                       l3806 009A  
                     l3814 00E0                       l3750 162F                       l3742 15FB  
                     l3734 15E1                       l3726 15AA                       l3718 1583  
                     l2784 1C74                       l3680 1E7B                       l3672 1E5D  
                     l2936 12A2                       l2928 1270                       l2880 11CD  
                     l2872 11AA                       l2864 1191                       l2776 0C94  
                     l2768 0C76                       l2696 0A47                       l2688 09C6  
                     l3648 1DB2                       l3664 140E                       l3656 12F9  
                     l2848 1C95                       l3920 0438                       l3912 0421  
                     l3904 03CB                       l3840 01BC                       l3832 0189  
                     l3816 0115                       l3808 00B8                       l3760 1677  
                     l3752 163D                       l3744 1619                       l3728 15AF  
                     l3736 15F3                       l2786 1C7A                       l3682 1E8D  
                     l3674 1E65                       l2970 1D04                       l2962 1CEA  
                     l2938 12A3                       l2890 11F8                       l2882 11DB  
                     l2874 11B9                       l2858 1175                       l2698 0A63  
                     l3930 0470                       l3922 0440                       l3914 0425  
                     l3906 03D7                       l3850 01E1                       l3842 01C0  
                     l3834 01A4                       l3826 0148                       l3818 0144  
                     l3770 16B8                       l3762 167B                       l3754 1641  
                     l3746 1627                       l3738 15F7                       l2980 1EC8  
                     l3684 1E9B                       l3676 1E6A                       l2972 1D0A  
                     l2964 1CEC                       l2956 12D7                       l2948 12BE  
                     l2884 11E5                       l2876 11BB                       l3668 14B9  
                     l3940 049C                       l3932 0478                       l3924 0451  
                     l3916 042B                       l3908 0412                       l3860 0206  
                     l3852 01E5                       l3844 01CC                       l3836 01AA  
                     l3780 174F                       l3772 16DB                       l3764 1694  
                     l3756 165A                       l3748 162B                       l3692 1500  
                     l2990 1F02                       l2982 1ED5                       l3686 1EA4  
                     l3678 1E77                       l2966 1CF0                       l2958 12E7  
                     l2886 11E6                       l2878 11C4                       l3950 04C4  
                     l3942 04A5                       l3934 0484                       l3926 0458  
                     l3870 0233                       l3846 01D3                       l3854 01EB  
                     l3862 020C                       l3838 01B6                       l3790 17A3  
                     l3782 1768                       l3774 16DF                       l3766 169F  
                     l3758 1673                       l3918 0432                       l3694 1507  
                     l2992 1F03                       l2984 1ED9                       l2976 1EB3  
                     l3688 1EAA                       l2968 1CFD                       l2896 1200  
                     l2888 11EE                       l3960 04E5                       l3952 04C8  
                     l3944 04A9                       l3936 048A                       l3928 0467  
                     l3880 02B0                       l3872 026E                       l3864 0219  
                     l3856 01F9                       l3848 01D8                       l3792 17EA  
                     l3784 1771                       l3776 16E5                       l3768 16A5  
                     l3696 150D                       l2994 1F0C                       l2986 1EE2  
                     l2978 1EC5                       l2898 1212                       l3970 050A  
                     l3962 04EC                       l3954 04D4                       l3946 04B4  
                     l3938 048E                       l3890 02E8                       l3882 02B6  
                     l3874 028D                       l3866 0227                       l3858 0202  
                     l3794 001D                       l3786 178C                       l3778 1704  
                     l3698 1514                       l2988 1EF4                       l2996 1F12  
                     l3972 050E                       l3964 04F0                       l3956 04DB  
                     l3948 04C0                       l3892 02ED                       l3884 02C3  
                     l3876 02A3                       l3868 022E                       l3796 0038  
                     l3788 1794                       l3980 0530                       l3974 051A  
                     l3958 04DF                       l3966 04FD                       l3894 02F4  
                     l3886 02D2                       l3878 02AC                       l3798 005F  
                     l3982 0548                       l3976 0526                       l3968 0503  
                     l3896 02F8                       l3888 02D9                       l3898 0316  
                     ?_isr 0070                       l3998 0864                       STR_1 1896  
                     u3010 0838                       u3011 0837                       u3020 0842  
                     u3021 0841                       u3005 082A                       u3200 0564  
                     u4000 0C6A                       u3040 0855                       u3201 0563  
                     u4001 0C69                       u3041 0854                       u3025 083E  
                     u3210 0569                       u4010 0C88                       u3130 1D43  
                     u3050 085A                       u3211 0568                       u4011 0C87  
                     u3131 1D42                       u3051 0859                       u3035 0849  
                     u4020 1C71                       u3300 061E                       u3220 0587  
                     u4021 1C70                       u3221 0586                       u4005 0C66  
                     u4030 1C7A                       u3310 0632                       u3230 0592  
                     u3150 1D55                       u4031 1C79                       u3311 0631  
                     u3231 0591                       u3151 1D54                       u4040 1C80  
                     u5000 1106                       u3400 0697                       u3320 0641  
                     u3240 0598                       u3160 1D5F                       u4041 1C7F  
                     u5001 1105                       u3401 0696                       u3321 0640  
                     u3241 0597                       u3161 1D5E                       u3145 1D47  
                     u3250 059D                       u4130 0CA4                       u3251 059C  
                     u4131 0CA3                       u5100 1D30                       u5020 1128  
                     u3500 074A                       u3420 06BC                       u3340 0657  
                     u3260 05B6                       u3180 1D72                       u4300 1C9B  
                     u4220 0E5A                       u4140 0CAD                       u5101 1D2F  
                     u5021 1127                       u3501 0749                       u3421 06BB  
                     u3341 0656                       u3261 05B5                       u3181 1D71  
                     u3165 1D5B                       u4301 1C9A                       u4221 0E59  
                     u4205 0DED                       u4141 0CAC                       u3510 0754  
                     u3350 065B                       u3270 05BA                       u3190 055E  
                     u4310 1CA1                       u5015 111A                       u3511 0753  
                     u3431 06D3                       u3423 06B8                       u3415 069A  
                     u3351 065A                       u3335 0644                       u3271 05B9  
                     u3191 055D                       u3175 1D66                       u4311 1CA0  
                     u4215 0E29                       u5040 1138                       u3600 07AB  
                     u3520 075A                       u3440 06E7                       u3432 06D4  
                     u3360 0660                       u3280 0612                       u4320 1188  
                     u6000 17A3                       u5041 1137                       u3601 07AA  
                     u3521 0759                       u3441 06E8                       u3433 06D9  
                     u3361 065F                       u3281 0611                       u4321 1187  
                     u6001 17A2                       u5050 113E                       u3610 07B0  
                     u3530 075F                       u3450 0705                       u3442 06ED  
                     u3434 06DA                       u3290 061D                       u4410 1211  
                     u4330 11A2                       u6010 001D                       u5051 113D  
                     u5035 112D                       u3611 07AF                       u3531 075E  
                     u3451 0704                       u3443 06EE                       u3435 06DF  
                     u3371 0672                       u3291 061B                       u4411 1210  
                     u4331 11A1                       u4235 0E7C                       u4155 0CCF  
                     u6011 17FA                       u5060 1142                       u3620 07BD  
                     u3540 0765                       u3460 072A                       u3436 06E0  
                     u3380 0684                       u3372 0679                       u4500 12B2  
                     u4420 1218                       u3700 0984                       u4260 0F4B  
                     u4180 0D9E                       u6100 01B6                       u6020 0038  
                     u5061 1141                       u3621 07BC                       u3541 0764  
                     u3461 0729                       u3381 0683                       u3373 0680  
                     u3285 060E                       u4501 12B1                       u4421 1217  
                     u4405 1201                       u3701 0983                       u4261 0F4A  
                     u4245 0EB8                       u4181 0D9D                       u4165 0D0B  
                     u6101 01B5                       u6021 0037                       u6005 179F  
                     u5070 1157                       u3630 07C2                       u3550 076C  
                     u3470 072F                       u3390 0688                       u4510 12B6  
                     u4350 11DB                       u3710 099B                       u2910 1F50  
                     u6110 01C0                       u6030 005F                       u3631 07C1  
                     u3551 076B                       u3471 072E                       u3391 0687  
                     u4511 12B5                       u4351 11DA                       u3711 099A  
                     u2911 1F4F                       u4255 0F03                       u4175 0D56  
                     u6111 01BF                       u6031 005E                       u6015 17F5  
                     u5080 1167                       u3640 07D3                       u3560 0772  
                     u4520 12BD                       u4440 1229                       u2840 07E3  
                     u3720 09A0                       u6200 02ED                       u6120 01CC  
                     u6040 006E                       u5081 1166                       u3641 07D2  
                     u3561 0771                       u4521 12BC                       u4441 1228  
                     u4345 11C6                       u2841 07E2                       u3721 099F  
                     u2905 1F42                       u6201 02EC                       u6121 01CB  
                     u6041 006D                       u5090 116B                       u3570 0784  
                     u3490 0745                       u4610 1D0A                       u4450 123F  
                     u4370 11F4                       u3650 094D                       u2930 1F61  
                     u6130 01F8                       u6050 0089                       u5091 116A  
                     u5075 1152                       u3571 0783                       u3491 0744  
                     u4611 1D09                       u4451 123E                       u4435 121B  
                     u4371 11F3                       u4355 11D7                       u3811 0AEE  
                     u3731 09F1                       u3651 094C                       u2931 1F60  
                     u4275 0F5E                       u4195 0DB1                       u6131 01F7  
                     u6051 0088                       _PEIE 005E                       u4700 1DEF  
                     u3580 0793                       u4620 1EC5                       u4540 12CF  
                     u4460 1253                       u4380 11F8                       u2860 07F7  
                     u3900 0BD8                       u3812 0AF5                       u3732 09F8  
                     u3660 0953                       u6300 0484                       u6140 0219  
                     u4701 1DEE                       u3485 073A                       u4621 1EC4  
                     u4605 1CFE                       u4541 12CE                       u4461 1252  
                     u4381 11F7                       u4365 11E7                       u2861 07F6  
                     u3901 0BD7                       u3821 0B1B                       u3813 0AFC  
                     u3805 0AC8                       u3741 0A0D                       u3733 09FF  
                     u3661 0952                       u2925 1F51                       u4285 0F9A  
                     u6301 0483                       u6141 0218                       u6045 006A  
                     u4710 1E09                       u3590 07A2                       u4550 12D6  
                     u4390 11FF                       u3822 0B22                       u3742 0A14  
                     u3670 0958                       u2950 1F75                       u2870 1F22  
                     u6310 048E                       u6230 0419                       u6150 0227  
                     u6070 017E                       u4711 1E08                       u3591 07A1  
                     u4551 12D5                       u4535 12BF                       u4391 11FE  
                     u2855 07EA                       u3831 0B48                       u3823 0B29  
                     u3751 0A39                       u3743 0A1B                       u3671 0957  
                     u2951 1F74                       u2935 1F5D                       u2871 1F21  
                     u4295 0FD6                       u6311 048D                       u6231 0418  
                     u6215 0374                       u6151 0226                       u6135 01F4  
                     u6071 017D                       u4720 102B                       u4800 1F91  
                     u4640 1ED9                       u4480 1294                       u3920 0BEC  
                     u3840 0B72                       u3832 0B4F                       u3752 0A40  
                     u3680 0979                       u2960 1F7A                       u2880 1F2D  
                     u6400 0526                       u6320 049C                       u6240 0431  
                     u6080 0189                       u4721 102A                       u3585 078E  
                     u4801 1F90                       u4641 1ED8                       u4481 1293  
                     u3921 0BEB                       u3833 0B56                       u3761 0A55  
                     u3753 0A47                       u3681 0978                       u2961 1F79  
                     u2945 1F69                       u2881 1F2C                       u6401 0525  
                     u6321 049B                       u6241 0430                       u6225 03DA  
                     u6145 0215                       u6081 0188                       u6065 014B  
                     u4730 1047                       u4810 1FA8                       u4570 12E7  
                     u3930 0BF1                       u3762 0A5C                       u3690 097F  
                     u2890 1F3E                       u2970 0810                       u6410 0548  
                     u6330 04B4                       u6250 0438                       u6170 02A2  
                     u6090 01A4                       u4715 1E05                       u4731 1046  
                     u4635 1ECA                       u4571 12E6                       u4475 127B  
                     u3931 0BF0                       u3915 0BDB                       u3851 0B7E  
                     u3763 0A63                       u3691 097E                       u2891 1F3D  
                     u2971 080F                       u6411 0545                       u6331 04B3  
                     u6251 0437                       u6171 02A1                       u6091 01A3  
                     u6075 017A                       u4740 1053                       u4820 1FBE  
                     u4660 1EF4                       u4580 1CF0                       u3940 0C05  
                     u3860 0B9A                       u3852 0B85                       u2980 081B  
                     u6340 04C8                       u6260 0440                       u6180 02C3  
                     u4741 1052                       u4821 1FBD                       u4661 1EF3  
                     u4581 1CEF                       u4565 12D9                       u4485 1290  
                     u3941 0C04                       u3853 0B8C                       u3845 0B6D  
                     u3781 0A8B                       u2981 081A                       u6341 04C7  
                     u6325 0498                       u6261 043F                       u6181 02C2  
                     u6165 0236                       u4830 1FC5                       u3950 0C0C  
                     u3782 0A92                       u5710 1DA4                       u2990 0826  
                     u6350 04D4                       u6270 0451                       u6190 02D2  
                     u4751 1062                       u4831 1FC4                       u4815 1FA3  
                     u4655 1EDB                       u4495 12A5                       u3951 0C0B  
                     u3871 0BA6                       u3791 0AB8                       u3783 0A99  
                     u3775 0A65                       u5711 1DA3                       u2991 0825  
                     u6351 04D3                       u6335 04B0                       u6271 0450  
                     u6191 02D1                       u4760 107B                       u4752 1063  
                     u4680 1F12                       u3960 0C12                       u3872 0BAD  
                     u3792 0ABF                       u6360 04E5                       u6280 0467  
                     u4761 107A                       u4753 1068                       u4681 1F11  
                     u4665 1EF0                       u3961 0C11                       u3873 0BB4  
                     u3865 0B95                       u3793 0AC6                       u5705 1D94  
                     u6361 04E4                       u6281 0466                       u6185 02BF  
                     u5650 1CC5                       u4690 1DD3                       u4754 1069  
                     u4850 1FD7                       u3970 0C24                       u5730 1DB8  
                     u6370 04FC                       u6290 0478                       i1l75 1C37  
                     u5651 1CC4                       u4691 1DD2                       u4771 108A  
                     u4755 106E                       u4851 1FD6                       u4675 1F04  
                     u4595 1CF7                       u3971 0C23                       u5731 1DB7  
                     u5715 1DA0                       u6371 04FB                       u6291 0477  
                     u6275 044D                       u6195 02CE                       u6427 08A0  
                     u4780 10B5                       u4772 108B                       u4756 106F  
                     u4860 1FDE                       u5820 1E65                       u3980 0C33  
                     u5740 12F9                       u6380 0503                       u5900 1593  
                     u4781 10B4                       u4773 1090                       u4861 1FDD  
                     u4845 1FC7                       u5821 1E64                       u3885 0BB6  
                     u5725 1DAC                       u5805 1478                       u5741 12F8  
                     u6381 0502                       u6285 0463                       u5901 1592  
                     u6437 08D0                       u4774 1091                       u4790 0808  
                     u3990 0C50                       u5670 1D81                       u6390 051A  
                     u5910 15A1                       u4775 1096                       u4791 0807  
                     u3991 0C4F                       u3895 0BCD                       u5671 1D80  
                     u5815 14C4                       u6391 0519                       u5911 15A0  
                     u6447 0932                       u4960 10C1                       u4776 1097  
                     u4880 1FEF                       u5840 1E7B                       u5920 15F2  
                     u4961 10C0                       u4785 10B1                       u4881 1FEE  
                     u5841 1E7A                       u3985 0C2E                       u5921 15F1  
                     u4970 10C5                       u4890 1FF4                       u5850 1E8D  
                     u5690 1D93                       u5930 1627                       u4971 10C4  
                     u4891 1FF3                       u4875 1FE1                       u5851 1E8C  
                     u5835 1E6C                       u3995 0C4C                       u5691 1D92  
                     u5755 1316                       u5931 1624                       u4980 10E5  
                     u5780 140E                       u5940 162B                       u4981 10E4  
                     u5685 1D85                       u5781 140D                       u5765 1372  
                     u5941 162A                       u5870 1EAA                       u5950 165A  
                     u5871 1EA9                       u5855 1E89                       u5775 13C7  
                     u5951 1659                       u5960 1694                       u5880 150D  
                     u5865 1E9C                       u5961 1693                       u5881 150C  
                     u5970 16DF                       u5890 154D                       u4995 10F8  
                     u5795 142B                       u5971 16DE                       u5891 154C  
                     u5980 1768                       u5981 1767                       u5990 178C  
                     u5991 178B                       _TXIF 0064                       _conv 1CC6  
                     _main 0864                       btemp 007E                       start 000C  
             _sprintf$1127 00AD                      ??_isr 0070           ?_I2C_Master_Read 0072  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070              ___fltol@sign1 005E  
                    ?_conv 0026            __end_of___fladd 07D5                      ?_main 0070  
          __end_of___awdiv 1F84            __end_of___flneg 080B            __end_of___awmod 0864  
          __end_of___flmul 0C9D            __end_of___flsub 1E5D            __end_of___fltol 2000  
                    _ANSEL 0188            __end_of___lldiv 1F1B            ___awdiv@divisor 0020  
          __end_of___llmod 1EB3            __end_of___lwdiv 1DBD            __end_of___lwmod 1D77  
          ___awdiv@counter 0024                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008            __end_of_cfg_clk 1C46  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063                      _TXREG 0019            __end_of_dpowers 1896  
                    _scale 0C9D            __end_of_isdigit 1CA5                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 054D  
          __initialization 000F               __end_of_conv 1CEA               __end_of_main 093C  
                   ??_conv 007A                     ??_main 00C8       __size_of__tdiv_to_l_ 00BD  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072         ??_I2C_Master_Start 0072  
       ??_I2C_Master_Write 0074           ___llmod@dividend 0076                     ?_scale 0042  
         ___awdiv@dividend 0022                     _ANSELH 0189                     _SPBRGH 009A  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 1175  
         __end_of__powers_ 183A                     ___flge 1015                     ___fleq 1DBD  
                ??___fladd 005E                     ___wmul 1CEA                  ??___awdiv 0079  
                   _cfg_io 1C81                  ??___flneg 0076                  ??___awmod 0076  
                ??___flmul 0030                  ??___flsub 007B                  ??___fltol 0059  
                ??___lldiv 007A                  ??___llmod 007A                  ??___lwdiv 0078  
                ??___lwmod 0076                  ??_cfg_clk 0072                     _fround 12F0  
         ___awdiv@quotient 0026            ___awmod@divisor 0072            ___awmod@counter 0077  
                   conv@aa 0026                  ??_isdigit 0072         __size_of__Umul8_16 0027  
                   saved_w 007E                  ??_sprintf 00A8                 ___flge@ff1 0072  
               ___flge@ff2 0076               ___xxtofl@arg 0022               ___xxtofl@exp 0021  
             ___xxtofl@val 0072                 ___fleq@ff1 0072                 ___fleq@ff2 0076  
  __end_of__initialization 0019                 ___flneg@f1 0072                 ___fltol@f1 0055  
           __pcstackCOMMON 0070         __size_of_cfg_usart 0015              __end_of_scale 1000  
               __div_to_l_ 1232            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0046            __div_to_l_@quot 0020               sprintf@width 00BE  
               __pbssBANK1 00CB              __div_to_l_@f1 0072              __div_to_l_@f2 0076  
        __end_of__Umul8_16 07FC                 __pmaintext 0864                    ?___flge 0072  
                  ?___fleq 0072                    ?___wmul 0072                    ?_cfg_io 0070  
               __pintentry 0004         __size_of_send_char 000A         __size_of_send_crct 0021  
                  ?_fround 0042                  ?___xxtofl 0072                    _SSPCON2 0091  
                  _SSPSTAT 0094                send_crct@st 0076                 __stringtab 1800  
        __end_of_cfg_usart 1015          __end_of__npowers_ 186E                 _scale$1126 0050  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 054D  
                  ___awdiv 1F1B                    ___flneg 0800                    ___awmod 080B  
                  ___flmul 093C                    ___flsub 1E0D                    ___fltol 1F84  
                  ___lldiv 1EB3            __size_of___wmul 0025                    ___llmod 1E5D  
          __size_of_cfg_io 0012                    ___lwdiv 1D77                    ___lwmod 1D3D  
                  _cfg_clk 1C3E            __size_of_fround 020D                    __ptext1 14FD  
                  __ptext2 0C9D                    __ptext3 080B                    __ptext4 1F1B  
                  __ptext5 1C93                    __ptext6 12F0                    __ptext7 1D3D  
                  __ptext8 1D77                    __ptext9 093C                ?__div_to_l_ 0072  
                  _dpowers 186E                    _isdigit 1C93               __size_of_isr 0007  
               ??___xxtofl 0076           ___awmod@dividend 0074   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                    _sprintf 14FD  
                  clrloop0 1C47       end_of_initialization 0019          __end_of_send_char 1C74  
        __end_of_send_crct 1CC6  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0072            ___lldiv@counter 0024                  _RCSTAbits 0018  
         I2C_Master_Read@a 0072                    psplit$0 B002F             __tdiv_to_l_@f1 0072  
           __tdiv_to_l_@f2 0076              send_char@dato 0072              ??__tdiv_to_l_ 0020  
              ___fladd@grs 0069              ___xxtofl@sign 0020                  _TRISAbits 0085  
                _TRISCbits 0087                 conv@result 002A                ___flmul@grs 0036  
                _TXSTAbits 0098        __size_of__div_to_l_ 00BE             __end_of___flge 10B9  
           __end_of___fleq 1E0D             __end_of___wmul 1D0F             __end_of_cfg_io 1C93  
        pnum$text1_split_1 002F                _BAUDCTLbits 0187             __end_of_fround 14FD  
      start_initialization 000F        __end_of__tdiv_to_l_ 1232                __end_of_isr 1C3E  
        ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
          ___llmod@divisor 0072            ___llmod@counter 0020                   ??___flge 0020  
                 ??___fleq 0020                   ??___wmul 0076                   ??_cfg_io 0072  
                __Umul8_16 07D5                   ??_fround 0046              sprintf@tmpval 00B6  
                ___fladd@a 005A                  ___fladd@b 0056                 fround@prec 0055  
                ___flmul@a 002C                  ___flmul@b 0028                __pbssCOMMON 007B  
                ___flsub@a 00A0                  ___flsub@b 00A4                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00BC  
              sprintf@flag 00BC                sprintf@eexp 00BA                sprintf@fval 00C0  
              sprintf@prec 00C4                  _cfg_usart 1000           _I2C_Master_Start 1C4E  
         _I2C_Master_Write 1C60           ___lwdiv@dividend 0022                   ?___fladd 0056  
                 ?___awdiv 0020                   ?___flneg 0072                   ?___awmod 0072  
                 ?___flmul 0028                   ?___flsub 00A0                   ?___fltol 0055  
                 ?___lldiv 0072                   ?___llmod 0072                  __npowers_ 183A  
               ?__Umul8_16 0072                   ?___lwdiv 0020                   ?___lwmod 0072  
                 ?_cfg_clk 0070                  __pstrings 1800                __tdiv_to_l_ 1175  
               send_crct@i 0074               ??__div_to_l_ 007A                   ?_isdigit 0070  
         ___lwdiv@quotient 0025                   ?_sprintf 006A             __size_of_scale 0363  
        interrupt_function 0004             ___wmul@product 0076                  clear_ram0 1C46  
               ?_cfg_usart 0070                   _PIE1bits 008C                  _send_char 1C6A  
                _send_crct 1CA5         __end_of__div_to_l_ 12F0                __stringbase 1805  
        ___wmul@multiplier 0072        I2C_Master_Read@temp 0076                 ?_send_char 0070  
               ?_send_crct 0070                ??__Umul8_16 0074           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003A                _fround$1124 0051                _fround$1125 004D  
         __size_of_cfg_clk 0008         __end_of__stringtab 1806                _isdigit$941 0072  
               sprintf@val 00B2            _I2C_Master_Read 1D0F                   ___xxtofl 10B9  
          _I2C_Master_Wait 1C74            _I2C_Master_Stop 1C57           __size_of_isdigit 0012  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0024                   __ptext10 07D5  
                 __ptext11 1175                   __ptext20 1015                   __ptext12 1232  
                 __ptext21 1DBD                   __ptext13 1CEA                   __ptext30 1C57  
                 __ptext22 1CA5                   __ptext14 1E5D                   __ptext31 1C4E  
                 __ptext23 1C6A                   __ptext15 1EB3                   __ptext32 1D0F  
                 __ptext24 1CC6                   __ptext16 1F84                   __ptext33 1C74  
                 __ptext25 10B9                   __ptext17 1E0D                   __ptext34 1C37  
                 __ptext26 1000                   __ptext18 054D                   __ptext27 1C81  
                 __ptext19 0800                   __ptext28 1C3E                   __ptext29 1C60  
                 __powers_ 1806           __size_of_sprintf F050              __size_of_conv 0024  
            __size_of_main 00D8                  pnum$text1 000B                ??_cfg_usart 0072  
 __end_of_I2C_Master_Start 1C57   __end_of_I2C_Master_Write 1C6A                 _INTCONbits 000B  
                 isdigit@c 0073                   scale@scl 0054                   intlevel1 0000  
                sprintf@ap 00B1           __tdiv_to_l_@exp1 0029           __tdiv_to_l_@cntr 0028  
                sprintf@sp 00C6           __tdiv_to_l_@quot 0024           ___lwmod@dividend 0074  
         ___lldiv@dividend 0076                ??_send_char 0072                ??_send_crct 0073  
                stringcode 1800                 _OSCCONbits 008F    __end_of_I2C_Master_Read 1D3D  
  __end_of_I2C_Master_Wait 1C81    __end_of_I2C_Master_Stop 1C60               ?__tdiv_to_l_ 0072  
   __Umul8_16@multiplicand 0072                   sprintf@c 00C7                   sprintf@f 006A  
         ___lldiv@quotient 0020          I2C_Master_Write@d 0072            ___lwmod@divisor 0072  
          ___lwmod@counter 0077                   stringdir 1800                   stringtab 1800  
              _SSPCON2bits 0091              ___fladd@signs 0066               ___fladd@aexp 0067  
             ___fladd@bexp 0068       __Umul8_16@multiplier 007A          __Umul8_16@product 0076  

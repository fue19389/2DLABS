

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 29 12:47:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0006                     _PORTB	set	6
   285  0008                     _PORTD	set	8
   286  0014                     _SSPCONbits	set	20
   287  000C                     _PIR1bits	set	12
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCON	set	20
   290  0063                     _SSPIF	set	99
   291  005E                     _PEIE	set	94
   292  005F                     _GIE	set	95
   293  008F                     _OSCCONbits	set	143
   294  0088                     _TRISD	set	136
   295  0086                     _TRISB	set	134
   296  0094                     _SSPSTATbits	set	148
   297  0091                     _SSPCON2bits	set	145
   298  0087                     _TRISCbits	set	135
   299  0094                     _SSPSTAT	set	148
   300  0093                     _SSPADD	set	147
   301  0091                     _SSPCON2	set	145
   302  04A0                     _BF	set	1184
   303  0463                     _SSPIE	set	1123
   304  043C                     _TRISC4	set	1084
   305  043B                     _TRISC3	set	1083
   306  0189                     _ANSELH	set	393
   307  0188                     _ANSEL	set	392
   308                           
   309                           	psect	cinit
   310  000F                     start_initialization:	
   311                           ; #config settings
   312                           
   313  000F                     __initialization:
   314                           
   315                           ; Clear objects allocated to COMMON
   316  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   317  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   318  0011                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  0011                     __end_of__initialization:
   322  0011  0183               	clrf	3
   323  0012  120A  118A  2878   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssCOMMON
   326  0077                     __pbssCOMMON:
   327  0077                     _dato:
   328  0077                     	ds	1
   329  0078                     _z:
   330  0078                     	ds	1
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:
   334  0070                     ?_setup:
   335  0070                     ?_cfg_clk:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_I2C_Slave_Init:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_isr:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_isr:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_main:	
   348                           ; 1 bytes @ 0x0
   349                           
   350                           
   351                           ; 1 bytes @ 0x0
   352  0070                     	ds	3
   353  0073                     ??_cfg_clk:
   354  0073                     ??_I2C_Slave_Init:	
   355                           ; 1 bytes @ 0x3
   356                           
   357  0073                     I2C_Slave_Init@address:	
   358                           ; 1 bytes @ 0x3
   359                           
   360                           
   361                           ; 1 bytes @ 0x3
   362  0073                     	ds	1
   363  0074                     ??_setup:
   364  0074                     ??_main:	
   365                           ; 1 bytes @ 0x4
   366                           
   367                           
   368                           ; 1 bytes @ 0x4
   369  0074                     	ds	3
   370                           
   371                           	psect	maintext
   372  0078                     __pmaintext:	
   373 ;;
   374 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   375 ;;
   376 ;; *************** function _main *****************
   377 ;; Defined at:
   378 ;;		line 88 in file "SLAVE.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, status,2, status,0, pclath, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : B00/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   392 ;;      Params:         0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0
   394 ;;      Temps:          3       0       0       0       0
   395 ;;      Totals:         3       0       0       0       0
   396 ;;Total ram usage:        3 bytes
   397 ;; Hardware stack levels required when called:    3
   398 ;; This function calls:
   399 ;;		_cfg_clk
   400 ;;		_setup
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           
   407                           ;psect for function _main
   408  0078                     _main:
   409  0078                     l815:	
   410                           ;incstack = 0
   411                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   412                           
   413                           
   414                           ;SLAVE.c: 89:     setup();
   415  0078  120A  118A  20AD  120A  118A  	fcall	_setup
   416                           
   417                           ;SLAVE.c: 90:     cfg_clk();
   418  007D  120A  118A  20C0  120A  118A  	fcall	_cfg_clk
   419  0082                     l817:
   420                           
   421                           ;SLAVE.c: 96:        _delay((unsigned long)((500)*(8000000/4000.0)));
   422  0082  3006               	movlw	6
   423  0083  00F6               	movwf	??_main+2
   424  0084  3013               	movlw	19
   425  0085  00F5               	movwf	??_main+1
   426  0086  30AD               	movlw	173
   427  0087  00F4               	movwf	??_main
   428  0088                     u147:
   429  0088  0BF4               	decfsz	??_main,f
   430  0089  2888               	goto	u147
   431  008A  0BF5               	decfsz	??_main+1,f
   432  008B  2888               	goto	u147
   433  008C  0BF6               	decfsz	??_main+2,f
   434  008D  2888               	goto	u147
   435  008E  288F               	nop2
   436  008F  2882               	goto	l817
   437  0090  120A  118A  280C   	ljmp	start
   438  0093                     __end_of_main:
   439                           
   440                           	psect	text1
   441  00AD                     __ptext1:	
   442 ;; *************** function _setup *****************
   443 ;; Defined at:
   444 ;;		line 103 in file "SLAVE.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0, pclath, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   458 ;;      Params:         0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0
   460 ;;      Temps:          0       0       0       0       0
   461 ;;      Totals:         0       0       0       0       0
   462 ;;Total ram usage:        0 bytes
   463 ;; Hardware stack levels used:    1
   464 ;; Hardware stack levels required when called:    2
   465 ;; This function calls:
   466 ;;		_I2C_Slave_Init
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           
   473                           ;psect for function _setup
   474  00AD                     _setup:
   475  00AD                     l733:	
   476                           ;incstack = 0
   477                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   478                           
   479                           
   480                           ;SLAVE.c: 104:     ANSEL = 0;
   481  00AD  1683               	bsf	3,5	;RP0=1, select bank3
   482  00AE  1703               	bsf	3,6	;RP1=1, select bank3
   483  00AF  0188               	clrf	8	;volatile
   484                           
   485                           ;SLAVE.c: 105:     ANSELH = 0;
   486  00B0  0189               	clrf	9	;volatile
   487                           
   488                           ;SLAVE.c: 107:     TRISB = 0;
   489  00B1  1683               	bsf	3,5	;RP0=1, select bank1
   490  00B2  1303               	bcf	3,6	;RP1=0, select bank1
   491  00B3  0186               	clrf	6	;volatile
   492                           
   493                           ;SLAVE.c: 108:     TRISD = 0;
   494  00B4  0188               	clrf	8	;volatile
   495                           
   496                           ;SLAVE.c: 110:     PORTB = 0;
   497  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   498  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   499  00B7  0186               	clrf	6	;volatile
   500                           
   501                           ;SLAVE.c: 111:     PORTD = 0;
   502  00B8  0188               	clrf	8	;volatile
   503  00B9                     l735:
   504                           
   505                           ;SLAVE.c: 112:     I2C_Slave_Init(0x50);
   506  00B9  3050               	movlw	80
   507  00BA  120A  118A  2093  120A  118A  	fcall	_I2C_Slave_Init
   508  00BF                     l120:
   509  00BF  0008               	return
   510  00C0                     __end_of_setup:
   511                           
   512                           	psect	text2
   513  0093                     __ptext2:	
   514 ;; *************** function _I2C_Slave_Init *****************
   515 ;; Defined at:
   516 ;;		line 93 in file "I2C.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  address         1    wreg     unsigned char 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  address         1    3[COMMON] unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         0       0       0       0       0
   531 ;;      Locals:         1       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0
   533 ;;      Totals:         1       0       0       0       0
   534 ;;Total ram usage:        1 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; Hardware stack levels required when called:    1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_setup
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           
   545                           ;psect for function _I2C_Slave_Init
   546  0093                     _I2C_Slave_Init:
   547                           
   548                           ;incstack = 0
   549                           ; Regs used in _I2C_Slave_Init: [wreg]
   550                           ;I2C_Slave_Init@address stored from wreg
   551  0093  00F3               	movwf	I2C_Slave_Init@address
   552  0094                     l715:
   553                           
   554                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   555  0094  0873               	movf	I2C_Slave_Init@address,w
   556  0095  1683               	bsf	3,5	;RP0=1, select bank1
   557  0096  1303               	bcf	3,6	;RP1=0, select bank1
   558  0097  0093               	movwf	19	;volatile
   559                           
   560                           ;I2C.c: 96:     SSPCON = 0x36;
   561  0098  3036               	movlw	54
   562  0099  1283               	bcf	3,5	;RP0=0, select bank0
   563  009A  1303               	bcf	3,6	;RP1=0, select bank0
   564  009B  0094               	movwf	20	;volatile
   565                           
   566                           ;I2C.c: 97:     SSPSTAT = 0x80;
   567  009C  3080               	movlw	128
   568  009D  1683               	bsf	3,5	;RP0=1, select bank1
   569  009E  1303               	bcf	3,6	;RP1=0, select bank1
   570  009F  0094               	movwf	20	;volatile
   571                           
   572                           ;I2C.c: 98:     SSPCON2 = 0x01;
   573  00A0  3001               	movlw	1
   574  00A1  0091               	movwf	17	;volatile
   575  00A2                     l717:
   576                           
   577                           ;I2C.c: 99:     TRISC3 = 1;
   578  00A2  1587               	bsf	7,3	;volatile
   579  00A3                     l719:
   580                           
   581                           ;I2C.c: 100:     TRISC4 = 1;
   582  00A3  1607               	bsf	7,4	;volatile
   583  00A4                     l721:
   584                           
   585                           ;I2C.c: 101:     GIE = 1;
   586  00A4  178B               	bsf	11,7	;volatile
   587  00A5                     l723:
   588                           
   589                           ;I2C.c: 102:     PEIE = 1;
   590  00A5  170B               	bsf	11,6	;volatile
   591  00A6                     l725:
   592                           
   593                           ;I2C.c: 103:     SSPIF = 0;
   594  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   595  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   596  00A8  118C               	bcf	12,3	;volatile
   597  00A9                     l727:
   598                           
   599                           ;I2C.c: 104:     SSPIE = 1;
   600  00A9  1683               	bsf	3,5	;RP0=1, select bank1
   601  00AA  1303               	bcf	3,6	;RP1=0, select bank1
   602  00AB  158C               	bsf	12,3	;volatile
   603  00AC                     l55:
   604  00AC  0008               	return
   605  00AD                     __end_of_I2C_Slave_Init:
   606                           
   607                           	psect	text3
   608  00C0                     __ptext3:	
   609 ;; *************** function _cfg_clk *****************
   610 ;; Defined at:
   611 ;;		line 114 in file "SLAVE.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2, status,0
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   625 ;;      Params:         0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0
   627 ;;      Temps:          0       0       0       0       0
   628 ;;      Totals:         0       0       0       0       0
   629 ;;Total ram usage:        0 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; Hardware stack levels required when called:    1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           
   640                           ;psect for function _cfg_clk
   641  00C0                     _cfg_clk:
   642  00C0                     l737:	
   643                           ;incstack = 0
   644                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
   645                           
   646                           
   647                           ;SLAVE.c: 115:     OSCCONbits.IRCF = 0b111;
   648  00C0  3070               	movlw	112
   649  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   650  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   651  00C3  048F               	iorwf	15,f	;volatile
   652  00C4                     l739:
   653                           
   654                           ;SLAVE.c: 116:     OSCCONbits.SCS = 1;
   655  00C4  140F               	bsf	15,0	;volatile
   656  00C5                     l123:
   657  00C5  0008               	return
   658  00C6                     __end_of_cfg_clk:
   659                           
   660                           	psect	text4
   661  0015                     __ptext4:	
   662 ;; *************** function _isr *****************
   663 ;; Defined at:
   664 ;;		line 51 in file "SLAVE.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          3       0       0       0       0
   681 ;;      Totals:         3       0       0       0       0
   682 ;;Total ram usage:        3 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		Interrupt level 1
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           
   692                           ;psect for function _isr
   693  0015                     _isr:
   694  0015                     i1l781:
   695                           
   696                           ;SLAVE.c: 52:    if(PIR1bits.SSPIF == 1){
   697  0015  1283               	bcf	3,5	;RP0=0, select bank0
   698  0016  1303               	bcf	3,6	;RP1=0, select bank0
   699  0017  1D8C               	btfss	12,3	;volatile
   700  0018  281A               	goto	u5_21
   701  0019  281B               	goto	u5_20
   702  001A                     u5_21:
   703  001A  2871               	goto	i1l109
   704  001B                     u5_20:
   705  001B                     i1l783:
   706                           
   707                           ;SLAVE.c: 54:         SSPCONbits.CKP = 0;
   708  001B  1214               	bcf	20,4	;volatile
   709                           
   710                           ;SLAVE.c: 56:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   711  001C  1B14               	btfsc	20,6	;volatile
   712  001D  281F               	goto	u6_21
   713  001E  2820               	goto	u6_20
   714  001F                     u6_21:
   715  001F  2824               	goto	i1l787
   716  0020                     u6_20:
   717  0020                     i1l785:
   718  0020  1F94               	btfss	20,7	;volatile
   719  0021  2823               	goto	u7_21
   720  0022  2824               	goto	u7_20
   721  0023                     u7_21:
   722  0023  282B               	goto	i1l795
   723  0024                     u7_20:
   724  0024                     i1l787:
   725                           
   726                           ;SLAVE.c: 57:             z = SSPBUF;
   727  0024  0813               	movf	19,w	;volatile
   728  0025  00F0               	movwf	??_isr
   729  0026  0870               	movf	??_isr,w
   730  0027  00F8               	movwf	_z
   731  0028                     i1l789:
   732                           
   733                           ;SLAVE.c: 58:             SSPCONbits.SSPOV = 0;
   734  0028  1314               	bcf	20,6	;volatile
   735  0029                     i1l791:
   736                           
   737                           ;SLAVE.c: 59:             SSPCONbits.WCOL = 0;
   738  0029  1394               	bcf	20,7	;volatile
   739  002A                     i1l793:
   740                           
   741                           ;SLAVE.c: 60:             SSPCONbits.CKP = 1;
   742  002A  1614               	bsf	20,4	;volatile
   743  002B                     i1l795:
   744                           
   745                           ;SLAVE.c: 63:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   746  002B  1683               	bsf	3,5	;RP0=1, select bank1
   747  002C  1303               	bcf	3,6	;RP1=0, select bank1
   748  002D  1A94               	btfsc	20,5	;volatile
   749  002E  2830               	goto	u8_21
   750  002F  2831               	goto	u8_20
   751  0030                     u8_21:
   752  0030  284D               	goto	i1l100
   753  0031                     u8_20:
   754  0031                     i1l797:
   755  0031  1914               	btfsc	20,2	;volatile
   756  0032  2834               	goto	u9_21
   757  0033  2835               	goto	u9_20
   758  0034                     u9_21:
   759  0034  284D               	goto	i1l100
   760  0035                     u9_20:
   761  0035                     i1l799:
   762                           
   763                           ;SLAVE.c: 65:             z = SSPBUF;
   764  0035  1283               	bcf	3,5	;RP0=0, select bank0
   765  0036  1303               	bcf	3,6	;RP1=0, select bank0
   766  0037  0813               	movf	19,w	;volatile
   767  0038  00F0               	movwf	??_isr
   768  0039  0870               	movf	??_isr,w
   769  003A  00F8               	movwf	_z
   770  003B                     i1l801:
   771                           
   772                           ;SLAVE.c: 67:             PIR1bits.SSPIF = 0;
   773  003B  118C               	bcf	12,3	;volatile
   774  003C                     i1l803:
   775                           
   776                           ;SLAVE.c: 68:             SSPCONbits.CKP = 1;
   777  003C  1614               	bsf	20,4	;volatile
   778  003D                     i1l101:	
   779                           ;SLAVE.c: 69:             while(!SSPSTATbits.BF);
   780                           
   781  003D  1683               	bsf	3,5	;RP0=1, select bank1
   782  003E  1303               	bcf	3,6	;RP1=0, select bank1
   783  003F  1C14               	btfss	20,0	;volatile
   784  0040  2842               	goto	u10_21
   785  0041  2843               	goto	u10_20
   786  0042                     u10_21:
   787  0042  283D               	goto	i1l101
   788  0043                     u10_20:
   789  0043                     i1l805:
   790                           
   791                           ;SLAVE.c: 70:             PORTD = SSPBUF;
   792  0043  1283               	bcf	3,5	;RP0=0, select bank0
   793  0044  1303               	bcf	3,6	;RP1=0, select bank0
   794  0045  0813               	movf	19,w	;volatile
   795  0046  0088               	movwf	8	;volatile
   796                           
   797                           ;SLAVE.c: 71:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   798  0047  30A6               	movlw	166
   799  0048  00F0               	movwf	??_isr
   800  0049                     u15_27:
   801  0049  0BF0               	decfsz	??_isr,f
   802  004A  2849               	goto	u15_27
   803  004B  0000               	nop
   804                           
   805                           ;SLAVE.c: 73:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   806  004C  286E               	goto	i1l104
   807  004D                     i1l100:
   808  004D  1A94               	btfsc	20,5	;volatile
   809  004E  2850               	goto	u11_21
   810  004F  2851               	goto	u11_20
   811  0050                     u11_21:
   812  0050  286E               	goto	i1l104
   813  0051                     u11_20:
   814  0051                     i1l807:
   815  0051  1D14               	btfss	20,2	;volatile
   816  0052  2854               	goto	u12_21
   817  0053  2855               	goto	u12_20
   818  0054                     u12_21:
   819  0054  286E               	goto	i1l104
   820  0055                     u12_20:
   821  0055                     i1l809:
   822                           
   823                           ;SLAVE.c: 74:             z = SSPBUF;
   824  0055  1283               	bcf	3,5	;RP0=0, select bank0
   825  0056  1303               	bcf	3,6	;RP1=0, select bank0
   826  0057  0813               	movf	19,w	;volatile
   827  0058  00F0               	movwf	??_isr
   828  0059  0870               	movf	??_isr,w
   829  005A  00F8               	movwf	_z
   830  005B                     i1l811:
   831                           
   832                           ;SLAVE.c: 75:             BF = 0;
   833  005B  1683               	bsf	3,5	;RP0=1, select bank1
   834  005C  1303               	bcf	3,6	;RP1=0, select bank1
   835  005D  1014               	bcf	20,0	;volatile
   836                           
   837                           ;SLAVE.c: 76:             SSPBUF = PORTB;
   838  005E  1283               	bcf	3,5	;RP0=0, select bank0
   839  005F  1303               	bcf	3,6	;RP1=0, select bank0
   840  0060  0806               	movf	6,w	;volatile
   841  0061  0093               	movwf	19	;volatile
   842  0062                     i1l813:
   843                           
   844                           ;SLAVE.c: 77:             SSPCONbits.CKP = 1;
   845  0062  1614               	bsf	20,4	;volatile
   846                           
   847                           ;SLAVE.c: 78:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   848  0063  30A6               	movlw	166
   849  0064  00F0               	movwf	??_isr
   850  0065                     u16_27:
   851  0065  0BF0               	decfsz	??_isr,f
   852  0066  2865               	goto	u16_27
   853  0067  0000               	nop
   854  0068                     i1l106:	
   855                           ;SLAVE.c: 79:             while(SSPSTATbits.BF);
   856                           
   857  0068  1683               	bsf	3,5	;RP0=1, select bank1
   858  0069  1303               	bcf	3,6	;RP1=0, select bank1
   859  006A  1814               	btfsc	20,0	;volatile
   860  006B  286D               	goto	u13_21
   861  006C  286E               	goto	u13_20
   862  006D                     u13_21:
   863  006D  2868               	goto	i1l106
   864  006E                     u13_20:
   865  006E                     i1l104:
   866                           
   867                           ;SLAVE.c: 82:         PIR1bits.SSPIF = 0;
   868  006E  1283               	bcf	3,5	;RP0=0, select bank0
   869  006F  1303               	bcf	3,6	;RP1=0, select bank0
   870  0070  118C               	bcf	12,3	;volatile
   871  0071                     i1l109:
   872  0071  0872               	movf	??_isr+2,w
   873  0072  008A               	movwf	10
   874  0073  0E71               	swapf	??_isr+1,w
   875  0074  0083               	movwf	3
   876  0075  0EFE               	swapf	btemp,f
   877  0076  0E7E               	swapf	btemp,w
   878  0077  0009               	retfie
   879  0078                     __end_of_isr:
   880  007E                     btemp	set	126	;btemp
   881  007E                     wtemp0	set	126
   882                           
   883                           	psect	intentry
   884  0004                     __pintentry:	
   885                           ;incstack = 0
   886                           ; Regs used in _isr: [wreg]
   887                           
   888  0004                     interrupt_function:
   889  007E                     saved_w	set	btemp
   890  0004  00FE               	movwf	btemp
   891  0005  0E03               	swapf	3,w
   892  0006  00F1               	movwf	??_isr+1
   893  0007  080A               	movf	10,w
   894  0008  00F2               	movwf	??_isr+2
   895  0009  120A  118A  2815   	ljmp	_isr
   896                           
   897                           	psect	config
   898                           
   899                           ;Config register CONFIG1 @ 0x2007
   900                           ;	Oscillator Selection bits
   901                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   902                           ;	Watchdog Timer Enable bit
   903                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   904                           ;	Power-up Timer Enable bit
   905                           ;	PWRTE = OFF, PWRT disabled
   906                           ;	RE3/MCLR pin function select bit
   907                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   908                           ;	Code Protection bit
   909                           ;	CP = OFF, Program memory code protection is disabled
   910                           ;	Data Code Protection bit
   911                           ;	CPD = OFF, Data memory code protection is disabled
   912                           ;	Brown Out Reset Selection bits
   913                           ;	BOREN = OFF, BOR disabled
   914                           ;	Internal External Switchover bit
   915                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   916                           ;	Fail-Safe Clock Monitor Enabled bit
   917                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   918                           ;	Low Voltage Programming Enable bit
   919                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   920                           ;	In-Circuit Debugger Mode bit
   921                           ;	DEBUG = 0x1, unprogrammed default
   922  2007                     	org	8199
   923  2007  20D4               	dw	8404
   924                           
   925                           ;Config register CONFIG2 @ 0x2008
   926                           ;	Brown-out Reset Selection bit
   927                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   928                           ;	Flash Program Memory Self Write Enable bits
   929                           ;	WRT = OFF, Write protection off
   930  2008                     	org	8200
   931  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              4 COMMON     3     3      0
                            _cfg_clk
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cfg_clk
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 29 12:47:09 2021

                      _z 0078              _SSPSTATbits 0094                       _BF 04A0  
                     l55 00AC                      l120 00BF                      l123 00C5  
                    l721 00A4                      l723 00A5                      l715 0094  
                    l725 00A6                      l717 00A2                      l733 00AD  
                    l727 00A9                      l719 00A3                      l735 00B9  
                    l815 0078                      l737 00C0                      l817 0082  
                    l739 00C4                      _GIE 005F                      u147 0088  
                    _isr 0015                     ?_isr 0070                     _PEIE 005E  
                   u5_20 001B                     u5_21 001A                     u6_20 0020  
                   u6_21 001F                     u7_20 0024                     u7_21 0023  
                   u8_20 0031                     u8_21 0030                     u9_20 0035  
                   u9_21 0034                     _dato 0077                     _main 0078  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l100 004D  
                  i1l101 003D                    i1l104 006E                    i1l106 0068  
                  i1l109 0071                    i1l801 003B                    i1l811 005B  
                  i1l803 003C                    i1l813 0062                    i1l805 0043  
                  i1l807 0051                    i1l809 0055                    i1l781 0015  
                  i1l791 0029                    i1l783 001B                    i1l793 002A  
                  i1l785 0020                    i1l795 002B                    i1l787 0024  
                  i1l797 0031                    i1l789 0028                    i1l799 0035  
                  u10_20 0043                    u10_21 0042                    u11_20 0051  
                  u11_21 0050                    u12_20 0055                    u12_21 0054  
                  u13_20 006E                    u13_21 006D                    u15_27 0049  
                  u16_27 0065                    _PORTB 0006                    _PORTD 0008  
        __end_of_cfg_clk 00C6                    _TRISB 0086                    _TRISD 0088  
                  _SSPIE 0463                    _SSPIF 0063                    _setup 00AD  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0093                   ??_main 0074  
                 ?_setup 0070                   _ANSELH 0189                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPCON 0014  
                 _SSPBUF 0013                ??_cfg_clk 0073                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070  __size_of_I2C_Slave_Init 001A  
          __end_of_setup 00C0                  ??_setup 0074    I2C_Slave_Init@address 0073  
             __pmaintext 0078               __pintentry 0004                  _SSPCON2 0091  
                _SSPSTAT 0094                  _cfg_clk 00C0                  __ptext1 00AD  
                __ptext2 0093                  __ptext3 00C0                  __ptext4 0015  
           __size_of_isr 0063     end_of_initialization 0011           _I2C_Slave_Init 0093  
              _TRISCbits 0087   __end_of_I2C_Slave_Init 00AD      start_initialization 000F  
            __end_of_isr 0078          ?_I2C_Slave_Init 0070              __pbssCOMMON 0077  
              ___latbits 0002                 ?_cfg_clk 0070           __size_of_setup 0013  
      interrupt_function 0004                 _PIR1bits 000C         __size_of_cfg_clk 0006  
       ??_I2C_Slave_Init 0073            __size_of_main 001B                 intlevel1 0000  
             _OSCCONbits 008F              _SSPCON2bits 0091               _SSPCONbits 0014  

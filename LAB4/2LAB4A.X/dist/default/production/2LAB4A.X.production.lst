

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 09 18:03:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401                           
   402                           	psect	strings
   403  0800                     __pstrings:
   404  0800                     stringtab:
   405  0800                     __stringtab:
   406                           
   407                           ;	String table - string pointers are 1 byte each
   408  0800  1BFF               	btfsc	btemp+1,7
   409  0801  280A               	ljmp	stringcode
   410  0802  1383               	bcf	3,7
   411  0803  187F               	btfsc	btemp+1,0
   412  0804  1783               	bsf	3,7
   413  0805  0800               	movf	0,w
   414  0806  0A84               	incf	4,f
   415  0807  1903               	skipnz
   416  0808  0AFF               	incf	btemp+1,f
   417  0809  0008               	return
   418  080A                     stringcode:
   419  080A                     stringdir:
   420  080A  3008               	movlw	high stringdir
   421  080B  008A               	movwf	10
   422  080C  0804               	movf	4,w
   423  080D  0A84               	incf	4,f
   424  080E  0782               	addwf	2,f
   425  080F                     __stringbase:
   426  080F  3400               	retlw	0
   427  0810                     __end_of__stringtab:
   428  0810                     __powers_:
   429  0810  3400               	retlw	0
   430  0811  3400               	retlw	0
   431  0812  3480               	retlw	128
   432  0813  343F               	retlw	63
   433  0814  3400               	retlw	0
   434  0815  3400               	retlw	0
   435  0816  3420               	retlw	32
   436  0817  3441               	retlw	65
   437  0818  3400               	retlw	0
   438  0819  3400               	retlw	0
   439  081A  34C8               	retlw	200
   440  081B  3442               	retlw	66
   441  081C  3400               	retlw	0
   442  081D  3400               	retlw	0
   443  081E  347A               	retlw	122
   444  081F  3444               	retlw	68
   445  0820  3400               	retlw	0
   446  0821  3440               	retlw	64
   447  0822  341C               	retlw	28
   448  0823  3446               	retlw	70
   449  0824  3400               	retlw	0
   450  0825  3450               	retlw	80
   451  0826  34C3               	retlw	195
   452  0827  3447               	retlw	71
   453  0828  3400               	retlw	0
   454  0829  3424               	retlw	36
   455  082A  3474               	retlw	116
   456  082B  3449               	retlw	73
   457  082C  3480               	retlw	128
   458  082D  3496               	retlw	150
   459  082E  3418               	retlw	24
   460  082F  344B               	retlw	75
   461  0830  3420               	retlw	32
   462  0831  34BC               	retlw	188
   463  0832  34BE               	retlw	190
   464  0833  344C               	retlw	76
   465  0834  3428               	retlw	40
   466  0835  346B               	retlw	107
   467  0836  346E               	retlw	110
   468  0837  344E               	retlw	78
   469  0838  34F9               	retlw	249
   470  0839  3402               	retlw	2
   471  083A  3415               	retlw	21
   472  083B  3450               	retlw	80
   473  083C  34EC               	retlw	236
   474  083D  3478               	retlw	120
   475  083E  34AD               	retlw	173
   476  083F  3460               	retlw	96
   477  0840  34CA               	retlw	202
   478  0841  34F2               	retlw	242
   479  0842  3449               	retlw	73
   480  0843  3471               	retlw	113
   481  0844                     __end_of__powers_:
   482  0844                     __npowers_:
   483  0844  3400               	retlw	0
   484  0845  3400               	retlw	0
   485  0846  3480               	retlw	128
   486  0847  343F               	retlw	63
   487  0848  34CD               	retlw	205
   488  0849  34CC               	retlw	204
   489  084A  34CC               	retlw	204
   490  084B  343D               	retlw	61
   491  084C  340A               	retlw	10
   492  084D  34D7               	retlw	215
   493  084E  3423               	retlw	35
   494  084F  343C               	retlw	60
   495  0850  346F               	retlw	111
   496  0851  3412               	retlw	18
   497  0852  3483               	retlw	131
   498  0853  343A               	retlw	58
   499  0854  3417               	retlw	23
   500  0855  34B7               	retlw	183
   501  0856  34D1               	retlw	209
   502  0857  3438               	retlw	56
   503  0858  34AC               	retlw	172
   504  0859  34C5               	retlw	197
   505  085A  3427               	retlw	39
   506  085B  3437               	retlw	55
   507  085C  34BD               	retlw	189
   508  085D  3437               	retlw	55
   509  085E  3486               	retlw	134
   510  085F  3435               	retlw	53
   511  0860  3495               	retlw	149
   512  0861  34BF               	retlw	191
   513  0862  34D6               	retlw	214
   514  0863  3433               	retlw	51
   515  0864  3477               	retlw	119
   516  0865  34CC               	retlw	204
   517  0866  342B               	retlw	43
   518  0867  3432               	retlw	50
   519  0868  345F               	retlw	95
   520  0869  3470               	retlw	112
   521  086A  3489               	retlw	137
   522  086B  3430               	retlw	48
   523  086C  34FF               	retlw	255
   524  086D  34E6               	retlw	230
   525  086E  34DB               	retlw	219
   526  086F  342E               	retlw	46
   527  0870  3408               	retlw	8
   528  0871  34E5               	retlw	229
   529  0872  343C               	retlw	60
   530  0873  341E               	retlw	30
   531  0874  3460               	retlw	96
   532  0875  3442               	retlw	66
   533  0876  34A2               	retlw	162
   534  0877  340D               	retlw	13
   535  0878                     __end_of__npowers_:
   536  0878                     _dpowers:
   537  0878  3401               	retlw	1
   538  0879  3400               	retlw	0
   539  087A  3400               	retlw	0
   540  087B  3400               	retlw	0
   541  087C  340A               	retlw	10
   542  087D  3400               	retlw	0
   543  087E  3400               	retlw	0
   544  087F  3400               	retlw	0
   545  0880  3464               	retlw	100
   546  0881  3400               	retlw	0
   547  0882  3400               	retlw	0
   548  0883  3400               	retlw	0
   549  0884  34E8               	retlw	232
   550  0885  3403               	retlw	3
   551  0886  3400               	retlw	0
   552  0887  3400               	retlw	0
   553  0888  3410               	retlw	16
   554  0889  3427               	retlw	39
   555  088A  3400               	retlw	0
   556  088B  3400               	retlw	0
   557  088C  34A0               	retlw	160
   558  088D  3486               	retlw	134
   559  088E  3401               	retlw	1
   560  088F  3400               	retlw	0
   561  0890  3440               	retlw	64
   562  0891  3442               	retlw	66
   563  0892  340F               	retlw	15
   564  0893  3400               	retlw	0
   565  0894  3480               	retlw	128
   566  0895  3496               	retlw	150
   567  0896  3498               	retlw	152
   568  0897  3400               	retlw	0
   569  0898  3400               	retlw	0
   570  0899  34E1               	retlw	225
   571  089A  34F5               	retlw	245
   572  089B  3405               	retlw	5
   573  089C  3400               	retlw	0
   574  089D  34CA               	retlw	202
   575  089E  349A               	retlw	154
   576  089F  343B               	retlw	59
   577  08A0                     __end_of_dpowers:
   578  0007                     _PORTCbits	set	7
   579  0013                     _SSPBUF	set	19
   580  0014                     _SSPCON	set	20
   581  0008                     _PORTD	set	8
   582  0006                     _PORTB	set	6
   583  0039                     _RC1	set	57
   584  0047                     _RD7	set	71
   585  0046                     _RD6	set	70
   586  0045                     _RD5	set	69
   587  0044                     _RD4	set	68
   588  0043                     _RD3	set	67
   589  0042                     _RD2	set	66
   590  0041                     _RD1	set	65
   591  0040                     _RD0	set	64
   592  0063                     _SSPIF	set	99
   593  005E                     _PEIE	set	94
   594  005F                     _GIE	set	95
   595  0091                     _SSPCON2bits	set	145
   596  0094                     _SSPSTAT	set	148
   597  0093                     _SSPADD	set	147
   598  0091                     _SSPCON2	set	145
   599  008F                     _OSCCONbits	set	143
   600  0088                     _TRISD	set	136
   601  0086                     _TRISB	set	134
   602  0087                     _TRISCbits	set	135
   603  0463                     _SSPIE	set	1123
   604  043C                     _TRISC4	set	1084
   605  043B                     _TRISC3	set	1083
   606  0189                     _ANSELH	set	393
   607  0188                     _ANSEL	set	392
   608  08A0                     STR_2:
   609  08A0  3425               	retlw	37	;'%'
   610  08A1  3433               	retlw	51	;'3'
   611  08A2  342E               	retlw	46	;'.'
   612  08A3  3431               	retlw	49	;'1'
   613  08A4  3466               	retlw	102	;'f'
   614  08A5  344B               	retlw	75	;'K'
   615  08A6  3420               	retlw	32	;' '
   616  08A7  3425               	retlw	37	;'%'
   617  08A8  3433               	retlw	51	;'3'
   618  08A9  342E               	retlw	46	;'.'
   619  08AA  3431               	retlw	49	;'1'
   620  08AB  3466               	retlw	102	;'f'
   621  08AC  3456               	retlw	86	;'V'
   622  08AD  3420               	retlw	32	;' '
   623  08AE  3425               	retlw	37	;'%'
   624  08AF  3433               	retlw	51	;'3'
   625  08B0  342E               	retlw	46	;'.'
   626  08B1  3430               	retlw	48	;'0'
   627  08B2  3466               	retlw	102	;'f'
   628  08B3  3400               	retlw	0
   629  08B4                     STR_1:
   630  08B4  3420               	retlw	32	;' '
   631  08B5  3453               	retlw	83	;'S'
   632  08B6  3431               	retlw	49	;'1'
   633  08B7  343A               	retlw	58	;':'
   634  08B8  3420               	retlw	32	;' '
   635  08B9  3420               	retlw	32	;' '
   636  08BA  3420               	retlw	32	;' '
   637  08BB  3453               	retlw	83	;'S'
   638  08BC  3432               	retlw	50	;'2'
   639  08BD  343A               	retlw	58	;':'
   640  08BE  3420               	retlw	32	;' '
   641  08BF  3420               	retlw	32	;' '
   642  08C0  3420               	retlw	32	;' '
   643  08C1  3453               	retlw	83	;'S'
   644  08C2  3433               	retlw	51	;'3'
   645  08C3  343A               	retlw	58	;':'
   646  08C4  3400               	retlw	0
   647                           
   648                           	psect	cinit
   649  07F3                     start_initialization:	
   650                           ; #config settings
   651                           
   652  07F3                     __initialization:
   653                           
   654                           ; Clear objects allocated to BANK1
   655  07F3  1383               	bcf	3,7	;select IRP bank0
   656  07F4  30D0               	movlw	low __pbssBANK1
   657  07F5  0084               	movwf	4
   658  07F6  30E9               	movlw	low (__pbssBANK1+25)
   659  07F7  160A  158A  2185  120A  118A  	fcall	clear_ram0
   660  07FC                     end_of_initialization:	
   661                           ;End of C runtime variable initialization code
   662                           
   663  07FC                     __end_of__initialization:
   664  07FC  0183               	clrf	3
   665  07FD  160A  118A  2985   	ljmp	_main	;jump to C main() function
   666                           
   667                           	psect	bssBANK1
   668  00D0                     __pbssBANK1:
   669  00D0                     _v33:
   670  00D0                     	ds	4
   671  00D4                     _v22:
   672  00D4                     	ds	4
   673  00D8                     _v11:
   674  00D8                     	ds	4
   675  00DC                     _V3:
   676  00DC                     	ds	1
   677  00DD                     _V2:
   678  00DD                     	ds	1
   679  00DE                     _V1:
   680  00DE                     	ds	1
   681  00DF                     _f1:
   682  00DF                     	ds	10
   683                           
   684                           	psect	clrtext
   685  1985                     clear_ram0:	
   686                           ;	Called with FSR containing the base address, and
   687                           ;	W with the last address+1
   688                           
   689  1985  0064               	clrwdt	;clear the watchdog before getting into this loop
   690  1986                     clrloop0:
   691  1986  0180               	clrf	0	;clear RAM location pointed to by FSR
   692  1987  0A84               	incf	4,f	;increment pointer
   693  1988  0604               	xorwf	4,w	;XOR with final address
   694  1989  1903               	btfsc	3,2	;have we reached the end yet?
   695  198A  3400               	retlw	0	;all done for this memory range, return
   696  198B  0604               	xorwf	4,w	;XOR again to restore value
   697  198C  2986               	goto	clrloop0	;do the next byte
   698                           
   699                           	psect	cstackBANK1
   700  00A0                     __pcstackBANK1:
   701  00A0                     ?_sprintf:
   702  00A0                     sprintf@f:	
   703                           ; 2 bytes @ 0x0
   704                           
   705  00A0                     conv2@result:	
   706                           ; 1 bytes @ 0x0
   707                           
   708                           
   709                           ; 4 bytes @ 0x0
   710  00A0                     	ds	4
   711  00A4                     conv2@aa:
   712                           
   713                           ; 1 bytes @ 0x4
   714  00A4                     	ds	9
   715  00AD                     ??_sprintf:
   716                           
   717                           ; 1 bytes @ 0xD
   718  00AD                     	ds	5
   719  00B2                     _sprintf$1015:
   720                           
   721                           ; 4 bytes @ 0x12
   722  00B2                     	ds	4
   723  00B6                     sprintf@ap:
   724                           
   725                           ; 1 bytes @ 0x16
   726  00B6                     	ds	1
   727  00B7                     sprintf@val:
   728                           
   729                           ; 4 bytes @ 0x17
   730  00B7                     	ds	4
   731  00BB                     sprintf@flag:
   732                           
   733                           ; 2 bytes @ 0x1B
   734  00BB                     	ds	2
   735  00BD                     sprintf@width:
   736                           
   737                           ; 2 bytes @ 0x1D
   738  00BD                     	ds	2
   739  00BF                     sprintf@tmpval:
   740                           
   741                           ; 4 bytes @ 0x1F
   742  00BF                     	ds	4
   743  00C3                     sprintf@eexp:
   744                           
   745                           ; 2 bytes @ 0x23
   746  00C3                     	ds	2
   747  00C5                     sprintf@fval:
   748                           
   749                           ; 4 bytes @ 0x25
   750  00C5                     	ds	4
   751  00C9                     sprintf@sp:
   752                           
   753                           ; 1 bytes @ 0x29
   754  00C9                     	ds	1
   755  00CA                     sprintf@prec:
   756                           
   757                           ; 2 bytes @ 0x2A
   758  00CA                     	ds	2
   759  00CC                     sprintf@c:
   760                           
   761                           ; 1 bytes @ 0x2C
   762  00CC                     	ds	1
   763  00CD                     ??_main:
   764                           
   765                           ; 1 bytes @ 0x2D
   766  00CD                     	ds	3
   767                           
   768                           	psect	cstackCOMMON
   769  0070                     __pcstackCOMMON:
   770  0070                     ?_isdigit:
   771  0070                     ?___fleq:	
   772                           ; 1 bit 
   773                           
   774  0070                     ?___flge:	
   775                           ; 1 bit 
   776                           
   777  0070                     ?_cfg_clk:	
   778                           ; 1 bit 
   779                           
   780  0070                     ??_cfg_clk:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_setup:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_Lcd_Init:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?_I2C_Master_Start:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ??_I2C_Master_Start:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?_I2C_Master_Write:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_I2C_Master_Stop:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ??_I2C_Master_Stop:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_Lcd_Clear:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ??_isdigit:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_main:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_I2C_Master_Wait:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ??_I2C_Master_Wait:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_Lcd_Port:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ??_Lcd_Port:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_Lcd_Cmd:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_Lcd_Write_Char:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_I2C_Master_Read:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?__Umul8_16:	
   835                           ; 2 bytes @ 0x0
   836                           
   837  0070                     ?___wmul:	
   838                           ; 2 bytes @ 0x0
   839                           
   840  0070                     ?___awmod:	
   841                           ; 2 bytes @ 0x0
   842                           
   843  0070                     ?___lwmod:	
   844                           ; 2 bytes @ 0x0
   845                           
   846  0070                     ?__tdiv_to_l_:	
   847                           ; 2 bytes @ 0x0
   848                           
   849  0070                     ?__div_to_l_:	
   850                           ; 4 bytes @ 0x0
   851                           
   852  0070                     ?___lldiv:	
   853                           ; 4 bytes @ 0x0
   854                           
   855  0070                     ?___flneg:	
   856                           ; 4 bytes @ 0x0
   857                           
   858  0070                     ?___llmod:	
   859                           ; 4 bytes @ 0x0
   860                           
   861  0070                     ?___xxtofl:	
   862                           ; 4 bytes @ 0x0
   863                           
   864  0070                     Lcd_Port@a:	
   865                           ; 4 bytes @ 0x0
   866                           
   867  0070                     __Umul8_16@multiplicand:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     _isdigit$826:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     I2C_Master_Write@d:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     I2C_Master_Read@a:	
   877                           ; 2 bytes @ 0x0
   878                           
   879  0070                     ___wmul@multiplier:	
   880                           ; 2 bytes @ 0x0
   881                           
   882  0070                     ___awmod@divisor:	
   883                           ; 2 bytes @ 0x0
   884                           
   885  0070                     ___lwmod@divisor:	
   886                           ; 2 bytes @ 0x0
   887                           
   888  0070                     ___lldiv@divisor:	
   889                           ; 2 bytes @ 0x0
   890                           
   891  0070                     __div_to_l_@f1:	
   892                           ; 4 bytes @ 0x0
   893                           
   894  0070                     ___fleq@ff1:	
   895                           ; 4 bytes @ 0x0
   896                           
   897  0070                     ___flge@ff1:	
   898                           ; 4 bytes @ 0x0
   899                           
   900  0070                     ___flneg@f1:	
   901                           ; 4 bytes @ 0x0
   902                           
   903  0070                     __tdiv_to_l_@f1:	
   904                           ; 4 bytes @ 0x0
   905                           
   906  0070                     ___llmod@divisor:	
   907                           ; 4 bytes @ 0x0
   908                           
   909  0070                     ___xxtofl@val:	
   910                           ; 4 bytes @ 0x0
   911                           
   912                           
   913                           ; 4 bytes @ 0x0
   914  0070                     	ds	1
   915  0071                     ??_Lcd_Cmd:
   916  0071                     ??_Lcd_Write_Char:	
   917                           ; 1 bytes @ 0x1
   918                           
   919  0071                     isdigit@c:	
   920                           ; 1 bytes @ 0x1
   921                           
   922                           
   923                           ; 1 bytes @ 0x1
   924  0071                     	ds	1
   925  0072                     ??_I2C_Master_Write:
   926  0072                     ??_I2C_Master_Read:	
   927                           ; 1 bytes @ 0x2
   928                           
   929  0072                     ??__Umul8_16:	
   930                           ; 1 bytes @ 0x2
   931                           
   932  0072                     Lcd_Write_Char@a:	
   933                           ; 1 bytes @ 0x2
   934                           
   935  0072                     ___wmul@multiplicand:	
   936                           ; 1 bytes @ 0x2
   937                           
   938  0072                     ___awmod@dividend:	
   939                           ; 2 bytes @ 0x2
   940                           
   941  0072                     ___lwmod@dividend:	
   942                           ; 2 bytes @ 0x2
   943                           
   944                           
   945                           ; 2 bytes @ 0x2
   946  0072                     	ds	1
   947  0073                     ?_Lcd_Write_String:
   948  0073                     Lcd_Cmd@a:	
   949                           ; 1 bytes @ 0x3
   950                           
   951  0073                     Lcd_Write_String@a:	
   952                           ; 1 bytes @ 0x3
   953                           
   954                           
   955                           ; 2 bytes @ 0x3
   956  0073                     	ds	1
   957  0074                     ??_Lcd_Init:
   958  0074                     ??_Lcd_Clear:	
   959                           ; 1 bytes @ 0x4
   960                           
   961  0074                     ?_Lcd_Set_Cursor:	
   962                           ; 1 bytes @ 0x4
   963                           
   964  0074                     ??___wmul:	
   965                           ; 1 bytes @ 0x4
   966                           
   967  0074                     ??___awmod:	
   968                           ; 1 bytes @ 0x4
   969                           
   970  0074                     ??___flneg:	
   971                           ; 1 bytes @ 0x4
   972                           
   973  0074                     ??___lwmod:	
   974                           ; 1 bytes @ 0x4
   975                           
   976  0074                     ??___xxtofl:	
   977                           ; 1 bytes @ 0x4
   978                           
   979  0074                     Lcd_Set_Cursor@b:	
   980                           ; 1 bytes @ 0x4
   981                           
   982  0074                     I2C_Master_Read@temp:	
   983                           ; 1 bytes @ 0x4
   984                           
   985  0074                     ___wmul@product:	
   986                           ; 2 bytes @ 0x4
   987                           
   988  0074                     __Umul8_16@product:	
   989                           ; 2 bytes @ 0x4
   990                           
   991  0074                     ___lldiv@dividend:	
   992                           ; 2 bytes @ 0x4
   993                           
   994  0074                     __div_to_l_@f2:	
   995                           ; 4 bytes @ 0x4
   996                           
   997  0074                     ___fleq@ff2:	
   998                           ; 4 bytes @ 0x4
   999                           
  1000  0074                     ___flge@ff2:	
  1001                           ; 4 bytes @ 0x4
  1002                           
  1003  0074                     __tdiv_to_l_@f2:	
  1004                           ; 4 bytes @ 0x4
  1005                           
  1006  0074                     ___llmod@dividend:	
  1007                           ; 4 bytes @ 0x4
  1008                           
  1009                           
  1010                           ; 4 bytes @ 0x4
  1011  0074                     	ds	1
  1012  0075                     ??_Lcd_Set_Cursor:
  1013  0075                     ??_Lcd_Write_String:	
  1014                           ; 1 bytes @ 0x5
  1015                           
  1016  0075                     ___awmod@counter:	
  1017                           ; 1 bytes @ 0x5
  1018                           
  1019  0075                     ___lwmod@counter:	
  1020                           ; 1 bytes @ 0x5
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0x5
  1024  0075                     	ds	1
  1025  0076                     ?___lwdiv:
  1026  0076                     Lcd_Set_Cursor@a:	
  1027                           ; 2 bytes @ 0x6
  1028                           
  1029  0076                     ___awmod@sign:	
  1030                           ; 1 bytes @ 0x6
  1031                           
  1032  0076                     ___lwdiv@divisor:	
  1033                           ; 1 bytes @ 0x6
  1034                           
  1035  0076                     __Umul8_16@word_mpld:	
  1036                           ; 2 bytes @ 0x6
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x6
  1040  0076                     	ds	1
  1041  0077                     ?___awdiv:
  1042  0077                     Lcd_Set_Cursor@temp:	
  1043                           ; 2 bytes @ 0x7
  1044                           
  1045  0077                     ___awdiv@divisor:	
  1046                           ; 1 bytes @ 0x7
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x7
  1050  0077                     	ds	1
  1051  0078                     ??__tdiv_to_l_:
  1052  0078                     ??__div_to_l_:	
  1053                           ; 1 bytes @ 0x8
  1054                           
  1055  0078                     ??___lldiv:	
  1056                           ; 1 bytes @ 0x8
  1057                           
  1058  0078                     ??___fleq:	
  1059                           ; 1 bytes @ 0x8
  1060                           
  1061  0078                     ??___flge:	
  1062                           ; 1 bytes @ 0x8
  1063                           
  1064  0078                     ??___llmod:	
  1065                           ; 1 bytes @ 0x8
  1066                           
  1067  0078                     __Umul8_16@multiplier:	
  1068                           ; 1 bytes @ 0x8
  1069                           
  1070  0078                     ___xxtofl@sign:	
  1071                           ; 1 bytes @ 0x8
  1072                           
  1073  0078                     Lcd_Write_String@i:	
  1074                           ; 1 bytes @ 0x8
  1075                           
  1076  0078                     ___lwdiv@dividend:	
  1077                           ; 2 bytes @ 0x8
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x8
  1081  0078                     	ds	1
  1082  0079                     ___llmod@counter:
  1083  0079                     ___xxtofl@exp:	
  1084                           ; 1 bytes @ 0x9
  1085                           
  1086  0079                     ___awdiv@dividend:	
  1087                           ; 1 bytes @ 0x9
  1088                           
  1089  0079                     ___lldiv@quotient:	
  1090                           ; 2 bytes @ 0x9
  1091                           
  1092                           
  1093                           ; 4 bytes @ 0x9
  1094  0079                     	ds	1
  1095  007A                     ??___lwdiv:
  1096  007A                     ___xxtofl@arg:	
  1097                           ; 1 bytes @ 0xA
  1098                           
  1099                           
  1100                           ; 4 bytes @ 0xA
  1101  007A                     	ds	1
  1102  007B                     ??___awdiv:
  1103  007B                     ___lwdiv@quotient:	
  1104                           ; 1 bytes @ 0xB
  1105                           
  1106                           
  1107                           ; 2 bytes @ 0xB
  1108  007B                     	ds	2
  1109  007D                     ___lldiv@counter:
  1110  007D                     ___lwdiv@counter:	
  1111                           ; 1 bytes @ 0xD
  1112                           
  1113                           
  1114                           ; 1 bytes @ 0xD
  1115  007D                     	ds	1
  1116  007E                     ??_setup:
  1117  007E                     ??___flsub:	
  1118                           ; 1 bytes @ 0xE
  1119                           
  1120                           
  1121                           	psect	cstackBANK0
  1122  0020                     __pcstackBANK0:	
  1123                           ; 1 bytes @ 0xE
  1124                           
  1125  0020                     ?_I2C_Master_Init:
  1126  0020                     ?_conv3:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0020                     ___awdiv@counter:	
  1130                           ; 4 bytes @ 0x0
  1131                           
  1132  0020                     I2C_Master_Init@c:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0020                     __div_to_l_@quot:	
  1136                           ; 4 bytes @ 0x0
  1137                           
  1138  0020                     __tdiv_to_l_@quot:	
  1139                           ; 4 bytes @ 0x0
  1140                           
  1141                           
  1142                           ; 4 bytes @ 0x0
  1143  0020                     	ds	1
  1144  0021                     ___awdiv@sign:
  1145                           
  1146                           ; 1 bytes @ 0x1
  1147  0021                     	ds	1
  1148  0022                     ___awdiv@quotient:
  1149                           
  1150                           ; 2 bytes @ 0x2
  1151  0022                     	ds	2
  1152  0024                     ??_conv3:
  1153  0024                     ??_I2C_Master_Init:	
  1154                           ; 1 bytes @ 0x4
  1155                           
  1156  0024                     ?___flmul:	
  1157                           ; 1 bytes @ 0x4
  1158                           
  1159  0024                     __div_to_l_@cntr:	
  1160                           ; 4 bytes @ 0x4
  1161                           
  1162  0024                     __tdiv_to_l_@cntr:	
  1163                           ; 1 bytes @ 0x4
  1164                           
  1165  0024                     ___flmul@b:	
  1166                           ; 1 bytes @ 0x4
  1167                           
  1168                           
  1169                           ; 4 bytes @ 0x4
  1170  0024                     	ds	1
  1171  0025                     __div_to_l_@exp1:
  1172  0025                     __tdiv_to_l_@exp1:	
  1173                           ; 1 bytes @ 0x5
  1174                           
  1175                           
  1176                           ; 1 bytes @ 0x5
  1177  0025                     	ds	3
  1178  0028                     conv3@result:
  1179  0028                     ___flmul@a:	
  1180                           ; 4 bytes @ 0x8
  1181                           
  1182                           
  1183                           ; 4 bytes @ 0x8
  1184  0028                     	ds	4
  1185  002C                     ??___flmul:
  1186  002C                     conv3@aa:	
  1187                           ; 1 bytes @ 0xC
  1188                           
  1189                           
  1190                           ; 1 bytes @ 0xC
  1191  002C                     	ds	5
  1192  0031                     ___flmul@sign:
  1193                           
  1194                           ; 1 bytes @ 0x11
  1195  0031                     	ds	1
  1196  0032                     ___flmul@grs:
  1197                           
  1198                           ; 4 bytes @ 0x12
  1199  0032                     	ds	4
  1200  0036                     ___flmul@aexp:
  1201                           
  1202                           ; 1 bytes @ 0x16
  1203  0036                     	ds	1
  1204  0037                     ___flmul@bexp:
  1205                           
  1206                           ; 1 bytes @ 0x17
  1207  0037                     	ds	1
  1208  0038                     ___flmul@prod:
  1209                           
  1210                           ; 4 bytes @ 0x18
  1211  0038                     	ds	4
  1212  003C                     ___flmul@temp:
  1213                           
  1214                           ; 2 bytes @ 0x1C
  1215  003C                     	ds	2
  1216  003E                     ?_conv1:
  1217  003E                     ?_fround:	
  1218                           ; 4 bytes @ 0x1E
  1219                           
  1220  003E                     ?_scale:	
  1221                           ; 4 bytes @ 0x1E
  1222                           
  1223                           
  1224                           ; 4 bytes @ 0x1E
  1225  003E                     	ds	4
  1226  0042                     ??_conv1:
  1227  0042                     ??_fround:	
  1228                           ; 1 bytes @ 0x22
  1229                           
  1230  0042                     ??_scale:	
  1231                           ; 1 bytes @ 0x22
  1232                           
  1233                           
  1234                           ; 1 bytes @ 0x22
  1235  0042                     	ds	4
  1236  0046                     conv1@result:
  1237                           
  1238                           ; 4 bytes @ 0x26
  1239  0046                     	ds	3
  1240  0049                     _fround$1013:
  1241                           
  1242                           ; 4 bytes @ 0x29
  1243  0049                     	ds	1
  1244  004A                     conv1@aa:
  1245                           
  1246                           ; 1 bytes @ 0x2A
  1247  004A                     	ds	2
  1248  004C                     _scale$1014:
  1249                           
  1250                           ; 4 bytes @ 0x2C
  1251  004C                     	ds	1
  1252  004D                     _fround$1012:
  1253                           
  1254                           ; 4 bytes @ 0x2D
  1255  004D                     	ds	3
  1256  0050                     scale@scl:
  1257                           
  1258                           ; 1 bytes @ 0x30
  1259  0050                     	ds	1
  1260  0051                     ?___fltol:
  1261  0051                     fround@prec:	
  1262                           ; 4 bytes @ 0x31
  1263                           
  1264  0051                     ___fltol@f1:	
  1265                           ; 1 bytes @ 0x31
  1266                           
  1267                           
  1268                           ; 4 bytes @ 0x31
  1269  0051                     	ds	1
  1270  0052                     ?___fladd:
  1271  0052                     ___fladd@b:	
  1272                           ; 4 bytes @ 0x32
  1273                           
  1274                           
  1275                           ; 4 bytes @ 0x32
  1276  0052                     	ds	3
  1277  0055                     ??___fltol:
  1278                           
  1279                           ; 1 bytes @ 0x35
  1280  0055                     	ds	1
  1281  0056                     ___fladd@a:
  1282                           
  1283                           ; 4 bytes @ 0x36
  1284  0056                     	ds	4
  1285  005A                     ??___fladd:
  1286  005A                     ___fltol@sign1:	
  1287                           ; 1 bytes @ 0x3A
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0x3A
  1291  005A                     	ds	1
  1292  005B                     ___fltol@exp1:
  1293                           
  1294                           ; 1 bytes @ 0x3B
  1295  005B                     	ds	7
  1296  0062                     ___fladd@signs:
  1297                           
  1298                           ; 1 bytes @ 0x42
  1299  0062                     	ds	1
  1300  0063                     ___fladd@aexp:
  1301                           
  1302                           ; 1 bytes @ 0x43
  1303  0063                     	ds	1
  1304  0064                     ___fladd@bexp:
  1305                           
  1306                           ; 1 bytes @ 0x44
  1307  0064                     	ds	1
  1308  0065                     ___fladd@grs:
  1309                           
  1310                           ; 1 bytes @ 0x45
  1311  0065                     	ds	1
  1312  0066                     ?_conv2:
  1313  0066                     ?___flsub:	
  1314                           ; 4 bytes @ 0x46
  1315                           
  1316  0066                     ___flsub@a:	
  1317                           ; 4 bytes @ 0x46
  1318                           
  1319                           
  1320                           ; 4 bytes @ 0x46
  1321  0066                     	ds	4
  1322  006A                     ??_conv2:
  1323  006A                     ___flsub@b:	
  1324                           ; 1 bytes @ 0x4A
  1325                           
  1326                           
  1327                           ; 4 bytes @ 0x4A
  1328  006A                     	ds	4
  1329                           
  1330                           	psect	maintext
  1331  1185                     __pmaintext:	
  1332 ;;
  1333 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1334 ;;
  1335 ;; *************** function _main *****************
  1336 ;; Defined at:
  1337 ;;		line 66 in file "main4a.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : B00/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0
  1353 ;;      Temps:          0       0       3       0       0
  1354 ;;      Totals:         0       0       3       0       0
  1355 ;;Total ram usage:        3 bytes
  1356 ;; Hardware stack levels required when called:    4
  1357 ;; This function calls:
  1358 ;;		_I2C_Master_Read
  1359 ;;		_I2C_Master_Start
  1360 ;;		_I2C_Master_Stop
  1361 ;;		_I2C_Master_Write
  1362 ;;		_Lcd_Clear
  1363 ;;		_Lcd_Init
  1364 ;;		_Lcd_Set_Cursor
  1365 ;;		_Lcd_Write_String
  1366 ;;		_cfg_clk
  1367 ;;		_conv1
  1368 ;;		_conv2
  1369 ;;		_conv3
  1370 ;;		_setup
  1371 ;;		_sprintf
  1372 ;; This function is called by:
  1373 ;;		Startup code after reset
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           
  1378                           ;psect for function _main
  1379  1185                     _main:
  1380  1185                     l3570:	
  1381                           ;incstack = 0
  1382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1383                           
  1384                           
  1385                           ;main4a.c: 67:     cfg_clk();
  1386  1185  160A  158A  217F  160A  118A  	fcall	_cfg_clk
  1387                           
  1388                           ;main4a.c: 68:     setup();
  1389  118A  160A  158A  2200  160A  118A  	fcall	_setup
  1390                           
  1391                           ;main4a.c: 69:     Lcd_Init();
  1392  118F  160A  158A  247D  160A  118A  	fcall	_Lcd_Init
  1393  1194                     l67:	
  1394                           ;main4a.c: 71:     while(1){
  1395                           
  1396                           
  1397                           ;main4a.c: 72:         I2C_Master_Start();
  1398  1194  160A  158A  218D  160A  118A  	fcall	_I2C_Master_Start
  1399                           
  1400                           ;main4a.c: 73:         I2C_Master_Write(0x80);
  1401  1199  3080               	movlw	128
  1402  119A  00F0               	movwf	I2C_Master_Write@d
  1403  119B  3000               	movlw	0
  1404  119C  00F1               	movwf	I2C_Master_Write@d+1
  1405  119D  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
  1406                           
  1407                           ;main4a.c: 74:         I2C_Master_Write(0xF3);
  1408  11A2  30F3               	movlw	243
  1409  11A3  00F0               	movwf	I2C_Master_Write@d
  1410  11A4  3000               	movlw	0
  1411  11A5  00F1               	movwf	I2C_Master_Write@d+1
  1412  11A6  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
  1413                           
  1414                           ;main4a.c: 75:         I2C_Master_Stop();
  1415  11AB  160A  158A  2196  160A  118A  	fcall	_I2C_Master_Stop
  1416  11B0                     l3572:
  1417                           
  1418                           ;main4a.c: 76:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1419  11B0  3003               	movlw	3
  1420  11B1  1683               	bsf	3,5	;RP0=1, select bank1
  1421  11B2  1303               	bcf	3,6	;RP1=0, select bank1
  1422  11B3  00CF               	movwf	(??_main^(0+128)+2)
  1423  11B4  3008               	movlw	8
  1424  11B5  00CE               	movwf	(??_main^(0+128)+1)
  1425  11B6  3076               	movlw	118
  1426  11B7  00CD               	movwf	??_main^(0+128)
  1427  11B8                     u5757:
  1428  11B8  0BCD               	decfsz	??_main^(0+128),f
  1429  11B9  29B8               	goto	u5757
  1430  11BA  0BCE               	decfsz	(??_main^(0+128)+1),f
  1431  11BB  29B8               	goto	u5757
  1432  11BC  0BCF               	decfsz	(??_main^(0+128)+2),f
  1433  11BD  29B8               	goto	u5757
  1434  11BE  0000               	nop
  1435  11BF                     l3574:
  1436                           
  1437                           ;main4a.c: 78:         I2C_Master_Start();
  1438  11BF  160A  158A  218D  160A  118A  	fcall	_I2C_Master_Start
  1439  11C4                     l3576:
  1440                           
  1441                           ;main4a.c: 79:         I2C_Master_Write(0x81);
  1442  11C4  3081               	movlw	129
  1443  11C5  00F0               	movwf	I2C_Master_Write@d
  1444  11C6  3000               	movlw	0
  1445  11C7  00F1               	movwf	I2C_Master_Write@d+1
  1446  11C8  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
  1447  11CD                     l3578:
  1448                           
  1449                           ;main4a.c: 80:         V1 = I2C_Master_Read(0);
  1450  11CD  3000               	movlw	0
  1451  11CE  00F0               	movwf	I2C_Master_Read@a
  1452  11CF  00F1               	movwf	I2C_Master_Read@a+1
  1453  11D0  160A  158A  22D9  160A  118A  	fcall	_I2C_Master_Read
  1454  11D5  0870               	movf	?_I2C_Master_Read,w
  1455  11D6  1683               	bsf	3,5	;RP0=1, select bank1
  1456  11D7  1303               	bcf	3,6	;RP1=0, select bank1
  1457  11D8  00CD               	movwf	??_main^(0+128)
  1458  11D9  084D               	movf	??_main^(0+128),w
  1459  11DA  00DE               	movwf	_V1^(0+128)
  1460  11DB                     l3580:
  1461                           
  1462                           ;main4a.c: 81:         I2C_Master_Stop();
  1463  11DB  160A  158A  2196  160A  118A  	fcall	_I2C_Master_Stop
  1464  11E0                     l3582:
  1465                           
  1466                           ;main4a.c: 82:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1467  11E0  3003               	movlw	3
  1468  11E1  1683               	bsf	3,5	;RP0=1, select bank1
  1469  11E2  1303               	bcf	3,6	;RP1=0, select bank1
  1470  11E3  00CF               	movwf	(??_main^(0+128)+2)
  1471  11E4  3008               	movlw	8
  1472  11E5  00CE               	movwf	(??_main^(0+128)+1)
  1473  11E6  3076               	movlw	118
  1474  11E7  00CD               	movwf	??_main^(0+128)
  1475  11E8                     u5767:
  1476  11E8  0BCD               	decfsz	??_main^(0+128),f
  1477  11E9  29E8               	goto	u5767
  1478  11EA  0BCE               	decfsz	(??_main^(0+128)+1),f
  1479  11EB  29E8               	goto	u5767
  1480  11EC  0BCF               	decfsz	(??_main^(0+128)+2),f
  1481  11ED  29E8               	goto	u5767
  1482  11EE  0000               	nop
  1483                           
  1484                           ;main4a.c: 84:         I2C_Master_Start();
  1485  11EF  160A  158A  218D  160A  118A  	fcall	_I2C_Master_Start
  1486                           
  1487                           ;main4a.c: 85:         I2C_Master_Write(0x50);
  1488  11F4  3050               	movlw	80
  1489  11F5  00F0               	movwf	I2C_Master_Write@d
  1490  11F6  3000               	movlw	0
  1491  11F7  00F1               	movwf	I2C_Master_Write@d+1
  1492  11F8  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
  1493                           
  1494                           ;main4a.c: 86:         I2C_Master_Write(PORTB);
  1495  11FD  1283               	bcf	3,5	;RP0=0, select bank0
  1496  11FE  1303               	bcf	3,6	;RP1=0, select bank0
  1497  11FF  0806               	movf	6,w	;volatile
  1498  1200  1683               	bsf	3,5	;RP0=1, select bank1
  1499  1201  1303               	bcf	3,6	;RP1=0, select bank1
  1500  1202  00CD               	movwf	??_main^(0+128)
  1501  1203  01CE               	clrf	(??_main^(0+128)+1)
  1502  1204  084D               	movf	??_main^(0+128),w
  1503  1205  00F0               	movwf	I2C_Master_Write@d
  1504  1206  084E               	movf	(??_main+1)^(0+128),w
  1505  1207  00F1               	movwf	I2C_Master_Write@d+1
  1506  1208  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
  1507                           
  1508                           ;main4a.c: 87:         I2C_Master_Stop();
  1509  120D  160A  158A  2196  160A  118A  	fcall	_I2C_Master_Stop
  1510  1212                     l3584:
  1511                           
  1512                           ;main4a.c: 88:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1513  1212  3003               	movlw	3
  1514  1213  1683               	bsf	3,5	;RP0=1, select bank1
  1515  1214  1303               	bcf	3,6	;RP1=0, select bank1
  1516  1215  00CF               	movwf	(??_main^(0+128)+2)
  1517  1216  3008               	movlw	8
  1518  1217  00CE               	movwf	(??_main^(0+128)+1)
  1519  1218  3076               	movlw	118
  1520  1219  00CD               	movwf	??_main^(0+128)
  1521  121A                     u5777:
  1522  121A  0BCD               	decfsz	??_main^(0+128),f
  1523  121B  2A1A               	goto	u5777
  1524  121C  0BCE               	decfsz	(??_main^(0+128)+1),f
  1525  121D  2A1A               	goto	u5777
  1526  121E  0BCF               	decfsz	(??_main^(0+128)+2),f
  1527  121F  2A1A               	goto	u5777
  1528  1220  0000               	nop
  1529  1221                     l3586:
  1530                           
  1531                           ;main4a.c: 90:         I2C_Master_Start();
  1532  1221  160A  158A  218D  160A  118A  	fcall	_I2C_Master_Start
  1533  1226                     l3588:
  1534                           
  1535                           ;main4a.c: 91:         I2C_Master_Write(0x51);
  1536  1226  3051               	movlw	81
  1537  1227  00F0               	movwf	I2C_Master_Write@d
  1538  1228  3000               	movlw	0
  1539  1229  00F1               	movwf	I2C_Master_Write@d+1
  1540  122A  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
  1541  122F                     l3590:
  1542                           
  1543                           ;main4a.c: 92:         V2 = I2C_Master_Read(0);
  1544  122F  3000               	movlw	0
  1545  1230  00F0               	movwf	I2C_Master_Read@a
  1546  1231  00F1               	movwf	I2C_Master_Read@a+1
  1547  1232  160A  158A  22D9  160A  118A  	fcall	_I2C_Master_Read
  1548  1237  0870               	movf	?_I2C_Master_Read,w
  1549  1238  1683               	bsf	3,5	;RP0=1, select bank1
  1550  1239  1303               	bcf	3,6	;RP1=0, select bank1
  1551  123A  00CD               	movwf	??_main^(0+128)
  1552  123B  084D               	movf	??_main^(0+128),w
  1553  123C  00DD               	movwf	_V2^(0+128)
  1554  123D                     l3592:
  1555                           
  1556                           ;main4a.c: 93:         I2C_Master_Stop();
  1557  123D  160A  158A  2196  160A  118A  	fcall	_I2C_Master_Stop
  1558  1242                     l3594:
  1559                           
  1560                           ;main4a.c: 94:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1561  1242  3003               	movlw	3
  1562  1243  1683               	bsf	3,5	;RP0=1, select bank1
  1563  1244  1303               	bcf	3,6	;RP1=0, select bank1
  1564  1245  00CF               	movwf	(??_main^(0+128)+2)
  1565  1246  3008               	movlw	8
  1566  1247  00CE               	movwf	(??_main^(0+128)+1)
  1567  1248  3076               	movlw	118
  1568  1249  00CD               	movwf	??_main^(0+128)
  1569  124A                     u5787:
  1570  124A  0BCD               	decfsz	??_main^(0+128),f
  1571  124B  2A4A               	goto	u5787
  1572  124C  0BCE               	decfsz	(??_main^(0+128)+1),f
  1573  124D  2A4A               	goto	u5787
  1574  124E  0BCF               	decfsz	(??_main^(0+128)+2),f
  1575  124F  2A4A               	goto	u5787
  1576  1250  0000               	nop
  1577                           
  1578                           ;main4a.c: 96:         I2C_Master_Start();
  1579  1251  160A  158A  218D  160A  118A  	fcall	_I2C_Master_Start
  1580                           
  1581                           ;main4a.c: 97:         I2C_Master_Write(0x40);
  1582  1256  3040               	movlw	64
  1583  1257  00F0               	movwf	I2C_Master_Write@d
  1584  1258  3000               	movlw	0
  1585  1259  00F1               	movwf	I2C_Master_Write@d+1
  1586  125A  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
  1587                           
  1588                           ;main4a.c: 98:         I2C_Master_Write(PORTB);
  1589  125F  1283               	bcf	3,5	;RP0=0, select bank0
  1590  1260  1303               	bcf	3,6	;RP1=0, select bank0
  1591  1261  0806               	movf	6,w	;volatile
  1592  1262  1683               	bsf	3,5	;RP0=1, select bank1
  1593  1263  1303               	bcf	3,6	;RP1=0, select bank1
  1594  1264  00CD               	movwf	??_main^(0+128)
  1595  1265  01CE               	clrf	(??_main^(0+128)+1)
  1596  1266  084D               	movf	??_main^(0+128),w
  1597  1267  00F0               	movwf	I2C_Master_Write@d
  1598  1268  084E               	movf	(??_main+1)^(0+128),w
  1599  1269  00F1               	movwf	I2C_Master_Write@d+1
  1600  126A  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
  1601                           
  1602                           ;main4a.c: 99:         I2C_Master_Stop();
  1603  126F  160A  158A  2196  160A  118A  	fcall	_I2C_Master_Stop
  1604  1274                     l3596:
  1605                           
  1606                           ;main4a.c: 100:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1607  1274  3003               	movlw	3
  1608  1275  1683               	bsf	3,5	;RP0=1, select bank1
  1609  1276  1303               	bcf	3,6	;RP1=0, select bank1
  1610  1277  00CF               	movwf	(??_main^(0+128)+2)
  1611  1278  3008               	movlw	8
  1612  1279  00CE               	movwf	(??_main^(0+128)+1)
  1613  127A  3076               	movlw	118
  1614  127B  00CD               	movwf	??_main^(0+128)
  1615  127C                     u5797:
  1616  127C  0BCD               	decfsz	??_main^(0+128),f
  1617  127D  2A7C               	goto	u5797
  1618  127E  0BCE               	decfsz	(??_main^(0+128)+1),f
  1619  127F  2A7C               	goto	u5797
  1620  1280  0BCF               	decfsz	(??_main^(0+128)+2),f
  1621  1281  2A7C               	goto	u5797
  1622  1282  0000               	nop
  1623  1283                     l3598:
  1624                           
  1625                           ;main4a.c: 102:         I2C_Master_Start();
  1626  1283  160A  158A  218D  160A  118A  	fcall	_I2C_Master_Start
  1627  1288                     l3600:
  1628                           
  1629                           ;main4a.c: 103:         I2C_Master_Write(0x41);
  1630  1288  3041               	movlw	65
  1631  1289  00F0               	movwf	I2C_Master_Write@d
  1632  128A  3000               	movlw	0
  1633  128B  00F1               	movwf	I2C_Master_Write@d+1
  1634  128C  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
  1635  1291                     l3602:
  1636                           
  1637                           ;main4a.c: 104:         V3 = I2C_Master_Read(0);
  1638  1291  3000               	movlw	0
  1639  1292  00F0               	movwf	I2C_Master_Read@a
  1640  1293  00F1               	movwf	I2C_Master_Read@a+1
  1641  1294  160A  158A  22D9  160A  118A  	fcall	_I2C_Master_Read
  1642  1299  0870               	movf	?_I2C_Master_Read,w
  1643  129A  1683               	bsf	3,5	;RP0=1, select bank1
  1644  129B  1303               	bcf	3,6	;RP1=0, select bank1
  1645  129C  00CD               	movwf	??_main^(0+128)
  1646  129D  084D               	movf	??_main^(0+128),w
  1647  129E  00DC               	movwf	_V3^(0+128)
  1648  129F                     l3604:
  1649                           
  1650                           ;main4a.c: 105:         I2C_Master_Stop();
  1651  129F  160A  158A  2196  160A  118A  	fcall	_I2C_Master_Stop
  1652  12A4                     l3606:
  1653                           
  1654                           ;main4a.c: 106:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1655  12A4  3003               	movlw	3
  1656  12A5  1683               	bsf	3,5	;RP0=1, select bank1
  1657  12A6  1303               	bcf	3,6	;RP1=0, select bank1
  1658  12A7  00CF               	movwf	(??_main^(0+128)+2)
  1659  12A8  3008               	movlw	8
  1660  12A9  00CE               	movwf	(??_main^(0+128)+1)
  1661  12AA  3076               	movlw	118
  1662  12AB  00CD               	movwf	??_main^(0+128)
  1663  12AC                     u5807:
  1664  12AC  0BCD               	decfsz	??_main^(0+128),f
  1665  12AD  2AAC               	goto	u5807
  1666  12AE  0BCE               	decfsz	(??_main^(0+128)+1),f
  1667  12AF  2AAC               	goto	u5807
  1668  12B0  0BCF               	decfsz	(??_main^(0+128)+2),f
  1669  12B1  2AAC               	goto	u5807
  1670  12B2  0000               	nop
  1671                           
  1672                           ;main4a.c: 108:         Lcd_Clear();
  1673  12B3  160A  158A  21AC  160A  118A  	fcall	_Lcd_Clear
  1674                           
  1675                           ;main4a.c: 109:         Lcd_Set_Cursor(1,1);
  1676  12B8  01F4               	clrf	Lcd_Set_Cursor@b
  1677  12B9  0AF4               	incf	Lcd_Set_Cursor@b,f
  1678  12BA  3001               	movlw	1
  1679  12BB  160A  158A  221C  160A  118A  	fcall	_Lcd_Set_Cursor
  1680  12C0                     l3608:
  1681                           
  1682                           ;main4a.c: 110:         Lcd_Write_String(" S1:   S2:   S3:");
  1683  12C0  30A5               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1684  12C1  00F3               	movwf	Lcd_Write_String@a
  1685  12C2  3080               	movlw	128
  1686  12C3  00F4               	movwf	Lcd_Write_String@a+1
  1687  12C4  160A  158A  23F7  160A  118A  	fcall	_Lcd_Write_String
  1688  12C9                     l3610:
  1689                           
  1690                           ;main4a.c: 111:         v11 = conv2(V1);
  1691  12C9  1683               	bsf	3,5	;RP0=1, select bank1
  1692  12CA  1303               	bcf	3,6	;RP1=0, select bank1
  1693  12CB  085E               	movf	_V1^(0+128),w
  1694  12CC  120A  158A  20C7  160A  118A  	fcall	_conv2
  1695  12D1  1283               	bcf	3,5	;RP0=0, select bank0
  1696  12D2  1303               	bcf	3,6	;RP1=0, select bank0
  1697  12D3  0869               	movf	?_conv2+3,w
  1698  12D4  1683               	bsf	3,5	;RP0=1, select bank1
  1699  12D5  1303               	bcf	3,6	;RP1=0, select bank1
  1700  12D6  00DB               	movwf	(_v11+3)^(0+128)
  1701  12D7  1283               	bcf	3,5	;RP0=0, select bank0
  1702  12D8  1303               	bcf	3,6	;RP1=0, select bank0
  1703  12D9  0868               	movf	?_conv2+2,w
  1704  12DA  1683               	bsf	3,5	;RP0=1, select bank1
  1705  12DB  1303               	bcf	3,6	;RP1=0, select bank1
  1706  12DC  00DA               	movwf	(_v11+2)^(0+128)
  1707  12DD  1283               	bcf	3,5	;RP0=0, select bank0
  1708  12DE  1303               	bcf	3,6	;RP1=0, select bank0
  1709  12DF  0867               	movf	?_conv2+1,w
  1710  12E0  1683               	bsf	3,5	;RP0=1, select bank1
  1711  12E1  1303               	bcf	3,6	;RP1=0, select bank1
  1712  12E2  00D9               	movwf	(_v11+1)^(0+128)
  1713  12E3  1283               	bcf	3,5	;RP0=0, select bank0
  1714  12E4  1303               	bcf	3,6	;RP1=0, select bank0
  1715  12E5  0866               	movf	?_conv2,w
  1716  12E6  1683               	bsf	3,5	;RP0=1, select bank1
  1717  12E7  1303               	bcf	3,6	;RP1=0, select bank1
  1718  12E8  00D8               	movwf	_v11^(0+128)
  1719  12E9                     l3612:
  1720                           
  1721                           ;main4a.c: 112:         v22 = conv1(V2);
  1722  12E9  085D               	movf	_V2^(0+128),w
  1723  12EA  160A  158A  23B7  160A  118A  	fcall	_conv1
  1724  12EF  1283               	bcf	3,5	;RP0=0, select bank0
  1725  12F0  1303               	bcf	3,6	;RP1=0, select bank0
  1726  12F1  0841               	movf	?_conv1+3,w
  1727  12F2  1683               	bsf	3,5	;RP0=1, select bank1
  1728  12F3  1303               	bcf	3,6	;RP1=0, select bank1
  1729  12F4  00D7               	movwf	(_v22+3)^(0+128)
  1730  12F5  1283               	bcf	3,5	;RP0=0, select bank0
  1731  12F6  1303               	bcf	3,6	;RP1=0, select bank0
  1732  12F7  0840               	movf	?_conv1+2,w
  1733  12F8  1683               	bsf	3,5	;RP0=1, select bank1
  1734  12F9  1303               	bcf	3,6	;RP1=0, select bank1
  1735  12FA  00D6               	movwf	(_v22+2)^(0+128)
  1736  12FB  1283               	bcf	3,5	;RP0=0, select bank0
  1737  12FC  1303               	bcf	3,6	;RP1=0, select bank0
  1738  12FD  083F               	movf	?_conv1+1,w
  1739  12FE  1683               	bsf	3,5	;RP0=1, select bank1
  1740  12FF  1303               	bcf	3,6	;RP1=0, select bank1
  1741  1300  00D5               	movwf	(_v22+1)^(0+128)
  1742  1301  1283               	bcf	3,5	;RP0=0, select bank0
  1743  1302  1303               	bcf	3,6	;RP1=0, select bank0
  1744  1303  083E               	movf	?_conv1,w
  1745  1304  1683               	bsf	3,5	;RP0=1, select bank1
  1746  1305  1303               	bcf	3,6	;RP1=0, select bank1
  1747  1306  00D4               	movwf	_v22^(0+128)
  1748  1307                     l3614:
  1749                           
  1750                           ;main4a.c: 113:         v33 = conv3(V3);
  1751  1307  085C               	movf	_V3^(0+128),w
  1752  1308  160A  158A  22B0  160A  118A  	fcall	_conv3
  1753  130D  1283               	bcf	3,5	;RP0=0, select bank0
  1754  130E  1303               	bcf	3,6	;RP1=0, select bank0
  1755  130F  0823               	movf	?_conv3+3,w
  1756  1310  1683               	bsf	3,5	;RP0=1, select bank1
  1757  1311  1303               	bcf	3,6	;RP1=0, select bank1
  1758  1312  00D3               	movwf	(_v33+3)^(0+128)
  1759  1313  1283               	bcf	3,5	;RP0=0, select bank0
  1760  1314  1303               	bcf	3,6	;RP1=0, select bank0
  1761  1315  0822               	movf	?_conv3+2,w
  1762  1316  1683               	bsf	3,5	;RP0=1, select bank1
  1763  1317  1303               	bcf	3,6	;RP1=0, select bank1
  1764  1318  00D2               	movwf	(_v33+2)^(0+128)
  1765  1319  1283               	bcf	3,5	;RP0=0, select bank0
  1766  131A  1303               	bcf	3,6	;RP1=0, select bank0
  1767  131B  0821               	movf	?_conv3+1,w
  1768  131C  1683               	bsf	3,5	;RP0=1, select bank1
  1769  131D  1303               	bcf	3,6	;RP1=0, select bank1
  1770  131E  00D1               	movwf	(_v33+1)^(0+128)
  1771  131F  1283               	bcf	3,5	;RP0=0, select bank0
  1772  1320  1303               	bcf	3,6	;RP1=0, select bank0
  1773  1321  0820               	movf	?_conv3,w
  1774  1322  1683               	bsf	3,5	;RP0=1, select bank1
  1775  1323  1303               	bcf	3,6	;RP1=0, select bank1
  1776  1324  00D0               	movwf	_v33^(0+128)
  1777  1325                     l3616:
  1778                           
  1779                           ;main4a.c: 115:         Lcd_Set_Cursor(2,1);
  1780  1325  01F4               	clrf	Lcd_Set_Cursor@b
  1781  1326  0AF4               	incf	Lcd_Set_Cursor@b,f
  1782  1327  3002               	movlw	2
  1783  1328  160A  158A  221C  160A  118A  	fcall	_Lcd_Set_Cursor
  1784  132D                     l3618:
  1785                           
  1786                           ;main4a.c: 116:         sprintf(f1, "%3.1fK %3.1fV %3.0f",v11, v22, v33);
  1787  132D  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1788  132E  1683               	bsf	3,5	;RP0=1, select bank1
  1789  132F  1303               	bcf	3,6	;RP1=0, select bank1
  1790  1330  00CD               	movwf	??_main^(0+128)
  1791  1331  084D               	movf	??_main^(0+128),w
  1792  1332  00A0               	movwf	sprintf@f^(0+128)
  1793  1333  085B               	movf	(_v11+3)^(0+128),w
  1794  1334  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1795  1335  085A               	movf	(_v11+2)^(0+128),w
  1796  1336  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1797  1337  0859               	movf	(_v11+1)^(0+128),w
  1798  1338  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1799  1339  0858               	movf	_v11^(0+128),w
  1800  133A  00A1               	movwf	(?_sprintf^(0+128)+1)
  1801  133B  0857               	movf	(_v22+3)^(0+128),w
  1802  133C  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1803  133D  0856               	movf	(_v22+2)^(0+128),w
  1804  133E  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1805  133F  0855               	movf	(_v22+1)^(0+128),w
  1806  1340  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1807  1341  0854               	movf	_v22^(0+128),w
  1808  1342  00A5               	movwf	(?_sprintf^(0+128)+5)
  1809  1343  0853               	movf	(_v33+3)^(0+128),w
  1810  1344  00AC               	movwf	((?_sprintf+3)^(0+128)+9)
  1811  1345  0852               	movf	(_v33+2)^(0+128),w
  1812  1346  00AB               	movwf	((?_sprintf+2)^(0+128)+9)
  1813  1347  0851               	movf	(_v33+1)^(0+128),w
  1814  1348  00AA               	movwf	((?_sprintf+1)^(0+128)+9)
  1815  1349  0850               	movf	_v33^(0+128),w
  1816  134A  00A9               	movwf	(?_sprintf^(0+128)+9)
  1817  134B  30DF               	movlw	(low (_f1| 0))& (0+255)
  1818  134C  120A  118A  2078  160A  118A  	fcall	_sprintf
  1819  1351                     l3620:
  1820                           
  1821                           ;main4a.c: 117:         Lcd_Write_String(f1);
  1822  1351  30DF               	movlw	(low (_f1| 0))& (0+255)
  1823  1352  00F3               	movwf	Lcd_Write_String@a
  1824  1353  3000               	movlw	0
  1825  1354  00F4               	movwf	Lcd_Write_String@a+1
  1826  1355  160A  158A  23F7  160A  118A  	fcall	_Lcd_Write_String
  1827  135A                     l3622:
  1828                           
  1829                           ;main4a.c: 119:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1830  135A  3002               	movlw	2
  1831  135B  1683               	bsf	3,5	;RP0=1, select bank1
  1832  135C  1303               	bcf	3,6	;RP1=0, select bank1
  1833  135D  00CF               	movwf	(??_main^(0+128)+2)
  1834  135E  3004               	movlw	4
  1835  135F  00CE               	movwf	(??_main^(0+128)+1)
  1836  1360  30B9               	movlw	185
  1837  1361  00CD               	movwf	??_main^(0+128)
  1838  1362                     u5817:
  1839  1362  0BCD               	decfsz	??_main^(0+128),f
  1840  1363  2B62               	goto	u5817
  1841  1364  0BCE               	decfsz	(??_main^(0+128)+1),f
  1842  1365  2B62               	goto	u5817
  1843  1366  0BCF               	decfsz	(??_main^(0+128)+2),f
  1844  1367  2B62               	goto	u5817
  1845  1368  2B69               	nop2
  1846  1369  2994               	goto	l67
  1847  136A  120A  118A  2800   	ljmp	start
  1848  136D                     __end_of_main:
  1849                           
  1850                           	psect	text1
  1851  0078                     __ptext1:	
  1852 ;; *************** function _sprintf *****************
  1853 ;; Defined at:
  1854 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  sp              1    wreg     PTR unsigned char 
  1857 ;;		 -> f1(10), 
  1858 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1859 ;;		 -> STR_2(20), 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1862 ;;		 -> f1(10), 
  1863 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1864 ;;  tmpval          4   31[BANK1 ] struct .
  1865 ;;  val             4   23[BANK1 ] unsigned long 
  1866 ;;  prec            2   42[BANK1 ] int 
  1867 ;;  eexp            2   35[BANK1 ] int 
  1868 ;;  width           2   29[BANK1 ] int 
  1869 ;;  flag            2   27[BANK1 ] unsigned short 
  1870 ;;  cp              2    0        PTR const unsigned char 
  1871 ;;  len             2    0        unsigned int 
  1872 ;;  c               1   44[BANK1 ] unsigned char 
  1873 ;;  ap              1   22[BANK1 ] PTR void [1]
  1874 ;;		 -> ?_sprintf(2), 
  1875 ;;  d               1    0        unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2    0[BANK1 ] int 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0      13       0       0
  1886 ;;      Locals:         0       0      27       0       0
  1887 ;;      Temps:          0       0       5       0       0
  1888 ;;      Totals:         0       0      45       0       0
  1889 ;;Total ram usage:       45 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    3
  1892 ;; This function calls:
  1893 ;;		___awdiv
  1894 ;;		___fladd
  1895 ;;		___fleq
  1896 ;;		___flge
  1897 ;;		___flmul
  1898 ;;		___flneg
  1899 ;;		___flsub
  1900 ;;		___fltol
  1901 ;;		___lldiv
  1902 ;;		___llmod
  1903 ;;		___wmul
  1904 ;;		___xxtofl
  1905 ;;		__div_to_l_
  1906 ;;		__tdiv_to_l_
  1907 ;;		_fround
  1908 ;;		_isdigit
  1909 ;;		_scale
  1910 ;; This function is called by:
  1911 ;;		_main
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function _sprintf
  1917  0078                     _sprintf:
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1921                           ;sprintf@sp stored from wreg
  1922  0078  1683               	bsf	3,5	;RP0=1, select bank1
  1923  0079  1303               	bcf	3,6	;RP1=0, select bank1
  1924  007A  00C9               	movwf	sprintf@sp^(0+128)
  1925  007B                     l3308:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1928  007B  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1929  007C  00AD               	movwf	??_sprintf^(0+128)
  1930  007D  082D               	movf	??_sprintf^(0+128),w
  1931  007E  00B6               	movwf	sprintf@ap^(0+128)
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1934  007F  2FDC               	goto	l3558
  1935  0080                     l3310:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1938  0080  3025               	movlw	37
  1939  0081  064C               	xorwf	sprintf@c^(0+128),w
  1940  0082  1903               	btfsc	3,2
  1941  0083  2885               	goto	u5281
  1942  0084  2886               	goto	u5280
  1943  0085                     u5281:
  1944  0085  2892               	goto	l3316
  1945  0086                     u5280:
  1946  0086                     l3312:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1949  0086  084C               	movf	sprintf@c^(0+128),w
  1950  0087  00AD               	movwf	??_sprintf^(0+128)
  1951  0088  0849               	movf	sprintf@sp^(0+128),w
  1952  0089  0084               	movwf	4
  1953  008A  082D               	movf	??_sprintf^(0+128),w
  1954  008B  1383               	bcf	3,7	;select IRP bank0
  1955  008C  0080               	movwf	0
  1956  008D                     l3314:
  1957  008D  3001               	movlw	1
  1958  008E  00AD               	movwf	??_sprintf^(0+128)
  1959  008F  082D               	movf	??_sprintf^(0+128),w
  1960  0090  07C9               	addwf	sprintf@sp^(0+128),f
  1961                           
  1962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1963  0091  2FDC               	goto	l3558
  1964  0092                     l3316:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1967  0092  01BD               	clrf	sprintf@width^(0+128)
  1968  0093  01BE               	clrf	(sprintf@width+1)^(0+128)
  1969                           
  1970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1971  0094  01BB               	clrf	sprintf@flag^(0+128)
  1972  0095  01BC               	clrf	(sprintf@flag+1)^(0+128)
  1973  0096                     l3318:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1976  0096  0820               	movf	sprintf@f^(0+128),w
  1977  0097  0084               	movwf	4
  1978  0098  120A  158A  200A  120A  118A  	fcall	stringdir
  1979  009D  160A  158A  21B9  120A  118A  	fcall	_isdigit
  1980  00A2  1C03               	btfss	3,0
  1981  00A3  28A5               	goto	u5291
  1982  00A4  28A6               	goto	u5290
  1983  00A5                     u5291:
  1984  00A5  28E6               	goto	l3330
  1985  00A6                     u5290:
  1986  00A6                     l3320:
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1989  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1990  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1991  00A8  01BD               	clrf	sprintf@width^(0+128)
  1992  00A9  01BE               	clrf	(sprintf@width+1)^(0+128)
  1993  00AA                     l3322:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1996  00AA  300A               	movlw	10
  1997  00AB  00F0               	movwf	___wmul@multiplier
  1998  00AC  3000               	movlw	0
  1999  00AD  00F1               	movwf	___wmul@multiplier+1
  2000  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  2001  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  2002  00B0  083E               	movf	(sprintf@width+1)^(0+128),w
  2003  00B1  00F3               	movwf	___wmul@multiplicand+1
  2004  00B2  083D               	movf	sprintf@width^(0+128),w
  2005  00B3  00F2               	movwf	___wmul@multiplicand
  2006  00B4  160A  158A  2264  120A  118A  	fcall	___wmul
  2007  00B9  0871               	movf	?___wmul+1,w
  2008  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  2009  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  2010  00BC  00BE               	movwf	(sprintf@width+1)^(0+128)
  2011  00BD  0870               	movf	?___wmul,w
  2012  00BE  00BD               	movwf	sprintf@width^(0+128)
  2013  00BF                     l3324:
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2016  00BF  0820               	movf	sprintf@f^(0+128),w
  2017  00C0  0084               	movwf	4
  2018  00C1  120A  158A  200A  120A  118A  	fcall	stringdir
  2019  00C6  3ED0               	addlw	208
  2020  00C7  00AD               	movwf	??_sprintf^(0+128)
  2021  00C8  30FF               	movlw	255
  2022  00C9  1803               	skipnc
  2023  00CA  3000               	movlw	0
  2024  00CB  00AE               	movwf	(??_sprintf^(0+128)+1)
  2025  00CC  082D               	movf	??_sprintf^(0+128),w
  2026  00CD  07BD               	addwf	sprintf@width^(0+128),f
  2027  00CE  1803               	skipnc
  2028  00CF  0ABE               	incf	(sprintf@width+1)^(0+128),f
  2029  00D0  082E               	movf	(??_sprintf+1)^(0+128),w
  2030  00D1  07BE               	addwf	(sprintf@width+1)^(0+128),f
  2031  00D2                     l3326:
  2032  00D2  3001               	movlw	1
  2033  00D3  00AD               	movwf	??_sprintf^(0+128)
  2034  00D4  082D               	movf	??_sprintf^(0+128),w
  2035  00D5  07A0               	addwf	sprintf@f^(0+128),f
  2036  00D6                     l3328:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2039  00D6  0820               	movf	sprintf@f^(0+128),w
  2040  00D7  0084               	movwf	4
  2041  00D8  120A  158A  200A  120A  118A  	fcall	stringdir
  2042  00DD  160A  158A  21B9  120A  118A  	fcall	_isdigit
  2043  00E2  1803               	btfsc	3,0
  2044  00E3  28E5               	goto	u5301
  2045  00E4  28E6               	goto	u5300
  2046  00E5                     u5301:
  2047  00E5  28AA               	goto	l3322
  2048  00E6                     u5300:
  2049  00E6                     l3330:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2052  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  2053  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  2054  00E8  0820               	movf	sprintf@f^(0+128),w
  2055  00E9  0084               	movwf	4
  2056  00EA  120A  158A  200A  120A  118A  	fcall	stringdir
  2057  00EF  3A2E               	xorlw	46
  2058  00F0  1D03               	skipz
  2059  00F1  28F3               	goto	u5311
  2060  00F2  28F4               	goto	u5310
  2061  00F3                     u5311:
  2062  00F3  2939               	goto	l3346
  2063  00F4                     u5310:
  2064  00F4                     l3332:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2067  00F4  173C               	bsf	(sprintf@flag^(0+128)+1),6
  2068  00F5                     l3334:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2071  00F5  3001               	movlw	1
  2072  00F6  00AD               	movwf	??_sprintf^(0+128)
  2073  00F7  082D               	movf	??_sprintf^(0+128),w
  2074  00F8  07A0               	addwf	sprintf@f^(0+128),f
  2075  00F9                     l3336:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2078  00F9  01CA               	clrf	sprintf@prec^(0+128)
  2079  00FA  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2082  00FB  2928               	goto	l3344
  2083  00FC                     l3338:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2086  00FC  300A               	movlw	10
  2087  00FD  00F0               	movwf	___wmul@multiplier
  2088  00FE  3000               	movlw	0
  2089  00FF  00F1               	movwf	___wmul@multiplier+1
  2090  0100  1683               	bsf	3,5	;RP0=1, select bank1
  2091  0101  1303               	bcf	3,6	;RP1=0, select bank1
  2092  0102  084B               	movf	(sprintf@prec+1)^(0+128),w
  2093  0103  00F3               	movwf	___wmul@multiplicand+1
  2094  0104  084A               	movf	sprintf@prec^(0+128),w
  2095  0105  00F2               	movwf	___wmul@multiplicand
  2096  0106  160A  158A  2264  120A  118A  	fcall	___wmul
  2097  010B  0871               	movf	?___wmul+1,w
  2098  010C  1683               	bsf	3,5	;RP0=1, select bank1
  2099  010D  1303               	bcf	3,6	;RP1=0, select bank1
  2100  010E  00CB               	movwf	(sprintf@prec+1)^(0+128)
  2101  010F  0870               	movf	?___wmul,w
  2102  0110  00CA               	movwf	sprintf@prec^(0+128)
  2103  0111                     l3340:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2106  0111  0820               	movf	sprintf@f^(0+128),w
  2107  0112  0084               	movwf	4
  2108  0113  120A  158A  200A  120A  118A  	fcall	stringdir
  2109  0118  3ED0               	addlw	208
  2110  0119  00AD               	movwf	??_sprintf^(0+128)
  2111  011A  30FF               	movlw	255
  2112  011B  1803               	skipnc
  2113  011C  3000               	movlw	0
  2114  011D  00AE               	movwf	(??_sprintf^(0+128)+1)
  2115  011E  082D               	movf	??_sprintf^(0+128),w
  2116  011F  07CA               	addwf	sprintf@prec^(0+128),f
  2117  0120  1803               	skipnc
  2118  0121  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  2119  0122  082E               	movf	(??_sprintf+1)^(0+128),w
  2120  0123  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  2121  0124                     l3342:
  2122  0124  3001               	movlw	1
  2123  0125  00AD               	movwf	??_sprintf^(0+128)
  2124  0126  082D               	movf	??_sprintf^(0+128),w
  2125  0127  07A0               	addwf	sprintf@f^(0+128),f
  2126  0128                     l3344:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2129  0128  0820               	movf	sprintf@f^(0+128),w
  2130  0129  0084               	movwf	4
  2131  012A  120A  158A  200A  120A  118A  	fcall	stringdir
  2132  012F  160A  158A  21B9  120A  118A  	fcall	_isdigit
  2133  0134  1803               	btfsc	3,0
  2134  0135  2937               	goto	u5321
  2135  0136  2938               	goto	u5320
  2136  0137                     u5321:
  2137  0137  28FC               	goto	l3338
  2138  0138                     u5320:
  2139  0138  293F               	goto	l3352
  2140  0139                     l3346:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2143  0139  01CA               	clrf	sprintf@prec^(0+128)
  2144  013A  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2145  013B                     l3348:
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2148  013B  163C               	bsf	(sprintf@flag^(0+128)+1),4
  2149  013C  293F               	goto	l3352
  2150  013D                     l342:	
  2151                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2152                           
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2155  013D  153C               	bsf	(sprintf@flag^(0+128)+1),2
  2156                           
  2157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2158  013E  295B               	goto	l3354
  2159  013F                     l3352:
  2160  013F  3001               	movlw	1
  2161  0140  1683               	bsf	3,5	;RP0=1, select bank1
  2162  0141  1303               	bcf	3,6	;RP1=0, select bank1
  2163  0142  07A0               	addwf	sprintf@f^(0+128),f
  2164  0143  30FF               	movlw	-1
  2165  0144  0720               	addwf	sprintf@f^(0+128),w
  2166  0145  0084               	movwf	4
  2167  0146  120A  158A  200A  120A  118A  	fcall	stringdir
  2168  014B  00CC               	movwf	sprintf@c^(0+128)
  2169  014C  00AD               	movwf	??_sprintf^(0+128)
  2170  014D  01AE               	clrf	(??_sprintf^(0+128)+1)
  2171                           
  2172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2173                           ; Switch size 1, requested type "simple"
  2174                           ; Number of cases is 1, Range of values is 0 to 0
  2175                           ; switch strategies available:
  2176                           ; Name         Instructions Cycles
  2177                           ; simple_byte            4     3 (average)
  2178                           ; direct_byte           11     8 (fixed)
  2179                           ; jumptable            260     6 (fixed)
  2180                           ;	Chosen strategy is simple_byte
  2181  014E  082E               	movf	(??_sprintf+1)^(0+128),w
  2182  014F  3A00               	xorlw	0	; case 0
  2183  0150  1903               	skipnz
  2184  0151  2953               	goto	l3662
  2185  0152  2FDC               	goto	l3558
  2186  0153                     l3662:
  2187                           
  2188                           ; Switch size 1, requested type "simple"
  2189                           ; Number of cases is 2, Range of values is 0 to 102
  2190                           ; switch strategies available:
  2191                           ; Name         Instructions Cycles
  2192                           ; simple_byte            7     4 (average)
  2193                           ; jumptable            260     6 (fixed)
  2194                           ;	Chosen strategy is simple_byte
  2195  0153  082D               	movf	??_sprintf^(0+128),w
  2196  0154  3A00               	xorlw	0	; case 0
  2197  0155  1903               	skipnz
  2198  0156  2FEE               	goto	l3560
  2199  0157  3A66               	xorlw	102	; case 102
  2200  0158  1903               	skipnz
  2201  0159  293D               	goto	l342
  2202  015A  2FDC               	goto	l3558
  2203  015B                     l3354:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2206  015B  3000               	movlw	0
  2207  015C  053B               	andwf	sprintf@flag^(0+128),w
  2208  015D  00AD               	movwf	??_sprintf^(0+128)
  2209  015E  3007               	movlw	7
  2210  015F  053C               	andwf	(sprintf@flag+1)^(0+128),w
  2211  0160  00AE               	movwf	(??_sprintf+1)^(0+128)
  2212  0161  082D               	movf	??_sprintf^(0+128),w
  2213  0162  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2214  0163  1903               	btfsc	3,2
  2215  0164  2966               	goto	u5331
  2216  0165  2967               	goto	u5330
  2217  0166                     u5331:
  2218  0166  2F19               	goto	l3512
  2219  0167                     u5330:
  2220  0167                     l3356:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2223  0167  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  2224  0168  296A               	goto	u5341
  2225  0169  296B               	goto	u5340
  2226  016A                     u5341:
  2227  016A  296F               	goto	l3360
  2228  016B                     u5340:
  2229  016B                     l3358:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2232  016B  3006               	movlw	6
  2233  016C  00CA               	movwf	sprintf@prec^(0+128)
  2234  016D  3000               	movlw	0
  2235  016E  00CB               	movwf	(sprintf@prec^(0+128)+1)
  2236  016F                     l3360:
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2239  016F  0836               	movf	sprintf@ap^(0+128),w
  2240  0170  0084               	movwf	4
  2241  0171  1383               	bcf	3,7	;select IRP bank0
  2242  0172  0800               	movf	0,w
  2243  0173  00C5               	movwf	sprintf@fval^(0+128)
  2244  0174  0A84               	incf	4,f
  2245  0175  0800               	movf	0,w
  2246  0176  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2247  0177  0A84               	incf	4,f
  2248  0178  0800               	movf	0,w
  2249  0179  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2250  017A  0A84               	incf	4,f
  2251  017B  0800               	movf	0,w
  2252  017C  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2253  017D                     l3362:
  2254  017D  3004               	movlw	4
  2255  017E  00AD               	movwf	??_sprintf^(0+128)
  2256  017F  082D               	movf	??_sprintf^(0+128),w
  2257  0180  07B6               	addwf	sprintf@ap^(0+128),f
  2258  0181                     l3364:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2261  0181  0848               	movf	(sprintf@fval+3)^(0+128),w
  2262  0182  00F3               	movwf	___flge@ff1+3
  2263  0183  0847               	movf	(sprintf@fval+2)^(0+128),w
  2264  0184  00F2               	movwf	___flge@ff1+2
  2265  0185  0846               	movf	(sprintf@fval+1)^(0+128),w
  2266  0186  00F1               	movwf	___flge@ff1+1
  2267  0187  0845               	movf	sprintf@fval^(0+128),w
  2268  0188  00F0               	movwf	___flge@ff1
  2269  0189  3000               	movlw	0
  2270  018A  00F7               	movwf	___flge@ff2+3
  2271  018B  3000               	movlw	0
  2272  018C  00F6               	movwf	___flge@ff2+2
  2273  018D  3000               	movlw	0
  2274  018E  00F5               	movwf	___flge@ff2+1
  2275  018F  3000               	movlw	0
  2276  0190  00F4               	movwf	___flge@ff2
  2277  0191  160A  158A  26A4  120A  118A  	fcall	___flge
  2278  0196  1803               	btfsc	3,0
  2279  0197  2999               	goto	u5351
  2280  0198  299A               	goto	u5350
  2281  0199                     u5351:
  2282  0199  29B7               	goto	l3370
  2283  019A                     u5350:
  2284  019A                     l3366:
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2287  019A  1683               	bsf	3,5	;RP0=1, select bank1
  2288  019B  1303               	bcf	3,6	;RP1=0, select bank1
  2289  019C  0848               	movf	(sprintf@fval+3)^(0+128),w
  2290  019D  00F3               	movwf	___flneg@f1+3
  2291  019E  0847               	movf	(sprintf@fval+2)^(0+128),w
  2292  019F  00F2               	movwf	___flneg@f1+2
  2293  01A0  0846               	movf	(sprintf@fval+1)^(0+128),w
  2294  01A1  00F1               	movwf	___flneg@f1+1
  2295  01A2  0845               	movf	sprintf@fval^(0+128),w
  2296  01A3  00F0               	movwf	___flneg@f1
  2297  01A4  120A  118A  2004  120A  118A  	fcall	___flneg
  2298  01A9  0873               	movf	?___flneg+3,w
  2299  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  2300  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  2301  01AC  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2302  01AD  0872               	movf	?___flneg+2,w
  2303  01AE  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2304  01AF  0871               	movf	?___flneg+1,w
  2305  01B0  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2306  01B1  0870               	movf	?___flneg,w
  2307  01B2  00C5               	movwf	sprintf@fval^(0+128)
  2308  01B3                     l3368:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2311  01B3  3003               	movlw	3
  2312  01B4  04BB               	iorwf	sprintf@flag^(0+128),f
  2313  01B5  3000               	movlw	0
  2314  01B6  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  2315  01B7                     l3370:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2318  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2319  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2320  01B9  01C3               	clrf	sprintf@eexp^(0+128)
  2321  01BA  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2322  01BB                     l3372:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2325  01BB  0848               	movf	(sprintf@fval+3)^(0+128),w
  2326  01BC  00F3               	movwf	___fleq@ff1+3
  2327  01BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2328  01BE  00F2               	movwf	___fleq@ff1+2
  2329  01BF  0846               	movf	(sprintf@fval+1)^(0+128),w
  2330  01C0  00F1               	movwf	___fleq@ff1+1
  2331  01C1  0845               	movf	sprintf@fval^(0+128),w
  2332  01C2  00F0               	movwf	___fleq@ff1
  2333  01C3  3000               	movlw	0
  2334  01C4  00F7               	movwf	___fleq@ff2+3
  2335  01C5  3000               	movlw	0
  2336  01C6  00F6               	movwf	___fleq@ff2+2
  2337  01C7  3000               	movlw	0
  2338  01C8  00F5               	movwf	___fleq@ff2+1
  2339  01C9  3000               	movlw	0
  2340  01CA  00F4               	movwf	___fleq@ff2
  2341  01CB  160A  158A  24C7  120A  118A  	fcall	___fleq
  2342  01D0  1803               	btfsc	3,0
  2343  01D1  29D3               	goto	u5361
  2344  01D2  29D4               	goto	u5360
  2345  01D3                     u5361:
  2346  01D3  2AC4               	goto	l3398
  2347  01D4                     u5360:
  2348  01D4                     l3374:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2351  01D4  1003               	clrc
  2352  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  2353  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  2354  01D7  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2355  01D8  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2356  01D9  3E82               	addlw	130
  2357  01DA  00C3               	movwf	sprintf@eexp^(0+128)
  2358  01DB  30FF               	movlw	255
  2359  01DC  1803               	skipnc
  2360  01DD  3000               	movlw	0
  2361  01DE  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2362  01DF                     l3376:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2365  01DF  30FF               	movlw	255
  2366  01E0  07C3               	addwf	sprintf@eexp^(0+128),f
  2367  01E1  1803               	skipnc
  2368  01E2  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2369  01E3  30FF               	movlw	255
  2370  01E4  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2371  01E5                     l3378:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2374  01E5  3003               	movlw	3
  2375  01E6  00F0               	movwf	___wmul@multiplier
  2376  01E7  3000               	movlw	0
  2377  01E8  00F1               	movwf	___wmul@multiplier+1
  2378  01E9  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2379  01EA  00F3               	movwf	___wmul@multiplicand+1
  2380  01EB  0843               	movf	sprintf@eexp^(0+128),w
  2381  01EC  00F2               	movwf	___wmul@multiplicand
  2382  01ED  160A  158A  2264  120A  118A  	fcall	___wmul
  2383  01F2  0871               	movf	?___wmul+1,w
  2384  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2385  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2386  01F5  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2387  01F6  0870               	movf	?___wmul,w
  2388  01F7  00C3               	movwf	sprintf@eexp^(0+128)
  2389  01F8                     l3380:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2392  01F8  300A               	movlw	10
  2393  01F9  00F7               	movwf	___awdiv@divisor
  2394  01FA  3000               	movlw	0
  2395  01FB  00F8               	movwf	___awdiv@divisor+1
  2396  01FC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2397  01FD  00FA               	movwf	___awdiv@dividend+1
  2398  01FE  0843               	movf	sprintf@eexp^(0+128),w
  2399  01FF  00F9               	movwf	___awdiv@dividend
  2400  0200  120A  118A  200F  120A  118A  	fcall	___awdiv
  2401  0205  0878               	movf	?___awdiv+1,w
  2402  0206  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0207  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0208  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2405  0209  0877               	movf	?___awdiv,w
  2406  020A  00C3               	movwf	sprintf@eexp^(0+128)
  2407  020B                     l3382:
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2410  020B  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2411  020C  2A0E               	goto	u5371
  2412  020D  2A0F               	goto	u5370
  2413  020E                     u5371:
  2414  020E  2A15               	goto	l3386
  2415  020F                     u5370:
  2416  020F                     l3384:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2419  020F  30FF               	movlw	255
  2420  0210  07C3               	addwf	sprintf@eexp^(0+128),f
  2421  0211  1803               	skipnc
  2422  0212  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2423  0213  30FF               	movlw	255
  2424  0214  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2425  0215                     l3386:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2428  0215  0343               	decf	sprintf@eexp^(0+128),w
  2429  0216  3AFF               	xorlw	255
  2430  0217  120A  158A  2140  120A  118A  	fcall	_scale
  2431  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2432  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2433  021E  0841               	movf	?_scale+3,w
  2434  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2435  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2436  0221  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2437  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0224  0840               	movf	?_scale+2,w
  2440  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2441  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2442  0227  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2443  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2445  022A  083F               	movf	?_scale+1,w
  2446  022B  1683               	bsf	3,5	;RP0=1, select bank1
  2447  022C  1303               	bcf	3,6	;RP1=0, select bank1
  2448  022D  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2449  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2450  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0230  083E               	movf	?_scale,w
  2452  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2453  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2454  0233  00BF               	movwf	sprintf@tmpval^(0+128)
  2455  0234                     l3388:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2458  0234  0848               	movf	(sprintf@fval+3)^(0+128),w
  2459  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0237  00A7               	movwf	___flmul@b+3
  2462  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2464  023A  0847               	movf	(sprintf@fval+2)^(0+128),w
  2465  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2466  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2467  023D  00A6               	movwf	___flmul@b+2
  2468  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2469  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2470  0240  0846               	movf	(sprintf@fval+1)^(0+128),w
  2471  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0243  00A5               	movwf	___flmul@b+1
  2474  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2475  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2476  0246  0845               	movf	sprintf@fval^(0+128),w
  2477  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2478  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0249  00A4               	movwf	___flmul@b
  2480  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2481  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2482  024C  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2483  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2484  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2485  024F  00AB               	movwf	___flmul@a+3
  2486  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2487  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2488  0252  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2489  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2490  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2491  0255  00AA               	movwf	___flmul@a+2
  2492  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2493  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2494  0258  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2495  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2496  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2497  025B  00A9               	movwf	___flmul@a+1
  2498  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2499  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2500  025E  083F               	movf	sprintf@tmpval^(0+128),w
  2501  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0261  00A8               	movwf	___flmul@a
  2504  0262  120A  158A  249F  120A  118A  	fcall	___flmul
  2505  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2507  0269  0827               	movf	?___flmul+3,w
  2508  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2509  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2510  026C  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2511  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2512  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2513  026F  0826               	movf	?___flmul+2,w
  2514  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2515  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2516  0272  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2517  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2518  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2519  0275  0825               	movf	?___flmul+1,w
  2520  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2521  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2522  0278  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2523  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2524  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2525  027B  0824               	movf	?___flmul,w
  2526  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2527  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2528  027E  00BF               	movwf	sprintf@tmpval^(0+128)
  2529  027F                     l3390:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2532  027F  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2533  0280  00F3               	movwf	___flge@ff1+3
  2534  0281  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2535  0282  00F2               	movwf	___flge@ff1+2
  2536  0283  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2537  0284  00F1               	movwf	___flge@ff1+1
  2538  0285  083F               	movf	sprintf@tmpval^(0+128),w
  2539  0286  00F0               	movwf	___flge@ff1
  2540  0287  303F               	movlw	63
  2541  0288  00F7               	movwf	___flge@ff2+3
  2542  0289  3080               	movlw	128
  2543  028A  00F6               	movwf	___flge@ff2+2
  2544  028B  3000               	movlw	0
  2545  028C  00F5               	movwf	___flge@ff2+1
  2546  028D  3000               	movlw	0
  2547  028E  00F4               	movwf	___flge@ff2
  2548  028F  160A  158A  26A4  120A  118A  	fcall	___flge
  2549  0294  1803               	btfsc	3,0
  2550  0295  2A97               	goto	u5381
  2551  0296  2A98               	goto	u5380
  2552  0297                     u5381:
  2553  0297  2AA1               	goto	l3394
  2554  0298                     u5380:
  2555  0298                     l3392:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2558  0298  30FF               	movlw	255
  2559  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2560  029A  1303               	bcf	3,6	;RP1=0, select bank1
  2561  029B  07C3               	addwf	sprintf@eexp^(0+128),f
  2562  029C  1803               	skipnc
  2563  029D  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2564  029E  30FF               	movlw	255
  2565  029F  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2566  02A0  2AC4               	goto	l3398
  2567  02A1                     l3394:
  2568  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2569  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2570  02A3  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2571  02A4  00F3               	movwf	___flge@ff1+3
  2572  02A5  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2573  02A6  00F2               	movwf	___flge@ff1+2
  2574  02A7  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2575  02A8  00F1               	movwf	___flge@ff1+1
  2576  02A9  083F               	movf	sprintf@tmpval^(0+128),w
  2577  02AA  00F0               	movwf	___flge@ff1
  2578  02AB  3041               	movlw	65
  2579  02AC  00F7               	movwf	___flge@ff2+3
  2580  02AD  3020               	movlw	32
  2581  02AE  00F6               	movwf	___flge@ff2+2
  2582  02AF  3000               	movlw	0
  2583  02B0  00F5               	movwf	___flge@ff2+1
  2584  02B1  3000               	movlw	0
  2585  02B2  00F4               	movwf	___flge@ff2
  2586  02B3  160A  158A  26A4  120A  118A  	fcall	___flge
  2587  02B8  1C03               	btfss	3,0
  2588  02B9  2ABB               	goto	u5391
  2589  02BA  2ABC               	goto	u5390
  2590  02BB                     u5391:
  2591  02BB  2AC4               	goto	l3398
  2592  02BC                     u5390:
  2593  02BC                     l3396:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2596  02BC  3001               	movlw	1
  2597  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2598  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2599  02BF  07C3               	addwf	sprintf@eexp^(0+128),f
  2600  02C0  1803               	skipnc
  2601  02C1  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2602  02C2  3000               	movlw	0
  2603  02C3  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2604  02C4                     l3398:
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2607  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2608  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2609  02C6  084B               	movf	(sprintf@prec+1)^(0+128),w
  2610  02C7  3A80               	xorlw	128
  2611  02C8  00FF               	movwf	btemp+1
  2612  02C9  3080               	movlw	128
  2613  02CA  027F               	subwf	btemp+1,w
  2614  02CB  1D03               	skipz
  2615  02CC  2ACF               	goto	u5405
  2616  02CD  300D               	movlw	13
  2617  02CE  024A               	subwf	sprintf@prec^(0+128),w
  2618  02CF                     u5405:
  2619  02CF  1803               	skipnc
  2620  02D0  2AD2               	goto	u5401
  2621  02D1  2AD3               	goto	u5400
  2622  02D2                     u5401:
  2623  02D2  2B1A               	goto	l3402
  2624  02D3                     u5400:
  2625  02D3                     l3400:
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2628  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2629  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2630  02D5  084A               	movf	sprintf@prec^(0+128),w
  2631  02D6  160A  118A  236D  120A  118A  	fcall	_fround
  2632  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2633  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2634  02DD  0841               	movf	?_fround+3,w
  2635  02DE  00D5               	movwf	___fladd@b+3
  2636  02DF  0840               	movf	?_fround+2,w
  2637  02E0  00D4               	movwf	___fladd@b+2
  2638  02E1  083F               	movf	?_fround+1,w
  2639  02E2  00D3               	movwf	___fladd@b+1
  2640  02E3  083E               	movf	?_fround,w
  2641  02E4  00D2               	movwf	___fladd@b
  2642  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2643  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2644  02E7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2645  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2646  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2647  02EA  00D9               	movwf	___fladd@a+3
  2648  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2649  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2650  02ED  0847               	movf	(sprintf@fval+2)^(0+128),w
  2651  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2652  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2653  02F0  00D8               	movwf	___fladd@a+2
  2654  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2655  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2656  02F3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2657  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2658  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2659  02F6  00D7               	movwf	___fladd@a+1
  2660  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2661  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2662  02F9  0845               	movf	sprintf@fval^(0+128),w
  2663  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2664  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2665  02FC  00D6               	movwf	___fladd@a
  2666  02FD  160A  118A  2578  120A  118A  	fcall	___fladd
  2667  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2669  0304  0855               	movf	?___fladd+3,w
  2670  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2671  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2672  0307  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2673  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2675  030A  0854               	movf	?___fladd+2,w
  2676  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2677  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2678  030D  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2679  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2680  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0310  0853               	movf	?___fladd+1,w
  2682  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2683  0312  1303               	bcf	3,6	;RP1=0, select bank1
  2684  0313  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2685  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2686  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2687  0316  0852               	movf	?___fladd,w
  2688  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2689  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2690  0319  00C5               	movwf	sprintf@fval^(0+128)
  2691  031A                     l3402:
  2692                           
  2693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2694  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2695  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2696  031C  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2697  031D  3A80               	xorlw	128
  2698  031E  00FF               	movwf	btemp+1
  2699  031F  3080               	movlw	128
  2700  0320  027F               	subwf	btemp+1,w
  2701  0321  1D03               	skipz
  2702  0322  2B25               	goto	u5415
  2703  0323  300A               	movlw	10
  2704  0324  0243               	subwf	sprintf@eexp^(0+128),w
  2705  0325                     u5415:
  2706  0325  1803               	skipnc
  2707  0326  2B28               	goto	u5411
  2708  0327  2B29               	goto	u5410
  2709  0328                     u5411:
  2710  0328  2B7A               	goto	l3410
  2711  0329                     u5410:
  2712  0329                     l3404:
  2713  0329  1683               	bsf	3,5	;RP0=1, select bank1
  2714  032A  1303               	bcf	3,6	;RP1=0, select bank1
  2715  032B  0848               	movf	(sprintf@fval+3)^(0+128),w
  2716  032C  00F3               	movwf	___fleq@ff1+3
  2717  032D  0847               	movf	(sprintf@fval+2)^(0+128),w
  2718  032E  00F2               	movwf	___fleq@ff1+2
  2719  032F  0846               	movf	(sprintf@fval+1)^(0+128),w
  2720  0330  00F1               	movwf	___fleq@ff1+1
  2721  0331  0845               	movf	sprintf@fval^(0+128),w
  2722  0332  00F0               	movwf	___fleq@ff1
  2723  0333  3000               	movlw	0
  2724  0334  00F7               	movwf	___fleq@ff2+3
  2725  0335  3000               	movlw	0
  2726  0336  00F6               	movwf	___fleq@ff2+2
  2727  0337  3000               	movlw	0
  2728  0338  00F5               	movwf	___fleq@ff2+1
  2729  0339  3000               	movlw	0
  2730  033A  00F4               	movwf	___fleq@ff2
  2731  033B  160A  158A  24C7  120A  118A  	fcall	___fleq
  2732  0340  1803               	btfsc	3,0
  2733  0341  2B43               	goto	u5421
  2734  0342  2B44               	goto	u5420
  2735  0343                     u5421:
  2736  0343  2BEC               	goto	l3424
  2737  0344                     u5420:
  2738  0344                     l3406:
  2739  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2740  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2741  0346  0848               	movf	(sprintf@fval+3)^(0+128),w
  2742  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2743  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2744  0349  00D4               	movwf	___fltol@f1+3
  2745  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2746  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2747  034C  0847               	movf	(sprintf@fval+2)^(0+128),w
  2748  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2749  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2750  034F  00D3               	movwf	___fltol@f1+2
  2751  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2752  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2753  0352  0846               	movf	(sprintf@fval+1)^(0+128),w
  2754  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0355  00D2               	movwf	___fltol@f1+1
  2757  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2758  0357  1303               	bcf	3,6	;RP1=0, select bank1
  2759  0358  0845               	movf	sprintf@fval^(0+128),w
  2760  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2761  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2762  035B  00D1               	movwf	___fltol@f1
  2763  035C  160A  158A  2628  120A  118A  	fcall	___fltol
  2764  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0363  0854               	movf	?___fltol+3,w
  2767  0364  0453               	iorwf	?___fltol+2,w
  2768  0365  0452               	iorwf	?___fltol+1,w
  2769  0366  0451               	iorwf	?___fltol,w
  2770  0367  1D03               	skipz
  2771  0368  2B6A               	goto	u5431
  2772  0369  2B6B               	goto	u5430
  2773  036A                     u5431:
  2774  036A  2BEC               	goto	l3424
  2775  036B                     u5430:
  2776  036B                     l3408:
  2777  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2778  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2779  036D  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2780  036E  3A80               	xorlw	128
  2781  036F  00FF               	movwf	btemp+1
  2782  0370  3080               	movlw	128
  2783  0371  027F               	subwf	btemp+1,w
  2784  0372  1D03               	skipz
  2785  0373  2B76               	goto	u5445
  2786  0374  3002               	movlw	2
  2787  0375  0243               	subwf	sprintf@eexp^(0+128),w
  2788  0376                     u5445:
  2789  0376  1C03               	skipc
  2790  0377  2B79               	goto	u5441
  2791  0378  2B7A               	goto	u5440
  2792  0379                     u5441:
  2793  0379  2BEC               	goto	l3424
  2794  037A                     u5440:
  2795  037A                     l3410:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2798  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2799  037B  1303               	bcf	3,6	;RP1=0, select bank1
  2800  037C  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2801  037D  00F3               	movwf	___flge@ff1+3
  2802  037E  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2803  037F  00F2               	movwf	___flge@ff1+2
  2804  0380  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2805  0381  00F1               	movwf	___flge@ff1+1
  2806  0382  083F               	movf	sprintf@tmpval^(0+128),w
  2807  0383  00F0               	movwf	___flge@ff1
  2808  0384  3040               	movlw	64
  2809  0385  00F7               	movwf	___flge@ff2+3
  2810  0386  3089               	movlw	137
  2811  0387  00F6               	movwf	___flge@ff2+2
  2812  0388  3070               	movlw	112
  2813  0389  00F5               	movwf	___flge@ff2+1
  2814  038A  305F               	movlw	95
  2815  038B  00F4               	movwf	___flge@ff2
  2816  038C  160A  158A  26A4  120A  118A  	fcall	___flge
  2817  0391  1803               	btfsc	3,0
  2818  0392  2B94               	goto	u5451
  2819  0393  2B95               	goto	u5450
  2820  0394                     u5451:
  2821  0394  2B9E               	goto	l3414
  2822  0395                     u5450:
  2823  0395                     l3412:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2826  0395  30F7               	movlw	247
  2827  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2828  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2829  0398  07C3               	addwf	sprintf@eexp^(0+128),f
  2830  0399  1803               	skipnc
  2831  039A  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2832  039B  30FF               	movlw	255
  2833  039C  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2836  039D  2BA6               	goto	l3416
  2837  039E                     l3414:
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2840  039E  30F8               	movlw	248
  2841  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2842  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2843  03A1  07C3               	addwf	sprintf@eexp^(0+128),f
  2844  03A2  1803               	skipnc
  2845  03A3  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2846  03A4  30FF               	movlw	255
  2847  03A5  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2848  03A6                     l3416:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2851  03A6  0843               	movf	sprintf@eexp^(0+128),w
  2852  03A7  120A  158A  2140  120A  118A  	fcall	_scale
  2853  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2854  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2855  03AE  0841               	movf	?_scale+3,w
  2856  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2857  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2858  03B1  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2859  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2860  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2861  03B4  0840               	movf	?_scale+2,w
  2862  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2863  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2864  03B7  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2865  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2866  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2867  03BA  083F               	movf	?_scale+1,w
  2868  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2869  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2870  03BD  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2871  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2872  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2873  03C0  083E               	movf	?_scale,w
  2874  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2875  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2876  03C3  00BF               	movwf	sprintf@tmpval^(0+128)
  2877  03C4                     l3418:
  2878  03C4  0848               	movf	(sprintf@fval+3)^(0+128),w
  2879  03C5  00F3               	movwf	__div_to_l_@f1+3
  2880  03C6  0847               	movf	(sprintf@fval+2)^(0+128),w
  2881  03C7  00F2               	movwf	__div_to_l_@f1+2
  2882  03C8  0846               	movf	(sprintf@fval+1)^(0+128),w
  2883  03C9  00F1               	movwf	__div_to_l_@f1+1
  2884  03CA  0845               	movf	sprintf@fval^(0+128),w
  2885  03CB  00F0               	movwf	__div_to_l_@f1
  2886  03CC  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2887  03CD  00F7               	movwf	__div_to_l_@f2+3
  2888  03CE  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2889  03CF  00F6               	movwf	__div_to_l_@f2+2
  2890  03D0  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2891  03D1  00F5               	movwf	__div_to_l_@f2+1
  2892  03D2  083F               	movf	sprintf@tmpval^(0+128),w
  2893  03D3  00F4               	movwf	__div_to_l_@f2
  2894  03D4  160A  118A  20C7  120A  118A  	fcall	__div_to_l_
  2895  03D9  0873               	movf	?__div_to_l_+3,w
  2896  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2897  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2898  03DC  00BA               	movwf	(sprintf@val+3)^(0+128)
  2899  03DD  0872               	movf	?__div_to_l_+2,w
  2900  03DE  00B9               	movwf	(sprintf@val+2)^(0+128)
  2901  03DF  0871               	movf	?__div_to_l_+1,w
  2902  03E0  00B8               	movwf	(sprintf@val+1)^(0+128)
  2903  03E1  0870               	movf	?__div_to_l_,w
  2904  03E2  00B7               	movwf	sprintf@val^(0+128)
  2905  03E3                     l3422:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2908  03E3  3000               	movlw	0
  2909  03E4  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2910  03E5  3000               	movlw	0
  2911  03E6  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2912  03E7  3000               	movlw	0
  2913  03E8  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2914  03E9  3000               	movlw	0
  2915  03EA  00C5               	movwf	sprintf@fval^(0+128)
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2918  03EB  2C70               	goto	l3430
  2919  03EC                     l3424:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2922  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2923  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2924  03EE  0848               	movf	(sprintf@fval+3)^(0+128),w
  2925  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2926  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2927  03F1  00D4               	movwf	___fltol@f1+3
  2928  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2929  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2930  03F4  0847               	movf	(sprintf@fval+2)^(0+128),w
  2931  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2932  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2933  03F7  00D3               	movwf	___fltol@f1+2
  2934  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2935  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2936  03FA  0846               	movf	(sprintf@fval+1)^(0+128),w
  2937  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2938  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2939  03FD  00D2               	movwf	___fltol@f1+1
  2940  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2941  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2942  0400  0845               	movf	sprintf@fval^(0+128),w
  2943  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0403  00D1               	movwf	___fltol@f1
  2946  0404  160A  158A  2628  120A  118A  	fcall	___fltol
  2947  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2948  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2949  040B  0854               	movf	?___fltol+3,w
  2950  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2951  040D  1303               	bcf	3,6	;RP1=0, select bank1
  2952  040E  00BA               	movwf	(sprintf@val+3)^(0+128)
  2953  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0411  0853               	movf	?___fltol+2,w
  2956  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2957  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2958  0414  00B9               	movwf	(sprintf@val+2)^(0+128)
  2959  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0417  0852               	movf	?___fltol+1,w
  2962  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2963  0419  1303               	bcf	3,6	;RP1=0, select bank1
  2964  041A  00B8               	movwf	(sprintf@val+1)^(0+128)
  2965  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2966  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2967  041D  0851               	movf	?___fltol,w
  2968  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2969  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2970  0420  00B7               	movwf	sprintf@val^(0+128)
  2971  0421                     l3426:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2974  0421  083A               	movf	(sprintf@val+3)^(0+128),w
  2975  0422  00F3               	movwf	___xxtofl@val+3
  2976  0423  0839               	movf	(sprintf@val+2)^(0+128),w
  2977  0424  00F2               	movwf	___xxtofl@val+2
  2978  0425  0838               	movf	(sprintf@val+1)^(0+128),w
  2979  0426  00F1               	movwf	___xxtofl@val+1
  2980  0427  0837               	movf	sprintf@val^(0+128),w
  2981  0428  00F0               	movwf	___xxtofl@val
  2982  0429  3000               	movlw	0
  2983  042A  160A  158A  2746  120A  118A  	fcall	___xxtofl
  2984  042F  0873               	movf	?___xxtofl+3,w
  2985  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0432  00E9               	movwf	___flsub@a+3
  2988  0433  0872               	movf	?___xxtofl+2,w
  2989  0434  00E8               	movwf	___flsub@a+2
  2990  0435  0871               	movf	?___xxtofl+1,w
  2991  0436  00E7               	movwf	___flsub@a+1
  2992  0437  0870               	movf	?___xxtofl,w
  2993  0438  00E6               	movwf	___flsub@a
  2994  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2995  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2996  043B  0848               	movf	(sprintf@fval+3)^(0+128),w
  2997  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2998  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2999  043E  00ED               	movwf	___flsub@b+3
  3000  043F  1683               	bsf	3,5	;RP0=1, select bank1
  3001  0440  1303               	bcf	3,6	;RP1=0, select bank1
  3002  0441  0847               	movf	(sprintf@fval+2)^(0+128),w
  3003  0442  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0443  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0444  00EC               	movwf	___flsub@b+2
  3006  0445  1683               	bsf	3,5	;RP0=1, select bank1
  3007  0446  1303               	bcf	3,6	;RP1=0, select bank1
  3008  0447  0846               	movf	(sprintf@fval+1)^(0+128),w
  3009  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3011  044A  00EB               	movwf	___flsub@b+1
  3012  044B  1683               	bsf	3,5	;RP0=1, select bank1
  3013  044C  1303               	bcf	3,6	;RP1=0, select bank1
  3014  044D  0845               	movf	sprintf@fval^(0+128),w
  3015  044E  1283               	bcf	3,5	;RP0=0, select bank0
  3016  044F  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0450  00EA               	movwf	___flsub@b
  3018  0451  160A  158A  2240  120A  118A  	fcall	___flsub
  3019  0456  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0457  1303               	bcf	3,6	;RP1=0, select bank0
  3021  0458  0869               	movf	?___flsub+3,w
  3022  0459  1683               	bsf	3,5	;RP0=1, select bank1
  3023  045A  1303               	bcf	3,6	;RP1=0, select bank1
  3024  045B  00C8               	movwf	(sprintf@fval+3)^(0+128)
  3025  045C  1283               	bcf	3,5	;RP0=0, select bank0
  3026  045D  1303               	bcf	3,6	;RP1=0, select bank0
  3027  045E  0868               	movf	?___flsub+2,w
  3028  045F  1683               	bsf	3,5	;RP0=1, select bank1
  3029  0460  1303               	bcf	3,6	;RP1=0, select bank1
  3030  0461  00C7               	movwf	(sprintf@fval+2)^(0+128)
  3031  0462  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0463  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0464  0867               	movf	?___flsub+1,w
  3034  0465  1683               	bsf	3,5	;RP0=1, select bank1
  3035  0466  1303               	bcf	3,6	;RP1=0, select bank1
  3036  0467  00C6               	movwf	(sprintf@fval+1)^(0+128)
  3037  0468  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0469  1303               	bcf	3,6	;RP1=0, select bank0
  3039  046A  0866               	movf	?___flsub,w
  3040  046B  1683               	bsf	3,5	;RP0=1, select bank1
  3041  046C  1303               	bcf	3,6	;RP1=0, select bank1
  3042  046D  00C5               	movwf	sprintf@fval^(0+128)
  3043  046E                     l3428:
  3044                           
  3045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3046  046E  01C3               	clrf	sprintf@eexp^(0+128)
  3047  046F  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  3048  0470                     l3430:
  3049                           
  3050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3051  0470  01CC               	clrf	sprintf@c^(0+128)
  3052  0471  0ACC               	incf	sprintf@c^(0+128),f
  3053  0472                     l3436:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3056  0472  084C               	movf	sprintf@c^(0+128),w
  3057  0473  00AD               	movwf	??_sprintf^(0+128)
  3058  0474  3001               	movlw	1
  3059  0475                     u5465:
  3060  0475  1003               	clrc
  3061  0476  0DAD               	rlf	??_sprintf^(0+128),f
  3062  0477  3EFF               	addlw	-1
  3063  0478  1D03               	skipz
  3064  0479  2C75               	goto	u5465
  3065  047A  1003               	clrc
  3066  047B  0D2D               	rlf	??_sprintf^(0+128),w
  3067  047C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3068  047D  0084               	movwf	4
  3069  047E  120A  158A  200A  120A  118A  	fcall	stringdir
  3070  0483  00AE               	movwf	(??_sprintf+1)^(0+128)
  3071  0484  120A  158A  200A  120A  118A  	fcall	stringdir
  3072  0489  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  3073  048A  120A  158A  200A  120A  118A  	fcall	stringdir
  3074  048F  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  3075  0490  120A  158A  200A  120A  118A  	fcall	stringdir
  3076  0495  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  3077  0496  0831               	movf	(??_sprintf+4)^(0+128),w
  3078  0497  023A               	subwf	(sprintf@val+3)^(0+128),w
  3079  0498  1D03               	skipz
  3080  0499  2CA4               	goto	u5475
  3081  049A  0830               	movf	(??_sprintf+3)^(0+128),w
  3082  049B  0239               	subwf	(sprintf@val+2)^(0+128),w
  3083  049C  1D03               	skipz
  3084  049D  2CA4               	goto	u5475
  3085  049E  082F               	movf	(??_sprintf+2)^(0+128),w
  3086  049F  0238               	subwf	(sprintf@val+1)^(0+128),w
  3087  04A0  1D03               	skipz
  3088  04A1  2CA4               	goto	u5475
  3089  04A2  082E               	movf	(??_sprintf+1)^(0+128),w
  3090  04A3  0237               	subwf	sprintf@val^(0+128),w
  3091  04A4                     u5475:
  3092  04A4  1803               	skipnc
  3093  04A5  2CA7               	goto	u5471
  3094  04A6  2CA8               	goto	u5470
  3095  04A7                     u5471:
  3096  04A7  2CA9               	goto	l3440
  3097  04A8                     u5470:
  3098  04A8  2CB3               	goto	l3442
  3099  04A9                     l3440:
  3100  04A9  3001               	movlw	1
  3101  04AA  00AD               	movwf	??_sprintf^(0+128)
  3102  04AB  082D               	movf	??_sprintf^(0+128),w
  3103  04AC  07CC               	addwf	sprintf@c^(0+128),f
  3104  04AD  300A               	movlw	10
  3105  04AE  064C               	xorwf	sprintf@c^(0+128),w
  3106  04AF  1D03               	btfss	3,2
  3107  04B0  2CB2               	goto	u5481
  3108  04B1  2CB3               	goto	u5480
  3109  04B2                     u5481:
  3110  04B2  2C72               	goto	l3436
  3111  04B3                     u5480:
  3112  04B3                     l3442:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3115  04B3  084C               	movf	sprintf@c^(0+128),w
  3116  04B4  074A               	addwf	sprintf@prec^(0+128),w
  3117  04B5  00AD               	movwf	??_sprintf^(0+128)
  3118  04B6  084B               	movf	(sprintf@prec+1)^(0+128),w
  3119  04B7  1803               	skipnc
  3120  04B8  0A4B               	incf	(sprintf@prec+1)^(0+128),w
  3121  04B9  00AE               	movwf	(??_sprintf^(0+128)+1)
  3122  04BA  0843               	movf	sprintf@eexp^(0+128),w
  3123  04BB  072D               	addwf	??_sprintf^(0+128),w
  3124  04BC  00AF               	movwf	(??_sprintf+2)^(0+128)
  3125  04BD  0844               	movf	(sprintf@eexp+1)^(0+128),w
  3126  04BE  1803               	skipnc
  3127  04BF  0A44               	incf	(sprintf@eexp+1)^(0+128),w
  3128  04C0  072E               	addwf	(??_sprintf+1)^(0+128),w
  3129  04C1  00B0               	movwf	(??_sprintf+3)^(0+128)
  3130  04C2  082F               	movf	(??_sprintf+2)^(0+128),w
  3131  04C3  02BD               	subwf	sprintf@width^(0+128),f
  3132  04C4  0830               	movf	(??_sprintf+3)^(0+128),w
  3133  04C5  1C03               	skipc
  3134  04C6  03BE               	decf	(sprintf@width+1)^(0+128),f
  3135  04C7  02BE               	subwf	(sprintf@width+1)^(0+128),f
  3136                           
  3137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  3138  04C8  084A               	movf	sprintf@prec^(0+128),w
  3139  04C9  044B               	iorwf	(sprintf@prec+1)^(0+128),w
  3140  04CA  1903               	btfsc	3,2
  3141  04CB  2CCD               	goto	u5491
  3142  04CC  2CCE               	goto	u5490
  3143  04CD                     u5491:
  3144  04CD  2CD4               	goto	l3446
  3145  04CE                     u5490:
  3146  04CE                     l3444:
  3147                           
  3148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3149  04CE  30FF               	movlw	255
  3150  04CF  07BD               	addwf	sprintf@width^(0+128),f
  3151  04D0  1803               	skipnc
  3152  04D1  0ABE               	incf	(sprintf@width+1)^(0+128),f
  3153  04D2  30FF               	movlw	255
  3154  04D3  07BE               	addwf	(sprintf@width+1)^(0+128),f
  3155  04D4                     l3446:
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3158  04D4  3003               	movlw	3
  3159  04D5  053B               	andwf	sprintf@flag^(0+128),w
  3160  04D6  00AD               	movwf	??_sprintf^(0+128)
  3161  04D7  3000               	movlw	0
  3162  04D8  053C               	andwf	(sprintf@flag+1)^(0+128),w
  3163  04D9  00AE               	movwf	(??_sprintf+1)^(0+128)
  3164  04DA  082D               	movf	??_sprintf^(0+128),w
  3165  04DB  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3166  04DC  1903               	btfsc	3,2
  3167  04DD  2CDF               	goto	u5501
  3168  04DE  2CE0               	goto	u5500
  3169  04DF                     u5501:
  3170  04DF  2CF5               	goto	l3456
  3171  04E0                     u5500:
  3172  04E0                     l3448:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3175  04E0  30FF               	movlw	255
  3176  04E1  07BD               	addwf	sprintf@width^(0+128),f
  3177  04E2  1803               	skipnc
  3178  04E3  0ABE               	incf	(sprintf@width+1)^(0+128),f
  3179  04E4  30FF               	movlw	255
  3180  04E5  07BE               	addwf	(sprintf@width+1)^(0+128),f
  3181  04E6  2CF5               	goto	l3456
  3182  04E7                     l3450:
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3185  04E7  3020               	movlw	32
  3186  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  3187  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  3188  04EA  00AD               	movwf	??_sprintf^(0+128)
  3189  04EB  0849               	movf	sprintf@sp^(0+128),w
  3190  04EC  0084               	movwf	4
  3191  04ED  082D               	movf	??_sprintf^(0+128),w
  3192  04EE  1383               	bcf	3,7	;select IRP bank0
  3193  04EF  0080               	movwf	0
  3194  04F0                     l3452:
  3195  04F0  3001               	movlw	1
  3196  04F1  00AD               	movwf	??_sprintf^(0+128)
  3197  04F2  082D               	movf	??_sprintf^(0+128),w
  3198  04F3  07C9               	addwf	sprintf@sp^(0+128),f
  3199  04F4  2CE0               	goto	l3448
  3200  04F5                     l3456:
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3203  04F5  083E               	movf	(sprintf@width+1)^(0+128),w
  3204  04F6  3A80               	xorlw	128
  3205  04F7  00FF               	movwf	btemp+1
  3206  04F8  3080               	movlw	128
  3207  04F9  027F               	subwf	btemp+1,w
  3208  04FA  1D03               	skipz
  3209  04FB  2CFE               	goto	u5515
  3210  04FC  3001               	movlw	1
  3211  04FD  023D               	subwf	sprintf@width^(0+128),w
  3212  04FE                     u5515:
  3213  04FE  1803               	skipnc
  3214  04FF  2D01               	goto	u5511
  3215  0500  2D02               	goto	u5510
  3216  0501                     u5511:
  3217  0501  2CE7               	goto	l3450
  3218  0502                     u5510:
  3219  0502                     l3458:
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3222  0502  3003               	movlw	3
  3223  0503  1683               	bsf	3,5	;RP0=1, select bank1
  3224  0504  1303               	bcf	3,6	;RP1=0, select bank1
  3225  0505  053B               	andwf	sprintf@flag^(0+128),w
  3226  0506  00AD               	movwf	??_sprintf^(0+128)
  3227  0507  3000               	movlw	0
  3228  0508  053C               	andwf	(sprintf@flag+1)^(0+128),w
  3229  0509  00AE               	movwf	(??_sprintf+1)^(0+128)
  3230  050A  082D               	movf	??_sprintf^(0+128),w
  3231  050B  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3232  050C  1903               	btfsc	3,2
  3233  050D  2D0F               	goto	u5521
  3234  050E  2D10               	goto	u5520
  3235  050F                     u5521:
  3236  050F  2D82               	goto	l373
  3237  0510                     u5520:
  3238  0510                     l3460:
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3241  0510  302D               	movlw	45
  3242  0511  00AD               	movwf	??_sprintf^(0+128)
  3243  0512  0849               	movf	sprintf@sp^(0+128),w
  3244  0513  0084               	movwf	4
  3245  0514  082D               	movf	??_sprintf^(0+128),w
  3246  0515  1383               	bcf	3,7	;select IRP bank0
  3247  0516  0080               	movwf	0
  3248  0517                     l3462:
  3249  0517  3001               	movlw	1
  3250  0518  00AD               	movwf	??_sprintf^(0+128)
  3251  0519  082D               	movf	??_sprintf^(0+128),w
  3252  051A  07C9               	addwf	sprintf@sp^(0+128),f
  3253  051B  2D82               	goto	l373
  3254  051C                     l3464:
  3255                           
  3256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3257  051C  084C               	movf	sprintf@c^(0+128),w
  3258  051D  00AD               	movwf	??_sprintf^(0+128)
  3259  051E  3001               	movlw	1
  3260  051F                     u5535:
  3261  051F  1003               	clrc
  3262  0520  0DAD               	rlf	??_sprintf^(0+128),f
  3263  0521  3EFF               	addlw	-1
  3264  0522  1D03               	skipz
  3265  0523  2D1F               	goto	u5535
  3266  0524  1003               	clrc
  3267  0525  0D2D               	rlf	??_sprintf^(0+128),w
  3268  0526  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3269  0527  0084               	movwf	4
  3270  0528  120A  158A  200A  120A  118A  	fcall	stringdir
  3271  052D  00F0               	movwf	___lldiv@divisor
  3272  052E  120A  158A  200A  120A  118A  	fcall	stringdir
  3273  0533  00F1               	movwf	___lldiv@divisor+1
  3274  0534  120A  158A  200A  120A  118A  	fcall	stringdir
  3275  0539  00F2               	movwf	___lldiv@divisor+2
  3276  053A  120A  158A  200A  120A  118A  	fcall	stringdir
  3277  053F  00F3               	movwf	___lldiv@divisor+3
  3278  0540  083A               	movf	(sprintf@val+3)^(0+128),w
  3279  0541  00F7               	movwf	___lldiv@dividend+3
  3280  0542  0839               	movf	(sprintf@val+2)^(0+128),w
  3281  0543  00F6               	movwf	___lldiv@dividend+2
  3282  0544  0838               	movf	(sprintf@val+1)^(0+128),w
  3283  0545  00F5               	movwf	___lldiv@dividend+1
  3284  0546  0837               	movf	sprintf@val^(0+128),w
  3285  0547  00F4               	movwf	___lldiv@dividend
  3286  0548  160A  158A  25C2  120A  118A  	fcall	___lldiv
  3287  054D  0873               	movf	?___lldiv+3,w
  3288  054E  1683               	bsf	3,5	;RP0=1, select bank1
  3289  054F  1303               	bcf	3,6	;RP1=0, select bank1
  3290  0550  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3291  0551  0872               	movf	?___lldiv+2,w
  3292  0552  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3293  0553  0871               	movf	?___lldiv+1,w
  3294  0554  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3295  0555  0870               	movf	?___lldiv,w
  3296  0556  00BF               	movwf	sprintf@tmpval^(0+128)
  3297  0557                     l3466:
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3300  0557  3000               	movlw	0
  3301  0558  00F3               	movwf	___llmod@divisor+3
  3302  0559  3000               	movlw	0
  3303  055A  00F2               	movwf	___llmod@divisor+2
  3304  055B  3000               	movlw	0
  3305  055C  00F1               	movwf	___llmod@divisor+1
  3306  055D  300A               	movlw	10
  3307  055E  00F0               	movwf	___llmod@divisor
  3308  055F  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3309  0560  00F7               	movwf	___llmod@dividend+3
  3310  0561  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3311  0562  00F6               	movwf	___llmod@dividend+2
  3312  0563  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3313  0564  00F5               	movwf	___llmod@dividend+1
  3314  0565  083F               	movf	sprintf@tmpval^(0+128),w
  3315  0566  00F4               	movwf	___llmod@dividend
  3316  0567  160A  158A  2515  120A  118A  	fcall	___llmod
  3317  056C  0873               	movf	?___llmod+3,w
  3318  056D  1683               	bsf	3,5	;RP0=1, select bank1
  3319  056E  1303               	bcf	3,6	;RP1=0, select bank1
  3320  056F  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3321  0570  0872               	movf	?___llmod+2,w
  3322  0571  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3323  0572  0871               	movf	?___llmod+1,w
  3324  0573  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3325  0574  0870               	movf	?___llmod,w
  3326  0575  00BF               	movwf	sprintf@tmpval^(0+128)
  3327  0576                     l3468:
  3328                           
  3329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3330  0576  083F               	movf	sprintf@tmpval^(0+128),w
  3331  0577  3E30               	addlw	48
  3332  0578  00AD               	movwf	??_sprintf^(0+128)
  3333  0579  0849               	movf	sprintf@sp^(0+128),w
  3334  057A  0084               	movwf	4
  3335  057B  082D               	movf	??_sprintf^(0+128),w
  3336  057C  1383               	bcf	3,7	;select IRP bank0
  3337  057D  0080               	movwf	0
  3338  057E  3001               	movlw	1
  3339  057F  00AD               	movwf	??_sprintf^(0+128)
  3340  0580  082D               	movf	??_sprintf^(0+128),w
  3341  0581  07C9               	addwf	sprintf@sp^(0+128),f
  3342  0582                     l373:	
  3343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3344                           
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3347  0582  3001               	movlw	1
  3348  0583  02CC               	subwf	sprintf@c^(0+128),f
  3349  0584  0A4C               	incf	sprintf@c^(0+128),w
  3350  0585  1D03               	btfss	3,2
  3351  0586  2D88               	goto	u5541
  3352  0587  2D89               	goto	u5540
  3353  0588                     u5541:
  3354  0588  2D1C               	goto	l3464
  3355  0589                     u5540:
  3356  0589  2D9D               	goto	l3476
  3357  058A                     l3470:
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3360  058A  3030               	movlw	48
  3361  058B  1683               	bsf	3,5	;RP0=1, select bank1
  3362  058C  1303               	bcf	3,6	;RP1=0, select bank1
  3363  058D  00AD               	movwf	??_sprintf^(0+128)
  3364  058E  0849               	movf	sprintf@sp^(0+128),w
  3365  058F  0084               	movwf	4
  3366  0590  082D               	movf	??_sprintf^(0+128),w
  3367  0591  1383               	bcf	3,7	;select IRP bank0
  3368  0592  0080               	movwf	0
  3369  0593                     l3472:
  3370  0593  3001               	movlw	1
  3371  0594  00AD               	movwf	??_sprintf^(0+128)
  3372  0595  082D               	movf	??_sprintf^(0+128),w
  3373  0596  07C9               	addwf	sprintf@sp^(0+128),f
  3374  0597                     l3474:
  3375                           
  3376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3377  0597  30FF               	movlw	255
  3378  0598  07C3               	addwf	sprintf@eexp^(0+128),f
  3379  0599  1803               	skipnc
  3380  059A  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  3381  059B  30FF               	movlw	255
  3382  059C  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  3383  059D                     l3476:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3386  059D  0844               	movf	(sprintf@eexp+1)^(0+128),w
  3387  059E  3A80               	xorlw	128
  3388  059F  00FF               	movwf	btemp+1
  3389  05A0  3080               	movlw	128
  3390  05A1  027F               	subwf	btemp+1,w
  3391  05A2  1D03               	skipz
  3392  05A3  2DA6               	goto	u5555
  3393  05A4  3001               	movlw	1
  3394  05A5  0243               	subwf	sprintf@eexp^(0+128),w
  3395  05A6                     u5555:
  3396  05A6  1803               	skipnc
  3397  05A7  2DA9               	goto	u5551
  3398  05A8  2DAA               	goto	u5550
  3399  05A9                     u5551:
  3400  05A9  2D8A               	goto	l3470
  3401  05AA                     u5550:
  3402  05AA                     l3478:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3405  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3406  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  3407  05AC  084B               	movf	(sprintf@prec+1)^(0+128),w
  3408  05AD  3A80               	xorlw	128
  3409  05AE  00FF               	movwf	btemp+1
  3410  05AF  3080               	movlw	128
  3411  05B0  027F               	subwf	btemp+1,w
  3412  05B1  1D03               	skipz
  3413  05B2  2DB5               	goto	u5565
  3414  05B3  3009               	movlw	9
  3415  05B4  024A               	subwf	sprintf@prec^(0+128),w
  3416  05B5                     u5565:
  3417  05B5  1C03               	skipc
  3418  05B6  2DB8               	goto	u5561
  3419  05B7  2DB9               	goto	u5560
  3420  05B8                     u5561:
  3421  05B8  2DC0               	goto	l3482
  3422  05B9                     u5560:
  3423  05B9                     l3480:
  3424                           
  3425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3426  05B9  3008               	movlw	8
  3427  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  3428  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  3429  05BC  00AD               	movwf	??_sprintf^(0+128)
  3430  05BD  082D               	movf	??_sprintf^(0+128),w
  3431  05BE  00CC               	movwf	sprintf@c^(0+128)
  3432  05BF  2DC6               	goto	l380
  3433  05C0                     l3482:
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3436  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  3437  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  3438  05C2  084A               	movf	sprintf@prec^(0+128),w
  3439  05C3  00AD               	movwf	??_sprintf^(0+128)
  3440  05C4  082D               	movf	??_sprintf^(0+128),w
  3441  05C5  00CC               	movwf	sprintf@c^(0+128)
  3442  05C6                     l380:
  3443                           
  3444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3445  05C6  084C               	movf	sprintf@c^(0+128),w
  3446  05C7  00AD               	movwf	??_sprintf^(0+128)
  3447  05C8  01AE               	clrf	(??_sprintf^(0+128)+1)
  3448  05C9  082D               	movf	??_sprintf^(0+128),w
  3449  05CA  02CA               	subwf	sprintf@prec^(0+128),f
  3450  05CB  082E               	movf	(??_sprintf+1)^(0+128),w
  3451  05CC  1C03               	skipc
  3452  05CD  03CB               	decf	(sprintf@prec+1)^(0+128),f
  3453  05CE  02CB               	subwf	(sprintf@prec+1)^(0+128),f
  3454  05CF                     l3484:
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3457  05CF  084C               	movf	sprintf@c^(0+128),w
  3458  05D0  1903               	btfsc	3,2
  3459  05D1  2DD3               	goto	u5571
  3460  05D2  2DD4               	goto	u5570
  3461  05D3                     u5571:
  3462  05D3  2DDF               	goto	l3490
  3463  05D4                     u5570:
  3464  05D4                     l3486:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3467  05D4  302E               	movlw	46
  3468  05D5  00AD               	movwf	??_sprintf^(0+128)
  3469  05D6  0849               	movf	sprintf@sp^(0+128),w
  3470  05D7  0084               	movwf	4
  3471  05D8  082D               	movf	??_sprintf^(0+128),w
  3472  05D9  1383               	bcf	3,7	;select IRP bank0
  3473  05DA  0080               	movwf	0
  3474  05DB                     l3488:
  3475  05DB  3001               	movlw	1
  3476  05DC  00AD               	movwf	??_sprintf^(0+128)
  3477  05DD  082D               	movf	??_sprintf^(0+128),w
  3478  05DE  07C9               	addwf	sprintf@sp^(0+128),f
  3479  05DF                     l3490:
  3480                           
  3481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3482  05DF  084C               	movf	sprintf@c^(0+128),w
  3483  05E0  120A  158A  2140  120A  118A  	fcall	_scale
  3484  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3485  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3486  05E7  0841               	movf	?_scale+3,w
  3487  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  3488  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  3489  05EA  00B5               	movwf	(_sprintf$1015+3)^(0+128)
  3490  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3491  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3492  05ED  0840               	movf	?_scale+2,w
  3493  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3494  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  3495  05F0  00B4               	movwf	(_sprintf$1015+2)^(0+128)
  3496  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3497  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3498  05F3  083F               	movf	?_scale+1,w
  3499  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3500  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3501  05F6  00B3               	movwf	(_sprintf$1015+1)^(0+128)
  3502  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3503  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3504  05F9  083E               	movf	?_scale,w
  3505  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3506  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3507  05FC  00B2               	movwf	_sprintf$1015^(0+128)
  3508  05FD                     l3492:
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3511  05FD  0835               	movf	(_sprintf$1015+3)^(0+128),w
  3512  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3513  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3514  0600  00AB               	movwf	___flmul@a+3
  3515  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3516  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3517  0603  0834               	movf	(_sprintf$1015+2)^(0+128),w
  3518  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3519  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3520  0606  00AA               	movwf	___flmul@a+2
  3521  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3522  0608  1303               	bcf	3,6	;RP1=0, select bank1
  3523  0609  0833               	movf	(_sprintf$1015+1)^(0+128),w
  3524  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3525  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3526  060C  00A9               	movwf	___flmul@a+1
  3527  060D  1683               	bsf	3,5	;RP0=1, select bank1
  3528  060E  1303               	bcf	3,6	;RP1=0, select bank1
  3529  060F  0832               	movf	_sprintf$1015^(0+128),w
  3530  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3532  0612  00A8               	movwf	___flmul@a
  3533  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3534  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3535  0615  0848               	movf	(sprintf@fval+3)^(0+128),w
  3536  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3538  0618  00A7               	movwf	___flmul@b+3
  3539  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3540  061A  1303               	bcf	3,6	;RP1=0, select bank1
  3541  061B  0847               	movf	(sprintf@fval+2)^(0+128),w
  3542  061C  1283               	bcf	3,5	;RP0=0, select bank0
  3543  061D  1303               	bcf	3,6	;RP1=0, select bank0
  3544  061E  00A6               	movwf	___flmul@b+2
  3545  061F  1683               	bsf	3,5	;RP0=1, select bank1
  3546  0620  1303               	bcf	3,6	;RP1=0, select bank1
  3547  0621  0846               	movf	(sprintf@fval+1)^(0+128),w
  3548  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3549  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3550  0624  00A5               	movwf	___flmul@b+1
  3551  0625  1683               	bsf	3,5	;RP0=1, select bank1
  3552  0626  1303               	bcf	3,6	;RP1=0, select bank1
  3553  0627  0845               	movf	sprintf@fval^(0+128),w
  3554  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3555  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3556  062A  00A4               	movwf	___flmul@b
  3557  062B  120A  158A  249F  120A  118A  	fcall	___flmul
  3558  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3559  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3560  0632  0827               	movf	?___flmul+3,w
  3561  0633  00D4               	movwf	___fltol@f1+3
  3562  0634  0826               	movf	?___flmul+2,w
  3563  0635  00D3               	movwf	___fltol@f1+2
  3564  0636  0825               	movf	?___flmul+1,w
  3565  0637  00D2               	movwf	___fltol@f1+1
  3566  0638  0824               	movf	?___flmul,w
  3567  0639  00D1               	movwf	___fltol@f1
  3568  063A  160A  158A  2628  120A  118A  	fcall	___fltol
  3569  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0641  0854               	movf	?___fltol+3,w
  3572  0642  1683               	bsf	3,5	;RP0=1, select bank1
  3573  0643  1303               	bcf	3,6	;RP1=0, select bank1
  3574  0644  00BA               	movwf	(sprintf@val+3)^(0+128)
  3575  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3576  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3577  0647  0853               	movf	?___fltol+2,w
  3578  0648  1683               	bsf	3,5	;RP0=1, select bank1
  3579  0649  1303               	bcf	3,6	;RP1=0, select bank1
  3580  064A  00B9               	movwf	(sprintf@val+2)^(0+128)
  3581  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3582  064C  1303               	bcf	3,6	;RP1=0, select bank0
  3583  064D  0852               	movf	?___fltol+1,w
  3584  064E  1683               	bsf	3,5	;RP0=1, select bank1
  3585  064F  1303               	bcf	3,6	;RP1=0, select bank1
  3586  0650  00B8               	movwf	(sprintf@val+1)^(0+128)
  3587  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3588  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3589  0653  0851               	movf	?___fltol,w
  3590  0654  1683               	bsf	3,5	;RP0=1, select bank1
  3591  0655  1303               	bcf	3,6	;RP1=0, select bank1
  3592  0656  00B7               	movwf	sprintf@val^(0+128)
  3593                           
  3594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3595  0657  2EF9               	goto	l3502
  3596  0658                     l3494:
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3599  0658  084C               	movf	sprintf@c^(0+128),w
  3600  0659  00AD               	movwf	??_sprintf^(0+128)
  3601  065A  3001               	movlw	1
  3602  065B                     u5585:
  3603  065B  1003               	clrc
  3604  065C  0DAD               	rlf	??_sprintf^(0+128),f
  3605  065D  3EFF               	addlw	-1
  3606  065E  1D03               	skipz
  3607  065F  2E5B               	goto	u5585
  3608  0660  1003               	clrc
  3609  0661  0D2D               	rlf	??_sprintf^(0+128),w
  3610  0662  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3611  0663  0084               	movwf	4
  3612  0664  120A  158A  200A  120A  118A  	fcall	stringdir
  3613  0669  00F0               	movwf	___lldiv@divisor
  3614  066A  120A  158A  200A  120A  118A  	fcall	stringdir
  3615  066F  00F1               	movwf	___lldiv@divisor+1
  3616  0670  120A  158A  200A  120A  118A  	fcall	stringdir
  3617  0675  00F2               	movwf	___lldiv@divisor+2
  3618  0676  120A  158A  200A  120A  118A  	fcall	stringdir
  3619  067B  00F3               	movwf	___lldiv@divisor+3
  3620  067C  083A               	movf	(sprintf@val+3)^(0+128),w
  3621  067D  00F7               	movwf	___lldiv@dividend+3
  3622  067E  0839               	movf	(sprintf@val+2)^(0+128),w
  3623  067F  00F6               	movwf	___lldiv@dividend+2
  3624  0680  0838               	movf	(sprintf@val+1)^(0+128),w
  3625  0681  00F5               	movwf	___lldiv@dividend+1
  3626  0682  0837               	movf	sprintf@val^(0+128),w
  3627  0683  00F4               	movwf	___lldiv@dividend
  3628  0684  160A  158A  25C2  120A  118A  	fcall	___lldiv
  3629  0689  0873               	movf	?___lldiv+3,w
  3630  068A  1683               	bsf	3,5	;RP0=1, select bank1
  3631  068B  1303               	bcf	3,6	;RP1=0, select bank1
  3632  068C  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3633  068D  0872               	movf	?___lldiv+2,w
  3634  068E  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3635  068F  0871               	movf	?___lldiv+1,w
  3636  0690  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3637  0691  0870               	movf	?___lldiv,w
  3638  0692  00BF               	movwf	sprintf@tmpval^(0+128)
  3639  0693                     l3496:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3642  0693  3000               	movlw	0
  3643  0694  00F3               	movwf	___llmod@divisor+3
  3644  0695  3000               	movlw	0
  3645  0696  00F2               	movwf	___llmod@divisor+2
  3646  0697  3000               	movlw	0
  3647  0698  00F1               	movwf	___llmod@divisor+1
  3648  0699  300A               	movlw	10
  3649  069A  00F0               	movwf	___llmod@divisor
  3650  069B  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3651  069C  00F7               	movwf	___llmod@dividend+3
  3652  069D  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3653  069E  00F6               	movwf	___llmod@dividend+2
  3654  069F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3655  06A0  00F5               	movwf	___llmod@dividend+1
  3656  06A1  083F               	movf	sprintf@tmpval^(0+128),w
  3657  06A2  00F4               	movwf	___llmod@dividend
  3658  06A3  160A  158A  2515  120A  118A  	fcall	___llmod
  3659  06A8  0873               	movf	?___llmod+3,w
  3660  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  3661  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  3662  06AB  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3663  06AC  0872               	movf	?___llmod+2,w
  3664  06AD  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3665  06AE  0871               	movf	?___llmod+1,w
  3666  06AF  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3667  06B0  0870               	movf	?___llmod,w
  3668  06B1  00BF               	movwf	sprintf@tmpval^(0+128)
  3669  06B2                     l3498:
  3670                           
  3671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3672  06B2  083F               	movf	sprintf@tmpval^(0+128),w
  3673  06B3  3E30               	addlw	48
  3674  06B4  00AD               	movwf	??_sprintf^(0+128)
  3675  06B5  0849               	movf	sprintf@sp^(0+128),w
  3676  06B6  0084               	movwf	4
  3677  06B7  082D               	movf	??_sprintf^(0+128),w
  3678  06B8  1383               	bcf	3,7	;select IRP bank0
  3679  06B9  0080               	movwf	0
  3680  06BA  3001               	movlw	1
  3681  06BB  00AD               	movwf	??_sprintf^(0+128)
  3682  06BC  082D               	movf	??_sprintf^(0+128),w
  3683  06BD  07C9               	addwf	sprintf@sp^(0+128),f
  3684  06BE                     l3500:
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3687  06BE  084C               	movf	sprintf@c^(0+128),w
  3688  06BF  00AD               	movwf	??_sprintf^(0+128)
  3689  06C0  3001               	movlw	1
  3690  06C1                     u5595:
  3691  06C1  1003               	clrc
  3692  06C2  0DAD               	rlf	??_sprintf^(0+128),f
  3693  06C3  3EFF               	addlw	-1
  3694  06C4  1D03               	skipz
  3695  06C5  2EC1               	goto	u5595
  3696  06C6  1003               	clrc
  3697  06C7  0D2D               	rlf	??_sprintf^(0+128),w
  3698  06C8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3699  06C9  0084               	movwf	4
  3700  06CA  120A  158A  200A  120A  118A  	fcall	stringdir
  3701  06CF  00F0               	movwf	___llmod@divisor
  3702  06D0  120A  158A  200A  120A  118A  	fcall	stringdir
  3703  06D5  00F1               	movwf	___llmod@divisor+1
  3704  06D6  120A  158A  200A  120A  118A  	fcall	stringdir
  3705  06DB  00F2               	movwf	___llmod@divisor+2
  3706  06DC  120A  158A  200A  120A  118A  	fcall	stringdir
  3707  06E1  00F3               	movwf	___llmod@divisor+3
  3708  06E2  083A               	movf	(sprintf@val+3)^(0+128),w
  3709  06E3  00F7               	movwf	___llmod@dividend+3
  3710  06E4  0839               	movf	(sprintf@val+2)^(0+128),w
  3711  06E5  00F6               	movwf	___llmod@dividend+2
  3712  06E6  0838               	movf	(sprintf@val+1)^(0+128),w
  3713  06E7  00F5               	movwf	___llmod@dividend+1
  3714  06E8  0837               	movf	sprintf@val^(0+128),w
  3715  06E9  00F4               	movwf	___llmod@dividend
  3716  06EA  160A  158A  2515  120A  118A  	fcall	___llmod
  3717  06EF  0873               	movf	?___llmod+3,w
  3718  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  3719  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  3720  06F2  00BA               	movwf	(sprintf@val+3)^(0+128)
  3721  06F3  0872               	movf	?___llmod+2,w
  3722  06F4  00B9               	movwf	(sprintf@val+2)^(0+128)
  3723  06F5  0871               	movf	?___llmod+1,w
  3724  06F6  00B8               	movwf	(sprintf@val+1)^(0+128)
  3725  06F7  0870               	movf	?___llmod,w
  3726  06F8  00B7               	movwf	sprintf@val^(0+128)
  3727  06F9                     l3502:
  3728                           
  3729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3730  06F9  3001               	movlw	1
  3731  06FA  02CC               	subwf	sprintf@c^(0+128),f
  3732  06FB  0A4C               	incf	sprintf@c^(0+128),w
  3733  06FC  1D03               	btfss	3,2
  3734  06FD  2EFF               	goto	u5601
  3735  06FE  2F00               	goto	u5600
  3736  06FF                     u5601:
  3737  06FF  2E58               	goto	l3494
  3738  0700                     u5600:
  3739  0700  2F12               	goto	l3510
  3740  0701                     l3504:
  3741                           
  3742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3743  0701  3030               	movlw	48
  3744  0702  00AD               	movwf	??_sprintf^(0+128)
  3745  0703  0849               	movf	sprintf@sp^(0+128),w
  3746  0704  0084               	movwf	4
  3747  0705  082D               	movf	??_sprintf^(0+128),w
  3748  0706  1383               	bcf	3,7	;select IRP bank0
  3749  0707  0080               	movwf	0
  3750  0708                     l3506:
  3751  0708  3001               	movlw	1
  3752  0709  00AD               	movwf	??_sprintf^(0+128)
  3753  070A  082D               	movf	??_sprintf^(0+128),w
  3754  070B  07C9               	addwf	sprintf@sp^(0+128),f
  3755  070C                     l3508:
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3758  070C  30FF               	movlw	255
  3759  070D  07CA               	addwf	sprintf@prec^(0+128),f
  3760  070E  1803               	skipnc
  3761  070F  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  3762  0710  30FF               	movlw	255
  3763  0711  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  3764  0712                     l3510:
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3767  0712  084A               	movf	sprintf@prec^(0+128),w
  3768  0713  044B               	iorwf	(sprintf@prec+1)^(0+128),w
  3769  0714  1D03               	btfss	3,2
  3770  0715  2F17               	goto	u5611
  3771  0716  2F18               	goto	u5610
  3772  0717                     u5611:
  3773  0717  2F01               	goto	l3504
  3774  0718                     u5610:
  3775  0718  2FDC               	goto	l3558
  3776  0719                     l3512:
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3779  0719  084A               	movf	sprintf@prec^(0+128),w
  3780  071A  044B               	iorwf	(sprintf@prec+1)^(0+128),w
  3781  071B  1D03               	btfss	3,2
  3782  071C  2F1E               	goto	u5621
  3783  071D  2F1F               	goto	u5620
  3784  071E                     u5621:
  3785  071E  2F2D               	goto	l388
  3786  071F                     u5620:
  3787  071F                     l3514:
  3788  071F  083A               	movf	(sprintf@val+3)^(0+128),w
  3789  0720  0439               	iorwf	(sprintf@val+2)^(0+128),w
  3790  0721  0438               	iorwf	(sprintf@val+1)^(0+128),w
  3791  0722  0437               	iorwf	sprintf@val^(0+128),w
  3792  0723  1D03               	skipz
  3793  0724  2F26               	goto	u5631
  3794  0725  2F27               	goto	u5630
  3795  0726                     u5631:
  3796  0726  2F2D               	goto	l388
  3797  0727                     u5630:
  3798  0727                     l3516:
  3799                           
  3800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3801  0727  3001               	movlw	1
  3802  0728  07CA               	addwf	sprintf@prec^(0+128),f
  3803  0729  1803               	skipnc
  3804  072A  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  3805  072B  3000               	movlw	0
  3806  072C  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  3807  072D                     l388:
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3810  072D  084B               	movf	(sprintf@prec+1)^(0+128),w
  3811  072E  3A80               	xorlw	128
  3812  072F  3C80               	sublw	128
  3813  0730  1D03               	skipz
  3814  0731  2F34               	goto	u5645
  3815  0732  084A               	movf	sprintf@prec^(0+128),w
  3816  0733  024C               	subwf	sprintf@c^(0+128),w
  3817  0734                     u5645:
  3818  0734  1803               	skipnc
  3819  0735  2F37               	goto	u5641
  3820  0736  2F38               	goto	u5640
  3821  0737                     u5641:
  3822  0737  2F3F               	goto	l3520
  3823  0738                     u5640:
  3824  0738                     l3518:
  3825                           
  3826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3827  0738  1683               	bsf	3,5	;RP0=1, select bank1
  3828  0739  1303               	bcf	3,6	;RP1=0, select bank1
  3829  073A  084A               	movf	sprintf@prec^(0+128),w
  3830  073B  00AD               	movwf	??_sprintf^(0+128)
  3831  073C  082D               	movf	??_sprintf^(0+128),w
  3832  073D  00CC               	movwf	sprintf@c^(0+128)
  3833  073E  2F57               	goto	l3524
  3834  073F                     l3520:
  3835  073F  1683               	bsf	3,5	;RP0=1, select bank1
  3836  0740  1303               	bcf	3,6	;RP1=0, select bank1
  3837  0741  084B               	movf	(sprintf@prec+1)^(0+128),w
  3838  0742  3A80               	xorlw	128
  3839  0743  00AD               	movwf	??_sprintf^(0+128)
  3840  0744  3080               	movlw	128
  3841  0745  022D               	subwf	??_sprintf^(0+128),w
  3842  0746  1D03               	skipz
  3843  0747  2F4A               	goto	u5655
  3844  0748  084C               	movf	sprintf@c^(0+128),w
  3845  0749  024A               	subwf	sprintf@prec^(0+128),w
  3846  074A                     u5655:
  3847  074A  1803               	skipnc
  3848  074B  2F4D               	goto	u5651
  3849  074C  2F4E               	goto	u5650
  3850  074D                     u5651:
  3851  074D  2F57               	goto	l3524
  3852  074E                     u5650:
  3853  074E                     l3522:
  3854                           
  3855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3856  074E  1683               	bsf	3,5	;RP0=1, select bank1
  3857  074F  1303               	bcf	3,6	;RP1=0, select bank1
  3858  0750  084C               	movf	sprintf@c^(0+128),w
  3859  0751  00AD               	movwf	??_sprintf^(0+128)
  3860  0752  01AE               	clrf	(??_sprintf^(0+128)+1)
  3861  0753  082D               	movf	??_sprintf^(0+128),w
  3862  0754  00CA               	movwf	sprintf@prec^(0+128)
  3863  0755  082E               	movf	(??_sprintf+1)^(0+128),w
  3864  0756  00CB               	movwf	(sprintf@prec+1)^(0+128)
  3865  0757                     l3524:
  3866                           
  3867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3868  0757  1683               	bsf	3,5	;RP0=1, select bank1
  3869  0758  1303               	bcf	3,6	;RP1=0, select bank1
  3870  0759  083D               	movf	sprintf@width^(0+128),w
  3871  075A  043E               	iorwf	(sprintf@width+1)^(0+128),w
  3872  075B  1903               	btfsc	3,2
  3873  075C  2F5E               	goto	u5661
  3874  075D  2F5F               	goto	u5660
  3875  075E                     u5661:
  3876  075E  2F71               	goto	l3530
  3877  075F                     u5660:
  3878  075F                     l3526:
  3879  075F  3003               	movlw	3
  3880  0760  053B               	andwf	sprintf@flag^(0+128),w
  3881  0761  00AD               	movwf	??_sprintf^(0+128)
  3882  0762  3000               	movlw	0
  3883  0763  053C               	andwf	(sprintf@flag+1)^(0+128),w
  3884  0764  00AE               	movwf	(??_sprintf+1)^(0+128)
  3885  0765  082D               	movf	??_sprintf^(0+128),w
  3886  0766  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3887  0767  1903               	btfsc	3,2
  3888  0768  2F6A               	goto	u5671
  3889  0769  2F6B               	goto	u5670
  3890  076A                     u5671:
  3891  076A  2F71               	goto	l3530
  3892  076B                     u5670:
  3893  076B                     l3528:
  3894                           
  3895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3896  076B  30FF               	movlw	255
  3897  076C  07BD               	addwf	sprintf@width^(0+128),f
  3898  076D  1803               	skipnc
  3899  076E  0ABE               	incf	(sprintf@width+1)^(0+128),f
  3900  076F  30FF               	movlw	255
  3901  0770  07BE               	addwf	(sprintf@width+1)^(0+128),f
  3902  0771                     l3530:
  3903                           
  3904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3905  0771  1F3C               	btfss	(sprintf@flag+1)^(0+128),6
  3906  0772  2F74               	goto	u5681
  3907  0773  2F75               	goto	u5680
  3908  0774                     u5681:
  3909  0774  2F90               	goto	l3538
  3910  0775                     u5680:
  3911  0775                     l3532:
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3914  0775  084B               	movf	(sprintf@prec+1)^(0+128),w
  3915  0776  3A80               	xorlw	128
  3916  0777  00AD               	movwf	??_sprintf^(0+128)
  3917  0778  083E               	movf	(sprintf@width+1)^(0+128),w
  3918  0779  3A80               	xorlw	128
  3919  077A  022D               	subwf	??_sprintf^(0+128),w
  3920  077B  1D03               	skipz
  3921  077C  2F7F               	goto	u5695
  3922  077D  083D               	movf	sprintf@width^(0+128),w
  3923  077E  024A               	subwf	sprintf@prec^(0+128),w
  3924  077F                     u5695:
  3925  077F  1803               	skipnc
  3926  0780  2F82               	goto	u5691
  3927  0781  2F83               	goto	u5690
  3928  0782                     u5691:
  3929  0782  2F8C               	goto	l3536
  3930  0783                     u5690:
  3931  0783                     l3534:
  3932                           
  3933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3934  0783  1683               	bsf	3,5	;RP0=1, select bank1
  3935  0784  1303               	bcf	3,6	;RP1=0, select bank1
  3936  0785  084A               	movf	sprintf@prec^(0+128),w
  3937  0786  02BD               	subwf	sprintf@width^(0+128),f
  3938  0787  084B               	movf	(sprintf@prec+1)^(0+128),w
  3939  0788  1C03               	skipc
  3940  0789  03BE               	decf	(sprintf@width+1)^(0+128),f
  3941  078A  02BE               	subwf	(sprintf@width+1)^(0+128),f
  3942  078B  2F90               	goto	l3538
  3943  078C                     l3536:
  3944                           
  3945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3946  078C  1683               	bsf	3,5	;RP0=1, select bank1
  3947  078D  1303               	bcf	3,6	;RP1=0, select bank1
  3948  078E  01BD               	clrf	sprintf@width^(0+128)
  3949  078F  01BE               	clrf	(sprintf@width+1)^(0+128)
  3950  0790                     l3538:
  3951                           
  3952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3953  0790  083E               	movf	(sprintf@width+1)^(0+128),w
  3954  0791  3A80               	xorlw	128
  3955  0792  3C80               	sublw	128
  3956  0793  1D03               	skipz
  3957  0794  2F97               	goto	u5705
  3958  0795  083D               	movf	sprintf@width^(0+128),w
  3959  0796  024C               	subwf	sprintf@c^(0+128),w
  3960  0797                     u5705:
  3961  0797  1803               	skipnc
  3962  0798  2F9A               	goto	u5701
  3963  0799  2F9B               	goto	u5700
  3964  079A                     u5701:
  3965  079A  2FA7               	goto	l3542
  3966  079B                     u5700:
  3967  079B                     l3540:
  3968                           
  3969                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3970  079B  1683               	bsf	3,5	;RP0=1, select bank1
  3971  079C  1303               	bcf	3,6	;RP1=0, select bank1
  3972  079D  084C               	movf	sprintf@c^(0+128),w
  3973  079E  00AD               	movwf	??_sprintf^(0+128)
  3974  079F  01AE               	clrf	(??_sprintf^(0+128)+1)
  3975  07A0  082D               	movf	??_sprintf^(0+128),w
  3976  07A1  02BD               	subwf	sprintf@width^(0+128),f
  3977  07A2  082E               	movf	(??_sprintf+1)^(0+128),w
  3978  07A3  1C03               	skipc
  3979  07A4  03BE               	decf	(sprintf@width+1)^(0+128),f
  3980  07A5  02BE               	subwf	(sprintf@width+1)^(0+128),f
  3981  07A6  2FAB               	goto	l3544
  3982  07A7                     l3542:
  3983                           
  3984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3985  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  3986  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  3987  07A9  01BD               	clrf	sprintf@width^(0+128)
  3988  07AA  01BE               	clrf	(sprintf@width+1)^(0+128)
  3989  07AB                     l3544:
  3990                           
  3991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3992  07AB  083D               	movf	sprintf@width^(0+128),w
  3993  07AC  043E               	iorwf	(sprintf@width+1)^(0+128),w
  3994  07AD  1903               	btfsc	3,2
  3995  07AE  2FB0               	goto	u5711
  3996  07AF  2FB1               	goto	u5710
  3997  07B0                     u5711:
  3998  07B0  2FC8               	goto	l3552
  3999  07B1                     u5710:
  4000  07B1                     l3546:
  4001                           
  4002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4003  07B1  3020               	movlw	32
  4004  07B2  00AD               	movwf	??_sprintf^(0+128)
  4005  07B3  0849               	movf	sprintf@sp^(0+128),w
  4006  07B4  0084               	movwf	4
  4007  07B5  082D               	movf	??_sprintf^(0+128),w
  4008  07B6  1383               	bcf	3,7	;select IRP bank0
  4009  07B7  0080               	movwf	0
  4010  07B8                     l3548:
  4011  07B8  3001               	movlw	1
  4012  07B9  00AD               	movwf	??_sprintf^(0+128)
  4013  07BA  082D               	movf	??_sprintf^(0+128),w
  4014  07BB  07C9               	addwf	sprintf@sp^(0+128),f
  4015  07BC                     l3550:
  4016  07BC  30FF               	movlw	255
  4017  07BD  07BD               	addwf	sprintf@width^(0+128),f
  4018  07BE  1803               	skipnc
  4019  07BF  0ABE               	incf	(sprintf@width+1)^(0+128),f
  4020  07C0  30FF               	movlw	255
  4021  07C1  07BE               	addwf	(sprintf@width+1)^(0+128),f
  4022  07C2  083D               	movf	sprintf@width^(0+128),w
  4023  07C3  043E               	iorwf	(sprintf@width+1)^(0+128),w
  4024  07C4  1D03               	btfss	3,2
  4025  07C5  2FC7               	goto	u5721
  4026  07C6  2FC8               	goto	u5720
  4027  07C7                     u5721:
  4028  07C7  2FB1               	goto	l3546
  4029  07C8                     u5720:
  4030  07C8                     l3552:
  4031                           
  4032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4033  07C8  3003               	movlw	3
  4034  07C9  053B               	andwf	sprintf@flag^(0+128),w
  4035  07CA  00AD               	movwf	??_sprintf^(0+128)
  4036  07CB  3000               	movlw	0
  4037  07CC  053C               	andwf	(sprintf@flag+1)^(0+128),w
  4038  07CD  00AE               	movwf	(??_sprintf+1)^(0+128)
  4039  07CE  082D               	movf	??_sprintf^(0+128),w
  4040  07CF  042E               	iorwf	(??_sprintf^(0+128)+1),w
  4041  07D0  1903               	btfsc	3,2
  4042  07D1  2FD3               	goto	u5731
  4043  07D2  2FD4               	goto	u5730
  4044  07D3                     u5731:
  4045  07D3  2FDC               	goto	l3558
  4046  07D4                     u5730:
  4047  07D4                     l3554:
  4048                           
  4049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4050  07D4  302D               	movlw	45
  4051  07D5  00AD               	movwf	??_sprintf^(0+128)
  4052  07D6  0849               	movf	sprintf@sp^(0+128),w
  4053  07D7  0084               	movwf	4
  4054  07D8  082D               	movf	??_sprintf^(0+128),w
  4055  07D9  1383               	bcf	3,7	;select IRP bank0
  4056  07DA  0080               	movwf	0
  4057  07DB  288D               	goto	l3314
  4058  07DC                     l3558:
  4059                           
  4060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4061  07DC  3001               	movlw	1
  4062  07DD  07A0               	addwf	sprintf@f^(0+128),f
  4063  07DE  30FF               	movlw	-1
  4064  07DF  0720               	addwf	sprintf@f^(0+128),w
  4065  07E0  0084               	movwf	4
  4066  07E1  120A  158A  200A  120A  118A  	fcall	stringdir
  4067  07E6  00AD               	movwf	??_sprintf^(0+128)
  4068  07E7  082D               	movf	??_sprintf^(0+128),w
  4069  07E8  00CC               	movwf	sprintf@c^(0+128)
  4070  07E9  084C               	movf	sprintf@c^(0+128),w
  4071  07EA  1D03               	btfss	3,2
  4072  07EB  2FED               	goto	u5741
  4073  07EC  2FEE               	goto	u5740
  4074  07ED                     u5741:
  4075  07ED  2880               	goto	l3310
  4076  07EE                     u5740:
  4077  07EE                     l3560:
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4080  07EE  0849               	movf	sprintf@sp^(0+128),w
  4081  07EF  0084               	movwf	4
  4082  07F0  1383               	bcf	3,7	;select IRP bank0
  4083  07F1  0180               	clrf	0
  4084  07F2                     l403:
  4085  07F2  0008               	return
  4086  07F3                     __end_of_sprintf:
  4087                           
  4088                           	psect	text2
  4089  0940                     __ptext2:	
  4090 ;; *************** function _scale *****************
  4091 ;; Defined at:
  4092 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  scl             1    wreg     char 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  scl             1   48[BANK0 ] char 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  4   30[BANK0 ] char 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4106 ;;      Params:         0       4       0       0       0
  4107 ;;      Locals:         0       5       0       0       0
  4108 ;;      Temps:          0      10       0       0       0
  4109 ;;      Totals:         0      19       0       0       0
  4110 ;;Total ram usage:       19 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    2
  4113 ;; This function calls:
  4114 ;;		___awdiv
  4115 ;;		___awmod
  4116 ;;		___flmul
  4117 ;; This function is called by:
  4118 ;;		_sprintf
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           
  4123                           ;psect for function _scale
  4124  0940                     _scale:
  4125                           
  4126                           ;incstack = 0
  4127                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4128                           ;scale@scl stored from wreg
  4129  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4130  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4131  0942  00D0               	movwf	scale@scl
  4132  0943                     l2902:
  4133                           
  4134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4135  0943  1FD0               	btfss	scale@scl,7
  4136  0944  2946               	goto	u4321
  4137  0945  2947               	goto	u4320
  4138  0946                     u4321:
  4139  0946  2AF4               	goto	l2924
  4140  0947                     u4320:
  4141  0947                     l2904:
  4142                           
  4143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4144  0947  09D0               	comf	scale@scl,f
  4145  0948  0AD0               	incf	scale@scl,f
  4146  0949                     l2906:
  4147                           
  4148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4149  0949  0850               	movf	scale@scl,w
  4150  094A  3A80               	xorlw	128
  4151  094B  3E12               	addlw	-238
  4152  094C  1C03               	skipc
  4153  094D  294F               	goto	u4331
  4154  094E  2950               	goto	u4330
  4155  094F                     u4331:
  4156  094F  2A38               	goto	l2914
  4157  0950                     u4330:
  4158  0950                     l2908:
  4159                           
  4160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4161  0950  300A               	movlw	10
  4162  0951  00F7               	movwf	___awdiv@divisor
  4163  0952  3000               	movlw	0
  4164  0953  00F8               	movwf	___awdiv@divisor+1
  4165  0954  0850               	movf	scale@scl,w
  4166  0955  00F2               	movwf	___awmod@dividend
  4167  0956  01F3               	clrf	___awmod@dividend+1
  4168  0957  1BF2               	btfsc	___awmod@dividend,7
  4169  0958  03F3               	decf	___awmod@dividend+1,f
  4170  0959  3064               	movlw	100
  4171  095A  00F0               	movwf	___awmod@divisor
  4172  095B  3000               	movlw	0
  4173  095C  00F1               	movwf	___awmod@divisor+1
  4174  095D  160A  158A  2569  120A  158A  	fcall	___awmod
  4175  0962  0871               	movf	?___awmod+1,w
  4176  0963  00FA               	movwf	___awdiv@dividend+1
  4177  0964  0870               	movf	?___awmod,w
  4178  0965  00F9               	movwf	___awdiv@dividend
  4179  0966  120A  118A  200F  120A  158A  	fcall	___awdiv
  4180  096B  0877               	movf	?___awdiv,w
  4181  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4182  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4183  096E  00C2               	movwf	??_scale
  4184  096F  3001               	movlw	1
  4185  0970                     u4345:
  4186  0970  1003               	clrc
  4187  0971  0DC2               	rlf	??_scale,f
  4188  0972  3EFF               	addlw	-1
  4189  0973  1D03               	skipz
  4190  0974  2970               	goto	u4345
  4191  0975  1003               	clrc
  4192  0976  0D42               	rlf	??_scale,w
  4193  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4194  0978  0084               	movwf	4
  4195  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  4196  097E  00C3               	movwf	??_scale+1
  4197  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  4198  0984  00C4               	movwf	??_scale+2
  4199  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  4200  098A  00C5               	movwf	??_scale+3
  4201  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  4202  0990  00C6               	movwf	??_scale+4
  4203  0991  0846               	movf	??_scale+4,w
  4204  0992  00A7               	movwf	___flmul@b+3
  4205  0993  0845               	movf	??_scale+3,w
  4206  0994  00A6               	movwf	___flmul@b+2
  4207  0995  0844               	movf	??_scale+2,w
  4208  0996  00A5               	movwf	___flmul@b+1
  4209  0997  0843               	movf	??_scale+1,w
  4210  0998  00A4               	movwf	___flmul@b
  4211  0999  3064               	movlw	100
  4212  099A  00F7               	movwf	___awdiv@divisor
  4213  099B  3000               	movlw	0
  4214  099C  00F8               	movwf	___awdiv@divisor+1
  4215  099D  0850               	movf	scale@scl,w
  4216  099E  00F9               	movwf	___awdiv@dividend
  4217  099F  01FA               	clrf	___awdiv@dividend+1
  4218  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4219  09A1  03FA               	decf	___awdiv@dividend+1,f
  4220  09A2  120A  118A  200F  120A  158A  	fcall	___awdiv
  4221  09A7  0877               	movf	?___awdiv,w
  4222  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4223  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4224  09AA  00C7               	movwf	??_scale+5
  4225  09AB  3001               	movlw	1
  4226  09AC                     u4355:
  4227  09AC  1003               	clrc
  4228  09AD  0DC7               	rlf	??_scale+5,f
  4229  09AE  3EFF               	addlw	-1
  4230  09AF  1D03               	skipz
  4231  09B0  29AC               	goto	u4355
  4232  09B1  1003               	clrc
  4233  09B2  0D47               	rlf	??_scale+5,w
  4234  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4235  09B4  0084               	movwf	4
  4236  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  4237  09BA  00C8               	movwf	??_scale+6
  4238  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  4239  09C0  00C9               	movwf	??_scale+7
  4240  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  4241  09C6  00CA               	movwf	??_scale+8
  4242  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  4243  09CC  00CB               	movwf	??_scale+9
  4244  09CD  084B               	movf	??_scale+9,w
  4245  09CE  00AB               	movwf	___flmul@a+3
  4246  09CF  084A               	movf	??_scale+8,w
  4247  09D0  00AA               	movwf	___flmul@a+2
  4248  09D1  0849               	movf	??_scale+7,w
  4249  09D2  00A9               	movwf	___flmul@a+1
  4250  09D3  0848               	movf	??_scale+6,w
  4251  09D4  00A8               	movwf	___flmul@a
  4252  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4253  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4254  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4255  09DC  0827               	movf	?___flmul+3,w
  4256  09DD  00CF               	movwf	_scale$1014+3
  4257  09DE  0826               	movf	?___flmul+2,w
  4258  09DF  00CE               	movwf	_scale$1014+2
  4259  09E0  0825               	movf	?___flmul+1,w
  4260  09E1  00CD               	movwf	_scale$1014+1
  4261  09E2  0824               	movf	?___flmul,w
  4262  09E3  00CC               	movwf	_scale$1014
  4263                           
  4264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4265  09E4  300A               	movlw	10
  4266  09E5  00F0               	movwf	___awmod@divisor
  4267  09E6  3000               	movlw	0
  4268  09E7  00F1               	movwf	___awmod@divisor+1
  4269  09E8  0850               	movf	scale@scl,w
  4270  09E9  00F2               	movwf	___awmod@dividend
  4271  09EA  01F3               	clrf	___awmod@dividend+1
  4272  09EB  1BF2               	btfsc	___awmod@dividend,7
  4273  09EC  03F3               	decf	___awmod@dividend+1,f
  4274  09ED  160A  158A  2569  120A  158A  	fcall	___awmod
  4275  09F2  0870               	movf	?___awmod,w
  4276  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4277  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4278  09F5  00C2               	movwf	??_scale
  4279  09F6  3001               	movlw	1
  4280  09F7                     u4365:
  4281  09F7  1003               	clrc
  4282  09F8  0DC2               	rlf	??_scale,f
  4283  09F9  3EFF               	addlw	-1
  4284  09FA  1D03               	skipz
  4285  09FB  29F7               	goto	u4365
  4286  09FC  1003               	clrc
  4287  09FD  0D42               	rlf	??_scale,w
  4288  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4289  09FF  0084               	movwf	4
  4290  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  4291  0A05  00C3               	movwf	??_scale+1
  4292  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  4293  0A0B  00C4               	movwf	??_scale+2
  4294  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4295  0A11  00C5               	movwf	??_scale+3
  4296  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  4297  0A17  00C6               	movwf	??_scale+4
  4298  0A18  0846               	movf	??_scale+4,w
  4299  0A19  00A7               	movwf	___flmul@b+3
  4300  0A1A  0845               	movf	??_scale+3,w
  4301  0A1B  00A6               	movwf	___flmul@b+2
  4302  0A1C  0844               	movf	??_scale+2,w
  4303  0A1D  00A5               	movwf	___flmul@b+1
  4304  0A1E  0843               	movf	??_scale+1,w
  4305  0A1F  00A4               	movwf	___flmul@b
  4306  0A20  084F               	movf	_scale$1014+3,w
  4307  0A21  00AB               	movwf	___flmul@a+3
  4308  0A22  084E               	movf	_scale$1014+2,w
  4309  0A23  00AA               	movwf	___flmul@a+2
  4310  0A24  084D               	movf	_scale$1014+1,w
  4311  0A25  00A9               	movwf	___flmul@a+1
  4312  0A26  084C               	movf	_scale$1014,w
  4313  0A27  00A8               	movwf	___flmul@a
  4314  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4315  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4316  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4317  0A2F  0827               	movf	?___flmul+3,w
  4318  0A30  00C1               	movwf	?_scale+3
  4319  0A31  0826               	movf	?___flmul+2,w
  4320  0A32  00C0               	movwf	?_scale+2
  4321  0A33  0825               	movf	?___flmul+1,w
  4322  0A34  00BF               	movwf	?_scale+1
  4323  0A35  0824               	movf	?___flmul,w
  4324  0A36  00BE               	movwf	?_scale
  4325  0A37  2C9E               	goto	l320
  4326  0A38                     l2914:
  4327  0A38  0850               	movf	scale@scl,w
  4328  0A39  3A80               	xorlw	128
  4329  0A3A  3E75               	addlw	-139
  4330  0A3B  1C03               	skipc
  4331  0A3C  2A3E               	goto	u4371
  4332  0A3D  2A3F               	goto	u4370
  4333  0A3E                     u4371:
  4334  0A3E  2AC7               	goto	l2920
  4335  0A3F                     u4370:
  4336  0A3F                     l2916:
  4337                           
  4338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4339  0A3F  300A               	movlw	10
  4340  0A40  00F0               	movwf	___awmod@divisor
  4341  0A41  3000               	movlw	0
  4342  0A42  00F1               	movwf	___awmod@divisor+1
  4343  0A43  0850               	movf	scale@scl,w
  4344  0A44  00F2               	movwf	___awmod@dividend
  4345  0A45  01F3               	clrf	___awmod@dividend+1
  4346  0A46  1BF2               	btfsc	___awmod@dividend,7
  4347  0A47  03F3               	decf	___awmod@dividend+1,f
  4348  0A48  160A  158A  2569  120A  158A  	fcall	___awmod
  4349  0A4D  0870               	movf	?___awmod,w
  4350  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4351  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4352  0A50  00C2               	movwf	??_scale
  4353  0A51  3001               	movlw	1
  4354  0A52                     u4385:
  4355  0A52  1003               	clrc
  4356  0A53  0DC2               	rlf	??_scale,f
  4357  0A54  3EFF               	addlw	-1
  4358  0A55  1D03               	skipz
  4359  0A56  2A52               	goto	u4385
  4360  0A57  1003               	clrc
  4361  0A58  0D42               	rlf	??_scale,w
  4362  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4363  0A5A  0084               	movwf	4
  4364  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  4365  0A60  00C3               	movwf	??_scale+1
  4366  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  4367  0A66  00C4               	movwf	??_scale+2
  4368  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  4369  0A6C  00C5               	movwf	??_scale+3
  4370  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4371  0A72  00C6               	movwf	??_scale+4
  4372  0A73  0846               	movf	??_scale+4,w
  4373  0A74  00A7               	movwf	___flmul@b+3
  4374  0A75  0845               	movf	??_scale+3,w
  4375  0A76  00A6               	movwf	___flmul@b+2
  4376  0A77  0844               	movf	??_scale+2,w
  4377  0A78  00A5               	movwf	___flmul@b+1
  4378  0A79  0843               	movf	??_scale+1,w
  4379  0A7A  00A4               	movwf	___flmul@b
  4380  0A7B  300A               	movlw	10
  4381  0A7C  00F7               	movwf	___awdiv@divisor
  4382  0A7D  3000               	movlw	0
  4383  0A7E  00F8               	movwf	___awdiv@divisor+1
  4384  0A7F  0850               	movf	scale@scl,w
  4385  0A80  00F9               	movwf	___awdiv@dividend
  4386  0A81  01FA               	clrf	___awdiv@dividend+1
  4387  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4388  0A83  03FA               	decf	___awdiv@dividend+1,f
  4389  0A84  120A  118A  200F  120A  158A  	fcall	___awdiv
  4390  0A89  0877               	movf	?___awdiv,w
  4391  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4392  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0A8C  00C7               	movwf	??_scale+5
  4394  0A8D  3001               	movlw	1
  4395  0A8E                     u4395:
  4396  0A8E  1003               	clrc
  4397  0A8F  0DC7               	rlf	??_scale+5,f
  4398  0A90  3EFF               	addlw	-1
  4399  0A91  1D03               	skipz
  4400  0A92  2A8E               	goto	u4395
  4401  0A93  1003               	clrc
  4402  0A94  0D47               	rlf	??_scale+5,w
  4403  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4404  0A96  0084               	movwf	4
  4405  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  4406  0A9C  00C8               	movwf	??_scale+6
  4407  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  4408  0AA2  00C9               	movwf	??_scale+7
  4409  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4410  0AA8  00CA               	movwf	??_scale+8
  4411  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4412  0AAE  00CB               	movwf	??_scale+9
  4413  0AAF  084B               	movf	??_scale+9,w
  4414  0AB0  00AB               	movwf	___flmul@a+3
  4415  0AB1  084A               	movf	??_scale+8,w
  4416  0AB2  00AA               	movwf	___flmul@a+2
  4417  0AB3  0849               	movf	??_scale+7,w
  4418  0AB4  00A9               	movwf	___flmul@a+1
  4419  0AB5  0848               	movf	??_scale+6,w
  4420  0AB6  00A8               	movwf	___flmul@a
  4421  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4422  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4423  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4424  0ABE  0827               	movf	?___flmul+3,w
  4425  0ABF  00C1               	movwf	?_scale+3
  4426  0AC0  0826               	movf	?___flmul+2,w
  4427  0AC1  00C0               	movwf	?_scale+2
  4428  0AC2  0825               	movf	?___flmul+1,w
  4429  0AC3  00BF               	movwf	?_scale+1
  4430  0AC4  0824               	movf	?___flmul,w
  4431  0AC5  00BE               	movwf	?_scale
  4432  0AC6  2C9E               	goto	l320
  4433  0AC7                     l2920:
  4434                           
  4435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4436  0AC7  0850               	movf	scale@scl,w
  4437  0AC8  00C2               	movwf	??_scale
  4438  0AC9  3001               	movlw	1
  4439  0ACA                     u4405:
  4440  0ACA  1003               	clrc
  4441  0ACB  0DC2               	rlf	??_scale,f
  4442  0ACC  3EFF               	addlw	-1
  4443  0ACD  1D03               	skipz
  4444  0ACE  2ACA               	goto	u4405
  4445  0ACF  1003               	clrc
  4446  0AD0  0D42               	rlf	??_scale,w
  4447  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4448  0AD2  0084               	movwf	4
  4449  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  4450  0AD8  00C3               	movwf	??_scale+1
  4451  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  4452  0ADE  00C4               	movwf	??_scale+2
  4453  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  4454  0AE4  00C5               	movwf	??_scale+3
  4455  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4456  0AEA  00C6               	movwf	??_scale+4
  4457  0AEB  0846               	movf	??_scale+4,w
  4458  0AEC  00C1               	movwf	?_scale+3
  4459  0AED  0845               	movf	??_scale+3,w
  4460  0AEE  00C0               	movwf	?_scale+2
  4461  0AEF  0844               	movf	??_scale+2,w
  4462  0AF0  00BF               	movwf	?_scale+1
  4463  0AF1  0843               	movf	??_scale+1,w
  4464  0AF2  00BE               	movwf	?_scale
  4465  0AF3  2C9E               	goto	l320
  4466  0AF4                     l2924:
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4469  0AF4  0850               	movf	scale@scl,w
  4470  0AF5  3A80               	xorlw	128
  4471  0AF6  3E12               	addlw	-238
  4472  0AF7  1C03               	skipc
  4473  0AF8  2AFA               	goto	u4411
  4474  0AF9  2AFB               	goto	u4410
  4475  0AFA                     u4411:
  4476  0AFA  2BE3               	goto	l2932
  4477  0AFB                     u4410:
  4478  0AFB                     l2926:
  4479                           
  4480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4481  0AFB  300A               	movlw	10
  4482  0AFC  00F7               	movwf	___awdiv@divisor
  4483  0AFD  3000               	movlw	0
  4484  0AFE  00F8               	movwf	___awdiv@divisor+1
  4485  0AFF  0850               	movf	scale@scl,w
  4486  0B00  00F2               	movwf	___awmod@dividend
  4487  0B01  01F3               	clrf	___awmod@dividend+1
  4488  0B02  1BF2               	btfsc	___awmod@dividend,7
  4489  0B03  03F3               	decf	___awmod@dividend+1,f
  4490  0B04  3064               	movlw	100
  4491  0B05  00F0               	movwf	___awmod@divisor
  4492  0B06  3000               	movlw	0
  4493  0B07  00F1               	movwf	___awmod@divisor+1
  4494  0B08  160A  158A  2569  120A  158A  	fcall	___awmod
  4495  0B0D  0871               	movf	?___awmod+1,w
  4496  0B0E  00FA               	movwf	___awdiv@dividend+1
  4497  0B0F  0870               	movf	?___awmod,w
  4498  0B10  00F9               	movwf	___awdiv@dividend
  4499  0B11  120A  118A  200F  120A  158A  	fcall	___awdiv
  4500  0B16  0877               	movf	?___awdiv,w
  4501  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4502  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4503  0B19  00C2               	movwf	??_scale
  4504  0B1A  3001               	movlw	1
  4505  0B1B                     u4425:
  4506  0B1B  1003               	clrc
  4507  0B1C  0DC2               	rlf	??_scale,f
  4508  0B1D  3EFF               	addlw	-1
  4509  0B1E  1D03               	skipz
  4510  0B1F  2B1B               	goto	u4425
  4511  0B20  1003               	clrc
  4512  0B21  0D42               	rlf	??_scale,w
  4513  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4514  0B23  0084               	movwf	4
  4515  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  4516  0B29  00C3               	movwf	??_scale+1
  4517  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  4518  0B2F  00C4               	movwf	??_scale+2
  4519  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  4520  0B35  00C5               	movwf	??_scale+3
  4521  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  4522  0B3B  00C6               	movwf	??_scale+4
  4523  0B3C  0846               	movf	??_scale+4,w
  4524  0B3D  00A7               	movwf	___flmul@b+3
  4525  0B3E  0845               	movf	??_scale+3,w
  4526  0B3F  00A6               	movwf	___flmul@b+2
  4527  0B40  0844               	movf	??_scale+2,w
  4528  0B41  00A5               	movwf	___flmul@b+1
  4529  0B42  0843               	movf	??_scale+1,w
  4530  0B43  00A4               	movwf	___flmul@b
  4531  0B44  3064               	movlw	100
  4532  0B45  00F7               	movwf	___awdiv@divisor
  4533  0B46  3000               	movlw	0
  4534  0B47  00F8               	movwf	___awdiv@divisor+1
  4535  0B48  0850               	movf	scale@scl,w
  4536  0B49  00F9               	movwf	___awdiv@dividend
  4537  0B4A  01FA               	clrf	___awdiv@dividend+1
  4538  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4539  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4540  0B4D  120A  118A  200F  120A  158A  	fcall	___awdiv
  4541  0B52  0877               	movf	?___awdiv,w
  4542  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0B55  00C7               	movwf	??_scale+5
  4545  0B56  3001               	movlw	1
  4546  0B57                     u4435:
  4547  0B57  1003               	clrc
  4548  0B58  0DC7               	rlf	??_scale+5,f
  4549  0B59  3EFF               	addlw	-1
  4550  0B5A  1D03               	skipz
  4551  0B5B  2B57               	goto	u4435
  4552  0B5C  1003               	clrc
  4553  0B5D  0D47               	rlf	??_scale+5,w
  4554  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4555  0B5F  0084               	movwf	4
  4556  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  4557  0B65  00C8               	movwf	??_scale+6
  4558  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  4559  0B6B  00C9               	movwf	??_scale+7
  4560  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  4561  0B71  00CA               	movwf	??_scale+8
  4562  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  4563  0B77  00CB               	movwf	??_scale+9
  4564  0B78  084B               	movf	??_scale+9,w
  4565  0B79  00AB               	movwf	___flmul@a+3
  4566  0B7A  084A               	movf	??_scale+8,w
  4567  0B7B  00AA               	movwf	___flmul@a+2
  4568  0B7C  0849               	movf	??_scale+7,w
  4569  0B7D  00A9               	movwf	___flmul@a+1
  4570  0B7E  0848               	movf	??_scale+6,w
  4571  0B7F  00A8               	movwf	___flmul@a
  4572  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4573  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4574  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4575  0B87  0827               	movf	?___flmul+3,w
  4576  0B88  00CF               	movwf	_scale$1014+3
  4577  0B89  0826               	movf	?___flmul+2,w
  4578  0B8A  00CE               	movwf	_scale$1014+2
  4579  0B8B  0825               	movf	?___flmul+1,w
  4580  0B8C  00CD               	movwf	_scale$1014+1
  4581  0B8D  0824               	movf	?___flmul,w
  4582  0B8E  00CC               	movwf	_scale$1014
  4583                           
  4584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4585  0B8F  300A               	movlw	10
  4586  0B90  00F0               	movwf	___awmod@divisor
  4587  0B91  3000               	movlw	0
  4588  0B92  00F1               	movwf	___awmod@divisor+1
  4589  0B93  0850               	movf	scale@scl,w
  4590  0B94  00F2               	movwf	___awmod@dividend
  4591  0B95  01F3               	clrf	___awmod@dividend+1
  4592  0B96  1BF2               	btfsc	___awmod@dividend,7
  4593  0B97  03F3               	decf	___awmod@dividend+1,f
  4594  0B98  160A  158A  2569  120A  158A  	fcall	___awmod
  4595  0B9D  0870               	movf	?___awmod,w
  4596  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4597  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4598  0BA0  00C2               	movwf	??_scale
  4599  0BA1  3001               	movlw	1
  4600  0BA2                     u4445:
  4601  0BA2  1003               	clrc
  4602  0BA3  0DC2               	rlf	??_scale,f
  4603  0BA4  3EFF               	addlw	-1
  4604  0BA5  1D03               	skipz
  4605  0BA6  2BA2               	goto	u4445
  4606  0BA7  1003               	clrc
  4607  0BA8  0D42               	rlf	??_scale,w
  4608  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4609  0BAA  0084               	movwf	4
  4610  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  4611  0BB0  00C3               	movwf	??_scale+1
  4612  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  4613  0BB6  00C4               	movwf	??_scale+2
  4614  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  4615  0BBC  00C5               	movwf	??_scale+3
  4616  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  4617  0BC2  00C6               	movwf	??_scale+4
  4618  0BC3  0846               	movf	??_scale+4,w
  4619  0BC4  00A7               	movwf	___flmul@b+3
  4620  0BC5  0845               	movf	??_scale+3,w
  4621  0BC6  00A6               	movwf	___flmul@b+2
  4622  0BC7  0844               	movf	??_scale+2,w
  4623  0BC8  00A5               	movwf	___flmul@b+1
  4624  0BC9  0843               	movf	??_scale+1,w
  4625  0BCA  00A4               	movwf	___flmul@b
  4626  0BCB  084F               	movf	_scale$1014+3,w
  4627  0BCC  00AB               	movwf	___flmul@a+3
  4628  0BCD  084E               	movf	_scale$1014+2,w
  4629  0BCE  00AA               	movwf	___flmul@a+2
  4630  0BCF  084D               	movf	_scale$1014+1,w
  4631  0BD0  00A9               	movwf	___flmul@a+1
  4632  0BD1  084C               	movf	_scale$1014,w
  4633  0BD2  00A8               	movwf	___flmul@a
  4634  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4635  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4636  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4637  0BDA  0827               	movf	?___flmul+3,w
  4638  0BDB  00C1               	movwf	?_scale+3
  4639  0BDC  0826               	movf	?___flmul+2,w
  4640  0BDD  00C0               	movwf	?_scale+2
  4641  0BDE  0825               	movf	?___flmul+1,w
  4642  0BDF  00BF               	movwf	?_scale+1
  4643  0BE0  0824               	movf	?___flmul,w
  4644  0BE1  00BE               	movwf	?_scale
  4645  0BE2  2C9E               	goto	l320
  4646  0BE3                     l2932:
  4647  0BE3  0850               	movf	scale@scl,w
  4648  0BE4  3A80               	xorlw	128
  4649  0BE5  3E75               	addlw	-139
  4650  0BE6  1C03               	skipc
  4651  0BE7  2BE9               	goto	u4451
  4652  0BE8  2BEA               	goto	u4450
  4653  0BE9                     u4451:
  4654  0BE9  2C72               	goto	l2938
  4655  0BEA                     u4450:
  4656  0BEA                     l2934:
  4657                           
  4658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4659  0BEA  300A               	movlw	10
  4660  0BEB  00F0               	movwf	___awmod@divisor
  4661  0BEC  3000               	movlw	0
  4662  0BED  00F1               	movwf	___awmod@divisor+1
  4663  0BEE  0850               	movf	scale@scl,w
  4664  0BEF  00F2               	movwf	___awmod@dividend
  4665  0BF0  01F3               	clrf	___awmod@dividend+1
  4666  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4667  0BF2  03F3               	decf	___awmod@dividend+1,f
  4668  0BF3  160A  158A  2569  120A  158A  	fcall	___awmod
  4669  0BF8  0870               	movf	?___awmod,w
  4670  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4671  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4672  0BFB  00C2               	movwf	??_scale
  4673  0BFC  3001               	movlw	1
  4674  0BFD                     u4465:
  4675  0BFD  1003               	clrc
  4676  0BFE  0DC2               	rlf	??_scale,f
  4677  0BFF  3EFF               	addlw	-1
  4678  0C00  1D03               	skipz
  4679  0C01  2BFD               	goto	u4465
  4680  0C02  1003               	clrc
  4681  0C03  0D42               	rlf	??_scale,w
  4682  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4683  0C05  0084               	movwf	4
  4684  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  4685  0C0B  00C3               	movwf	??_scale+1
  4686  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4687  0C11  00C4               	movwf	??_scale+2
  4688  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  4689  0C17  00C5               	movwf	??_scale+3
  4690  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  4691  0C1D  00C6               	movwf	??_scale+4
  4692  0C1E  0846               	movf	??_scale+4,w
  4693  0C1F  00A7               	movwf	___flmul@b+3
  4694  0C20  0845               	movf	??_scale+3,w
  4695  0C21  00A6               	movwf	___flmul@b+2
  4696  0C22  0844               	movf	??_scale+2,w
  4697  0C23  00A5               	movwf	___flmul@b+1
  4698  0C24  0843               	movf	??_scale+1,w
  4699  0C25  00A4               	movwf	___flmul@b
  4700  0C26  300A               	movlw	10
  4701  0C27  00F7               	movwf	___awdiv@divisor
  4702  0C28  3000               	movlw	0
  4703  0C29  00F8               	movwf	___awdiv@divisor+1
  4704  0C2A  0850               	movf	scale@scl,w
  4705  0C2B  00F9               	movwf	___awdiv@dividend
  4706  0C2C  01FA               	clrf	___awdiv@dividend+1
  4707  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4708  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4709  0C2F  120A  118A  200F  120A  158A  	fcall	___awdiv
  4710  0C34  0877               	movf	?___awdiv,w
  4711  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4712  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4713  0C37  00C7               	movwf	??_scale+5
  4714  0C38  3001               	movlw	1
  4715  0C39                     u4475:
  4716  0C39  1003               	clrc
  4717  0C3A  0DC7               	rlf	??_scale+5,f
  4718  0C3B  3EFF               	addlw	-1
  4719  0C3C  1D03               	skipz
  4720  0C3D  2C39               	goto	u4475
  4721  0C3E  1003               	clrc
  4722  0C3F  0D47               	rlf	??_scale+5,w
  4723  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4724  0C41  0084               	movwf	4
  4725  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  4726  0C47  00C8               	movwf	??_scale+6
  4727  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  4728  0C4D  00C9               	movwf	??_scale+7
  4729  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  4730  0C53  00CA               	movwf	??_scale+8
  4731  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  4732  0C59  00CB               	movwf	??_scale+9
  4733  0C5A  084B               	movf	??_scale+9,w
  4734  0C5B  00AB               	movwf	___flmul@a+3
  4735  0C5C  084A               	movf	??_scale+8,w
  4736  0C5D  00AA               	movwf	___flmul@a+2
  4737  0C5E  0849               	movf	??_scale+7,w
  4738  0C5F  00A9               	movwf	___flmul@a+1
  4739  0C60  0848               	movf	??_scale+6,w
  4740  0C61  00A8               	movwf	___flmul@a
  4741  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4742  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4743  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4744  0C69  0827               	movf	?___flmul+3,w
  4745  0C6A  00C1               	movwf	?_scale+3
  4746  0C6B  0826               	movf	?___flmul+2,w
  4747  0C6C  00C0               	movwf	?_scale+2
  4748  0C6D  0825               	movf	?___flmul+1,w
  4749  0C6E  00BF               	movwf	?_scale+1
  4750  0C6F  0824               	movf	?___flmul,w
  4751  0C70  00BE               	movwf	?_scale
  4752  0C71  2C9E               	goto	l320
  4753  0C72                     l2938:
  4754                           
  4755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4756  0C72  0850               	movf	scale@scl,w
  4757  0C73  00C2               	movwf	??_scale
  4758  0C74  3001               	movlw	1
  4759  0C75                     u4485:
  4760  0C75  1003               	clrc
  4761  0C76  0DC2               	rlf	??_scale,f
  4762  0C77  3EFF               	addlw	-1
  4763  0C78  1D03               	skipz
  4764  0C79  2C75               	goto	u4485
  4765  0C7A  1003               	clrc
  4766  0C7B  0D42               	rlf	??_scale,w
  4767  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4768  0C7D  0084               	movwf	4
  4769  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  4770  0C83  00C3               	movwf	??_scale+1
  4771  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  4772  0C89  00C4               	movwf	??_scale+2
  4773  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  4774  0C8F  00C5               	movwf	??_scale+3
  4775  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  4776  0C95  00C6               	movwf	??_scale+4
  4777  0C96  0846               	movf	??_scale+4,w
  4778  0C97  00C1               	movwf	?_scale+3
  4779  0C98  0845               	movf	??_scale+3,w
  4780  0C99  00C0               	movwf	?_scale+2
  4781  0C9A  0844               	movf	??_scale+2,w
  4782  0C9B  00BF               	movwf	?_scale+1
  4783  0C9C  0843               	movf	??_scale+1,w
  4784  0C9D  00BE               	movwf	?_scale
  4785  0C9E                     l320:
  4786  0C9E  0008               	return
  4787  0C9F                     __end_of_scale:
  4788                           
  4789                           	psect	text3
  4790  1D69                     __ptext3:	
  4791 ;; *************** function ___awmod *****************
  4792 ;; Defined at:
  4793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  divisor         2    0[COMMON] int 
  4796 ;;  dividend        2    2[COMMON] int 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;  sign            1    6[COMMON] unsigned char 
  4799 ;;  counter         1    5[COMMON] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  2    0[COMMON] int 
  4802 ;; Registers used:
  4803 ;;		wreg, status,2, status,0
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4809 ;;      Params:         4       0       0       0       0
  4810 ;;      Locals:         2       0       0       0       0
  4811 ;;      Temps:          1       0       0       0       0
  4812 ;;      Totals:         7       0       0       0       0
  4813 ;;Total ram usage:        7 bytes
  4814 ;; Hardware stack levels used:    1
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_scale
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           
  4823                           ;psect for function ___awmod
  4824  1D69                     ___awmod:
  4825  1D69                     l2426:	
  4826                           ;incstack = 0
  4827                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4828                           
  4829  1D69  01F6               	clrf	___awmod@sign
  4830  1D6A                     l2428:
  4831  1D6A  1FF3               	btfss	___awmod@dividend+1,7
  4832  1D6B  2D6D               	goto	u3161
  4833  1D6C  2D6E               	goto	u3160
  4834  1D6D                     u3161:
  4835  1D6D  2D75               	goto	l2434
  4836  1D6E                     u3160:
  4837  1D6E                     l2430:
  4838  1D6E  09F2               	comf	___awmod@dividend,f
  4839  1D6F  09F3               	comf	___awmod@dividend+1,f
  4840  1D70  0AF2               	incf	___awmod@dividend,f
  4841  1D71  1903               	skipnz
  4842  1D72  0AF3               	incf	___awmod@dividend+1,f
  4843  1D73                     l2432:
  4844  1D73  01F6               	clrf	___awmod@sign
  4845  1D74  0AF6               	incf	___awmod@sign,f
  4846  1D75                     l2434:
  4847  1D75  1FF1               	btfss	___awmod@divisor+1,7
  4848  1D76  2D78               	goto	u3171
  4849  1D77  2D79               	goto	u3170
  4850  1D78                     u3171:
  4851  1D78  2D7E               	goto	l2438
  4852  1D79                     u3170:
  4853  1D79                     l2436:
  4854  1D79  09F0               	comf	___awmod@divisor,f
  4855  1D7A  09F1               	comf	___awmod@divisor+1,f
  4856  1D7B  0AF0               	incf	___awmod@divisor,f
  4857  1D7C  1903               	skipnz
  4858  1D7D  0AF1               	incf	___awmod@divisor+1,f
  4859  1D7E                     l2438:
  4860  1D7E  0870               	movf	___awmod@divisor,w
  4861  1D7F  0471               	iorwf	___awmod@divisor+1,w
  4862  1D80  1903               	btfsc	3,2
  4863  1D81  2D83               	goto	u3181
  4864  1D82  2D84               	goto	u3180
  4865  1D83                     u3181:
  4866  1D83  2DB3               	goto	l2456
  4867  1D84                     u3180:
  4868  1D84                     l2440:
  4869  1D84  01F5               	clrf	___awmod@counter
  4870  1D85  0AF5               	incf	___awmod@counter,f
  4871  1D86  2D92               	goto	l2446
  4872  1D87                     l2442:
  4873  1D87  3001               	movlw	1
  4874  1D88                     u3195:
  4875  1D88  1003               	clrc
  4876  1D89  0DF0               	rlf	___awmod@divisor,f
  4877  1D8A  0DF1               	rlf	___awmod@divisor+1,f
  4878  1D8B  3EFF               	addlw	-1
  4879  1D8C  1D03               	skipz
  4880  1D8D  2D88               	goto	u3195
  4881  1D8E                     l2444:
  4882  1D8E  3001               	movlw	1
  4883  1D8F  00F4               	movwf	??___awmod
  4884  1D90  0874               	movf	??___awmod,w
  4885  1D91  07F5               	addwf	___awmod@counter,f
  4886  1D92                     l2446:
  4887  1D92  1FF1               	btfss	___awmod@divisor+1,7
  4888  1D93  2D95               	goto	u3201
  4889  1D94  2D96               	goto	u3200
  4890  1D95                     u3201:
  4891  1D95  2D87               	goto	l2442
  4892  1D96                     u3200:
  4893  1D96                     l2448:
  4894  1D96  0871               	movf	___awmod@divisor+1,w
  4895  1D97  0273               	subwf	___awmod@dividend+1,w
  4896  1D98  1D03               	skipz
  4897  1D99  2D9C               	goto	u3215
  4898  1D9A  0870               	movf	___awmod@divisor,w
  4899  1D9B  0272               	subwf	___awmod@dividend,w
  4900  1D9C                     u3215:
  4901  1D9C  1C03               	skipc
  4902  1D9D  2D9F               	goto	u3211
  4903  1D9E  2DA0               	goto	u3210
  4904  1D9F                     u3211:
  4905  1D9F  2DA6               	goto	l2452
  4906  1DA0                     u3210:
  4907  1DA0                     l2450:
  4908  1DA0  0870               	movf	___awmod@divisor,w
  4909  1DA1  02F2               	subwf	___awmod@dividend,f
  4910  1DA2  0871               	movf	___awmod@divisor+1,w
  4911  1DA3  1C03               	skipc
  4912  1DA4  03F3               	decf	___awmod@dividend+1,f
  4913  1DA5  02F3               	subwf	___awmod@dividend+1,f
  4914  1DA6                     l2452:
  4915  1DA6  3001               	movlw	1
  4916  1DA7                     u3225:
  4917  1DA7  1003               	clrc
  4918  1DA8  0CF1               	rrf	___awmod@divisor+1,f
  4919  1DA9  0CF0               	rrf	___awmod@divisor,f
  4920  1DAA  3EFF               	addlw	-1
  4921  1DAB  1D03               	skipz
  4922  1DAC  2DA7               	goto	u3225
  4923  1DAD                     l2454:
  4924  1DAD  3001               	movlw	1
  4925  1DAE  02F5               	subwf	___awmod@counter,f
  4926  1DAF  1D03               	btfss	3,2
  4927  1DB0  2DB2               	goto	u3231
  4928  1DB1  2DB3               	goto	u3230
  4929  1DB2                     u3231:
  4930  1DB2  2D96               	goto	l2448
  4931  1DB3                     u3230:
  4932  1DB3                     l2456:
  4933  1DB3  0876               	movf	___awmod@sign,w
  4934  1DB4  1903               	btfsc	3,2
  4935  1DB5  2DB7               	goto	u3241
  4936  1DB6  2DB8               	goto	u3240
  4937  1DB7                     u3241:
  4938  1DB7  2DBD               	goto	l2460
  4939  1DB8                     u3240:
  4940  1DB8                     l2458:
  4941  1DB8  09F2               	comf	___awmod@dividend,f
  4942  1DB9  09F3               	comf	___awmod@dividend+1,f
  4943  1DBA  0AF2               	incf	___awmod@dividend,f
  4944  1DBB  1903               	skipnz
  4945  1DBC  0AF3               	incf	___awmod@dividend+1,f
  4946  1DBD                     l2460:
  4947  1DBD  0873               	movf	___awmod@dividend+1,w
  4948  1DBE  00F1               	movwf	?___awmod+1
  4949  1DBF  0872               	movf	___awmod@dividend,w
  4950  1DC0  00F0               	movwf	?___awmod
  4951  1DC1                     l573:
  4952  1DC1  0008               	return
  4953  1DC2                     __end_of___awmod:
  4954                           
  4955                           	psect	text4
  4956  000F                     __ptext4:	
  4957 ;; *************** function ___awdiv *****************
  4958 ;; Defined at:
  4959 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  divisor         2    7[COMMON] int 
  4962 ;;  dividend        2    9[COMMON] int 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  quotient        2    2[BANK0 ] int 
  4965 ;;  sign            1    1[BANK0 ] unsigned char 
  4966 ;;  counter         1    0[BANK0 ] unsigned char 
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  2    7[COMMON] int 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4976 ;;      Params:         4       0       0       0       0
  4977 ;;      Locals:         0       4       0       0       0
  4978 ;;      Temps:          1       0       0       0       0
  4979 ;;      Totals:         5       4       0       0       0
  4980 ;;Total ram usage:        9 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_scale
  4986 ;;		_sprintf
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           
  4991                           ;psect for function ___awdiv
  4992  000F                     ___awdiv:
  4993  000F                     l2382:	
  4994                           ;incstack = 0
  4995                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4996                           
  4997  000F  1283               	bcf	3,5	;RP0=0, select bank0
  4998  0010  1303               	bcf	3,6	;RP1=0, select bank0
  4999  0011  01A1               	clrf	___awdiv@sign
  5000  0012                     l2384:
  5001  0012  1FF8               	btfss	___awdiv@divisor+1,7
  5002  0013  2815               	goto	u3061
  5003  0014  2816               	goto	u3060
  5004  0015                     u3061:
  5005  0015  281D               	goto	l2390
  5006  0016                     u3060:
  5007  0016                     l2386:
  5008  0016  09F7               	comf	___awdiv@divisor,f
  5009  0017  09F8               	comf	___awdiv@divisor+1,f
  5010  0018  0AF7               	incf	___awdiv@divisor,f
  5011  0019  1903               	skipnz
  5012  001A  0AF8               	incf	___awdiv@divisor+1,f
  5013  001B                     l2388:
  5014  001B  01A1               	clrf	___awdiv@sign
  5015  001C  0AA1               	incf	___awdiv@sign,f
  5016  001D                     l2390:
  5017  001D  1FFA               	btfss	___awdiv@dividend+1,7
  5018  001E  2820               	goto	u3071
  5019  001F  2821               	goto	u3070
  5020  0020                     u3071:
  5021  0020  282A               	goto	l2396
  5022  0021                     u3070:
  5023  0021                     l2392:
  5024  0021  09F9               	comf	___awdiv@dividend,f
  5025  0022  09FA               	comf	___awdiv@dividend+1,f
  5026  0023  0AF9               	incf	___awdiv@dividend,f
  5027  0024  1903               	skipnz
  5028  0025  0AFA               	incf	___awdiv@dividend+1,f
  5029  0026                     l2394:
  5030  0026  3001               	movlw	1
  5031  0027  00FB               	movwf	??___awdiv
  5032  0028  087B               	movf	??___awdiv,w
  5033  0029  06A1               	xorwf	___awdiv@sign,f
  5034  002A                     l2396:
  5035  002A  01A2               	clrf	___awdiv@quotient
  5036  002B  01A3               	clrf	___awdiv@quotient+1
  5037  002C                     l2398:
  5038  002C  0877               	movf	___awdiv@divisor,w
  5039  002D  0478               	iorwf	___awdiv@divisor+1,w
  5040  002E  1903               	btfsc	3,2
  5041  002F  2831               	goto	u3081
  5042  0030  2832               	goto	u3080
  5043  0031                     u3081:
  5044  0031  2869               	goto	l2418
  5045  0032                     u3080:
  5046  0032                     l2400:
  5047  0032  01A0               	clrf	___awdiv@counter
  5048  0033  0AA0               	incf	___awdiv@counter,f
  5049  0034  2840               	goto	l2406
  5050  0035                     l2402:
  5051  0035  3001               	movlw	1
  5052  0036                     u3095:
  5053  0036  1003               	clrc
  5054  0037  0DF7               	rlf	___awdiv@divisor,f
  5055  0038  0DF8               	rlf	___awdiv@divisor+1,f
  5056  0039  3EFF               	addlw	-1
  5057  003A  1D03               	skipz
  5058  003B  2836               	goto	u3095
  5059  003C                     l2404:
  5060  003C  3001               	movlw	1
  5061  003D  00FB               	movwf	??___awdiv
  5062  003E  087B               	movf	??___awdiv,w
  5063  003F  07A0               	addwf	___awdiv@counter,f
  5064  0040                     l2406:
  5065  0040  1FF8               	btfss	___awdiv@divisor+1,7
  5066  0041  2843               	goto	u3101
  5067  0042  2844               	goto	u3100
  5068  0043                     u3101:
  5069  0043  2835               	goto	l2402
  5070  0044                     u3100:
  5071  0044                     l2408:
  5072  0044  3001               	movlw	1
  5073  0045                     u3115:
  5074  0045  1003               	clrc
  5075  0046  0DA2               	rlf	___awdiv@quotient,f
  5076  0047  0DA3               	rlf	___awdiv@quotient+1,f
  5077  0048  3EFF               	addlw	-1
  5078  0049  1D03               	skipz
  5079  004A  2845               	goto	u3115
  5080  004B  0878               	movf	___awdiv@divisor+1,w
  5081  004C  027A               	subwf	___awdiv@dividend+1,w
  5082  004D  1D03               	skipz
  5083  004E  2851               	goto	u3125
  5084  004F  0877               	movf	___awdiv@divisor,w
  5085  0050  0279               	subwf	___awdiv@dividend,w
  5086  0051                     u3125:
  5087  0051  1C03               	skipc
  5088  0052  2854               	goto	u3121
  5089  0053  2855               	goto	u3120
  5090  0054                     u3121:
  5091  0054  285C               	goto	l2414
  5092  0055                     u3120:
  5093  0055                     l2410:
  5094  0055  0877               	movf	___awdiv@divisor,w
  5095  0056  02F9               	subwf	___awdiv@dividend,f
  5096  0057  0878               	movf	___awdiv@divisor+1,w
  5097  0058  1C03               	skipc
  5098  0059  03FA               	decf	___awdiv@dividend+1,f
  5099  005A  02FA               	subwf	___awdiv@dividend+1,f
  5100  005B                     l2412:
  5101  005B  1422               	bsf	___awdiv@quotient,0
  5102  005C                     l2414:
  5103  005C  3001               	movlw	1
  5104  005D                     u3135:
  5105  005D  1003               	clrc
  5106  005E  0CF8               	rrf	___awdiv@divisor+1,f
  5107  005F  0CF7               	rrf	___awdiv@divisor,f
  5108  0060  3EFF               	addlw	-1
  5109  0061  1D03               	skipz
  5110  0062  285D               	goto	u3135
  5111  0063                     l2416:
  5112  0063  3001               	movlw	1
  5113  0064  02A0               	subwf	___awdiv@counter,f
  5114  0065  1D03               	btfss	3,2
  5115  0066  2868               	goto	u3141
  5116  0067  2869               	goto	u3140
  5117  0068                     u3141:
  5118  0068  2844               	goto	l2408
  5119  0069                     u3140:
  5120  0069                     l2418:
  5121  0069  0821               	movf	___awdiv@sign,w
  5122  006A  1903               	btfsc	3,2
  5123  006B  286D               	goto	u3151
  5124  006C  286E               	goto	u3150
  5125  006D                     u3151:
  5126  006D  2873               	goto	l2422
  5127  006E                     u3150:
  5128  006E                     l2420:
  5129  006E  09A2               	comf	___awdiv@quotient,f
  5130  006F  09A3               	comf	___awdiv@quotient+1,f
  5131  0070  0AA2               	incf	___awdiv@quotient,f
  5132  0071  1903               	skipnz
  5133  0072  0AA3               	incf	___awdiv@quotient+1,f
  5134  0073                     l2422:
  5135  0073  0823               	movf	___awdiv@quotient+1,w
  5136  0074  00F8               	movwf	?___awdiv+1
  5137  0075  0822               	movf	___awdiv@quotient,w
  5138  0076  00F7               	movwf	?___awdiv
  5139  0077                     l560:
  5140  0077  0008               	return
  5141  0078                     __end_of___awdiv:
  5142                           
  5143                           	psect	text5
  5144  19B9                     __ptext5:	
  5145 ;; *************** function _isdigit *****************
  5146 ;; Defined at:
  5147 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;  c               1    wreg     unsigned char 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  c               1    1[COMMON] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;		None               void
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5161 ;;      Params:         0       0       0       0       0
  5162 ;;      Locals:         2       0       0       0       0
  5163 ;;      Temps:          0       0       0       0       0
  5164 ;;      Totals:         2       0       0       0       0
  5165 ;;Total ram usage:        2 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_sprintf
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           
  5175                           ;psect for function _isdigit
  5176  19B9                     _isdigit:
  5177                           
  5178                           ;incstack = 0
  5179                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5180                           ;isdigit@c stored from wreg
  5181  19B9  00F1               	movwf	isdigit@c
  5182  19BA                     l2942:
  5183  19BA  01F0               	clrf	_isdigit$826
  5184  19BB                     l2944:
  5185  19BB  303A               	movlw	58
  5186  19BC  0271               	subwf	isdigit@c,w
  5187  19BD  1803               	skipnc
  5188  19BE  29C0               	goto	u4491
  5189  19BF  29C1               	goto	u4490
  5190  19C0                     u4491:
  5191  19C0  29C9               	goto	l2950
  5192  19C1                     u4490:
  5193  19C1                     l2946:
  5194  19C1  3030               	movlw	48
  5195  19C2  0271               	subwf	isdigit@c,w
  5196  19C3  1C03               	skipc
  5197  19C4  29C6               	goto	u4501
  5198  19C5  29C7               	goto	u4500
  5199  19C6                     u4501:
  5200  19C6  29C9               	goto	l2950
  5201  19C7                     u4500:
  5202  19C7                     l2948:
  5203  19C7  01F0               	clrf	_isdigit$826
  5204  19C8  0AF0               	incf	_isdigit$826,f
  5205  19C9                     l2950:
  5206  19C9  0C70               	rrf	_isdigit$826,w
  5207  19CA                     l894:
  5208  19CA  0008               	return
  5209  19CB                     __end_of_isdigit:
  5210                           
  5211                           	psect	text6
  5212  136D                     __ptext6:	
  5213 ;; *************** function _fround *****************
  5214 ;; Defined at:
  5215 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  prec            1    wreg     unsigned char 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  prec            1   49[BANK0 ] unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  4   30[BANK0 ] unsigned char 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5229 ;;      Params:         0       4       0       0       0
  5230 ;;      Locals:         0       9       0       0       0
  5231 ;;      Temps:          0       7       0       0       0
  5232 ;;      Totals:         0      20       0       0       0
  5233 ;;Total ram usage:       20 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    2
  5236 ;; This function calls:
  5237 ;;		___flmul
  5238 ;;		___lwdiv
  5239 ;;		___lwmod
  5240 ;; This function is called by:
  5241 ;;		_sprintf
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           
  5246                           ;psect for function _fround
  5247  136D                     _fround:
  5248                           
  5249                           ;incstack = 0
  5250                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5251                           ;fround@prec stored from wreg
  5252  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5253  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5254  136F  00D1               	movwf	fround@prec
  5255  1370                     l2884:
  5256                           
  5257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5258  1370  306E               	movlw	110
  5259  1371  0251               	subwf	fround@prec,w
  5260  1372  1C03               	skipc
  5261  1373  2B75               	goto	u4241
  5262  1374  2B76               	goto	u4240
  5263  1375                     u4241:
  5264  1375  2C83               	goto	l2892
  5265  1376                     u4240:
  5266  1376                     l2886:
  5267                           
  5268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5269  1376  303F               	movlw	63
  5270  1377  00A7               	movwf	___flmul@b+3
  5271  1378  3000               	movlw	0
  5272  1379  00A6               	movwf	___flmul@b+2
  5273  137A  3000               	movlw	0
  5274  137B  00A5               	movwf	___flmul@b+1
  5275  137C  3000               	movlw	0
  5276  137D  00A4               	movwf	___flmul@b
  5277  137E  3064               	movlw	100
  5278  137F  00F6               	movwf	___lwdiv@divisor
  5279  1380  3000               	movlw	0
  5280  1381  00F7               	movwf	___lwdiv@divisor+1
  5281  1382  0851               	movf	fround@prec,w
  5282  1383  00C2               	movwf	??_fround
  5283  1384  01C3               	clrf	??_fround+1
  5284  1385  0842               	movf	??_fround,w
  5285  1386  00F8               	movwf	___lwdiv@dividend
  5286  1387  0843               	movf	??_fround+1,w
  5287  1388  00F9               	movwf	___lwdiv@dividend+1
  5288  1389  160A  158A  2439  160A  118A  	fcall	___lwdiv
  5289  138E  0876               	movf	?___lwdiv,w
  5290  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5291  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5292  1391  00C4               	movwf	??_fround+2
  5293  1392  3001               	movlw	1
  5294  1393                     u4255:
  5295  1393  1003               	clrc
  5296  1394  0DC4               	rlf	??_fround+2,f
  5297  1395  3EFF               	addlw	-1
  5298  1396  1D03               	skipz
  5299  1397  2B93               	goto	u4255
  5300  1398  1003               	clrc
  5301  1399  0D44               	rlf	??_fround+2,w
  5302  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5303  139B  0084               	movwf	4
  5304  139C  120A  158A  200A  160A  118A  	fcall	stringdir
  5305  13A1  00C5               	movwf	??_fround+3
  5306  13A2  120A  158A  200A  160A  118A  	fcall	stringdir
  5307  13A7  00C6               	movwf	??_fround+4
  5308  13A8  120A  158A  200A  160A  118A  	fcall	stringdir
  5309  13AD  00C7               	movwf	??_fround+5
  5310  13AE  120A  158A  200A  160A  118A  	fcall	stringdir
  5311  13B3  00C8               	movwf	??_fround+6
  5312  13B4  0848               	movf	??_fround+6,w
  5313  13B5  00AB               	movwf	___flmul@a+3
  5314  13B6  0847               	movf	??_fround+5,w
  5315  13B7  00AA               	movwf	___flmul@a+2
  5316  13B8  0846               	movf	??_fround+4,w
  5317  13B9  00A9               	movwf	___flmul@a+1
  5318  13BA  0845               	movf	??_fround+3,w
  5319  13BB  00A8               	movwf	___flmul@a
  5320  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5321  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5322  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5323  13C3  0827               	movf	?___flmul+3,w
  5324  13C4  00D0               	movwf	_fround$1012+3
  5325  13C5  0826               	movf	?___flmul+2,w
  5326  13C6  00CF               	movwf	_fround$1012+2
  5327  13C7  0825               	movf	?___flmul+1,w
  5328  13C8  00CE               	movwf	_fround$1012+1
  5329  13C9  0824               	movf	?___flmul,w
  5330  13CA  00CD               	movwf	_fround$1012
  5331                           
  5332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5333  13CB  300A               	movlw	10
  5334  13CC  00F6               	movwf	___lwdiv@divisor
  5335  13CD  3000               	movlw	0
  5336  13CE  00F7               	movwf	___lwdiv@divisor+1
  5337  13CF  0851               	movf	fround@prec,w
  5338  13D0  00C2               	movwf	??_fround
  5339  13D1  01C3               	clrf	??_fround+1
  5340  13D2  0842               	movf	??_fround,w
  5341  13D3  00F2               	movwf	___lwmod@dividend
  5342  13D4  0843               	movf	??_fround+1,w
  5343  13D5  00F3               	movwf	___lwmod@dividend+1
  5344  13D6  3064               	movlw	100
  5345  13D7  00F0               	movwf	___lwmod@divisor
  5346  13D8  3000               	movlw	0
  5347  13D9  00F1               	movwf	___lwmod@divisor+1
  5348  13DA  160A  158A  233F  160A  118A  	fcall	___lwmod
  5349  13DF  0871               	movf	?___lwmod+1,w
  5350  13E0  00F9               	movwf	___lwdiv@dividend+1
  5351  13E1  0870               	movf	?___lwmod,w
  5352  13E2  00F8               	movwf	___lwdiv@dividend
  5353  13E3  160A  158A  2439  160A  118A  	fcall	___lwdiv
  5354  13E8  0876               	movf	?___lwdiv,w
  5355  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5356  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5357  13EB  00C4               	movwf	??_fround+2
  5358  13EC  3001               	movlw	1
  5359  13ED                     u4265:
  5360  13ED  1003               	clrc
  5361  13EE  0DC4               	rlf	??_fround+2,f
  5362  13EF  3EFF               	addlw	-1
  5363  13F0  1D03               	skipz
  5364  13F1  2BED               	goto	u4265
  5365  13F2  1003               	clrc
  5366  13F3  0D44               	rlf	??_fround+2,w
  5367  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5368  13F5  0084               	movwf	4
  5369  13F6  120A  158A  200A  160A  118A  	fcall	stringdir
  5370  13FB  00C5               	movwf	??_fround+3
  5371  13FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5372  1401  00C6               	movwf	??_fround+4
  5373  1402  120A  158A  200A  160A  118A  	fcall	stringdir
  5374  1407  00C7               	movwf	??_fround+5
  5375  1408  120A  158A  200A  160A  118A  	fcall	stringdir
  5376  140D  00C8               	movwf	??_fround+6
  5377  140E  0848               	movf	??_fround+6,w
  5378  140F  00A7               	movwf	___flmul@b+3
  5379  1410  0847               	movf	??_fround+5,w
  5380  1411  00A6               	movwf	___flmul@b+2
  5381  1412  0846               	movf	??_fround+4,w
  5382  1413  00A5               	movwf	___flmul@b+1
  5383  1414  0845               	movf	??_fround+3,w
  5384  1415  00A4               	movwf	___flmul@b
  5385  1416  0850               	movf	_fround$1012+3,w
  5386  1417  00AB               	movwf	___flmul@a+3
  5387  1418  084F               	movf	_fround$1012+2,w
  5388  1419  00AA               	movwf	___flmul@a+2
  5389  141A  084E               	movf	_fround$1012+1,w
  5390  141B  00A9               	movwf	___flmul@a+1
  5391  141C  084D               	movf	_fround$1012,w
  5392  141D  00A8               	movwf	___flmul@a
  5393  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5394  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5395  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5396  1425  0827               	movf	?___flmul+3,w
  5397  1426  00CC               	movwf	_fround$1013+3
  5398  1427  0826               	movf	?___flmul+2,w
  5399  1428  00CB               	movwf	_fround$1013+2
  5400  1429  0825               	movf	?___flmul+1,w
  5401  142A  00CA               	movwf	_fround$1013+1
  5402  142B  0824               	movf	?___flmul,w
  5403  142C  00C9               	movwf	_fround$1013
  5404                           
  5405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5406  142D  300A               	movlw	10
  5407  142E  00F0               	movwf	___lwmod@divisor
  5408  142F  3000               	movlw	0
  5409  1430  00F1               	movwf	___lwmod@divisor+1
  5410  1431  0851               	movf	fround@prec,w
  5411  1432  00C2               	movwf	??_fround
  5412  1433  01C3               	clrf	??_fround+1
  5413  1434  0842               	movf	??_fround,w
  5414  1435  00F2               	movwf	___lwmod@dividend
  5415  1436  0843               	movf	??_fround+1,w
  5416  1437  00F3               	movwf	___lwmod@dividend+1
  5417  1438  160A  158A  233F  160A  118A  	fcall	___lwmod
  5418  143D  0870               	movf	?___lwmod,w
  5419  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5420  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5421  1440  00C4               	movwf	??_fround+2
  5422  1441  3001               	movlw	1
  5423  1442                     u4275:
  5424  1442  1003               	clrc
  5425  1443  0DC4               	rlf	??_fround+2,f
  5426  1444  3EFF               	addlw	-1
  5427  1445  1D03               	skipz
  5428  1446  2C42               	goto	u4275
  5429  1447  1003               	clrc
  5430  1448  0D44               	rlf	??_fround+2,w
  5431  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5432  144A  0084               	movwf	4
  5433  144B  120A  158A  200A  160A  118A  	fcall	stringdir
  5434  1450  00C5               	movwf	??_fround+3
  5435  1451  120A  158A  200A  160A  118A  	fcall	stringdir
  5436  1456  00C6               	movwf	??_fround+4
  5437  1457  120A  158A  200A  160A  118A  	fcall	stringdir
  5438  145C  00C7               	movwf	??_fround+5
  5439  145D  120A  158A  200A  160A  118A  	fcall	stringdir
  5440  1462  00C8               	movwf	??_fround+6
  5441  1463  0848               	movf	??_fround+6,w
  5442  1464  00A7               	movwf	___flmul@b+3
  5443  1465  0847               	movf	??_fround+5,w
  5444  1466  00A6               	movwf	___flmul@b+2
  5445  1467  0846               	movf	??_fround+4,w
  5446  1468  00A5               	movwf	___flmul@b+1
  5447  1469  0845               	movf	??_fround+3,w
  5448  146A  00A4               	movwf	___flmul@b
  5449  146B  084C               	movf	_fround$1013+3,w
  5450  146C  00AB               	movwf	___flmul@a+3
  5451  146D  084B               	movf	_fround$1013+2,w
  5452  146E  00AA               	movwf	___flmul@a+2
  5453  146F  084A               	movf	_fround$1013+1,w
  5454  1470  00A9               	movwf	___flmul@a+1
  5455  1471  0849               	movf	_fround$1013,w
  5456  1472  00A8               	movwf	___flmul@a
  5457  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5458  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5459  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5460  147A  0827               	movf	?___flmul+3,w
  5461  147B  00C1               	movwf	?_fround+3
  5462  147C  0826               	movf	?___flmul+2,w
  5463  147D  00C0               	movwf	?_fround+2
  5464  147E  0825               	movf	?___flmul+1,w
  5465  147F  00BF               	movwf	?_fround+1
  5466  1480  0824               	movf	?___flmul,w
  5467  1481  00BE               	movwf	?_fround
  5468  1482  2D77               	goto	l313
  5469  1483                     l2892:
  5470  1483  300B               	movlw	11
  5471  1484  0251               	subwf	fround@prec,w
  5472  1485  1C03               	skipc
  5473  1486  2C88               	goto	u4281
  5474  1487  2C89               	goto	u4280
  5475  1488                     u4281:
  5476  1488  2D34               	goto	l2898
  5477  1489                     u4280:
  5478  1489                     l2894:
  5479                           
  5480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5481  1489  303F               	movlw	63
  5482  148A  00A7               	movwf	___flmul@b+3
  5483  148B  3000               	movlw	0
  5484  148C  00A6               	movwf	___flmul@b+2
  5485  148D  3000               	movlw	0
  5486  148E  00A5               	movwf	___flmul@b+1
  5487  148F  3000               	movlw	0
  5488  1490  00A4               	movwf	___flmul@b
  5489  1491  300A               	movlw	10
  5490  1492  00F6               	movwf	___lwdiv@divisor
  5491  1493  3000               	movlw	0
  5492  1494  00F7               	movwf	___lwdiv@divisor+1
  5493  1495  0851               	movf	fround@prec,w
  5494  1496  00C2               	movwf	??_fround
  5495  1497  01C3               	clrf	??_fround+1
  5496  1498  0842               	movf	??_fround,w
  5497  1499  00F8               	movwf	___lwdiv@dividend
  5498  149A  0843               	movf	??_fround+1,w
  5499  149B  00F9               	movwf	___lwdiv@dividend+1
  5500  149C  160A  158A  2439  160A  118A  	fcall	___lwdiv
  5501  14A1  0876               	movf	?___lwdiv,w
  5502  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5503  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5504  14A4  00C4               	movwf	??_fround+2
  5505  14A5  3001               	movlw	1
  5506  14A6                     u4295:
  5507  14A6  1003               	clrc
  5508  14A7  0DC4               	rlf	??_fround+2,f
  5509  14A8  3EFF               	addlw	-1
  5510  14A9  1D03               	skipz
  5511  14AA  2CA6               	goto	u4295
  5512  14AB  1003               	clrc
  5513  14AC  0D44               	rlf	??_fround+2,w
  5514  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5515  14AE  0084               	movwf	4
  5516  14AF  120A  158A  200A  160A  118A  	fcall	stringdir
  5517  14B4  00C5               	movwf	??_fround+3
  5518  14B5  120A  158A  200A  160A  118A  	fcall	stringdir
  5519  14BA  00C6               	movwf	??_fround+4
  5520  14BB  120A  158A  200A  160A  118A  	fcall	stringdir
  5521  14C0  00C7               	movwf	??_fround+5
  5522  14C1  120A  158A  200A  160A  118A  	fcall	stringdir
  5523  14C6  00C8               	movwf	??_fround+6
  5524  14C7  0848               	movf	??_fround+6,w
  5525  14C8  00AB               	movwf	___flmul@a+3
  5526  14C9  0847               	movf	??_fround+5,w
  5527  14CA  00AA               	movwf	___flmul@a+2
  5528  14CB  0846               	movf	??_fround+4,w
  5529  14CC  00A9               	movwf	___flmul@a+1
  5530  14CD  0845               	movf	??_fround+3,w
  5531  14CE  00A8               	movwf	___flmul@a
  5532  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5533  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5534  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5535  14D6  0827               	movf	?___flmul+3,w
  5536  14D7  00D0               	movwf	_fround$1012+3
  5537  14D8  0826               	movf	?___flmul+2,w
  5538  14D9  00CF               	movwf	_fround$1012+2
  5539  14DA  0825               	movf	?___flmul+1,w
  5540  14DB  00CE               	movwf	_fround$1012+1
  5541  14DC  0824               	movf	?___flmul,w
  5542  14DD  00CD               	movwf	_fround$1012
  5543                           
  5544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5545  14DE  300A               	movlw	10
  5546  14DF  00F0               	movwf	___lwmod@divisor
  5547  14E0  3000               	movlw	0
  5548  14E1  00F1               	movwf	___lwmod@divisor+1
  5549  14E2  0851               	movf	fround@prec,w
  5550  14E3  00C2               	movwf	??_fround
  5551  14E4  01C3               	clrf	??_fround+1
  5552  14E5  0842               	movf	??_fround,w
  5553  14E6  00F2               	movwf	___lwmod@dividend
  5554  14E7  0843               	movf	??_fround+1,w
  5555  14E8  00F3               	movwf	___lwmod@dividend+1
  5556  14E9  160A  158A  233F  160A  118A  	fcall	___lwmod
  5557  14EE  0870               	movf	?___lwmod,w
  5558  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5559  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5560  14F1  00C4               	movwf	??_fround+2
  5561  14F2  3001               	movlw	1
  5562  14F3                     u4305:
  5563  14F3  1003               	clrc
  5564  14F4  0DC4               	rlf	??_fround+2,f
  5565  14F5  3EFF               	addlw	-1
  5566  14F6  1D03               	skipz
  5567  14F7  2CF3               	goto	u4305
  5568  14F8  1003               	clrc
  5569  14F9  0D44               	rlf	??_fround+2,w
  5570  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5571  14FB  0084               	movwf	4
  5572  14FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5573  1501  00C5               	movwf	??_fround+3
  5574  1502  120A  158A  200A  160A  118A  	fcall	stringdir
  5575  1507  00C6               	movwf	??_fround+4
  5576  1508  120A  158A  200A  160A  118A  	fcall	stringdir
  5577  150D  00C7               	movwf	??_fround+5
  5578  150E  120A  158A  200A  160A  118A  	fcall	stringdir
  5579  1513  00C8               	movwf	??_fround+6
  5580  1514  0848               	movf	??_fround+6,w
  5581  1515  00A7               	movwf	___flmul@b+3
  5582  1516  0847               	movf	??_fround+5,w
  5583  1517  00A6               	movwf	___flmul@b+2
  5584  1518  0846               	movf	??_fround+4,w
  5585  1519  00A5               	movwf	___flmul@b+1
  5586  151A  0845               	movf	??_fround+3,w
  5587  151B  00A4               	movwf	___flmul@b
  5588  151C  0850               	movf	_fround$1012+3,w
  5589  151D  00AB               	movwf	___flmul@a+3
  5590  151E  084F               	movf	_fround$1012+2,w
  5591  151F  00AA               	movwf	___flmul@a+2
  5592  1520  084E               	movf	_fround$1012+1,w
  5593  1521  00A9               	movwf	___flmul@a+1
  5594  1522  084D               	movf	_fround$1012,w
  5595  1523  00A8               	movwf	___flmul@a
  5596  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5597  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5598  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5599  152B  0827               	movf	?___flmul+3,w
  5600  152C  00C1               	movwf	?_fround+3
  5601  152D  0826               	movf	?___flmul+2,w
  5602  152E  00C0               	movwf	?_fround+2
  5603  152F  0825               	movf	?___flmul+1,w
  5604  1530  00BF               	movwf	?_fround+1
  5605  1531  0824               	movf	?___flmul,w
  5606  1532  00BE               	movwf	?_fround
  5607  1533  2D77               	goto	l313
  5608  1534                     l2898:
  5609                           
  5610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5611  1534  303F               	movlw	63
  5612  1535  00A7               	movwf	___flmul@b+3
  5613  1536  3000               	movlw	0
  5614  1537  00A6               	movwf	___flmul@b+2
  5615  1538  3000               	movlw	0
  5616  1539  00A5               	movwf	___flmul@b+1
  5617  153A  3000               	movlw	0
  5618  153B  00A4               	movwf	___flmul@b
  5619  153C  0851               	movf	fround@prec,w
  5620  153D  00C2               	movwf	??_fround
  5621  153E  3001               	movlw	1
  5622  153F                     u4315:
  5623  153F  1003               	clrc
  5624  1540  0DC2               	rlf	??_fround,f
  5625  1541  3EFF               	addlw	-1
  5626  1542  1D03               	skipz
  5627  1543  2D3F               	goto	u4315
  5628  1544  1003               	clrc
  5629  1545  0D42               	rlf	??_fround,w
  5630  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5631  1547  0084               	movwf	4
  5632  1548  120A  158A  200A  160A  118A  	fcall	stringdir
  5633  154D  00C3               	movwf	??_fround+1
  5634  154E  120A  158A  200A  160A  118A  	fcall	stringdir
  5635  1553  00C4               	movwf	??_fround+2
  5636  1554  120A  158A  200A  160A  118A  	fcall	stringdir
  5637  1559  00C5               	movwf	??_fround+3
  5638  155A  120A  158A  200A  160A  118A  	fcall	stringdir
  5639  155F  00C6               	movwf	??_fround+4
  5640  1560  0846               	movf	??_fround+4,w
  5641  1561  00AB               	movwf	___flmul@a+3
  5642  1562  0845               	movf	??_fround+3,w
  5643  1563  00AA               	movwf	___flmul@a+2
  5644  1564  0844               	movf	??_fround+2,w
  5645  1565  00A9               	movwf	___flmul@a+1
  5646  1566  0843               	movf	??_fround+1,w
  5647  1567  00A8               	movwf	___flmul@a
  5648  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5649  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5650  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5651  156F  0827               	movf	?___flmul+3,w
  5652  1570  00C1               	movwf	?_fround+3
  5653  1571  0826               	movf	?___flmul+2,w
  5654  1572  00C0               	movwf	?_fround+2
  5655  1573  0825               	movf	?___flmul+1,w
  5656  1574  00BF               	movwf	?_fround+1
  5657  1575  0824               	movf	?___flmul,w
  5658  1576  00BE               	movwf	?_fround
  5659  1577                     l313:
  5660  1577  0008               	return
  5661  1578                     __end_of_fround:
  5662                           
  5663                           	psect	text7
  5664  1B3F                     __ptext7:	
  5665 ;; *************** function ___lwmod *****************
  5666 ;; Defined at:
  5667 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  divisor         2    0[COMMON] unsigned int 
  5670 ;;  dividend        2    2[COMMON] unsigned int 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  counter         1    5[COMMON] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  2    0[COMMON] unsigned int 
  5675 ;; Registers used:
  5676 ;;		wreg, status,2, status,0
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5682 ;;      Params:         4       0       0       0       0
  5683 ;;      Locals:         1       0       0       0       0
  5684 ;;      Temps:          1       0       0       0       0
  5685 ;;      Totals:         6       0       0       0       0
  5686 ;;Total ram usage:        6 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_fround
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           
  5696                           ;psect for function ___lwmod
  5697  1B3F                     ___lwmod:
  5698  1B3F                     l2490:	
  5699                           ;incstack = 0
  5700                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5701                           
  5702  1B3F  0870               	movf	___lwmod@divisor,w
  5703  1B40  0471               	iorwf	___lwmod@divisor+1,w
  5704  1B41  1903               	btfsc	3,2
  5705  1B42  2B44               	goto	u3321
  5706  1B43  2B45               	goto	u3320
  5707  1B44                     u3321:
  5708  1B44  2B74               	goto	l2508
  5709  1B45                     u3320:
  5710  1B45                     l2492:
  5711  1B45  01F5               	clrf	___lwmod@counter
  5712  1B46  0AF5               	incf	___lwmod@counter,f
  5713  1B47  2B53               	goto	l2498
  5714  1B48                     l2494:
  5715  1B48  3001               	movlw	1
  5716  1B49                     u3335:
  5717  1B49  1003               	clrc
  5718  1B4A  0DF0               	rlf	___lwmod@divisor,f
  5719  1B4B  0DF1               	rlf	___lwmod@divisor+1,f
  5720  1B4C  3EFF               	addlw	-1
  5721  1B4D  1D03               	skipz
  5722  1B4E  2B49               	goto	u3335
  5723  1B4F                     l2496:
  5724  1B4F  3001               	movlw	1
  5725  1B50  00F4               	movwf	??___lwmod
  5726  1B51  0874               	movf	??___lwmod,w
  5727  1B52  07F5               	addwf	___lwmod@counter,f
  5728  1B53                     l2498:
  5729  1B53  1FF1               	btfss	___lwmod@divisor+1,7
  5730  1B54  2B56               	goto	u3341
  5731  1B55  2B57               	goto	u3340
  5732  1B56                     u3341:
  5733  1B56  2B48               	goto	l2494
  5734  1B57                     u3340:
  5735  1B57                     l2500:
  5736  1B57  0871               	movf	___lwmod@divisor+1,w
  5737  1B58  0273               	subwf	___lwmod@dividend+1,w
  5738  1B59  1D03               	skipz
  5739  1B5A  2B5D               	goto	u3355
  5740  1B5B  0870               	movf	___lwmod@divisor,w
  5741  1B5C  0272               	subwf	___lwmod@dividend,w
  5742  1B5D                     u3355:
  5743  1B5D  1C03               	skipc
  5744  1B5E  2B60               	goto	u3351
  5745  1B5F  2B61               	goto	u3350
  5746  1B60                     u3351:
  5747  1B60  2B67               	goto	l2504
  5748  1B61                     u3350:
  5749  1B61                     l2502:
  5750  1B61  0870               	movf	___lwmod@divisor,w
  5751  1B62  02F2               	subwf	___lwmod@dividend,f
  5752  1B63  0871               	movf	___lwmod@divisor+1,w
  5753  1B64  1C03               	skipc
  5754  1B65  03F3               	decf	___lwmod@dividend+1,f
  5755  1B66  02F3               	subwf	___lwmod@dividend+1,f
  5756  1B67                     l2504:
  5757  1B67  3001               	movlw	1
  5758  1B68                     u3365:
  5759  1B68  1003               	clrc
  5760  1B69  0CF1               	rrf	___lwmod@divisor+1,f
  5761  1B6A  0CF0               	rrf	___lwmod@divisor,f
  5762  1B6B  3EFF               	addlw	-1
  5763  1B6C  1D03               	skipz
  5764  1B6D  2B68               	goto	u3365
  5765  1B6E                     l2506:
  5766  1B6E  3001               	movlw	1
  5767  1B6F  02F5               	subwf	___lwmod@counter,f
  5768  1B70  1D03               	btfss	3,2
  5769  1B71  2B73               	goto	u3371
  5770  1B72  2B74               	goto	u3370
  5771  1B73                     u3371:
  5772  1B73  2B57               	goto	l2500
  5773  1B74                     u3370:
  5774  1B74                     l2508:
  5775  1B74  0873               	movf	___lwmod@dividend+1,w
  5776  1B75  00F1               	movwf	?___lwmod+1
  5777  1B76  0872               	movf	___lwmod@dividend,w
  5778  1B77  00F0               	movwf	?___lwmod
  5779  1B78                     l723:
  5780  1B78  0008               	return
  5781  1B79                     __end_of___lwmod:
  5782                           
  5783                           	psect	text8
  5784  1C39                     __ptext8:	
  5785 ;; *************** function ___lwdiv *****************
  5786 ;; Defined at:
  5787 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  divisor         2    6[COMMON] unsigned int 
  5790 ;;  dividend        2    8[COMMON] unsigned int 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  quotient        2   11[COMMON] unsigned int 
  5793 ;;  counter         1   13[COMMON] unsigned char 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  2    6[COMMON] unsigned int 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5803 ;;      Params:         4       0       0       0       0
  5804 ;;      Locals:         3       0       0       0       0
  5805 ;;      Temps:          1       0       0       0       0
  5806 ;;      Totals:         8       0       0       0       0
  5807 ;;Total ram usage:        8 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_fround
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           
  5817                           ;psect for function ___lwdiv
  5818  1C39                     ___lwdiv:
  5819  1C39                     l2464:	
  5820                           ;incstack = 0
  5821                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5822                           
  5823  1C39  01FB               	clrf	___lwdiv@quotient
  5824  1C3A  01FC               	clrf	___lwdiv@quotient+1
  5825  1C3B                     l2466:
  5826  1C3B  0876               	movf	___lwdiv@divisor,w
  5827  1C3C  0477               	iorwf	___lwdiv@divisor+1,w
  5828  1C3D  1903               	btfsc	3,2
  5829  1C3E  2C40               	goto	u3251
  5830  1C3F  2C41               	goto	u3250
  5831  1C40                     u3251:
  5832  1C40  2C78               	goto	l2486
  5833  1C41                     u3250:
  5834  1C41                     l2468:
  5835  1C41  01FD               	clrf	___lwdiv@counter
  5836  1C42  0AFD               	incf	___lwdiv@counter,f
  5837  1C43  2C4F               	goto	l2474
  5838  1C44                     l2470:
  5839  1C44  3001               	movlw	1
  5840  1C45                     u3265:
  5841  1C45  1003               	clrc
  5842  1C46  0DF6               	rlf	___lwdiv@divisor,f
  5843  1C47  0DF7               	rlf	___lwdiv@divisor+1,f
  5844  1C48  3EFF               	addlw	-1
  5845  1C49  1D03               	skipz
  5846  1C4A  2C45               	goto	u3265
  5847  1C4B                     l2472:
  5848  1C4B  3001               	movlw	1
  5849  1C4C  00FA               	movwf	??___lwdiv
  5850  1C4D  087A               	movf	??___lwdiv,w
  5851  1C4E  07FD               	addwf	___lwdiv@counter,f
  5852  1C4F                     l2474:
  5853  1C4F  1FF7               	btfss	___lwdiv@divisor+1,7
  5854  1C50  2C52               	goto	u3271
  5855  1C51  2C53               	goto	u3270
  5856  1C52                     u3271:
  5857  1C52  2C44               	goto	l2470
  5858  1C53                     u3270:
  5859  1C53                     l2476:
  5860  1C53  3001               	movlw	1
  5861  1C54                     u3285:
  5862  1C54  1003               	clrc
  5863  1C55  0DFB               	rlf	___lwdiv@quotient,f
  5864  1C56  0DFC               	rlf	___lwdiv@quotient+1,f
  5865  1C57  3EFF               	addlw	-1
  5866  1C58  1D03               	skipz
  5867  1C59  2C54               	goto	u3285
  5868  1C5A  0877               	movf	___lwdiv@divisor+1,w
  5869  1C5B  0279               	subwf	___lwdiv@dividend+1,w
  5870  1C5C  1D03               	skipz
  5871  1C5D  2C60               	goto	u3295
  5872  1C5E  0876               	movf	___lwdiv@divisor,w
  5873  1C5F  0278               	subwf	___lwdiv@dividend,w
  5874  1C60                     u3295:
  5875  1C60  1C03               	skipc
  5876  1C61  2C63               	goto	u3291
  5877  1C62  2C64               	goto	u3290
  5878  1C63                     u3291:
  5879  1C63  2C6B               	goto	l2482
  5880  1C64                     u3290:
  5881  1C64                     l2478:
  5882  1C64  0876               	movf	___lwdiv@divisor,w
  5883  1C65  02F8               	subwf	___lwdiv@dividend,f
  5884  1C66  0877               	movf	___lwdiv@divisor+1,w
  5885  1C67  1C03               	skipc
  5886  1C68  03F9               	decf	___lwdiv@dividend+1,f
  5887  1C69  02F9               	subwf	___lwdiv@dividend+1,f
  5888  1C6A                     l2480:
  5889  1C6A  147B               	bsf	___lwdiv@quotient,0
  5890  1C6B                     l2482:
  5891  1C6B  3001               	movlw	1
  5892  1C6C                     u3305:
  5893  1C6C  1003               	clrc
  5894  1C6D  0CF7               	rrf	___lwdiv@divisor+1,f
  5895  1C6E  0CF6               	rrf	___lwdiv@divisor,f
  5896  1C6F  3EFF               	addlw	-1
  5897  1C70  1D03               	skipz
  5898  1C71  2C6C               	goto	u3305
  5899  1C72                     l2484:
  5900  1C72  3001               	movlw	1
  5901  1C73  02FD               	subwf	___lwdiv@counter,f
  5902  1C74  1D03               	btfss	3,2
  5903  1C75  2C77               	goto	u3311
  5904  1C76  2C78               	goto	u3310
  5905  1C77                     u3311:
  5906  1C77  2C53               	goto	l2476
  5907  1C78                     u3310:
  5908  1C78                     l2486:
  5909  1C78  087C               	movf	___lwdiv@quotient+1,w
  5910  1C79  00F7               	movwf	?___lwdiv+1
  5911  1C7A  087B               	movf	___lwdiv@quotient,w
  5912  1C7B  00F6               	movwf	?___lwdiv
  5913  1C7C                     l713:
  5914  1C7C  0008               	return
  5915  1C7D                     __end_of___lwdiv:
  5916                           
  5917                           	psect	text9
  5918  100A                     __ptext9:	
  5919 ;; *************** function __tdiv_to_l_ *****************
  5920 ;; Defined at:
  5921 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  f1              4    0[COMMON] float 
  5924 ;;  f2              4    4[COMMON] float 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  quot            4    0[BANK0 ] unsigned long 
  5927 ;;  exp1            1    5[BANK0 ] unsigned char 
  5928 ;;  cntr            1    4[BANK0 ] unsigned char 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  4    0[COMMON] unsigned long 
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5938 ;;      Params:         8       0       0       0       0
  5939 ;;      Locals:         0       6       0       0       0
  5940 ;;      Temps:          4       0       0       0       0
  5941 ;;      Totals:        12       6       0       0       0
  5942 ;;Total ram usage:       18 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_sprintf
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           
  5952                           ;psect for function __tdiv_to_l_
  5953  100A                     __tdiv_to_l_:
  5954  100A                     l2954:	
  5955                           ;incstack = 0
  5956                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5957                           
  5958  100A  0870               	movf	__tdiv_to_l_@f1,w
  5959  100B  00F8               	movwf	??__tdiv_to_l_
  5960  100C  0871               	movf	__tdiv_to_l_@f1+1,w
  5961  100D  00F9               	movwf	??__tdiv_to_l_+1
  5962  100E  0872               	movf	__tdiv_to_l_@f1+2,w
  5963  100F  00FA               	movwf	??__tdiv_to_l_+2
  5964  1010  1003               	clrc
  5965  1011  0D79               	rlf	??__tdiv_to_l_+1,w
  5966  1012  0D7A               	rlf	??__tdiv_to_l_+2,w
  5967  1013  00FB               	movwf	??__tdiv_to_l_+3
  5968  1014  087B               	movf	??__tdiv_to_l_+3,w
  5969  1015  1283               	bcf	3,5	;RP0=0, select bank0
  5970  1016  1303               	bcf	3,6	;RP1=0, select bank0
  5971  1017  00A5               	movwf	__tdiv_to_l_@exp1
  5972  1018  0825               	movf	__tdiv_to_l_@exp1,w
  5973  1019  1D03               	btfss	3,2
  5974  101A  281C               	goto	u4511
  5975  101B  281D               	goto	u4510
  5976  101C                     u4511:
  5977  101C  2826               	goto	l2960
  5978  101D                     u4510:
  5979  101D                     l2956:
  5980  101D  3000               	movlw	0
  5981  101E  00F3               	movwf	?__tdiv_to_l_+3
  5982  101F  3000               	movlw	0
  5983  1020  00F2               	movwf	?__tdiv_to_l_+2
  5984  1021  3000               	movlw	0
  5985  1022  00F1               	movwf	?__tdiv_to_l_+1
  5986  1023  3000               	movlw	0
  5987  1024  00F0               	movwf	?__tdiv_to_l_
  5988  1025  28C6               	goto	l624
  5989  1026                     l2960:
  5990  1026  0874               	movf	__tdiv_to_l_@f2,w
  5991  1027  00F8               	movwf	??__tdiv_to_l_
  5992  1028  0875               	movf	__tdiv_to_l_@f2+1,w
  5993  1029  00F9               	movwf	??__tdiv_to_l_+1
  5994  102A  0876               	movf	__tdiv_to_l_@f2+2,w
  5995  102B  00FA               	movwf	??__tdiv_to_l_+2
  5996  102C  1003               	clrc
  5997  102D  0D79               	rlf	??__tdiv_to_l_+1,w
  5998  102E  0D7A               	rlf	??__tdiv_to_l_+2,w
  5999  102F  00FB               	movwf	??__tdiv_to_l_+3
  6000  1030  087B               	movf	??__tdiv_to_l_+3,w
  6001  1031  00A4               	movwf	__tdiv_to_l_@cntr
  6002  1032  0824               	movf	__tdiv_to_l_@cntr,w
  6003  1033  1D03               	btfss	3,2
  6004  1034  2836               	goto	u4521
  6005  1035  2837               	goto	u4520
  6006  1036                     u4521:
  6007  1036  2838               	goto	l625
  6008  1037                     u4520:
  6009  1037  281D               	goto	l2956
  6010  1038                     l625:
  6011  1038  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6012  1039                     l2966:
  6013  1039  30FF               	movlw	255
  6014  103A  05F0               	andwf	__tdiv_to_l_@f1,f
  6015  103B  30FF               	movlw	255
  6016  103C  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6017  103D  3000               	movlw	0
  6018  103E  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6019  103F                     l2968:
  6020  103F  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6021  1040  30FF               	movlw	255
  6022  1041  05F4               	andwf	__tdiv_to_l_@f2,f
  6023  1042  30FF               	movlw	255
  6024  1043  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6025  1044  3000               	movlw	0
  6026  1045  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6027  1046  3000               	movlw	0
  6028  1047  00A3               	movwf	__tdiv_to_l_@quot+3
  6029  1048  3000               	movlw	0
  6030  1049  00A2               	movwf	__tdiv_to_l_@quot+2
  6031  104A  3000               	movlw	0
  6032  104B  00A1               	movwf	__tdiv_to_l_@quot+1
  6033  104C  3000               	movlw	0
  6034  104D  00A0               	movwf	__tdiv_to_l_@quot
  6035  104E                     l2970:
  6036  104E  307F               	movlw	127
  6037  104F  02A5               	subwf	__tdiv_to_l_@exp1,f
  6038  1050                     l2972:
  6039  1050  3098               	movlw	152
  6040  1051  0724               	addwf	__tdiv_to_l_@cntr,w
  6041  1052  00F8               	movwf	??__tdiv_to_l_
  6042  1053  0878               	movf	??__tdiv_to_l_,w
  6043  1054  02A5               	subwf	__tdiv_to_l_@exp1,f
  6044  1055  3018               	movlw	24
  6045  1056  00F8               	movwf	??__tdiv_to_l_
  6046  1057  0878               	movf	??__tdiv_to_l_,w
  6047  1058  00A4               	movwf	__tdiv_to_l_@cntr
  6048  1059                     l2974:
  6049  1059  3001               	movlw	1
  6050  105A  00F8               	movwf	??__tdiv_to_l_
  6051  105B                     u4535:
  6052  105B  1003               	clrc
  6053  105C  0DA0               	rlf	__tdiv_to_l_@quot,f
  6054  105D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6055  105E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6056  105F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6057  1060  0BF8               	decfsz	??__tdiv_to_l_,f
  6058  1061  285B               	goto	u4535
  6059  1062                     l2976:
  6060  1062  0876               	movf	__tdiv_to_l_@f2+2,w
  6061  1063  0272               	subwf	__tdiv_to_l_@f1+2,w
  6062  1064  1D03               	skipz
  6063  1065  286C               	goto	u4545
  6064  1066  0875               	movf	__tdiv_to_l_@f2+1,w
  6065  1067  0271               	subwf	__tdiv_to_l_@f1+1,w
  6066  1068  1D03               	skipz
  6067  1069  286C               	goto	u4545
  6068  106A  0874               	movf	__tdiv_to_l_@f2,w
  6069  106B  0270               	subwf	__tdiv_to_l_@f1,w
  6070  106C                     u4545:
  6071  106C  1C03               	skipc
  6072  106D  286F               	goto	u4541
  6073  106E  2870               	goto	u4540
  6074  106F                     u4541:
  6075  106F  287B               	goto	l2982
  6076  1070                     u4540:
  6077  1070                     l2978:
  6078  1070  0874               	movf	__tdiv_to_l_@f2,w
  6079  1071  02F0               	subwf	__tdiv_to_l_@f1,f
  6080  1072  0875               	movf	__tdiv_to_l_@f2+1,w
  6081  1073  1C03               	skipc
  6082  1074  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6083  1075  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6084  1076  0876               	movf	__tdiv_to_l_@f2+2,w
  6085  1077  1C03               	skipc
  6086  1078  0A76               	incf	__tdiv_to_l_@f2+2,w
  6087  1079  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6088  107A                     l2980:
  6089  107A  1420               	bsf	__tdiv_to_l_@quot,0
  6090  107B                     l2982:
  6091  107B  3001               	movlw	1
  6092  107C                     u4555:
  6093  107C  1003               	clrc
  6094  107D  0DF0               	rlf	__tdiv_to_l_@f1,f
  6095  107E  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6096  107F  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6097  1080  3EFF               	addlw	-1
  6098  1081  1D03               	skipz
  6099  1082  287C               	goto	u4555
  6100  1083                     l2984:
  6101  1083  3001               	movlw	1
  6102  1084  02A4               	subwf	__tdiv_to_l_@cntr,f
  6103  1085  1D03               	btfss	3,2
  6104  1086  2888               	goto	u4561
  6105  1087  2889               	goto	u4560
  6106  1088                     u4561:
  6107  1088  2859               	goto	l2974
  6108  1089                     u4560:
  6109  1089                     l628:
  6110  1089  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6111  108A  288C               	goto	u4571
  6112  108B  288D               	goto	u4570
  6113  108C                     u4571:
  6114  108C  28A7               	goto	l2994
  6115  108D                     u4570:
  6116  108D                     l2986:
  6117  108D  0825               	movf	__tdiv_to_l_@exp1,w
  6118  108E  3A80               	xorlw	128
  6119  108F  3E97               	addlw	151
  6120  1090  1803               	skipnc
  6121  1091  2893               	goto	u4581
  6122  1092  2894               	goto	u4580
  6123  1093                     u4581:
  6124  1093  2895               	goto	l2992
  6125  1094                     u4580:
  6126  1094  281D               	goto	l2956
  6127  1095                     l2992:
  6128  1095  3001               	movlw	1
  6129  1096                     u4595:
  6130  1096  1003               	clrc
  6131  1097  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6132  1098  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6133  1099  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6134  109A  0CA0               	rrf	__tdiv_to_l_@quot,f
  6135  109B  3EFF               	addlw	-1
  6136  109C  1D03               	skipz
  6137  109D  2896               	goto	u4595
  6138  109E  3001               	movlw	1
  6139  109F  00F8               	movwf	??__tdiv_to_l_
  6140  10A0  0878               	movf	??__tdiv_to_l_,w
  6141  10A1  07A5               	addwf	__tdiv_to_l_@exp1,f
  6142  10A2  1D03               	btfss	3,2
  6143  10A3  28A5               	goto	u4601
  6144  10A4  28A6               	goto	u4600
  6145  10A5                     u4601:
  6146  10A5  2895               	goto	l2992
  6147  10A6                     u4600:
  6148  10A6  28BE               	goto	l3002
  6149  10A7                     l2994:
  6150  10A7  3018               	movlw	24
  6151  10A8  0225               	subwf	__tdiv_to_l_@exp1,w
  6152  10A9  1C03               	skipc
  6153  10AA  28AC               	goto	u4611
  6154  10AB  28AD               	goto	u4610
  6155  10AC                     u4611:
  6156  10AC  28B9               	goto	l635
  6157  10AD                     u4610:
  6158  10AD  281D               	goto	l2956
  6159  10AE                     l3000:
  6160  10AE  3001               	movlw	1
  6161  10AF  00F8               	movwf	??__tdiv_to_l_
  6162  10B0                     u4625:
  6163  10B0  1003               	clrc
  6164  10B1  0DA0               	rlf	__tdiv_to_l_@quot,f
  6165  10B2  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6166  10B3  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6167  10B4  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6168  10B5  0BF8               	decfsz	??__tdiv_to_l_,f
  6169  10B6  28B0               	goto	u4625
  6170  10B7  3001               	movlw	1
  6171  10B8  02A5               	subwf	__tdiv_to_l_@exp1,f
  6172  10B9                     l635:
  6173  10B9  0825               	movf	__tdiv_to_l_@exp1,w
  6174  10BA  1D03               	btfss	3,2
  6175  10BB  28BD               	goto	u4631
  6176  10BC  28BE               	goto	u4630
  6177  10BD                     u4631:
  6178  10BD  28AE               	goto	l3000
  6179  10BE                     u4630:
  6180  10BE                     l3002:
  6181  10BE  0823               	movf	__tdiv_to_l_@quot+3,w
  6182  10BF  00F3               	movwf	?__tdiv_to_l_+3
  6183  10C0  0822               	movf	__tdiv_to_l_@quot+2,w
  6184  10C1  00F2               	movwf	?__tdiv_to_l_+2
  6185  10C2  0821               	movf	__tdiv_to_l_@quot+1,w
  6186  10C3  00F1               	movwf	?__tdiv_to_l_+1
  6187  10C4  0820               	movf	__tdiv_to_l_@quot,w
  6188  10C5  00F0               	movwf	?__tdiv_to_l_
  6189  10C6                     l624:
  6190  10C6  0008               	return
  6191  10C7                     __end_of__tdiv_to_l_:
  6192                           
  6193                           	psect	text10
  6194  10C7                     __ptext10:	
  6195 ;; *************** function __div_to_l_ *****************
  6196 ;; Defined at:
  6197 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;  f1              4    0[COMMON] unsigned long 
  6200 ;;  f2              4    4[COMMON] unsigned long 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  quot            4    0[BANK0 ] unsigned long 
  6203 ;;  exp1            1    5[BANK0 ] unsigned char 
  6204 ;;  cntr            1    4[BANK0 ] unsigned char 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  4    0[COMMON] unsigned long 
  6207 ;; Registers used:
  6208 ;;		wreg, status,2, status,0
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6214 ;;      Params:         8       0       0       0       0
  6215 ;;      Locals:         0       6       0       0       0
  6216 ;;      Temps:          1       0       0       0       0
  6217 ;;      Totals:         9       6       0       0       0
  6218 ;;Total ram usage:       15 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; This function calls:
  6221 ;;		Nothing
  6222 ;; This function is called by:
  6223 ;;		_sprintf
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           
  6228                           ;psect for function __div_to_l_
  6229  10C7                     __div_to_l_:
  6230  10C7                     l3006:	
  6231                           ;incstack = 0
  6232                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6233                           
  6234  10C7  1003               	clrc
  6235  10C8  0D72               	rlf	__div_to_l_@f1+2,w
  6236  10C9  0D73               	rlf	__div_to_l_@f1+3,w
  6237  10CA  00F8               	movwf	??__div_to_l_
  6238  10CB  0878               	movf	??__div_to_l_,w
  6239  10CC  1283               	bcf	3,5	;RP0=0, select bank0
  6240  10CD  1303               	bcf	3,6	;RP1=0, select bank0
  6241  10CE  00A5               	movwf	__div_to_l_@exp1
  6242  10CF  0825               	movf	__div_to_l_@exp1,w
  6243  10D0  1D03               	btfss	3,2
  6244  10D1  28D3               	goto	u4641
  6245  10D2  28D4               	goto	u4640
  6246  10D3                     u4641:
  6247  10D3  28DD               	goto	l3012
  6248  10D4                     u4640:
  6249  10D4                     l3008:
  6250  10D4  3000               	movlw	0
  6251  10D5  00F3               	movwf	?__div_to_l_+3
  6252  10D6  3000               	movlw	0
  6253  10D7  00F2               	movwf	?__div_to_l_+2
  6254  10D8  3000               	movlw	0
  6255  10D9  00F1               	movwf	?__div_to_l_+1
  6256  10DA  3000               	movlw	0
  6257  10DB  00F0               	movwf	?__div_to_l_
  6258  10DC  2984               	goto	l577
  6259  10DD                     l3012:
  6260  10DD  1003               	clrc
  6261  10DE  0D76               	rlf	__div_to_l_@f2+2,w
  6262  10DF  0D77               	rlf	__div_to_l_@f2+3,w
  6263  10E0  00F8               	movwf	??__div_to_l_
  6264  10E1  0878               	movf	??__div_to_l_,w
  6265  10E2  00A4               	movwf	__div_to_l_@cntr
  6266  10E3  0824               	movf	__div_to_l_@cntr,w
  6267  10E4  1D03               	btfss	3,2
  6268  10E5  28E7               	goto	u4651
  6269  10E6  28E8               	goto	u4650
  6270  10E7                     u4651:
  6271  10E7  28E9               	goto	l578
  6272  10E8                     u4650:
  6273  10E8  28D4               	goto	l3008
  6274  10E9                     l578:
  6275  10E9  17F2               	bsf	__div_to_l_@f1+2,7
  6276  10EA                     l3018:
  6277  10EA  30FF               	movlw	255
  6278  10EB  05F0               	andwf	__div_to_l_@f1,f
  6279  10EC  30FF               	movlw	255
  6280  10ED  05F1               	andwf	__div_to_l_@f1+1,f
  6281  10EE  30FF               	movlw	255
  6282  10EF  05F2               	andwf	__div_to_l_@f1+2,f
  6283  10F0  3000               	movlw	0
  6284  10F1  05F3               	andwf	__div_to_l_@f1+3,f
  6285  10F2                     l3020:
  6286  10F2  17F6               	bsf	__div_to_l_@f2+2,7
  6287  10F3  30FF               	movlw	255
  6288  10F4  05F4               	andwf	__div_to_l_@f2,f
  6289  10F5  30FF               	movlw	255
  6290  10F6  05F5               	andwf	__div_to_l_@f2+1,f
  6291  10F7  30FF               	movlw	255
  6292  10F8  05F6               	andwf	__div_to_l_@f2+2,f
  6293  10F9  3000               	movlw	0
  6294  10FA  05F7               	andwf	__div_to_l_@f2+3,f
  6295  10FB  3000               	movlw	0
  6296  10FC  00A3               	movwf	__div_to_l_@quot+3
  6297  10FD  3000               	movlw	0
  6298  10FE  00A2               	movwf	__div_to_l_@quot+2
  6299  10FF  3000               	movlw	0
  6300  1100  00A1               	movwf	__div_to_l_@quot+1
  6301  1101  3000               	movlw	0
  6302  1102  00A0               	movwf	__div_to_l_@quot
  6303  1103                     l3022:
  6304  1103  307F               	movlw	127
  6305  1104  02A5               	subwf	__div_to_l_@exp1,f
  6306  1105                     l3024:
  6307  1105  30A0               	movlw	160
  6308  1106  0724               	addwf	__div_to_l_@cntr,w
  6309  1107  00F8               	movwf	??__div_to_l_
  6310  1108  0878               	movf	??__div_to_l_,w
  6311  1109  02A5               	subwf	__div_to_l_@exp1,f
  6312  110A  3020               	movlw	32
  6313  110B  00F8               	movwf	??__div_to_l_
  6314  110C  0878               	movf	??__div_to_l_,w
  6315  110D  00A4               	movwf	__div_to_l_@cntr
  6316  110E                     l3026:
  6317  110E  3001               	movlw	1
  6318  110F  00F8               	movwf	??__div_to_l_
  6319  1110                     u4665:
  6320  1110  1003               	clrc
  6321  1111  0DA0               	rlf	__div_to_l_@quot,f
  6322  1112  0DA1               	rlf	__div_to_l_@quot+1,f
  6323  1113  0DA2               	rlf	__div_to_l_@quot+2,f
  6324  1114  0DA3               	rlf	__div_to_l_@quot+3,f
  6325  1115  0BF8               	decfsz	??__div_to_l_,f
  6326  1116  2910               	goto	u4665
  6327  1117                     l3028:
  6328  1117  0877               	movf	__div_to_l_@f2+3,w
  6329  1118  0273               	subwf	__div_to_l_@f1+3,w
  6330  1119  1D03               	skipz
  6331  111A  2925               	goto	u4675
  6332  111B  0876               	movf	__div_to_l_@f2+2,w
  6333  111C  0272               	subwf	__div_to_l_@f1+2,w
  6334  111D  1D03               	skipz
  6335  111E  2925               	goto	u4675
  6336  111F  0875               	movf	__div_to_l_@f2+1,w
  6337  1120  0271               	subwf	__div_to_l_@f1+1,w
  6338  1121  1D03               	skipz
  6339  1122  2925               	goto	u4675
  6340  1123  0874               	movf	__div_to_l_@f2,w
  6341  1124  0270               	subwf	__div_to_l_@f1,w
  6342  1125                     u4675:
  6343  1125  1C03               	skipc
  6344  1126  2928               	goto	u4671
  6345  1127  2929               	goto	u4670
  6346  1128                     u4671:
  6347  1128  2938               	goto	l3034
  6348  1129                     u4670:
  6349  1129                     l3030:
  6350  1129  0874               	movf	__div_to_l_@f2,w
  6351  112A  02F0               	subwf	__div_to_l_@f1,f
  6352  112B  0875               	movf	__div_to_l_@f2+1,w
  6353  112C  1C03               	skipc
  6354  112D  0F75               	incfsz	__div_to_l_@f2+1,w
  6355  112E  02F1               	subwf	__div_to_l_@f1+1,f
  6356  112F  0876               	movf	__div_to_l_@f2+2,w
  6357  1130  1C03               	skipc
  6358  1131  0F76               	incfsz	__div_to_l_@f2+2,w
  6359  1132  02F2               	subwf	__div_to_l_@f1+2,f
  6360  1133  0877               	movf	__div_to_l_@f2+3,w
  6361  1134  1C03               	skipc
  6362  1135  0F77               	incfsz	__div_to_l_@f2+3,w
  6363  1136  02F3               	subwf	__div_to_l_@f1+3,f
  6364  1137                     l3032:
  6365  1137  1420               	bsf	__div_to_l_@quot,0
  6366  1138                     l3034:
  6367  1138  3001               	movlw	1
  6368  1139  00F8               	movwf	??__div_to_l_
  6369  113A                     u4685:
  6370  113A  1003               	clrc
  6371  113B  0DF0               	rlf	__div_to_l_@f1,f
  6372  113C  0DF1               	rlf	__div_to_l_@f1+1,f
  6373  113D  0DF2               	rlf	__div_to_l_@f1+2,f
  6374  113E  0DF3               	rlf	__div_to_l_@f1+3,f
  6375  113F  0BF8               	decfsz	??__div_to_l_,f
  6376  1140  293A               	goto	u4685
  6377  1141                     l3036:
  6378  1141  3001               	movlw	1
  6379  1142  02A4               	subwf	__div_to_l_@cntr,f
  6380  1143  1D03               	btfss	3,2
  6381  1144  2946               	goto	u4691
  6382  1145  2947               	goto	u4690
  6383  1146                     u4691:
  6384  1146  290E               	goto	l3026
  6385  1147                     u4690:
  6386  1147                     l581:
  6387  1147  1FA5               	btfss	__div_to_l_@exp1,7
  6388  1148  294A               	goto	u4701
  6389  1149  294B               	goto	u4700
  6390  114A                     u4701:
  6391  114A  2965               	goto	l3046
  6392  114B                     u4700:
  6393  114B                     l3038:
  6394  114B  0825               	movf	__div_to_l_@exp1,w
  6395  114C  3A80               	xorlw	128
  6396  114D  3E9F               	addlw	159
  6397  114E  1803               	skipnc
  6398  114F  2951               	goto	u4711
  6399  1150  2952               	goto	u4710
  6400  1151                     u4711:
  6401  1151  2953               	goto	l3044
  6402  1152                     u4710:
  6403  1152  28D4               	goto	l3008
  6404  1153                     l3044:
  6405  1153  3001               	movlw	1
  6406  1154                     u4725:
  6407  1154  1003               	clrc
  6408  1155  0CA3               	rrf	__div_to_l_@quot+3,f
  6409  1156  0CA2               	rrf	__div_to_l_@quot+2,f
  6410  1157  0CA1               	rrf	__div_to_l_@quot+1,f
  6411  1158  0CA0               	rrf	__div_to_l_@quot,f
  6412  1159  3EFF               	addlw	-1
  6413  115A  1D03               	skipz
  6414  115B  2954               	goto	u4725
  6415  115C  3001               	movlw	1
  6416  115D  00F8               	movwf	??__div_to_l_
  6417  115E  0878               	movf	??__div_to_l_,w
  6418  115F  07A5               	addwf	__div_to_l_@exp1,f
  6419  1160  1D03               	btfss	3,2
  6420  1161  2963               	goto	u4731
  6421  1162  2964               	goto	u4730
  6422  1163                     u4731:
  6423  1163  2953               	goto	l3044
  6424  1164                     u4730:
  6425  1164  297C               	goto	l3054
  6426  1165                     l3046:
  6427  1165  3020               	movlw	32
  6428  1166  0225               	subwf	__div_to_l_@exp1,w
  6429  1167  1C03               	skipc
  6430  1168  296A               	goto	u4741
  6431  1169  296B               	goto	u4740
  6432  116A                     u4741:
  6433  116A  2977               	goto	l588
  6434  116B                     u4740:
  6435  116B  28D4               	goto	l3008
  6436  116C                     l3052:
  6437  116C  3001               	movlw	1
  6438  116D  00F8               	movwf	??__div_to_l_
  6439  116E                     u4755:
  6440  116E  1003               	clrc
  6441  116F  0DA0               	rlf	__div_to_l_@quot,f
  6442  1170  0DA1               	rlf	__div_to_l_@quot+1,f
  6443  1171  0DA2               	rlf	__div_to_l_@quot+2,f
  6444  1172  0DA3               	rlf	__div_to_l_@quot+3,f
  6445  1173  0BF8               	decfsz	??__div_to_l_,f
  6446  1174  296E               	goto	u4755
  6447  1175  3001               	movlw	1
  6448  1176  02A5               	subwf	__div_to_l_@exp1,f
  6449  1177                     l588:
  6450  1177  0825               	movf	__div_to_l_@exp1,w
  6451  1178  1D03               	btfss	3,2
  6452  1179  297B               	goto	u4761
  6453  117A  297C               	goto	u4760
  6454  117B                     u4761:
  6455  117B  296C               	goto	l3052
  6456  117C                     u4760:
  6457  117C                     l3054:
  6458  117C  0823               	movf	__div_to_l_@quot+3,w
  6459  117D  00F3               	movwf	?__div_to_l_+3
  6460  117E  0822               	movf	__div_to_l_@quot+2,w
  6461  117F  00F2               	movwf	?__div_to_l_+2
  6462  1180  0821               	movf	__div_to_l_@quot+1,w
  6463  1181  00F1               	movwf	?__div_to_l_+1
  6464  1182  0820               	movf	__div_to_l_@quot,w
  6465  1183  00F0               	movwf	?__div_to_l_
  6466  1184                     l577:
  6467  1184  0008               	return
  6468  1185                     __end_of__div_to_l_:
  6469                           
  6470                           	psect	text11
  6471  1A64                     __ptext11:	
  6472 ;; *************** function ___wmul *****************
  6473 ;; Defined at:
  6474 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  multiplier      2    0[COMMON] unsigned int 
  6477 ;;  multiplicand    2    2[COMMON] unsigned int 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  product         2    4[COMMON] unsigned int 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  2    0[COMMON] unsigned int 
  6482 ;; Registers used:
  6483 ;;		wreg, status,2, status,0
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6489 ;;      Params:         4       0       0       0       0
  6490 ;;      Locals:         2       0       0       0       0
  6491 ;;      Temps:          0       0       0       0       0
  6492 ;;      Totals:         6       0       0       0       0
  6493 ;;Total ram usage:        6 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; This function calls:
  6496 ;;		Nothing
  6497 ;; This function is called by:
  6498 ;;		_sprintf
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           
  6503                           ;psect for function ___wmul
  6504  1A64                     ___wmul:
  6505  1A64                     l3058:	
  6506                           ;incstack = 0
  6507                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6508                           
  6509  1A64  01F4               	clrf	___wmul@product
  6510  1A65  01F5               	clrf	___wmul@product+1
  6511  1A66                     l3060:
  6512  1A66  1C70               	btfss	___wmul@multiplier,0
  6513  1A67  2A69               	goto	u4771
  6514  1A68  2A6A               	goto	u4770
  6515  1A69                     u4771:
  6516  1A69  2A70               	goto	l407
  6517  1A6A                     u4770:
  6518  1A6A                     l3062:
  6519  1A6A  0872               	movf	___wmul@multiplicand,w
  6520  1A6B  07F4               	addwf	___wmul@product,f
  6521  1A6C  1803               	skipnc
  6522  1A6D  0AF5               	incf	___wmul@product+1,f
  6523  1A6E  0873               	movf	___wmul@multiplicand+1,w
  6524  1A6F  07F5               	addwf	___wmul@product+1,f
  6525  1A70                     l407:
  6526  1A70  3001               	movlw	1
  6527  1A71                     u4785:
  6528  1A71  1003               	clrc
  6529  1A72  0DF2               	rlf	___wmul@multiplicand,f
  6530  1A73  0DF3               	rlf	___wmul@multiplicand+1,f
  6531  1A74  3EFF               	addlw	-1
  6532  1A75  1D03               	skipz
  6533  1A76  2A71               	goto	u4785
  6534  1A77                     l3064:
  6535  1A77  3001               	movlw	1
  6536  1A78                     u4795:
  6537  1A78  1003               	clrc
  6538  1A79  0CF1               	rrf	___wmul@multiplier+1,f
  6539  1A7A  0CF0               	rrf	___wmul@multiplier,f
  6540  1A7B  3EFF               	addlw	-1
  6541  1A7C  1D03               	skipz
  6542  1A7D  2A78               	goto	u4795
  6543  1A7E                     l3066:
  6544  1A7E  0870               	movf	___wmul@multiplier,w
  6545  1A7F  0471               	iorwf	___wmul@multiplier+1,w
  6546  1A80  1D03               	btfss	3,2
  6547  1A81  2A83               	goto	u4801
  6548  1A82  2A84               	goto	u4800
  6549  1A83                     u4801:
  6550  1A83  2A66               	goto	l3060
  6551  1A84                     u4800:
  6552  1A84                     l3068:
  6553  1A84  0875               	movf	___wmul@product+1,w
  6554  1A85  00F1               	movwf	?___wmul+1
  6555  1A86  0874               	movf	___wmul@product,w
  6556  1A87  00F0               	movwf	?___wmul
  6557  1A88                     l409:
  6558  1A88  0008               	return
  6559  1A89                     __end_of___wmul:
  6560                           
  6561                           	psect	text12
  6562  1D15                     __ptext12:	
  6563 ;; *************** function ___llmod *****************
  6564 ;; Defined at:
  6565 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;  divisor         4    0[COMMON] unsigned long 
  6568 ;;  dividend        4    4[COMMON] unsigned long 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;  counter         1    9[COMMON] unsigned char 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  4    0[COMMON] unsigned long 
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6580 ;;      Params:         8       0       0       0       0
  6581 ;;      Locals:         1       0       0       0       0
  6582 ;;      Temps:          1       0       0       0       0
  6583 ;;      Totals:        10       0       0       0       0
  6584 ;;Total ram usage:       10 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_sprintf
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           
  6594                           ;psect for function ___llmod
  6595  1D15                     ___llmod:
  6596  1D15                     l3148:	
  6597                           ;incstack = 0
  6598                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6599                           
  6600  1D15  0873               	movf	___llmod@divisor+3,w
  6601  1D16  0472               	iorwf	___llmod@divisor+2,w
  6602  1D17  0471               	iorwf	___llmod@divisor+1,w
  6603  1D18  0470               	iorwf	___llmod@divisor,w
  6604  1D19  1903               	skipnz
  6605  1D1A  2D1C               	goto	u5021
  6606  1D1B  2D1D               	goto	u5020
  6607  1D1C                     u5021:
  6608  1D1C  2D60               	goto	l3164
  6609  1D1D                     u5020:
  6610  1D1D                     l3150:
  6611  1D1D  01F9               	clrf	___llmod@counter
  6612  1D1E  0AF9               	incf	___llmod@counter,f
  6613  1D1F  2D2D               	goto	l3154
  6614  1D20                     l3152:
  6615  1D20  3001               	movlw	1
  6616  1D21  00F8               	movwf	??___llmod
  6617  1D22                     u5035:
  6618  1D22  1003               	clrc
  6619  1D23  0DF0               	rlf	___llmod@divisor,f
  6620  1D24  0DF1               	rlf	___llmod@divisor+1,f
  6621  1D25  0DF2               	rlf	___llmod@divisor+2,f
  6622  1D26  0DF3               	rlf	___llmod@divisor+3,f
  6623  1D27  0BF8               	decfsz	??___llmod,f
  6624  1D28  2D22               	goto	u5035
  6625  1D29  3001               	movlw	1
  6626  1D2A  00F8               	movwf	??___llmod
  6627  1D2B  0878               	movf	??___llmod,w
  6628  1D2C  07F9               	addwf	___llmod@counter,f
  6629  1D2D                     l3154:
  6630  1D2D  1FF3               	btfss	___llmod@divisor+3,7
  6631  1D2E  2D30               	goto	u5041
  6632  1D2F  2D31               	goto	u5040
  6633  1D30                     u5041:
  6634  1D30  2D20               	goto	l3152
  6635  1D31                     u5040:
  6636  1D31                     l3156:
  6637  1D31  0873               	movf	___llmod@divisor+3,w
  6638  1D32  0277               	subwf	___llmod@dividend+3,w
  6639  1D33  1D03               	skipz
  6640  1D34  2D3F               	goto	u5055
  6641  1D35  0872               	movf	___llmod@divisor+2,w
  6642  1D36  0276               	subwf	___llmod@dividend+2,w
  6643  1D37  1D03               	skipz
  6644  1D38  2D3F               	goto	u5055
  6645  1D39  0871               	movf	___llmod@divisor+1,w
  6646  1D3A  0275               	subwf	___llmod@dividend+1,w
  6647  1D3B  1D03               	skipz
  6648  1D3C  2D3F               	goto	u5055
  6649  1D3D  0870               	movf	___llmod@divisor,w
  6650  1D3E  0274               	subwf	___llmod@dividend,w
  6651  1D3F                     u5055:
  6652  1D3F  1C03               	skipc
  6653  1D40  2D42               	goto	u5051
  6654  1D41  2D43               	goto	u5050
  6655  1D42                     u5051:
  6656  1D42  2D51               	goto	l3160
  6657  1D43                     u5050:
  6658  1D43                     l3158:
  6659  1D43  0870               	movf	___llmod@divisor,w
  6660  1D44  02F4               	subwf	___llmod@dividend,f
  6661  1D45  0871               	movf	___llmod@divisor+1,w
  6662  1D46  1C03               	skipc
  6663  1D47  0F71               	incfsz	___llmod@divisor+1,w
  6664  1D48  02F5               	subwf	___llmod@dividend+1,f
  6665  1D49  0872               	movf	___llmod@divisor+2,w
  6666  1D4A  1C03               	skipc
  6667  1D4B  0F72               	incfsz	___llmod@divisor+2,w
  6668  1D4C  02F6               	subwf	___llmod@dividend+2,f
  6669  1D4D  0873               	movf	___llmod@divisor+3,w
  6670  1D4E  1C03               	skipc
  6671  1D4F  0F73               	incfsz	___llmod@divisor+3,w
  6672  1D50  02F7               	subwf	___llmod@dividend+3,f
  6673  1D51                     l3160:
  6674  1D51  3001               	movlw	1
  6675  1D52                     u5065:
  6676  1D52  1003               	clrc
  6677  1D53  0CF3               	rrf	___llmod@divisor+3,f
  6678  1D54  0CF2               	rrf	___llmod@divisor+2,f
  6679  1D55  0CF1               	rrf	___llmod@divisor+1,f
  6680  1D56  0CF0               	rrf	___llmod@divisor,f
  6681  1D57  3EFF               	addlw	-1
  6682  1D58  1D03               	skipz
  6683  1D59  2D52               	goto	u5065
  6684  1D5A                     l3162:
  6685  1D5A  3001               	movlw	1
  6686  1D5B  02F9               	subwf	___llmod@counter,f
  6687  1D5C  1D03               	btfss	3,2
  6688  1D5D  2D5F               	goto	u5071
  6689  1D5E  2D60               	goto	u5070
  6690  1D5F                     u5071:
  6691  1D5F  2D31               	goto	l3156
  6692  1D60                     u5070:
  6693  1D60                     l3164:
  6694  1D60  0877               	movf	___llmod@dividend+3,w
  6695  1D61  00F3               	movwf	?___llmod+3
  6696  1D62  0876               	movf	___llmod@dividend+2,w
  6697  1D63  00F2               	movwf	?___llmod+2
  6698  1D64  0875               	movf	___llmod@dividend+1,w
  6699  1D65  00F1               	movwf	?___llmod+1
  6700  1D66  0874               	movf	___llmod@dividend,w
  6701  1D67  00F0               	movwf	?___llmod
  6702  1D68                     l663:
  6703  1D68  0008               	return
  6704  1D69                     __end_of___llmod:
  6705                           
  6706                           	psect	text13
  6707  1E28                     __ptext13:	
  6708 ;; *************** function ___fltol *****************
  6709 ;; Defined at:
  6710 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  f1              4   49[BANK0 ] unsigned long 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;  exp1            1   59[BANK0 ] unsigned char 
  6715 ;;  sign1           1   58[BANK0 ] unsigned char 
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  4   49[BANK0 ] long 
  6718 ;; Registers used:
  6719 ;;		wreg, status,2, status,0
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6725 ;;      Params:         0       4       0       0       0
  6726 ;;      Locals:         0       2       0       0       0
  6727 ;;      Temps:          0       5       0       0       0
  6728 ;;      Totals:         0      11       0       0       0
  6729 ;;Total ram usage:       11 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; This function calls:
  6732 ;;		Nothing
  6733 ;; This function is called by:
  6734 ;;		_sprintf
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           
  6738                           
  6739                           ;psect for function ___fltol
  6740  1E28                     ___fltol:
  6741  1E28                     l3112:	
  6742                           ;incstack = 0
  6743                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6744                           
  6745  1E28  1003               	clrc
  6746  1E29  1283               	bcf	3,5	;RP0=0, select bank0
  6747  1E2A  1303               	bcf	3,6	;RP1=0, select bank0
  6748  1E2B  0D53               	rlf	___fltol@f1+2,w
  6749  1E2C  0D54               	rlf	___fltol@f1+3,w
  6750  1E2D  00D5               	movwf	??___fltol
  6751  1E2E  0855               	movf	??___fltol,w
  6752  1E2F  00DB               	movwf	___fltol@exp1
  6753  1E30  085B               	movf	___fltol@exp1,w
  6754  1E31  1D03               	btfss	3,2
  6755  1E32  2E34               	goto	u4921
  6756  1E33  2E35               	goto	u4920
  6757  1E34                     u4921:
  6758  1E34  2E3E               	goto	l3118
  6759  1E35                     u4920:
  6760  1E35                     l3114:
  6761  1E35  3000               	movlw	0
  6762  1E36  00D4               	movwf	?___fltol+3
  6763  1E37  3000               	movlw	0
  6764  1E38  00D3               	movwf	?___fltol+2
  6765  1E39  3000               	movlw	0
  6766  1E3A  00D2               	movwf	?___fltol+1
  6767  1E3B  3000               	movlw	0
  6768  1E3C  00D1               	movwf	?___fltol
  6769  1E3D  2EA3               	goto	l610
  6770  1E3E                     l3118:
  6771  1E3E  0851               	movf	___fltol@f1,w
  6772  1E3F  00D5               	movwf	??___fltol
  6773  1E40  0852               	movf	___fltol@f1+1,w
  6774  1E41  00D6               	movwf	??___fltol+1
  6775  1E42  0853               	movf	___fltol@f1+2,w
  6776  1E43  00D7               	movwf	??___fltol+2
  6777  1E44  0854               	movf	___fltol@f1+3,w
  6778  1E45  00D8               	movwf	??___fltol+3
  6779  1E46  301F               	movlw	31
  6780  1E47                     u4935:
  6781  1E47  1003               	clrc
  6782  1E48  0CD8               	rrf	??___fltol+3,f
  6783  1E49  0CD7               	rrf	??___fltol+2,f
  6784  1E4A  0CD6               	rrf	??___fltol+1,f
  6785  1E4B  0CD5               	rrf	??___fltol,f
  6786  1E4C                     u4930:
  6787  1E4C  3EFF               	addlw	-1
  6788  1E4D  1D03               	skipz
  6789  1E4E  2E47               	goto	u4935
  6790  1E4F  0855               	movf	??___fltol,w
  6791  1E50  00D9               	movwf	??___fltol+4
  6792  1E51  0859               	movf	??___fltol+4,w
  6793  1E52  00DA               	movwf	___fltol@sign1
  6794  1E53                     l3120:
  6795  1E53  17D3               	bsf	___fltol@f1+2,7
  6796  1E54                     l3122:
  6797  1E54  30FF               	movlw	255
  6798  1E55  05D1               	andwf	___fltol@f1,f
  6799  1E56  30FF               	movlw	255
  6800  1E57  05D2               	andwf	___fltol@f1+1,f
  6801  1E58  30FF               	movlw	255
  6802  1E59  05D3               	andwf	___fltol@f1+2,f
  6803  1E5A  3000               	movlw	0
  6804  1E5B  05D4               	andwf	___fltol@f1+3,f
  6805  1E5C                     l3124:
  6806  1E5C  3096               	movlw	150
  6807  1E5D  02DB               	subwf	___fltol@exp1,f
  6808  1E5E                     l3126:
  6809  1E5E  1FDB               	btfss	___fltol@exp1,7
  6810  1E5F  2E61               	goto	u4941
  6811  1E60  2E62               	goto	u4940
  6812  1E61                     u4941:
  6813  1E61  2E7C               	goto	l3136
  6814  1E62                     u4940:
  6815  1E62                     l3128:
  6816  1E62  085B               	movf	___fltol@exp1,w
  6817  1E63  3A80               	xorlw	128
  6818  1E64  3E97               	addlw	151
  6819  1E65  1803               	skipnc
  6820  1E66  2E68               	goto	u4951
  6821  1E67  2E69               	goto	u4950
  6822  1E68                     u4951:
  6823  1E68  2E6A               	goto	l3134
  6824  1E69                     u4950:
  6825  1E69  2E35               	goto	l3114
  6826  1E6A                     l3134:
  6827  1E6A  3001               	movlw	1
  6828  1E6B                     u4965:
  6829  1E6B  1003               	clrc
  6830  1E6C  0CD4               	rrf	___fltol@f1+3,f
  6831  1E6D  0CD3               	rrf	___fltol@f1+2,f
  6832  1E6E  0CD2               	rrf	___fltol@f1+1,f
  6833  1E6F  0CD1               	rrf	___fltol@f1,f
  6834  1E70  3EFF               	addlw	-1
  6835  1E71  1D03               	skipz
  6836  1E72  2E6B               	goto	u4965
  6837  1E73  3001               	movlw	1
  6838  1E74  00D5               	movwf	??___fltol
  6839  1E75  0855               	movf	??___fltol,w
  6840  1E76  07DB               	addwf	___fltol@exp1,f
  6841  1E77  1D03               	btfss	3,2
  6842  1E78  2E7A               	goto	u4971
  6843  1E79  2E7B               	goto	u4970
  6844  1E7A                     u4971:
  6845  1E7A  2E6A               	goto	l3134
  6846  1E7B                     u4970:
  6847  1E7B  2E93               	goto	l3144
  6848  1E7C                     l3136:
  6849  1E7C  3020               	movlw	32
  6850  1E7D  025B               	subwf	___fltol@exp1,w
  6851  1E7E  1C03               	skipc
  6852  1E7F  2E81               	goto	u4981
  6853  1E80  2E82               	goto	u4980
  6854  1E81                     u4981:
  6855  1E81  2E8E               	goto	l617
  6856  1E82                     u4980:
  6857  1E82  2E35               	goto	l3114
  6858  1E83                     l3142:
  6859  1E83  3001               	movlw	1
  6860  1E84  00D5               	movwf	??___fltol
  6861  1E85                     u4995:
  6862  1E85  1003               	clrc
  6863  1E86  0DD1               	rlf	___fltol@f1,f
  6864  1E87  0DD2               	rlf	___fltol@f1+1,f
  6865  1E88  0DD3               	rlf	___fltol@f1+2,f
  6866  1E89  0DD4               	rlf	___fltol@f1+3,f
  6867  1E8A  0BD5               	decfsz	??___fltol,f
  6868  1E8B  2E85               	goto	u4995
  6869  1E8C  3001               	movlw	1
  6870  1E8D  02DB               	subwf	___fltol@exp1,f
  6871  1E8E                     l617:
  6872  1E8E  085B               	movf	___fltol@exp1,w
  6873  1E8F  1D03               	btfss	3,2
  6874  1E90  2E92               	goto	u5001
  6875  1E91  2E93               	goto	u5000
  6876  1E92                     u5001:
  6877  1E92  2E83               	goto	l3142
  6878  1E93                     u5000:
  6879  1E93                     l3144:
  6880  1E93  085A               	movf	___fltol@sign1,w
  6881  1E94  1903               	btfsc	3,2
  6882  1E95  2E97               	goto	u5011
  6883  1E96  2E98               	goto	u5010
  6884  1E97                     u5011:
  6885  1E97  2EA3               	goto	l620
  6886  1E98                     u5010:
  6887  1E98                     l3146:
  6888  1E98  09D1               	comf	___fltol@f1,f
  6889  1E99  09D2               	comf	___fltol@f1+1,f
  6890  1E9A  09D3               	comf	___fltol@f1+2,f
  6891  1E9B  09D4               	comf	___fltol@f1+3,f
  6892  1E9C  0AD1               	incf	___fltol@f1,f
  6893  1E9D  1903               	skipnz
  6894  1E9E  0AD2               	incf	___fltol@f1+1,f
  6895  1E9F  1903               	skipnz
  6896  1EA0  0AD3               	incf	___fltol@f1+2,f
  6897  1EA1  1903               	skipnz
  6898  1EA2  0AD4               	incf	___fltol@f1+3,f
  6899  1EA3                     l620:
  6900  1EA3                     l610:
  6901  1EA3  0008               	return
  6902  1EA4                     __end_of___fltol:
  6903                           
  6904                           	psect	text14
  6905  1A40                     __ptext14:	
  6906 ;; *************** function ___flsub *****************
  6907 ;; Defined at:
  6908 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  a               4   70[BANK0 ] long 
  6911 ;;  b               4   74[BANK0 ] long 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  4   70[BANK0 ] long 
  6916 ;; Registers used:
  6917 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6923 ;;      Params:         0       8       0       0       0
  6924 ;;      Locals:         0       0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0
  6926 ;;      Totals:         0       8       0       0       0
  6927 ;;Total ram usage:        8 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    1
  6930 ;; This function calls:
  6931 ;;		___fladd
  6932 ;; This function is called by:
  6933 ;;		_sprintf
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           
  6938                           ;psect for function ___flsub
  6939  1A40                     ___flsub:
  6940  1A40                     l3168:	
  6941                           ;incstack = 0
  6942                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6943                           
  6944  1A40  3080               	movlw	128
  6945  1A41  1283               	bcf	3,5	;RP0=0, select bank0
  6946  1A42  1303               	bcf	3,6	;RP1=0, select bank0
  6947  1A43  06E9               	xorwf	___flsub@a+3,f
  6948  1A44                     l3170:
  6949  1A44  086D               	movf	___flsub@b+3,w
  6950  1A45  00D5               	movwf	___fladd@b+3
  6951  1A46  086C               	movf	___flsub@b+2,w
  6952  1A47  00D4               	movwf	___fladd@b+2
  6953  1A48  086B               	movf	___flsub@b+1,w
  6954  1A49  00D3               	movwf	___fladd@b+1
  6955  1A4A  086A               	movf	___flsub@b,w
  6956  1A4B  00D2               	movwf	___fladd@b
  6957  1A4C  0869               	movf	___flsub@a+3,w
  6958  1A4D  00D9               	movwf	___fladd@a+3
  6959  1A4E  0868               	movf	___flsub@a+2,w
  6960  1A4F  00D8               	movwf	___fladd@a+2
  6961  1A50  0867               	movf	___flsub@a+1,w
  6962  1A51  00D7               	movwf	___fladd@a+1
  6963  1A52  0866               	movf	___flsub@a,w
  6964  1A53  00D6               	movwf	___fladd@a
  6965  1A54  160A  118A  2578  160A  158A  	fcall	___fladd
  6966  1A59  1283               	bcf	3,5	;RP0=0, select bank0
  6967  1A5A  1303               	bcf	3,6	;RP1=0, select bank0
  6968  1A5B  0855               	movf	?___fladd+3,w
  6969  1A5C  00E9               	movwf	?___flsub+3
  6970  1A5D  0854               	movf	?___fladd+2,w
  6971  1A5E  00E8               	movwf	?___flsub+2
  6972  1A5F  0853               	movf	?___fladd+1,w
  6973  1A60  00E7               	movwf	?___flsub+1
  6974  1A61  0852               	movf	?___fladd,w
  6975  1A62  00E6               	movwf	?___flsub
  6976  1A63                     l780:
  6977  1A63  0008               	return
  6978  1A64                     __end_of___flsub:
  6979                           
  6980                           	psect	text15
  6981  0004                     __ptext15:	
  6982 ;; *************** function ___flneg *****************
  6983 ;; Defined at:
  6984 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  f1              4    0[COMMON] long 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  4    0[COMMON] long 
  6991 ;; Registers used:
  6992 ;;		wreg
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6998 ;;      Params:         4       0       0       0       0
  6999 ;;      Locals:         0       0       0       0       0
  7000 ;;      Temps:          0       0       0       0       0
  7001 ;;      Totals:         4       0       0       0       0
  7002 ;;Total ram usage:        4 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_sprintf
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           
  7012                           ;psect for function ___flneg
  7013  0004                     ___flneg:
  7014  0004                     l3104:	
  7015                           ;incstack = 0
  7016                           ; Regs used in ___flneg: [wreg]
  7017                           
  7018  0004  0873               	movf	___flneg@f1+3,w
  7019  0005  0472               	iorwf	___flneg@f1+2,w
  7020  0006  0471               	iorwf	___flneg@f1+1,w
  7021  0007  0470               	iorwf	___flneg@f1,w
  7022  0008  1903               	skipnz
  7023  0009  280B               	goto	u4911
  7024  000A  280C               	goto	u4910
  7025  000B                     u4911:
  7026  000B  280E               	goto	l3108
  7027  000C                     u4910:
  7028  000C                     l3106:
  7029  000C  3080               	movlw	128
  7030  000D  06F3               	xorwf	___flneg@f1+3,f
  7031  000E                     l3108:
  7032  000E                     l606:
  7033  000E  0008               	return
  7034  000F                     __end_of___flneg:
  7035                           
  7036                           	psect	text16
  7037  1EA4                     __ptext16:	
  7038 ;; *************** function ___flge *****************
  7039 ;; Defined at:
  7040 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  ff1             4    0[COMMON] long 
  7043 ;;  ff2             4    4[COMMON] long 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;		None
  7046 ;; Return value:  Size  Location     Type
  7047 ;;		None               void
  7048 ;; Registers used:
  7049 ;;		wreg, status,2, status,0
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7055 ;;      Params:         8       0       0       0       0
  7056 ;;      Locals:         0       0       0       0       0
  7057 ;;      Temps:          4       0       0       0       0
  7058 ;;      Totals:        12       0       0       0       0
  7059 ;;Total ram usage:       12 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_sprintf
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           
  7069                           ;psect for function ___flge
  7070  1EA4                     ___flge:
  7071  1EA4                     l3084:	
  7072                           ;incstack = 0
  7073                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7074                           
  7075  1EA4  3000               	movlw	0
  7076  1EA5  0570               	andwf	___flge@ff1,w
  7077  1EA6  00F8               	movwf	??___flge
  7078  1EA7  3000               	movlw	0
  7079  1EA8  0571               	andwf	___flge@ff1+1,w
  7080  1EA9  00F9               	movwf	??___flge+1
  7081  1EAA  3080               	movlw	128
  7082  1EAB  0572               	andwf	___flge@ff1+2,w
  7083  1EAC  00FA               	movwf	??___flge+2
  7084  1EAD  307F               	movlw	127
  7085  1EAE  0573               	andwf	___flge@ff1+3,w
  7086  1EAF  00FB               	movwf	??___flge+3
  7087  1EB0  087B               	movf	??___flge+3,w
  7088  1EB1  047A               	iorwf	??___flge+2,w
  7089  1EB2  0479               	iorwf	??___flge+1,w
  7090  1EB3  0478               	iorwf	??___flge,w
  7091  1EB4  1D03               	skipz
  7092  1EB5  2EB7               	goto	u4841
  7093  1EB6  2EB8               	goto	u4840
  7094  1EB7                     u4841:
  7095  1EB7  2EC0               	goto	l598
  7096  1EB8                     u4840:
  7097  1EB8                     l3086:
  7098  1EB8  3000               	movlw	0
  7099  1EB9  00F3               	movwf	___flge@ff1+3
  7100  1EBA  3000               	movlw	0
  7101  1EBB  00F2               	movwf	___flge@ff1+2
  7102  1EBC  3000               	movlw	0
  7103  1EBD  00F1               	movwf	___flge@ff1+1
  7104  1EBE  3000               	movlw	0
  7105  1EBF  00F0               	movwf	___flge@ff1
  7106  1EC0                     l598:
  7107  1EC0  3000               	movlw	0
  7108  1EC1  0574               	andwf	___flge@ff2,w
  7109  1EC2  00F8               	movwf	??___flge
  7110  1EC3  3000               	movlw	0
  7111  1EC4  0575               	andwf	___flge@ff2+1,w
  7112  1EC5  00F9               	movwf	??___flge+1
  7113  1EC6  3080               	movlw	128
  7114  1EC7  0576               	andwf	___flge@ff2+2,w
  7115  1EC8  00FA               	movwf	??___flge+2
  7116  1EC9  307F               	movlw	127
  7117  1ECA  0577               	andwf	___flge@ff2+3,w
  7118  1ECB  00FB               	movwf	??___flge+3
  7119  1ECC  087B               	movf	??___flge+3,w
  7120  1ECD  047A               	iorwf	??___flge+2,w
  7121  1ECE  0479               	iorwf	??___flge+1,w
  7122  1ECF  0478               	iorwf	??___flge,w
  7123  1ED0  1D03               	skipz
  7124  1ED1  2ED3               	goto	u4851
  7125  1ED2  2ED4               	goto	u4850
  7126  1ED3                     u4851:
  7127  1ED3  2EDC               	goto	l3090
  7128  1ED4                     u4850:
  7129  1ED4                     l3088:
  7130  1ED4  3000               	movlw	0
  7131  1ED5  00F7               	movwf	___flge@ff2+3
  7132  1ED6  3000               	movlw	0
  7133  1ED7  00F6               	movwf	___flge@ff2+2
  7134  1ED8  3000               	movlw	0
  7135  1ED9  00F5               	movwf	___flge@ff2+1
  7136  1EDA  3000               	movlw	0
  7137  1EDB  00F4               	movwf	___flge@ff2
  7138  1EDC                     l3090:
  7139  1EDC  1FF3               	btfss	___flge@ff1+3,7
  7140  1EDD  2EDF               	goto	u4861
  7141  1EDE  2EE0               	goto	u4860
  7142  1EDF                     u4861:
  7143  1EDF  2F04               	goto	l3094
  7144  1EE0                     u4860:
  7145  1EE0                     l3092:
  7146  1EE0  3000               	movlw	0
  7147  1EE1  00F8               	movwf	??___flge
  7148  1EE2  3000               	movlw	0
  7149  1EE3  00F9               	movwf	??___flge+1
  7150  1EE4  3000               	movlw	0
  7151  1EE5  00FA               	movwf	??___flge+2
  7152  1EE6  3080               	movlw	128
  7153  1EE7  00FB               	movwf	??___flge+3
  7154  1EE8  0870               	movf	___flge@ff1,w
  7155  1EE9  02F8               	subwf	??___flge,f
  7156  1EEA  0871               	movf	___flge@ff1+1,w
  7157  1EEB  1C03               	skipc
  7158  1EEC  0F71               	incfsz	___flge@ff1+1,w
  7159  1EED  2EEF               	goto	u4871
  7160  1EEE  2EF0               	goto	u4872
  7161  1EEF                     u4871:
  7162  1EEF  02F9               	subwf	??___flge+1,f
  7163  1EF0                     u4872:
  7164  1EF0  0872               	movf	___flge@ff1+2,w
  7165  1EF1  1C03               	skipc
  7166  1EF2  0F72               	incfsz	___flge@ff1+2,w
  7167  1EF3  2EF5               	goto	u4873
  7168  1EF4  2EF6               	goto	u4874
  7169  1EF5                     u4873:
  7170  1EF5  02FA               	subwf	??___flge+2,f
  7171  1EF6                     u4874:
  7172  1EF6  0873               	movf	___flge@ff1+3,w
  7173  1EF7  1C03               	skipc
  7174  1EF8  0F73               	incfsz	___flge@ff1+3,w
  7175  1EF9  2EFB               	goto	u4875
  7176  1EFA  2EFC               	goto	u4876
  7177  1EFB                     u4875:
  7178  1EFB  02FB               	subwf	??___flge+3,f
  7179  1EFC                     u4876:
  7180  1EFC  087B               	movf	??___flge+3,w
  7181  1EFD  00F3               	movwf	___flge@ff1+3
  7182  1EFE  087A               	movf	??___flge+2,w
  7183  1EFF  00F2               	movwf	___flge@ff1+2
  7184  1F00  0879               	movf	??___flge+1,w
  7185  1F01  00F1               	movwf	___flge@ff1+1
  7186  1F02  0878               	movf	??___flge,w
  7187  1F03  00F0               	movwf	___flge@ff1
  7188  1F04                     l3094:
  7189  1F04  1FF7               	btfss	___flge@ff2+3,7
  7190  1F05  2F07               	goto	u4881
  7191  1F06  2F08               	goto	u4880
  7192  1F07                     u4881:
  7193  1F07  2F2C               	goto	l601
  7194  1F08                     u4880:
  7195  1F08                     l3096:
  7196  1F08  3000               	movlw	0
  7197  1F09  00F8               	movwf	??___flge
  7198  1F0A  3000               	movlw	0
  7199  1F0B  00F9               	movwf	??___flge+1
  7200  1F0C  3000               	movlw	0
  7201  1F0D  00FA               	movwf	??___flge+2
  7202  1F0E  3080               	movlw	128
  7203  1F0F  00FB               	movwf	??___flge+3
  7204  1F10  0874               	movf	___flge@ff2,w
  7205  1F11  02F8               	subwf	??___flge,f
  7206  1F12  0875               	movf	___flge@ff2+1,w
  7207  1F13  1C03               	skipc
  7208  1F14  0F75               	incfsz	___flge@ff2+1,w
  7209  1F15  2F17               	goto	u4891
  7210  1F16  2F18               	goto	u4892
  7211  1F17                     u4891:
  7212  1F17  02F9               	subwf	??___flge+1,f
  7213  1F18                     u4892:
  7214  1F18  0876               	movf	___flge@ff2+2,w
  7215  1F19  1C03               	skipc
  7216  1F1A  0F76               	incfsz	___flge@ff2+2,w
  7217  1F1B  2F1D               	goto	u4893
  7218  1F1C  2F1E               	goto	u4894
  7219  1F1D                     u4893:
  7220  1F1D  02FA               	subwf	??___flge+2,f
  7221  1F1E                     u4894:
  7222  1F1E  0877               	movf	___flge@ff2+3,w
  7223  1F1F  1C03               	skipc
  7224  1F20  0F77               	incfsz	___flge@ff2+3,w
  7225  1F21  2F23               	goto	u4895
  7226  1F22  2F24               	goto	u4896
  7227  1F23                     u4895:
  7228  1F23  02FB               	subwf	??___flge+3,f
  7229  1F24                     u4896:
  7230  1F24  087B               	movf	??___flge+3,w
  7231  1F25  00F7               	movwf	___flge@ff2+3
  7232  1F26  087A               	movf	??___flge+2,w
  7233  1F27  00F6               	movwf	___flge@ff2+2
  7234  1F28  0879               	movf	??___flge+1,w
  7235  1F29  00F5               	movwf	___flge@ff2+1
  7236  1F2A  0878               	movf	??___flge,w
  7237  1F2B  00F4               	movwf	___flge@ff2
  7238  1F2C                     l601:
  7239  1F2C  3080               	movlw	128
  7240  1F2D  06F3               	xorwf	___flge@ff1+3,f
  7241  1F2E  3080               	movlw	128
  7242  1F2F  06F7               	xorwf	___flge@ff2+3,f
  7243  1F30  0877               	movf	___flge@ff2+3,w
  7244  1F31  0273               	subwf	___flge@ff1+3,w
  7245  1F32  1D03               	skipz
  7246  1F33  2F3E               	goto	u4905
  7247  1F34  0876               	movf	___flge@ff2+2,w
  7248  1F35  0272               	subwf	___flge@ff1+2,w
  7249  1F36  1D03               	skipz
  7250  1F37  2F3E               	goto	u4905
  7251  1F38  0875               	movf	___flge@ff2+1,w
  7252  1F39  0271               	subwf	___flge@ff1+1,w
  7253  1F3A  1D03               	skipz
  7254  1F3B  2F3E               	goto	u4905
  7255  1F3C  0874               	movf	___flge@ff2,w
  7256  1F3D  0270               	subwf	___flge@ff1,w
  7257  1F3E                     u4905:
  7258  1F3E  1803               	skipnc
  7259  1F3F  2F41               	goto	u4901
  7260  1F40  2F42               	goto	u4900
  7261  1F41                     u4901:
  7262  1F41  2F44               	goto	l3100
  7263  1F42                     u4900:
  7264  1F42                     l3098:
  7265  1F42  1003               	clrc
  7266  1F43  2F45               	goto	l602
  7267  1F44                     l3100:
  7268  1F44  1403               	setc
  7269  1F45                     l602:
  7270  1F45  0008               	return
  7271  1F46                     __end_of___flge:
  7272                           
  7273                           	psect	text17
  7274  1CC7                     __ptext17:	
  7275 ;; *************** function ___fleq *****************
  7276 ;; Defined at:
  7277 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;  ff1             4    0[COMMON] long 
  7280 ;;  ff2             4    4[COMMON] long 
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;		None
  7283 ;; Return value:  Size  Location     Type
  7284 ;;		None               void
  7285 ;; Registers used:
  7286 ;;		wreg, status,2, status,0
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7292 ;;      Params:         8       0       0       0       0
  7293 ;;      Locals:         0       0       0       0       0
  7294 ;;      Temps:          4       0       0       0       0
  7295 ;;      Totals:        12       0       0       0       0
  7296 ;;Total ram usage:       12 bytes
  7297 ;; Hardware stack levels used:    1
  7298 ;; This function calls:
  7299 ;;		Nothing
  7300 ;; This function is called by:
  7301 ;;		_sprintf
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           
  7306                           ;psect for function ___fleq
  7307  1CC7                     ___fleq:
  7308  1CC7                     l3072:	
  7309                           ;incstack = 0
  7310                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7311                           
  7312  1CC7  3000               	movlw	0
  7313  1CC8  0570               	andwf	___fleq@ff1,w
  7314  1CC9  00F8               	movwf	??___fleq
  7315  1CCA  3000               	movlw	0
  7316  1CCB  0571               	andwf	___fleq@ff1+1,w
  7317  1CCC  00F9               	movwf	??___fleq+1
  7318  1CCD  3080               	movlw	128
  7319  1CCE  0572               	andwf	___fleq@ff1+2,w
  7320  1CCF  00FA               	movwf	??___fleq+2
  7321  1CD0  307F               	movlw	127
  7322  1CD1  0573               	andwf	___fleq@ff1+3,w
  7323  1CD2  00FB               	movwf	??___fleq+3
  7324  1CD3  087B               	movf	??___fleq+3,w
  7325  1CD4  047A               	iorwf	??___fleq+2,w
  7326  1CD5  0479               	iorwf	??___fleq+1,w
  7327  1CD6  0478               	iorwf	??___fleq,w
  7328  1CD7  1D03               	skipz
  7329  1CD8  2CDA               	goto	u4811
  7330  1CD9  2CDB               	goto	u4810
  7331  1CDA                     u4811:
  7332  1CDA  2CE3               	goto	l593
  7333  1CDB                     u4810:
  7334  1CDB                     l3074:
  7335  1CDB  3000               	movlw	0
  7336  1CDC  00F3               	movwf	___fleq@ff1+3
  7337  1CDD  3000               	movlw	0
  7338  1CDE  00F2               	movwf	___fleq@ff1+2
  7339  1CDF  3000               	movlw	0
  7340  1CE0  00F1               	movwf	___fleq@ff1+1
  7341  1CE1  3000               	movlw	0
  7342  1CE2  00F0               	movwf	___fleq@ff1
  7343  1CE3                     l593:
  7344  1CE3  3000               	movlw	0
  7345  1CE4  0574               	andwf	___fleq@ff2,w
  7346  1CE5  00F8               	movwf	??___fleq
  7347  1CE6  3000               	movlw	0
  7348  1CE7  0575               	andwf	___fleq@ff2+1,w
  7349  1CE8  00F9               	movwf	??___fleq+1
  7350  1CE9  3080               	movlw	128
  7351  1CEA  0576               	andwf	___fleq@ff2+2,w
  7352  1CEB  00FA               	movwf	??___fleq+2
  7353  1CEC  307F               	movlw	127
  7354  1CED  0577               	andwf	___fleq@ff2+3,w
  7355  1CEE  00FB               	movwf	??___fleq+3
  7356  1CEF  087B               	movf	??___fleq+3,w
  7357  1CF0  047A               	iorwf	??___fleq+2,w
  7358  1CF1  0479               	iorwf	??___fleq+1,w
  7359  1CF2  0478               	iorwf	??___fleq,w
  7360  1CF3  1D03               	skipz
  7361  1CF4  2CF6               	goto	u4821
  7362  1CF5  2CF7               	goto	u4820
  7363  1CF6                     u4821:
  7364  1CF6  2CFF               	goto	l594
  7365  1CF7                     u4820:
  7366  1CF7                     l3076:
  7367  1CF7  3000               	movlw	0
  7368  1CF8  00F7               	movwf	___fleq@ff2+3
  7369  1CF9  3000               	movlw	0
  7370  1CFA  00F6               	movwf	___fleq@ff2+2
  7371  1CFB  3000               	movlw	0
  7372  1CFC  00F5               	movwf	___fleq@ff2+1
  7373  1CFD  3000               	movlw	0
  7374  1CFE  00F4               	movwf	___fleq@ff2
  7375  1CFF                     l594:
  7376  1CFF  0877               	movf	___fleq@ff2+3,w
  7377  1D00  0673               	xorwf	___fleq@ff1+3,w
  7378  1D01  1D03               	skipz
  7379  1D02  2D0D               	goto	u4835
  7380  1D03  0876               	movf	___fleq@ff2+2,w
  7381  1D04  0672               	xorwf	___fleq@ff1+2,w
  7382  1D05  1D03               	skipz
  7383  1D06  2D0D               	goto	u4835
  7384  1D07  0875               	movf	___fleq@ff2+1,w
  7385  1D08  0671               	xorwf	___fleq@ff1+1,w
  7386  1D09  1D03               	skipz
  7387  1D0A  2D0D               	goto	u4835
  7388  1D0B  0874               	movf	___fleq@ff2,w
  7389  1D0C  0670               	xorwf	___fleq@ff1,w
  7390  1D0D                     u4835:
  7391  1D0D  1903               	skipnz
  7392  1D0E  2D10               	goto	u4831
  7393  1D0F  2D11               	goto	u4830
  7394  1D10                     u4831:
  7395  1D10  2D13               	goto	l3080
  7396  1D11                     u4830:
  7397  1D11                     l3078:
  7398  1D11  1003               	clrc
  7399  1D12  2D14               	goto	l595
  7400  1D13                     l3080:
  7401  1D13  1403               	setc
  7402  1D14                     l595:
  7403  1D14  0008               	return
  7404  1D15                     __end_of___fleq:
  7405                           
  7406                           	psect	text18
  7407  1A00                     __ptext18:	
  7408 ;; *************** function _setup *****************
  7409 ;; Defined at:
  7410 ;;		line 126 in file "main4a.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;		None
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;		None
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  1    wreg      void 
  7417 ;; Registers used:
  7418 ;;		wreg, status,2, status,0, pclath, cstack
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7424 ;;      Params:         0       0       0       0       0
  7425 ;;      Locals:         0       0       0       0       0
  7426 ;;      Temps:          0       0       0       0       0
  7427 ;;      Totals:         0       0       0       0       0
  7428 ;;Total ram usage:        0 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; Hardware stack levels required when called:    2
  7431 ;; This function calls:
  7432 ;;		_I2C_Master_Init
  7433 ;; This function is called by:
  7434 ;;		_main
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           
  7439                           ;psect for function _setup
  7440  1A00                     _setup:
  7441  1A00                     l3222:	
  7442                           ;incstack = 0
  7443                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  7444                           
  7445                           
  7446                           ;main4a.c: 127:     ANSEL = 0;
  7447  1A00  1683               	bsf	3,5	;RP0=1, select bank3
  7448  1A01  1703               	bsf	3,6	;RP1=1, select bank3
  7449  1A02  0188               	clrf	8	;volatile
  7450                           
  7451                           ;main4a.c: 128:     ANSELH = 0;
  7452  1A03  0189               	clrf	9	;volatile
  7453  1A04                     l3224:
  7454                           
  7455                           ;main4a.c: 129:     TRISCbits.TRISC0 = 0;
  7456  1A04  1683               	bsf	3,5	;RP0=1, select bank1
  7457  1A05  1303               	bcf	3,6	;RP1=0, select bank1
  7458  1A06  1007               	bcf	7,0	;volatile
  7459  1A07                     l3226:
  7460                           
  7461                           ;main4a.c: 130:     TRISCbits.TRISC1 = 0;
  7462  1A07  1087               	bcf	7,1	;volatile
  7463                           
  7464                           ;main4a.c: 131:     TRISB = 0;
  7465  1A08  0186               	clrf	6	;volatile
  7466                           
  7467                           ;main4a.c: 132:     TRISD = 0;
  7468  1A09  0188               	clrf	8	;volatile
  7469                           
  7470                           ;main4a.c: 133:     PORTB = 0;
  7471  1A0A  1283               	bcf	3,5	;RP0=0, select bank0
  7472  1A0B  1303               	bcf	3,6	;RP1=0, select bank0
  7473  1A0C  0186               	clrf	6	;volatile
  7474                           
  7475                           ;main4a.c: 134:     PORTD = 0;
  7476  1A0D  0188               	clrf	8	;volatile
  7477  1A0E                     l3228:
  7478                           
  7479                           ;main4a.c: 135:     I2C_Master_Init(100000);
  7480  1A0E  3000               	movlw	0
  7481  1A0F  00A3               	movwf	I2C_Master_Init@c+3
  7482  1A10  3001               	movlw	1
  7483  1A11  00A2               	movwf	I2C_Master_Init@c+2
  7484  1A12  3086               	movlw	134
  7485  1A13  00A1               	movwf	I2C_Master_Init@c+1
  7486  1A14  30A0               	movlw	160
  7487  1A15  00A0               	movwf	I2C_Master_Init@c
  7488  1A16  160A  158A  2307  160A  158A  	fcall	_I2C_Master_Init
  7489  1A1B                     l73:
  7490  1A1B  0008               	return
  7491  1A1C                     __end_of_setup:
  7492                           
  7493                           	psect	text19
  7494  1B07                     __ptext19:	
  7495 ;; *************** function _I2C_Master_Init *****************
  7496 ;; Defined at:
  7497 ;;		line 16 in file "I2C.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  c               4    0[BANK0 ] const unsigned long 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;		None
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      void 
  7504 ;; Registers used:
  7505 ;;		wreg, status,2, status,0, pclath, cstack
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7511 ;;      Params:         0       4       0       0       0
  7512 ;;      Locals:         0       0       0       0       0
  7513 ;;      Temps:          0       4       0       0       0
  7514 ;;      Totals:         0       8       0       0       0
  7515 ;;Total ram usage:        8 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    1
  7518 ;; This function calls:
  7519 ;;		___lldiv
  7520 ;; This function is called by:
  7521 ;;		_setup
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           
  7526                           ;psect for function _I2C_Master_Init
  7527  1B07                     _I2C_Master_Init:
  7528  1B07                     l2846:	
  7529                           ;incstack = 0
  7530                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  7531                           
  7532                           
  7533                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  7534  1B07  3028               	movlw	40
  7535  1B08  1283               	bcf	3,5	;RP0=0, select bank0
  7536  1B09  1303               	bcf	3,6	;RP1=0, select bank0
  7537  1B0A  0094               	movwf	20	;volatile
  7538  1B0B                     l2848:
  7539                           
  7540                           ;I2C.c: 19:     SSPCON2 = 0;
  7541  1B0B  1683               	bsf	3,5	;RP0=1, select bank1
  7542  1B0C  1303               	bcf	3,6	;RP1=0, select bank1
  7543  1B0D  0191               	clrf	17	;volatile
  7544  1B0E                     l2850:
  7545                           
  7546                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  7547  1B0E  1283               	bcf	3,5	;RP0=0, select bank0
  7548  1B0F  1303               	bcf	3,6	;RP1=0, select bank0
  7549  1B10  0820               	movf	I2C_Master_Init@c,w
  7550  1B11  00A4               	movwf	??_I2C_Master_Init
  7551  1B12  0821               	movf	I2C_Master_Init@c+1,w
  7552  1B13  00A5               	movwf	??_I2C_Master_Init+1
  7553  1B14  0822               	movf	I2C_Master_Init@c+2,w
  7554  1B15  00A6               	movwf	??_I2C_Master_Init+2
  7555  1B16  0823               	movf	I2C_Master_Init@c+3,w
  7556  1B17  00A7               	movwf	??_I2C_Master_Init+3
  7557  1B18  3002               	movlw	2
  7558  1B19                     u4215:
  7559  1B19  1003               	clrc
  7560  1B1A  0DA4               	rlf	??_I2C_Master_Init,f
  7561  1B1B  0DA5               	rlf	??_I2C_Master_Init+1,f
  7562  1B1C  0DA6               	rlf	??_I2C_Master_Init+2,f
  7563  1B1D  0DA7               	rlf	??_I2C_Master_Init+3,f
  7564  1B1E                     u4210:
  7565  1B1E  3EFF               	addlw	-1
  7566  1B1F  1D03               	skipz
  7567  1B20  2B19               	goto	u4215
  7568  1B21  0827               	movf	??_I2C_Master_Init+3,w
  7569  1B22  00F3               	movwf	___lldiv@divisor+3
  7570  1B23  0826               	movf	??_I2C_Master_Init+2,w
  7571  1B24  00F2               	movwf	___lldiv@divisor+2
  7572  1B25  0825               	movf	??_I2C_Master_Init+1,w
  7573  1B26  00F1               	movwf	___lldiv@divisor+1
  7574  1B27  0824               	movf	??_I2C_Master_Init,w
  7575  1B28  00F0               	movwf	___lldiv@divisor
  7576  1B29  3000               	movlw	0
  7577  1B2A  00F7               	movwf	___lldiv@dividend+3
  7578  1B2B  307A               	movlw	122
  7579  1B2C  00F6               	movwf	___lldiv@dividend+2
  7580  1B2D  3012               	movlw	18
  7581  1B2E  00F5               	movwf	___lldiv@dividend+1
  7582  1B2F  3000               	movlw	0
  7583  1B30  00F4               	movwf	___lldiv@dividend
  7584  1B31  160A  158A  25C2  160A  158A  	fcall	___lldiv
  7585  1B36  0870               	movf	?___lldiv,w
  7586  1B37  3EFF               	addlw	255
  7587  1B38  1683               	bsf	3,5	;RP0=1, select bank1
  7588  1B39  1303               	bcf	3,6	;RP1=0, select bank1
  7589  1B3A  0093               	movwf	19	;volatile
  7590  1B3B                     l2852:
  7591                           
  7592                           ;I2C.c: 21:     SSPSTAT = 0;
  7593  1B3B  0194               	clrf	20	;volatile
  7594  1B3C                     l2854:
  7595                           
  7596                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  7597  1B3C  1587               	bsf	7,3	;volatile
  7598  1B3D                     l2856:
  7599                           
  7600                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  7601  1B3D  1607               	bsf	7,4	;volatile
  7602  1B3E                     l114:
  7603  1B3E  0008               	return
  7604  1B3F                     __end_of_I2C_Master_Init:
  7605                           
  7606                           	psect	text20
  7607  1DC2                     __ptext20:	
  7608 ;; *************** function ___lldiv *****************
  7609 ;; Defined at:
  7610 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  divisor         4    0[COMMON] unsigned long 
  7613 ;;  dividend        4    4[COMMON] unsigned long 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;  quotient        4    9[COMMON] unsigned long 
  7616 ;;  counter         1   13[COMMON] unsigned char 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  4    0[COMMON] unsigned long 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7626 ;;      Params:         8       0       0       0       0
  7627 ;;      Locals:         5       0       0       0       0
  7628 ;;      Temps:          1       0       0       0       0
  7629 ;;      Totals:        14       0       0       0       0
  7630 ;;Total ram usage:       14 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; This function calls:
  7633 ;;		Nothing
  7634 ;; This function is called by:
  7635 ;;		_I2C_Master_Init
  7636 ;;		_sprintf
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           
  7641                           ;psect for function ___lldiv
  7642  1DC2                     ___lldiv:
  7643  1DC2                     l2358:	
  7644                           ;incstack = 0
  7645                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7646                           
  7647  1DC2  3000               	movlw	0
  7648  1DC3  00FC               	movwf	___lldiv@quotient+3
  7649  1DC4  3000               	movlw	0
  7650  1DC5  00FB               	movwf	___lldiv@quotient+2
  7651  1DC6  3000               	movlw	0
  7652  1DC7  00FA               	movwf	___lldiv@quotient+1
  7653  1DC8  3000               	movlw	0
  7654  1DC9  00F9               	movwf	___lldiv@quotient
  7655  1DCA  0873               	movf	___lldiv@divisor+3,w
  7656  1DCB  0472               	iorwf	___lldiv@divisor+2,w
  7657  1DCC  0471               	iorwf	___lldiv@divisor+1,w
  7658  1DCD  0470               	iorwf	___lldiv@divisor,w
  7659  1DCE  1903               	skipnz
  7660  1DCF  2DD1               	goto	u2991
  7661  1DD0  2DD2               	goto	u2990
  7662  1DD1                     u2991:
  7663  1DD1  2E1F               	goto	l2378
  7664  1DD2                     u2990:
  7665  1DD2                     l2360:
  7666  1DD2  01FD               	clrf	___lldiv@counter
  7667  1DD3  0AFD               	incf	___lldiv@counter,f
  7668  1DD4  2DE2               	goto	l2364
  7669  1DD5                     l2362:
  7670  1DD5  3001               	movlw	1
  7671  1DD6  00F8               	movwf	??___lldiv
  7672  1DD7                     u3005:
  7673  1DD7  1003               	clrc
  7674  1DD8  0DF0               	rlf	___lldiv@divisor,f
  7675  1DD9  0DF1               	rlf	___lldiv@divisor+1,f
  7676  1DDA  0DF2               	rlf	___lldiv@divisor+2,f
  7677  1DDB  0DF3               	rlf	___lldiv@divisor+3,f
  7678  1DDC  0BF8               	decfsz	??___lldiv,f
  7679  1DDD  2DD7               	goto	u3005
  7680  1DDE  3001               	movlw	1
  7681  1DDF  00F8               	movwf	??___lldiv
  7682  1DE0  0878               	movf	??___lldiv,w
  7683  1DE1  07FD               	addwf	___lldiv@counter,f
  7684  1DE2                     l2364:
  7685  1DE2  1FF3               	btfss	___lldiv@divisor+3,7
  7686  1DE3  2DE5               	goto	u3011
  7687  1DE4  2DE6               	goto	u3010
  7688  1DE5                     u3011:
  7689  1DE5  2DD5               	goto	l2362
  7690  1DE6                     u3010:
  7691  1DE6                     l2366:
  7692  1DE6  3001               	movlw	1
  7693  1DE7  00F8               	movwf	??___lldiv
  7694  1DE8                     u3025:
  7695  1DE8  1003               	clrc
  7696  1DE9  0DF9               	rlf	___lldiv@quotient,f
  7697  1DEA  0DFA               	rlf	___lldiv@quotient+1,f
  7698  1DEB  0DFB               	rlf	___lldiv@quotient+2,f
  7699  1DEC  0DFC               	rlf	___lldiv@quotient+3,f
  7700  1DED  0BF8               	decfsz	??___lldiv,f
  7701  1DEE  2DE8               	goto	u3025
  7702  1DEF                     l2368:
  7703  1DEF  0873               	movf	___lldiv@divisor+3,w
  7704  1DF0  0277               	subwf	___lldiv@dividend+3,w
  7705  1DF1  1D03               	skipz
  7706  1DF2  2DFD               	goto	u3035
  7707  1DF3  0872               	movf	___lldiv@divisor+2,w
  7708  1DF4  0276               	subwf	___lldiv@dividend+2,w
  7709  1DF5  1D03               	skipz
  7710  1DF6  2DFD               	goto	u3035
  7711  1DF7  0871               	movf	___lldiv@divisor+1,w
  7712  1DF8  0275               	subwf	___lldiv@dividend+1,w
  7713  1DF9  1D03               	skipz
  7714  1DFA  2DFD               	goto	u3035
  7715  1DFB  0870               	movf	___lldiv@divisor,w
  7716  1DFC  0274               	subwf	___lldiv@dividend,w
  7717  1DFD                     u3035:
  7718  1DFD  1C03               	skipc
  7719  1DFE  2E00               	goto	u3031
  7720  1DFF  2E01               	goto	u3030
  7721  1E00                     u3031:
  7722  1E00  2E10               	goto	l2374
  7723  1E01                     u3030:
  7724  1E01                     l2370:
  7725  1E01  0870               	movf	___lldiv@divisor,w
  7726  1E02  02F4               	subwf	___lldiv@dividend,f
  7727  1E03  0871               	movf	___lldiv@divisor+1,w
  7728  1E04  1C03               	skipc
  7729  1E05  0F71               	incfsz	___lldiv@divisor+1,w
  7730  1E06  02F5               	subwf	___lldiv@dividend+1,f
  7731  1E07  0872               	movf	___lldiv@divisor+2,w
  7732  1E08  1C03               	skipc
  7733  1E09  0F72               	incfsz	___lldiv@divisor+2,w
  7734  1E0A  02F6               	subwf	___lldiv@dividend+2,f
  7735  1E0B  0873               	movf	___lldiv@divisor+3,w
  7736  1E0C  1C03               	skipc
  7737  1E0D  0F73               	incfsz	___lldiv@divisor+3,w
  7738  1E0E  02F7               	subwf	___lldiv@dividend+3,f
  7739  1E0F                     l2372:
  7740  1E0F  1479               	bsf	___lldiv@quotient,0
  7741  1E10                     l2374:
  7742  1E10  3001               	movlw	1
  7743  1E11                     u3045:
  7744  1E11  1003               	clrc
  7745  1E12  0CF3               	rrf	___lldiv@divisor+3,f
  7746  1E13  0CF2               	rrf	___lldiv@divisor+2,f
  7747  1E14  0CF1               	rrf	___lldiv@divisor+1,f
  7748  1E15  0CF0               	rrf	___lldiv@divisor,f
  7749  1E16  3EFF               	addlw	-1
  7750  1E17  1D03               	skipz
  7751  1E18  2E11               	goto	u3045
  7752  1E19                     l2376:
  7753  1E19  3001               	movlw	1
  7754  1E1A  02FD               	subwf	___lldiv@counter,f
  7755  1E1B  1D03               	btfss	3,2
  7756  1E1C  2E1E               	goto	u3051
  7757  1E1D  2E1F               	goto	u3050
  7758  1E1E                     u3051:
  7759  1E1E  2DE6               	goto	l2366
  7760  1E1F                     u3050:
  7761  1E1F                     l2378:
  7762  1E1F  087C               	movf	___lldiv@quotient+3,w
  7763  1E20  00F3               	movwf	?___lldiv+3
  7764  1E21  087B               	movf	___lldiv@quotient+2,w
  7765  1E22  00F2               	movwf	?___lldiv+2
  7766  1E23  087A               	movf	___lldiv@quotient+1,w
  7767  1E24  00F1               	movwf	?___lldiv+1
  7768  1E25  0879               	movf	___lldiv@quotient,w
  7769  1E26  00F0               	movwf	?___lldiv
  7770  1E27                     l443:
  7771  1E27  0008               	return
  7772  1E28                     __end_of___lldiv:
  7773                           
  7774                           	psect	text21
  7775  1AB0                     __ptext21:	
  7776 ;; *************** function _conv3 *****************
  7777 ;; Defined at:
  7778 ;;		line 155 in file "main4a.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  aa              1    wreg     unsigned char 
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;  aa              1   12[BANK0 ] unsigned char 
  7783 ;;  result          4    8[BANK0 ] float 
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  4    0[BANK0 ] float 
  7786 ;; Registers used:
  7787 ;;		wreg, status,2, status,0, pclath, cstack
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7793 ;;      Params:         0       4       0       0       0
  7794 ;;      Locals:         0       5       0       0       0
  7795 ;;      Temps:          0       4       0       0       0
  7796 ;;      Totals:         0      13       0       0       0
  7797 ;;Total ram usage:       13 bytes
  7798 ;; Hardware stack levels used:    1
  7799 ;; Hardware stack levels required when called:    1
  7800 ;; This function calls:
  7801 ;;		___xxtofl
  7802 ;; This function is called by:
  7803 ;;		_main
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           
  7808                           ;psect for function _conv3
  7809  1AB0                     _conv3:
  7810                           
  7811                           ;incstack = 0
  7812                           ; Regs used in _conv3: [wreg+status,2+status,0+pclath+cstack]
  7813                           ;conv3@aa stored from wreg
  7814  1AB0  1283               	bcf	3,5	;RP0=0, select bank0
  7815  1AB1  1303               	bcf	3,6	;RP1=0, select bank0
  7816  1AB2  00AC               	movwf	conv3@aa
  7817  1AB3                     l3302:
  7818                           
  7819                           ;main4a.c: 156:     float result;;main4a.c: 157:     result = aa*1;
  7820  1AB3  082C               	movf	conv3@aa,w
  7821  1AB4  00A4               	movwf	??_conv3
  7822  1AB5  01A5               	clrf	??_conv3+1
  7823  1AB6  01A6               	clrf	??_conv3+2
  7824  1AB7  01A7               	clrf	??_conv3+3
  7825  1AB8  0827               	movf	??_conv3+3,w
  7826  1AB9  00F3               	movwf	___xxtofl@val+3
  7827  1ABA  0826               	movf	??_conv3+2,w
  7828  1ABB  00F2               	movwf	___xxtofl@val+2
  7829  1ABC  0825               	movf	??_conv3+1,w
  7830  1ABD  00F1               	movwf	___xxtofl@val+1
  7831  1ABE  0824               	movf	??_conv3,w
  7832  1ABF  00F0               	movwf	___xxtofl@val
  7833  1AC0  3001               	movlw	1
  7834  1AC1  160A  158A  2746  160A  158A  	fcall	___xxtofl
  7835  1AC6  0873               	movf	?___xxtofl+3,w
  7836  1AC7  1283               	bcf	3,5	;RP0=0, select bank0
  7837  1AC8  1303               	bcf	3,6	;RP1=0, select bank0
  7838  1AC9  00AB               	movwf	conv3@result+3
  7839  1ACA  0872               	movf	?___xxtofl+2,w
  7840  1ACB  00AA               	movwf	conv3@result+2
  7841  1ACC  0871               	movf	?___xxtofl+1,w
  7842  1ACD  00A9               	movwf	conv3@result+1
  7843  1ACE  0870               	movf	?___xxtofl,w
  7844  1ACF  00A8               	movwf	conv3@result
  7845  1AD0                     l3304:
  7846                           
  7847                           ;main4a.c: 158:     return result;
  7848  1AD0  082B               	movf	conv3@result+3,w
  7849  1AD1  00A3               	movwf	?_conv3+3
  7850  1AD2  082A               	movf	conv3@result+2,w
  7851  1AD3  00A2               	movwf	?_conv3+2
  7852  1AD4  0829               	movf	conv3@result+1,w
  7853  1AD5  00A1               	movwf	?_conv3+1
  7854  1AD6  0828               	movf	conv3@result,w
  7855  1AD7  00A0               	movwf	?_conv3
  7856  1AD8                     l85:
  7857  1AD8  0008               	return
  7858  1AD9                     __end_of_conv3:
  7859                           
  7860                           	psect	text22
  7861  08C7                     __ptext22:	
  7862 ;; *************** function _conv2 *****************
  7863 ;; Defined at:
  7864 ;;		line 150 in file "main4a.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  aa              1    wreg     unsigned char 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  aa              1    4[BANK1 ] unsigned char 
  7869 ;;  result          4    0[BANK1 ] unsigned char 
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  4   70[BANK0 ] unsigned char 
  7872 ;; Registers used:
  7873 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7879 ;;      Params:         0       4       0       0       0
  7880 ;;      Locals:         0       0       5       0       0
  7881 ;;      Temps:          0       4       0       0       0
  7882 ;;      Totals:         0       8       5       0       0
  7883 ;;Total ram usage:       13 bytes
  7884 ;; Hardware stack levels used:    1
  7885 ;; Hardware stack levels required when called:    2
  7886 ;; This function calls:
  7887 ;;		___fladd
  7888 ;;		___flmul
  7889 ;;		___xxtofl
  7890 ;; This function is called by:
  7891 ;;		_main
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           
  7896                           ;psect for function _conv2
  7897  08C7                     _conv2:
  7898                           
  7899                           ;incstack = 0
  7900                           ; Regs used in _conv2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7901                           ;conv2@aa stored from wreg
  7902  08C7  1683               	bsf	3,5	;RP0=1, select bank1
  7903  08C8  1303               	bcf	3,6	;RP1=0, select bank1
  7904  08C9  00A4               	movwf	conv2@aa^(0+128)
  7905  08CA                     l3290:
  7906                           
  7907                           ;main4a.c: 151:     double result;;main4a.c: 152:     result = (aa*0.62745)+233.15;
  7908  08CA  3043               	movlw	67
  7909  08CB  1283               	bcf	3,5	;RP0=0, select bank0
  7910  08CC  1303               	bcf	3,6	;RP1=0, select bank0
  7911  08CD  00D5               	movwf	___fladd@b+3
  7912  08CE  3069               	movlw	105
  7913  08CF  00D4               	movwf	___fladd@b+2
  7914  08D0  3026               	movlw	38
  7915  08D1  00D3               	movwf	___fladd@b+1
  7916  08D2  3066               	movlw	102
  7917  08D3  00D2               	movwf	___fladd@b
  7918  08D4  303F               	movlw	63
  7919  08D5  00A7               	movwf	___flmul@b+3
  7920  08D6  3020               	movlw	32
  7921  08D7  00A6               	movwf	___flmul@b+2
  7922  08D8  30A0               	movlw	160
  7923  08D9  00A5               	movwf	___flmul@b+1
  7924  08DA  3090               	movlw	144
  7925  08DB  00A4               	movwf	___flmul@b
  7926  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  7927  08DD  1303               	bcf	3,6	;RP1=0, select bank1
  7928  08DE  0824               	movf	conv2@aa^(0+128),w
  7929  08DF  1283               	bcf	3,5	;RP0=0, select bank0
  7930  08E0  1303               	bcf	3,6	;RP1=0, select bank0
  7931  08E1  00EA               	movwf	??_conv2
  7932  08E2  01EB               	clrf	??_conv2+1
  7933  08E3  01EC               	clrf	??_conv2+2
  7934  08E4  01ED               	clrf	??_conv2+3
  7935  08E5  086D               	movf	??_conv2+3,w
  7936  08E6  00F3               	movwf	___xxtofl@val+3
  7937  08E7  086C               	movf	??_conv2+2,w
  7938  08E8  00F2               	movwf	___xxtofl@val+2
  7939  08E9  086B               	movf	??_conv2+1,w
  7940  08EA  00F1               	movwf	___xxtofl@val+1
  7941  08EB  086A               	movf	??_conv2,w
  7942  08EC  00F0               	movwf	___xxtofl@val
  7943  08ED  3001               	movlw	1
  7944  08EE  160A  158A  2746  120A  158A  	fcall	___xxtofl
  7945  08F3  0873               	movf	?___xxtofl+3,w
  7946  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  7947  08F5  1303               	bcf	3,6	;RP1=0, select bank0
  7948  08F6  00AB               	movwf	___flmul@a+3
  7949  08F7  0872               	movf	?___xxtofl+2,w
  7950  08F8  00AA               	movwf	___flmul@a+2
  7951  08F9  0871               	movf	?___xxtofl+1,w
  7952  08FA  00A9               	movwf	___flmul@a+1
  7953  08FB  0870               	movf	?___xxtofl,w
  7954  08FC  00A8               	movwf	___flmul@a
  7955  08FD  120A  158A  249F  120A  158A  	fcall	___flmul
  7956  0902  1283               	bcf	3,5	;RP0=0, select bank0
  7957  0903  1303               	bcf	3,6	;RP1=0, select bank0
  7958  0904  0827               	movf	?___flmul+3,w
  7959  0905  00D9               	movwf	___fladd@a+3
  7960  0906  0826               	movf	?___flmul+2,w
  7961  0907  00D8               	movwf	___fladd@a+2
  7962  0908  0825               	movf	?___flmul+1,w
  7963  0909  00D7               	movwf	___fladd@a+1
  7964  090A  0824               	movf	?___flmul,w
  7965  090B  00D6               	movwf	___fladd@a
  7966  090C  160A  118A  2578  120A  158A  	fcall	___fladd
  7967  0911  1283               	bcf	3,5	;RP0=0, select bank0
  7968  0912  1303               	bcf	3,6	;RP1=0, select bank0
  7969  0913  0855               	movf	?___fladd+3,w
  7970  0914  1683               	bsf	3,5	;RP0=1, select bank1
  7971  0915  1303               	bcf	3,6	;RP1=0, select bank1
  7972  0916  00A3               	movwf	(conv2@result+3)^(0+128)
  7973  0917  1283               	bcf	3,5	;RP0=0, select bank0
  7974  0918  1303               	bcf	3,6	;RP1=0, select bank0
  7975  0919  0854               	movf	?___fladd+2,w
  7976  091A  1683               	bsf	3,5	;RP0=1, select bank1
  7977  091B  1303               	bcf	3,6	;RP1=0, select bank1
  7978  091C  00A2               	movwf	(conv2@result+2)^(0+128)
  7979  091D  1283               	bcf	3,5	;RP0=0, select bank0
  7980  091E  1303               	bcf	3,6	;RP1=0, select bank0
  7981  091F  0853               	movf	?___fladd+1,w
  7982  0920  1683               	bsf	3,5	;RP0=1, select bank1
  7983  0921  1303               	bcf	3,6	;RP1=0, select bank1
  7984  0922  00A1               	movwf	(conv2@result+1)^(0+128)
  7985  0923  1283               	bcf	3,5	;RP0=0, select bank0
  7986  0924  1303               	bcf	3,6	;RP1=0, select bank0
  7987  0925  0852               	movf	?___fladd,w
  7988  0926  1683               	bsf	3,5	;RP0=1, select bank1
  7989  0927  1303               	bcf	3,6	;RP1=0, select bank1
  7990  0928  00A0               	movwf	conv2@result^(0+128)
  7991  0929                     l3292:
  7992                           
  7993                           ;main4a.c: 153:     return result;
  7994  0929  0823               	movf	(conv2@result+3)^(0+128),w
  7995  092A  1283               	bcf	3,5	;RP0=0, select bank0
  7996  092B  1303               	bcf	3,6	;RP1=0, select bank0
  7997  092C  00E9               	movwf	?_conv2+3
  7998  092D  1683               	bsf	3,5	;RP0=1, select bank1
  7999  092E  1303               	bcf	3,6	;RP1=0, select bank1
  8000  092F  0822               	movf	(conv2@result+2)^(0+128),w
  8001  0930  1283               	bcf	3,5	;RP0=0, select bank0
  8002  0931  1303               	bcf	3,6	;RP1=0, select bank0
  8003  0932  00E8               	movwf	?_conv2+2
  8004  0933  1683               	bsf	3,5	;RP0=1, select bank1
  8005  0934  1303               	bcf	3,6	;RP1=0, select bank1
  8006  0935  0821               	movf	(conv2@result+1)^(0+128),w
  8007  0936  1283               	bcf	3,5	;RP0=0, select bank0
  8008  0937  1303               	bcf	3,6	;RP1=0, select bank0
  8009  0938  00E7               	movwf	?_conv2+1
  8010  0939  1683               	bsf	3,5	;RP0=1, select bank1
  8011  093A  1303               	bcf	3,6	;RP1=0, select bank1
  8012  093B  0820               	movf	conv2@result^(0+128),w
  8013  093C  1283               	bcf	3,5	;RP0=0, select bank0
  8014  093D  1303               	bcf	3,6	;RP1=0, select bank0
  8015  093E  00E6               	movwf	?_conv2
  8016  093F                     l82:
  8017  093F  0008               	return
  8018  0940                     __end_of_conv2:
  8019                           
  8020                           	psect	text23
  8021  1578                     __ptext23:	
  8022 ;; *************** function ___fladd *****************
  8023 ;; Defined at:
  8024 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;  b               4   50[BANK0 ] unsigned char 
  8027 ;;  a               4   54[BANK0 ] unsigned char 
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;  grs             1   69[BANK0 ] unsigned char 
  8030 ;;  bexp            1   68[BANK0 ] unsigned char 
  8031 ;;  aexp            1   67[BANK0 ] unsigned char 
  8032 ;;  signs           1   66[BANK0 ] unsigned char 
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  4   50[BANK0 ] unsigned char 
  8035 ;; Registers used:
  8036 ;;		wreg, status,2, status,0, btemp+1
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8042 ;;      Params:         0       8       0       0       0
  8043 ;;      Locals:         0       4       0       0       0
  8044 ;;      Temps:          0       8       0       0       0
  8045 ;;      Totals:         0      20       0       0       0
  8046 ;;Total ram usage:       20 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; This function calls:
  8049 ;;		Nothing
  8050 ;; This function is called by:
  8051 ;;		_conv2
  8052 ;;		_sprintf
  8053 ;;		___flsub
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           
  8058                           ;psect for function ___fladd
  8059  1578                     ___fladd:
  8060  1578                     l2512:	
  8061                           ;incstack = 0
  8062                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8063                           
  8064  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8065  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8066  157A  0855               	movf	___fladd@b+3,w
  8067  157B  3980               	andlw	128
  8068  157C  00DA               	movwf	??___fladd
  8069  157D  085A               	movf	??___fladd,w
  8070  157E  00E2               	movwf	___fladd@signs
  8071  157F                     l2514:
  8072  157F  0855               	movf	___fladd@b+3,w
  8073  1580  00DA               	movwf	??___fladd
  8074  1581  075A               	addwf	??___fladd,w
  8075  1582  00DB               	movwf	??___fladd+1
  8076  1583  085B               	movf	??___fladd+1,w
  8077  1584  00E4               	movwf	___fladd@bexp
  8078  1585                     l2516:
  8079  1585  1FD4               	btfss	___fladd@b+2,7
  8080  1586  2D88               	goto	u3381
  8081  1587  2D89               	goto	u3380
  8082  1588                     u3381:
  8083  1588  2D8A               	goto	l2520
  8084  1589                     u3380:
  8085  1589                     l2518:
  8086  1589  1464               	bsf	___fladd@bexp,0
  8087  158A                     l2520:
  8088  158A  0864               	movf	___fladd@bexp,w
  8089  158B  1903               	btfsc	3,2
  8090  158C  2D8E               	goto	u3391
  8091  158D  2D8F               	goto	u3390
  8092  158E                     u3391:
  8093  158E  2D9F               	goto	l2530
  8094  158F                     u3390:
  8095  158F                     l2522:
  8096  158F  0A64               	incf	___fladd@bexp,w
  8097  1590  1D03               	btfss	3,2
  8098  1591  2D93               	goto	u3401
  8099  1592  2D94               	goto	u3400
  8100  1593                     u3401:
  8101  1593  2D9C               	goto	l2526
  8102  1594                     u3400:
  8103  1594                     l2524:
  8104  1594  3000               	movlw	0
  8105  1595  00D5               	movwf	___fladd@b+3
  8106  1596  3000               	movlw	0
  8107  1597  00D4               	movwf	___fladd@b+2
  8108  1598  3000               	movlw	0
  8109  1599  00D3               	movwf	___fladd@b+1
  8110  159A  3000               	movlw	0
  8111  159B  00D2               	movwf	___fladd@b
  8112  159C                     l2526:
  8113  159C  17D4               	bsf	___fladd@b+2,7
  8114  159D                     l2528:
  8115  159D  01D5               	clrf	___fladd@b+3
  8116  159E  2DA7               	goto	l2532
  8117  159F                     l2530:
  8118  159F  3000               	movlw	0
  8119  15A0  00D5               	movwf	___fladd@b+3
  8120  15A1  3000               	movlw	0
  8121  15A2  00D4               	movwf	___fladd@b+2
  8122  15A3  3000               	movlw	0
  8123  15A4  00D3               	movwf	___fladd@b+1
  8124  15A5  3000               	movlw	0
  8125  15A6  00D2               	movwf	___fladd@b
  8126  15A7                     l2532:
  8127  15A7  0859               	movf	___fladd@a+3,w
  8128  15A8  3980               	andlw	128
  8129  15A9  00DA               	movwf	??___fladd
  8130  15AA  085A               	movf	??___fladd,w
  8131  15AB  00E3               	movwf	___fladd@aexp
  8132  15AC                     l2534:
  8133  15AC  0863               	movf	___fladd@aexp,w
  8134  15AD  0662               	xorwf	___fladd@signs,w
  8135  15AE  1903               	skipnz
  8136  15AF  2DB1               	goto	u3411
  8137  15B0  2DB2               	goto	u3410
  8138  15B1                     u3411:
  8139  15B1  2DB3               	goto	l2538
  8140  15B2                     u3410:
  8141  15B2                     l2536:
  8142  15B2  1762               	bsf	___fladd@signs,6
  8143  15B3                     l2538:
  8144  15B3  0859               	movf	___fladd@a+3,w
  8145  15B4  00DA               	movwf	??___fladd
  8146  15B5  075A               	addwf	??___fladd,w
  8147  15B6  00DB               	movwf	??___fladd+1
  8148  15B7  085B               	movf	??___fladd+1,w
  8149  15B8  00E3               	movwf	___fladd@aexp
  8150  15B9                     l2540:
  8151  15B9  1FD8               	btfss	___fladd@a+2,7
  8152  15BA  2DBC               	goto	u3421
  8153  15BB  2DBD               	goto	u3420
  8154  15BC                     u3421:
  8155  15BC  2DBE               	goto	l2544
  8156  15BD                     u3420:
  8157  15BD                     l2542:
  8158  15BD  1463               	bsf	___fladd@aexp,0
  8159  15BE                     l2544:
  8160  15BE  0863               	movf	___fladd@aexp,w
  8161  15BF  1903               	btfsc	3,2
  8162  15C0  2DC2               	goto	u3431
  8163  15C1  2DC3               	goto	u3430
  8164  15C2                     u3431:
  8165  15C2  2DD3               	goto	l2554
  8166  15C3                     u3430:
  8167  15C3                     l2546:
  8168  15C3  0A63               	incf	___fladd@aexp,w
  8169  15C4  1D03               	btfss	3,2
  8170  15C5  2DC7               	goto	u3441
  8171  15C6  2DC8               	goto	u3440
  8172  15C7                     u3441:
  8173  15C7  2DD0               	goto	l2550
  8174  15C8                     u3440:
  8175  15C8                     l2548:
  8176  15C8  3000               	movlw	0
  8177  15C9  00D9               	movwf	___fladd@a+3
  8178  15CA  3000               	movlw	0
  8179  15CB  00D8               	movwf	___fladd@a+2
  8180  15CC  3000               	movlw	0
  8181  15CD  00D7               	movwf	___fladd@a+1
  8182  15CE  3000               	movlw	0
  8183  15CF  00D6               	movwf	___fladd@a
  8184  15D0                     l2550:
  8185  15D0  17D8               	bsf	___fladd@a+2,7
  8186  15D1                     l2552:
  8187  15D1  01D9               	clrf	___fladd@a+3
  8188  15D2  2DDB               	goto	l734
  8189  15D3                     l2554:
  8190  15D3  3000               	movlw	0
  8191  15D4  00D9               	movwf	___fladd@a+3
  8192  15D5  3000               	movlw	0
  8193  15D6  00D8               	movwf	___fladd@a+2
  8194  15D7  3000               	movlw	0
  8195  15D8  00D7               	movwf	___fladd@a+1
  8196  15D9  3000               	movlw	0
  8197  15DA  00D6               	movwf	___fladd@a
  8198  15DB                     l734:
  8199  15DB  0864               	movf	___fladd@bexp,w
  8200  15DC  0263               	subwf	___fladd@aexp,w
  8201  15DD  1803               	skipnc
  8202  15DE  2DE0               	goto	u3451
  8203  15DF  2DE1               	goto	u3450
  8204  15E0                     u3451:
  8205  15E0  2E25               	goto	l2590
  8206  15E1                     u3450:
  8207  15E1                     l2556:
  8208  15E1  1F62               	btfss	___fladd@signs,6
  8209  15E2  2DE4               	goto	u3461
  8210  15E3  2DE5               	goto	u3460
  8211  15E4                     u3461:
  8212  15E4  2DE9               	goto	l2560
  8213  15E5                     u3460:
  8214  15E5                     l2558:
  8215  15E5  3080               	movlw	128
  8216  15E6  00DA               	movwf	??___fladd
  8217  15E7  085A               	movf	??___fladd,w
  8218  15E8  06E2               	xorwf	___fladd@signs,f
  8219  15E9                     l2560:
  8220  15E9  0864               	movf	___fladd@bexp,w
  8221  15EA  00DA               	movwf	??___fladd
  8222  15EB  085A               	movf	??___fladd,w
  8223  15EC  00E5               	movwf	___fladd@grs
  8224  15ED                     l2562:
  8225  15ED  0863               	movf	___fladd@aexp,w
  8226  15EE  00DA               	movwf	??___fladd
  8227  15EF  085A               	movf	??___fladd,w
  8228  15F0  00E4               	movwf	___fladd@bexp
  8229  15F1                     l2564:
  8230  15F1  0865               	movf	___fladd@grs,w
  8231  15F2  00DA               	movwf	??___fladd
  8232  15F3  085A               	movf	??___fladd,w
  8233  15F4  00E3               	movwf	___fladd@aexp
  8234  15F5                     l2566:
  8235  15F5  0852               	movf	___fladd@b,w
  8236  15F6  00DA               	movwf	??___fladd
  8237  15F7  085A               	movf	??___fladd,w
  8238  15F8  00E5               	movwf	___fladd@grs
  8239  15F9                     l2568:
  8240  15F9  0856               	movf	___fladd@a,w
  8241  15FA  00DA               	movwf	??___fladd
  8242  15FB  085A               	movf	??___fladd,w
  8243  15FC  00D2               	movwf	___fladd@b
  8244  15FD                     l2570:
  8245  15FD  0865               	movf	___fladd@grs,w
  8246  15FE  00DA               	movwf	??___fladd
  8247  15FF  085A               	movf	??___fladd,w
  8248  1600  00D6               	movwf	___fladd@a
  8249  1601                     l2572:
  8250  1601  0853               	movf	___fladd@b+1,w
  8251  1602  00DA               	movwf	??___fladd
  8252  1603  085A               	movf	??___fladd,w
  8253  1604  00E5               	movwf	___fladd@grs
  8254  1605                     l2574:
  8255  1605  0857               	movf	___fladd@a+1,w
  8256  1606  00DA               	movwf	??___fladd
  8257  1607  085A               	movf	??___fladd,w
  8258  1608  00D3               	movwf	___fladd@b+1
  8259  1609                     l2576:
  8260  1609  0865               	movf	___fladd@grs,w
  8261  160A  00DA               	movwf	??___fladd
  8262  160B  085A               	movf	??___fladd,w
  8263  160C  00D7               	movwf	___fladd@a+1
  8264  160D                     l2578:
  8265  160D  0854               	movf	___fladd@b+2,w
  8266  160E  00DA               	movwf	??___fladd
  8267  160F  085A               	movf	??___fladd,w
  8268  1610  00E5               	movwf	___fladd@grs
  8269  1611                     l2580:
  8270  1611  0858               	movf	___fladd@a+2,w
  8271  1612  00DA               	movwf	??___fladd
  8272  1613  085A               	movf	??___fladd,w
  8273  1614  00D4               	movwf	___fladd@b+2
  8274  1615                     l2582:
  8275  1615  0865               	movf	___fladd@grs,w
  8276  1616  00DA               	movwf	??___fladd
  8277  1617  085A               	movf	??___fladd,w
  8278  1618  00D8               	movwf	___fladd@a+2
  8279  1619                     l2584:
  8280  1619  0855               	movf	___fladd@b+3,w
  8281  161A  00DA               	movwf	??___fladd
  8282  161B  085A               	movf	??___fladd,w
  8283  161C  00E5               	movwf	___fladd@grs
  8284  161D                     l2586:
  8285  161D  0859               	movf	___fladd@a+3,w
  8286  161E  00DA               	movwf	??___fladd
  8287  161F  085A               	movf	??___fladd,w
  8288  1620  00D5               	movwf	___fladd@b+3
  8289  1621                     l2588:
  8290  1621  0865               	movf	___fladd@grs,w
  8291  1622  00DA               	movwf	??___fladd
  8292  1623  085A               	movf	??___fladd,w
  8293  1624  00D9               	movwf	___fladd@a+3
  8294  1625                     l2590:
  8295  1625  01E5               	clrf	___fladd@grs
  8296  1626                     l2592:
  8297  1626  0863               	movf	___fladd@aexp,w
  8298  1627  00DA               	movwf	??___fladd
  8299  1628  01DB               	clrf	??___fladd+1
  8300  1629  085B               	movf	??___fladd+1,w
  8301  162A  00DD               	movwf	??___fladd+3
  8302  162B  0864               	movf	___fladd@bexp,w
  8303  162C  025A               	subwf	??___fladd,w
  8304  162D  00DC               	movwf	??___fladd+2
  8305  162E  1C03               	skipc
  8306  162F  03DD               	decf	??___fladd+3,f
  8307  1630  085D               	movf	??___fladd+3,w
  8308  1631  3A80               	xorlw	128
  8309  1632  00FF               	movwf	btemp+1
  8310  1633  3080               	movlw	128
  8311  1634  027F               	subwf	btemp+1,w
  8312  1635  1D03               	skipz
  8313  1636  2E39               	goto	u3475
  8314  1637  301A               	movlw	26
  8315  1638  025C               	subwf	??___fladd+2,w
  8316  1639                     u3475:
  8317  1639  1C03               	skipc
  8318  163A  2E3C               	goto	u3471
  8319  163B  2E3D               	goto	u3470
  8320  163C                     u3471:
  8321  163C  2E7A               	goto	l2608
  8322  163D                     u3470:
  8323  163D                     l2594:
  8324  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8325  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8326  163F  0855               	movf	___fladd@b+3,w
  8327  1640  0454               	iorwf	___fladd@b+2,w
  8328  1641  0453               	iorwf	___fladd@b+1,w
  8329  1642  0452               	iorwf	___fladd@b,w
  8330  1643  1D03               	skipz
  8331  1644  2E46               	goto	u3481
  8332  1645  2E48               	goto	u3480
  8333  1646                     u3481:
  8334  1646  3001               	movlw	1
  8335  1647  2E49               	goto	u3490
  8336  1648                     u3480:
  8337  1648  3000               	movlw	0
  8338  1649                     u3490:
  8339  1649  00DA               	movwf	??___fladd
  8340  164A  085A               	movf	??___fladd,w
  8341  164B  00E5               	movwf	___fladd@grs
  8342  164C  3000               	movlw	0
  8343  164D  00D5               	movwf	___fladd@b+3
  8344  164E  3000               	movlw	0
  8345  164F  00D4               	movwf	___fladd@b+2
  8346  1650  3000               	movlw	0
  8347  1651  00D3               	movwf	___fladd@b+1
  8348  1652  3000               	movlw	0
  8349  1653  00D2               	movwf	___fladd@b
  8350  1654  0863               	movf	___fladd@aexp,w
  8351  1655  00DA               	movwf	??___fladd
  8352  1656  085A               	movf	??___fladd,w
  8353  1657  00E4               	movwf	___fladd@bexp
  8354  1658  2E82               	goto	l738
  8355  1659                     l740:
  8356  1659  1C65               	btfss	___fladd@grs,0
  8357  165A  2E5C               	goto	u3501
  8358  165B  2E5D               	goto	u3500
  8359  165C                     u3501:
  8360  165C  2E66               	goto	l2598
  8361  165D                     u3500:
  8362  165D                     l2596:
  8363  165D  0865               	movf	___fladd@grs,w
  8364  165E  00DA               	movwf	??___fladd
  8365  165F  1003               	clrc
  8366  1660  0C5A               	rrf	??___fladd,w
  8367  1661  3801               	iorlw	1
  8368  1662  00DB               	movwf	??___fladd+1
  8369  1663  085B               	movf	??___fladd+1,w
  8370  1664  00E5               	movwf	___fladd@grs
  8371  1665  2E68               	goto	l2600
  8372  1666                     l2598:
  8373  1666  1003               	clrc
  8374  1667  0CE5               	rrf	___fladd@grs,f
  8375  1668                     l2600:
  8376  1668  1C52               	btfss	___fladd@b,0
  8377  1669  2E6B               	goto	u3511
  8378  166A  2E6C               	goto	u3510
  8379  166B                     u3511:
  8380  166B  2E6D               	goto	l2604
  8381  166C                     u3510:
  8382  166C                     l2602:
  8383  166C  17E5               	bsf	___fladd@grs,7
  8384  166D                     l2604:
  8385  166D  3001               	movlw	1
  8386  166E  00DA               	movwf	??___fladd
  8387  166F                     u3525:
  8388  166F  0D55               	rlf	___fladd@b+3,w
  8389  1670  0CD5               	rrf	___fladd@b+3,f
  8390  1671  0CD4               	rrf	___fladd@b+2,f
  8391  1672  0CD3               	rrf	___fladd@b+1,f
  8392  1673  0CD2               	rrf	___fladd@b,f
  8393  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8394  1675  2E6F               	goto	u3525
  8395  1676                     l2606:
  8396  1676  3001               	movlw	1
  8397  1677  00DA               	movwf	??___fladd
  8398  1678  085A               	movf	??___fladd,w
  8399  1679  07E4               	addwf	___fladd@bexp,f
  8400  167A                     l2608:
  8401  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8402  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8403  167C  0863               	movf	___fladd@aexp,w
  8404  167D  0264               	subwf	___fladd@bexp,w
  8405  167E  1C03               	skipc
  8406  167F  2E81               	goto	u3531
  8407  1680  2E82               	goto	u3530
  8408  1681                     u3531:
  8409  1681  2E59               	goto	l740
  8410  1682                     u3530:
  8411  1682                     l738:
  8412  1682  1B62               	btfsc	___fladd@signs,6
  8413  1683  2E85               	goto	u3541
  8414  1684  2E86               	goto	u3540
  8415  1685                     u3541:
  8416  1685  2ED1               	goto	l2634
  8417  1686                     u3540:
  8418  1686                     l2610:
  8419  1686  0864               	movf	___fladd@bexp,w
  8420  1687  1D03               	btfss	3,2
  8421  1688  2E8A               	goto	u3551
  8422  1689  2E8B               	goto	u3550
  8423  168A                     u3551:
  8424  168A  2E94               	goto	l2616
  8425  168B                     u3550:
  8426  168B                     l2612:
  8427  168B  3000               	movlw	0
  8428  168C  00D5               	movwf	?___fladd+3
  8429  168D  3000               	movlw	0
  8430  168E  00D4               	movwf	?___fladd+2
  8431  168F  3000               	movlw	0
  8432  1690  00D3               	movwf	?___fladd+1
  8433  1691  3000               	movlw	0
  8434  1692  00D2               	movwf	?___fladd
  8435  1693  2FFF               	goto	l747
  8436  1694                     l2616:
  8437  1694  0856               	movf	___fladd@a,w
  8438  1695  07D2               	addwf	___fladd@b,f
  8439  1696  0857               	movf	___fladd@a+1,w
  8440  1697  1103               	clrz
  8441  1698  1803               	skipnc
  8442  1699  3E01               	addlw	1
  8443  169A  1903               	skipnz
  8444  169B  2E9D               	goto	u3561
  8445  169C  07D3               	addwf	___fladd@b+1,f
  8446  169D                     u3561:
  8447  169D  0858               	movf	___fladd@a+2,w
  8448  169E  1103               	clrz
  8449  169F  1803               	skipnc
  8450  16A0  3E01               	addlw	1
  8451  16A1  1903               	skipnz
  8452  16A2  2EA4               	goto	u3562
  8453  16A3  07D4               	addwf	___fladd@b+2,f
  8454  16A4                     u3562:
  8455  16A4  0859               	movf	___fladd@a+3,w
  8456  16A5  1103               	clrz
  8457  16A6  1803               	skipnc
  8458  16A7  3E01               	addlw	1
  8459  16A8  1903               	skipnz
  8460  16A9  2EAB               	goto	u3563
  8461  16AA  07D5               	addwf	___fladd@b+3,f
  8462  16AB                     u3563:
  8463  16AB                     l2618:
  8464  16AB  1C55               	btfss	___fladd@b+3,0
  8465  16AC  2EAE               	goto	u3571
  8466  16AD  2EAF               	goto	u3570
  8467  16AE                     u3571:
  8468  16AE  2F85               	goto	l2668
  8469  16AF                     u3570:
  8470  16AF                     l2620:
  8471  16AF  1C65               	btfss	___fladd@grs,0
  8472  16B0  2EB2               	goto	u3581
  8473  16B1  2EB3               	goto	u3580
  8474  16B2                     u3581:
  8475  16B2  2EBC               	goto	l2624
  8476  16B3                     u3580:
  8477  16B3                     l2622:
  8478  16B3  0865               	movf	___fladd@grs,w
  8479  16B4  00DA               	movwf	??___fladd
  8480  16B5  1003               	clrc
  8481  16B6  0C5A               	rrf	??___fladd,w
  8482  16B7  3801               	iorlw	1
  8483  16B8  00DB               	movwf	??___fladd+1
  8484  16B9  085B               	movf	??___fladd+1,w
  8485  16BA  00E5               	movwf	___fladd@grs
  8486  16BB  2EBE               	goto	l2626
  8487  16BC                     l2624:
  8488  16BC  1003               	clrc
  8489  16BD  0CE5               	rrf	___fladd@grs,f
  8490  16BE                     l2626:
  8491  16BE  1C52               	btfss	___fladd@b,0
  8492  16BF  2EC1               	goto	u3591
  8493  16C0  2EC2               	goto	u3590
  8494  16C1                     u3591:
  8495  16C1  2EC3               	goto	l2630
  8496  16C2                     u3590:
  8497  16C2                     l2628:
  8498  16C2  17E5               	bsf	___fladd@grs,7
  8499  16C3                     l2630:
  8500  16C3  3001               	movlw	1
  8501  16C4  00DA               	movwf	??___fladd
  8502  16C5                     u3605:
  8503  16C5  0D55               	rlf	___fladd@b+3,w
  8504  16C6  0CD5               	rrf	___fladd@b+3,f
  8505  16C7  0CD4               	rrf	___fladd@b+2,f
  8506  16C8  0CD3               	rrf	___fladd@b+1,f
  8507  16C9  0CD2               	rrf	___fladd@b,f
  8508  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8509  16CB  2EC5               	goto	u3605
  8510  16CC                     l2632:
  8511  16CC  3001               	movlw	1
  8512  16CD  00DA               	movwf	??___fladd
  8513  16CE  085A               	movf	??___fladd,w
  8514  16CF  07E4               	addwf	___fladd@bexp,f
  8515  16D0  2F85               	goto	l2668
  8516  16D1                     l2634:
  8517  16D1  0855               	movf	___fladd@b+3,w
  8518  16D2  3A80               	xorlw	128
  8519  16D3  00FF               	movwf	btemp+1
  8520  16D4  0859               	movf	___fladd@a+3,w
  8521  16D5  3A80               	xorlw	128
  8522  16D6  027F               	subwf	btemp+1,w
  8523  16D7  1D03               	skipz
  8524  16D8  2EE3               	goto	u3613
  8525  16D9  0858               	movf	___fladd@a+2,w
  8526  16DA  0254               	subwf	___fladd@b+2,w
  8527  16DB  1D03               	skipz
  8528  16DC  2EE3               	goto	u3613
  8529  16DD  0857               	movf	___fladd@a+1,w
  8530  16DE  0253               	subwf	___fladd@b+1,w
  8531  16DF  1D03               	skipz
  8532  16E0  2EE3               	goto	u3613
  8533  16E1  0856               	movf	___fladd@a,w
  8534  16E2  0252               	subwf	___fladd@b,w
  8535  16E3                     u3613:
  8536  16E3  1803               	skipnc
  8537  16E4  2EE6               	goto	u3611
  8538  16E5  2EE7               	goto	u3610
  8539  16E6                     u3611:
  8540  16E6  2F3F               	goto	l2644
  8541  16E7                     u3610:
  8542  16E7                     l2636:
  8543  16E7  30FF               	movlw	255
  8544  16E8  00DA               	movwf	??___fladd
  8545  16E9  30FF               	movlw	255
  8546  16EA  00DB               	movwf	??___fladd+1
  8547  16EB  30FF               	movlw	255
  8548  16EC  00DC               	movwf	??___fladd+2
  8549  16ED  30FF               	movlw	255
  8550  16EE  00DD               	movwf	??___fladd+3
  8551  16EF  0856               	movf	___fladd@a,w
  8552  16F0  00DE               	movwf	??___fladd+4
  8553  16F1  0857               	movf	___fladd@a+1,w
  8554  16F2  00DF               	movwf	??___fladd+5
  8555  16F3  0858               	movf	___fladd@a+2,w
  8556  16F4  00E0               	movwf	??___fladd+6
  8557  16F5  0859               	movf	___fladd@a+3,w
  8558  16F6  00E1               	movwf	??___fladd+7
  8559  16F7  0852               	movf	___fladd@b,w
  8560  16F8  02DE               	subwf	??___fladd+4,f
  8561  16F9  0853               	movf	___fladd@b+1,w
  8562  16FA  1C03               	skipc
  8563  16FB  0F53               	incfsz	___fladd@b+1,w
  8564  16FC  2EFE               	goto	u3621
  8565  16FD  2EFF               	goto	u3622
  8566  16FE                     u3621:
  8567  16FE  02DF               	subwf	??___fladd+5,f
  8568  16FF                     u3622:
  8569  16FF  0854               	movf	___fladd@b+2,w
  8570  1700  1C03               	skipc
  8571  1701  0F54               	incfsz	___fladd@b+2,w
  8572  1702  2F04               	goto	u3623
  8573  1703  2F05               	goto	u3624
  8574  1704                     u3623:
  8575  1704  02E0               	subwf	??___fladd+6,f
  8576  1705                     u3624:
  8577  1705  0855               	movf	___fladd@b+3,w
  8578  1706  1C03               	skipc
  8579  1707  0F55               	incfsz	___fladd@b+3,w
  8580  1708  2F0A               	goto	u3625
  8581  1709  2F0B               	goto	u3626
  8582  170A                     u3625:
  8583  170A  02E1               	subwf	??___fladd+7,f
  8584  170B                     u3626:
  8585  170B  085E               	movf	??___fladd+4,w
  8586  170C  07DA               	addwf	??___fladd,f
  8587  170D  085F               	movf	??___fladd+5,w
  8588  170E  1803               	skipnc
  8589  170F  0F5F               	incfsz	??___fladd+5,w
  8590  1710  2F12               	goto	u3630
  8591  1711  2F13               	goto	u3631
  8592  1712                     u3630:
  8593  1712  07DB               	addwf	??___fladd+1,f
  8594  1713                     u3631:
  8595  1713  0860               	movf	??___fladd+6,w
  8596  1714  1803               	skipnc
  8597  1715  0F60               	incfsz	??___fladd+6,w
  8598  1716  2F18               	goto	u3632
  8599  1717  2F19               	goto	u3633
  8600  1718                     u3632:
  8601  1718  07DC               	addwf	??___fladd+2,f
  8602  1719                     u3633:
  8603  1719  0861               	movf	??___fladd+7,w
  8604  171A  1803               	skipnc
  8605  171B  0A61               	incf	??___fladd+7,w
  8606  171C  07DD               	addwf	??___fladd+3,f
  8607  171D  085D               	movf	??___fladd+3,w
  8608  171E  00D5               	movwf	___fladd@b+3
  8609  171F  085C               	movf	??___fladd+2,w
  8610  1720  00D4               	movwf	___fladd@b+2
  8611  1721  085B               	movf	??___fladd+1,w
  8612  1722  00D3               	movwf	___fladd@b+1
  8613  1723  085A               	movf	??___fladd,w
  8614  1724  00D2               	movwf	___fladd@b
  8615  1725                     l2638:
  8616  1725  3080               	movlw	128
  8617  1726  00DA               	movwf	??___fladd
  8618  1727  085A               	movf	??___fladd,w
  8619  1728  06E2               	xorwf	___fladd@signs,f
  8620  1729  09E5               	comf	___fladd@grs,f
  8621  172A  0AE5               	incf	___fladd@grs,f
  8622  172B                     l2640:
  8623  172B  0865               	movf	___fladd@grs,w
  8624  172C  1D03               	btfss	3,2
  8625  172D  2F2F               	goto	u3641
  8626  172E  2F30               	goto	u3640
  8627  172F                     u3641:
  8628  172F  2F4D               	goto	l755
  8629  1730                     u3640:
  8630  1730                     l2642:
  8631  1730  3001               	movlw	1
  8632  1731  07D2               	addwf	___fladd@b,f
  8633  1732  3000               	movlw	0
  8634  1733  1803               	skipnc
  8635  1734  3001               	movlw	1
  8636  1735  07D3               	addwf	___fladd@b+1,f
  8637  1736  3000               	movlw	0
  8638  1737  1803               	skipnc
  8639  1738  3001               	movlw	1
  8640  1739  07D4               	addwf	___fladd@b+2,f
  8641  173A  3000               	movlw	0
  8642  173B  1803               	skipnc
  8643  173C  3001               	movlw	1
  8644  173D  07D5               	addwf	___fladd@b+3,f
  8645  173E  2F4D               	goto	l755
  8646  173F                     l2644:
  8647  173F  0856               	movf	___fladd@a,w
  8648  1740  02D2               	subwf	___fladd@b,f
  8649  1741  0857               	movf	___fladd@a+1,w
  8650  1742  1C03               	skipc
  8651  1743  0F57               	incfsz	___fladd@a+1,w
  8652  1744  02D3               	subwf	___fladd@b+1,f
  8653  1745  0858               	movf	___fladd@a+2,w
  8654  1746  1C03               	skipc
  8655  1747  0F58               	incfsz	___fladd@a+2,w
  8656  1748  02D4               	subwf	___fladd@b+2,f
  8657  1749  0859               	movf	___fladd@a+3,w
  8658  174A  1C03               	skipc
  8659  174B  0F59               	incfsz	___fladd@a+3,w
  8660  174C  02D5               	subwf	___fladd@b+3,f
  8661  174D                     l755:
  8662  174D  0855               	movf	___fladd@b+3,w
  8663  174E  0454               	iorwf	___fladd@b+2,w
  8664  174F  0453               	iorwf	___fladd@b+1,w
  8665  1750  0452               	iorwf	___fladd@b,w
  8666  1751  1D03               	skipz
  8667  1752  2F54               	goto	u3651
  8668  1753  2F55               	goto	u3650
  8669  1754                     u3651:
  8670  1754  2F81               	goto	l2666
  8671  1755                     u3650:
  8672  1755                     l2646:
  8673  1755  0865               	movf	___fladd@grs,w
  8674  1756  1D03               	btfss	3,2
  8675  1757  2F59               	goto	u3661
  8676  1758  2F5A               	goto	u3660
  8677  1759                     u3661:
  8678  1759  2F81               	goto	l2666
  8679  175A                     u3660:
  8680  175A                     l2648:
  8681  175A  3000               	movlw	0
  8682  175B  00D5               	movwf	?___fladd+3
  8683  175C  3000               	movlw	0
  8684  175D  00D4               	movwf	?___fladd+2
  8685  175E  3000               	movlw	0
  8686  175F  00D3               	movwf	?___fladd+1
  8687  1760  3000               	movlw	0
  8688  1761  00D2               	movwf	?___fladd
  8689  1762  2FFF               	goto	l747
  8690  1763                     l2652:
  8691  1763  3001               	movlw	1
  8692  1764  00DA               	movwf	??___fladd
  8693  1765                     u3675:
  8694  1765  1003               	clrc
  8695  1766  0DD2               	rlf	___fladd@b,f
  8696  1767  0DD3               	rlf	___fladd@b+1,f
  8697  1768  0DD4               	rlf	___fladd@b+2,f
  8698  1769  0DD5               	rlf	___fladd@b+3,f
  8699  176A  0BDA               	decfsz	??___fladd,f
  8700  176B  2F65               	goto	u3675
  8701  176C                     l2654:
  8702  176C  1FE5               	btfss	___fladd@grs,7
  8703  176D  2F6F               	goto	u3681
  8704  176E  2F70               	goto	u3680
  8705  176F                     u3681:
  8706  176F  2F71               	goto	l759
  8707  1770                     u3680:
  8708  1770                     l2656:
  8709  1770  1452               	bsf	___fladd@b,0
  8710  1771                     l759:
  8711  1771  1C65               	btfss	___fladd@grs,0
  8712  1772  2F74               	goto	u3691
  8713  1773  2F75               	goto	u3690
  8714  1774                     u3691:
  8715  1774  2F78               	goto	l2660
  8716  1775                     u3690:
  8717  1775                     l2658:
  8718  1775  1403               	setc
  8719  1776  0DE5               	rlf	___fladd@grs,f
  8720  1777  2F7A               	goto	l2662
  8721  1778                     l2660:
  8722  1778  1003               	clrc
  8723  1779  0DE5               	rlf	___fladd@grs,f
  8724  177A                     l2662:
  8725  177A  0864               	movf	___fladd@bexp,w
  8726  177B  1903               	btfsc	3,2
  8727  177C  2F7E               	goto	u3701
  8728  177D  2F7F               	goto	u3700
  8729  177E                     u3701:
  8730  177E  2F81               	goto	l2666
  8731  177F                     u3700:
  8732  177F                     l2664:
  8733  177F  3001               	movlw	1
  8734  1780  02E4               	subwf	___fladd@bexp,f
  8735  1781                     l2666:
  8736  1781  1FD4               	btfss	___fladd@b+2,7
  8737  1782  2F84               	goto	u3711
  8738  1783  2F85               	goto	u3710
  8739  1784                     u3711:
  8740  1784  2F63               	goto	l2652
  8741  1785                     u3710:
  8742  1785                     l2668:
  8743  1785  01E3               	clrf	___fladd@aexp
  8744  1786                     l2670:
  8745  1786  1FE5               	btfss	___fladd@grs,7
  8746  1787  2F89               	goto	u3721
  8747  1788  2F8A               	goto	u3720
  8748  1789                     u3721:
  8749  1789  2F98               	goto	l2678
  8750  178A                     u3720:
  8751  178A                     l2672:
  8752  178A  0865               	movf	___fladd@grs,w
  8753  178B  397F               	andlw	127
  8754  178C  1903               	btfsc	3,2
  8755  178D  2F8F               	goto	u3731
  8756  178E  2F90               	goto	u3730
  8757  178F                     u3731:
  8758  178F  2F93               	goto	l765
  8759  1790                     u3730:
  8760  1790                     l2674:
  8761  1790  01E3               	clrf	___fladd@aexp
  8762  1791  0AE3               	incf	___fladd@aexp,f
  8763  1792  2F98               	goto	l2678
  8764  1793                     l765:
  8765  1793  1C52               	btfss	___fladd@b,0
  8766  1794  2F96               	goto	u3741
  8767  1795  2F97               	goto	u3740
  8768  1796                     u3741:
  8769  1796  2F98               	goto	l2678
  8770  1797                     u3740:
  8771  1797  2F90               	goto	l2674
  8772  1798                     l2678:
  8773  1798  0863               	movf	___fladd@aexp,w
  8774  1799  1903               	btfsc	3,2
  8775  179A  2F9C               	goto	u3751
  8776  179B  2F9D               	goto	u3750
  8777  179C                     u3751:
  8778  179C  2FD1               	goto	l768
  8779  179D                     u3750:
  8780  179D                     l2680:
  8781  179D  3001               	movlw	1
  8782  179E  07D2               	addwf	___fladd@b,f
  8783  179F  3000               	movlw	0
  8784  17A0  1803               	skipnc
  8785  17A1  3001               	movlw	1
  8786  17A2  07D3               	addwf	___fladd@b+1,f
  8787  17A3  3000               	movlw	0
  8788  17A4  1803               	skipnc
  8789  17A5  3001               	movlw	1
  8790  17A6  07D4               	addwf	___fladd@b+2,f
  8791  17A7  3000               	movlw	0
  8792  17A8  1803               	skipnc
  8793  17A9  3001               	movlw	1
  8794  17AA  07D5               	addwf	___fladd@b+3,f
  8795  17AB                     l2682:
  8796  17AB  1C55               	btfss	___fladd@b+3,0
  8797  17AC  2FAE               	goto	u3761
  8798  17AD  2FAF               	goto	u3760
  8799  17AE                     u3761:
  8800  17AE  2FD1               	goto	l768
  8801  17AF                     u3760:
  8802  17AF                     l2684:
  8803  17AF  0852               	movf	___fladd@b,w
  8804  17B0  00DA               	movwf	??___fladd
  8805  17B1  0853               	movf	___fladd@b+1,w
  8806  17B2  00DB               	movwf	??___fladd+1
  8807  17B3  0854               	movf	___fladd@b+2,w
  8808  17B4  00DC               	movwf	??___fladd+2
  8809  17B5  0855               	movf	___fladd@b+3,w
  8810  17B6  00DD               	movwf	??___fladd+3
  8811  17B7  3001               	movlw	1
  8812  17B8  00DE               	movwf	??___fladd+4
  8813  17B9                     u3775:
  8814  17B9  0D5D               	rlf	??___fladd+3,w
  8815  17BA  0CDD               	rrf	??___fladd+3,f
  8816  17BB  0CDC               	rrf	??___fladd+2,f
  8817  17BC  0CDB               	rrf	??___fladd+1,f
  8818  17BD  0CDA               	rrf	??___fladd,f
  8819  17BE                     u3770:
  8820  17BE  0BDE               	decfsz	??___fladd+4,f
  8821  17BF  2FB9               	goto	u3775
  8822  17C0  085D               	movf	??___fladd+3,w
  8823  17C1  00D5               	movwf	___fladd@b+3
  8824  17C2  085C               	movf	??___fladd+2,w
  8825  17C3  00D4               	movwf	___fladd@b+2
  8826  17C4  085B               	movf	??___fladd+1,w
  8827  17C5  00D3               	movwf	___fladd@b+1
  8828  17C6  085A               	movf	??___fladd,w
  8829  17C7  00D2               	movwf	___fladd@b
  8830  17C8  0A64               	incf	___fladd@bexp,w
  8831  17C9  1903               	btfsc	3,2
  8832  17CA  2FCC               	goto	u3781
  8833  17CB  2FCD               	goto	u3780
  8834  17CC                     u3781:
  8835  17CC  2FD1               	goto	l768
  8836  17CD                     u3780:
  8837  17CD                     l2686:
  8838  17CD  3001               	movlw	1
  8839  17CE  00DA               	movwf	??___fladd
  8840  17CF  085A               	movf	??___fladd,w
  8841  17D0  07E4               	addwf	___fladd@bexp,f
  8842  17D1                     l768:
  8843  17D1  0A64               	incf	___fladd@bexp,w
  8844  17D2  1903               	btfsc	3,2
  8845  17D3  2FD5               	goto	u3791
  8846  17D4  2FD6               	goto	u3790
  8847  17D5                     u3791:
  8848  17D5  2FDB               	goto	l2690
  8849  17D6                     u3790:
  8850  17D6                     l2688:
  8851  17D6  0864               	movf	___fladd@bexp,w
  8852  17D7  1D03               	btfss	3,2
  8853  17D8  2FDA               	goto	u3801
  8854  17D9  2FDB               	goto	u3800
  8855  17DA                     u3801:
  8856  17DA  2FE9               	goto	l2696
  8857  17DB                     u3800:
  8858  17DB                     l2690:
  8859  17DB  3000               	movlw	0
  8860  17DC  00D5               	movwf	___fladd@b+3
  8861  17DD  3000               	movlw	0
  8862  17DE  00D4               	movwf	___fladd@b+2
  8863  17DF  3000               	movlw	0
  8864  17E0  00D3               	movwf	___fladd@b+1
  8865  17E1  3000               	movlw	0
  8866  17E2  00D2               	movwf	___fladd@b
  8867  17E3                     l2692:
  8868  17E3  0864               	movf	___fladd@bexp,w
  8869  17E4  1D03               	btfss	3,2
  8870  17E5  2FE7               	goto	u3811
  8871  17E6  2FE8               	goto	u3810
  8872  17E7                     u3811:
  8873  17E7  2FE9               	goto	l2696
  8874  17E8                     u3810:
  8875  17E8                     l2694:
  8876  17E8  01E2               	clrf	___fladd@signs
  8877  17E9                     l2696:
  8878  17E9  1C64               	btfss	___fladd@bexp,0
  8879  17EA  2FEC               	goto	u3821
  8880  17EB  2FED               	goto	u3820
  8881  17EC                     u3821:
  8882  17EC  2FEF               	goto	l2700
  8883  17ED                     u3820:
  8884  17ED                     l2698:
  8885  17ED  17D4               	bsf	___fladd@b+2,7
  8886  17EE  2FF3               	goto	l776
  8887  17EF                     l2700:
  8888  17EF  307F               	movlw	127
  8889  17F0  00DA               	movwf	??___fladd
  8890  17F1  085A               	movf	??___fladd,w
  8891  17F2  05D4               	andwf	___fladd@b+2,f
  8892  17F3                     l776:
  8893  17F3  0864               	movf	___fladd@bexp,w
  8894  17F4  00DA               	movwf	??___fladd
  8895  17F5  1003               	clrc
  8896  17F6  0C5A               	rrf	??___fladd,w
  8897  17F7  00DB               	movwf	??___fladd+1
  8898  17F8  085B               	movf	??___fladd+1,w
  8899  17F9  00D5               	movwf	___fladd@b+3
  8900  17FA                     l2702:
  8901  17FA  1FE2               	btfss	___fladd@signs,7
  8902  17FB  2FFD               	goto	u3831
  8903  17FC  2FFE               	goto	u3830
  8904  17FD                     u3831:
  8905  17FD  2FFF               	goto	l777
  8906  17FE                     u3830:
  8907  17FE                     l2704:
  8908  17FE  17D5               	bsf	___fladd@b+3,7
  8909  17FF                     l777:
  8910  17FF                     l747:
  8911  17FF  0008               	return
  8912  1800                     __end_of___fladd:
  8913                           
  8914                           	psect	text24
  8915  1BB7                     __ptext24:	
  8916 ;; *************** function _conv1 *****************
  8917 ;; Defined at:
  8918 ;;		line 145 in file "main4a.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;  aa              1    wreg     unsigned char 
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;  aa              1   42[BANK0 ] unsigned char 
  8923 ;;  result          4   38[BANK0 ] unsigned char 
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  4   30[BANK0 ] unsigned char 
  8926 ;; Registers used:
  8927 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8933 ;;      Params:         0       4       0       0       0
  8934 ;;      Locals:         0       5       0       0       0
  8935 ;;      Temps:          0       4       0       0       0
  8936 ;;      Totals:         0      13       0       0       0
  8937 ;;Total ram usage:       13 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:    2
  8940 ;; This function calls:
  8941 ;;		___flmul
  8942 ;;		___xxtofl
  8943 ;; This function is called by:
  8944 ;;		_main
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           
  8949                           ;psect for function _conv1
  8950  1BB7                     _conv1:
  8951                           
  8952                           ;incstack = 0
  8953                           ; Regs used in _conv1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8954                           ;conv1@aa stored from wreg
  8955  1BB7  1283               	bcf	3,5	;RP0=0, select bank0
  8956  1BB8  1303               	bcf	3,6	;RP1=0, select bank0
  8957  1BB9  00CA               	movwf	conv1@aa
  8958  1BBA                     l3296:
  8959                           
  8960                           ;main4a.c: 146:     double result;;main4a.c: 147:     result = aa*0.0196;
  8961  1BBA  303C               	movlw	60
  8962  1BBB  00A7               	movwf	___flmul@b+3
  8963  1BBC  30A0               	movlw	160
  8964  1BBD  00A6               	movwf	___flmul@b+2
  8965  1BBE  3090               	movlw	144
  8966  1BBF  00A5               	movwf	___flmul@b+1
  8967  1BC0  302E               	movlw	46
  8968  1BC1  00A4               	movwf	___flmul@b
  8969  1BC2  084A               	movf	conv1@aa,w
  8970  1BC3  00C2               	movwf	??_conv1
  8971  1BC4  01C3               	clrf	??_conv1+1
  8972  1BC5  01C4               	clrf	??_conv1+2
  8973  1BC6  01C5               	clrf	??_conv1+3
  8974  1BC7  0845               	movf	??_conv1+3,w
  8975  1BC8  00F3               	movwf	___xxtofl@val+3
  8976  1BC9  0844               	movf	??_conv1+2,w
  8977  1BCA  00F2               	movwf	___xxtofl@val+2
  8978  1BCB  0843               	movf	??_conv1+1,w
  8979  1BCC  00F1               	movwf	___xxtofl@val+1
  8980  1BCD  0842               	movf	??_conv1,w
  8981  1BCE  00F0               	movwf	___xxtofl@val
  8982  1BCF  3001               	movlw	1
  8983  1BD0  160A  158A  2746  160A  158A  	fcall	___xxtofl
  8984  1BD5  0873               	movf	?___xxtofl+3,w
  8985  1BD6  1283               	bcf	3,5	;RP0=0, select bank0
  8986  1BD7  1303               	bcf	3,6	;RP1=0, select bank0
  8987  1BD8  00AB               	movwf	___flmul@a+3
  8988  1BD9  0872               	movf	?___xxtofl+2,w
  8989  1BDA  00AA               	movwf	___flmul@a+2
  8990  1BDB  0871               	movf	?___xxtofl+1,w
  8991  1BDC  00A9               	movwf	___flmul@a+1
  8992  1BDD  0870               	movf	?___xxtofl,w
  8993  1BDE  00A8               	movwf	___flmul@a
  8994  1BDF  120A  158A  249F  160A  158A  	fcall	___flmul
  8995  1BE4  1283               	bcf	3,5	;RP0=0, select bank0
  8996  1BE5  1303               	bcf	3,6	;RP1=0, select bank0
  8997  1BE6  0827               	movf	?___flmul+3,w
  8998  1BE7  00C9               	movwf	conv1@result+3
  8999  1BE8  0826               	movf	?___flmul+2,w
  9000  1BE9  00C8               	movwf	conv1@result+2
  9001  1BEA  0825               	movf	?___flmul+1,w
  9002  1BEB  00C7               	movwf	conv1@result+1
  9003  1BEC  0824               	movf	?___flmul,w
  9004  1BED  00C6               	movwf	conv1@result
  9005  1BEE                     l3298:
  9006                           
  9007                           ;main4a.c: 148:     return result;
  9008  1BEE  0849               	movf	conv1@result+3,w
  9009  1BEF  00C1               	movwf	?_conv1+3
  9010  1BF0  0848               	movf	conv1@result+2,w
  9011  1BF1  00C0               	movwf	?_conv1+2
  9012  1BF2  0847               	movf	conv1@result+1,w
  9013  1BF3  00BF               	movwf	?_conv1+1
  9014  1BF4  0846               	movf	conv1@result,w
  9015  1BF5  00BE               	movwf	?_conv1
  9016  1BF6                     l79:
  9017  1BF6  0008               	return
  9018  1BF7                     __end_of_conv1:
  9019                           
  9020                           	psect	text25
  9021  1F46                     __ptext25:	
  9022 ;; *************** function ___xxtofl *****************
  9023 ;; Defined at:
  9024 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  sign            1    wreg     unsigned char 
  9027 ;;  val             4    0[COMMON] long 
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;  sign            1    8[COMMON] unsigned char 
  9030 ;;  arg             4   10[COMMON] unsigned long 
  9031 ;;  exp             1    9[COMMON] unsigned char 
  9032 ;; Return value:  Size  Location     Type
  9033 ;;                  4    0[COMMON] unsigned char 
  9034 ;; Registers used:
  9035 ;;		wreg, status,2, status,0
  9036 ;; Tracked objects:
  9037 ;;		On entry : 0/0
  9038 ;;		On exit  : 0/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9041 ;;      Params:         4       0       0       0       0
  9042 ;;      Locals:         6       0       0       0       0
  9043 ;;      Temps:          4       0       0       0       0
  9044 ;;      Totals:        14       0       0       0       0
  9045 ;;Total ram usage:       14 bytes
  9046 ;; Hardware stack levels used:    1
  9047 ;; This function calls:
  9048 ;;		Nothing
  9049 ;; This function is called by:
  9050 ;;		_conv1
  9051 ;;		_conv2
  9052 ;;		_conv3
  9053 ;;		_sprintf
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           
  9058                           ;psect for function ___xxtofl
  9059  1F46                     ___xxtofl:
  9060                           
  9061                           ;incstack = 0
  9062                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9063                           ;___xxtofl@sign stored from wreg
  9064  1F46  00F8               	movwf	___xxtofl@sign
  9065  1F47                     l3174:
  9066  1F47  0878               	movf	___xxtofl@sign,w
  9067  1F48  1903               	btfsc	3,2
  9068  1F49  2F4B               	goto	u5081
  9069  1F4A  2F4C               	goto	u5080
  9070  1F4B                     u5081:
  9071  1F4B  2F60               	goto	l3180
  9072  1F4C                     u5080:
  9073  1F4C                     l3176:
  9074  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  9075  1F4D  2F4F               	goto	u5091
  9076  1F4E  2F50               	goto	u5090
  9077  1F4F                     u5091:
  9078  1F4F  2F60               	goto	l3180
  9079  1F50                     u5090:
  9080  1F50                     l3178:
  9081  1F50  0970               	comf	___xxtofl@val,w
  9082  1F51  00FA               	movwf	___xxtofl@arg
  9083  1F52  0971               	comf	___xxtofl@val+1,w
  9084  1F53  00FB               	movwf	___xxtofl@arg+1
  9085  1F54  0972               	comf	___xxtofl@val+2,w
  9086  1F55  00FC               	movwf	___xxtofl@arg+2
  9087  1F56  0973               	comf	___xxtofl@val+3,w
  9088  1F57  00FD               	movwf	___xxtofl@arg+3
  9089  1F58  0AFA               	incf	___xxtofl@arg,f
  9090  1F59  1903               	skipnz
  9091  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  9092  1F5B  1903               	skipnz
  9093  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  9094  1F5D  1903               	skipnz
  9095  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  9096  1F5F  2F68               	goto	l874
  9097  1F60                     l3180:
  9098  1F60  0873               	movf	___xxtofl@val+3,w
  9099  1F61  00FD               	movwf	___xxtofl@arg+3
  9100  1F62  0872               	movf	___xxtofl@val+2,w
  9101  1F63  00FC               	movwf	___xxtofl@arg+2
  9102  1F64  0871               	movf	___xxtofl@val+1,w
  9103  1F65  00FB               	movwf	___xxtofl@arg+1
  9104  1F66  0870               	movf	___xxtofl@val,w
  9105  1F67  00FA               	movwf	___xxtofl@arg
  9106  1F68                     l874:
  9107  1F68  0873               	movf	___xxtofl@val+3,w
  9108  1F69  0472               	iorwf	___xxtofl@val+2,w
  9109  1F6A  0471               	iorwf	___xxtofl@val+1,w
  9110  1F6B  0470               	iorwf	___xxtofl@val,w
  9111  1F6C  1D03               	skipz
  9112  1F6D  2F6F               	goto	u5101
  9113  1F6E  2F70               	goto	u5100
  9114  1F6F                     u5101:
  9115  1F6F  2F79               	goto	l3186
  9116  1F70                     u5100:
  9117  1F70                     l3182:
  9118  1F70  3000               	movlw	0
  9119  1F71  00F3               	movwf	?___xxtofl+3
  9120  1F72  3000               	movlw	0
  9121  1F73  00F2               	movwf	?___xxtofl+2
  9122  1F74  3000               	movlw	0
  9123  1F75  00F1               	movwf	?___xxtofl+1
  9124  1F76  3000               	movlw	0
  9125  1F77  00F0               	movwf	?___xxtofl
  9126  1F78  2FFF               	goto	l876
  9127  1F79                     l3186:
  9128  1F79  3096               	movlw	150
  9129  1F7A  00F4               	movwf	??___xxtofl
  9130  1F7B  0874               	movf	??___xxtofl,w
  9131  1F7C  00F9               	movwf	___xxtofl@exp
  9132  1F7D  2F8B               	goto	l3190
  9133  1F7E                     l3188:
  9134  1F7E  3001               	movlw	1
  9135  1F7F  00F4               	movwf	??___xxtofl
  9136  1F80  0874               	movf	??___xxtofl,w
  9137  1F81  07F9               	addwf	___xxtofl@exp,f
  9138  1F82  3001               	movlw	1
  9139  1F83                     u5115:
  9140  1F83  1003               	clrc
  9141  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  9142  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  9143  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  9144  1F87  0CFA               	rrf	___xxtofl@arg,f
  9145  1F88  3EFF               	addlw	-1
  9146  1F89  1D03               	skipz
  9147  1F8A  2F83               	goto	u5115
  9148  1F8B                     l3190:
  9149  1F8B  30FE               	movlw	254
  9150  1F8C  057D               	andwf	___xxtofl@arg+3,w
  9151  1F8D  1D03               	btfss	3,2
  9152  1F8E  2F90               	goto	u5121
  9153  1F8F  2F91               	goto	u5120
  9154  1F90                     u5121:
  9155  1F90  2F7E               	goto	l3188
  9156  1F91                     u5120:
  9157  1F91  2FAD               	goto	l880
  9158  1F92                     l3192:
  9159  1F92  3001               	movlw	1
  9160  1F93  00F4               	movwf	??___xxtofl
  9161  1F94  0874               	movf	??___xxtofl,w
  9162  1F95  07F9               	addwf	___xxtofl@exp,f
  9163  1F96                     l3194:
  9164  1F96  3001               	movlw	1
  9165  1F97  07FA               	addwf	___xxtofl@arg,f
  9166  1F98  3000               	movlw	0
  9167  1F99  1803               	skipnc
  9168  1F9A  3001               	movlw	1
  9169  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  9170  1F9C  3000               	movlw	0
  9171  1F9D  1803               	skipnc
  9172  1F9E  3001               	movlw	1
  9173  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  9174  1FA0  3000               	movlw	0
  9175  1FA1  1803               	skipnc
  9176  1FA2  3001               	movlw	1
  9177  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  9178  1FA4                     l3196:
  9179  1FA4  3001               	movlw	1
  9180  1FA5                     u5135:
  9181  1FA5  1003               	clrc
  9182  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  9183  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  9184  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  9185  1FA9  0CFA               	rrf	___xxtofl@arg,f
  9186  1FAA  3EFF               	addlw	-1
  9187  1FAB  1D03               	skipz
  9188  1FAC  2FA5               	goto	u5135
  9189  1FAD                     l880:
  9190  1FAD  30FF               	movlw	255
  9191  1FAE  057D               	andwf	___xxtofl@arg+3,w
  9192  1FAF  1D03               	btfss	3,2
  9193  1FB0  2FB2               	goto	u5141
  9194  1FB1  2FB3               	goto	u5140
  9195  1FB2                     u5141:
  9196  1FB2  2F92               	goto	l3192
  9197  1FB3                     u5140:
  9198  1FB3  2FBF               	goto	l3200
  9199  1FB4                     l3198:
  9200  1FB4  3001               	movlw	1
  9201  1FB5  02F9               	subwf	___xxtofl@exp,f
  9202  1FB6  3001               	movlw	1
  9203  1FB7  00F4               	movwf	??___xxtofl
  9204  1FB8                     u5155:
  9205  1FB8  1003               	clrc
  9206  1FB9  0DFA               	rlf	___xxtofl@arg,f
  9207  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  9208  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  9209  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  9210  1FBD  0BF4               	decfsz	??___xxtofl,f
  9211  1FBE  2FB8               	goto	u5155
  9212  1FBF                     l3200:
  9213  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  9214  1FC0  2FC2               	goto	u5161
  9215  1FC1  2FC3               	goto	u5160
  9216  1FC2                     u5161:
  9217  1FC2  2FC9               	goto	l887
  9218  1FC3                     u5160:
  9219  1FC3                     l3202:
  9220  1FC3  3002               	movlw	2
  9221  1FC4  0279               	subwf	___xxtofl@exp,w
  9222  1FC5  1803               	skipnc
  9223  1FC6  2FC8               	goto	u5171
  9224  1FC7  2FC9               	goto	u5170
  9225  1FC8                     u5171:
  9226  1FC8  2FB4               	goto	l3198
  9227  1FC9                     u5170:
  9228  1FC9                     l887:
  9229  1FC9  1879               	btfsc	___xxtofl@exp,0
  9230  1FCA  2FCC               	goto	u5181
  9231  1FCB  2FCD               	goto	u5180
  9232  1FCC                     u5181:
  9233  1FCC  2FD5               	goto	l888
  9234  1FCD                     u5180:
  9235  1FCD                     l3204:
  9236  1FCD  30FF               	movlw	255
  9237  1FCE  05FA               	andwf	___xxtofl@arg,f
  9238  1FCF  30FF               	movlw	255
  9239  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  9240  1FD1  307F               	movlw	127
  9241  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  9242  1FD3  30FF               	movlw	255
  9243  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  9244  1FD5                     l888:
  9245  1FD5  1003               	clrc
  9246  1FD6  0CF9               	rrf	___xxtofl@exp,f
  9247  1FD7                     l3206:
  9248  1FD7  0879               	movf	___xxtofl@exp,w
  9249  1FD8  00F4               	movwf	??___xxtofl
  9250  1FD9  01F5               	clrf	??___xxtofl+1
  9251  1FDA  01F6               	clrf	??___xxtofl+2
  9252  1FDB  01F7               	clrf	??___xxtofl+3
  9253  1FDC  3018               	movlw	24
  9254  1FDD                     u5195:
  9255  1FDD  1003               	clrc
  9256  1FDE  0DF4               	rlf	??___xxtofl,f
  9257  1FDF  0DF5               	rlf	??___xxtofl+1,f
  9258  1FE0  0DF6               	rlf	??___xxtofl+2,f
  9259  1FE1  0DF7               	rlf	??___xxtofl+3,f
  9260  1FE2                     u5190:
  9261  1FE2  3EFF               	addlw	-1
  9262  1FE3  1D03               	skipz
  9263  1FE4  2FDD               	goto	u5195
  9264  1FE5  0874               	movf	??___xxtofl,w
  9265  1FE6  04FA               	iorwf	___xxtofl@arg,f
  9266  1FE7  0875               	movf	??___xxtofl+1,w
  9267  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  9268  1FE9  0876               	movf	??___xxtofl+2,w
  9269  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  9270  1FEB  0877               	movf	??___xxtofl+3,w
  9271  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  9272  1FED                     l3208:
  9273  1FED  0878               	movf	___xxtofl@sign,w
  9274  1FEE  1903               	btfsc	3,2
  9275  1FEF  2FF1               	goto	u5201
  9276  1FF0  2FF2               	goto	u5200
  9277  1FF1                     u5201:
  9278  1FF1  2FF7               	goto	l3214
  9279  1FF2                     u5200:
  9280  1FF2                     l3210:
  9281  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  9282  1FF3  2FF5               	goto	u5211
  9283  1FF4  2FF6               	goto	u5210
  9284  1FF5                     u5211:
  9285  1FF5  2FF7               	goto	l3214
  9286  1FF6                     u5210:
  9287  1FF6                     l3212:
  9288  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  9289  1FF7                     l3214:
  9290  1FF7  087D               	movf	___xxtofl@arg+3,w
  9291  1FF8  00F3               	movwf	?___xxtofl+3
  9292  1FF9  087C               	movf	___xxtofl@arg+2,w
  9293  1FFA  00F2               	movwf	?___xxtofl+2
  9294  1FFB  087B               	movf	___xxtofl@arg+1,w
  9295  1FFC  00F1               	movwf	?___xxtofl+1
  9296  1FFD  087A               	movf	___xxtofl@arg,w
  9297  1FFE  00F0               	movwf	?___xxtofl
  9298  1FFF                     l876:
  9299  1FFF  0008               	return
  9300  2000                     __end_of___xxtofl:
  9301                           
  9302                           	psect	text26
  9303  0C9F                     __ptext26:	
  9304 ;; *************** function ___flmul *****************
  9305 ;; Defined at:
  9306 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;  b               4    4[BANK0 ] unsigned char 
  9309 ;;  a               4    8[BANK0 ] unsigned char 
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;  prod            4   24[BANK0 ] struct .
  9312 ;;  grs             4   18[BANK0 ] unsigned long 
  9313 ;;  temp            2   28[BANK0 ] struct .
  9314 ;;  bexp            1   23[BANK0 ] unsigned char 
  9315 ;;  aexp            1   22[BANK0 ] unsigned char 
  9316 ;;  sign            1   17[BANK0 ] unsigned char 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  4    4[BANK0 ] unsigned char 
  9319 ;; Registers used:
  9320 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9326 ;;      Params:         0       8       0       0       0
  9327 ;;      Locals:         0      13       0       0       0
  9328 ;;      Temps:          0       5       0       0       0
  9329 ;;      Totals:         0      26       0       0       0
  9330 ;;Total ram usage:       26 bytes
  9331 ;; Hardware stack levels used:    1
  9332 ;; Hardware stack levels required when called:    1
  9333 ;; This function calls:
  9334 ;;		__Umul8_16
  9335 ;; This function is called by:
  9336 ;;		_conv1
  9337 ;;		_conv2
  9338 ;;		_fround
  9339 ;;		_scale
  9340 ;;		_sprintf
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           
  9344                           
  9345                           ;psect for function ___flmul
  9346  0C9F                     ___flmul:
  9347  0C9F                     l2706:	
  9348                           ;incstack = 0
  9349                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9350                           
  9351  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  9352  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  9353  0CA1  0827               	movf	___flmul@b+3,w
  9354  0CA2  3980               	andlw	128
  9355  0CA3  00AC               	movwf	??___flmul
  9356  0CA4  082C               	movf	??___flmul,w
  9357  0CA5  00B1               	movwf	___flmul@sign
  9358  0CA6                     l2708:
  9359  0CA6  0827               	movf	___flmul@b+3,w
  9360  0CA7  00AC               	movwf	??___flmul
  9361  0CA8  072C               	addwf	??___flmul,w
  9362  0CA9  00AD               	movwf	??___flmul+1
  9363  0CAA  082D               	movf	??___flmul+1,w
  9364  0CAB  00B7               	movwf	___flmul@bexp
  9365  0CAC                     l2710:
  9366  0CAC  1FA6               	btfss	___flmul@b+2,7
  9367  0CAD  2CAF               	goto	u3841
  9368  0CAE  2CB0               	goto	u3840
  9369  0CAF                     u3841:
  9370  0CAF  2CB1               	goto	l2714
  9371  0CB0                     u3840:
  9372  0CB0                     l2712:
  9373  0CB0  1437               	bsf	___flmul@bexp,0
  9374  0CB1                     l2714:
  9375  0CB1  0837               	movf	___flmul@bexp,w
  9376  0CB2  1903               	btfsc	3,2
  9377  0CB3  2CB5               	goto	u3851
  9378  0CB4  2CB6               	goto	u3850
  9379  0CB5                     u3851:
  9380  0CB5  2CC5               	goto	l2722
  9381  0CB6                     u3850:
  9382  0CB6                     l2716:
  9383  0CB6  0A37               	incf	___flmul@bexp,w
  9384  0CB7  1D03               	btfss	3,2
  9385  0CB8  2CBA               	goto	u3861
  9386  0CB9  2CBB               	goto	u3860
  9387  0CBA                     u3861:
  9388  0CBA  2CC3               	goto	l2720
  9389  0CBB                     u3860:
  9390  0CBB                     l2718:
  9391  0CBB  3000               	movlw	0
  9392  0CBC  00A7               	movwf	___flmul@b+3
  9393  0CBD  3000               	movlw	0
  9394  0CBE  00A6               	movwf	___flmul@b+2
  9395  0CBF  3000               	movlw	0
  9396  0CC0  00A5               	movwf	___flmul@b+1
  9397  0CC1  3000               	movlw	0
  9398  0CC2  00A4               	movwf	___flmul@b
  9399  0CC3                     l2720:
  9400  0CC3  17A6               	bsf	___flmul@b+2,7
  9401  0CC4  2CCD               	goto	l2724
  9402  0CC5                     l2722:
  9403  0CC5  3000               	movlw	0
  9404  0CC6  00A7               	movwf	___flmul@b+3
  9405  0CC7  3000               	movlw	0
  9406  0CC8  00A6               	movwf	___flmul@b+2
  9407  0CC9  3000               	movlw	0
  9408  0CCA  00A5               	movwf	___flmul@b+1
  9409  0CCB  3000               	movlw	0
  9410  0CCC  00A4               	movwf	___flmul@b
  9411  0CCD                     l2724:
  9412  0CCD  082B               	movf	___flmul@a+3,w
  9413  0CCE  3980               	andlw	128
  9414  0CCF  00AC               	movwf	??___flmul
  9415  0CD0  082C               	movf	??___flmul,w
  9416  0CD1  06B1               	xorwf	___flmul@sign,f
  9417  0CD2                     l2726:
  9418  0CD2  082B               	movf	___flmul@a+3,w
  9419  0CD3  00AC               	movwf	??___flmul
  9420  0CD4  072C               	addwf	??___flmul,w
  9421  0CD5  00AD               	movwf	??___flmul+1
  9422  0CD6  082D               	movf	??___flmul+1,w
  9423  0CD7  00B6               	movwf	___flmul@aexp
  9424  0CD8                     l2728:
  9425  0CD8  1FAA               	btfss	___flmul@a+2,7
  9426  0CD9  2CDB               	goto	u3871
  9427  0CDA  2CDC               	goto	u3870
  9428  0CDB                     u3871:
  9429  0CDB  2CDD               	goto	l2732
  9430  0CDC                     u3870:
  9431  0CDC                     l2730:
  9432  0CDC  1436               	bsf	___flmul@aexp,0
  9433  0CDD                     l2732:
  9434  0CDD  0836               	movf	___flmul@aexp,w
  9435  0CDE  1903               	btfsc	3,2
  9436  0CDF  2CE1               	goto	u3881
  9437  0CE0  2CE2               	goto	u3880
  9438  0CE1                     u3881:
  9439  0CE1  2CF1               	goto	l2740
  9440  0CE2                     u3880:
  9441  0CE2                     l2734:
  9442  0CE2  0A36               	incf	___flmul@aexp,w
  9443  0CE3  1D03               	btfss	3,2
  9444  0CE4  2CE6               	goto	u3891
  9445  0CE5  2CE7               	goto	u3890
  9446  0CE6                     u3891:
  9447  0CE6  2CEF               	goto	l2738
  9448  0CE7                     u3890:
  9449  0CE7                     l2736:
  9450  0CE7  3000               	movlw	0
  9451  0CE8  00AB               	movwf	___flmul@a+3
  9452  0CE9  3000               	movlw	0
  9453  0CEA  00AA               	movwf	___flmul@a+2
  9454  0CEB  3000               	movlw	0
  9455  0CEC  00A9               	movwf	___flmul@a+1
  9456  0CED  3000               	movlw	0
  9457  0CEE  00A8               	movwf	___flmul@a
  9458  0CEF                     l2738:
  9459  0CEF  17AA               	bsf	___flmul@a+2,7
  9460  0CF0  2CF9               	goto	l2742
  9461  0CF1                     l2740:
  9462  0CF1  3000               	movlw	0
  9463  0CF2  00AB               	movwf	___flmul@a+3
  9464  0CF3  3000               	movlw	0
  9465  0CF4  00AA               	movwf	___flmul@a+2
  9466  0CF5  3000               	movlw	0
  9467  0CF6  00A9               	movwf	___flmul@a+1
  9468  0CF7  3000               	movlw	0
  9469  0CF8  00A8               	movwf	___flmul@a
  9470  0CF9                     l2742:
  9471  0CF9  0836               	movf	___flmul@aexp,w
  9472  0CFA  1903               	btfsc	3,2
  9473  0CFB  2CFD               	goto	u3901
  9474  0CFC  2CFE               	goto	u3900
  9475  0CFD                     u3901:
  9476  0CFD  2D03               	goto	l2746
  9477  0CFE                     u3900:
  9478  0CFE                     l2744:
  9479  0CFE  0837               	movf	___flmul@bexp,w
  9480  0CFF  1D03               	btfss	3,2
  9481  0D00  2D02               	goto	u3911
  9482  0D01  2D03               	goto	u3910
  9483  0D02                     u3911:
  9484  0D02  2D0C               	goto	l2750
  9485  0D03                     u3910:
  9486  0D03                     l2746:
  9487  0D03  3000               	movlw	0
  9488  0D04  00A7               	movwf	?___flmul+3
  9489  0D05  3000               	movlw	0
  9490  0D06  00A6               	movwf	?___flmul+2
  9491  0D07  3000               	movlw	0
  9492  0D08  00A5               	movwf	?___flmul+1
  9493  0D09  3000               	movlw	0
  9494  0D0A  00A4               	movwf	?___flmul
  9495  0D0B  2FFF               	goto	l830
  9496  0D0C                     l2750:
  9497  0D0C  0824               	movf	___flmul@b,w
  9498  0D0D  00AC               	movwf	??___flmul
  9499  0D0E  082C               	movf	??___flmul,w
  9500  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  9501  0D10  082A               	movf	___flmul@a+2,w
  9502  0D11  160A  158A  2289  120A  158A  	fcall	__Umul8_16
  9503  0D16  0871               	movf	?__Umul8_16+1,w
  9504  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  9505  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  9506  0D19  00BD               	movwf	___flmul@temp+1
  9507  0D1A  0870               	movf	?__Umul8_16,w
  9508  0D1B  00BC               	movwf	___flmul@temp
  9509  0D1C                     l2752:
  9510  0D1C  083C               	movf	___flmul@temp,w
  9511  0D1D  00AC               	movwf	??___flmul
  9512  0D1E  01AD               	clrf	??___flmul+1
  9513  0D1F  01AE               	clrf	??___flmul+2
  9514  0D20  01AF               	clrf	??___flmul+3
  9515  0D21  082F               	movf	??___flmul+3,w
  9516  0D22  00B5               	movwf	___flmul@grs+3
  9517  0D23  082E               	movf	??___flmul+2,w
  9518  0D24  00B4               	movwf	___flmul@grs+2
  9519  0D25  082D               	movf	??___flmul+1,w
  9520  0D26  00B3               	movwf	___flmul@grs+1
  9521  0D27  082C               	movf	??___flmul,w
  9522  0D28  00B2               	movwf	___flmul@grs
  9523  0D29                     l2754:
  9524  0D29  083D               	movf	___flmul@temp+1,w
  9525  0D2A  00AC               	movwf	??___flmul
  9526  0D2B  01AD               	clrf	??___flmul+1
  9527  0D2C  01AE               	clrf	??___flmul+2
  9528  0D2D  01AF               	clrf	??___flmul+3
  9529  0D2E  082F               	movf	??___flmul+3,w
  9530  0D2F  00BB               	movwf	___flmul@prod+3
  9531  0D30  082E               	movf	??___flmul+2,w
  9532  0D31  00BA               	movwf	___flmul@prod+2
  9533  0D32  082D               	movf	??___flmul+1,w
  9534  0D33  00B9               	movwf	___flmul@prod+1
  9535  0D34  082C               	movf	??___flmul,w
  9536  0D35  00B8               	movwf	___flmul@prod
  9537  0D36  0825               	movf	___flmul@b+1,w
  9538  0D37  00AC               	movwf	??___flmul
  9539  0D38  082C               	movf	??___flmul,w
  9540  0D39  00F0               	movwf	__Umul8_16@multiplicand
  9541  0D3A  0829               	movf	___flmul@a+1,w
  9542  0D3B  160A  158A  2289  120A  158A  	fcall	__Umul8_16
  9543  0D40  0871               	movf	?__Umul8_16+1,w
  9544  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  9545  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  9546  0D43  00BD               	movwf	___flmul@temp+1
  9547  0D44  0870               	movf	?__Umul8_16,w
  9548  0D45  00BC               	movwf	___flmul@temp
  9549  0D46                     l2756:
  9550  0D46  083C               	movf	___flmul@temp,w
  9551  0D47  00AC               	movwf	??___flmul
  9552  0D48  01AD               	clrf	??___flmul+1
  9553  0D49  01AE               	clrf	??___flmul+2
  9554  0D4A  01AF               	clrf	??___flmul+3
  9555  0D4B  082C               	movf	??___flmul,w
  9556  0D4C  07B2               	addwf	___flmul@grs,f
  9557  0D4D  082D               	movf	??___flmul+1,w
  9558  0D4E  1103               	clrz
  9559  0D4F  1803               	skipnc
  9560  0D50  3E01               	addlw	1
  9561  0D51  1903               	skipnz
  9562  0D52  2D54               	goto	u3921
  9563  0D53  07B3               	addwf	___flmul@grs+1,f
  9564  0D54                     u3921:
  9565  0D54  082E               	movf	??___flmul+2,w
  9566  0D55  1103               	clrz
  9567  0D56  1803               	skipnc
  9568  0D57  3E01               	addlw	1
  9569  0D58  1903               	skipnz
  9570  0D59  2D5B               	goto	u3922
  9571  0D5A  07B4               	addwf	___flmul@grs+2,f
  9572  0D5B                     u3922:
  9573  0D5B  082F               	movf	??___flmul+3,w
  9574  0D5C  1103               	clrz
  9575  0D5D  1803               	skipnc
  9576  0D5E  3E01               	addlw	1
  9577  0D5F  1903               	skipnz
  9578  0D60  2D62               	goto	u3923
  9579  0D61  07B5               	addwf	___flmul@grs+3,f
  9580  0D62                     u3923:
  9581  0D62                     l2758:
  9582  0D62  083D               	movf	___flmul@temp+1,w
  9583  0D63  00AC               	movwf	??___flmul
  9584  0D64  01AD               	clrf	??___flmul+1
  9585  0D65  01AE               	clrf	??___flmul+2
  9586  0D66  01AF               	clrf	??___flmul+3
  9587  0D67  082C               	movf	??___flmul,w
  9588  0D68  07B8               	addwf	___flmul@prod,f
  9589  0D69  082D               	movf	??___flmul+1,w
  9590  0D6A  1103               	clrz
  9591  0D6B  1803               	skipnc
  9592  0D6C  3E01               	addlw	1
  9593  0D6D  1903               	skipnz
  9594  0D6E  2D70               	goto	u3931
  9595  0D6F  07B9               	addwf	___flmul@prod+1,f
  9596  0D70                     u3931:
  9597  0D70  082E               	movf	??___flmul+2,w
  9598  0D71  1103               	clrz
  9599  0D72  1803               	skipnc
  9600  0D73  3E01               	addlw	1
  9601  0D74  1903               	skipnz
  9602  0D75  2D77               	goto	u3932
  9603  0D76  07BA               	addwf	___flmul@prod+2,f
  9604  0D77                     u3932:
  9605  0D77  082F               	movf	??___flmul+3,w
  9606  0D78  1103               	clrz
  9607  0D79  1803               	skipnc
  9608  0D7A  3E01               	addlw	1
  9609  0D7B  1903               	skipnz
  9610  0D7C  2D7E               	goto	u3933
  9611  0D7D  07BB               	addwf	___flmul@prod+3,f
  9612  0D7E                     u3933:
  9613  0D7E  0826               	movf	___flmul@b+2,w
  9614  0D7F  00AC               	movwf	??___flmul
  9615  0D80  082C               	movf	??___flmul,w
  9616  0D81  00F0               	movwf	__Umul8_16@multiplicand
  9617  0D82  0828               	movf	___flmul@a,w
  9618  0D83  160A  158A  2289  120A  158A  	fcall	__Umul8_16
  9619  0D88  0871               	movf	?__Umul8_16+1,w
  9620  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  9621  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  9622  0D8B  00BD               	movwf	___flmul@temp+1
  9623  0D8C  0870               	movf	?__Umul8_16,w
  9624  0D8D  00BC               	movwf	___flmul@temp
  9625  0D8E                     l2760:
  9626  0D8E  083C               	movf	___flmul@temp,w
  9627  0D8F  00AC               	movwf	??___flmul
  9628  0D90  01AD               	clrf	??___flmul+1
  9629  0D91  01AE               	clrf	??___flmul+2
  9630  0D92  01AF               	clrf	??___flmul+3
  9631  0D93  082C               	movf	??___flmul,w
  9632  0D94  07B2               	addwf	___flmul@grs,f
  9633  0D95  082D               	movf	??___flmul+1,w
  9634  0D96  1103               	clrz
  9635  0D97  1803               	skipnc
  9636  0D98  3E01               	addlw	1
  9637  0D99  1903               	skipnz
  9638  0D9A  2D9C               	goto	u3941
  9639  0D9B  07B3               	addwf	___flmul@grs+1,f
  9640  0D9C                     u3941:
  9641  0D9C  082E               	movf	??___flmul+2,w
  9642  0D9D  1103               	clrz
  9643  0D9E  1803               	skipnc
  9644  0D9F  3E01               	addlw	1
  9645  0DA0  1903               	skipnz
  9646  0DA1  2DA3               	goto	u3942
  9647  0DA2  07B4               	addwf	___flmul@grs+2,f
  9648  0DA3                     u3942:
  9649  0DA3  082F               	movf	??___flmul+3,w
  9650  0DA4  1103               	clrz
  9651  0DA5  1803               	skipnc
  9652  0DA6  3E01               	addlw	1
  9653  0DA7  1903               	skipnz
  9654  0DA8  2DAA               	goto	u3943
  9655  0DA9  07B5               	addwf	___flmul@grs+3,f
  9656  0DAA                     u3943:
  9657  0DAA                     l2762:
  9658  0DAA  083D               	movf	___flmul@temp+1,w
  9659  0DAB  00AC               	movwf	??___flmul
  9660  0DAC  01AD               	clrf	??___flmul+1
  9661  0DAD  01AE               	clrf	??___flmul+2
  9662  0DAE  01AF               	clrf	??___flmul+3
  9663  0DAF  082C               	movf	??___flmul,w
  9664  0DB0  07B8               	addwf	___flmul@prod,f
  9665  0DB1  082D               	movf	??___flmul+1,w
  9666  0DB2  1103               	clrz
  9667  0DB3  1803               	skipnc
  9668  0DB4  3E01               	addlw	1
  9669  0DB5  1903               	skipnz
  9670  0DB6  2DB8               	goto	u3951
  9671  0DB7  07B9               	addwf	___flmul@prod+1,f
  9672  0DB8                     u3951:
  9673  0DB8  082E               	movf	??___flmul+2,w
  9674  0DB9  1103               	clrz
  9675  0DBA  1803               	skipnc
  9676  0DBB  3E01               	addlw	1
  9677  0DBC  1903               	skipnz
  9678  0DBD  2DBF               	goto	u3952
  9679  0DBE  07BA               	addwf	___flmul@prod+2,f
  9680  0DBF                     u3952:
  9681  0DBF  082F               	movf	??___flmul+3,w
  9682  0DC0  1103               	clrz
  9683  0DC1  1803               	skipnc
  9684  0DC2  3E01               	addlw	1
  9685  0DC3  1903               	skipnz
  9686  0DC4  2DC6               	goto	u3953
  9687  0DC5  07BB               	addwf	___flmul@prod+3,f
  9688  0DC6                     u3953:
  9689  0DC6                     l2764:
  9690  0DC6  3008               	movlw	8
  9691  0DC7  00AC               	movwf	??___flmul
  9692  0DC8                     u3965:
  9693  0DC8  1003               	clrc
  9694  0DC9  0DB2               	rlf	___flmul@grs,f
  9695  0DCA  0DB3               	rlf	___flmul@grs+1,f
  9696  0DCB  0DB4               	rlf	___flmul@grs+2,f
  9697  0DCC  0DB5               	rlf	___flmul@grs+3,f
  9698  0DCD  0BAC               	decfsz	??___flmul,f
  9699  0DCE  2DC8               	goto	u3965
  9700  0DCF                     l2766:
  9701  0DCF  0825               	movf	___flmul@b+1,w
  9702  0DD0  00AC               	movwf	??___flmul
  9703  0DD1  082C               	movf	??___flmul,w
  9704  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  9705  0DD3  0828               	movf	___flmul@a,w
  9706  0DD4  160A  158A  2289  120A  158A  	fcall	__Umul8_16
  9707  0DD9  0871               	movf	?__Umul8_16+1,w
  9708  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  9709  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  9710  0DDC  00BD               	movwf	___flmul@temp+1
  9711  0DDD  0870               	movf	?__Umul8_16,w
  9712  0DDE  00BC               	movwf	___flmul@temp
  9713  0DDF                     l2768:
  9714  0DDF  083C               	movf	___flmul@temp,w
  9715  0DE0  00AC               	movwf	??___flmul
  9716  0DE1  083D               	movf	___flmul@temp+1,w
  9717  0DE2  00AD               	movwf	??___flmul+1
  9718  0DE3  01AE               	clrf	??___flmul+2
  9719  0DE4  01AF               	clrf	??___flmul+3
  9720  0DE5  082C               	movf	??___flmul,w
  9721  0DE6  07B2               	addwf	___flmul@grs,f
  9722  0DE7  082D               	movf	??___flmul+1,w
  9723  0DE8  1103               	clrz
  9724  0DE9  1803               	skipnc
  9725  0DEA  3E01               	addlw	1
  9726  0DEB  1903               	skipnz
  9727  0DEC  2DEE               	goto	u3971
  9728  0DED  07B3               	addwf	___flmul@grs+1,f
  9729  0DEE                     u3971:
  9730  0DEE  082E               	movf	??___flmul+2,w
  9731  0DEF  1103               	clrz
  9732  0DF0  1803               	skipnc
  9733  0DF1  3E01               	addlw	1
  9734  0DF2  1903               	skipnz
  9735  0DF3  2DF5               	goto	u3972
  9736  0DF4  07B4               	addwf	___flmul@grs+2,f
  9737  0DF5                     u3972:
  9738  0DF5  082F               	movf	??___flmul+3,w
  9739  0DF6  1103               	clrz
  9740  0DF7  1803               	skipnc
  9741  0DF8  3E01               	addlw	1
  9742  0DF9  1903               	skipnz
  9743  0DFA  2DFC               	goto	u3973
  9744  0DFB  07B5               	addwf	___flmul@grs+3,f
  9745  0DFC                     u3973:
  9746  0DFC                     l2770:
  9747  0DFC  0824               	movf	___flmul@b,w
  9748  0DFD  00AC               	movwf	??___flmul
  9749  0DFE  082C               	movf	??___flmul,w
  9750  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  9751  0E00  0829               	movf	___flmul@a+1,w
  9752  0E01  160A  158A  2289  120A  158A  	fcall	__Umul8_16
  9753  0E06  0871               	movf	?__Umul8_16+1,w
  9754  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  9755  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  9756  0E09  00BD               	movwf	___flmul@temp+1
  9757  0E0A  0870               	movf	?__Umul8_16,w
  9758  0E0B  00BC               	movwf	___flmul@temp
  9759  0E0C                     l2772:
  9760  0E0C  083C               	movf	___flmul@temp,w
  9761  0E0D  00AC               	movwf	??___flmul
  9762  0E0E  083D               	movf	___flmul@temp+1,w
  9763  0E0F  00AD               	movwf	??___flmul+1
  9764  0E10  01AE               	clrf	??___flmul+2
  9765  0E11  01AF               	clrf	??___flmul+3
  9766  0E12  082C               	movf	??___flmul,w
  9767  0E13  07B2               	addwf	___flmul@grs,f
  9768  0E14  082D               	movf	??___flmul+1,w
  9769  0E15  1103               	clrz
  9770  0E16  1803               	skipnc
  9771  0E17  3E01               	addlw	1
  9772  0E18  1903               	skipnz
  9773  0E19  2E1B               	goto	u3981
  9774  0E1A  07B3               	addwf	___flmul@grs+1,f
  9775  0E1B                     u3981:
  9776  0E1B  082E               	movf	??___flmul+2,w
  9777  0E1C  1103               	clrz
  9778  0E1D  1803               	skipnc
  9779  0E1E  3E01               	addlw	1
  9780  0E1F  1903               	skipnz
  9781  0E20  2E22               	goto	u3982
  9782  0E21  07B4               	addwf	___flmul@grs+2,f
  9783  0E22                     u3982:
  9784  0E22  082F               	movf	??___flmul+3,w
  9785  0E23  1103               	clrz
  9786  0E24  1803               	skipnc
  9787  0E25  3E01               	addlw	1
  9788  0E26  1903               	skipnz
  9789  0E27  2E29               	goto	u3983
  9790  0E28  07B5               	addwf	___flmul@grs+3,f
  9791  0E29                     u3983:
  9792  0E29                     l2774:
  9793  0E29  3008               	movlw	8
  9794  0E2A  00AC               	movwf	??___flmul
  9795  0E2B                     u3995:
  9796  0E2B  1003               	clrc
  9797  0E2C  0DB2               	rlf	___flmul@grs,f
  9798  0E2D  0DB3               	rlf	___flmul@grs+1,f
  9799  0E2E  0DB4               	rlf	___flmul@grs+2,f
  9800  0E2F  0DB5               	rlf	___flmul@grs+3,f
  9801  0E30  0BAC               	decfsz	??___flmul,f
  9802  0E31  2E2B               	goto	u3995
  9803  0E32  0824               	movf	___flmul@b,w
  9804  0E33  00AC               	movwf	??___flmul
  9805  0E34  082C               	movf	??___flmul,w
  9806  0E35  00F0               	movwf	__Umul8_16@multiplicand
  9807  0E36  0828               	movf	___flmul@a,w
  9808  0E37  160A  158A  2289  120A  158A  	fcall	__Umul8_16
  9809  0E3C  0871               	movf	?__Umul8_16+1,w
  9810  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  9811  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  9812  0E3F  00BD               	movwf	___flmul@temp+1
  9813  0E40  0870               	movf	?__Umul8_16,w
  9814  0E41  00BC               	movwf	___flmul@temp
  9815  0E42                     l2776:
  9816  0E42  083C               	movf	___flmul@temp,w
  9817  0E43  00AC               	movwf	??___flmul
  9818  0E44  083D               	movf	___flmul@temp+1,w
  9819  0E45  00AD               	movwf	??___flmul+1
  9820  0E46  01AE               	clrf	??___flmul+2
  9821  0E47  01AF               	clrf	??___flmul+3
  9822  0E48  082C               	movf	??___flmul,w
  9823  0E49  07B2               	addwf	___flmul@grs,f
  9824  0E4A  082D               	movf	??___flmul+1,w
  9825  0E4B  1103               	clrz
  9826  0E4C  1803               	skipnc
  9827  0E4D  3E01               	addlw	1
  9828  0E4E  1903               	skipnz
  9829  0E4F  2E51               	goto	u4001
  9830  0E50  07B3               	addwf	___flmul@grs+1,f
  9831  0E51                     u4001:
  9832  0E51  082E               	movf	??___flmul+2,w
  9833  0E52  1103               	clrz
  9834  0E53  1803               	skipnc
  9835  0E54  3E01               	addlw	1
  9836  0E55  1903               	skipnz
  9837  0E56  2E58               	goto	u4002
  9838  0E57  07B4               	addwf	___flmul@grs+2,f
  9839  0E58                     u4002:
  9840  0E58  082F               	movf	??___flmul+3,w
  9841  0E59  1103               	clrz
  9842  0E5A  1803               	skipnc
  9843  0E5B  3E01               	addlw	1
  9844  0E5C  1903               	skipnz
  9845  0E5D  2E5F               	goto	u4003
  9846  0E5E  07B5               	addwf	___flmul@grs+3,f
  9847  0E5F                     u4003:
  9848  0E5F                     l2778:
  9849  0E5F  0825               	movf	___flmul@b+1,w
  9850  0E60  00AC               	movwf	??___flmul
  9851  0E61  082C               	movf	??___flmul,w
  9852  0E62  00F0               	movwf	__Umul8_16@multiplicand
  9853  0E63  082A               	movf	___flmul@a+2,w
  9854  0E64  160A  158A  2289  120A  158A  	fcall	__Umul8_16
  9855  0E69  0871               	movf	?__Umul8_16+1,w
  9856  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  9857  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  9858  0E6C  00BD               	movwf	___flmul@temp+1
  9859  0E6D  0870               	movf	?__Umul8_16,w
  9860  0E6E  00BC               	movwf	___flmul@temp
  9861  0E6F  083C               	movf	___flmul@temp,w
  9862  0E70  00AC               	movwf	??___flmul
  9863  0E71  083D               	movf	___flmul@temp+1,w
  9864  0E72  00AD               	movwf	??___flmul+1
  9865  0E73  01AE               	clrf	??___flmul+2
  9866  0E74  01AF               	clrf	??___flmul+3
  9867  0E75  082C               	movf	??___flmul,w
  9868  0E76  07B8               	addwf	___flmul@prod,f
  9869  0E77  082D               	movf	??___flmul+1,w
  9870  0E78  1103               	clrz
  9871  0E79  1803               	skipnc
  9872  0E7A  3E01               	addlw	1
  9873  0E7B  1903               	skipnz
  9874  0E7C  2E7E               	goto	u4011
  9875  0E7D  07B9               	addwf	___flmul@prod+1,f
  9876  0E7E                     u4011:
  9877  0E7E  082E               	movf	??___flmul+2,w
  9878  0E7F  1103               	clrz
  9879  0E80  1803               	skipnc
  9880  0E81  3E01               	addlw	1
  9881  0E82  1903               	skipnz
  9882  0E83  2E85               	goto	u4012
  9883  0E84  07BA               	addwf	___flmul@prod+2,f
  9884  0E85                     u4012:
  9885  0E85  082F               	movf	??___flmul+3,w
  9886  0E86  1103               	clrz
  9887  0E87  1803               	skipnc
  9888  0E88  3E01               	addlw	1
  9889  0E89  1903               	skipnz
  9890  0E8A  2E8C               	goto	u4013
  9891  0E8B  07BB               	addwf	___flmul@prod+3,f
  9892  0E8C                     u4013:
  9893  0E8C                     l2780:
  9894  0E8C  0826               	movf	___flmul@b+2,w
  9895  0E8D  00AC               	movwf	??___flmul
  9896  0E8E  082C               	movf	??___flmul,w
  9897  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  9898  0E90  0829               	movf	___flmul@a+1,w
  9899  0E91  160A  158A  2289  120A  158A  	fcall	__Umul8_16
  9900  0E96  0871               	movf	?__Umul8_16+1,w
  9901  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  9902  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  9903  0E99  00BD               	movwf	___flmul@temp+1
  9904  0E9A  0870               	movf	?__Umul8_16,w
  9905  0E9B  00BC               	movwf	___flmul@temp
  9906  0E9C                     l2782:
  9907  0E9C  083C               	movf	___flmul@temp,w
  9908  0E9D  00AC               	movwf	??___flmul
  9909  0E9E  083D               	movf	___flmul@temp+1,w
  9910  0E9F  00AD               	movwf	??___flmul+1
  9911  0EA0  01AE               	clrf	??___flmul+2
  9912  0EA1  01AF               	clrf	??___flmul+3
  9913  0EA2  082C               	movf	??___flmul,w
  9914  0EA3  07B8               	addwf	___flmul@prod,f
  9915  0EA4  082D               	movf	??___flmul+1,w
  9916  0EA5  1103               	clrz
  9917  0EA6  1803               	skipnc
  9918  0EA7  3E01               	addlw	1
  9919  0EA8  1903               	skipnz
  9920  0EA9  2EAB               	goto	u4021
  9921  0EAA  07B9               	addwf	___flmul@prod+1,f
  9922  0EAB                     u4021:
  9923  0EAB  082E               	movf	??___flmul+2,w
  9924  0EAC  1103               	clrz
  9925  0EAD  1803               	skipnc
  9926  0EAE  3E01               	addlw	1
  9927  0EAF  1903               	skipnz
  9928  0EB0  2EB2               	goto	u4022
  9929  0EB1  07BA               	addwf	___flmul@prod+2,f
  9930  0EB2                     u4022:
  9931  0EB2  082F               	movf	??___flmul+3,w
  9932  0EB3  1103               	clrz
  9933  0EB4  1803               	skipnc
  9934  0EB5  3E01               	addlw	1
  9935  0EB6  1903               	skipnz
  9936  0EB7  2EB9               	goto	u4023
  9937  0EB8  07BB               	addwf	___flmul@prod+3,f
  9938  0EB9                     u4023:
  9939  0EB9  0826               	movf	___flmul@b+2,w
  9940  0EBA  00AC               	movwf	??___flmul
  9941  0EBB  082C               	movf	??___flmul,w
  9942  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  9943  0EBD  082A               	movf	___flmul@a+2,w
  9944  0EBE  160A  158A  2289  120A  158A  	fcall	__Umul8_16
  9945  0EC3  0871               	movf	?__Umul8_16+1,w
  9946  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  9947  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  9948  0EC6  00BD               	movwf	___flmul@temp+1
  9949  0EC7  0870               	movf	?__Umul8_16,w
  9950  0EC8  00BC               	movwf	___flmul@temp
  9951  0EC9                     l2784:
  9952  0EC9  083C               	movf	___flmul@temp,w
  9953  0ECA  00AC               	movwf	??___flmul
  9954  0ECB  083D               	movf	___flmul@temp+1,w
  9955  0ECC  00AD               	movwf	??___flmul+1
  9956  0ECD  01AE               	clrf	??___flmul+2
  9957  0ECE  01AF               	clrf	??___flmul+3
  9958  0ECF  3008               	movlw	8
  9959  0ED0                     u4035:
  9960  0ED0  1003               	clrc
  9961  0ED1  0DAC               	rlf	??___flmul,f
  9962  0ED2  0DAD               	rlf	??___flmul+1,f
  9963  0ED3  0DAE               	rlf	??___flmul+2,f
  9964  0ED4  0DAF               	rlf	??___flmul+3,f
  9965  0ED5                     u4030:
  9966  0ED5  3EFF               	addlw	-1
  9967  0ED6  1D03               	skipz
  9968  0ED7  2ED0               	goto	u4035
  9969  0ED8  082C               	movf	??___flmul,w
  9970  0ED9  07B8               	addwf	___flmul@prod,f
  9971  0EDA  082D               	movf	??___flmul+1,w
  9972  0EDB  1103               	clrz
  9973  0EDC  1803               	skipnc
  9974  0EDD  3E01               	addlw	1
  9975  0EDE  1903               	skipnz
  9976  0EDF  2EE1               	goto	u4041
  9977  0EE0  07B9               	addwf	___flmul@prod+1,f
  9978  0EE1                     u4041:
  9979  0EE1  082E               	movf	??___flmul+2,w
  9980  0EE2  1103               	clrz
  9981  0EE3  1803               	skipnc
  9982  0EE4  3E01               	addlw	1
  9983  0EE5  1903               	skipnz
  9984  0EE6  2EE8               	goto	u4042
  9985  0EE7  07BA               	addwf	___flmul@prod+2,f
  9986  0EE8                     u4042:
  9987  0EE8  082F               	movf	??___flmul+3,w
  9988  0EE9  1103               	clrz
  9989  0EEA  1803               	skipnc
  9990  0EEB  3E01               	addlw	1
  9991  0EEC  1903               	skipnz
  9992  0EED  2EEF               	goto	u4043
  9993  0EEE  07BB               	addwf	___flmul@prod+3,f
  9994  0EEF                     u4043:
  9995  0EEF                     l2786:
  9996  0EEF  0832               	movf	___flmul@grs,w
  9997  0EF0  00AC               	movwf	??___flmul
  9998  0EF1  0833               	movf	___flmul@grs+1,w
  9999  0EF2  00AD               	movwf	??___flmul+1
 10000  0EF3  0834               	movf	___flmul@grs+2,w
 10001  0EF4  00AE               	movwf	??___flmul+2
 10002  0EF5  0835               	movf	___flmul@grs+3,w
 10003  0EF6  00AF               	movwf	??___flmul+3
 10004  0EF7  3018               	movlw	24
 10005  0EF8                     u4055:
 10006  0EF8  1003               	clrc
 10007  0EF9  0CAF               	rrf	??___flmul+3,f
 10008  0EFA  0CAE               	rrf	??___flmul+2,f
 10009  0EFB  0CAD               	rrf	??___flmul+1,f
 10010  0EFC  0CAC               	rrf	??___flmul,f
 10011  0EFD                     u4050:
 10012  0EFD  3EFF               	addlw	-1
 10013  0EFE  1D03               	skipz
 10014  0EFF  2EF8               	goto	u4055
 10015  0F00  082C               	movf	??___flmul,w
 10016  0F01  07B8               	addwf	___flmul@prod,f
 10017  0F02  082D               	movf	??___flmul+1,w
 10018  0F03  1103               	clrz
 10019  0F04  1803               	skipnc
 10020  0F05  3E01               	addlw	1
 10021  0F06  1903               	skipnz
 10022  0F07  2F09               	goto	u4061
 10023  0F08  07B9               	addwf	___flmul@prod+1,f
 10024  0F09                     u4061:
 10025  0F09  082E               	movf	??___flmul+2,w
 10026  0F0A  1103               	clrz
 10027  0F0B  1803               	skipnc
 10028  0F0C  3E01               	addlw	1
 10029  0F0D  1903               	skipnz
 10030  0F0E  2F10               	goto	u4062
 10031  0F0F  07BA               	addwf	___flmul@prod+2,f
 10032  0F10                     u4062:
 10033  0F10  082F               	movf	??___flmul+3,w
 10034  0F11  1103               	clrz
 10035  0F12  1803               	skipnc
 10036  0F13  3E01               	addlw	1
 10037  0F14  1903               	skipnz
 10038  0F15  2F17               	goto	u4063
 10039  0F16  07BB               	addwf	___flmul@prod+3,f
 10040  0F17                     u4063:
 10041  0F17                     l2788:
 10042  0F17  3008               	movlw	8
 10043  0F18  00AC               	movwf	??___flmul
 10044  0F19                     u4075:
 10045  0F19  1003               	clrc
 10046  0F1A  0DB2               	rlf	___flmul@grs,f
 10047  0F1B  0DB3               	rlf	___flmul@grs+1,f
 10048  0F1C  0DB4               	rlf	___flmul@grs+2,f
 10049  0F1D  0DB5               	rlf	___flmul@grs+3,f
 10050  0F1E  0BAC               	decfsz	??___flmul,f
 10051  0F1F  2F19               	goto	u4075
 10052  0F20                     l2790:
 10053  0F20  0837               	movf	___flmul@bexp,w
 10054  0F21  0736               	addwf	___flmul@aexp,w
 10055  0F22  00AC               	movwf	??___flmul
 10056  0F23  01AD               	clrf	??___flmul+1
 10057  0F24  0DAD               	rlf	??___flmul+1,f
 10058  0F25  082C               	movf	??___flmul,w
 10059  0F26  3E82               	addlw	130
 10060  0F27  00BC               	movwf	___flmul@temp
 10061  0F28  082D               	movf	??___flmul+1,w
 10062  0F29  1803               	skipnc
 10063  0F2A  3E01               	addlw	1
 10064  0F2B  3EFF               	addlw	255
 10065  0F2C  00BD               	movwf	___flmul@temp+1
 10066  0F2D  2F4B               	goto	l2802
 10067  0F2E                     l2792:
 10068  0F2E  3001               	movlw	1
 10069  0F2F  00AC               	movwf	??___flmul
 10070  0F30                     u4085:
 10071  0F30  1003               	clrc
 10072  0F31  0DB8               	rlf	___flmul@prod,f
 10073  0F32  0DB9               	rlf	___flmul@prod+1,f
 10074  0F33  0DBA               	rlf	___flmul@prod+2,f
 10075  0F34  0DBB               	rlf	___flmul@prod+3,f
 10076  0F35  0BAC               	decfsz	??___flmul,f
 10077  0F36  2F30               	goto	u4085
 10078  0F37                     l2794:
 10079  0F37  1FB5               	btfss	___flmul@grs+3,7
 10080  0F38  2F3A               	goto	u4091
 10081  0F39  2F3B               	goto	u4090
 10082  0F3A                     u4091:
 10083  0F3A  2F3C               	goto	l2798
 10084  0F3B                     u4090:
 10085  0F3B                     l2796:
 10086  0F3B  1438               	bsf	___flmul@prod,0
 10087  0F3C                     l2798:
 10088  0F3C  3001               	movlw	1
 10089  0F3D  00AC               	movwf	??___flmul
 10090  0F3E                     u4105:
 10091  0F3E  1003               	clrc
 10092  0F3F  0DB2               	rlf	___flmul@grs,f
 10093  0F40  0DB3               	rlf	___flmul@grs+1,f
 10094  0F41  0DB4               	rlf	___flmul@grs+2,f
 10095  0F42  0DB5               	rlf	___flmul@grs+3,f
 10096  0F43  0BAC               	decfsz	??___flmul,f
 10097  0F44  2F3E               	goto	u4105
 10098  0F45                     l2800:
 10099  0F45  30FF               	movlw	255
 10100  0F46  07BC               	addwf	___flmul@temp,f
 10101  0F47  1803               	skipnc
 10102  0F48  0ABD               	incf	___flmul@temp+1,f
 10103  0F49  30FF               	movlw	255
 10104  0F4A  07BD               	addwf	___flmul@temp+1,f
 10105  0F4B                     l2802:
 10106  0F4B  1FBA               	btfss	___flmul@prod+2,7
 10107  0F4C  2F4E               	goto	u4111
 10108  0F4D  2F4F               	goto	u4110
 10109  0F4E                     u4111:
 10110  0F4E  2F2E               	goto	l2792
 10111  0F4F                     u4110:
 10112  0F4F                     l2804:
 10113  0F4F  01B6               	clrf	___flmul@aexp
 10114  0F50                     l2806:
 10115  0F50  1FB5               	btfss	___flmul@grs+3,7
 10116  0F51  2F53               	goto	u4121
 10117  0F52  2F54               	goto	u4120
 10118  0F53                     u4121:
 10119  0F53  2F70               	goto	l2814
 10120  0F54                     u4120:
 10121  0F54                     l2808:
 10122  0F54  30FF               	movlw	255
 10123  0F55  0532               	andwf	___flmul@grs,w
 10124  0F56  00AC               	movwf	??___flmul
 10125  0F57  30FF               	movlw	255
 10126  0F58  0533               	andwf	___flmul@grs+1,w
 10127  0F59  00AD               	movwf	??___flmul+1
 10128  0F5A  30FF               	movlw	255
 10129  0F5B  0534               	andwf	___flmul@grs+2,w
 10130  0F5C  00AE               	movwf	??___flmul+2
 10131  0F5D  307F               	movlw	127
 10132  0F5E  0535               	andwf	___flmul@grs+3,w
 10133  0F5F  00AF               	movwf	??___flmul+3
 10134  0F60  082F               	movf	??___flmul+3,w
 10135  0F61  042E               	iorwf	??___flmul+2,w
 10136  0F62  042D               	iorwf	??___flmul+1,w
 10137  0F63  042C               	iorwf	??___flmul,w
 10138  0F64  1903               	skipnz
 10139  0F65  2F67               	goto	u4131
 10140  0F66  2F68               	goto	u4130
 10141  0F67                     u4131:
 10142  0F67  2F6B               	goto	l836
 10143  0F68                     u4130:
 10144  0F68                     l2810:
 10145  0F68  01B6               	clrf	___flmul@aexp
 10146  0F69  0AB6               	incf	___flmul@aexp,f
 10147  0F6A  2F70               	goto	l2814
 10148  0F6B                     l836:
 10149  0F6B  1C38               	btfss	___flmul@prod,0
 10150  0F6C  2F6E               	goto	u4141
 10151  0F6D  2F6F               	goto	u4140
 10152  0F6E                     u4141:
 10153  0F6E  2F70               	goto	l2814
 10154  0F6F                     u4140:
 10155  0F6F  2F68               	goto	l2810
 10156  0F70                     l2814:
 10157  0F70  0836               	movf	___flmul@aexp,w
 10158  0F71  1903               	btfsc	3,2
 10159  0F72  2F74               	goto	u4151
 10160  0F73  2F75               	goto	u4150
 10161  0F74                     u4151:
 10162  0F74  2FA6               	goto	l2824
 10163  0F75                     u4150:
 10164  0F75                     l2816:
 10165  0F75  3001               	movlw	1
 10166  0F76  07B8               	addwf	___flmul@prod,f
 10167  0F77  3000               	movlw	0
 10168  0F78  1803               	skipnc
 10169  0F79  3001               	movlw	1
 10170  0F7A  07B9               	addwf	___flmul@prod+1,f
 10171  0F7B  3000               	movlw	0
 10172  0F7C  1803               	skipnc
 10173  0F7D  3001               	movlw	1
 10174  0F7E  07BA               	addwf	___flmul@prod+2,f
 10175  0F7F  3000               	movlw	0
 10176  0F80  1803               	skipnc
 10177  0F81  3001               	movlw	1
 10178  0F82  07BB               	addwf	___flmul@prod+3,f
 10179  0F83                     l2818:
 10180  0F83  1C3B               	btfss	___flmul@prod+3,0
 10181  0F84  2F86               	goto	u4161
 10182  0F85  2F87               	goto	u4160
 10183  0F86                     u4161:
 10184  0F86  2FA6               	goto	l2824
 10185  0F87                     u4160:
 10186  0F87                     l2820:
 10187  0F87  0838               	movf	___flmul@prod,w
 10188  0F88  00AC               	movwf	??___flmul
 10189  0F89  0839               	movf	___flmul@prod+1,w
 10190  0F8A  00AD               	movwf	??___flmul+1
 10191  0F8B  083A               	movf	___flmul@prod+2,w
 10192  0F8C  00AE               	movwf	??___flmul+2
 10193  0F8D  083B               	movf	___flmul@prod+3,w
 10194  0F8E  00AF               	movwf	??___flmul+3
 10195  0F8F  3001               	movlw	1
 10196  0F90  00B0               	movwf	??___flmul+4
 10197  0F91                     u4175:
 10198  0F91  0D2F               	rlf	??___flmul+3,w
 10199  0F92  0CAF               	rrf	??___flmul+3,f
 10200  0F93  0CAE               	rrf	??___flmul+2,f
 10201  0F94  0CAD               	rrf	??___flmul+1,f
 10202  0F95  0CAC               	rrf	??___flmul,f
 10203  0F96                     u4170:
 10204  0F96  0BB0               	decfsz	??___flmul+4,f
 10205  0F97  2F91               	goto	u4175
 10206  0F98  082F               	movf	??___flmul+3,w
 10207  0F99  00BB               	movwf	___flmul@prod+3
 10208  0F9A  082E               	movf	??___flmul+2,w
 10209  0F9B  00BA               	movwf	___flmul@prod+2
 10210  0F9C  082D               	movf	??___flmul+1,w
 10211  0F9D  00B9               	movwf	___flmul@prod+1
 10212  0F9E  082C               	movf	??___flmul,w
 10213  0F9F  00B8               	movwf	___flmul@prod
 10214  0FA0                     l2822:
 10215  0FA0  3001               	movlw	1
 10216  0FA1  07BC               	addwf	___flmul@temp,f
 10217  0FA2  1803               	skipnc
 10218  0FA3  0ABD               	incf	___flmul@temp+1,f
 10219  0FA4  3000               	movlw	0
 10220  0FA5  07BD               	addwf	___flmul@temp+1,f
 10221  0FA6                     l2824:
 10222  0FA6  083D               	movf	___flmul@temp+1,w
 10223  0FA7  3A80               	xorlw	128
 10224  0FA8  00FF               	movwf	btemp+1
 10225  0FA9  3080               	movlw	128
 10226  0FAA  027F               	subwf	btemp+1,w
 10227  0FAB  1D03               	skipz
 10228  0FAC  2FAF               	goto	u4185
 10229  0FAD  30FF               	movlw	255
 10230  0FAE  023C               	subwf	___flmul@temp,w
 10231  0FAF                     u4185:
 10232  0FAF  1C03               	skipc
 10233  0FB0  2FB2               	goto	u4181
 10234  0FB1  2FB3               	goto	u4180
 10235  0FB2                     u4181:
 10236  0FB2  2FBE               	goto	l2828
 10237  0FB3                     u4180:
 10238  0FB3                     l2826:
 10239  0FB3  307F               	movlw	127
 10240  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
 10241  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
 10242  0FB6  00BB               	movwf	___flmul@prod+3
 10243  0FB7  3080               	movlw	128
 10244  0FB8  00BA               	movwf	___flmul@prod+2
 10245  0FB9  3000               	movlw	0
 10246  0FBA  00B9               	movwf	___flmul@prod+1
 10247  0FBB  3000               	movlw	0
 10248  0FBC  00B8               	movwf	___flmul@prod
 10249  0FBD  2FF3               	goto	l842
 10250  0FBE                     l2828:
 10251  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
 10252  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
 10253  0FC0  083D               	movf	___flmul@temp+1,w
 10254  0FC1  3A80               	xorlw	128
 10255  0FC2  00FF               	movwf	btemp+1
 10256  0FC3  3080               	movlw	128
 10257  0FC4  027F               	subwf	btemp+1,w
 10258  0FC5  1D03               	skipz
 10259  0FC6  2FC9               	goto	u4195
 10260  0FC7  3001               	movlw	1
 10261  0FC8  023C               	subwf	___flmul@temp,w
 10262  0FC9                     u4195:
 10263  0FC9  1803               	skipnc
 10264  0FCA  2FCC               	goto	u4191
 10265  0FCB  2FCD               	goto	u4190
 10266  0FCC                     u4191:
 10267  0FCC  2FD9               	goto	l2834
 10268  0FCD                     u4190:
 10269  0FCD                     l2830:
 10270  0FCD  3000               	movlw	0
 10271  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
 10272  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
 10273  0FD0  00BB               	movwf	___flmul@prod+3
 10274  0FD1  3000               	movlw	0
 10275  0FD2  00BA               	movwf	___flmul@prod+2
 10276  0FD3  3000               	movlw	0
 10277  0FD4  00B9               	movwf	___flmul@prod+1
 10278  0FD5  3000               	movlw	0
 10279  0FD6  00B8               	movwf	___flmul@prod
 10280  0FD7                     l2832:
 10281  0FD7  01B1               	clrf	___flmul@sign
 10282  0FD8  2FF3               	goto	l842
 10283  0FD9                     l2834:
 10284  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
 10285  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
 10286  0FDB  083C               	movf	___flmul@temp,w
 10287  0FDC  00AC               	movwf	??___flmul
 10288  0FDD  082C               	movf	??___flmul,w
 10289  0FDE  00B7               	movwf	___flmul@bexp
 10290  0FDF  30FF               	movlw	255
 10291  0FE0  05B8               	andwf	___flmul@prod,f
 10292  0FE1  30FF               	movlw	255
 10293  0FE2  05B9               	andwf	___flmul@prod+1,f
 10294  0FE3  307F               	movlw	127
 10295  0FE4  05BA               	andwf	___flmul@prod+2,f
 10296  0FE5  3000               	movlw	0
 10297  0FE6  05BB               	andwf	___flmul@prod+3,f
 10298  0FE7                     l2836:
 10299  0FE7  1C37               	btfss	___flmul@bexp,0
 10300  0FE8  2FEA               	goto	u4201
 10301  0FE9  2FEB               	goto	u4200
 10302  0FEA                     u4201:
 10303  0FEA  2FEC               	goto	l2840
 10304  0FEB                     u4200:
 10305  0FEB                     l2838:
 10306  0FEB  17BA               	bsf	___flmul@prod+2,7
 10307  0FEC                     l2840:
 10308  0FEC  0837               	movf	___flmul@bexp,w
 10309  0FED  00AC               	movwf	??___flmul
 10310  0FEE  1003               	clrc
 10311  0FEF  0C2C               	rrf	??___flmul,w
 10312  0FF0  00AD               	movwf	??___flmul+1
 10313  0FF1  082D               	movf	??___flmul+1,w
 10314  0FF2  00BB               	movwf	___flmul@prod+3
 10315  0FF3                     l842:
 10316  0FF3  0831               	movf	___flmul@sign,w
 10317  0FF4  00AC               	movwf	??___flmul
 10318  0FF5  082C               	movf	??___flmul,w
 10319  0FF6  04BB               	iorwf	___flmul@prod+3,f
 10320  0FF7                     l2842:
 10321  0FF7  083B               	movf	___flmul@prod+3,w
 10322  0FF8  00A7               	movwf	?___flmul+3
 10323  0FF9  083A               	movf	___flmul@prod+2,w
 10324  0FFA  00A6               	movwf	?___flmul+2
 10325  0FFB  0839               	movf	___flmul@prod+1,w
 10326  0FFC  00A5               	movwf	?___flmul+1
 10327  0FFD  0838               	movf	___flmul@prod,w
 10328  0FFE  00A4               	movwf	?___flmul
 10329  0FFF                     l830:
 10330  0FFF  0008               	return
 10331  1000                     __end_of___flmul:
 10332                           
 10333                           	psect	text27
 10334  1A89                     __ptext27:	
 10335 ;; *************** function __Umul8_16 *****************
 10336 ;; Defined at:
 10337 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;  multiplier      1    wreg     unsigned char 
 10340 ;;  multiplicand    1    0[COMMON] unsigned char 
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;  multiplier      1    8[COMMON] unsigned char 
 10343 ;;  word_mpld       2    6[COMMON] unsigned int 
 10344 ;;  product         2    4[COMMON] unsigned int 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  2    0[COMMON] unsigned int 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10354 ;;      Params:         2       0       0       0       0
 10355 ;;      Locals:         5       0       0       0       0
 10356 ;;      Temps:          2       0       0       0       0
 10357 ;;      Totals:         9       0       0       0       0
 10358 ;;Total ram usage:        9 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		___flmul
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           
 10368                           ;psect for function __Umul8_16
 10369  1A89                     __Umul8_16:
 10370                           
 10371                           ;incstack = 0
 10372                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10373                           ;__Umul8_16@multiplier stored from wreg
 10374  1A89  00F8               	movwf	__Umul8_16@multiplier
 10375  1A8A                     l2326:
 10376  1A8A  01F4               	clrf	__Umul8_16@product
 10377  1A8B  01F5               	clrf	__Umul8_16@product+1
 10378  1A8C                     l2328:
 10379  1A8C  0870               	movf	__Umul8_16@multiplicand,w
 10380  1A8D  00F2               	movwf	??__Umul8_16
 10381  1A8E  01F3               	clrf	??__Umul8_16+1
 10382  1A8F  0872               	movf	??__Umul8_16,w
 10383  1A90  00F6               	movwf	__Umul8_16@word_mpld
 10384  1A91  0873               	movf	??__Umul8_16+1,w
 10385  1A92  00F7               	movwf	__Umul8_16@word_mpld+1
 10386  1A93                     l2330:
 10387  1A93  1C78               	btfss	__Umul8_16@multiplier,0
 10388  1A94  2A96               	goto	u2881
 10389  1A95  2A97               	goto	u2880
 10390  1A96                     u2881:
 10391  1A96  2A9D               	goto	l849
 10392  1A97                     u2880:
 10393  1A97                     l2332:
 10394  1A97  0876               	movf	__Umul8_16@word_mpld,w
 10395  1A98  07F4               	addwf	__Umul8_16@product,f
 10396  1A99  1803               	skipnc
 10397  1A9A  0AF5               	incf	__Umul8_16@product+1,f
 10398  1A9B  0877               	movf	__Umul8_16@word_mpld+1,w
 10399  1A9C  07F5               	addwf	__Umul8_16@product+1,f
 10400  1A9D                     l849:
 10401  1A9D  3001               	movlw	1
 10402  1A9E                     u2895:
 10403  1A9E  1003               	clrc
 10404  1A9F  0DF6               	rlf	__Umul8_16@word_mpld,f
 10405  1AA0  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10406  1AA1  3EFF               	addlw	-1
 10407  1AA2  1D03               	skipz
 10408  1AA3  2A9E               	goto	u2895
 10409  1AA4  1003               	clrc
 10410  1AA5  0CF8               	rrf	__Umul8_16@multiplier,f
 10411  1AA6                     l2334:
 10412  1AA6  0878               	movf	__Umul8_16@multiplier,w
 10413  1AA7  1D03               	btfss	3,2
 10414  1AA8  2AAA               	goto	u2901
 10415  1AA9  2AAB               	goto	u2900
 10416  1AAA                     u2901:
 10417  1AAA  2A93               	goto	l2330
 10418  1AAB                     u2900:
 10419  1AAB                     l2336:
 10420  1AAB  0875               	movf	__Umul8_16@product+1,w
 10421  1AAC  00F1               	movwf	?__Umul8_16+1
 10422  1AAD  0874               	movf	__Umul8_16@product,w
 10423  1AAE  00F0               	movwf	?__Umul8_16
 10424  1AAF                     l851:
 10425  1AAF  0008               	return
 10426  1AB0                     __end_of__Umul8_16:
 10427                           
 10428                           	psect	text28
 10429  197F                     __ptext28:	
 10430 ;; *************** function _cfg_clk *****************
 10431 ;; Defined at:
 10432 ;;		line 137 in file "main4a.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;		None
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;		None
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  1    wreg      void 
 10439 ;; Registers used:
 10440 ;;		wreg, status,2, status,0
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10446 ;;      Params:         0       0       0       0       0
 10447 ;;      Locals:         0       0       0       0       0
 10448 ;;      Temps:          0       0       0       0       0
 10449 ;;      Totals:         0       0       0       0       0
 10450 ;;Total ram usage:        0 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		_main
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           
 10460                           ;psect for function _cfg_clk
 10461  197F                     _cfg_clk:
 10462  197F                     l3218:	
 10463                           ;incstack = 0
 10464                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
 10465                           
 10466                           
 10467                           ;main4a.c: 138:     OSCCONbits.IRCF = 0b111;
 10468  197F  3070               	movlw	112
 10469  1980  1683               	bsf	3,5	;RP0=1, select bank1
 10470  1981  1303               	bcf	3,6	;RP1=0, select bank1
 10471  1982  048F               	iorwf	15,f	;volatile
 10472  1983                     l3220:
 10473                           
 10474                           ;main4a.c: 139:     OSCCONbits.SCS = 1;
 10475  1983  140F               	bsf	15,0	;volatile
 10476  1984                     l76:
 10477  1984  0008               	return
 10478  1985                     __end_of_cfg_clk:
 10479                           
 10480                           	psect	text29
 10481  1BF7                     __ptext29:	
 10482 ;; *************** function _Lcd_Write_String *****************
 10483 ;; Defined at:
 10484 ;;		line 110 in file "LCD.c"
 10485 ;; Parameters:    Size  Location     Type
 10486 ;;  a               2    3[COMMON] PTR unsigned char 
 10487 ;;		 -> f1(10), STR_1(17), 
 10488 ;; Auto vars:     Size  Location     Type
 10489 ;;  i               2    8[COMMON] int 
 10490 ;; Return value:  Size  Location     Type
 10491 ;;                  1    wreg      void 
 10492 ;; Registers used:
 10493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10494 ;; Tracked objects:
 10495 ;;		On entry : 0/0
 10496 ;;		On exit  : 0/0
 10497 ;;		Unchanged: 0/0
 10498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10499 ;;      Params:         2       0       0       0       0
 10500 ;;      Locals:         2       0       0       0       0
 10501 ;;      Temps:          3       0       0       0       0
 10502 ;;      Totals:         7       0       0       0       0
 10503 ;;Total ram usage:        7 bytes
 10504 ;; Hardware stack levels used:    1
 10505 ;; Hardware stack levels required when called:    2
 10506 ;; This function calls:
 10507 ;;		_Lcd_Write_Char
 10508 ;; This function is called by:
 10509 ;;		_main
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           
 10514                           ;psect for function _Lcd_Write_String
 10515  1BF7                     _Lcd_Write_String:
 10516  1BF7                     l3282:	
 10517                           ;incstack = 0
 10518                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10519                           
 10520                           
 10521                           ;LCD.c: 111:     int i;;LCD.c: 112:     for (i = 0; a[i] != '\0'; i++)
 10522  1BF7  01F8               	clrf	Lcd_Write_String@i
 10523  1BF8  01F9               	clrf	Lcd_Write_String@i+1
 10524  1BF9  2C1C               	goto	l3288
 10525  1BFA                     l3284:
 10526                           
 10527                           ;LCD.c: 113:         Lcd_Write_Char(a[i]);
 10528  1BFA  0878               	movf	Lcd_Write_String@i,w
 10529  1BFB  0773               	addwf	Lcd_Write_String@a,w
 10530  1BFC  00F6               	movwf	??_Lcd_Write_String+1
 10531  1BFD  0874               	movf	Lcd_Write_String@a+1,w
 10532  1BFE  00F5               	movwf	??_Lcd_Write_String
 10533  1BFF  1803               	skipnc
 10534  1C00  0AF5               	incf	??_Lcd_Write_String,f
 10535  1C01  1FF8               	btfss	Lcd_Write_String@i,7
 10536  1C02  2C04               	goto	u5250
 10537  1C03  03F5               	decf	??_Lcd_Write_String,f
 10538  1C04                     u5250:
 10539  1C04  0875               	movf	??_Lcd_Write_String,w
 10540  1C05  00F7               	movwf	??_Lcd_Write_String+2
 10541  1C06  0877               	movf	??_Lcd_Write_String+2,w
 10542  1C07  1283               	bcf	3,5	;RP0=0, select bank0
 10543  1C08  1303               	bcf	3,6	;RP1=0, select bank0
 10544  1C09  00FF               	movwf	btemp+1
 10545  1C0A  0876               	movf	??_Lcd_Write_String+1,w
 10546  1C0B  0084               	movwf	4
 10547  1C0C  120A  158A  2000  160A  158A  	fcall	stringtab
 10548  1C11  160A  158A  21E5  160A  158A  	fcall	_Lcd_Write_Char
 10549  1C16                     l3286:
 10550  1C16  3001               	movlw	1
 10551  1C17  07F8               	addwf	Lcd_Write_String@i,f
 10552  1C18  1803               	skipnc
 10553  1C19  0AF9               	incf	Lcd_Write_String@i+1,f
 10554  1C1A  3000               	movlw	0
 10555  1C1B  07F9               	addwf	Lcd_Write_String@i+1,f
 10556  1C1C                     l3288:
 10557  1C1C  0878               	movf	Lcd_Write_String@i,w
 10558  1C1D  0773               	addwf	Lcd_Write_String@a,w
 10559  1C1E  00F6               	movwf	??_Lcd_Write_String+1
 10560  1C1F  0874               	movf	Lcd_Write_String@a+1,w
 10561  1C20  00F5               	movwf	??_Lcd_Write_String
 10562  1C21  1803               	skipnc
 10563  1C22  0AF5               	incf	??_Lcd_Write_String,f
 10564  1C23  1FF8               	btfss	Lcd_Write_String@i,7
 10565  1C24  2C26               	goto	u5260
 10566  1C25  03F5               	decf	??_Lcd_Write_String,f
 10567  1C26                     u5260:
 10568  1C26  0875               	movf	??_Lcd_Write_String,w
 10569  1C27  00F7               	movwf	??_Lcd_Write_String+2
 10570  1C28  0877               	movf	??_Lcd_Write_String+2,w
 10571  1C29  1283               	bcf	3,5	;RP0=0, select bank0
 10572  1C2A  1303               	bcf	3,6	;RP1=0, select bank0
 10573  1C2B  00FF               	movwf	btemp+1
 10574  1C2C  0876               	movf	??_Lcd_Write_String+1,w
 10575  1C2D  0084               	movwf	4
 10576  1C2E  120A  158A  2000  160A  158A  	fcall	stringtab
 10577  1C33  3A00               	xorlw	0
 10578  1C34  1D03               	skipz
 10579  1C35  2C37               	goto	u5271
 10580  1C36  2C38               	goto	u5270
 10581  1C37                     u5271:
 10582  1C37  2BFA               	goto	l3284
 10583  1C38                     u5270:
 10584  1C38                     l205:
 10585  1C38  0008               	return
 10586  1C39                     __end_of_Lcd_Write_String:
 10587                           
 10588                           	psect	text30
 10589  19E5                     __ptext30:	
 10590 ;; *************** function _Lcd_Write_Char *****************
 10591 ;; Defined at:
 10592 ;;		line 94 in file "LCD.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;  a               1    wreg     unsigned char 
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;  a               1    2[COMMON] unsigned char 
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  1    wreg      void 
 10599 ;; Registers used:
 10600 ;;		wreg, status,2, status,0, pclath, cstack
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10606 ;;      Params:         0       0       0       0       0
 10607 ;;      Locals:         1       0       0       0       0
 10608 ;;      Temps:          1       0       0       0       0
 10609 ;;      Totals:         2       0       0       0       0
 10610 ;;Total ram usage:        2 bytes
 10611 ;; Hardware stack levels used:    1
 10612 ;; Hardware stack levels required when called:    1
 10613 ;; This function calls:
 10614 ;;		_Lcd_Port
 10615 ;; This function is called by:
 10616 ;;		_Lcd_Write_String
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           
 10621                           ;psect for function _Lcd_Write_Char
 10622  19E5                     _Lcd_Write_Char:
 10623                           
 10624                           ;incstack = 0
 10625                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10626                           ;Lcd_Write_Char@a stored from wreg
 10627  19E5  00F2               	movwf	Lcd_Write_Char@a
 10628  19E6                     l2872:
 10629                           
 10630                           ;LCD.c: 98:     PORTCbits.RC0 = 1;
 10631  19E6  1283               	bcf	3,5	;RP0=0, select bank0
 10632  19E7  1303               	bcf	3,6	;RP1=0, select bank0
 10633  19E8  1407               	bsf	7,0	;volatile
 10634  19E9                     l2874:
 10635                           
 10636                           ;LCD.c: 99:     Lcd_Port(a);
 10637  19E9  0872               	movf	Lcd_Write_Char@a,w
 10638  19EA  160A  158A  2379  160A  158A  	fcall	_Lcd_Port
 10639  19EF                     l2876:
 10640                           
 10641                           ;LCD.c: 100:     RC1 = 1;
 10642  19EF  1283               	bcf	3,5	;RP0=0, select bank0
 10643  19F0  1303               	bcf	3,6	;RP1=0, select bank0
 10644  19F1  1487               	bsf	7,1	;volatile
 10645  19F2                     l2878:
 10646                           
 10647                           ;LCD.c: 101:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10648  19F2  301A               	movlw	26
 10649  19F3  00F1               	movwf	??_Lcd_Write_Char
 10650  19F4                     u5827:
 10651  19F4  0BF1               	decfsz	??_Lcd_Write_Char,f
 10652  19F5  29F4               	goto	u5827
 10653  19F6  0000               	nop
 10654  19F7                     l2880:
 10655                           
 10656                           ;LCD.c: 102:     RC1 = 0;
 10657  19F7  1283               	bcf	3,5	;RP0=0, select bank0
 10658  19F8  1303               	bcf	3,6	;RP1=0, select bank0
 10659  19F9  1087               	bcf	7,1	;volatile
 10660  19FA                     l2882:
 10661                           
 10662                           ;LCD.c: 103:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10663  19FA  301A               	movlw	26
 10664  19FB  00F1               	movwf	??_Lcd_Write_Char
 10665  19FC                     u5837:
 10666  19FC  0BF1               	decfsz	??_Lcd_Write_Char,f
 10667  19FD  29FC               	goto	u5837
 10668  19FE  0000               	nop
 10669  19FF                     l199:
 10670  19FF  0008               	return
 10671  1A00                     __end_of_Lcd_Write_Char:
 10672                           
 10673                           	psect	text31
 10674  1A1C                     __ptext31:	
 10675 ;; *************** function _Lcd_Set_Cursor *****************
 10676 ;; Defined at:
 10677 ;;		line 69 in file "LCD.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  a               1    wreg     unsigned char 
 10680 ;;  b               1    4[COMMON] unsigned char 
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;  a               1    6[COMMON] unsigned char 
 10683 ;;  temp            1    7[COMMON] unsigned char 
 10684 ;; Return value:  Size  Location     Type
 10685 ;;                  1    wreg      void 
 10686 ;; Registers used:
 10687 ;;		wreg, status,2, status,0, pclath, cstack
 10688 ;; Tracked objects:
 10689 ;;		On entry : 0/0
 10690 ;;		On exit  : 0/0
 10691 ;;		Unchanged: 0/0
 10692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10693 ;;      Params:         1       0       0       0       0
 10694 ;;      Locals:         2       0       0       0       0
 10695 ;;      Temps:          1       0       0       0       0
 10696 ;;      Totals:         4       0       0       0       0
 10697 ;;Total ram usage:        4 bytes
 10698 ;; Hardware stack levels used:    1
 10699 ;; Hardware stack levels required when called:    2
 10700 ;; This function calls:
 10701 ;;		_Lcd_Cmd
 10702 ;; This function is called by:
 10703 ;;		_main
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           
 10708                           ;psect for function _Lcd_Set_Cursor
 10709  1A1C                     _Lcd_Set_Cursor:
 10710                           
 10711                           ;incstack = 0
 10712                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10713                           ;Lcd_Set_Cursor@a stored from wreg
 10714  1A1C  00F6               	movwf	Lcd_Set_Cursor@a
 10715  1A1D                     l3270:
 10716                           
 10717                           ;LCD.c: 70:     char temp;;LCD.c: 71:     if (a == 1) {
 10718  1A1D  0376               	decf	Lcd_Set_Cursor@a,w
 10719  1A1E  1D03               	btfss	3,2
 10720  1A1F  2A21               	goto	u5231
 10721  1A20  2A22               	goto	u5230
 10722  1A21                     u5231:
 10723  1A21  2A2E               	goto	l3276
 10724  1A22                     u5230:
 10725  1A22                     l3272:
 10726                           
 10727                           ;LCD.c: 72:         temp = 0x80 + b - 1;
 10728  1A22  0874               	movf	Lcd_Set_Cursor@b,w
 10729  1A23  3E7F               	addlw	127
 10730  1A24  00F5               	movwf	??_Lcd_Set_Cursor
 10731  1A25  0875               	movf	??_Lcd_Set_Cursor,w
 10732  1A26  00F7               	movwf	Lcd_Set_Cursor@temp
 10733  1A27                     l3274:
 10734                           
 10735                           ;LCD.c: 73:         Lcd_Cmd(temp);
 10736  1A27  0877               	movf	Lcd_Set_Cursor@temp,w
 10737  1A28  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10738                           
 10739                           ;LCD.c: 74:     } else if (a == 2) {
 10740  1A2D  2A3F               	goto	l193
 10741  1A2E                     l3276:
 10742  1A2E  3002               	movlw	2
 10743  1A2F  0676               	xorwf	Lcd_Set_Cursor@a,w
 10744  1A30  1D03               	btfss	3,2
 10745  1A31  2A33               	goto	u5241
 10746  1A32  2A34               	goto	u5240
 10747  1A33                     u5241:
 10748  1A33  2A3F               	goto	l193
 10749  1A34                     u5240:
 10750  1A34                     l3278:
 10751                           
 10752                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
 10753  1A34  0874               	movf	Lcd_Set_Cursor@b,w
 10754  1A35  3EBF               	addlw	191
 10755  1A36  00F5               	movwf	??_Lcd_Set_Cursor
 10756  1A37  0875               	movf	??_Lcd_Set_Cursor,w
 10757  1A38  00F7               	movwf	Lcd_Set_Cursor@temp
 10758  1A39                     l3280:
 10759                           
 10760                           ;LCD.c: 76:         Lcd_Cmd(temp);
 10761  1A39  0877               	movf	Lcd_Set_Cursor@temp,w
 10762  1A3A  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10763  1A3F                     l193:
 10764  1A3F  0008               	return
 10765  1A40                     __end_of_Lcd_Set_Cursor:
 10766                           
 10767                           	psect	text32
 10768  1C7D                     __ptext32:	
 10769 ;; *************** function _Lcd_Init *****************
 10770 ;; Defined at:
 10771 ;;		line 80 in file "LCD.c"
 10772 ;; Parameters:    Size  Location     Type
 10773 ;;		None
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;		None
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  1    wreg      void 
 10778 ;; Registers used:
 10779 ;;		wreg, status,2, status,0, pclath, cstack
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10785 ;;      Params:         0       0       0       0       0
 10786 ;;      Locals:         0       0       0       0       0
 10787 ;;      Temps:          3       0       0       0       0
 10788 ;;      Totals:         3       0       0       0       0
 10789 ;;Total ram usage:        3 bytes
 10790 ;; Hardware stack levels used:    1
 10791 ;; Hardware stack levels required when called:    2
 10792 ;; This function calls:
 10793 ;;		_Lcd_Cmd
 10794 ;;		_Lcd_Port
 10795 ;; This function is called by:
 10796 ;;		_main
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           
 10801                           ;psect for function _Lcd_Init
 10802  1C7D                     _Lcd_Init:
 10803  1C7D                     l3230:	
 10804                           ;incstack = 0
 10805                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10806                           
 10807                           
 10808                           ;LCD.c: 81:     Lcd_Port(0x00);
 10809  1C7D  3000               	movlw	0
 10810  1C7E  160A  158A  2379  160A  158A  	fcall	_Lcd_Port
 10811  1C83                     l3232:
 10812                           
 10813                           ;LCD.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10814  1C83  3034               	movlw	52
 10815  1C84  00F5               	movwf	??_Lcd_Init+1
 10816  1C85  30F1               	movlw	241
 10817  1C86  00F4               	movwf	??_Lcd_Init
 10818  1C87                     u5847:
 10819  1C87  0BF4               	decfsz	??_Lcd_Init,f
 10820  1C88  2C87               	goto	u5847
 10821  1C89  0BF5               	decfsz	??_Lcd_Init+1,f
 10822  1C8A  2C87               	goto	u5847
 10823  1C8B  2C8C               	nop2
 10824  1C8C                     l3234:
 10825                           
 10826                           ;LCD.c: 83:     Lcd_Cmd(0x3F);
 10827  1C8C  303F               	movlw	63
 10828  1C8D  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10829                           
 10830                           ;LCD.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10831  1C92  300D               	movlw	13
 10832  1C93  00F5               	movwf	??_Lcd_Init+1
 10833  1C94  30FB               	movlw	251
 10834  1C95  00F4               	movwf	??_Lcd_Init
 10835  1C96                     u5857:
 10836  1C96  0BF4               	decfsz	??_Lcd_Init,f
 10837  1C97  2C96               	goto	u5857
 10838  1C98  0BF5               	decfsz	??_Lcd_Init+1,f
 10839  1C99  2C96               	goto	u5857
 10840  1C9A  2C9B               	nop2
 10841  1C9B                     l3236:
 10842                           
 10843                           ;LCD.c: 85:     Lcd_Cmd(0x3F);
 10844  1C9B  303F               	movlw	63
 10845  1C9C  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10846  1CA1                     l3238:
 10847                           
 10848                           ;LCD.c: 86:     _delay((unsigned long)((110)*(8000000/4000.0)));
 10849  1CA1  3002               	movlw	2
 10850  1CA2  00F6               	movwf	??_Lcd_Init+2
 10851  1CA3  301E               	movlw	30
 10852  1CA4  00F5               	movwf	??_Lcd_Init+1
 10853  1CA5  30B3               	movlw	179
 10854  1CA6  00F4               	movwf	??_Lcd_Init
 10855  1CA7                     u5867:
 10856  1CA7  0BF4               	decfsz	??_Lcd_Init,f
 10857  1CA8  2CA7               	goto	u5867
 10858  1CA9  0BF5               	decfsz	??_Lcd_Init+1,f
 10859  1CAA  2CA7               	goto	u5867
 10860  1CAB  0BF6               	decfsz	??_Lcd_Init+2,f
 10861  1CAC  2CA7               	goto	u5867
 10862  1CAD  2CAE               	nop2
 10863                           
 10864                           ;LCD.c: 87:     Lcd_Cmd(0x3F);
 10865  1CAE  303F               	movlw	63
 10866  1CAF  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10867                           
 10868                           ;LCD.c: 89:     Lcd_Cmd(0x38);
 10869  1CB4  3038               	movlw	56
 10870  1CB5  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10871                           
 10872                           ;LCD.c: 90:     Lcd_Cmd(0x0C);
 10873  1CBA  300C               	movlw	12
 10874  1CBB  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10875                           
 10876                           ;LCD.c: 91:     Lcd_Cmd(0x06);
 10877  1CC0  3006               	movlw	6
 10878  1CC1  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10879  1CC6                     l196:
 10880  1CC6  0008               	return
 10881  1CC7                     __end_of_Lcd_Init:
 10882                           
 10883                           	psect	text33
 10884  19AC                     __ptext33:	
 10885 ;; *************** function _Lcd_Clear *****************
 10886 ;; Defined at:
 10887 ;;		line 64 in file "LCD.c"
 10888 ;; Parameters:    Size  Location     Type
 10889 ;;		None
 10890 ;; Auto vars:     Size  Location     Type
 10891 ;;		None
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  1    wreg      void 
 10894 ;; Registers used:
 10895 ;;		wreg, status,2, status,0, pclath, cstack
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10901 ;;      Params:         0       0       0       0       0
 10902 ;;      Locals:         0       0       0       0       0
 10903 ;;      Temps:          0       0       0       0       0
 10904 ;;      Totals:         0       0       0       0       0
 10905 ;;Total ram usage:        0 bytes
 10906 ;; Hardware stack levels used:    1
 10907 ;; Hardware stack levels required when called:    2
 10908 ;; This function calls:
 10909 ;;		_Lcd_Cmd
 10910 ;; This function is called by:
 10911 ;;		_main
 10912 ;; This function uses a non-reentrant model
 10913 ;;
 10914                           
 10915                           
 10916                           ;psect for function _Lcd_Clear
 10917  19AC                     _Lcd_Clear:
 10918  19AC                     l3268:	
 10919                           ;incstack = 0
 10920                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10921                           
 10922                           
 10923                           ;LCD.c: 65:     Lcd_Cmd(0);
 10924  19AC  3000               	movlw	0
 10925  19AD  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10926                           
 10927                           ;LCD.c: 66:     Lcd_Cmd(1);
 10928  19B2  3001               	movlw	1
 10929  19B3  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10930  19B8                     l187:
 10931  19B8  0008               	return
 10932  19B9                     __end_of_Lcd_Clear:
 10933                           
 10934                           	psect	text34
 10935  19CB                     __ptext34:	
 10936 ;; *************** function _Lcd_Cmd *****************
 10937 ;; Defined at:
 10938 ;;		line 56 in file "LCD.c"
 10939 ;; Parameters:    Size  Location     Type
 10940 ;;  a               1    wreg     unsigned char 
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;  a               1    3[COMMON] unsigned char 
 10943 ;; Return value:  Size  Location     Type
 10944 ;;                  1    wreg      void 
 10945 ;; Registers used:
 10946 ;;		wreg, status,2, status,0, pclath, cstack
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10952 ;;      Params:         0       0       0       0       0
 10953 ;;      Locals:         1       0       0       0       0
 10954 ;;      Temps:          2       0       0       0       0
 10955 ;;      Totals:         3       0       0       0       0
 10956 ;;Total ram usage:        3 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; Hardware stack levels required when called:    1
 10959 ;; This function calls:
 10960 ;;		_Lcd_Port
 10961 ;; This function is called by:
 10962 ;;		_Lcd_Clear
 10963 ;;		_Lcd_Set_Cursor
 10964 ;;		_Lcd_Init
 10965 ;;		_Lcd_Shift_Right
 10966 ;;		_Lcd_Shift_Left
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           
 10971                           ;psect for function _Lcd_Cmd
 10972  19CB                     _Lcd_Cmd:
 10973                           
 10974                           ;incstack = 0
 10975                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10976                           ;Lcd_Cmd@a stored from wreg
 10977  19CB  00F3               	movwf	Lcd_Cmd@a
 10978  19CC                     l2862:
 10979                           
 10980                           ;LCD.c: 57:     PORTCbits.RC0 = 0;
 10981  19CC  1283               	bcf	3,5	;RP0=0, select bank0
 10982  19CD  1303               	bcf	3,6	;RP1=0, select bank0
 10983  19CE  1007               	bcf	7,0	;volatile
 10984  19CF                     l2864:
 10985                           
 10986                           ;LCD.c: 58:     Lcd_Port(a);
 10987  19CF  0873               	movf	Lcd_Cmd@a,w
 10988  19D0  160A  158A  2379  160A  158A  	fcall	_Lcd_Port
 10989  19D5                     l2866:
 10990                           
 10991                           ;LCD.c: 59:     RC1 = 1;
 10992  19D5  1283               	bcf	3,5	;RP0=0, select bank0
 10993  19D6  1303               	bcf	3,6	;RP1=0, select bank0
 10994  19D7  1487               	bsf	7,1	;volatile
 10995  19D8                     l2868:
 10996                           
 10997                           ;LCD.c: 60:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10998  19D8  300B               	movlw	11
 10999  19D9  00F2               	movwf	??_Lcd_Cmd+1
 11000  19DA  3062               	movlw	98
 11001  19DB  00F1               	movwf	??_Lcd_Cmd
 11002  19DC                     u5877:
 11003  19DC  0BF1               	decfsz	??_Lcd_Cmd,f
 11004  19DD  29DC               	goto	u5877
 11005  19DE  0BF2               	decfsz	??_Lcd_Cmd+1,f
 11006  19DF  29DC               	goto	u5877
 11007  19E0  0000               	nop
 11008  19E1                     l2870:
 11009                           
 11010                           ;LCD.c: 61:     RC1 = 0;
 11011  19E1  1283               	bcf	3,5	;RP0=0, select bank0
 11012  19E2  1303               	bcf	3,6	;RP1=0, select bank0
 11013  19E3  1087               	bcf	7,1	;volatile
 11014  19E4                     l184:
 11015  19E4  0008               	return
 11016  19E5                     __end_of_Lcd_Cmd:
 11017                           
 11018                           	psect	text35
 11019  1B79                     __ptext35:	
 11020 ;; *************** function _Lcd_Port *****************
 11021 ;; Defined at:
 11022 ;;		line 13 in file "LCD.c"
 11023 ;; Parameters:    Size  Location     Type
 11024 ;;  a               1    wreg     unsigned char 
 11025 ;; Auto vars:     Size  Location     Type
 11026 ;;  a               1    0[COMMON] unsigned char 
 11027 ;; Return value:  Size  Location     Type
 11028 ;;                  1    wreg      void 
 11029 ;; Registers used:
 11030 ;;		wreg
 11031 ;; Tracked objects:
 11032 ;;		On entry : 0/0
 11033 ;;		On exit  : 0/0
 11034 ;;		Unchanged: 0/0
 11035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11036 ;;      Params:         0       0       0       0       0
 11037 ;;      Locals:         1       0       0       0       0
 11038 ;;      Temps:          0       0       0       0       0
 11039 ;;      Totals:         1       0       0       0       0
 11040 ;;Total ram usage:        1 bytes
 11041 ;; Hardware stack levels used:    1
 11042 ;; This function calls:
 11043 ;;		Nothing
 11044 ;; This function is called by:
 11045 ;;		_Lcd_Cmd
 11046 ;;		_Lcd_Init
 11047 ;;		_Lcd_Write_Char
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           
 11052                           ;psect for function _Lcd_Port
 11053  1B79                     _Lcd_Port:
 11054                           
 11055                           ;incstack = 0
 11056                           ; Regs used in _Lcd_Port: [wreg]
 11057                           ;Lcd_Port@a stored from wreg
 11058  1B79  00F0               	movwf	Lcd_Port@a
 11059  1B7A                     l2340:
 11060                           
 11061                           ;LCD.c: 15:     if (a & 1)
 11062  1B7A  1C70               	btfss	Lcd_Port@a,0
 11063  1B7B  2B7D               	goto	u2911
 11064  1B7C  2B7E               	goto	u2910
 11065  1B7D                     u2911:
 11066  1B7D  2B82               	goto	l165
 11067  1B7E                     u2910:
 11068  1B7E                     l2342:
 11069                           
 11070                           ;LCD.c: 16:         RD0 = 1;
 11071  1B7E  1283               	bcf	3,5	;RP0=0, select bank0
 11072  1B7F  1303               	bcf	3,6	;RP1=0, select bank0
 11073  1B80  1408               	bsf	8,0	;volatile
 11074  1B81  2B85               	goto	l166
 11075  1B82                     l165:	
 11076                           ;LCD.c: 17:     else
 11077                           
 11078                           
 11079                           ;LCD.c: 18:         RD0 = 0;
 11080  1B82  1283               	bcf	3,5	;RP0=0, select bank0
 11081  1B83  1303               	bcf	3,6	;RP1=0, select bank0
 11082  1B84  1008               	bcf	8,0	;volatile
 11083  1B85                     l166:
 11084                           
 11085                           ;LCD.c: 20:     if (a & 2)
 11086  1B85  1CF0               	btfss	Lcd_Port@a,1
 11087  1B86  2B88               	goto	u2921
 11088  1B87  2B89               	goto	u2920
 11089  1B88                     u2921:
 11090  1B88  2B8B               	goto	l167
 11091  1B89                     u2920:
 11092  1B89                     l2344:
 11093                           
 11094                           ;LCD.c: 21:         RD1 = 1;
 11095  1B89  1488               	bsf	8,1	;volatile
 11096  1B8A  2B8C               	goto	l168
 11097  1B8B                     l167:	
 11098                           ;LCD.c: 22:     else
 11099                           
 11100                           
 11101                           ;LCD.c: 23:         RD1 = 0;
 11102  1B8B  1088               	bcf	8,1	;volatile
 11103  1B8C                     l168:
 11104                           
 11105                           ;LCD.c: 25:     if (a & 4)
 11106  1B8C  1D70               	btfss	Lcd_Port@a,2
 11107  1B8D  2B8F               	goto	u2931
 11108  1B8E  2B90               	goto	u2930
 11109  1B8F                     u2931:
 11110  1B8F  2B92               	goto	l169
 11111  1B90                     u2930:
 11112  1B90                     l2346:
 11113                           
 11114                           ;LCD.c: 26:         RD2 = 1;
 11115  1B90  1508               	bsf	8,2	;volatile
 11116  1B91  2B93               	goto	l170
 11117  1B92                     l169:	
 11118                           ;LCD.c: 27:     else
 11119                           
 11120                           
 11121                           ;LCD.c: 28:         RD2 = 0;
 11122  1B92  1108               	bcf	8,2	;volatile
 11123  1B93                     l170:
 11124                           
 11125                           ;LCD.c: 30:     if (a & 8)
 11126  1B93  1DF0               	btfss	Lcd_Port@a,3
 11127  1B94  2B96               	goto	u2941
 11128  1B95  2B97               	goto	u2940
 11129  1B96                     u2941:
 11130  1B96  2B99               	goto	l171
 11131  1B97                     u2940:
 11132  1B97                     l2348:
 11133                           
 11134                           ;LCD.c: 31:         RD3 = 1;
 11135  1B97  1588               	bsf	8,3	;volatile
 11136  1B98  2B9A               	goto	l172
 11137  1B99                     l171:	
 11138                           ;LCD.c: 32:     else
 11139                           
 11140                           
 11141                           ;LCD.c: 33:         RD3 = 0;
 11142  1B99  1188               	bcf	8,3	;volatile
 11143  1B9A                     l172:
 11144                           
 11145                           ;LCD.c: 35:     if (a & 16)
 11146  1B9A  1E70               	btfss	Lcd_Port@a,4
 11147  1B9B  2B9D               	goto	u2951
 11148  1B9C  2B9E               	goto	u2950
 11149  1B9D                     u2951:
 11150  1B9D  2BA0               	goto	l173
 11151  1B9E                     u2950:
 11152  1B9E                     l2350:
 11153                           
 11154                           ;LCD.c: 36:         RD4 = 1;
 11155  1B9E  1608               	bsf	8,4	;volatile
 11156  1B9F  2BA1               	goto	l174
 11157  1BA0                     l173:	
 11158                           ;LCD.c: 37:     else
 11159                           
 11160                           
 11161                           ;LCD.c: 38:         RD4 = 0;
 11162  1BA0  1208               	bcf	8,4	;volatile
 11163  1BA1                     l174:
 11164                           
 11165                           ;LCD.c: 40:     if (a & 32)
 11166  1BA1  1EF0               	btfss	Lcd_Port@a,5
 11167  1BA2  2BA4               	goto	u2961
 11168  1BA3  2BA5               	goto	u2960
 11169  1BA4                     u2961:
 11170  1BA4  2BA7               	goto	l175
 11171  1BA5                     u2960:
 11172  1BA5                     l2352:
 11173                           
 11174                           ;LCD.c: 41:         RD5 = 1;
 11175  1BA5  1688               	bsf	8,5	;volatile
 11176  1BA6  2BA8               	goto	l176
 11177  1BA7                     l175:	
 11178                           ;LCD.c: 42:     else
 11179                           
 11180                           
 11181                           ;LCD.c: 43:         RD5 = 0;
 11182  1BA7  1288               	bcf	8,5	;volatile
 11183  1BA8                     l176:
 11184                           
 11185                           ;LCD.c: 45:     if (a & 64)
 11186  1BA8  1F70               	btfss	Lcd_Port@a,6
 11187  1BA9  2BAB               	goto	u2971
 11188  1BAA  2BAC               	goto	u2970
 11189  1BAB                     u2971:
 11190  1BAB  2BAE               	goto	l177
 11191  1BAC                     u2970:
 11192  1BAC                     l2354:
 11193                           
 11194                           ;LCD.c: 46:         RD6 = 1;
 11195  1BAC  1708               	bsf	8,6	;volatile
 11196  1BAD  2BAF               	goto	l178
 11197  1BAE                     l177:	
 11198                           ;LCD.c: 47:     else
 11199                           
 11200                           
 11201                           ;LCD.c: 48:         RD6 = 0;
 11202  1BAE  1308               	bcf	8,6	;volatile
 11203  1BAF                     l178:
 11204                           
 11205                           ;LCD.c: 50:     if (a & 128)
 11206  1BAF  1FF0               	btfss	Lcd_Port@a,7
 11207  1BB0  2BB2               	goto	u2981
 11208  1BB1  2BB3               	goto	u2980
 11209  1BB2                     u2981:
 11210  1BB2  2BB5               	goto	l179
 11211  1BB3                     u2980:
 11212  1BB3                     l2356:
 11213                           
 11214                           ;LCD.c: 51:         RD7 = 1;
 11215  1BB3  1788               	bsf	8,7	;volatile
 11216  1BB4  2BB6               	goto	l181
 11217  1BB5                     l179:	
 11218                           ;LCD.c: 52:     else
 11219                           
 11220                           
 11221                           ;LCD.c: 53:         RD7 = 0;
 11222  1BB5  1388               	bcf	8,7	;volatile
 11223  1BB6                     l181:
 11224  1BB6  0008               	return
 11225  1BB7                     __end_of_Lcd_Port:
 11226                           
 11227                           	psect	text36
 11228  1000                     __ptext36:	
 11229 ;; *************** function _I2C_Master_Write *****************
 11230 ;; Defined at:
 11231 ;;		line 65 in file "I2C.c"
 11232 ;; Parameters:    Size  Location     Type
 11233 ;;  d               2    0[COMMON] unsigned int 
 11234 ;; Auto vars:     Size  Location     Type
 11235 ;;		None
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  1    wreg      void 
 11238 ;; Registers used:
 11239 ;;		wreg, status,2, status,0, pclath, cstack
 11240 ;; Tracked objects:
 11241 ;;		On entry : 0/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11245 ;;      Params:         2       0       0       0       0
 11246 ;;      Locals:         0       0       0       0       0
 11247 ;;      Temps:          0       0       0       0       0
 11248 ;;      Totals:         2       0       0       0       0
 11249 ;;Total ram usage:        2 bytes
 11250 ;; Hardware stack levels used:    1
 11251 ;; Hardware stack levels required when called:    1
 11252 ;; This function calls:
 11253 ;;		_I2C_Master_Wait
 11254 ;; This function is called by:
 11255 ;;		_main
 11256 ;; This function uses a non-reentrant model
 11257 ;;
 11258                           
 11259                           
 11260                           ;psect for function _I2C_Master_Write
 11261  1000                     _I2C_Master_Write:
 11262  1000                     l3244:	
 11263                           ;incstack = 0
 11264                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11265                           
 11266                           
 11267                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
 11268  1000  160A  158A  219F  160A  118A  	fcall	_I2C_Master_Wait
 11269  1005                     l3246:
 11270                           
 11271                           ;I2C.c: 68:     SSPBUF = d;
 11272  1005  0870               	movf	I2C_Master_Write@d,w
 11273  1006  1283               	bcf	3,5	;RP0=0, select bank0
 11274  1007  1303               	bcf	3,6	;RP1=0, select bank0
 11275  1008  0093               	movwf	19	;volatile
 11276  1009                     l132:
 11277  1009  0008               	return
 11278  100A                     __end_of_I2C_Master_Write:
 11279                           
 11280                           	psect	text37
 11281  1996                     __ptext37:	
 11282 ;; *************** function _I2C_Master_Stop *****************
 11283 ;; Defined at:
 11284 ;;		line 55 in file "I2C.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;		None
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;		None
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      void 
 11291 ;; Registers used:
 11292 ;;		wreg, status,2, status,0, pclath, cstack
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11298 ;;      Params:         0       0       0       0       0
 11299 ;;      Locals:         0       0       0       0       0
 11300 ;;      Temps:          0       0       0       0       0
 11301 ;;      Totals:         0       0       0       0       0
 11302 ;;Total ram usage:        0 bytes
 11303 ;; Hardware stack levels used:    1
 11304 ;; Hardware stack levels required when called:    1
 11305 ;; This function calls:
 11306 ;;		_I2C_Master_Wait
 11307 ;; This function is called by:
 11308 ;;		_main
 11309 ;; This function uses a non-reentrant model
 11310 ;;
 11311                           
 11312                           
 11313                           ;psect for function _I2C_Master_Stop
 11314  1996                     _I2C_Master_Stop:
 11315  1996                     l3248:	
 11316                           ;incstack = 0
 11317                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11318                           
 11319                           
 11320                           ;I2C.c: 57:     I2C_Master_Wait();
 11321  1996  160A  158A  219F  160A  158A  	fcall	_I2C_Master_Wait
 11322  199B                     l3250:
 11323                           
 11324                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
 11325  199B  1683               	bsf	3,5	;RP0=1, select bank1
 11326  199C  1303               	bcf	3,6	;RP1=0, select bank1
 11327  199D  1511               	bsf	17,2	;volatile
 11328  199E                     l129:
 11329  199E  0008               	return
 11330  199F                     __end_of_I2C_Master_Stop:
 11331                           
 11332                           	psect	text38
 11333  198D                     __ptext38:	
 11334 ;; *************** function _I2C_Master_Start *****************
 11335 ;; Defined at:
 11336 ;;		line 39 in file "I2C.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;		None
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;		None
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		wreg, status,2, status,0, pclath, cstack
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11350 ;;      Params:         0       0       0       0       0
 11351 ;;      Locals:         0       0       0       0       0
 11352 ;;      Temps:          0       0       0       0       0
 11353 ;;      Totals:         0       0       0       0       0
 11354 ;;Total ram usage:        0 bytes
 11355 ;; Hardware stack levels used:    1
 11356 ;; Hardware stack levels required when called:    1
 11357 ;; This function calls:
 11358 ;;		_I2C_Master_Wait
 11359 ;; This function is called by:
 11360 ;;		_main
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           
 11365                           ;psect for function _I2C_Master_Start
 11366  198D                     _I2C_Master_Start:
 11367  198D                     l3240:	
 11368                           ;incstack = 0
 11369                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11370                           
 11371                           
 11372                           ;I2C.c: 41:     I2C_Master_Wait();
 11373  198D  160A  158A  219F  160A  158A  	fcall	_I2C_Master_Wait
 11374  1992                     l3242:
 11375                           
 11376                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
 11377  1992  1683               	bsf	3,5	;RP0=1, select bank1
 11378  1993  1303               	bcf	3,6	;RP1=0, select bank1
 11379  1994  1411               	bsf	17,0	;volatile
 11380  1995                     l123:
 11381  1995  0008               	return
 11382  1996                     __end_of_I2C_Master_Start:
 11383                           
 11384                           	psect	text39
 11385  1AD9                     __ptext39:	
 11386 ;; *************** function _I2C_Master_Read *****************
 11387 ;; Defined at:
 11388 ;;		line 74 in file "I2C.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;  a               2    0[COMMON] unsigned short 
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;  temp            2    4[COMMON] unsigned short 
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  2    0[COMMON] unsigned short 
 11395 ;; Registers used:
 11396 ;;		wreg, status,2, status,0, pclath, cstack
 11397 ;; Tracked objects:
 11398 ;;		On entry : 0/0
 11399 ;;		On exit  : 0/0
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11402 ;;      Params:         2       0       0       0       0
 11403 ;;      Locals:         2       0       0       0       0
 11404 ;;      Temps:          2       0       0       0       0
 11405 ;;      Totals:         6       0       0       0       0
 11406 ;;Total ram usage:        6 bytes
 11407 ;; Hardware stack levels used:    1
 11408 ;; Hardware stack levels required when called:    1
 11409 ;; This function calls:
 11410 ;;		_I2C_Master_Wait
 11411 ;; This function is called by:
 11412 ;;		_main
 11413 ;; This function uses a non-reentrant model
 11414 ;;
 11415                           
 11416                           
 11417                           ;psect for function _I2C_Master_Read
 11418  1AD9                     _I2C_Master_Read:
 11419  1AD9                     l3252:	
 11420                           ;incstack = 0
 11421                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11422                           
 11423                           
 11424                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
 11425  1AD9  160A  158A  219F  160A  158A  	fcall	_I2C_Master_Wait
 11426  1ADE                     l3254:
 11427                           
 11428                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
 11429  1ADE  1683               	bsf	3,5	;RP0=1, select bank1
 11430  1ADF  1303               	bcf	3,6	;RP1=0, select bank1
 11431  1AE0  1591               	bsf	17,3	;volatile
 11432                           
 11433                           ;I2C.c: 79:     I2C_Master_Wait();
 11434  1AE1  160A  158A  219F  160A  158A  	fcall	_I2C_Master_Wait
 11435  1AE6                     l3256:
 11436                           
 11437                           ;I2C.c: 80:     temp = SSPBUF;
 11438  1AE6  1283               	bcf	3,5	;RP0=0, select bank0
 11439  1AE7  1303               	bcf	3,6	;RP1=0, select bank0
 11440  1AE8  0813               	movf	19,w	;volatile
 11441  1AE9  00F2               	movwf	??_I2C_Master_Read
 11442  1AEA  01F3               	clrf	??_I2C_Master_Read+1
 11443  1AEB  0872               	movf	??_I2C_Master_Read,w
 11444  1AEC  00F4               	movwf	I2C_Master_Read@temp
 11445  1AED  0873               	movf	??_I2C_Master_Read+1,w
 11446  1AEE  00F5               	movwf	I2C_Master_Read@temp+1
 11447  1AEF                     l3258:
 11448                           
 11449                           ;I2C.c: 81:     I2C_Master_Wait();
 11450  1AEF  160A  158A  219F  160A  158A  	fcall	_I2C_Master_Wait
 11451  1AF4                     l3260:
 11452                           
 11453                           ;I2C.c: 82:     if(a == 1){
 11454  1AF4  0370               	decf	I2C_Master_Read@a,w
 11455  1AF5  0471               	iorwf	I2C_Master_Read@a+1,w
 11456  1AF6  1D03               	btfss	3,2
 11457  1AF7  2AF9               	goto	u5221
 11458  1AF8  2AFA               	goto	u5220
 11459  1AF9                     u5221:
 11460  1AF9  2AFE               	goto	l135
 11461  1AFA                     u5220:
 11462  1AFA                     l3262:
 11463                           
 11464                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
 11465  1AFA  1683               	bsf	3,5	;RP0=1, select bank1
 11466  1AFB  1303               	bcf	3,6	;RP1=0, select bank1
 11467  1AFC  1291               	bcf	17,5	;volatile
 11468                           
 11469                           ;I2C.c: 84:     }else{
 11470  1AFD  2B01               	goto	l136
 11471  1AFE                     l135:
 11472                           
 11473                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
 11474  1AFE  1683               	bsf	3,5	;RP0=1, select bank1
 11475  1AFF  1303               	bcf	3,6	;RP1=0, select bank1
 11476  1B00  1691               	bsf	17,5	;volatile
 11477  1B01                     l136:	
 11478                           ;I2C.c: 86:     }
 11479                           
 11480                           
 11481                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
 11482  1B01  1611               	bsf	17,4	;volatile
 11483  1B02                     l3264:
 11484                           
 11485                           ;I2C.c: 88:     return temp;
 11486  1B02  0875               	movf	I2C_Master_Read@temp+1,w
 11487  1B03  00F1               	movwf	?_I2C_Master_Read+1
 11488  1B04  0874               	movf	I2C_Master_Read@temp,w
 11489  1B05  00F0               	movwf	?_I2C_Master_Read
 11490  1B06                     l137:
 11491  1B06  0008               	return
 11492  1B07                     __end_of_I2C_Master_Read:
 11493                           
 11494                           	psect	text40
 11495  199F                     __ptext40:	
 11496 ;; *************** function _I2C_Master_Wait *****************
 11497 ;; Defined at:
 11498 ;;		line 32 in file "I2C.c"
 11499 ;; Parameters:    Size  Location     Type
 11500 ;;		None
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;		None
 11503 ;; Return value:  Size  Location     Type
 11504 ;;                  1    wreg      void 
 11505 ;; Registers used:
 11506 ;;		wreg, status,2
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11512 ;;      Params:         0       0       0       0       0
 11513 ;;      Locals:         0       0       0       0       0
 11514 ;;      Temps:          0       0       0       0       0
 11515 ;;      Totals:         0       0       0       0       0
 11516 ;;Total ram usage:        0 bytes
 11517 ;; Hardware stack levels used:    1
 11518 ;; This function calls:
 11519 ;;		Nothing
 11520 ;; This function is called by:
 11521 ;;		_I2C_Master_Start
 11522 ;;		_I2C_Master_Stop
 11523 ;;		_I2C_Master_Write
 11524 ;;		_I2C_Master_Read
 11525 ;;		_I2C_Master_RepeatedStart
 11526 ;; This function uses a non-reentrant model
 11527 ;;
 11528                           
 11529                           
 11530                           ;psect for function _I2C_Master_Wait
 11531  199F                     _I2C_Master_Wait:
 11532  199F                     l2858:	
 11533                           ;incstack = 0
 11534                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11535                           
 11536  199F                     l117:	
 11537                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11538                           
 11539  199F  1683               	bsf	3,5	;RP0=1, select bank1
 11540  19A0  1303               	bcf	3,6	;RP1=0, select bank1
 11541  19A1  1914               	btfsc	20,2	;volatile
 11542  19A2  29A4               	goto	u4221
 11543  19A3  29A5               	goto	u4220
 11544  19A4                     u4221:
 11545  19A4  299F               	goto	l117
 11546  19A5                     u4220:
 11547  19A5                     l2860:
 11548  19A5  0811               	movf	17,w	;volatile
 11549  19A6  391F               	andlw	31
 11550  19A7  1D03               	btfss	3,2
 11551  19A8  29AA               	goto	u4231
 11552  19A9  29AB               	goto	u4230
 11553  19AA                     u4231:
 11554  19AA  299F               	goto	l117
 11555  19AB                     u4230:
 11556  19AB                     l120:
 11557  19AB  0008               	return
 11558  19AC                     __end_of_I2C_Master_Wait:
 11559  007E                     btemp	set	126	;btemp
 11560  007E                     wtemp0	set	126
 11561                           
 11562                           	psect	config
 11563                           
 11564                           ;Config register CONFIG1 @ 0x2007
 11565                           ;	Oscillator Selection bits
 11566                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11567                           ;	Watchdog Timer Enable bit
 11568                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11569                           ;	Power-up Timer Enable bit
 11570                           ;	PWRTE = OFF, PWRT disabled
 11571                           ;	RE3/MCLR pin function select bit
 11572                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11573                           ;	Code Protection bit
 11574                           ;	CP = OFF, Program memory code protection is disabled
 11575                           ;	Data Code Protection bit
 11576                           ;	CPD = OFF, Data memory code protection is disabled
 11577                           ;	Brown Out Reset Selection bits
 11578                           ;	BOREN = OFF, BOR disabled
 11579                           ;	Internal External Switchover bit
 11580                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11581                           ;	Fail-Safe Clock Monitor Enabled bit
 11582                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11583                           ;	Low Voltage Programming Enable bit
 11584                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11585                           ;	In-Circuit Debugger Mode bit
 11586                           ;	DEBUG = 0x1, unprogrammed default
 11587  2007                     	org	8199
 11588  2007  20D4               	dw	8404
 11589                           
 11590                           ;Config register CONFIG2 @ 0x2008
 11591                           ;	Brown-out Reset Selection bit
 11592                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11593                           ;	Flash Program Memory Self Write Enable bits
 11594                           ;	WRT = OFF, Write protection off
 11595  2008                     	org	8200
 11596  2008  3FFF               	dw	16383

Data Sizes:
    Strings     37
    Constant    144
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     48      73
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_2(CODE[20]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> f1(BANK1[10]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _I2C_Master_Init->___lldiv
    _conv3->___xxtofl
    _conv2->___xxtofl
    ___fladd->___xxtofl
    _conv1->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_conv2
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    _setup->_I2C_Master_Init
    _conv2->___fladd
    ___fladd->_fround
    _conv1->___flmul
    ___flmul->___awdiv

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   49730
                                             45 BANK1      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _cfg_clk
                              _conv1
                              _conv2
                              _conv3
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    37     13   32692
                                              0 BANK1     45    32     13
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _conv3                                               13     9      4     671
                                              0 BANK0     13     9      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _conv2                                               13     9      4    7808
                                             70 BANK0      8     4      4
                                              0 BANK1      5     5      0
                            ___fladd
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             50 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) _conv1                                               13     9      4    5368
                                             30 BANK0     13     9      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     374
                                              4 COMMON     3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     706
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _cfg_clk
   _conv1
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _conv2
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _conv3
     ___xxtofl
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     30      49       7       91.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 09 18:03:34 2021

                        pc 0002                         l73 1A1B                         l82 093F  
                       l67 1194                         l76 1984                         l85 1AD8  
                       l79 1BF6                         _V1 00DE                         _V2 00DD  
                       _V3 00DC                         _f1 00DF               ___awdiv@sign 0021  
                       fsr 0004        ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076  
                      l120 19AB                        l114 1B3E                        l123 1995  
                      l132 1009                        l117 199F                        l205 1C38  
                      l135 1AFE                        l136 1B01                        l320 0C9E  
                      l137 1B06                        l129 199E                        l313 1577  
                      l170 1B93                        l171 1B99                        l403 07F2  
                      l172 1B9A                        l181 1BB6                        l173 1BA0  
                      l165 1B82                        l174 1BA1                        l166 1B85  
                      l342 013D                        l175 1BA7                        l167 1B8B  
                      l407 1A70                        l176 1BA8                        l168 1B8C  
                      l184 19E4                        l177 1BAE                        l169 1B92  
                      l193 1A3F                        l601 1F2C                        l409 1A88  
                      l178 1BAF                        l602 1F45                        l610 1EA3  
                      l179 1BB5                        l187 19B8                        l443 1E27  
                      l196 1CC6                        l620 1EA3                        l380 05C6  
                      l373 0582                        l606 000E                        l199 19FF  
                      l624 10C6                        l560 0077                        l617 1E8E  
                      l625 1038                        l713 1C7C                        l635 10B9  
                      l723 1B78                        l740 1659                        l628 1089  
                      l388 072D                        l581 1147                        l573 1DC1  
                      l830 0FFF                        l734 15DB                        l663 1D68  
                      l593 1CE3                        l577 1184                        l842 0FF3  
                      l738 1682                        l594 1CFF                        l578 10E9  
                      l851 1AAF                        l755 174D                        l747 17FF  
                      l595 1D14                        l836 0F6B                        l780 1A63  
                      l588 1177                        l765 1793                        l598 1EC0  
                      l759 1771                        l880 1FAD                        l776 17F3  
                      l768 17D1                        l849 1A9D                        l777 17FF  
                      l874 1F68                        l876 1FFF                        l894 19CA  
                      l887 1FC9                        l888 1FD5                        _GIE 005F  
                      _RC1 0039                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _v11 00D8                        _v22 00D4                        _v33 00D0  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ___flmul@aexp 0036               ___flmul@bexp 0037               ___flmul@sign 0031  
             ___flmul@temp 003C               ___flmul@prod 0038               ___fltol@exp1 005B  
                     l3000 10AE                       l3002 10BE                       l3100 1F44  
                     l3020 10F2                       l3012 10DD                       l3030 1129  
                     l3022 1103                       l3006 10C7                       l3200 1FBF  
                     l3104 0004                       l3120 1E53                       l3112 1E28  
                     l3032 1137                       l3024 1105                       l3008 10D4  
                     l2400 0032                       l2330 1A93                       l3210 1FF2  
                     l3202 1FC3                       l3106 000C                       l3122 1E54  
                     l3114 1E35                       l3034 1138                       l3026 110E  
                     l3018 10EA                       l2410 0055                       l2402 0035  
                     l2340 1B7A                       l3220 1983                       l2332 1A97  
                     l3212 1FF6                       l3204 1FCD                       l3108 000E  
                     l3124 1E5C                       l3060 1A66                       l3052 116C  
                     l3044 1153                       l3036 1141                       l3028 1117  
                     l2500 1B57                       l2420 006E                       l2412 005B  
                     l2404 003C                       l2350 1B9E                       l2342 1B7E  
                     l3230 1C7D                       l2334 1AA6                       l2326 1A8A  
                     l3214 1FF7                       l3206 1FD7                       l3302 1AB3  
                     l3222 1A00                       l3142 1E83                       l3134 1E6A  
                     l3126 1E5E                       l3118 1E3E                       l3150 1D1D  
                     l3062 1A6A                       l3054 117C                       l3038 114B  
                     l3046 1165                       l2502 1B61                       l2422 0073  
                     l2414 005C                       l2406 0040                       l2430 1D6E  
                     l3310 0080                       l3240 198D                       l2352 1BA5  
                     l2344 1B89                       l3232 1C83                       l2336 1AAB  
                     l2328 1A8C                       l3208 1FED                       l2600 1668  
                     l2520 158A                       l2512 1578                       l3304 1AD0  
                     l2360 1DD2                       l3224 1A04                       l3080 1D13  
                     l3072 1CC7                       l3144 1E93                       l3128 1E62  
                     l3136 1E7C                       l3160 1D51                       l3152 1D20  
                     l3064 1A77                       l2504 1B67                       l2416 0063  
                     l2408 0044                       l2440 1D84                       l2432 1D73  
                     l3400 02D3                       l3320 00A6                       l3312 0086  
                     l3242 1992                       l3250 199B                       l2354 1BAC  
                     l2346 1B90                       l3234 1C8C                       l3218 197F  
                     l2610 1686                       l2602 166C                       l2522 158F  
                     l2530 159F                       l2514 157F                       l2370 1E01  
                     l2362 1DD5                       l3226 1A07                       l3074 1CDB  
                     l3090 1EDC                       l3170 1A44                       l3146 1E98  
                     l3162 1D5A                       l3154 1D2D                       l3066 1A7E  
                     l3058 1A64                       l2506 1B6E                       l2418 0069  
                     l2450 1DA0                       l2442 1D87                       l2434 1D75  
                     l2426 1D69                       l3410 037A                       l3402 031A  
                     l3322 00AA                       l3330 00E6                       l3314 008D  
                     l3260 1AF4                       l3252 1AD9                       l3244 1000  
                     l2356 1BB3                       l2348 1B97                       l3236 1C9B  
                     l3180 1F60                       l2700 17EF                       l2620 16AF  
                     l2612 168B                       l2604 166D                       l2540 15B9  
                     l2532 15A7                       l2524 1594                       l2516 1585  
                     l2372 1E0F                       l2364 1DE2                       l3228 1A0E  
                     l3076 1CF7                       l3092 1EE0                       l3084 1EA4  
                     l3156 1D31                       l3164 1D60                       l3148 1D15  
                     l3068 1A84                       l2508 1B74                       l2460 1DBD  
                     l2452 1DA6                       l2444 1D8E                       l2436 1D79  
                     l2428 1D6A                       l3500 06BE                       l3412 0395  
                     l3404 0329                       l3340 0111                       l3332 00F4  
                     l3324 00BF                       l3316 0092                       l3308 007B  
                     l3262 1AFA                       l3254 1ADE                       l3246 1005  
                     l3238 1CA1                       l3270 1A1D                       l2710 0CAC  
                     l3190 1F8B                       l3182 1F70                       l3174 1F47  
                     l2702 17FA                       l2630 16C3                       l2622 16B3  
                     l2606 1676                       l2550 15D0                       l2542 15BD  
                     l2534 15AC                       l2526 159C                       l2518 1589  
                     l2374 1E10                       l2366 1DE6                       l2358 1DC2  
                     l3078 1D11                       l3094 1F04                       l3086 1EB8  
                     l3158 1D43                       l2470 1C44                       l2390 001D  
                     l2382 000F                       l2454 1DAD                       l2446 1D92  
                     l2438 1D7E                       l3510 0712                       l3502 06F9  
                     l3430 0470                       l3422 03E3                       l3414 039E  
                     l3406 0344                       l3342 0124                       l3334 00F5  
                     l3326 00D2                       l3318 0096                       l3264 1B02  
                     l3256 1AE6                       l3248 1996                       l3280 1A39  
                     l3272 1A22                       l2800 0F45                       l2720 0CC3  
                     l2712 0CB0                       l3192 1F92                       l3176 1F4C  
                     l2704 17FE                       l2640 172B                       l2632 16CC  
                     l2624 16BC                       l2616 1694                       l2608 167A  
                     l2560 15E9                       l2552 15D1                       l2544 15BE  
                     l2536 15B2                       l2528 159D                       l2376 1E19  
                     l2368 1DEF                       l3096 1F08                       l3088 1ED4  
                     l3168 1A40                       l2480 1C6A                       l2472 1C4B  
                     l2464 1C39                       l2392 0021                       l2384 0012  
                     l2448 1D96                       l2456 1DB3                       l3520 073F  
                     l3504 0701                       l3440 04A9                       l3416 03A6  
                     l3408 036B                       l3424 03EC                       l3360 016F  
                     l3512 0719                       l3352 013F                       l3344 0128  
                     l3336 00F9                       l3328 00D6                       l3600 1288  
                     l3258 1AEF                       l3274 1A27                       l3282 1BF7  
                     l2810 0F68                       l2802 0F4B                       l2730 0CDC  
                     l2722 0CC5                       l2714 0CB1                       l2706 0C9F  
                     l3194 1F96                       l3186 1F79                       l3178 1F50  
                     l2642 1730                       l2626 16BE                       l2618 16AB  
                     l2634 16D1                       l2570 15FD                       l2562 15ED  
                     l2546 15C3                       l2554 15D3                       l2538 15B3  
                     l3290 08CA                       l2378 1E1F                       l3098 1F42  
                     l2482 1C6B                       l2474 1C4F                       l2466 1C3B  
                     l2490 1B3F                       l2394 0026                       l2386 0016  
                     l2458 1DB8                       l3530 0771                       l3522 074E  
                     l3514 071F                       l3506 0708                       l3450 04E7  
                     l3442 04B3                       l3426 0421                       l3418 03C4  
                     l3370 01B7                       l3362 017D                       l3354 015B  
                     l3338 00FC                       l3346 0139                       l3610 12C9  
                     l3602 1291                       l3268 19AC                       l3276 1A2E  
                     l3284 1BFA                       l2820 0F87                       l2804 0F4F  
                     l2740 0CF1                       l2732 0CDD                       l2724 0CCD  
                     l2716 0CB6                       l2708 0CA6                       l3196 1FA4  
                     l3188 1F7E                       l2660 1778                       l2652 1763  
                     l2636 16E7                       l2644 173F                       l2628 16C2  
                     l2580 1611                       l2572 1601                       l2564 15F1  
                     l2556 15E1                       l2548 15C8                       l3292 0929  
                     l2484 1C72                       l2476 1C53                       l2468 1C41  
                     l2492 1B45                       l2396 002A                       l2388 001B  
                     l3540 079B                       l3532 0775                       l3524 0757  
                     l3516 0727                       l3508 070C                       l3460 0510  
                     l3452 04F0                       l3444 04CE                       l3436 0472  
                     l3428 046E                       l3380 01F8                       l3372 01BB  
                     l3364 0181                       l3356 0167                       l3348 013B  
                     l3620 1351                       l3612 12E9                       l3604 129F  
                     l3278 1A34                       l3286 1C16                       l2830 0FCD  
                     l2822 0FA0                       l2814 0F70                       l2806 0F50  
                     l2750 0D0C                       l2742 0CF9                       l2734 0CE2  
                     l2726 0CD2                       l2718 0CBB                       l3198 1FB4  
                     l2670 1786                       l2662 177A                       l2654 176C  
                     l2646 1755                       l2638 1725                       l2582 1615  
                     l2574 1605                       l2566 15F5                       l2558 15E5  
                     l2590 1625                       l2478 1C64                       l2486 1C78  
                     l2494 1B48                       l2398 002C                       l2902 0943  
                     l3550 07BC                       l3542 07A7                       l3534 0783  
                     l3526 075F                       l3518 0738                       l3470 058A  
                     l3462 0517                       l3446 04D4                       l3390 027F  
                     l3382 020B                       l3374 01D4                       l3366 019A  
                     l3358 016B                       l3622 135A                       l3614 1307  
                     l3606 12A4                       l3288 1C1C                       l2840 0FEC  
                     l2832 0FD7                       l2816 0F75                       l2824 0FA6  
                     l2808 0F54                       l2760 0D8E                       l2752 0D1C  
                     l2744 0CFE                       l2736 0CE7                       l2728 0CD8  
                     l3296 1BBA                       l2680 179D                       l2672 178A  
                     l2664 177F                       l2656 1770                       l2648 175A  
                     l2592 1626                       l2584 1619                       l2576 1609  
                     l2568 15F9                       l2496 1B4F                       l2920 0AC7  
                     l2904 0947                       l3552 07C8                       l3544 07AB  
                     l3536 078C                       l3528 076B                       l3480 05B9  
                     l3472 0593                       l3464 051C                       l3448 04E0  
                     l3456 04F5                       l3392 0298                       l3384 020F  
                     l3376 01DF                       l3368 01B3                       l3560 07EE  
                     l3616 1325                       l3608 12C0                       l2842 0FF7  
                     l2834 0FD9                       l2826 0FB3                       l2818 0F83  
                     l2770 0DFC                       l2762 0DAA                       l2754 0D29  
                     l2746 0D03                       l2738 0CEF                       l3298 1BEE  
                     l2690 17DB                       l2682 17AB                       l2674 1790  
                     l2658 1775                       l2666 1781                       l2594 163D  
                     l2586 161D                       l2578 160D                       l2850 1B0E  
                     l2498 1B53                       l2914 0A38                       l2906 0949  
                     l3554 07D4                       l3546 07B1                       l3538 0790  
                     l3490 05DF                       l3482 05C0                       l3474 0597  
                     l3466 0557                       l3458 0502                       l3394 02A1  
                     l3386 0215                       l3378 01E5                       l3618 132D  
                     l3570 1185                       l2860 19A5                       l2836 0FE7  
                     l2828 0FBE                       l2780 0E8C                       l2772 0E0C  
                     l2764 0DC6                       l2756 0D46                       l2692 17E3  
                     l2684 17AF                       l2668 1785                       l2596 165D  
                     l2588 1621                       l2852 1B3B                       l2932 0BE3  
                     l2916 0A3F                       l2908 0950                       l2924 0AF4  
                     l3548 07B8                       l3492 05FD                       l3484 05CF  
                     l3476 059D                       l3468 0576                       l3396 02BC  
                     l3388 0234                       l3580 11DB                       l3572 11B0  
                     l2870 19E1                       l2862 19CC                       l2838 0FEB  
                     l2790 0F20                       l2782 0E9C                       l2774 0E29  
                     l2766 0DCF                       l2758 0D62                       l2694 17E8  
                     l2686 17CD                       l2678 1798                       l2598 1666  
                     l2854 1B3C                       l2846 1B07                       l2950 19C9  
                     l2942 19BA                       l2934 0BEA                       l2926 0AFB  
                     l3494 0658                       l3486 05D4                       l3478 05AA  
                     l3398 02C4                       l3662 0153                       l3558 07DC  
                     l3590 122F                       l3582 11E0                       l3574 11BF  
                     l2864 19CF                       l2880 19F7                       l2872 19E6  
                     l2792 0F2E                       l2784 0EC9                       l2776 0E42  
                     l2768 0DDF                       l2696 17E9                       l2688 17D6  
                     l2856 1B3D                       l2848 1B0B                       l2960 1026  
                     l2944 19BB                       l3496 0693                       l3488 05DB  
                     l3592 123D                       l3584 1212                       l3576 11C4  
                     l2858 199F                       l2866 19D5                       l2882 19FA  
                     l2874 19E9                       l2794 0F37                       l2786 0EEF  
                     l2778 0E5F                       l2698 17ED                       l2970 104E  
                     l2954 100A                       l2946 19C1                       l2938 0C72  
                     l3498 06B2                       l3594 1242                       l3586 1221  
                     l3578 11CD                       l2868 19D8                       l2876 19EF  
                     l2796 0F3B                       l2788 0F17                       l2980 107A  
                     l2972 1050                       l2956 101D                       l2892 1483  
                     l2884 1370                       l2948 19C7                       l3596 1274  
                     l3588 1226                       l2878 19F2                       l2798 0F3C  
                     l2982 107B                       l2974 1059                       l2966 1039  
                     l2894 1489                       l2886 1376                       l3598 1283  
                     l2992 1095                       l2984 1083                       l2976 1062  
                     l2968 103F                       l2986 108D                       l2994 10A7  
                     l2978 1070                       l2898 1534                       STR_1 08B4  
                     STR_2 08A0                       u3010 1DE6                       u3011 1DE5  
                     u3100 0044                       u3005 1DD7                       u3101 0043  
                     u3030 1E01                       u3031 1E00                       u3120 0055  
                     u3200 1D96                       u4001 0E51                       u3025 1DE8  
                     u3121 0054                       u3201 1D95                       u4002 0E58  
                     u3050 1E1F                       u3210 1DA0                       u4011 0E7E  
                     u4003 0E5F                       u3051 1E1E                       u3035 1DFD  
                     u3115 0045                       u3211 1D9F                       u4012 0E85  
                     u3140 0069                       u3060 0016                       u4021 0EAB  
                     u4013 0E8C                       u3045 1E11                       u3141 0068  
                     u3125 0051                       u3061 0015                       u4110 0F4F  
                     u4030 0ED5                       u4022 0EB2                       u3310 1C78  
                     u3150 006E                       u3070 0021                       u3230 1DB3  
                     u4111 0F4E                       u4023 0EB9                       u3311 1C77  
                     u3151 006D                       u3135 005D                       u3071 0020  
                     u3231 1DB2                       u3215 1D9C                       u4200 0FEB  
                     u4120 0F54                       u3400 1594                       u5000 1E93  
                     u3320 1B45                       u3080 0032                       u3240 1DB8  
                     u3160 1D6E                       u4201 0FEA                       u4121 0F53  
                     u4105 0F3E                       u4041 0EE1                       u3401 1593  
                     u5001 1E92                       u3305 1C6C                       u3321 1B44  
                     u3081 0031                       u3241 1DB7                       u3225 1DA7  
                     u3161 1D6D                       u4130 0F68                       u4050 0EFD  
                     u4042 0EE8                       u3410 15B2                       u4210 1B1E  
                     u5010 1E98                       u3250 1C41                       u3170 1D79  
                     u4131 0F67                       u4043 0EEF                       u4035 0ED0  
                     u3411 15B1                       u5011 1E97                       u3251 1C40  
                     u3171 1D78                       u4220 19A5                       u4140 0F6F  
                     u5100 1F70                       u3500 165D                       u3420 15BD  
                     u5020 1D1D                       u3340 1B57                       u3180 1D84  
                     u4221 19A4                       u4141 0F6E                       u4061 0F09  
                     u5101 1F6F                       u3501 165C                       u3421 15BC  
                     u5021 1D1C                       u3341 1B56                       u3181 1D83  
                     u4230 19AB                       u4150 0F75                       u4062 0F10  
                     u3510 166C                       u3430 15C3                       u3270 1C53  
                     u3350 1B61                       u4231 19AA                       u4151 0F74  
                     u4063 0F17                       u4055 0EF8                       u3511 166B  
                     u3431 15C2                       u4215 1B19                       u3271 1C52  
                     u3351 1B60                       u3335 1B49                       u3095 0036  
                     u4160 0F87                       u5200 1FF2                       u5120 1F91  
                     u3440 15C8                       u5040 1D31                       u4240 1376  
                     u4320 0947                       u4161 0F86                       u5201 1FF1  
                     u5121 1F90                       u3441 15C7                       u5041 1D30  
                     u3265 1C45                       u4305 14F3                       u4241 1375  
                     u4321 0946                       u4170 0F96                       u4090 0F3B  
                     u5210 1FF6                       u3610 16E7                       u3530 1682  
                     u3450 15E1                       u5050 1D43                       u3290 1C64  
                     u3370 1B74                       u4410 0AFB                       u4330 0950  
                     u4091 0F3A                       u4075 0F19                       u5211 1FF5  
                     u5115 1F83                       u3611 16E6                       u3531 1681  
                     u3451 15E0                       u5051 1D42                       u5035 1D22  
                     u3291 1C63                       u3371 1B73                       u3355 1B5D  
                     u4315 153F                       u3195 1D88                       u4411 0AFA  
                     u4331 094F                       u5220 1AFA                       u2900 1AAB  
                     u4180 0FB3                       u5140 1FB3                       u3700 177F  
                     u3540 1686                       u3460 15E5                       u3380 1589  
                     u4500 19C7                       u5300 00E6                       u5221 1AF9  
                     u2901 1AAA                       u4181 0FB2                       u4085 0F30  
                     u5141 1FB2                       u3701 177E                       u3621 16FE  
                     u3613 16E3                       u3605 16C5                       u3541 1685  
                     u3525 166F                       u3461 15E4                       u3381 1588  
                     u3285 1C54                       u3365 1B68                       u4501 19C6  
                     u4405 0ACA                       u5301 00E5                       u2910 1B7E  
                     u5230 1A22                       u4190 0FCD                       u3710 1785  
                     u3630 1712                       u3622 16FF                       u3550 168B  
                     u3470 163D                       u3390 158F                       u5070 1D60  
                     u4510 101D                       u5310 00F4                       u2911 1B7D  
                     u5231 1A21                       u4191 0FCC                       u4175 0F91  
                     u5135 1FA5                       u3711 1784                       u3631 1713  
                     u3623 1704                       u3551 168A                       u3471 163C  
                     u3391 158E                       u5071 1D5F                       u5055 1D3F  
                     u4511 101C                       u3295 1C60                       u4255 1393  
                     u5311 00F3                       u2920 1B89                       u5240 1A34  
                     u5160 1FC3                       u5080 1F4C                       u3800 17DB  
                     u3720 178A                       u3640 1730                       u3632 1718  
                     u3624 1705                       u3480 1648                       u4600 10A6  
                     u4520 1037                       u4280 1489                       u5400 02D3  
                     u5320 0138                       u2921 1B88                       u5241 1A33  
                     u4185 0FAF                       u5161 1FC2                       u5081 1F4B  
                     u3801 17DA                       u3721 1789                       u3641 172F  
                     u3633 1719                       u3625 170A                       u3561 169D  
                     u3481 1646                       u5065 1D52                       u4601 10A5  
                     u4521 1036                       u4281 1488                       u4265 13ED  
                     u4425 0B1B                       u4345 0970                       u5401 02D2  
                     u5321 0137                       u2930 1B90                       u5250 1C04  
                     u5170 1FC9                       u5090 1F50                       u3810 17E8  
                     u3730 1790                       u3650 1755                       u3626 170B  
                     u3570 16AF                       u3562 16A4                       u3490 1649  
                     u4610 10AD                       u4450 0BEA                       u4370 0A3F  
                     u5410 0329                       u5330 0167                       u2931 1B8F  
                     u4195 0FC9                       u5171 1FC8                       u5155 1FB8  
                     u5091 1F4F                       u3811 17E7                       u3731 178F  
                     u3651 1754                       u3571 16AE                       u3563 16AB  
                     u3475 1639                       u4611 10AC                       u4275 1442  
                     u4451 0BE9                       u4435 0B57                       u4371 0A3E  
                     u4355 09AC                       u5411 0328                       u5331 0166  
                     _PEIE 005E                       u2940 1B97                       u5260 1C26  
                     u3900 0CFE                       u5180 1FCD                       u3820 17ED  
                     u3740 1797                       u3660 175A                       u3580 16B3  
                     u4700 114B                       u4540 1070                       u5500 04E0  
                     u5420 0344                       u5340 016B                       u2941 1B96  
                     u3901 0CFD                       u5181 1FCC                       u3821 17EC  
                     u3741 1796                       u3661 1759                       u3581 16B2  
                     u4701 114A                       u4541 106F                       u4445 0BA2  
                     u4365 09F7                       u5501 04DF                       u5421 0343  
                     u5405 02CF                       u5341 016A                       u2950 1B9E  
                     u5270 1C38                       u3910 0D03                       u5190 1FE2  
                     u3830 17FE                       u3750 179D                       u3590 16C2  
                     u4710 1152                       u4630 10BE                       u5510 0502  
                     u5430 036B                       u5350 019A                       u2951 1B9D  
                     u5271 1C37                       u3911 0D02                       u3831 17FD  
                     u3751 179C                       u3591 16C1                       u4711 1151  
                     u4631 10BD                       u4535 105B                       u4295 14A6  
                     u5511 0501                       u5431 036A                       u5415 0325  
                     u5351 0199                       u2960 1BA5                       u2880 1A97  
                     u3840 0CB0                       u3760 17AF                       u3680 1770  
                     u4800 1A84                       u4640 10D4                       u4560 1089  
                     u5600 0700                       u5520 0510                       u5440 037A  
                     u5360 01D4                       u5280 0086                       u2961 1BA4  
                     u2881 1A96                       u3921 0D54                       u3841 0CAF  
                     u3761 17AE                       u3681 176F                       u4801 1A83  
                     u4641 10D3                       u4625 10B0                       u4561 1088  
                     u4545 106C                       u4465 0BFD                       u4385 0A52  
                     u5601 06FF                       u5521 050F                       u5441 0379  
                     u5361 01D3                       u5281 0085                       u2970 1BAC  
                     u3922 0D5B                       u3850 0CB6                       u3770 17BE  
                     u3690 1775                       u4810 1CDB                       u4730 1164  
                     u4650 10E8                       u4570 108D                       u4490 19C1  
                     u5610 0718                       u5450 0395                       u5370 020F  
                     u5290 00A6                       u2971 1BAB                       u3931 0D70  
                     u3923 0D62                       u3851 0CB5                       u5195 1FDD  
                     u3691 1774                       u3675 1765                       u4811 1CDA  
                     u4731 1163                       u4651 10E7                       u4571 108C  
                     u4555 107C                       u4491 19C0                       u4475 0C39  
                     u4395 0A8E                       u5611 0717                       u5515 04FE  
                     u5451 0394                       u5371 020E                       u5291 00A5  
                     u2980 1BB3                       u3932 0D77                       u3860 0CBB  
                     u3780 17CD                       u4820 1CF7                       u4900 1F42  
                     u4740 116B                       u4580 1094                       u5700 079B  
                     u5620 071F                       u5540 0589                       u5380 0298  
                     u2981 1BB2                       u3941 0D9C                       u3933 0D7E  
                     u3861 0CBA                       u3781 17CC                       u4821 1CF6  
                     u4901 1F41                       u4741 116A                       u4725 1154  
                     u4581 1093                       u4485 0C75                       u5701 079A  
                     u5621 071E                       u5541 0588                       u5445 0376  
                     u5381 0297                       u3942 0DA3                       u3870 0CDC  
                     u3790 17D6                       u2990 1DD2                       u4830 1D11  
                     u4910 000C                       u4670 1129                       u5710 07B1  
                     u5630 0727                       u5550 05AA                       u5470 04A8  
                     u5390 02BC                       u2895 1A9E                       u3951 0DB8  
                     u3943 0DAA                       u3871 0CDB                       u3791 17D5  
                     u3775 17B9                       u2991 1DD1                       u4831 1D10  
                     u4911 000B                       u4671 1128                       u5711 07B0  
                     u5631 0726                       u5551 05A9                       u5535 051F  
                     u5471 04A7                       u5391 02BB                       u3952 0DBF  
                     u3880 0CE2                       u4840 1EB8                       u4920 1E35  
                     u4760 117C                       u5720 07C8                       u5640 0738  
                     u5560 05B9                       u5480 04B3                       u3953 0DC6  
                     u3881 0CE1                       u4905 1F3E                       u4841 1EB7  
                     u4921 1E34                       u4761 117B                       u4665 1110  
                     u5721 07C7                       u5705 0797                       u5641 0737  
                     u5561 05B8                       u5481 04B2                       u5465 0475  
                     u3890 0CE7                       u4850 1ED4                       u4930 1E4C  
                     u4770 1A6A                       u4690 1147                       u5730 07D4  
                     u5650 074E                       u5570 05D4                       u5490 04CE  
                     u3971 0DEE                       u3891 0CE6                       u4835 1D0D  
                     u4851 1ED3                       u4771 1A69                       u4755 116E  
                     u4691 1146                       u4675 1125                       u4595 1096  
                     u5731 07D3                       u5651 074D                       u5571 05D3  
                     u5555 05A6                       u5491 04CD                       u5475 04A4  
                     u3972 0DF5                       u4860 1EE0                       u4940 1E62  
                     u5740 07EE                       u5660 075F                       u3981 0E1B  
                     u3973 0DFC                       u3965 0DC8                       u4861 1EDF  
                     u4941 1E61                       u4685 113A                       u5741 07ED  
                     u5661 075E                       u5645 0734                       u5565 05B5  
                     u3982 0E22                       u4950 1E69                       u5670 076B  
                     u3983 0E29                       u4871 1EEF                       u4951 1E68  
                     u4935 1E47                       u5671 076A                       u5655 074A  
                     u5807 12AC                       u4880 1F08                       u4872 1EF0  
                     u5680 0775                       u4881 1F07                       u4873 1EF5  
                     u4785 1A71                       u5681 0774                       u5585 065B  
                     u5817 1362                       u4874 1EF6                       u4970 1E7B  
                     u5690 0783                       u5827 19F4                       u3995 0E2B  
                     u4891 1F17                       u4875 1EFB                       u4971 1E7A  
                     u4795 1A78                       u5691 0782                       u5595 06C1  
                     u4892 1F18                       u4876 1EFC                       u4980 1E82  
                     u5837 19FC                       u4893 1F1D                       u4981 1E81  
                     u4965 1E6B                       u5757 11B8                       u4894 1F1E  
                     u5847 1C87                       u4895 1F23                       u5695 077F  
                     u5767 11E8                       u4896 1F24                       u5857 1C96  
                     u5777 121A                       u5867 1CA7                       u4995 1E85  
                     u5787 124A                       u5877 19DC                       u5797 127C  
        ?_Lcd_Write_String 0073                       _main 1185                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075               _sprintf$1015 00B2  
          __end_of_Lcd_Cmd 19E5           ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070              ___fltol@sign1 005A  
          __end_of___fladd 1800                      ?_main 0070            __end_of___awdiv 0078  
          __end_of___flneg 000F            __end_of___awmod 1DC2            __end_of___flmul 1000  
          __end_of___flsub 1A64            __end_of___fltol 1EA4                      _ANSEL 0188  
          __end_of___lldiv 1E28            ___awdiv@divisor 0077            __end_of___llmod 1D69  
          __end_of___lwdiv 1C7D            __end_of___lwmod 1B79            ___awdiv@counter 0020  
                    _PORTB 0006                      _PORTD 0008            __end_of_cfg_clk 1985  
  __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063                      _conv1 1BB7  
                    _conv2 08C7                      _conv3 1AB0            __end_of_dpowers 08A0  
                    _scale 0940            __end_of_isdigit 19CB                      _setup 1A00  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 07F3           __end_of_Lcd_Init 1CC7           __end_of_Lcd_Port 1BB7  
          __initialization 07F3               __end_of_main 136D                     ??_main 00CD  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070                     ?_conv1 003E  
                   ?_conv2 0066                     ?_conv3 0020         ??_I2C_Master_Write 0072  
         ___llmod@dividend 0074                     ?_scale 003E           ___awdiv@dividend 0079  
                   ?_setup 0070                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 001B                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 2000           __end_of__powers_ 0844                     ___flge 1EA4  
                   ___fleq 1CC7                  ??___fladd 005A                     ___wmul 1A64  
                ??___awdiv 007B                  ??___flneg 0074                  ??___awmod 0074  
                ??___flmul 002C                  ??___flsub 007E                  ??___fltol 0055  
                ??___lldiv 0078                  ??___llmod 0078                  ??___lwdiv 007A  
                ??___lwmod 0074                  ??_cfg_clk 0070                     _fround 136D  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_isdigit 0070         __size_of__Umul8_16 0027                  ??_sprintf 00AD  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                 ___flneg@f1 0070          __end_of_Lcd_Clear 19B9  
               ___fltol@f1 0051             __pcstackCOMMON 0070              __end_of_conv1 1BF7  
            __end_of_conv2 0940              __end_of_conv3 1AD9              __end_of_scale 0C9F  
            __end_of_setup 1A1C             _Lcd_Set_Cursor 1A1C                 __div_to_l_ 10C7  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_conv1 0042  
                  ??_conv2 006A                    ??_conv3 0024            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 0042            __div_to_l_@quot 0020  
             sprintf@width 00BD                    ??_setup 007E                 __pbssBANK1 00D0  
            __div_to_l_@f1 0070              __div_to_l_@f2 0074          __end_of__Umul8_16 1AB0  
               __pmaintext 1185                    ?___flge 0070                    ?___fleq 0070  
                  ?___wmul 0070                    ?_fround 003E  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 1A40                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0800             _Lcd_Write_Char 19E5                    _Lcd_Cmd 19CB  
        __end_of__npowers_ 0878                 _scale$1014 004C            __size_of___flge 00A2  
          __size_of___fleq 004E                    ___fladd 1578                    ___awdiv 000F  
                  ___flneg 0004                    ___awmod 1D69                    ___flmul 0C9F  
                  ___flsub 1A40                    ___fltol 1E28                    ___lldiv 1DC2  
          __size_of___wmul 0025                    ___llmod 1D15                    ___lwdiv 1C39  
                  ___lwmod 1B3F                    _cfg_clk 197F            __size_of_fround 020B  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0078                    __ptext2 0940  
                  __ptext3 1D69                    __ptext4 000F                    __ptext5 19B9  
                  __ptext6 136D                    __ptext7 1B3F                    __ptext8 1C39  
                  __ptext9 100A                ?__div_to_l_ 0070                    _dpowers 0878  
                  _isdigit 19B9                 ??___xxtofl 0074           ___awmod@dividend 0072  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E                    conv1@aa 004A  
                  conv2@aa 00A4                    conv3@aa 002C   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 0078                    clrloop0 1986  
   __end_of_Lcd_Write_Char 1A00       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
                _PORTCbits 0007                ___fladd@grs 0065              ___xxtofl@sign 0078  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073  
        Lcd_Write_String@i 0078                ___flmul@grs 0032        __size_of__div_to_l_ 00BE  
                _Lcd_Clear 19AC             __end_of___flge 1F46             __end_of___fleq 1D15  
           __end_of___wmul 1A89           _Lcd_Write_String 1BF7             __end_of_fround 1578  
      start_initialization 07F3        __end_of__tdiv_to_l_ 10C7          __size_of_Lcd_Init 004A  
        __size_of_Lcd_Port 003E          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070            ___llmod@divisor 0070  
          ___llmod@counter 0079                 ?_Lcd_Clear 0070                   ??___flge 0078  
                 ??___fleq 0078                   ??___wmul 0074                  __Umul8_16 1A89  
          Lcd_Write_Char@a 0072                   ??_fround 0042              sprintf@tmpval 00BF  
                ___fladd@a 0056                  ___fladd@b 0052                 fround@prec 0051  
                ___flmul@a 0028                  ___flmul@b 0024                  ___flsub@a 0066  
                ___flsub@b 006A                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070  
              sprintf@flag 00BB                sprintf@eexp 00C3                sprintf@fval 00C5  
              sprintf@prec 00CA           _I2C_Master_Start 198D           _I2C_Master_Write 1000  
         ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075                   ?___fladd 0052  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0024                   ?___flsub 0066                   ?___fltol 0051  
                 ?___lldiv 0070                   ?___llmod 0070                  __npowers_ 0844  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
                 ?_cfg_clk 0070                  __pstrings 0800                __tdiv_to_l_ 100A  
             ??__div_to_l_ 0078                   ?_isdigit 0070           ___lwdiv@quotient 007B  
           __size_of_conv1 0040             __size_of_conv2 0079             __size_of_conv3 0029  
                 ?_sprintf 00A0             __size_of_scale 035F             __size_of_setup 001C  
           ___wmul@product 0074                  clear_ram0 1985                   Lcd_Cmd@a 0073  
       __end_of__div_to_l_ 1185                ??_Lcd_Clear 0074                __stringbase 080F  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071                   _Lcd_Init 1C7D  
                 _Lcd_Port 1B79        I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 1C39  
         __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0024           __size_of___fltol 007C  
         __size_of___lldiv 0066           __size_of___llmod 0054           __size_of___lwdiv 0044  
         __size_of___lwmod 003A                _fround$1012 004D                _fround$1013 0049  
         __size_of_cfg_clk 0006         __end_of__stringtab 0810                _isdigit$826 0070  
               sprintf@val 00B7            _I2C_Master_Init 1B07            _I2C_Master_Read 1AD9  
                 ___xxtofl 1F46            _I2C_Master_Wait 199F            _I2C_Master_Stop 1996  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 10C7                   __ptext11 1A64                   __ptext20 1DC2  
                 __ptext12 1D15                   __ptext21 1AB0                   __ptext13 1E28  
                 __ptext30 19E5                   __ptext22 08C7                   __ptext14 1A40  
                 __ptext31 1A1C                   __ptext23 1578                   __ptext15 0004  
                 __ptext40 199F                   __ptext32 1C7D                   __ptext24 1BB7  
                 __ptext16 1EA4                   __ptext33 19AC                   __ptext25 1F46  
                 __ptext17 1CC7                   __ptext34 19CB                   __ptext26 0C9F  
                 __ptext18 1A00                   __ptext35 1B79                   __ptext27 1A89  
                 __ptext19 1B07                   __ptext36 1000                   __ptext28 197F  
                 __ptext37 1996                   __ptext29 1BF7                   __ptext38 198D  
                 __ptext39 1AD9                   __powers_ 0810           __size_of_sprintf 077B  
            __size_of_main 01E8   __end_of_I2C_Master_Start 1996   __end_of_I2C_Master_Write 100A  
                 isdigit@c 0071                   scale@scl 0050                  sprintf@ap 00B6  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00C9  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 080A                 _OSCCONbits 008F    __end_of_I2C_Master_Init 1B3F  
  __end_of_I2C_Master_Read 1B07    __end_of_I2C_Master_Wait 19AC    __end_of_I2C_Master_Stop 199F  
       Lcd_Set_Cursor@temp 0077                conv1@result 0046               ?__tdiv_to_l_ 0070  
              conv2@result 00A0                conv3@result 0028     __Umul8_16@multiplicand 0070  
                 sprintf@c 00CC                   sprintf@f 00A0           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 080A                   stringtab 0800                _SSPCON2bits 0091  
            ___fladd@signs 0062               ___fladd@aexp 0063               ___fladd@bexp 0064  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  

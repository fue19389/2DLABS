

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 04 00:34:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319                           
   320                           	psect	strings
   321  1800                     __pstrings:
   322  1800                     stringtab:
   323  1800                     __stringtab:
   324  1800                     stringcode:	
   325                           ;	String table - string pointers are 1 byte each
   326                           
   327  1800                     stringdir:
   328  1800  3018               	movlw	high stringdir
   329  1801  008A               	movwf	10
   330  1802  0804               	movf	4,w
   331  1803  0A84               	incf	4,f
   332  1804  0782               	addwf	2,f
   333  1805                     __stringbase:
   334  1805  3400               	retlw	0
   335  1806                     __end_of__stringtab:
   336  1806                     __powers_:
   337  1806  3400               	retlw	0
   338  1807  3400               	retlw	0
   339  1808  3480               	retlw	128
   340  1809  343F               	retlw	63
   341  180A  3400               	retlw	0
   342  180B  3400               	retlw	0
   343  180C  3420               	retlw	32
   344  180D  3441               	retlw	65
   345  180E  3400               	retlw	0
   346  180F  3400               	retlw	0
   347  1810  34C8               	retlw	200
   348  1811  3442               	retlw	66
   349  1812  3400               	retlw	0
   350  1813  3400               	retlw	0
   351  1814  347A               	retlw	122
   352  1815  3444               	retlw	68
   353  1816  3400               	retlw	0
   354  1817  3440               	retlw	64
   355  1818  341C               	retlw	28
   356  1819  3446               	retlw	70
   357  181A  3400               	retlw	0
   358  181B  3450               	retlw	80
   359  181C  34C3               	retlw	195
   360  181D  3447               	retlw	71
   361  181E  3400               	retlw	0
   362  181F  3424               	retlw	36
   363  1820  3474               	retlw	116
   364  1821  3449               	retlw	73
   365  1822  3480               	retlw	128
   366  1823  3496               	retlw	150
   367  1824  3418               	retlw	24
   368  1825  344B               	retlw	75
   369  1826  3420               	retlw	32
   370  1827  34BC               	retlw	188
   371  1828  34BE               	retlw	190
   372  1829  344C               	retlw	76
   373  182A  3428               	retlw	40
   374  182B  346B               	retlw	107
   375  182C  346E               	retlw	110
   376  182D  344E               	retlw	78
   377  182E  34F9               	retlw	249
   378  182F  3402               	retlw	2
   379  1830  3415               	retlw	21
   380  1831  3450               	retlw	80
   381  1832  34EC               	retlw	236
   382  1833  3478               	retlw	120
   383  1834  34AD               	retlw	173
   384  1835  3460               	retlw	96
   385  1836  34CA               	retlw	202
   386  1837  34F2               	retlw	242
   387  1838  3449               	retlw	73
   388  1839  3471               	retlw	113
   389  183A                     __end_of__powers_:
   390  183A                     __npowers_:
   391  183A  3400               	retlw	0
   392  183B  3400               	retlw	0
   393  183C  3480               	retlw	128
   394  183D  343F               	retlw	63
   395  183E  34CD               	retlw	205
   396  183F  34CC               	retlw	204
   397  1840  34CC               	retlw	204
   398  1841  343D               	retlw	61
   399  1842  340A               	retlw	10
   400  1843  34D7               	retlw	215
   401  1844  3423               	retlw	35
   402  1845  343C               	retlw	60
   403  1846  346F               	retlw	111
   404  1847  3412               	retlw	18
   405  1848  3483               	retlw	131
   406  1849  343A               	retlw	58
   407  184A  3417               	retlw	23
   408  184B  34B7               	retlw	183
   409  184C  34D1               	retlw	209
   410  184D  3438               	retlw	56
   411  184E  34AC               	retlw	172
   412  184F  34C5               	retlw	197
   413  1850  3427               	retlw	39
   414  1851  3437               	retlw	55
   415  1852  34BD               	retlw	189
   416  1853  3437               	retlw	55
   417  1854  3486               	retlw	134
   418  1855  3435               	retlw	53
   419  1856  3495               	retlw	149
   420  1857  34BF               	retlw	191
   421  1858  34D6               	retlw	214
   422  1859  3433               	retlw	51
   423  185A  3477               	retlw	119
   424  185B  34CC               	retlw	204
   425  185C  342B               	retlw	43
   426  185D  3432               	retlw	50
   427  185E  345F               	retlw	95
   428  185F  3470               	retlw	112
   429  1860  3489               	retlw	137
   430  1861  3430               	retlw	48
   431  1862  34FF               	retlw	255
   432  1863  34E6               	retlw	230
   433  1864  34DB               	retlw	219
   434  1865  342E               	retlw	46
   435  1866  3408               	retlw	8
   436  1867  34E5               	retlw	229
   437  1868  343C               	retlw	60
   438  1869  341E               	retlw	30
   439  186A  3460               	retlw	96
   440  186B  3442               	retlw	66
   441  186C  34A2               	retlw	162
   442  186D  340D               	retlw	13
   443  186E                     __end_of__npowers_:
   444  186E                     _dpowers:
   445  186E  3401               	retlw	1
   446  186F  3400               	retlw	0
   447  1870  3400               	retlw	0
   448  1871  3400               	retlw	0
   449  1872  340A               	retlw	10
   450  1873  3400               	retlw	0
   451  1874  3400               	retlw	0
   452  1875  3400               	retlw	0
   453  1876  3464               	retlw	100
   454  1877  3400               	retlw	0
   455  1878  3400               	retlw	0
   456  1879  3400               	retlw	0
   457  187A  34E8               	retlw	232
   458  187B  3403               	retlw	3
   459  187C  3400               	retlw	0
   460  187D  3400               	retlw	0
   461  187E  3410               	retlw	16
   462  187F  3427               	retlw	39
   463  1880  3400               	retlw	0
   464  1881  3400               	retlw	0
   465  1882  34A0               	retlw	160
   466  1883  3486               	retlw	134
   467  1884  3401               	retlw	1
   468  1885  3400               	retlw	0
   469  1886  3440               	retlw	64
   470  1887  3442               	retlw	66
   471  1888  340F               	retlw	15
   472  1889  3400               	retlw	0
   473  188A  3480               	retlw	128
   474  188B  3496               	retlw	150
   475  188C  3498               	retlw	152
   476  188D  3400               	retlw	0
   477  188E  3400               	retlw	0
   478  188F  34E1               	retlw	225
   479  1890  34F5               	retlw	245
   480  1891  3405               	retlw	5
   481  1892  3400               	retlw	0
   482  1893  34CA               	retlw	202
   483  1894  349A               	retlw	154
   484  1895  343B               	retlw	59
   485  1896                     __end_of_dpowers:
   486  000B                     _INTCONbits	set	11
   487  0018                     _RCSTAbits	set	24
   488  0008                     _PORTD	set	8
   489  0006                     _PORTB	set	6
   490  0007                     _PORTCbits	set	7
   491  0005                     _PORTAbits	set	5
   492  0019                     _TXREG	set	25
   493  001A                     _RCREG	set	26
   494  000C                     _PIR1bits	set	12
   495  0013                     _SSPBUF	set	19
   496  0014                     _SSPCON	set	20
   497  0064                     _TXIF	set	100
   498  008C                     _PIE1bits	set	140
   499  009A                     _SPBRGH	set	154
   500  0099                     _SPBRG	set	153
   501  0098                     _TXSTAbits	set	152
   502  008F                     _OSCCONbits	set	143
   503  0088                     _TRISD	set	136
   504  0086                     _TRISB	set	134
   505  0087                     _TRISCbits	set	135
   506  0094                     _SSPSTATbits	set	148
   507  0094                     _SSPSTAT	set	148
   508  0428                     _TRISA0	set	1064
   509  043B                     _TRISC3	set	1083
   510  043D                     _TRISC5	set	1085
   511  0187                     _BAUDCTLbits	set	391
   512  0189                     _ANSELH	set	393
   513  0188                     _ANSEL	set	392
   514  1896                     STR_1:
   515  1896  3425               	retlw	37	;'%'
   516  1897  3433               	retlw	51	;'3'
   517  1898  342E               	retlw	46	;'.'
   518  1899  3431               	retlw	49	;'1'
   519  189A  3466               	retlw	102	;'f'
   520  189B  3456               	retlw	86	;'V'
   521  189C  3420               	retlw	32	;' '
   522  189D  3425               	retlw	37	;'%'
   523  189E  3433               	retlw	51	;'3'
   524  189F  342E               	retlw	46	;'.'
   525  18A0  3432               	retlw	50	;'2'
   526  18A1  3466               	retlw	102	;'f'
   527  18A2  3456               	retlw	86	;'V'
   528  18A3  3420               	retlw	32	;' '
   529  18A4  3425               	retlw	37	;'%'
   530  18A5  3433               	retlw	51	;'3'
   531  18A6  342E               	retlw	46	;'.'
   532  18A7  3432               	retlw	50	;'2'
   533  18A8  3466               	retlw	102	;'f'
   534  18A9  3400               	retlw	0
   535                           
   536                           	psect	cinit
   537  000F                     start_initialization:	
   538                           ; #config settings
   539                           
   540  000F                     __initialization:
   541                           
   542                           ; Clear objects allocated to BANK1
   543  000F  1383               	bcf	3,7	;select IRP bank0
   544  0010  30D0               	movlw	low __pbssBANK1
   545  0011  0084               	movwf	4
   546  0012  30E9               	movlw	low (__pbssBANK1+25)
   547  0013  160A  158A  23C0  120A  118A  	fcall	clear_ram0
   548  0018                     end_of_initialization:	
   549                           ;End of C runtime variable initialization code
   550                           
   551  0018                     __end_of__initialization:
   552  0018  0183               	clrf	3
   553  0019  120A  158A  2843   	ljmp	_main	;jump to C main() function
   554                           
   555                           	psect	bssBANK1
   556  00D0                     __pbssBANK1:
   557  00D0                     _v33:
   558  00D0                     	ds	4
   559  00D4                     _v22:
   560  00D4                     	ds	4
   561  00D8                     _v11:
   562  00D8                     	ds	4
   563  00DC                     _chng2:
   564  00DC                     	ds	1
   565  00DD                     _chng1:
   566  00DD                     	ds	1
   567  00DE                     _V3:
   568  00DE                     	ds	1
   569  00DF                     _f1:
   570  00DF                     	ds	10
   571                           
   572                           	psect	clrtext
   573  1BC0                     clear_ram0:	
   574                           ;	Called with FSR containing the base address, and
   575                           ;	W with the last address+1
   576                           
   577  1BC0  0064               	clrwdt	;clear the watchdog before getting into this loop
   578  1BC1                     clrloop0:
   579  1BC1  0180               	clrf	0	;clear RAM location pointed to by FSR
   580  1BC2  0A84               	incf	4,f	;increment pointer
   581  1BC3  0604               	xorwf	4,w	;XOR with final address
   582  1BC4  1903               	btfsc	3,2	;have we reached the end yet?
   583  1BC5  3400               	retlw	0	;all done for this memory range, return
   584  1BC6  0604               	xorwf	4,w	;XOR again to restore value
   585  1BC7  2BC1               	goto	clrloop0	;do the next byte
   586                           
   587                           	psect	cstackBANK1
   588  00A0                     __pcstackBANK1:
   589  00A0                     ?___flsub:
   590  00A0                     ___flsub@a:	
   591                           ; 4 bytes @ 0x0
   592                           
   593                           
   594                           ; 4 bytes @ 0x0
   595  00A0                     	ds	4
   596  00A4                     ___flsub@b:
   597                           
   598                           ; 4 bytes @ 0x4
   599  00A4                     	ds	4
   600  00A8                     ?_sprintf:
   601  00A8                     sprintf@f:	
   602                           ; 2 bytes @ 0x8
   603                           
   604                           
   605                           ; 1 bytes @ 0x8
   606  00A8                     	ds	13
   607  00B5                     _sprintf$1265:
   608                           
   609                           ; 4 bytes @ 0x15
   610  00B5                     	ds	4
   611  00B9                     sprintf@ap:
   612                           
   613                           ; 1 bytes @ 0x19
   614  00B9                     	ds	1
   615  00BA                     sprintf@val:
   616                           
   617                           ; 4 bytes @ 0x1A
   618  00BA                     	ds	4
   619  00BE                     sprintf@flag:
   620                           
   621                           ; 2 bytes @ 0x1E
   622  00BE                     	ds	2
   623  00C0                     sprintf@width:
   624                           
   625                           ; 2 bytes @ 0x20
   626  00C0                     	ds	2
   627  00C2                     sprintf@tmpval:
   628                           
   629                           ; 4 bytes @ 0x22
   630  00C2                     	ds	4
   631  00C6                     sprintf@eexp:
   632                           
   633                           ; 2 bytes @ 0x26
   634  00C6                     	ds	2
   635  00C8                     sprintf@fval:
   636                           
   637                           ; 4 bytes @ 0x28
   638  00C8                     	ds	4
   639  00CC                     sprintf@sp:
   640                           
   641                           ; 1 bytes @ 0x2C
   642  00CC                     	ds	1
   643  00CD                     sprintf@prec:
   644                           
   645                           ; 2 bytes @ 0x2D
   646  00CD                     	ds	2
   647  00CF                     sprintf@c:
   648                           
   649                           ; 1 bytes @ 0x2F
   650  00CF                     	ds	1
   651                           
   652                           	psect	cstackCOMMON
   653  0070                     __pcstackCOMMON:
   654  0070                     ?_isdigit:
   655  0070                     ?_setup:	
   656                           ; 1 bit 
   657                           
   658  0070                     ?_cfg_inte:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_cfg_usart:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_cfg_clk:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_send_crct:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_send_char:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_spiReceiveWait:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_spiWrite:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_spiRead:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_isr:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_isr:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_main:	
   689                           ; 1 bytes @ 0x0
   690                           
   691                           
   692                           ; 1 bytes @ 0x0
   693  0070                     	ds	3
   694  0073                     ?___fleq:
   695  0073                     ?___flge:	
   696                           ; 1 bit 
   697                           
   698  0073                     ??_cfg_inte:	
   699                           ; 1 bit 
   700                           
   701  0073                     ??_cfg_usart:	
   702                           ; 1 bytes @ 0x3
   703                           
   704  0073                     ??_cfg_clk:	
   705                           ; 1 bytes @ 0x3
   706                           
   707  0073                     ??_send_char:	
   708                           ; 1 bytes @ 0x3
   709                           
   710  0073                     ??_isdigit:	
   711                           ; 1 bytes @ 0x3
   712                           
   713  0073                     ?_spiInit:	
   714                           ; 1 bytes @ 0x3
   715                           
   716  0073                     ??_spiReceiveWait:	
   717                           ; 1 bytes @ 0x3
   718                           
   719  0073                     ??_spiWrite:	
   720                           ; 1 bytes @ 0x3
   721                           
   722  0073                     ??_spiRead:	
   723                           ; 1 bytes @ 0x3
   724                           
   725  0073                     ?__Umul8_16:	
   726                           ; 1 bytes @ 0x3
   727                           
   728  0073                     ?___wmul:	
   729                           ; 2 bytes @ 0x3
   730                           
   731  0073                     ?___awmod:	
   732                           ; 2 bytes @ 0x3
   733                           
   734  0073                     ?___lwmod:	
   735                           ; 2 bytes @ 0x3
   736                           
   737  0073                     ?__tdiv_to_l_:	
   738                           ; 2 bytes @ 0x3
   739                           
   740  0073                     ?__div_to_l_:	
   741                           ; 4 bytes @ 0x3
   742                           
   743  0073                     ?___lldiv:	
   744                           ; 4 bytes @ 0x3
   745                           
   746  0073                     ?___flneg:	
   747                           ; 4 bytes @ 0x3
   748                           
   749  0073                     ?___llmod:	
   750                           ; 4 bytes @ 0x3
   751                           
   752  0073                     ?___xxtofl:	
   753                           ; 4 bytes @ 0x3
   754                           
   755  0073                     spiInit@sDataSample:	
   756                           ; 4 bytes @ 0x3
   757                           
   758  0073                     spiWrite@dat:	
   759                           ; 1 bytes @ 0x3
   760                           
   761  0073                     send_char@dato:	
   762                           ; 1 bytes @ 0x3
   763                           
   764  0073                     __Umul8_16@multiplicand:	
   765                           ; 1 bytes @ 0x3
   766                           
   767  0073                     _isdigit$1082:	
   768                           ; 1 bytes @ 0x3
   769                           
   770  0073                     ___wmul@multiplier:	
   771                           ; 1 bytes @ 0x3
   772                           
   773  0073                     ___awmod@divisor:	
   774                           ; 2 bytes @ 0x3
   775                           
   776  0073                     ___lwmod@divisor:	
   777                           ; 2 bytes @ 0x3
   778                           
   779  0073                     ___lldiv@divisor:	
   780                           ; 2 bytes @ 0x3
   781                           
   782  0073                     __div_to_l_@f1:	
   783                           ; 4 bytes @ 0x3
   784                           
   785  0073                     ___fleq@ff1:	
   786                           ; 4 bytes @ 0x3
   787                           
   788  0073                     ___flge@ff1:	
   789                           ; 4 bytes @ 0x3
   790                           
   791  0073                     ___flneg@f1:	
   792                           ; 4 bytes @ 0x3
   793                           
   794  0073                     __tdiv_to_l_@f1:	
   795                           ; 4 bytes @ 0x3
   796                           
   797  0073                     ___llmod@divisor:	
   798                           ; 4 bytes @ 0x3
   799                           
   800  0073                     ___xxtofl@val:	
   801                           ; 4 bytes @ 0x3
   802                           
   803                           
   804                           ; 4 bytes @ 0x3
   805  0073                     	ds	1
   806  0074                     ??_send_crct:
   807  0074                     spiInit@sClockIdle:	
   808                           ; 1 bytes @ 0x4
   809                           
   810  0074                     isdigit@c:	
   811                           ; 1 bytes @ 0x4
   812                           
   813                           
   814                           ; 1 bytes @ 0x4
   815  0074                     	ds	1
   816  0075                     ??__Umul8_16:
   817  0075                     spiInit@sTransmitEdge:	
   818                           ; 1 bytes @ 0x5
   819                           
   820  0075                     send_crct@i:	
   821                           ; 1 bytes @ 0x5
   822                           
   823  0075                     ___wmul@multiplicand:	
   824                           ; 2 bytes @ 0x5
   825                           
   826  0075                     ___awmod@dividend:	
   827                           ; 2 bytes @ 0x5
   828                           
   829  0075                     ___lwmod@dividend:	
   830                           ; 2 bytes @ 0x5
   831                           
   832                           
   833                           ; 2 bytes @ 0x5
   834  0075                     	ds	1
   835  0076                     ??_spiInit:
   836  0076                     spiInit@sType:	
   837                           ; 1 bytes @ 0x6
   838                           
   839                           
   840                           ; 1 bytes @ 0x6
   841  0076                     	ds	1
   842  0077                     ??_setup:
   843  0077                     ??___wmul:	
   844                           ; 1 bytes @ 0x7
   845                           
   846  0077                     ??___awmod:	
   847                           ; 1 bytes @ 0x7
   848                           
   849  0077                     ??___flneg:	
   850                           ; 1 bytes @ 0x7
   851                           
   852  0077                     ??___lwmod:	
   853                           ; 1 bytes @ 0x7
   854                           
   855  0077                     ??___xxtofl:	
   856                           ; 1 bytes @ 0x7
   857                           
   858  0077                     send_crct@st:	
   859                           ; 1 bytes @ 0x7
   860                           
   861  0077                     ___wmul@product:	
   862                           ; 1 bytes @ 0x7
   863                           
   864  0077                     ___lldiv@dividend:	
   865                           ; 2 bytes @ 0x7
   866                           
   867  0077                     __div_to_l_@f2:	
   868                           ; 4 bytes @ 0x7
   869                           
   870  0077                     ___fleq@ff2:	
   871                           ; 4 bytes @ 0x7
   872                           
   873  0077                     ___flge@ff2:	
   874                           ; 4 bytes @ 0x7
   875                           
   876  0077                     __tdiv_to_l_@f2:	
   877                           ; 4 bytes @ 0x7
   878                           
   879  0077                     ___llmod@dividend:	
   880                           ; 4 bytes @ 0x7
   881                           
   882                           
   883                           ; 4 bytes @ 0x7
   884  0077                     	ds	1
   885  0078                     ___awmod@counter:
   886  0078                     ___lwmod@counter:	
   887                           ; 1 bytes @ 0x8
   888                           
   889                           
   890                           ; 1 bytes @ 0x8
   891  0078                     	ds	1
   892  0079                     ??___lwdiv:
   893  0079                     ___awmod@sign:	
   894                           ; 1 bytes @ 0x9
   895                           
   896                           
   897                           ; 1 bytes @ 0x9
   898  0079                     	ds	1
   899  007A                     ??___awdiv:
   900                           
   901                           ; 1 bytes @ 0xA
   902  007A                     	ds	1
   903  007B                     ??___flsub:
   904                           
   905                           	psect	cstackBANK0
   906  0020                     __pcstackBANK0:	
   907                           ; 1 bytes @ 0xB
   908                           
   909  0020                     ??__tdiv_to_l_:
   910  0020                     ??__div_to_l_:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0020                     ??___lldiv:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0020                     ??___fleq:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0020                     ??___flge:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0020                     ??___llmod:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0020                     ?___awdiv:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0020                     ?___lwdiv:	
   929                           ; 2 bytes @ 0x0
   930                           
   931  0020                     ___xxtofl@sign:	
   932                           ; 2 bytes @ 0x0
   933                           
   934  0020                     ___awdiv@divisor:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0020                     ___lwdiv@divisor:	
   938                           ; 2 bytes @ 0x0
   939                           
   940  0020                     __Umul8_16@product:	
   941                           ; 2 bytes @ 0x0
   942                           
   943                           
   944                           ; 2 bytes @ 0x0
   945  0020                     	ds	1
   946  0021                     ___llmod@counter:
   947  0021                     ___xxtofl@exp:	
   948                           ; 1 bytes @ 0x1
   949                           
   950  0021                     ___lldiv@quotient:	
   951                           ; 1 bytes @ 0x1
   952                           
   953  0021                     __div_to_l_@quot:	
   954                           ; 4 bytes @ 0x1
   955                           
   956                           
   957                           ; 4 bytes @ 0x1
   958  0021                     	ds	1
   959  0022                     ___awdiv@dividend:
   960  0022                     ___lwdiv@dividend:	
   961                           ; 2 bytes @ 0x2
   962                           
   963  0022                     __Umul8_16@word_mpld:	
   964                           ; 2 bytes @ 0x2
   965                           
   966  0022                     ___xxtofl@arg:	
   967                           ; 2 bytes @ 0x2
   968                           
   969                           
   970                           ; 4 bytes @ 0x2
   971  0022                     	ds	2
   972  0024                     ___awdiv@counter:
   973  0024                     __Umul8_16@multiplier:	
   974                           ; 1 bytes @ 0x4
   975                           
   976  0024                     ___lwdiv@quotient:	
   977                           ; 1 bytes @ 0x4
   978                           
   979  0024                     __tdiv_to_l_@quot:	
   980                           ; 2 bytes @ 0x4
   981                           
   982                           
   983                           ; 4 bytes @ 0x4
   984  0024                     	ds	1
   985  0025                     ___lldiv@counter:
   986  0025                     ___awdiv@sign:	
   987                           ; 1 bytes @ 0x5
   988                           
   989  0025                     __div_to_l_@cntr:	
   990                           ; 1 bytes @ 0x5
   991                           
   992                           
   993                           ; 1 bytes @ 0x5
   994  0025                     	ds	1
   995  0026                     __div_to_l_@exp1:
   996  0026                     ___lwdiv@counter:	
   997                           ; 1 bytes @ 0x6
   998                           
   999  0026                     ___awdiv@quotient:	
  1000                           ; 1 bytes @ 0x6
  1001                           
  1002                           
  1003                           ; 2 bytes @ 0x6
  1004  0026                     	ds	2
  1005  0028                     ?___flmul:
  1006  0028                     __tdiv_to_l_@cntr:	
  1007                           ; 4 bytes @ 0x8
  1008                           
  1009  0028                     ___flmul@b:	
  1010                           ; 1 bytes @ 0x8
  1011                           
  1012                           
  1013                           ; 4 bytes @ 0x8
  1014  0028                     	ds	1
  1015  0029                     __tdiv_to_l_@exp1:
  1016                           
  1017                           ; 1 bytes @ 0x9
  1018  0029                     	ds	3
  1019  002C                     ___flmul@a:
  1020                           
  1021                           ; 4 bytes @ 0xC
  1022  002C                     	ds	4
  1023  0030                     ??___flmul:
  1024                           
  1025                           ; 1 bytes @ 0x10
  1026  0030                     	ds	5
  1027  0035                     ___flmul@sign:
  1028                           
  1029                           ; 1 bytes @ 0x15
  1030  0035                     	ds	1
  1031  0036                     ___flmul@grs:
  1032                           
  1033                           ; 4 bytes @ 0x16
  1034  0036                     	ds	4
  1035  003A                     ___flmul@aexp:
  1036                           
  1037                           ; 1 bytes @ 0x1A
  1038  003A                     	ds	1
  1039  003B                     ___flmul@bexp:
  1040                           
  1041                           ; 1 bytes @ 0x1B
  1042  003B                     	ds	1
  1043  003C                     ___flmul@prod:
  1044                           
  1045                           ; 4 bytes @ 0x1C
  1046  003C                     	ds	4
  1047  0040                     ___flmul@temp:
  1048                           
  1049                           ; 2 bytes @ 0x20
  1050  0040                     	ds	2
  1051  0042                     ?_conv:
  1052  0042                     ?_fround:	
  1053                           ; 4 bytes @ 0x22
  1054                           
  1055  0042                     ?_scale:	
  1056                           ; 4 bytes @ 0x22
  1057                           
  1058                           
  1059                           ; 4 bytes @ 0x22
  1060  0042                     	ds	4
  1061  0046                     ??_conv:
  1062  0046                     ??_fround:	
  1063                           ; 1 bytes @ 0x26
  1064                           
  1065  0046                     ??_scale:	
  1066                           ; 1 bytes @ 0x26
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x26
  1070  0046                     	ds	4
  1071  004A                     conv@result:
  1072                           
  1073                           ; 4 bytes @ 0x2A
  1074  004A                     	ds	3
  1075  004D                     _fround$1263:
  1076                           
  1077                           ; 4 bytes @ 0x2D
  1078  004D                     	ds	1
  1079  004E                     conv@aa:
  1080                           
  1081                           ; 1 bytes @ 0x2E
  1082  004E                     	ds	2
  1083  0050                     _scale$1264:
  1084                           
  1085                           ; 4 bytes @ 0x30
  1086  0050                     	ds	1
  1087  0051                     _fround$1262:
  1088                           
  1089                           ; 4 bytes @ 0x31
  1090  0051                     	ds	3
  1091  0054                     scale@scl:
  1092                           
  1093                           ; 1 bytes @ 0x34
  1094  0054                     	ds	1
  1095  0055                     ?___fltol:
  1096  0055                     fround@prec:	
  1097                           ; 4 bytes @ 0x35
  1098                           
  1099  0055                     ___fltol@f1:	
  1100                           ; 1 bytes @ 0x35
  1101                           
  1102                           
  1103                           ; 4 bytes @ 0x35
  1104  0055                     	ds	1
  1105  0056                     ?___fladd:
  1106  0056                     ___fladd@b:	
  1107                           ; 4 bytes @ 0x36
  1108                           
  1109                           
  1110                           ; 4 bytes @ 0x36
  1111  0056                     	ds	3
  1112  0059                     ??___fltol:
  1113                           
  1114                           ; 1 bytes @ 0x39
  1115  0059                     	ds	1
  1116  005A                     ___fladd@a:
  1117                           
  1118                           ; 4 bytes @ 0x3A
  1119  005A                     	ds	4
  1120  005E                     ??___fladd:
  1121  005E                     ___fltol@sign1:	
  1122                           ; 1 bytes @ 0x3E
  1123                           
  1124                           
  1125                           ; 1 bytes @ 0x3E
  1126  005E                     	ds	1
  1127  005F                     ___fltol@exp1:
  1128                           
  1129                           ; 1 bytes @ 0x3F
  1130  005F                     	ds	7
  1131  0066                     ___fladd@signs:
  1132                           
  1133                           ; 1 bytes @ 0x46
  1134  0066                     	ds	1
  1135  0067                     ___fladd@aexp:
  1136                           
  1137                           ; 1 bytes @ 0x47
  1138  0067                     	ds	1
  1139  0068                     ___fladd@bexp:
  1140                           
  1141                           ; 1 bytes @ 0x48
  1142  0068                     	ds	1
  1143  0069                     ___fladd@grs:
  1144                           
  1145                           ; 1 bytes @ 0x49
  1146  0069                     	ds	1
  1147  006A                     ??_sprintf:
  1148                           
  1149                           ; 1 bytes @ 0x4A
  1150  006A                     	ds	5
  1151  006F                     ??_main:
  1152                           
  1153                           ; 1 bytes @ 0x4F
  1154  006F                     	ds	1
  1155                           
  1156                           	psect	maintext
  1157  0843                     __pmaintext:	
  1158 ;;
  1159 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1160 ;;
  1161 ;; *************** function _main *****************
  1162 ;; Defined at:
  1163 ;;		line 83 in file "main3a.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : B00/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1177 ;;      Params:         0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0
  1179 ;;      Temps:          0       1       0       0       0
  1180 ;;      Totals:         0       1       0       0       0
  1181 ;;Total ram usage:        1 bytes
  1182 ;; Hardware stack levels required when called:    5
  1183 ;; This function calls:
  1184 ;;		_cfg_clk
  1185 ;;		_cfg_inte
  1186 ;;		_cfg_usart
  1187 ;;		_conv
  1188 ;;		_send_crct
  1189 ;;		_setup
  1190 ;;		_spiRead
  1191 ;;		_spiWrite
  1192 ;;		_sprintf
  1193 ;; This function is called by:
  1194 ;;		Startup code after reset
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _main
  1200  0843                     _main:
  1201  0843                     l3365:	
  1202                           ;incstack = 0
  1203                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1204                           
  1205                           
  1206                           ;main3a.c: 84:     setup();
  1207  0843  160A  158A  2423  120A  158A  	fcall	_setup
  1208  0848                     l3367:
  1209                           
  1210                           ;main3a.c: 85:     cfg_inte();
  1211  0848  160A  158A  23A5  120A  158A  	fcall	_cfg_inte
  1212  084D                     l3369:
  1213                           
  1214                           ;main3a.c: 86:     cfg_usart();
  1215  084D  160A  158A  23F8  120A  158A  	fcall	_cfg_usart
  1216  0852                     l3371:
  1217                           
  1218                           ;main3a.c: 87:     cfg_clk();
  1219  0852  160A  158A  23B8  120A  158A  	fcall	_cfg_clk
  1220  0857                     l3373:
  1221                           
  1222                           ;main3a.c: 88:     PORTAbits.RA0 = 1;
  1223  0857  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0858  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0859  1405               	bsf	5,0	;volatile
  1226  085A                     l3375:
  1227                           
  1228                           ;main3a.c: 93:        PORTCbits.RC2 = 0;
  1229  085A  1107               	bcf	7,2	;volatile
  1230                           
  1231                           ;main3a.c: 94:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1232  085B  30C7               	movlw	199
  1233  085C  1283               	bcf	3,5	;RP0=0, select bank0
  1234  085D  1303               	bcf	3,6	;RP1=0, select bank0
  1235  085E  00EF               	movwf	??_main
  1236  085F                     u5597:
  1237  085F  2860               	nop2
  1238  0860  0BEF               	decfsz	??_main,f
  1239  0861  285F               	goto	u5597
  1240  0862  2863               	nop2
  1241  0863                     l3377:
  1242                           
  1243                           ;main3a.c: 96:        spiWrite(chng1);
  1244  0863  1683               	bsf	3,5	;RP0=1, select bank1
  1245  0864  1303               	bcf	3,6	;RP1=0, select bank1
  1246  0865  085D               	movf	_chng1^(0+128),w
  1247  0866  160A  158A  23AB  120A  158A  	fcall	_spiWrite
  1248  086B                     l3379:
  1249                           
  1250                           ;main3a.c: 98:        if(PORTAbits.RA0 == 1){
  1251  086B  1283               	bcf	3,5	;RP0=0, select bank0
  1252  086C  1303               	bcf	3,6	;RP1=0, select bank0
  1253  086D  1C05               	btfss	5,0	;volatile
  1254  086E  2870               	goto	u5571
  1255  086F  2871               	goto	u5570
  1256  0870                     u5571:
  1257  0870  2881               	goto	l130
  1258  0871                     u5570:
  1259  0871                     l3381:
  1260                           
  1261                           ;main3a.c: 99:            chng1 = spiRead();
  1262  0871  160A  158A  23C8  120A  158A  	fcall	_spiRead
  1263  0876  1283               	bcf	3,5	;RP0=0, select bank0
  1264  0877  1303               	bcf	3,6	;RP1=0, select bank0
  1265  0878  00EF               	movwf	??_main
  1266  0879  086F               	movf	??_main,w
  1267  087A  1683               	bsf	3,5	;RP0=1, select bank1
  1268  087B  1303               	bcf	3,6	;RP1=0, select bank1
  1269  087C  00DD               	movwf	_chng1^(0+128)
  1270  087D                     l3383:
  1271                           
  1272                           ;main3a.c: 100:            PORTAbits.RA0 = 0;
  1273  087D  1283               	bcf	3,5	;RP0=0, select bank0
  1274  087E  1303               	bcf	3,6	;RP1=0, select bank0
  1275  087F  1005               	bcf	5,0	;volatile
  1276                           
  1277                           ;main3a.c: 101:        }
  1278  0880  2894               	goto	l3389
  1279  0881                     l130:	
  1280                           ;main3a.c: 102:        else if(PORTAbits.RA0 == 0){
  1281                           
  1282  0881  1805               	btfsc	5,0	;volatile
  1283  0882  2884               	goto	u5581
  1284  0883  2885               	goto	u5580
  1285  0884                     u5581:
  1286  0884  2894               	goto	l3389
  1287  0885                     u5580:
  1288  0885                     l3385:
  1289                           
  1290                           ;main3a.c: 103:            chng2 = spiRead();
  1291  0885  160A  158A  23C8  120A  158A  	fcall	_spiRead
  1292  088A  1283               	bcf	3,5	;RP0=0, select bank0
  1293  088B  1303               	bcf	3,6	;RP1=0, select bank0
  1294  088C  00EF               	movwf	??_main
  1295  088D  086F               	movf	??_main,w
  1296  088E  1683               	bsf	3,5	;RP0=1, select bank1
  1297  088F  1303               	bcf	3,6	;RP1=0, select bank1
  1298  0890  00DC               	movwf	_chng2^(0+128)
  1299  0891                     l3387:
  1300                           
  1301                           ;main3a.c: 104:            PORTAbits.RA0 = 1;
  1302  0891  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0892  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0893  1405               	bsf	5,0	;volatile
  1305  0894                     l3389:
  1306                           
  1307                           ;main3a.c: 107:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1308  0894  30C7               	movlw	199
  1309  0895  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0896  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0897  00EF               	movwf	??_main
  1312  0898                     u5607:
  1313  0898  2899               	nop2
  1314  0899  0BEF               	decfsz	??_main,f
  1315  089A  2898               	goto	u5607
  1316  089B  289C               	nop2
  1317  089C                     l3391:
  1318                           
  1319                           ;main3a.c: 108:        PORTCbits.RC2 = 1;
  1320  089C  1283               	bcf	3,5	;RP0=0, select bank0
  1321  089D  1303               	bcf	3,6	;RP1=0, select bank0
  1322  089E  1507               	bsf	7,2	;volatile
  1323  089F                     l3393:
  1324                           
  1325                           ;main3a.c: 111:       v11 = conv(chng1);
  1326  089F  1683               	bsf	3,5	;RP0=1, select bank1
  1327  08A0  1303               	bcf	3,6	;RP1=0, select bank1
  1328  08A1  085D               	movf	_chng1^(0+128),w
  1329  08A2  120A  158A  2003  120A  158A  	fcall	_conv
  1330  08A7  1283               	bcf	3,5	;RP0=0, select bank0
  1331  08A8  1303               	bcf	3,6	;RP1=0, select bank0
  1332  08A9  0845               	movf	?_conv+3,w
  1333  08AA  1683               	bsf	3,5	;RP0=1, select bank1
  1334  08AB  1303               	bcf	3,6	;RP1=0, select bank1
  1335  08AC  00DB               	movwf	(_v11+3)^(0+128)
  1336  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  1337  08AE  1303               	bcf	3,6	;RP1=0, select bank0
  1338  08AF  0844               	movf	?_conv+2,w
  1339  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  1340  08B1  1303               	bcf	3,6	;RP1=0, select bank1
  1341  08B2  00DA               	movwf	(_v11+2)^(0+128)
  1342  08B3  1283               	bcf	3,5	;RP0=0, select bank0
  1343  08B4  1303               	bcf	3,6	;RP1=0, select bank0
  1344  08B5  0843               	movf	?_conv+1,w
  1345  08B6  1683               	bsf	3,5	;RP0=1, select bank1
  1346  08B7  1303               	bcf	3,6	;RP1=0, select bank1
  1347  08B8  00D9               	movwf	(_v11+1)^(0+128)
  1348  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  1349  08BA  1303               	bcf	3,6	;RP1=0, select bank0
  1350  08BB  0842               	movf	?_conv,w
  1351  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  1352  08BD  1303               	bcf	3,6	;RP1=0, select bank1
  1353  08BE  00D8               	movwf	_v11^(0+128)
  1354  08BF                     l3395:
  1355                           
  1356                           ;main3a.c: 112:       v22 = conv(chng2);
  1357  08BF  085C               	movf	_chng2^(0+128),w
  1358  08C0  120A  158A  2003  120A  158A  	fcall	_conv
  1359  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  1360  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  1361  08C7  0845               	movf	?_conv+3,w
  1362  08C8  1683               	bsf	3,5	;RP0=1, select bank1
  1363  08C9  1303               	bcf	3,6	;RP1=0, select bank1
  1364  08CA  00D7               	movwf	(_v22+3)^(0+128)
  1365  08CB  1283               	bcf	3,5	;RP0=0, select bank0
  1366  08CC  1303               	bcf	3,6	;RP1=0, select bank0
  1367  08CD  0844               	movf	?_conv+2,w
  1368  08CE  1683               	bsf	3,5	;RP0=1, select bank1
  1369  08CF  1303               	bcf	3,6	;RP1=0, select bank1
  1370  08D0  00D6               	movwf	(_v22+2)^(0+128)
  1371  08D1  1283               	bcf	3,5	;RP0=0, select bank0
  1372  08D2  1303               	bcf	3,6	;RP1=0, select bank0
  1373  08D3  0843               	movf	?_conv+1,w
  1374  08D4  1683               	bsf	3,5	;RP0=1, select bank1
  1375  08D5  1303               	bcf	3,6	;RP1=0, select bank1
  1376  08D6  00D5               	movwf	(_v22+1)^(0+128)
  1377  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  1378  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  1379  08D9  0842               	movf	?_conv,w
  1380  08DA  1683               	bsf	3,5	;RP0=1, select bank1
  1381  08DB  1303               	bcf	3,6	;RP1=0, select bank1
  1382  08DC  00D4               	movwf	_v22^(0+128)
  1383  08DD                     l3397:
  1384                           
  1385                           ;main3a.c: 113:       v33 = conv(V3);
  1386  08DD  085E               	movf	_V3^(0+128),w
  1387  08DE  120A  158A  2003  120A  158A  	fcall	_conv
  1388  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  1389  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  1390  08E5  0845               	movf	?_conv+3,w
  1391  08E6  1683               	bsf	3,5	;RP0=1, select bank1
  1392  08E7  1303               	bcf	3,6	;RP1=0, select bank1
  1393  08E8  00D3               	movwf	(_v33+3)^(0+128)
  1394  08E9  1283               	bcf	3,5	;RP0=0, select bank0
  1395  08EA  1303               	bcf	3,6	;RP1=0, select bank0
  1396  08EB  0844               	movf	?_conv+2,w
  1397  08EC  1683               	bsf	3,5	;RP0=1, select bank1
  1398  08ED  1303               	bcf	3,6	;RP1=0, select bank1
  1399  08EE  00D2               	movwf	(_v33+2)^(0+128)
  1400  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  1401  08F0  1303               	bcf	3,6	;RP1=0, select bank0
  1402  08F1  0843               	movf	?_conv+1,w
  1403  08F2  1683               	bsf	3,5	;RP0=1, select bank1
  1404  08F3  1303               	bcf	3,6	;RP1=0, select bank1
  1405  08F4  00D1               	movwf	(_v33+1)^(0+128)
  1406  08F5  1283               	bcf	3,5	;RP0=0, select bank0
  1407  08F6  1303               	bcf	3,6	;RP1=0, select bank0
  1408  08F7  0842               	movf	?_conv,w
  1409  08F8  1683               	bsf	3,5	;RP0=1, select bank1
  1410  08F9  1303               	bcf	3,6	;RP1=0, select bank1
  1411  08FA  00D0               	movwf	_v33^(0+128)
  1412  08FB                     l3399:
  1413                           
  1414                           ;main3a.c: 115:       sprintf(f1, "%3.1fV %3.2fV %3.2f",v11, v22, v33);
  1415  08FB  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1416  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  1417  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  1418  08FE  00EF               	movwf	??_main
  1419  08FF  086F               	movf	??_main,w
  1420  0900  1683               	bsf	3,5	;RP0=1, select bank1
  1421  0901  1303               	bcf	3,6	;RP1=0, select bank1
  1422  0902  00A8               	movwf	sprintf@f^(0+128)
  1423  0903  085B               	movf	(_v11+3)^(0+128),w
  1424  0904  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1425  0905  085A               	movf	(_v11+2)^(0+128),w
  1426  0906  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1427  0907  0859               	movf	(_v11+1)^(0+128),w
  1428  0908  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1429  0909  0858               	movf	_v11^(0+128),w
  1430  090A  00A9               	movwf	(?_sprintf^(0+128)+1)
  1431  090B  0857               	movf	(_v22+3)^(0+128),w
  1432  090C  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1433  090D  0856               	movf	(_v22+2)^(0+128),w
  1434  090E  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1435  090F  0855               	movf	(_v22+1)^(0+128),w
  1436  0910  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1437  0911  0854               	movf	_v22^(0+128),w
  1438  0912  00AD               	movwf	(?_sprintf^(0+128)+5)
  1439  0913  0853               	movf	(_v33+3)^(0+128),w
  1440  0914  00B4               	movwf	((?_sprintf+3)^(0+128)+9)
  1441  0915  0852               	movf	(_v33+2)^(0+128),w
  1442  0916  00B3               	movwf	((?_sprintf+2)^(0+128)+9)
  1443  0917  0851               	movf	(_v33+1)^(0+128),w
  1444  0918  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1445  0919  0850               	movf	_v33^(0+128),w
  1446  091A  00B1               	movwf	(?_sprintf^(0+128)+9)
  1447  091B  30DF               	movlw	(low (_f1| 0))& (0+255)
  1448  091C  160A  118A  24FC  120A  158A  	fcall	_sprintf
  1449  0921                     l3401:
  1450                           
  1451                           ;main3a.c: 117:       TXREG = 12;
  1452  0921  300C               	movlw	12
  1453  0922  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0923  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0924  0099               	movwf	25	;volatile
  1456                           
  1457                           ;main3a.c: 118:       send_crct(f1);
  1458  0925  30DF               	movlw	(low (_f1| 0))& (0+255)
  1459  0926  160A  158A  243C  120A  158A  	fcall	_send_crct
  1460  092B                     l3403:
  1461                           
  1462                           ;main3a.c: 120:        _delay((unsigned long)((100)*(4000000/4000000.0)));
  1463  092B  3020               	movlw	32
  1464  092C  1283               	bcf	3,5	;RP0=0, select bank0
  1465  092D  1303               	bcf	3,6	;RP1=0, select bank0
  1466  092E  00EF               	movwf	??_main
  1467  092F                     u5617:
  1468  092F  0BEF               	decfsz	??_main,f
  1469  0930  292F               	goto	u5617
  1470  0931  0000               	nop
  1471  0932                     l3405:
  1472                           
  1473                           ;main3a.c: 122:        PORTB = V3;
  1474  0932  1683               	bsf	3,5	;RP0=1, select bank1
  1475  0933  1303               	bcf	3,6	;RP1=0, select bank1
  1476  0934  085E               	movf	_V3^(0+128),w
  1477  0935  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0936  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0937  0086               	movwf	6	;volatile
  1480  0938  285A               	goto	l3375
  1481  0939  120A  118A  280C   	ljmp	start
  1482  093C                     __end_of_main:
  1483                           
  1484                           	psect	text1
  1485  14FC                     __ptext1:	
  1486 ;; *************** function _sprintf *****************
  1487 ;; Defined at:
  1488 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  sp              1    wreg     PTR unsigned char 
  1491 ;;		 -> f1(10), 
  1492 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1493 ;;		 -> STR_1(20), 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  sp              1   44[BANK1 ] PTR unsigned char 
  1496 ;;		 -> f1(10), 
  1497 ;;  fval            4   40[BANK1 ] PTR unsigned char 
  1498 ;;  tmpval          4   34[BANK1 ] struct .
  1499 ;;  val             4   26[BANK1 ] unsigned long 
  1500 ;;  prec            2   45[BANK1 ] int 
  1501 ;;  eexp            2   38[BANK1 ] int 
  1502 ;;  width           2   32[BANK1 ] int 
  1503 ;;  flag            2   30[BANK1 ] unsigned short 
  1504 ;;  cp              2    0        PTR const unsigned char 
  1505 ;;  len             2    0        unsigned int 
  1506 ;;  c               1   47[BANK1 ] unsigned char 
  1507 ;;  ap              1   25[BANK1 ] PTR void [1]
  1508 ;;		 -> ?_sprintf(2), 
  1509 ;;  d               1    0        unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  2    8[BANK1 ] int 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         0       0      13       0       0
  1520 ;;      Locals:         0       0      27       0       0
  1521 ;;      Temps:          0       5       0       0       0
  1522 ;;      Totals:         0       5      40       0       0
  1523 ;;Total ram usage:       45 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    4
  1526 ;; This function calls:
  1527 ;;		___awdiv
  1528 ;;		___fladd
  1529 ;;		___fleq
  1530 ;;		___flge
  1531 ;;		___flmul
  1532 ;;		___flneg
  1533 ;;		___flsub
  1534 ;;		___fltol
  1535 ;;		___lldiv
  1536 ;;		___llmod
  1537 ;;		___wmul
  1538 ;;		___xxtofl
  1539 ;;		__div_to_l_
  1540 ;;		__tdiv_to_l_
  1541 ;;		_fround
  1542 ;;		_isdigit
  1543 ;;		_scale
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           
  1550                           ;psect for function _sprintf
  1551  14FC                     _sprintf:
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1555                           ;sprintf@sp stored from wreg
  1556  14FC  1683               	bsf	3,5	;RP0=1, select bank1
  1557  14FD  1303               	bcf	3,6	;RP1=0, select bank1
  1558  14FE  00CC               	movwf	sprintf@sp^(0+128)
  1559  14FF                     l3081:
  1560                           
  1561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1562  14FF  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1563  1500  1283               	bcf	3,5	;RP0=0, select bank0
  1564  1501  1303               	bcf	3,6	;RP1=0, select bank0
  1565  1502  00EA               	movwf	??_sprintf
  1566  1503  086A               	movf	??_sprintf,w
  1567  1504  1683               	bsf	3,5	;RP0=1, select bank1
  1568  1505  1303               	bcf	3,6	;RP1=0, select bank1
  1569  1506  00B9               	movwf	sprintf@ap^(0+128)
  1570  1507                     L1:
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1573  1507  120A  118A  2D77   	goto	l3331
  1574  150A                     l3083:
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1577  150A  3025               	movlw	37
  1578  150B  064F               	xorwf	sprintf@c^(0+128),w
  1579  150C  1903               	btfsc	3,2
  1580  150D  2D0F               	goto	u5061
  1581  150E  2D10               	goto	u5060
  1582  150F                     u5061:
  1583  150F  2D24               	goto	l3089
  1584  1510                     u5060:
  1585  1510                     l3085:
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1588  1510  084F               	movf	sprintf@c^(0+128),w
  1589  1511  1283               	bcf	3,5	;RP0=0, select bank0
  1590  1512  1303               	bcf	3,6	;RP1=0, select bank0
  1591  1513  00EA               	movwf	??_sprintf
  1592  1514  1683               	bsf	3,5	;RP0=1, select bank1
  1593  1515  1303               	bcf	3,6	;RP1=0, select bank1
  1594  1516  084C               	movf	sprintf@sp^(0+128),w
  1595  1517  0084               	movwf	4
  1596  1518  1283               	bcf	3,5	;RP0=0, select bank0
  1597  1519  1303               	bcf	3,6	;RP1=0, select bank0
  1598  151A  086A               	movf	??_sprintf,w
  1599  151B  1383               	bcf	3,7	;select IRP bank0
  1600  151C  0080               	movwf	0
  1601  151D                     l3087:
  1602  151D  3001               	movlw	1
  1603  151E  00EA               	movwf	??_sprintf
  1604  151F  086A               	movf	??_sprintf,w
  1605  1520  1683               	bsf	3,5	;RP0=1, select bank1
  1606  1521  1303               	bcf	3,6	;RP1=0, select bank1
  1607  1522  07CC               	addwf	sprintf@sp^(0+128),f
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1610  1523  2D07               	goto	L1
  1611  1524                     l3089:
  1612                           
  1613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1614  1524  01C0               	clrf	sprintf@width^(0+128)
  1615  1525  01C1               	clrf	(sprintf@width+1)^(0+128)
  1616                           
  1617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1618  1526  01BE               	clrf	sprintf@flag^(0+128)
  1619  1527  01BF               	clrf	(sprintf@flag+1)^(0+128)
  1620  1528                     l3091:
  1621                           
  1622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1623  1528  0828               	movf	sprintf@f^(0+128),w
  1624  1529  0084               	movwf	4
  1625  152A  160A  158A  2000  160A  118A  	fcall	stringdir
  1626  152F  160A  158A  23E6  160A  118A  	fcall	_isdigit
  1627  1534  1C03               	btfss	3,0
  1628  1535  2D37               	goto	u5071
  1629  1536  2D38               	goto	u5070
  1630  1537                     u5071:
  1631  1537  2D84               	goto	l3103
  1632  1538                     u5070:
  1633  1538                     l3093:
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1636  1538  1683               	bsf	3,5	;RP0=1, select bank1
  1637  1539  1303               	bcf	3,6	;RP1=0, select bank1
  1638  153A  01C0               	clrf	sprintf@width^(0+128)
  1639  153B  01C1               	clrf	(sprintf@width+1)^(0+128)
  1640  153C                     l3095:
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1643  153C  300A               	movlw	10
  1644  153D  00F3               	movwf	___wmul@multiplier
  1645  153E  3000               	movlw	0
  1646  153F  00F4               	movwf	___wmul@multiplier+1
  1647  1540  1683               	bsf	3,5	;RP0=1, select bank1
  1648  1541  1303               	bcf	3,6	;RP1=0, select bank1
  1649  1542  0841               	movf	(sprintf@width+1)^(0+128),w
  1650  1543  00F6               	movwf	___wmul@multiplicand+1
  1651  1544  0840               	movf	sprintf@width^(0+128),w
  1652  1545  00F5               	movwf	___wmul@multiplicand
  1653  1546  160A  158A  245D  160A  118A  	fcall	___wmul
  1654  154B  0874               	movf	?___wmul+1,w
  1655  154C  1683               	bsf	3,5	;RP0=1, select bank1
  1656  154D  1303               	bcf	3,6	;RP1=0, select bank1
  1657  154E  00C1               	movwf	(sprintf@width+1)^(0+128)
  1658  154F  0873               	movf	?___wmul,w
  1659  1550  00C0               	movwf	sprintf@width^(0+128)
  1660  1551                     l3097:
  1661                           
  1662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1663  1551  0828               	movf	sprintf@f^(0+128),w
  1664  1552  0084               	movwf	4
  1665  1553  160A  158A  2000  160A  118A  	fcall	stringdir
  1666  1558  3ED0               	addlw	208
  1667  1559  1283               	bcf	3,5	;RP0=0, select bank0
  1668  155A  1303               	bcf	3,6	;RP1=0, select bank0
  1669  155B  00EA               	movwf	??_sprintf
  1670  155C  30FF               	movlw	255
  1671  155D  1803               	skipnc
  1672  155E  3000               	movlw	0
  1673  155F  00EB               	movwf	??_sprintf+1
  1674  1560  086A               	movf	??_sprintf,w
  1675  1561  1683               	bsf	3,5	;RP0=1, select bank1
  1676  1562  1303               	bcf	3,6	;RP1=0, select bank1
  1677  1563  07C0               	addwf	sprintf@width^(0+128),f
  1678  1564  1803               	skipnc
  1679  1565  0AC1               	incf	(sprintf@width+1)^(0+128),f
  1680  1566  1283               	bcf	3,5	;RP0=0, select bank0
  1681  1567  1303               	bcf	3,6	;RP1=0, select bank0
  1682  1568  086B               	movf	??_sprintf+1,w
  1683  1569  1683               	bsf	3,5	;RP0=1, select bank1
  1684  156A  1303               	bcf	3,6	;RP1=0, select bank1
  1685  156B  07C1               	addwf	(sprintf@width+1)^(0+128),f
  1686  156C                     l3099:
  1687  156C  3001               	movlw	1
  1688  156D  1283               	bcf	3,5	;RP0=0, select bank0
  1689  156E  1303               	bcf	3,6	;RP1=0, select bank0
  1690  156F  00EA               	movwf	??_sprintf
  1691  1570  086A               	movf	??_sprintf,w
  1692  1571  1683               	bsf	3,5	;RP0=1, select bank1
  1693  1572  1303               	bcf	3,6	;RP1=0, select bank1
  1694  1573  07A8               	addwf	sprintf@f^(0+128),f
  1695  1574                     l3101:
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1698  1574  0828               	movf	sprintf@f^(0+128),w
  1699  1575  0084               	movwf	4
  1700  1576  160A  158A  2000  160A  118A  	fcall	stringdir
  1701  157B  160A  158A  23E6  160A  118A  	fcall	_isdigit
  1702  1580  1803               	btfsc	3,0
  1703  1581  2D83               	goto	u5081
  1704  1582  2D84               	goto	u5080
  1705  1583                     u5081:
  1706  1583  2D3C               	goto	l3095
  1707  1584                     u5080:
  1708  1584                     l3103:
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1711  1584  1683               	bsf	3,5	;RP0=1, select bank1
  1712  1585  1303               	bcf	3,6	;RP1=0, select bank1
  1713  1586  0828               	movf	sprintf@f^(0+128),w
  1714  1587  0084               	movwf	4
  1715  1588  160A  158A  2000  160A  118A  	fcall	stringdir
  1716  158D  3A2E               	xorlw	46
  1717  158E  1D03               	skipz
  1718  158F  2D91               	goto	u5091
  1719  1590  2D92               	goto	u5090
  1720  1591                     u5091:
  1721  1591  2DE7               	goto	l3119
  1722  1592                     u5090:
  1723  1592                     l3105:
  1724                           
  1725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1726  1592  173F               	bsf	(sprintf@flag^(0+128)+1),6
  1727  1593                     l3107:
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1730  1593  3001               	movlw	1
  1731  1594  1283               	bcf	3,5	;RP0=0, select bank0
  1732  1595  1303               	bcf	3,6	;RP1=0, select bank0
  1733  1596  00EA               	movwf	??_sprintf
  1734  1597  086A               	movf	??_sprintf,w
  1735  1598  1683               	bsf	3,5	;RP0=1, select bank1
  1736  1599  1303               	bcf	3,6	;RP1=0, select bank1
  1737  159A  07A8               	addwf	sprintf@f^(0+128),f
  1738  159B                     l3109:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1741  159B  01CD               	clrf	sprintf@prec^(0+128)
  1742  159C  01CE               	clrf	(sprintf@prec+1)^(0+128)
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1745  159D  2DD6               	goto	l3117
  1746  159E                     l3111:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1749  159E  300A               	movlw	10
  1750  159F  00F3               	movwf	___wmul@multiplier
  1751  15A0  3000               	movlw	0
  1752  15A1  00F4               	movwf	___wmul@multiplier+1
  1753  15A2  1683               	bsf	3,5	;RP0=1, select bank1
  1754  15A3  1303               	bcf	3,6	;RP1=0, select bank1
  1755  15A4  084E               	movf	(sprintf@prec+1)^(0+128),w
  1756  15A5  00F6               	movwf	___wmul@multiplicand+1
  1757  15A6  084D               	movf	sprintf@prec^(0+128),w
  1758  15A7  00F5               	movwf	___wmul@multiplicand
  1759  15A8  160A  158A  245D  160A  118A  	fcall	___wmul
  1760  15AD  0874               	movf	?___wmul+1,w
  1761  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  1762  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  1763  15B0  00CE               	movwf	(sprintf@prec+1)^(0+128)
  1764  15B1  0873               	movf	?___wmul,w
  1765  15B2  00CD               	movwf	sprintf@prec^(0+128)
  1766  15B3                     l3113:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1769  15B3  0828               	movf	sprintf@f^(0+128),w
  1770  15B4  0084               	movwf	4
  1771  15B5  160A  158A  2000  160A  118A  	fcall	stringdir
  1772  15BA  3ED0               	addlw	208
  1773  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  1774  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  1775  15BD  00EA               	movwf	??_sprintf
  1776  15BE  30FF               	movlw	255
  1777  15BF  1803               	skipnc
  1778  15C0  3000               	movlw	0
  1779  15C1  00EB               	movwf	??_sprintf+1
  1780  15C2  086A               	movf	??_sprintf,w
  1781  15C3  1683               	bsf	3,5	;RP0=1, select bank1
  1782  15C4  1303               	bcf	3,6	;RP1=0, select bank1
  1783  15C5  07CD               	addwf	sprintf@prec^(0+128),f
  1784  15C6  1803               	skipnc
  1785  15C7  0ACE               	incf	(sprintf@prec+1)^(0+128),f
  1786  15C8  1283               	bcf	3,5	;RP0=0, select bank0
  1787  15C9  1303               	bcf	3,6	;RP1=0, select bank0
  1788  15CA  086B               	movf	??_sprintf+1,w
  1789  15CB  1683               	bsf	3,5	;RP0=1, select bank1
  1790  15CC  1303               	bcf	3,6	;RP1=0, select bank1
  1791  15CD  07CE               	addwf	(sprintf@prec+1)^(0+128),f
  1792  15CE                     l3115:
  1793  15CE  3001               	movlw	1
  1794  15CF  1283               	bcf	3,5	;RP0=0, select bank0
  1795  15D0  1303               	bcf	3,6	;RP1=0, select bank0
  1796  15D1  00EA               	movwf	??_sprintf
  1797  15D2  086A               	movf	??_sprintf,w
  1798  15D3  1683               	bsf	3,5	;RP0=1, select bank1
  1799  15D4  1303               	bcf	3,6	;RP1=0, select bank1
  1800  15D5  07A8               	addwf	sprintf@f^(0+128),f
  1801  15D6                     l3117:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1804  15D6  0828               	movf	sprintf@f^(0+128),w
  1805  15D7  0084               	movwf	4
  1806  15D8  160A  158A  2000  160A  118A  	fcall	stringdir
  1807  15DD  160A  158A  23E6  160A  118A  	fcall	_isdigit
  1808  15E2  1803               	btfsc	3,0
  1809  15E3  2DE5               	goto	u5101
  1810  15E4  2DE6               	goto	u5100
  1811  15E5                     u5101:
  1812  15E5  2D9E               	goto	l3111
  1813  15E6                     u5100:
  1814  15E6  2DEF               	goto	l3125
  1815  15E7                     l3119:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1818  15E7  01CD               	clrf	sprintf@prec^(0+128)
  1819  15E8  01CE               	clrf	(sprintf@prec+1)^(0+128)
  1820  15E9                     l3121:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1823  15E9  163F               	bsf	(sprintf@flag^(0+128)+1),4
  1824  15EA  2DEF               	goto	l3125
  1825  15EB                     l293:	
  1826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1827                           
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1830  15EB  1683               	bsf	3,5	;RP0=1, select bank1
  1831  15EC  1303               	bcf	3,6	;RP1=0, select bank1
  1832  15ED  153F               	bsf	(sprintf@flag^(0+128)+1),2
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1835  15EE  2E0D               	goto	l3127
  1836  15EF                     l3125:
  1837  15EF  3001               	movlw	1
  1838  15F0  1683               	bsf	3,5	;RP0=1, select bank1
  1839  15F1  1303               	bcf	3,6	;RP1=0, select bank1
  1840  15F2  07A8               	addwf	sprintf@f^(0+128),f
  1841  15F3  30FF               	movlw	-1
  1842  15F4  0728               	addwf	sprintf@f^(0+128),w
  1843  15F5  0084               	movwf	4
  1844  15F6  160A  158A  2000  160A  118A  	fcall	stringdir
  1845  15FB  00CF               	movwf	sprintf@c^(0+128)
  1846  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  1847  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  1848  15FE  00EA               	movwf	??_sprintf
  1849  15FF  01EB               	clrf	??_sprintf+1
  1850                           
  1851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1852                           ; Switch size 1, requested type "simple"
  1853                           ; Number of cases is 1, Range of values is 0 to 0
  1854                           ; switch strategies available:
  1855                           ; Name         Instructions Cycles
  1856                           ; simple_byte            4     3 (average)
  1857                           ; direct_byte           11     8 (fixed)
  1858                           ; jumptable            260     6 (fixed)
  1859                           ;	Chosen strategy is simple_byte
  1860  1600  086B               	movf	??_sprintf+1,w
  1861  1601  3A00               	xorlw	0	; case 0
  1862  1602  1903               	skipnz
  1863  1603  2E05               	goto	l3437
  1864  1604  2D07               	goto	L1
  1865  1605                     l3437:
  1866                           
  1867                           ; Switch size 1, requested type "simple"
  1868                           ; Number of cases is 2, Range of values is 0 to 102
  1869                           ; switch strategies available:
  1870                           ; Name         Instructions Cycles
  1871                           ; simple_byte            7     4 (average)
  1872                           ; jumptable            260     6 (fixed)
  1873                           ;	Chosen strategy is simple_byte
  1874  1605  086A               	movf	??_sprintf,w
  1875  1606  3A00               	xorlw	0	; case 0
  1876  1607  1903               	skipnz
  1877  1608  2FFD               	goto	L3
  1878  1609  3A66               	xorlw	102	; case 102
  1879  160A  1903               	skipnz
  1880  160B  2DEB               	goto	l293
  1881  160C  2D07               	goto	L1
  1882  160D                     l3127:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1885  160D  3000               	movlw	0
  1886  160E  053E               	andwf	sprintf@flag^(0+128),w
  1887  160F  1283               	bcf	3,5	;RP0=0, select bank0
  1888  1610  1303               	bcf	3,6	;RP1=0, select bank0
  1889  1611  00EA               	movwf	??_sprintf
  1890  1612  3007               	movlw	7
  1891  1613  1683               	bsf	3,5	;RP0=1, select bank1
  1892  1614  1303               	bcf	3,6	;RP1=0, select bank1
  1893  1615  053F               	andwf	(sprintf@flag+1)^(0+128),w
  1894  1616  1283               	bcf	3,5	;RP0=0, select bank0
  1895  1617  1303               	bcf	3,6	;RP1=0, select bank0
  1896  1618  00EB               	movwf	??_sprintf+1
  1897  1619  086A               	movf	??_sprintf,w
  1898  161A  046B               	iorwf	??_sprintf+1,w
  1899  161B  1903               	btfsc	3,2
  1900  161C  2E1E               	goto	u5111
  1901  161D  2E21               	goto	u5110
  1902  161E                     u5111:
  1903  161E  120A  118A  2C74   	goto	l3285
  1904  1621                     u5110:
  1905  1621                     l3129:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1908  1621  1683               	bsf	3,5	;RP0=1, select bank1
  1909  1622  1303               	bcf	3,6	;RP1=0, select bank1
  1910  1623  1E3F               	btfss	(sprintf@flag+1)^(0+128),4
  1911  1624  2E26               	goto	u5121
  1912  1625  2E27               	goto	u5120
  1913  1626                     u5121:
  1914  1626  2E2B               	goto	l3133
  1915  1627                     u5120:
  1916  1627                     l3131:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1919  1627  3006               	movlw	6
  1920  1628  00CD               	movwf	sprintf@prec^(0+128)
  1921  1629  3000               	movlw	0
  1922  162A  00CE               	movwf	(sprintf@prec^(0+128)+1)
  1923  162B                     l3133:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1926  162B  0839               	movf	sprintf@ap^(0+128),w
  1927  162C  0084               	movwf	4
  1928  162D  1383               	bcf	3,7	;select IRP bank0
  1929  162E  0800               	movf	0,w
  1930  162F  00C8               	movwf	sprintf@fval^(0+128)
  1931  1630  0A84               	incf	4,f
  1932  1631  0800               	movf	0,w
  1933  1632  00C9               	movwf	(sprintf@fval+1)^(0+128)
  1934  1633  0A84               	incf	4,f
  1935  1634  0800               	movf	0,w
  1936  1635  00CA               	movwf	(sprintf@fval+2)^(0+128)
  1937  1636  0A84               	incf	4,f
  1938  1637  0800               	movf	0,w
  1939  1638  00CB               	movwf	(sprintf@fval+3)^(0+128)
  1940  1639                     l3135:
  1941  1639  3004               	movlw	4
  1942  163A  1283               	bcf	3,5	;RP0=0, select bank0
  1943  163B  1303               	bcf	3,6	;RP1=0, select bank0
  1944  163C  00EA               	movwf	??_sprintf
  1945  163D  086A               	movf	??_sprintf,w
  1946  163E  1683               	bsf	3,5	;RP0=1, select bank1
  1947  163F  1303               	bcf	3,6	;RP1=0, select bank1
  1948  1640  07B9               	addwf	sprintf@ap^(0+128),f
  1949  1641                     l3137:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1952  1641  084B               	movf	(sprintf@fval+3)^(0+128),w
  1953  1642  00F6               	movwf	___flge@ff1+3
  1954  1643  084A               	movf	(sprintf@fval+2)^(0+128),w
  1955  1644  00F5               	movwf	___flge@ff1+2
  1956  1645  0849               	movf	(sprintf@fval+1)^(0+128),w
  1957  1646  00F4               	movwf	___flge@ff1+1
  1958  1647  0848               	movf	sprintf@fval^(0+128),w
  1959  1648  00F3               	movwf	___flge@ff1
  1960  1649  3000               	movlw	0
  1961  164A  00FA               	movwf	___flge@ff2+3
  1962  164B  3000               	movlw	0
  1963  164C  00F9               	movwf	___flge@ff2+2
  1964  164D  3000               	movlw	0
  1965  164E  00F8               	movwf	___flge@ff2+1
  1966  164F  3000               	movlw	0
  1967  1650  00F7               	movwf	___flge@ff2
  1968  1651  160A  158A  275C  160A  118A  	fcall	___flge
  1969  1656  1803               	btfsc	3,0
  1970  1657  2E59               	goto	u5131
  1971  1658  2E5A               	goto	u5130
  1972  1659                     u5131:
  1973  1659  2E77               	goto	l3143
  1974  165A                     u5130:
  1975  165A                     l3139:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1978  165A  1683               	bsf	3,5	;RP0=1, select bank1
  1979  165B  1303               	bcf	3,6	;RP1=0, select bank1
  1980  165C  084B               	movf	(sprintf@fval+3)^(0+128),w
  1981  165D  00F6               	movwf	___flneg@f1+3
  1982  165E  084A               	movf	(sprintf@fval+2)^(0+128),w
  1983  165F  00F5               	movwf	___flneg@f1+2
  1984  1660  0849               	movf	(sprintf@fval+1)^(0+128),w
  1985  1661  00F4               	movwf	___flneg@f1+1
  1986  1662  0848               	movf	sprintf@fval^(0+128),w
  1987  1663  00F3               	movwf	___flneg@f1
  1988  1664  160A  158A  23DB  160A  118A  	fcall	___flneg
  1989  1669  0876               	movf	?___flneg+3,w
  1990  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1991  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1992  166C  00CB               	movwf	(sprintf@fval+3)^(0+128)
  1993  166D  0875               	movf	?___flneg+2,w
  1994  166E  00CA               	movwf	(sprintf@fval+2)^(0+128)
  1995  166F  0874               	movf	?___flneg+1,w
  1996  1670  00C9               	movwf	(sprintf@fval+1)^(0+128)
  1997  1671  0873               	movf	?___flneg,w
  1998  1672  00C8               	movwf	sprintf@fval^(0+128)
  1999  1673                     l3141:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2002  1673  3003               	movlw	3
  2003  1674  04BE               	iorwf	sprintf@flag^(0+128),f
  2004  1675  3000               	movlw	0
  2005  1676  04BF               	iorwf	(sprintf@flag+1)^(0+128),f
  2006  1677                     l3143:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2009  1677  1683               	bsf	3,5	;RP0=1, select bank1
  2010  1678  1303               	bcf	3,6	;RP1=0, select bank1
  2011  1679  01C6               	clrf	sprintf@eexp^(0+128)
  2012  167A  01C7               	clrf	(sprintf@eexp+1)^(0+128)
  2013  167B                     l3145:
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2016  167B  084B               	movf	(sprintf@fval+3)^(0+128),w
  2017  167C  00F6               	movwf	___fleq@ff1+3
  2018  167D  084A               	movf	(sprintf@fval+2)^(0+128),w
  2019  167E  00F5               	movwf	___fleq@ff1+2
  2020  167F  0849               	movf	(sprintf@fval+1)^(0+128),w
  2021  1680  00F4               	movwf	___fleq@ff1+1
  2022  1681  0848               	movf	sprintf@fval^(0+128),w
  2023  1682  00F3               	movwf	___fleq@ff1
  2024  1683  3000               	movlw	0
  2025  1684  00FA               	movwf	___fleq@ff2+3
  2026  1685  3000               	movlw	0
  2027  1686  00F9               	movwf	___fleq@ff2+2
  2028  1687  3000               	movlw	0
  2029  1688  00F8               	movwf	___fleq@ff2+1
  2030  1689  3000               	movlw	0
  2031  168A  00F7               	movwf	___fleq@ff2
  2032  168B  160A  158A  2519  160A  118A  	fcall	___fleq
  2033  1690  1803               	btfsc	3,0
  2034  1691  2E93               	goto	u5141
  2035  1692  2E94               	goto	u5140
  2036  1693                     u5141:
  2037  1693  2F94               	goto	l3171
  2038  1694                     u5140:
  2039  1694                     l3147:
  2040                           
  2041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2042  1694  1003               	clrc
  2043  1695  1683               	bsf	3,5	;RP0=1, select bank1
  2044  1696  1303               	bcf	3,6	;RP1=0, select bank1
  2045  1697  0D4A               	rlf	(sprintf@fval+2)^(0+128),w
  2046  1698  0D4B               	rlf	(sprintf@fval+3)^(0+128),w
  2047  1699  3E82               	addlw	130
  2048  169A  00C6               	movwf	sprintf@eexp^(0+128)
  2049  169B  30FF               	movlw	255
  2050  169C  1803               	skipnc
  2051  169D  3000               	movlw	0
  2052  169E  00C7               	movwf	(sprintf@eexp^(0+128)+1)
  2053  169F                     l3149:
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2056  169F  30FF               	movlw	255
  2057  16A0  07C6               	addwf	sprintf@eexp^(0+128),f
  2058  16A1  1803               	skipnc
  2059  16A2  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2060  16A3  30FF               	movlw	255
  2061  16A4  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2062  16A5                     l3151:
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2065  16A5  3003               	movlw	3
  2066  16A6  00F3               	movwf	___wmul@multiplier
  2067  16A7  3000               	movlw	0
  2068  16A8  00F4               	movwf	___wmul@multiplier+1
  2069  16A9  0847               	movf	(sprintf@eexp+1)^(0+128),w
  2070  16AA  00F6               	movwf	___wmul@multiplicand+1
  2071  16AB  0846               	movf	sprintf@eexp^(0+128),w
  2072  16AC  00F5               	movwf	___wmul@multiplicand
  2073  16AD  160A  158A  245D  160A  118A  	fcall	___wmul
  2074  16B2  0874               	movf	?___wmul+1,w
  2075  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  2076  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  2077  16B5  00C7               	movwf	(sprintf@eexp+1)^(0+128)
  2078  16B6  0873               	movf	?___wmul,w
  2079  16B7  00C6               	movwf	sprintf@eexp^(0+128)
  2080  16B8                     l3153:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2083  16B8  300A               	movlw	10
  2084  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2085  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2086  16BB  00A0               	movwf	___awdiv@divisor
  2087  16BC  3000               	movlw	0
  2088  16BD  00A1               	movwf	___awdiv@divisor+1
  2089  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  2090  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  2091  16C0  0847               	movf	(sprintf@eexp+1)^(0+128),w
  2092  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  2093  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  2094  16C3  00A3               	movwf	___awdiv@dividend+1
  2095  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  2096  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  2097  16C6  0846               	movf	sprintf@eexp^(0+128),w
  2098  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2099  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2100  16C9  00A2               	movwf	___awdiv@dividend
  2101  16CA  160A  158A  2677  160A  118A  	fcall	___awdiv
  2102  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2103  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  2104  16D1  0821               	movf	?___awdiv+1,w
  2105  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  2106  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  2107  16D4  00C7               	movwf	(sprintf@eexp+1)^(0+128)
  2108  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  2109  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  2110  16D7  0820               	movf	?___awdiv,w
  2111  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  2112  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  2113  16DA  00C6               	movwf	sprintf@eexp^(0+128)
  2114  16DB                     l3155:
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2117  16DB  1FC7               	btfss	(sprintf@eexp+1)^(0+128),7
  2118  16DC  2EDE               	goto	u5151
  2119  16DD  2EDF               	goto	u5150
  2120  16DE                     u5151:
  2121  16DE  2EE5               	goto	l3159
  2122  16DF                     u5150:
  2123  16DF                     l3157:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2126  16DF  30FF               	movlw	255
  2127  16E0  07C6               	addwf	sprintf@eexp^(0+128),f
  2128  16E1  1803               	skipnc
  2129  16E2  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2130  16E3  30FF               	movlw	255
  2131  16E4  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2132  16E5                     l3159:
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2135  16E5  0346               	decf	sprintf@eexp^(0+128),w
  2136  16E6  3AFF               	xorlw	255
  2137  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  2138  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2139  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2140  16EE  0845               	movf	?_scale+3,w
  2141  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2142  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2143  16F1  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  2144  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2145  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2146  16F4  0844               	movf	?_scale+2,w
  2147  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2148  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2149  16F7  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  2150  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2151  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2152  16FA  0843               	movf	?_scale+1,w
  2153  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2154  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2155  16FD  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  2156  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2157  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2158  1700  0842               	movf	?_scale,w
  2159  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2160  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2161  1703  00C2               	movwf	sprintf@tmpval^(0+128)
  2162  1704                     l3161:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2165  1704  084B               	movf	(sprintf@fval+3)^(0+128),w
  2166  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2167  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2168  1707  00AB               	movwf	___flmul@b+3
  2169  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2170  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2171  170A  084A               	movf	(sprintf@fval+2)^(0+128),w
  2172  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2173  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2174  170D  00AA               	movwf	___flmul@b+2
  2175  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2176  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2177  1710  0849               	movf	(sprintf@fval+1)^(0+128),w
  2178  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2179  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2180  1713  00A9               	movwf	___flmul@b+1
  2181  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2182  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2183  1716  0848               	movf	sprintf@fval^(0+128),w
  2184  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2185  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2186  1719  00A8               	movwf	___flmul@b
  2187  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2188  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2189  171C  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  2190  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2191  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2192  171F  00AF               	movwf	___flmul@a+3
  2193  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2194  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2195  1722  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2196  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2197  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2198  1725  00AE               	movwf	___flmul@a+2
  2199  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2200  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2201  1728  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2202  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2203  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2204  172B  00AD               	movwf	___flmul@a+1
  2205  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2206  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2207  172E  0842               	movf	sprintf@tmpval^(0+128),w
  2208  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2209  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2210  1731  00AC               	movwf	___flmul@a
  2211  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2212  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2213  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2214  1739  082B               	movf	?___flmul+3,w
  2215  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2216  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2217  173C  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  2218  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2219  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2220  173F  082A               	movf	?___flmul+2,w
  2221  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2222  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2223  1742  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  2224  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2225  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2226  1745  0829               	movf	?___flmul+1,w
  2227  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2228  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2229  1748  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  2230  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2231  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2232  174B  0828               	movf	?___flmul,w
  2233  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2234  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2235  174E  00C2               	movwf	sprintf@tmpval^(0+128)
  2236  174F                     l3163:
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2239  174F  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  2240  1750  00F6               	movwf	___flge@ff1+3
  2241  1751  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2242  1752  00F5               	movwf	___flge@ff1+2
  2243  1753  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2244  1754  00F4               	movwf	___flge@ff1+1
  2245  1755  0842               	movf	sprintf@tmpval^(0+128),w
  2246  1756  00F3               	movwf	___flge@ff1
  2247  1757  303F               	movlw	63
  2248  1758  00FA               	movwf	___flge@ff2+3
  2249  1759  3080               	movlw	128
  2250  175A  00F9               	movwf	___flge@ff2+2
  2251  175B  3000               	movlw	0
  2252  175C  00F8               	movwf	___flge@ff2+1
  2253  175D  3000               	movlw	0
  2254  175E  00F7               	movwf	___flge@ff2
  2255  175F  160A  158A  275C  160A  118A  	fcall	___flge
  2256  1764  1803               	btfsc	3,0
  2257  1765  2F67               	goto	u5161
  2258  1766  2F68               	goto	u5160
  2259  1767                     u5161:
  2260  1767  2F71               	goto	l3167
  2261  1768                     u5160:
  2262  1768                     l3165:
  2263                           
  2264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2265  1768  30FF               	movlw	255
  2266  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2267  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2268  176B  07C6               	addwf	sprintf@eexp^(0+128),f
  2269  176C  1803               	skipnc
  2270  176D  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2271  176E  30FF               	movlw	255
  2272  176F  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2273  1770  2F94               	goto	l3171
  2274  1771                     l3167:
  2275  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2276  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2277  1773  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  2278  1774  00F6               	movwf	___flge@ff1+3
  2279  1775  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2280  1776  00F5               	movwf	___flge@ff1+2
  2281  1777  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2282  1778  00F4               	movwf	___flge@ff1+1
  2283  1779  0842               	movf	sprintf@tmpval^(0+128),w
  2284  177A  00F3               	movwf	___flge@ff1
  2285  177B  3041               	movlw	65
  2286  177C  00FA               	movwf	___flge@ff2+3
  2287  177D  3020               	movlw	32
  2288  177E  00F9               	movwf	___flge@ff2+2
  2289  177F  3000               	movlw	0
  2290  1780  00F8               	movwf	___flge@ff2+1
  2291  1781  3000               	movlw	0
  2292  1782  00F7               	movwf	___flge@ff2
  2293  1783  160A  158A  275C  160A  118A  	fcall	___flge
  2294  1788  1C03               	btfss	3,0
  2295  1789  2F8B               	goto	u5171
  2296  178A  2F8C               	goto	u5170
  2297  178B                     u5171:
  2298  178B  2F94               	goto	l3171
  2299  178C                     u5170:
  2300  178C                     l3169:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2303  178C  3001               	movlw	1
  2304  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2305  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2306  178F  07C6               	addwf	sprintf@eexp^(0+128),f
  2307  1790  1803               	skipnc
  2308  1791  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2309  1792  3000               	movlw	0
  2310  1793  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2311  1794                     l3171:
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2314  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2315  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2316  1796  084E               	movf	(sprintf@prec+1)^(0+128),w
  2317  1797  3A80               	xorlw	128
  2318  1798  00FF               	movwf	btemp+1
  2319  1799  3080               	movlw	128
  2320  179A  027F               	subwf	btemp+1,w
  2321  179B  1D03               	skipz
  2322  179C  2F9F               	goto	u5185
  2323  179D  300D               	movlw	13
  2324  179E  024D               	subwf	sprintf@prec^(0+128),w
  2325  179F                     u5185:
  2326  179F  1803               	skipnc
  2327  17A0  2FA2               	goto	u5181
  2328  17A1  2FA3               	goto	u5180
  2329  17A2                     u5181:
  2330  17A2  2FEA               	goto	l3175
  2331  17A3                     u5180:
  2332  17A3                     l3173:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2335  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2336  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2337  17A5  084D               	movf	sprintf@prec^(0+128),w
  2338  17A6  120A  118A  2598  160A  118A  	fcall	_fround
  2339  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2340  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2341  17AD  0845               	movf	?_fround+3,w
  2342  17AE  00D9               	movwf	___fladd@b+3
  2343  17AF  0844               	movf	?_fround+2,w
  2344  17B0  00D8               	movwf	___fladd@b+2
  2345  17B1  0843               	movf	?_fround+1,w
  2346  17B2  00D7               	movwf	___fladd@b+1
  2347  17B3  0842               	movf	?_fround,w
  2348  17B4  00D6               	movwf	___fladd@b
  2349  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2350  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2351  17B7  084B               	movf	(sprintf@fval+3)^(0+128),w
  2352  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2353  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2354  17BA  00DD               	movwf	___fladd@a+3
  2355  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2356  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2357  17BD  084A               	movf	(sprintf@fval+2)^(0+128),w
  2358  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2359  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2360  17C0  00DC               	movwf	___fladd@a+2
  2361  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2362  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2363  17C3  0849               	movf	(sprintf@fval+1)^(0+128),w
  2364  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2365  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2366  17C6  00DB               	movwf	___fladd@a+1
  2367  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2368  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2369  17C9  0848               	movf	sprintf@fval^(0+128),w
  2370  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2371  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2372  17CC  00DA               	movwf	___fladd@a
  2373  17CD  160A  118A  2274  160A  118A  	fcall	___fladd
  2374  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2375  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2376  17D4  0859               	movf	?___fladd+3,w
  2377  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2378  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2379  17D7  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2380  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2381  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2382  17DA  0858               	movf	?___fladd+2,w
  2383  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2384  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2385  17DD  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2386  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2387  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2388  17E0  0857               	movf	?___fladd+1,w
  2389  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2390  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2391  17E3  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2392  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2393  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2394  17E6  0856               	movf	?___fladd,w
  2395  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2396  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2397  17E9  00C8               	movwf	sprintf@fval^(0+128)
  2398  17EA                     l3175:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2401  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2402  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2403  17EC  0847               	movf	(sprintf@eexp+1)^(0+128),w
  2404  17ED  3A80               	xorlw	128
  2405  17EE  00FF               	movwf	btemp+1
  2406  17EF  3080               	movlw	128
  2407  17F0  027F               	subwf	btemp+1,w
  2408  17F1  1D03               	skipz
  2409  17F2  2FF5               	goto	u5195
  2410  17F3  300A               	movlw	10
  2411  17F4  0246               	subwf	sprintf@eexp^(0+128),w
  2412  17F5                     u5195:
  2413  17F5  1803               	skipnc
  2414  17F6  2FFA               	goto	u5191
  2415  17F7  120A  118A  281C   	goto	u5190
  2416  17FA                     u5191:
  2417  17FA  120A  118A  286D   	goto	l3183
  2418  17FD                     L3:
  2419  17FD                     L2:
  2420  17FD  120A  118A  2D91   	ljmp	l3333
  2421                           
  2422                           	psect	text2
  2423  0C9D                     __ptext2:	
  2424 ;; *************** function _scale *****************
  2425 ;; Defined at:
  2426 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  scl             1    wreg     char 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  scl             1   52[BANK0 ] char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  4   34[BANK0 ] char 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2440 ;;      Params:         0       4       0       0       0
  2441 ;;      Locals:         0       5       0       0       0
  2442 ;;      Temps:          0      10       0       0       0
  2443 ;;      Totals:         0      19       0       0       0
  2444 ;;Total ram usage:       19 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    3
  2447 ;; This function calls:
  2448 ;;		___awdiv
  2449 ;;		___awmod
  2450 ;;		___flmul
  2451 ;; This function is called by:
  2452 ;;		_sprintf
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _scale
  2458  0C9D                     _scale:
  2459                           
  2460                           ;incstack = 0
  2461                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2462                           ;scale@scl stored from wreg
  2463  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0C9F  00D4               	movwf	scale@scl
  2466  0CA0                     l2697:
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2469  0CA0  1FD4               	btfss	scale@scl,7
  2470  0CA1  2CA3               	goto	u4091
  2471  0CA2  2CA4               	goto	u4090
  2472  0CA3                     u4091:
  2473  0CA3  2E53               	goto	l2719
  2474  0CA4                     u4090:
  2475  0CA4                     l2699:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2478  0CA4  09D4               	comf	scale@scl,f
  2479  0CA5  0AD4               	incf	scale@scl,f
  2480  0CA6                     l2701:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2483  0CA6  0854               	movf	scale@scl,w
  2484  0CA7  3A80               	xorlw	128
  2485  0CA8  3E12               	addlw	-238
  2486  0CA9  1C03               	skipc
  2487  0CAA  2CAC               	goto	u4101
  2488  0CAB  2CAD               	goto	u4100
  2489  0CAC                     u4101:
  2490  0CAC  2D97               	goto	l2709
  2491  0CAD                     u4100:
  2492  0CAD                     l2703:
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2495  0CAD  300A               	movlw	10
  2496  0CAE  00A0               	movwf	___awdiv@divisor
  2497  0CAF  3000               	movlw	0
  2498  0CB0  00A1               	movwf	___awdiv@divisor+1
  2499  0CB1  0854               	movf	scale@scl,w
  2500  0CB2  00F5               	movwf	___awmod@dividend
  2501  0CB3  01F6               	clrf	___awmod@dividend+1
  2502  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2503  0CB5  03F6               	decf	___awmod@dividend+1,f
  2504  0CB6  3064               	movlw	100
  2505  0CB7  00F3               	movwf	___awmod@divisor
  2506  0CB8  3000               	movlw	0
  2507  0CB9  00F4               	movwf	___awmod@divisor+1
  2508  0CBA  120A  118A  27A5  120A  158A  	fcall	___awmod
  2509  0CBF  0874               	movf	?___awmod+1,w
  2510  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2512  0CC2  00A3               	movwf	___awdiv@dividend+1
  2513  0CC3  0873               	movf	?___awmod,w
  2514  0CC4  00A2               	movwf	___awdiv@dividend
  2515  0CC5  160A  158A  2677  120A  158A  	fcall	___awdiv
  2516  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0CCC  0820               	movf	?___awdiv,w
  2519  0CCD  00C6               	movwf	??_scale
  2520  0CCE  3001               	movlw	1
  2521  0CCF                     u4115:
  2522  0CCF  1003               	clrc
  2523  0CD0  0DC6               	rlf	??_scale,f
  2524  0CD1  3EFF               	addlw	-1
  2525  0CD2  1D03               	skipz
  2526  0CD3  2CCF               	goto	u4115
  2527  0CD4  1003               	clrc
  2528  0CD5  0D46               	rlf	??_scale,w
  2529  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2530  0CD7  0084               	movwf	4
  2531  0CD8  160A  158A  2000  120A  158A  	fcall	stringdir
  2532  0CDD  00C7               	movwf	??_scale+1
  2533  0CDE  160A  158A  2000  120A  158A  	fcall	stringdir
  2534  0CE3  00C8               	movwf	??_scale+2
  2535  0CE4  160A  158A  2000  120A  158A  	fcall	stringdir
  2536  0CE9  00C9               	movwf	??_scale+3
  2537  0CEA  160A  158A  2000  120A  158A  	fcall	stringdir
  2538  0CEF  00CA               	movwf	??_scale+4
  2539  0CF0  084A               	movf	??_scale+4,w
  2540  0CF1  00AB               	movwf	___flmul@b+3
  2541  0CF2  0849               	movf	??_scale+3,w
  2542  0CF3  00AA               	movwf	___flmul@b+2
  2543  0CF4  0848               	movf	??_scale+2,w
  2544  0CF5  00A9               	movwf	___flmul@b+1
  2545  0CF6  0847               	movf	??_scale+1,w
  2546  0CF7  00A8               	movwf	___flmul@b
  2547  0CF8  3064               	movlw	100
  2548  0CF9  00A0               	movwf	___awdiv@divisor
  2549  0CFA  3000               	movlw	0
  2550  0CFB  00A1               	movwf	___awdiv@divisor+1
  2551  0CFC  0854               	movf	scale@scl,w
  2552  0CFD  00A2               	movwf	___awdiv@dividend
  2553  0CFE  01A3               	clrf	___awdiv@dividend+1
  2554  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2555  0D00  03A3               	decf	___awdiv@dividend+1,f
  2556  0D01  160A  158A  2677  120A  158A  	fcall	___awdiv
  2557  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0D08  0820               	movf	?___awdiv,w
  2560  0D09  00CB               	movwf	??_scale+5
  2561  0D0A  3001               	movlw	1
  2562  0D0B                     u4125:
  2563  0D0B  1003               	clrc
  2564  0D0C  0DCB               	rlf	??_scale+5,f
  2565  0D0D  3EFF               	addlw	-1
  2566  0D0E  1D03               	skipz
  2567  0D0F  2D0B               	goto	u4125
  2568  0D10  1003               	clrc
  2569  0D11  0D4B               	rlf	??_scale+5,w
  2570  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2571  0D13  0084               	movwf	4
  2572  0D14  160A  158A  2000  120A  158A  	fcall	stringdir
  2573  0D19  00CC               	movwf	??_scale+6
  2574  0D1A  160A  158A  2000  120A  158A  	fcall	stringdir
  2575  0D1F  00CD               	movwf	??_scale+7
  2576  0D20  160A  158A  2000  120A  158A  	fcall	stringdir
  2577  0D25  00CE               	movwf	??_scale+8
  2578  0D26  160A  158A  2000  120A  158A  	fcall	stringdir
  2579  0D2B  00CF               	movwf	??_scale+9
  2580  0D2C  084F               	movf	??_scale+9,w
  2581  0D2D  00AF               	movwf	___flmul@a+3
  2582  0D2E  084E               	movf	??_scale+8,w
  2583  0D2F  00AE               	movwf	___flmul@a+2
  2584  0D30  084D               	movf	??_scale+7,w
  2585  0D31  00AD               	movwf	___flmul@a+1
  2586  0D32  084C               	movf	??_scale+6,w
  2587  0D33  00AC               	movwf	___flmul@a
  2588  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2589  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0D3B  082B               	movf	?___flmul+3,w
  2592  0D3C  00D3               	movwf	_scale$1264+3
  2593  0D3D  082A               	movf	?___flmul+2,w
  2594  0D3E  00D2               	movwf	_scale$1264+2
  2595  0D3F  0829               	movf	?___flmul+1,w
  2596  0D40  00D1               	movwf	_scale$1264+1
  2597  0D41  0828               	movf	?___flmul,w
  2598  0D42  00D0               	movwf	_scale$1264
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2601  0D43  300A               	movlw	10
  2602  0D44  00F3               	movwf	___awmod@divisor
  2603  0D45  3000               	movlw	0
  2604  0D46  00F4               	movwf	___awmod@divisor+1
  2605  0D47  0854               	movf	scale@scl,w
  2606  0D48  00F5               	movwf	___awmod@dividend
  2607  0D49  01F6               	clrf	___awmod@dividend+1
  2608  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2609  0D4B  03F6               	decf	___awmod@dividend+1,f
  2610  0D4C  120A  118A  27A5  120A  158A  	fcall	___awmod
  2611  0D51  0873               	movf	?___awmod,w
  2612  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2613  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2614  0D54  00C6               	movwf	??_scale
  2615  0D55  3001               	movlw	1
  2616  0D56                     u4135:
  2617  0D56  1003               	clrc
  2618  0D57  0DC6               	rlf	??_scale,f
  2619  0D58  3EFF               	addlw	-1
  2620  0D59  1D03               	skipz
  2621  0D5A  2D56               	goto	u4135
  2622  0D5B  1003               	clrc
  2623  0D5C  0D46               	rlf	??_scale,w
  2624  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2625  0D5E  0084               	movwf	4
  2626  0D5F  160A  158A  2000  120A  158A  	fcall	stringdir
  2627  0D64  00C7               	movwf	??_scale+1
  2628  0D65  160A  158A  2000  120A  158A  	fcall	stringdir
  2629  0D6A  00C8               	movwf	??_scale+2
  2630  0D6B  160A  158A  2000  120A  158A  	fcall	stringdir
  2631  0D70  00C9               	movwf	??_scale+3
  2632  0D71  160A  158A  2000  120A  158A  	fcall	stringdir
  2633  0D76  00CA               	movwf	??_scale+4
  2634  0D77  084A               	movf	??_scale+4,w
  2635  0D78  00AB               	movwf	___flmul@b+3
  2636  0D79  0849               	movf	??_scale+3,w
  2637  0D7A  00AA               	movwf	___flmul@b+2
  2638  0D7B  0848               	movf	??_scale+2,w
  2639  0D7C  00A9               	movwf	___flmul@b+1
  2640  0D7D  0847               	movf	??_scale+1,w
  2641  0D7E  00A8               	movwf	___flmul@b
  2642  0D7F  0853               	movf	_scale$1264+3,w
  2643  0D80  00AF               	movwf	___flmul@a+3
  2644  0D81  0852               	movf	_scale$1264+2,w
  2645  0D82  00AE               	movwf	___flmul@a+2
  2646  0D83  0851               	movf	_scale$1264+1,w
  2647  0D84  00AD               	movwf	___flmul@a+1
  2648  0D85  0850               	movf	_scale$1264,w
  2649  0D86  00AC               	movwf	___flmul@a
  2650  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2651  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2652  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2653  0D8E  082B               	movf	?___flmul+3,w
  2654  0D8F  00C5               	movwf	?_scale+3
  2655  0D90  082A               	movf	?___flmul+2,w
  2656  0D91  00C4               	movwf	?_scale+2
  2657  0D92  0829               	movf	?___flmul+1,w
  2658  0D93  00C3               	movwf	?_scale+1
  2659  0D94  0828               	movf	?___flmul,w
  2660  0D95  00C2               	movwf	?_scale
  2661  0D96  2FFF               	goto	l271
  2662  0D97                     l2709:
  2663  0D97  0854               	movf	scale@scl,w
  2664  0D98  3A80               	xorlw	128
  2665  0D99  3E75               	addlw	-139
  2666  0D9A  1C03               	skipc
  2667  0D9B  2D9D               	goto	u4141
  2668  0D9C  2D9E               	goto	u4140
  2669  0D9D                     u4141:
  2670  0D9D  2E26               	goto	l2715
  2671  0D9E                     u4140:
  2672  0D9E                     l2711:
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2675  0D9E  300A               	movlw	10
  2676  0D9F  00F3               	movwf	___awmod@divisor
  2677  0DA0  3000               	movlw	0
  2678  0DA1  00F4               	movwf	___awmod@divisor+1
  2679  0DA2  0854               	movf	scale@scl,w
  2680  0DA3  00F5               	movwf	___awmod@dividend
  2681  0DA4  01F6               	clrf	___awmod@dividend+1
  2682  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2683  0DA6  03F6               	decf	___awmod@dividend+1,f
  2684  0DA7  120A  118A  27A5  120A  158A  	fcall	___awmod
  2685  0DAC  0873               	movf	?___awmod,w
  2686  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0DAF  00C6               	movwf	??_scale
  2689  0DB0  3001               	movlw	1
  2690  0DB1                     u4155:
  2691  0DB1  1003               	clrc
  2692  0DB2  0DC6               	rlf	??_scale,f
  2693  0DB3  3EFF               	addlw	-1
  2694  0DB4  1D03               	skipz
  2695  0DB5  2DB1               	goto	u4155
  2696  0DB6  1003               	clrc
  2697  0DB7  0D46               	rlf	??_scale,w
  2698  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2699  0DB9  0084               	movwf	4
  2700  0DBA  160A  158A  2000  120A  158A  	fcall	stringdir
  2701  0DBF  00C7               	movwf	??_scale+1
  2702  0DC0  160A  158A  2000  120A  158A  	fcall	stringdir
  2703  0DC5  00C8               	movwf	??_scale+2
  2704  0DC6  160A  158A  2000  120A  158A  	fcall	stringdir
  2705  0DCB  00C9               	movwf	??_scale+3
  2706  0DCC  160A  158A  2000  120A  158A  	fcall	stringdir
  2707  0DD1  00CA               	movwf	??_scale+4
  2708  0DD2  084A               	movf	??_scale+4,w
  2709  0DD3  00AB               	movwf	___flmul@b+3
  2710  0DD4  0849               	movf	??_scale+3,w
  2711  0DD5  00AA               	movwf	___flmul@b+2
  2712  0DD6  0848               	movf	??_scale+2,w
  2713  0DD7  00A9               	movwf	___flmul@b+1
  2714  0DD8  0847               	movf	??_scale+1,w
  2715  0DD9  00A8               	movwf	___flmul@b
  2716  0DDA  300A               	movlw	10
  2717  0DDB  00A0               	movwf	___awdiv@divisor
  2718  0DDC  3000               	movlw	0
  2719  0DDD  00A1               	movwf	___awdiv@divisor+1
  2720  0DDE  0854               	movf	scale@scl,w
  2721  0DDF  00A2               	movwf	___awdiv@dividend
  2722  0DE0  01A3               	clrf	___awdiv@dividend+1
  2723  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2724  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2725  0DE3  160A  158A  2677  120A  158A  	fcall	___awdiv
  2726  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2728  0DEA  0820               	movf	?___awdiv,w
  2729  0DEB  00CB               	movwf	??_scale+5
  2730  0DEC  3001               	movlw	1
  2731  0DED                     u4165:
  2732  0DED  1003               	clrc
  2733  0DEE  0DCB               	rlf	??_scale+5,f
  2734  0DEF  3EFF               	addlw	-1
  2735  0DF0  1D03               	skipz
  2736  0DF1  2DED               	goto	u4165
  2737  0DF2  1003               	clrc
  2738  0DF3  0D4B               	rlf	??_scale+5,w
  2739  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2740  0DF5  0084               	movwf	4
  2741  0DF6  160A  158A  2000  120A  158A  	fcall	stringdir
  2742  0DFB  00CC               	movwf	??_scale+6
  2743  0DFC  160A  158A  2000  120A  158A  	fcall	stringdir
  2744  0E01  00CD               	movwf	??_scale+7
  2745  0E02  160A  158A  2000  120A  158A  	fcall	stringdir
  2746  0E07  00CE               	movwf	??_scale+8
  2747  0E08  160A  158A  2000  120A  158A  	fcall	stringdir
  2748  0E0D  00CF               	movwf	??_scale+9
  2749  0E0E  084F               	movf	??_scale+9,w
  2750  0E0F  00AF               	movwf	___flmul@a+3
  2751  0E10  084E               	movf	??_scale+8,w
  2752  0E11  00AE               	movwf	___flmul@a+2
  2753  0E12  084D               	movf	??_scale+7,w
  2754  0E13  00AD               	movwf	___flmul@a+1
  2755  0E14  084C               	movf	??_scale+6,w
  2756  0E15  00AC               	movwf	___flmul@a
  2757  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2758  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0E1D  082B               	movf	?___flmul+3,w
  2761  0E1E  00C5               	movwf	?_scale+3
  2762  0E1F  082A               	movf	?___flmul+2,w
  2763  0E20  00C4               	movwf	?_scale+2
  2764  0E21  0829               	movf	?___flmul+1,w
  2765  0E22  00C3               	movwf	?_scale+1
  2766  0E23  0828               	movf	?___flmul,w
  2767  0E24  00C2               	movwf	?_scale
  2768  0E25  2FFF               	goto	l271
  2769  0E26                     l2715:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2772  0E26  0854               	movf	scale@scl,w
  2773  0E27  00C6               	movwf	??_scale
  2774  0E28  3001               	movlw	1
  2775  0E29                     u4175:
  2776  0E29  1003               	clrc
  2777  0E2A  0DC6               	rlf	??_scale,f
  2778  0E2B  3EFF               	addlw	-1
  2779  0E2C  1D03               	skipz
  2780  0E2D  2E29               	goto	u4175
  2781  0E2E  1003               	clrc
  2782  0E2F  0D46               	rlf	??_scale,w
  2783  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2784  0E31  0084               	movwf	4
  2785  0E32  160A  158A  2000  120A  158A  	fcall	stringdir
  2786  0E37  00C7               	movwf	??_scale+1
  2787  0E38  160A  158A  2000  120A  158A  	fcall	stringdir
  2788  0E3D  00C8               	movwf	??_scale+2
  2789  0E3E  160A  158A  2000  120A  158A  	fcall	stringdir
  2790  0E43  00C9               	movwf	??_scale+3
  2791  0E44  160A  158A  2000  120A  158A  	fcall	stringdir
  2792  0E49  00CA               	movwf	??_scale+4
  2793  0E4A  084A               	movf	??_scale+4,w
  2794  0E4B  00C5               	movwf	?_scale+3
  2795  0E4C  0849               	movf	??_scale+3,w
  2796  0E4D  00C4               	movwf	?_scale+2
  2797  0E4E  0848               	movf	??_scale+2,w
  2798  0E4F  00C3               	movwf	?_scale+1
  2799  0E50  0847               	movf	??_scale+1,w
  2800  0E51  00C2               	movwf	?_scale
  2801  0E52  2FFF               	goto	l271
  2802  0E53                     l2719:
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2805  0E53  0854               	movf	scale@scl,w
  2806  0E54  3A80               	xorlw	128
  2807  0E55  3E12               	addlw	-238
  2808  0E56  1C03               	skipc
  2809  0E57  2E59               	goto	u4181
  2810  0E58  2E5A               	goto	u4180
  2811  0E59                     u4181:
  2812  0E59  2F44               	goto	l2727
  2813  0E5A                     u4180:
  2814  0E5A                     l2721:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2817  0E5A  300A               	movlw	10
  2818  0E5B  00A0               	movwf	___awdiv@divisor
  2819  0E5C  3000               	movlw	0
  2820  0E5D  00A1               	movwf	___awdiv@divisor+1
  2821  0E5E  0854               	movf	scale@scl,w
  2822  0E5F  00F5               	movwf	___awmod@dividend
  2823  0E60  01F6               	clrf	___awmod@dividend+1
  2824  0E61  1BF5               	btfsc	___awmod@dividend,7
  2825  0E62  03F6               	decf	___awmod@dividend+1,f
  2826  0E63  3064               	movlw	100
  2827  0E64  00F3               	movwf	___awmod@divisor
  2828  0E65  3000               	movlw	0
  2829  0E66  00F4               	movwf	___awmod@divisor+1
  2830  0E67  120A  118A  27A5  120A  158A  	fcall	___awmod
  2831  0E6C  0874               	movf	?___awmod+1,w
  2832  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0E6F  00A3               	movwf	___awdiv@dividend+1
  2835  0E70  0873               	movf	?___awmod,w
  2836  0E71  00A2               	movwf	___awdiv@dividend
  2837  0E72  160A  158A  2677  120A  158A  	fcall	___awdiv
  2838  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2840  0E79  0820               	movf	?___awdiv,w
  2841  0E7A  00C6               	movwf	??_scale
  2842  0E7B  3001               	movlw	1
  2843  0E7C                     u4195:
  2844  0E7C  1003               	clrc
  2845  0E7D  0DC6               	rlf	??_scale,f
  2846  0E7E  3EFF               	addlw	-1
  2847  0E7F  1D03               	skipz
  2848  0E80  2E7C               	goto	u4195
  2849  0E81  1003               	clrc
  2850  0E82  0D46               	rlf	??_scale,w
  2851  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2852  0E84  0084               	movwf	4
  2853  0E85  160A  158A  2000  120A  158A  	fcall	stringdir
  2854  0E8A  00C7               	movwf	??_scale+1
  2855  0E8B  160A  158A  2000  120A  158A  	fcall	stringdir
  2856  0E90  00C8               	movwf	??_scale+2
  2857  0E91  160A  158A  2000  120A  158A  	fcall	stringdir
  2858  0E96  00C9               	movwf	??_scale+3
  2859  0E97  160A  158A  2000  120A  158A  	fcall	stringdir
  2860  0E9C  00CA               	movwf	??_scale+4
  2861  0E9D  084A               	movf	??_scale+4,w
  2862  0E9E  00AB               	movwf	___flmul@b+3
  2863  0E9F  0849               	movf	??_scale+3,w
  2864  0EA0  00AA               	movwf	___flmul@b+2
  2865  0EA1  0848               	movf	??_scale+2,w
  2866  0EA2  00A9               	movwf	___flmul@b+1
  2867  0EA3  0847               	movf	??_scale+1,w
  2868  0EA4  00A8               	movwf	___flmul@b
  2869  0EA5  3064               	movlw	100
  2870  0EA6  00A0               	movwf	___awdiv@divisor
  2871  0EA7  3000               	movlw	0
  2872  0EA8  00A1               	movwf	___awdiv@divisor+1
  2873  0EA9  0854               	movf	scale@scl,w
  2874  0EAA  00A2               	movwf	___awdiv@dividend
  2875  0EAB  01A3               	clrf	___awdiv@dividend+1
  2876  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2877  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2878  0EAE  160A  158A  2677  120A  158A  	fcall	___awdiv
  2879  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0EB5  0820               	movf	?___awdiv,w
  2882  0EB6  00CB               	movwf	??_scale+5
  2883  0EB7  3001               	movlw	1
  2884  0EB8                     u4205:
  2885  0EB8  1003               	clrc
  2886  0EB9  0DCB               	rlf	??_scale+5,f
  2887  0EBA  3EFF               	addlw	-1
  2888  0EBB  1D03               	skipz
  2889  0EBC  2EB8               	goto	u4205
  2890  0EBD  1003               	clrc
  2891  0EBE  0D4B               	rlf	??_scale+5,w
  2892  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2893  0EC0  0084               	movwf	4
  2894  0EC1  160A  158A  2000  120A  158A  	fcall	stringdir
  2895  0EC6  00CC               	movwf	??_scale+6
  2896  0EC7  160A  158A  2000  120A  158A  	fcall	stringdir
  2897  0ECC  00CD               	movwf	??_scale+7
  2898  0ECD  160A  158A  2000  120A  158A  	fcall	stringdir
  2899  0ED2  00CE               	movwf	??_scale+8
  2900  0ED3  160A  158A  2000  120A  158A  	fcall	stringdir
  2901  0ED8  00CF               	movwf	??_scale+9
  2902  0ED9  084F               	movf	??_scale+9,w
  2903  0EDA  00AF               	movwf	___flmul@a+3
  2904  0EDB  084E               	movf	??_scale+8,w
  2905  0EDC  00AE               	movwf	___flmul@a+2
  2906  0EDD  084D               	movf	??_scale+7,w
  2907  0EDE  00AD               	movwf	___flmul@a+1
  2908  0EDF  084C               	movf	??_scale+6,w
  2909  0EE0  00AC               	movwf	___flmul@a
  2910  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2911  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2912  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2913  0EE8  082B               	movf	?___flmul+3,w
  2914  0EE9  00D3               	movwf	_scale$1264+3
  2915  0EEA  082A               	movf	?___flmul+2,w
  2916  0EEB  00D2               	movwf	_scale$1264+2
  2917  0EEC  0829               	movf	?___flmul+1,w
  2918  0EED  00D1               	movwf	_scale$1264+1
  2919  0EEE  0828               	movf	?___flmul,w
  2920  0EEF  00D0               	movwf	_scale$1264
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2923  0EF0  300A               	movlw	10
  2924  0EF1  00F3               	movwf	___awmod@divisor
  2925  0EF2  3000               	movlw	0
  2926  0EF3  00F4               	movwf	___awmod@divisor+1
  2927  0EF4  0854               	movf	scale@scl,w
  2928  0EF5  00F5               	movwf	___awmod@dividend
  2929  0EF6  01F6               	clrf	___awmod@dividend+1
  2930  0EF7  1BF5               	btfsc	___awmod@dividend,7
  2931  0EF8  03F6               	decf	___awmod@dividend+1,f
  2932  0EF9  120A  118A  27A5  120A  158A  	fcall	___awmod
  2933  0EFE  0873               	movf	?___awmod,w
  2934  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0F01  00C6               	movwf	??_scale
  2937  0F02  3001               	movlw	1
  2938  0F03                     u4215:
  2939  0F03  1003               	clrc
  2940  0F04  0DC6               	rlf	??_scale,f
  2941  0F05  3EFF               	addlw	-1
  2942  0F06  1D03               	skipz
  2943  0F07  2F03               	goto	u4215
  2944  0F08  1003               	clrc
  2945  0F09  0D46               	rlf	??_scale,w
  2946  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2947  0F0B  0084               	movwf	4
  2948  0F0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2949  0F11  00C7               	movwf	??_scale+1
  2950  0F12  160A  158A  2000  120A  158A  	fcall	stringdir
  2951  0F17  00C8               	movwf	??_scale+2
  2952  0F18  160A  158A  2000  120A  158A  	fcall	stringdir
  2953  0F1D  00C9               	movwf	??_scale+3
  2954  0F1E  160A  158A  2000  120A  158A  	fcall	stringdir
  2955  0F23  00CA               	movwf	??_scale+4
  2956  0F24  084A               	movf	??_scale+4,w
  2957  0F25  00AB               	movwf	___flmul@b+3
  2958  0F26  0849               	movf	??_scale+3,w
  2959  0F27  00AA               	movwf	___flmul@b+2
  2960  0F28  0848               	movf	??_scale+2,w
  2961  0F29  00A9               	movwf	___flmul@b+1
  2962  0F2A  0847               	movf	??_scale+1,w
  2963  0F2B  00A8               	movwf	___flmul@b
  2964  0F2C  0853               	movf	_scale$1264+3,w
  2965  0F2D  00AF               	movwf	___flmul@a+3
  2966  0F2E  0852               	movf	_scale$1264+2,w
  2967  0F2F  00AE               	movwf	___flmul@a+2
  2968  0F30  0851               	movf	_scale$1264+1,w
  2969  0F31  00AD               	movwf	___flmul@a+1
  2970  0F32  0850               	movf	_scale$1264,w
  2971  0F33  00AC               	movwf	___flmul@a
  2972  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2973  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2974  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2975  0F3B  082B               	movf	?___flmul+3,w
  2976  0F3C  00C5               	movwf	?_scale+3
  2977  0F3D  082A               	movf	?___flmul+2,w
  2978  0F3E  00C4               	movwf	?_scale+2
  2979  0F3F  0829               	movf	?___flmul+1,w
  2980  0F40  00C3               	movwf	?_scale+1
  2981  0F41  0828               	movf	?___flmul,w
  2982  0F42  00C2               	movwf	?_scale
  2983  0F43  2FFF               	goto	l271
  2984  0F44                     l2727:
  2985  0F44  0854               	movf	scale@scl,w
  2986  0F45  3A80               	xorlw	128
  2987  0F46  3E75               	addlw	-139
  2988  0F47  1C03               	skipc
  2989  0F48  2F4A               	goto	u4221
  2990  0F49  2F4B               	goto	u4220
  2991  0F4A                     u4221:
  2992  0F4A  2FD3               	goto	l2733
  2993  0F4B                     u4220:
  2994  0F4B                     l2729:
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2997  0F4B  300A               	movlw	10
  2998  0F4C  00F3               	movwf	___awmod@divisor
  2999  0F4D  3000               	movlw	0
  3000  0F4E  00F4               	movwf	___awmod@divisor+1
  3001  0F4F  0854               	movf	scale@scl,w
  3002  0F50  00F5               	movwf	___awmod@dividend
  3003  0F51  01F6               	clrf	___awmod@dividend+1
  3004  0F52  1BF5               	btfsc	___awmod@dividend,7
  3005  0F53  03F6               	decf	___awmod@dividend+1,f
  3006  0F54  120A  118A  27A5  120A  158A  	fcall	___awmod
  3007  0F59  0873               	movf	?___awmod,w
  3008  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3010  0F5C  00C6               	movwf	??_scale
  3011  0F5D  3001               	movlw	1
  3012  0F5E                     u4235:
  3013  0F5E  1003               	clrc
  3014  0F5F  0DC6               	rlf	??_scale,f
  3015  0F60  3EFF               	addlw	-1
  3016  0F61  1D03               	skipz
  3017  0F62  2F5E               	goto	u4235
  3018  0F63  1003               	clrc
  3019  0F64  0D46               	rlf	??_scale,w
  3020  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3021  0F66  0084               	movwf	4
  3022  0F67  160A  158A  2000  120A  158A  	fcall	stringdir
  3023  0F6C  00C7               	movwf	??_scale+1
  3024  0F6D  160A  158A  2000  120A  158A  	fcall	stringdir
  3025  0F72  00C8               	movwf	??_scale+2
  3026  0F73  160A  158A  2000  120A  158A  	fcall	stringdir
  3027  0F78  00C9               	movwf	??_scale+3
  3028  0F79  160A  158A  2000  120A  158A  	fcall	stringdir
  3029  0F7E  00CA               	movwf	??_scale+4
  3030  0F7F  084A               	movf	??_scale+4,w
  3031  0F80  00AB               	movwf	___flmul@b+3
  3032  0F81  0849               	movf	??_scale+3,w
  3033  0F82  00AA               	movwf	___flmul@b+2
  3034  0F83  0848               	movf	??_scale+2,w
  3035  0F84  00A9               	movwf	___flmul@b+1
  3036  0F85  0847               	movf	??_scale+1,w
  3037  0F86  00A8               	movwf	___flmul@b
  3038  0F87  300A               	movlw	10
  3039  0F88  00A0               	movwf	___awdiv@divisor
  3040  0F89  3000               	movlw	0
  3041  0F8A  00A1               	movwf	___awdiv@divisor+1
  3042  0F8B  0854               	movf	scale@scl,w
  3043  0F8C  00A2               	movwf	___awdiv@dividend
  3044  0F8D  01A3               	clrf	___awdiv@dividend+1
  3045  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3046  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3047  0F90  160A  158A  2677  120A  158A  	fcall	___awdiv
  3048  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3049  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3050  0F97  0820               	movf	?___awdiv,w
  3051  0F98  00CB               	movwf	??_scale+5
  3052  0F99  3001               	movlw	1
  3053  0F9A                     u4245:
  3054  0F9A  1003               	clrc
  3055  0F9B  0DCB               	rlf	??_scale+5,f
  3056  0F9C  3EFF               	addlw	-1
  3057  0F9D  1D03               	skipz
  3058  0F9E  2F9A               	goto	u4245
  3059  0F9F  1003               	clrc
  3060  0FA0  0D4B               	rlf	??_scale+5,w
  3061  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3062  0FA2  0084               	movwf	4
  3063  0FA3  160A  158A  2000  120A  158A  	fcall	stringdir
  3064  0FA8  00CC               	movwf	??_scale+6
  3065  0FA9  160A  158A  2000  120A  158A  	fcall	stringdir
  3066  0FAE  00CD               	movwf	??_scale+7
  3067  0FAF  160A  158A  2000  120A  158A  	fcall	stringdir
  3068  0FB4  00CE               	movwf	??_scale+8
  3069  0FB5  160A  158A  2000  120A  158A  	fcall	stringdir
  3070  0FBA  00CF               	movwf	??_scale+9
  3071  0FBB  084F               	movf	??_scale+9,w
  3072  0FBC  00AF               	movwf	___flmul@a+3
  3073  0FBD  084E               	movf	??_scale+8,w
  3074  0FBE  00AE               	movwf	___flmul@a+2
  3075  0FBF  084D               	movf	??_scale+7,w
  3076  0FC0  00AD               	movwf	___flmul@a+1
  3077  0FC1  084C               	movf	??_scale+6,w
  3078  0FC2  00AC               	movwf	___flmul@a
  3079  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3080  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3081  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3082  0FCA  082B               	movf	?___flmul+3,w
  3083  0FCB  00C5               	movwf	?_scale+3
  3084  0FCC  082A               	movf	?___flmul+2,w
  3085  0FCD  00C4               	movwf	?_scale+2
  3086  0FCE  0829               	movf	?___flmul+1,w
  3087  0FCF  00C3               	movwf	?_scale+1
  3088  0FD0  0828               	movf	?___flmul,w
  3089  0FD1  00C2               	movwf	?_scale
  3090  0FD2  2FFF               	goto	l271
  3091  0FD3                     l2733:
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3094  0FD3  0854               	movf	scale@scl,w
  3095  0FD4  00C6               	movwf	??_scale
  3096  0FD5  3001               	movlw	1
  3097  0FD6                     u4255:
  3098  0FD6  1003               	clrc
  3099  0FD7  0DC6               	rlf	??_scale,f
  3100  0FD8  3EFF               	addlw	-1
  3101  0FD9  1D03               	skipz
  3102  0FDA  2FD6               	goto	u4255
  3103  0FDB  1003               	clrc
  3104  0FDC  0D46               	rlf	??_scale,w
  3105  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3106  0FDE  0084               	movwf	4
  3107  0FDF  160A  158A  2000  120A  158A  	fcall	stringdir
  3108  0FE4  00C7               	movwf	??_scale+1
  3109  0FE5  160A  158A  2000  120A  158A  	fcall	stringdir
  3110  0FEA  00C8               	movwf	??_scale+2
  3111  0FEB  160A  158A  2000  120A  158A  	fcall	stringdir
  3112  0FF0  00C9               	movwf	??_scale+3
  3113  0FF1  160A  158A  2000  120A  158A  	fcall	stringdir
  3114  0FF6  00CA               	movwf	??_scale+4
  3115  0FF7  084A               	movf	??_scale+4,w
  3116  0FF8  00C5               	movwf	?_scale+3
  3117  0FF9  0849               	movf	??_scale+3,w
  3118  0FFA  00C4               	movwf	?_scale+2
  3119  0FFB  0848               	movf	??_scale+2,w
  3120  0FFC  00C3               	movwf	?_scale+1
  3121  0FFD  0847               	movf	??_scale+1,w
  3122  0FFE  00C2               	movwf	?_scale
  3123  0FFF                     l271:
  3124  0FFF  0008               	return
  3125  1000                     __end_of_scale:
  3126                           
  3127                           	psect	text3
  3128  07A5                     __ptext3:	
  3129 ;; *************** function ___awmod *****************
  3130 ;; Defined at:
  3131 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  divisor         2    3[COMMON] int 
  3134 ;;  dividend        2    5[COMMON] int 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  sign            1    9[COMMON] unsigned char 
  3137 ;;  counter         1    8[COMMON] unsigned char 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  2    3[COMMON] int 
  3140 ;; Registers used:
  3141 ;;		wreg, status,2, status,0
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3147 ;;      Params:         4       0       0       0       0
  3148 ;;      Locals:         2       0       0       0       0
  3149 ;;      Temps:          1       0       0       0       0
  3150 ;;      Totals:         7       0       0       0       0
  3151 ;;Total ram usage:        7 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_scale
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           
  3162                           ;psect for function ___awmod
  3163  07A5                     ___awmod:
  3164  07A5                     l2243:	
  3165                           ;incstack = 0
  3166                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3167                           
  3168  07A5  01F9               	clrf	___awmod@sign
  3169  07A6                     l2245:
  3170  07A6  1FF6               	btfss	___awmod@dividend+1,7
  3171  07A7  2FA9               	goto	u2931
  3172  07A8  2FAA               	goto	u2930
  3173  07A9                     u2931:
  3174  07A9  2FB1               	goto	l2251
  3175  07AA                     u2930:
  3176  07AA                     l2247:
  3177  07AA  09F5               	comf	___awmod@dividend,f
  3178  07AB  09F6               	comf	___awmod@dividend+1,f
  3179  07AC  0AF5               	incf	___awmod@dividend,f
  3180  07AD  1903               	skipnz
  3181  07AE  0AF6               	incf	___awmod@dividend+1,f
  3182  07AF                     l2249:
  3183  07AF  01F9               	clrf	___awmod@sign
  3184  07B0  0AF9               	incf	___awmod@sign,f
  3185  07B1                     l2251:
  3186  07B1  1FF4               	btfss	___awmod@divisor+1,7
  3187  07B2  2FB4               	goto	u2941
  3188  07B3  2FB5               	goto	u2940
  3189  07B4                     u2941:
  3190  07B4  2FBA               	goto	l2255
  3191  07B5                     u2940:
  3192  07B5                     l2253:
  3193  07B5  09F3               	comf	___awmod@divisor,f
  3194  07B6  09F4               	comf	___awmod@divisor+1,f
  3195  07B7  0AF3               	incf	___awmod@divisor,f
  3196  07B8  1903               	skipnz
  3197  07B9  0AF4               	incf	___awmod@divisor+1,f
  3198  07BA                     l2255:
  3199  07BA  0873               	movf	___awmod@divisor,w
  3200  07BB  0474               	iorwf	___awmod@divisor+1,w
  3201  07BC  1903               	btfsc	3,2
  3202  07BD  2FBF               	goto	u2951
  3203  07BE  2FC0               	goto	u2950
  3204  07BF                     u2951:
  3205  07BF  2FEF               	goto	l2273
  3206  07C0                     u2950:
  3207  07C0                     l2257:
  3208  07C0  01F8               	clrf	___awmod@counter
  3209  07C1  0AF8               	incf	___awmod@counter,f
  3210  07C2  2FCE               	goto	l2263
  3211  07C3                     l2259:
  3212  07C3  3001               	movlw	1
  3213  07C4                     u2965:
  3214  07C4  1003               	clrc
  3215  07C5  0DF3               	rlf	___awmod@divisor,f
  3216  07C6  0DF4               	rlf	___awmod@divisor+1,f
  3217  07C7  3EFF               	addlw	-1
  3218  07C8  1D03               	skipz
  3219  07C9  2FC4               	goto	u2965
  3220  07CA                     l2261:
  3221  07CA  3001               	movlw	1
  3222  07CB  00F7               	movwf	??___awmod
  3223  07CC  0877               	movf	??___awmod,w
  3224  07CD  07F8               	addwf	___awmod@counter,f
  3225  07CE                     l2263:
  3226  07CE  1FF4               	btfss	___awmod@divisor+1,7
  3227  07CF  2FD1               	goto	u2971
  3228  07D0  2FD2               	goto	u2970
  3229  07D1                     u2971:
  3230  07D1  2FC3               	goto	l2259
  3231  07D2                     u2970:
  3232  07D2                     l2265:
  3233  07D2  0874               	movf	___awmod@divisor+1,w
  3234  07D3  0276               	subwf	___awmod@dividend+1,w
  3235  07D4  1D03               	skipz
  3236  07D5  2FD8               	goto	u2985
  3237  07D6  0873               	movf	___awmod@divisor,w
  3238  07D7  0275               	subwf	___awmod@dividend,w
  3239  07D8                     u2985:
  3240  07D8  1C03               	skipc
  3241  07D9  2FDB               	goto	u2981
  3242  07DA  2FDC               	goto	u2980
  3243  07DB                     u2981:
  3244  07DB  2FE2               	goto	l2269
  3245  07DC                     u2980:
  3246  07DC                     l2267:
  3247  07DC  0873               	movf	___awmod@divisor,w
  3248  07DD  02F5               	subwf	___awmod@dividend,f
  3249  07DE  0874               	movf	___awmod@divisor+1,w
  3250  07DF  1C03               	skipc
  3251  07E0  03F6               	decf	___awmod@dividend+1,f
  3252  07E1  02F6               	subwf	___awmod@dividend+1,f
  3253  07E2                     l2269:
  3254  07E2  3001               	movlw	1
  3255  07E3                     u2995:
  3256  07E3  1003               	clrc
  3257  07E4  0CF4               	rrf	___awmod@divisor+1,f
  3258  07E5  0CF3               	rrf	___awmod@divisor,f
  3259  07E6  3EFF               	addlw	-1
  3260  07E7  1D03               	skipz
  3261  07E8  2FE3               	goto	u2995
  3262  07E9                     l2271:
  3263  07E9  3001               	movlw	1
  3264  07EA  02F8               	subwf	___awmod@counter,f
  3265  07EB  1D03               	btfss	3,2
  3266  07EC  2FEE               	goto	u3001
  3267  07ED  2FEF               	goto	u3000
  3268  07EE                     u3001:
  3269  07EE  2FD2               	goto	l2265
  3270  07EF                     u3000:
  3271  07EF                     l2273:
  3272  07EF  0879               	movf	___awmod@sign,w
  3273  07F0  1903               	btfsc	3,2
  3274  07F1  2FF3               	goto	u3011
  3275  07F2  2FF4               	goto	u3010
  3276  07F3                     u3011:
  3277  07F3  2FF9               	goto	l2277
  3278  07F4                     u3010:
  3279  07F4                     l2275:
  3280  07F4  09F5               	comf	___awmod@dividend,f
  3281  07F5  09F6               	comf	___awmod@dividend+1,f
  3282  07F6  0AF5               	incf	___awmod@dividend,f
  3283  07F7  1903               	skipnz
  3284  07F8  0AF6               	incf	___awmod@dividend+1,f
  3285  07F9                     l2277:
  3286  07F9  0876               	movf	___awmod@dividend+1,w
  3287  07FA  00F4               	movwf	?___awmod+1
  3288  07FB  0875               	movf	___awmod@dividend,w
  3289  07FC  00F3               	movwf	?___awmod
  3290  07FD                     l524:
  3291  07FD  0008               	return
  3292  07FE                     __end_of___awmod:
  3293                           
  3294                           	psect	text4
  3295  1E77                     __ptext4:	
  3296 ;; *************** function ___awdiv *****************
  3297 ;; Defined at:
  3298 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  divisor         2    0[BANK0 ] int 
  3301 ;;  dividend        2    2[BANK0 ] int 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  quotient        2    6[BANK0 ] int 
  3304 ;;  sign            1    5[BANK0 ] unsigned char 
  3305 ;;  counter         1    4[BANK0 ] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  2    0[BANK0 ] int 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       4       0       0       0
  3316 ;;      Locals:         0       4       0       0       0
  3317 ;;      Temps:          1       0       0       0       0
  3318 ;;      Totals:         1       8       0       0       0
  3319 ;;Total ram usage:        9 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    1
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_scale
  3326 ;;		_sprintf
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function ___awdiv
  3332  1E77                     ___awdiv:
  3333  1E77                     l2199:	
  3334                           ;incstack = 0
  3335                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3336                           
  3337  1E77  1283               	bcf	3,5	;RP0=0, select bank0
  3338  1E78  1303               	bcf	3,6	;RP1=0, select bank0
  3339  1E79  01A5               	clrf	___awdiv@sign
  3340  1E7A                     l2201:
  3341  1E7A  1FA1               	btfss	___awdiv@divisor+1,7
  3342  1E7B  2E7D               	goto	u2831
  3343  1E7C  2E7E               	goto	u2830
  3344  1E7D                     u2831:
  3345  1E7D  2E85               	goto	l2207
  3346  1E7E                     u2830:
  3347  1E7E                     l2203:
  3348  1E7E  09A0               	comf	___awdiv@divisor,f
  3349  1E7F  09A1               	comf	___awdiv@divisor+1,f
  3350  1E80  0AA0               	incf	___awdiv@divisor,f
  3351  1E81  1903               	skipnz
  3352  1E82  0AA1               	incf	___awdiv@divisor+1,f
  3353  1E83                     l2205:
  3354  1E83  01A5               	clrf	___awdiv@sign
  3355  1E84  0AA5               	incf	___awdiv@sign,f
  3356  1E85                     l2207:
  3357  1E85  1FA3               	btfss	___awdiv@dividend+1,7
  3358  1E86  2E88               	goto	u2841
  3359  1E87  2E89               	goto	u2840
  3360  1E88                     u2841:
  3361  1E88  2E92               	goto	l2213
  3362  1E89                     u2840:
  3363  1E89                     l2209:
  3364  1E89  09A2               	comf	___awdiv@dividend,f
  3365  1E8A  09A3               	comf	___awdiv@dividend+1,f
  3366  1E8B  0AA2               	incf	___awdiv@dividend,f
  3367  1E8C  1903               	skipnz
  3368  1E8D  0AA3               	incf	___awdiv@dividend+1,f
  3369  1E8E                     l2211:
  3370  1E8E  3001               	movlw	1
  3371  1E8F  00FA               	movwf	??___awdiv
  3372  1E90  087A               	movf	??___awdiv,w
  3373  1E91  06A5               	xorwf	___awdiv@sign,f
  3374  1E92                     l2213:
  3375  1E92  01A6               	clrf	___awdiv@quotient
  3376  1E93  01A7               	clrf	___awdiv@quotient+1
  3377  1E94                     l2215:
  3378  1E94  0820               	movf	___awdiv@divisor,w
  3379  1E95  0421               	iorwf	___awdiv@divisor+1,w
  3380  1E96  1903               	btfsc	3,2
  3381  1E97  2E99               	goto	u2851
  3382  1E98  2E9A               	goto	u2850
  3383  1E99                     u2851:
  3384  1E99  2ED1               	goto	l2235
  3385  1E9A                     u2850:
  3386  1E9A                     l2217:
  3387  1E9A  01A4               	clrf	___awdiv@counter
  3388  1E9B  0AA4               	incf	___awdiv@counter,f
  3389  1E9C  2EA8               	goto	l2223
  3390  1E9D                     l2219:
  3391  1E9D  3001               	movlw	1
  3392  1E9E                     u2865:
  3393  1E9E  1003               	clrc
  3394  1E9F  0DA0               	rlf	___awdiv@divisor,f
  3395  1EA0  0DA1               	rlf	___awdiv@divisor+1,f
  3396  1EA1  3EFF               	addlw	-1
  3397  1EA2  1D03               	skipz
  3398  1EA3  2E9E               	goto	u2865
  3399  1EA4                     l2221:
  3400  1EA4  3001               	movlw	1
  3401  1EA5  00FA               	movwf	??___awdiv
  3402  1EA6  087A               	movf	??___awdiv,w
  3403  1EA7  07A4               	addwf	___awdiv@counter,f
  3404  1EA8                     l2223:
  3405  1EA8  1FA1               	btfss	___awdiv@divisor+1,7
  3406  1EA9  2EAB               	goto	u2871
  3407  1EAA  2EAC               	goto	u2870
  3408  1EAB                     u2871:
  3409  1EAB  2E9D               	goto	l2219
  3410  1EAC                     u2870:
  3411  1EAC                     l2225:
  3412  1EAC  3001               	movlw	1
  3413  1EAD                     u2885:
  3414  1EAD  1003               	clrc
  3415  1EAE  0DA6               	rlf	___awdiv@quotient,f
  3416  1EAF  0DA7               	rlf	___awdiv@quotient+1,f
  3417  1EB0  3EFF               	addlw	-1
  3418  1EB1  1D03               	skipz
  3419  1EB2  2EAD               	goto	u2885
  3420  1EB3  0821               	movf	___awdiv@divisor+1,w
  3421  1EB4  0223               	subwf	___awdiv@dividend+1,w
  3422  1EB5  1D03               	skipz
  3423  1EB6  2EB9               	goto	u2895
  3424  1EB7  0820               	movf	___awdiv@divisor,w
  3425  1EB8  0222               	subwf	___awdiv@dividend,w
  3426  1EB9                     u2895:
  3427  1EB9  1C03               	skipc
  3428  1EBA  2EBC               	goto	u2891
  3429  1EBB  2EBD               	goto	u2890
  3430  1EBC                     u2891:
  3431  1EBC  2EC4               	goto	l2231
  3432  1EBD                     u2890:
  3433  1EBD                     l2227:
  3434  1EBD  0820               	movf	___awdiv@divisor,w
  3435  1EBE  02A2               	subwf	___awdiv@dividend,f
  3436  1EBF  0821               	movf	___awdiv@divisor+1,w
  3437  1EC0  1C03               	skipc
  3438  1EC1  03A3               	decf	___awdiv@dividend+1,f
  3439  1EC2  02A3               	subwf	___awdiv@dividend+1,f
  3440  1EC3                     l2229:
  3441  1EC3  1426               	bsf	___awdiv@quotient,0
  3442  1EC4                     l2231:
  3443  1EC4  3001               	movlw	1
  3444  1EC5                     u2905:
  3445  1EC5  1003               	clrc
  3446  1EC6  0CA1               	rrf	___awdiv@divisor+1,f
  3447  1EC7  0CA0               	rrf	___awdiv@divisor,f
  3448  1EC8  3EFF               	addlw	-1
  3449  1EC9  1D03               	skipz
  3450  1ECA  2EC5               	goto	u2905
  3451  1ECB                     l2233:
  3452  1ECB  3001               	movlw	1
  3453  1ECC  02A4               	subwf	___awdiv@counter,f
  3454  1ECD  1D03               	btfss	3,2
  3455  1ECE  2ED0               	goto	u2911
  3456  1ECF  2ED1               	goto	u2910
  3457  1ED0                     u2911:
  3458  1ED0  2EAC               	goto	l2225
  3459  1ED1                     u2910:
  3460  1ED1                     l2235:
  3461  1ED1  0825               	movf	___awdiv@sign,w
  3462  1ED2  1903               	btfsc	3,2
  3463  1ED3  2ED5               	goto	u2921
  3464  1ED4  2ED6               	goto	u2920
  3465  1ED5                     u2921:
  3466  1ED5  2EDB               	goto	l2239
  3467  1ED6                     u2920:
  3468  1ED6                     l2237:
  3469  1ED6  09A6               	comf	___awdiv@quotient,f
  3470  1ED7  09A7               	comf	___awdiv@quotient+1,f
  3471  1ED8  0AA6               	incf	___awdiv@quotient,f
  3472  1ED9  1903               	skipnz
  3473  1EDA  0AA7               	incf	___awdiv@quotient+1,f
  3474  1EDB                     l2239:
  3475  1EDB  0827               	movf	___awdiv@quotient+1,w
  3476  1EDC  00A1               	movwf	?___awdiv+1
  3477  1EDD  0826               	movf	___awdiv@quotient,w
  3478  1EDE  00A0               	movwf	?___awdiv
  3479  1EDF                     l511:
  3480  1EDF  0008               	return
  3481  1EE0                     __end_of___awdiv:
  3482                           
  3483                           	psect	text5
  3484  1BE6                     __ptext5:	
  3485 ;; *************** function _isdigit *****************
  3486 ;; Defined at:
  3487 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  c               1    wreg     unsigned char 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  c               1    4[COMMON] unsigned char 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;		None               void
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3501 ;;      Params:         0       0       0       0       0
  3502 ;;      Locals:         2       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0
  3504 ;;      Totals:         2       0       0       0       0
  3505 ;;Total ram usage:        2 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    1
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_sprintf
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           
  3516                           ;psect for function _isdigit
  3517  1BE6                     _isdigit:
  3518                           
  3519                           ;incstack = 0
  3520                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3521                           ;isdigit@c stored from wreg
  3522  1BE6  00F4               	movwf	isdigit@c
  3523  1BE7                     l2737:
  3524  1BE7  01F3               	clrf	_isdigit$1082
  3525  1BE8                     l2739:
  3526  1BE8  303A               	movlw	58
  3527  1BE9  0274               	subwf	isdigit@c,w
  3528  1BEA  1803               	skipnc
  3529  1BEB  2BED               	goto	u4261
  3530  1BEC  2BEE               	goto	u4260
  3531  1BED                     u4261:
  3532  1BED  2BF6               	goto	l2745
  3533  1BEE                     u4260:
  3534  1BEE                     l2741:
  3535  1BEE  3030               	movlw	48
  3536  1BEF  0274               	subwf	isdigit@c,w
  3537  1BF0  1C03               	skipc
  3538  1BF1  2BF3               	goto	u4271
  3539  1BF2  2BF4               	goto	u4270
  3540  1BF3                     u4271:
  3541  1BF3  2BF6               	goto	l2745
  3542  1BF4                     u4270:
  3543  1BF4                     l2743:
  3544  1BF4  01F3               	clrf	_isdigit$1082
  3545  1BF5  0AF3               	incf	_isdigit$1082,f
  3546  1BF6                     l2745:
  3547  1BF6  0C73               	rrf	_isdigit$1082,w
  3548  1BF7                     l845:
  3549  1BF7  0008               	return
  3550  1BF8                     __end_of_isdigit:
  3551                           
  3552                           	psect	text6
  3553  0598                     __ptext6:	
  3554 ;; *************** function _fround *****************
  3555 ;; Defined at:
  3556 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  prec            1    wreg     unsigned char 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  prec            1   53[BANK0 ] unsigned char 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  4   34[BANK0 ] unsigned char 
  3563 ;; Registers used:
  3564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3570 ;;      Params:         0       4       0       0       0
  3571 ;;      Locals:         0       9       0       0       0
  3572 ;;      Temps:          0       7       0       0       0
  3573 ;;      Totals:         0      20       0       0       0
  3574 ;;Total ram usage:       20 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; Hardware stack levels required when called:    3
  3577 ;; This function calls:
  3578 ;;		___flmul
  3579 ;;		___lwdiv
  3580 ;;		___lwmod
  3581 ;; This function is called by:
  3582 ;;		_sprintf
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _fround
  3588  0598                     _fround:
  3589                           
  3590                           ;incstack = 0
  3591                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3592                           ;fround@prec stored from wreg
  3593  0598  1283               	bcf	3,5	;RP0=0, select bank0
  3594  0599  1303               	bcf	3,6	;RP1=0, select bank0
  3595  059A  00D5               	movwf	fround@prec
  3596  059B                     l2679:
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3599  059B  306E               	movlw	110
  3600  059C  0255               	subwf	fround@prec,w
  3601  059D  1C03               	skipc
  3602  059E  2DA0               	goto	u4011
  3603  059F  2DA1               	goto	u4010
  3604  05A0                     u4011:
  3605  05A0  2EB0               	goto	l2687
  3606  05A1                     u4010:
  3607  05A1                     l2681:
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3610  05A1  303F               	movlw	63
  3611  05A2  00AB               	movwf	___flmul@b+3
  3612  05A3  3000               	movlw	0
  3613  05A4  00AA               	movwf	___flmul@b+2
  3614  05A5  3000               	movlw	0
  3615  05A6  00A9               	movwf	___flmul@b+1
  3616  05A7  3000               	movlw	0
  3617  05A8  00A8               	movwf	___flmul@b
  3618  05A9  3064               	movlw	100
  3619  05AA  00A0               	movwf	___lwdiv@divisor
  3620  05AB  3000               	movlw	0
  3621  05AC  00A1               	movwf	___lwdiv@divisor+1
  3622  05AD  0855               	movf	fround@prec,w
  3623  05AE  00C6               	movwf	??_fround
  3624  05AF  01C7               	clrf	??_fround+1
  3625  05B0  0846               	movf	??_fround,w
  3626  05B1  00A2               	movwf	___lwdiv@dividend
  3627  05B2  0847               	movf	??_fround+1,w
  3628  05B3  00A3               	movwf	___lwdiv@dividend+1
  3629  05B4  160A  158A  24D3  120A  118A  	fcall	___lwdiv
  3630  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3631  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  3632  05BB  0820               	movf	?___lwdiv,w
  3633  05BC  00C8               	movwf	??_fround+2
  3634  05BD  3001               	movlw	1
  3635  05BE                     u4025:
  3636  05BE  1003               	clrc
  3637  05BF  0DC8               	rlf	??_fround+2,f
  3638  05C0  3EFF               	addlw	-1
  3639  05C1  1D03               	skipz
  3640  05C2  2DBE               	goto	u4025
  3641  05C3  1003               	clrc
  3642  05C4  0D48               	rlf	??_fround+2,w
  3643  05C5  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3644  05C6  0084               	movwf	4
  3645  05C7  160A  158A  2000  120A  118A  	fcall	stringdir
  3646  05CC  00C9               	movwf	??_fround+3
  3647  05CD  160A  158A  2000  120A  118A  	fcall	stringdir
  3648  05D2  00CA               	movwf	??_fround+4
  3649  05D3  160A  158A  2000  120A  118A  	fcall	stringdir
  3650  05D8  00CB               	movwf	??_fround+5
  3651  05D9  160A  158A  2000  120A  118A  	fcall	stringdir
  3652  05DE  00CC               	movwf	??_fround+6
  3653  05DF  084C               	movf	??_fround+6,w
  3654  05E0  00AF               	movwf	___flmul@a+3
  3655  05E1  084B               	movf	??_fround+5,w
  3656  05E2  00AE               	movwf	___flmul@a+2
  3657  05E3  084A               	movf	??_fround+4,w
  3658  05E4  00AD               	movwf	___flmul@a+1
  3659  05E5  0849               	movf	??_fround+3,w
  3660  05E6  00AC               	movwf	___flmul@a
  3661  05E7  120A  158A  213C  120A  118A  	fcall	___flmul
  3662  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3663  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  3664  05EE  082B               	movf	?___flmul+3,w
  3665  05EF  00D4               	movwf	_fround$1262+3
  3666  05F0  082A               	movf	?___flmul+2,w
  3667  05F1  00D3               	movwf	_fround$1262+2
  3668  05F2  0829               	movf	?___flmul+1,w
  3669  05F3  00D2               	movwf	_fround$1262+1
  3670  05F4  0828               	movf	?___flmul,w
  3671  05F5  00D1               	movwf	_fround$1262
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3674  05F6  300A               	movlw	10
  3675  05F7  00A0               	movwf	___lwdiv@divisor
  3676  05F8  3000               	movlw	0
  3677  05F9  00A1               	movwf	___lwdiv@divisor+1
  3678  05FA  0855               	movf	fround@prec,w
  3679  05FB  00C6               	movwf	??_fround
  3680  05FC  01C7               	clrf	??_fround+1
  3681  05FD  0846               	movf	??_fround,w
  3682  05FE  00F5               	movwf	___lwmod@dividend
  3683  05FF  0847               	movf	??_fround+1,w
  3684  0600  00F6               	movwf	___lwmod@dividend+1
  3685  0601  3064               	movlw	100
  3686  0602  00F3               	movwf	___lwmod@divisor
  3687  0603  3000               	movlw	0
  3688  0604  00F4               	movwf	___lwmod@divisor+1
  3689  0605  160A  118A  2003  120A  118A  	fcall	___lwmod
  3690  060A  0874               	movf	?___lwmod+1,w
  3691  060B  1283               	bcf	3,5	;RP0=0, select bank0
  3692  060C  1303               	bcf	3,6	;RP1=0, select bank0
  3693  060D  00A3               	movwf	___lwdiv@dividend+1
  3694  060E  0873               	movf	?___lwmod,w
  3695  060F  00A2               	movwf	___lwdiv@dividend
  3696  0610  160A  158A  24D3  120A  118A  	fcall	___lwdiv
  3697  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3698  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3699  0617  0820               	movf	?___lwdiv,w
  3700  0618  00C8               	movwf	??_fround+2
  3701  0619  3001               	movlw	1
  3702  061A                     u4035:
  3703  061A  1003               	clrc
  3704  061B  0DC8               	rlf	??_fround+2,f
  3705  061C  3EFF               	addlw	-1
  3706  061D  1D03               	skipz
  3707  061E  2E1A               	goto	u4035
  3708  061F  1003               	clrc
  3709  0620  0D48               	rlf	??_fround+2,w
  3710  0621  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3711  0622  0084               	movwf	4
  3712  0623  160A  158A  2000  120A  118A  	fcall	stringdir
  3713  0628  00C9               	movwf	??_fround+3
  3714  0629  160A  158A  2000  120A  118A  	fcall	stringdir
  3715  062E  00CA               	movwf	??_fround+4
  3716  062F  160A  158A  2000  120A  118A  	fcall	stringdir
  3717  0634  00CB               	movwf	??_fround+5
  3718  0635  160A  158A  2000  120A  118A  	fcall	stringdir
  3719  063A  00CC               	movwf	??_fround+6
  3720  063B  084C               	movf	??_fround+6,w
  3721  063C  00AB               	movwf	___flmul@b+3
  3722  063D  084B               	movf	??_fround+5,w
  3723  063E  00AA               	movwf	___flmul@b+2
  3724  063F  084A               	movf	??_fround+4,w
  3725  0640  00A9               	movwf	___flmul@b+1
  3726  0641  0849               	movf	??_fround+3,w
  3727  0642  00A8               	movwf	___flmul@b
  3728  0643  0854               	movf	_fround$1262+3,w
  3729  0644  00AF               	movwf	___flmul@a+3
  3730  0645  0853               	movf	_fround$1262+2,w
  3731  0646  00AE               	movwf	___flmul@a+2
  3732  0647  0852               	movf	_fround$1262+1,w
  3733  0648  00AD               	movwf	___flmul@a+1
  3734  0649  0851               	movf	_fround$1262,w
  3735  064A  00AC               	movwf	___flmul@a
  3736  064B  120A  158A  213C  120A  118A  	fcall	___flmul
  3737  0650  1283               	bcf	3,5	;RP0=0, select bank0
  3738  0651  1303               	bcf	3,6	;RP1=0, select bank0
  3739  0652  082B               	movf	?___flmul+3,w
  3740  0653  00D0               	movwf	_fround$1263+3
  3741  0654  082A               	movf	?___flmul+2,w
  3742  0655  00CF               	movwf	_fround$1263+2
  3743  0656  0829               	movf	?___flmul+1,w
  3744  0657  00CE               	movwf	_fround$1263+1
  3745  0658  0828               	movf	?___flmul,w
  3746  0659  00CD               	movwf	_fround$1263
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3749  065A  300A               	movlw	10
  3750  065B  00F3               	movwf	___lwmod@divisor
  3751  065C  3000               	movlw	0
  3752  065D  00F4               	movwf	___lwmod@divisor+1
  3753  065E  0855               	movf	fround@prec,w
  3754  065F  00C6               	movwf	??_fround
  3755  0660  01C7               	clrf	??_fround+1
  3756  0661  0846               	movf	??_fround,w
  3757  0662  00F5               	movwf	___lwmod@dividend
  3758  0663  0847               	movf	??_fround+1,w
  3759  0664  00F6               	movwf	___lwmod@dividend+1
  3760  0665  160A  118A  2003  120A  118A  	fcall	___lwmod
  3761  066A  0873               	movf	?___lwmod,w
  3762  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3763  066C  1303               	bcf	3,6	;RP1=0, select bank0
  3764  066D  00C8               	movwf	??_fround+2
  3765  066E  3001               	movlw	1
  3766  066F                     u4045:
  3767  066F  1003               	clrc
  3768  0670  0DC8               	rlf	??_fround+2,f
  3769  0671  3EFF               	addlw	-1
  3770  0672  1D03               	skipz
  3771  0673  2E6F               	goto	u4045
  3772  0674  1003               	clrc
  3773  0675  0D48               	rlf	??_fround+2,w
  3774  0676  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3775  0677  0084               	movwf	4
  3776  0678  160A  158A  2000  120A  118A  	fcall	stringdir
  3777  067D  00C9               	movwf	??_fround+3
  3778  067E  160A  158A  2000  120A  118A  	fcall	stringdir
  3779  0683  00CA               	movwf	??_fround+4
  3780  0684  160A  158A  2000  120A  118A  	fcall	stringdir
  3781  0689  00CB               	movwf	??_fround+5
  3782  068A  160A  158A  2000  120A  118A  	fcall	stringdir
  3783  068F  00CC               	movwf	??_fround+6
  3784  0690  084C               	movf	??_fround+6,w
  3785  0691  00AB               	movwf	___flmul@b+3
  3786  0692  084B               	movf	??_fround+5,w
  3787  0693  00AA               	movwf	___flmul@b+2
  3788  0694  084A               	movf	??_fround+4,w
  3789  0695  00A9               	movwf	___flmul@b+1
  3790  0696  0849               	movf	??_fround+3,w
  3791  0697  00A8               	movwf	___flmul@b
  3792  0698  0850               	movf	_fround$1263+3,w
  3793  0699  00AF               	movwf	___flmul@a+3
  3794  069A  084F               	movf	_fround$1263+2,w
  3795  069B  00AE               	movwf	___flmul@a+2
  3796  069C  084E               	movf	_fround$1263+1,w
  3797  069D  00AD               	movwf	___flmul@a+1
  3798  069E  084D               	movf	_fround$1263,w
  3799  069F  00AC               	movwf	___flmul@a
  3800  06A0  120A  158A  213C  120A  118A  	fcall	___flmul
  3801  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3802  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3803  06A7  082B               	movf	?___flmul+3,w
  3804  06A8  00C5               	movwf	?_fround+3
  3805  06A9  082A               	movf	?___flmul+2,w
  3806  06AA  00C4               	movwf	?_fround+2
  3807  06AB  0829               	movf	?___flmul+1,w
  3808  06AC  00C3               	movwf	?_fround+1
  3809  06AD  0828               	movf	?___flmul,w
  3810  06AE  00C2               	movwf	?_fround
  3811  06AF  2FA4               	goto	l264
  3812  06B0                     l2687:
  3813  06B0  300B               	movlw	11
  3814  06B1  0255               	subwf	fround@prec,w
  3815  06B2  1C03               	skipc
  3816  06B3  2EB5               	goto	u4051
  3817  06B4  2EB6               	goto	u4050
  3818  06B5                     u4051:
  3819  06B5  2F61               	goto	l2693
  3820  06B6                     u4050:
  3821  06B6                     l2689:
  3822                           
  3823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3824  06B6  303F               	movlw	63
  3825  06B7  00AB               	movwf	___flmul@b+3
  3826  06B8  3000               	movlw	0
  3827  06B9  00AA               	movwf	___flmul@b+2
  3828  06BA  3000               	movlw	0
  3829  06BB  00A9               	movwf	___flmul@b+1
  3830  06BC  3000               	movlw	0
  3831  06BD  00A8               	movwf	___flmul@b
  3832  06BE  300A               	movlw	10
  3833  06BF  00A0               	movwf	___lwdiv@divisor
  3834  06C0  3000               	movlw	0
  3835  06C1  00A1               	movwf	___lwdiv@divisor+1
  3836  06C2  0855               	movf	fround@prec,w
  3837  06C3  00C6               	movwf	??_fround
  3838  06C4  01C7               	clrf	??_fround+1
  3839  06C5  0846               	movf	??_fround,w
  3840  06C6  00A2               	movwf	___lwdiv@dividend
  3841  06C7  0847               	movf	??_fround+1,w
  3842  06C8  00A3               	movwf	___lwdiv@dividend+1
  3843  06C9  160A  158A  24D3  120A  118A  	fcall	___lwdiv
  3844  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3845  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3846  06D0  0820               	movf	?___lwdiv,w
  3847  06D1  00C8               	movwf	??_fround+2
  3848  06D2  3001               	movlw	1
  3849  06D3                     u4065:
  3850  06D3  1003               	clrc
  3851  06D4  0DC8               	rlf	??_fround+2,f
  3852  06D5  3EFF               	addlw	-1
  3853  06D6  1D03               	skipz
  3854  06D7  2ED3               	goto	u4065
  3855  06D8  1003               	clrc
  3856  06D9  0D48               	rlf	??_fround+2,w
  3857  06DA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3858  06DB  0084               	movwf	4
  3859  06DC  160A  158A  2000  120A  118A  	fcall	stringdir
  3860  06E1  00C9               	movwf	??_fround+3
  3861  06E2  160A  158A  2000  120A  118A  	fcall	stringdir
  3862  06E7  00CA               	movwf	??_fround+4
  3863  06E8  160A  158A  2000  120A  118A  	fcall	stringdir
  3864  06ED  00CB               	movwf	??_fround+5
  3865  06EE  160A  158A  2000  120A  118A  	fcall	stringdir
  3866  06F3  00CC               	movwf	??_fround+6
  3867  06F4  084C               	movf	??_fround+6,w
  3868  06F5  00AF               	movwf	___flmul@a+3
  3869  06F6  084B               	movf	??_fround+5,w
  3870  06F7  00AE               	movwf	___flmul@a+2
  3871  06F8  084A               	movf	??_fround+4,w
  3872  06F9  00AD               	movwf	___flmul@a+1
  3873  06FA  0849               	movf	??_fround+3,w
  3874  06FB  00AC               	movwf	___flmul@a
  3875  06FC  120A  158A  213C  120A  118A  	fcall	___flmul
  3876  0701  1283               	bcf	3,5	;RP0=0, select bank0
  3877  0702  1303               	bcf	3,6	;RP1=0, select bank0
  3878  0703  082B               	movf	?___flmul+3,w
  3879  0704  00D4               	movwf	_fround$1262+3
  3880  0705  082A               	movf	?___flmul+2,w
  3881  0706  00D3               	movwf	_fround$1262+2
  3882  0707  0829               	movf	?___flmul+1,w
  3883  0708  00D2               	movwf	_fround$1262+1
  3884  0709  0828               	movf	?___flmul,w
  3885  070A  00D1               	movwf	_fround$1262
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3888  070B  300A               	movlw	10
  3889  070C  00F3               	movwf	___lwmod@divisor
  3890  070D  3000               	movlw	0
  3891  070E  00F4               	movwf	___lwmod@divisor+1
  3892  070F  0855               	movf	fround@prec,w
  3893  0710  00C6               	movwf	??_fround
  3894  0711  01C7               	clrf	??_fround+1
  3895  0712  0846               	movf	??_fround,w
  3896  0713  00F5               	movwf	___lwmod@dividend
  3897  0714  0847               	movf	??_fround+1,w
  3898  0715  00F6               	movwf	___lwmod@dividend+1
  3899  0716  160A  118A  2003  120A  118A  	fcall	___lwmod
  3900  071B  0873               	movf	?___lwmod,w
  3901  071C  1283               	bcf	3,5	;RP0=0, select bank0
  3902  071D  1303               	bcf	3,6	;RP1=0, select bank0
  3903  071E  00C8               	movwf	??_fround+2
  3904  071F  3001               	movlw	1
  3905  0720                     u4075:
  3906  0720  1003               	clrc
  3907  0721  0DC8               	rlf	??_fround+2,f
  3908  0722  3EFF               	addlw	-1
  3909  0723  1D03               	skipz
  3910  0724  2F20               	goto	u4075
  3911  0725  1003               	clrc
  3912  0726  0D48               	rlf	??_fround+2,w
  3913  0727  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3914  0728  0084               	movwf	4
  3915  0729  160A  158A  2000  120A  118A  	fcall	stringdir
  3916  072E  00C9               	movwf	??_fround+3
  3917  072F  160A  158A  2000  120A  118A  	fcall	stringdir
  3918  0734  00CA               	movwf	??_fround+4
  3919  0735  160A  158A  2000  120A  118A  	fcall	stringdir
  3920  073A  00CB               	movwf	??_fround+5
  3921  073B  160A  158A  2000  120A  118A  	fcall	stringdir
  3922  0740  00CC               	movwf	??_fround+6
  3923  0741  084C               	movf	??_fround+6,w
  3924  0742  00AB               	movwf	___flmul@b+3
  3925  0743  084B               	movf	??_fround+5,w
  3926  0744  00AA               	movwf	___flmul@b+2
  3927  0745  084A               	movf	??_fround+4,w
  3928  0746  00A9               	movwf	___flmul@b+1
  3929  0747  0849               	movf	??_fround+3,w
  3930  0748  00A8               	movwf	___flmul@b
  3931  0749  0854               	movf	_fround$1262+3,w
  3932  074A  00AF               	movwf	___flmul@a+3
  3933  074B  0853               	movf	_fround$1262+2,w
  3934  074C  00AE               	movwf	___flmul@a+2
  3935  074D  0852               	movf	_fround$1262+1,w
  3936  074E  00AD               	movwf	___flmul@a+1
  3937  074F  0851               	movf	_fround$1262,w
  3938  0750  00AC               	movwf	___flmul@a
  3939  0751  120A  158A  213C  120A  118A  	fcall	___flmul
  3940  0756  1283               	bcf	3,5	;RP0=0, select bank0
  3941  0757  1303               	bcf	3,6	;RP1=0, select bank0
  3942  0758  082B               	movf	?___flmul+3,w
  3943  0759  00C5               	movwf	?_fround+3
  3944  075A  082A               	movf	?___flmul+2,w
  3945  075B  00C4               	movwf	?_fround+2
  3946  075C  0829               	movf	?___flmul+1,w
  3947  075D  00C3               	movwf	?_fround+1
  3948  075E  0828               	movf	?___flmul,w
  3949  075F  00C2               	movwf	?_fround
  3950  0760  2FA4               	goto	l264
  3951  0761                     l2693:
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3954  0761  303F               	movlw	63
  3955  0762  00AB               	movwf	___flmul@b+3
  3956  0763  3000               	movlw	0
  3957  0764  00AA               	movwf	___flmul@b+2
  3958  0765  3000               	movlw	0
  3959  0766  00A9               	movwf	___flmul@b+1
  3960  0767  3000               	movlw	0
  3961  0768  00A8               	movwf	___flmul@b
  3962  0769  0855               	movf	fround@prec,w
  3963  076A  00C6               	movwf	??_fround
  3964  076B  3001               	movlw	1
  3965  076C                     u4085:
  3966  076C  1003               	clrc
  3967  076D  0DC6               	rlf	??_fround,f
  3968  076E  3EFF               	addlw	-1
  3969  076F  1D03               	skipz
  3970  0770  2F6C               	goto	u4085
  3971  0771  1003               	clrc
  3972  0772  0D46               	rlf	??_fround,w
  3973  0773  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3974  0774  0084               	movwf	4
  3975  0775  160A  158A  2000  120A  118A  	fcall	stringdir
  3976  077A  00C7               	movwf	??_fround+1
  3977  077B  160A  158A  2000  120A  118A  	fcall	stringdir
  3978  0780  00C8               	movwf	??_fround+2
  3979  0781  160A  158A  2000  120A  118A  	fcall	stringdir
  3980  0786  00C9               	movwf	??_fround+3
  3981  0787  160A  158A  2000  120A  118A  	fcall	stringdir
  3982  078C  00CA               	movwf	??_fround+4
  3983  078D  084A               	movf	??_fround+4,w
  3984  078E  00AF               	movwf	___flmul@a+3
  3985  078F  0849               	movf	??_fround+3,w
  3986  0790  00AE               	movwf	___flmul@a+2
  3987  0791  0848               	movf	??_fround+2,w
  3988  0792  00AD               	movwf	___flmul@a+1
  3989  0793  0847               	movf	??_fround+1,w
  3990  0794  00AC               	movwf	___flmul@a
  3991  0795  120A  158A  213C  120A  118A  	fcall	___flmul
  3992  079A  1283               	bcf	3,5	;RP0=0, select bank0
  3993  079B  1303               	bcf	3,6	;RP1=0, select bank0
  3994  079C  082B               	movf	?___flmul+3,w
  3995  079D  00C5               	movwf	?_fround+3
  3996  079E  082A               	movf	?___flmul+2,w
  3997  079F  00C4               	movwf	?_fround+2
  3998  07A0  0829               	movf	?___flmul+1,w
  3999  07A1  00C3               	movwf	?_fround+1
  4000  07A2  0828               	movf	?___flmul,w
  4001  07A3  00C2               	movwf	?_fround
  4002  07A4                     l264:
  4003  07A4  0008               	return
  4004  07A5                     __end_of_fround:
  4005                           
  4006                           	psect	text7
  4007  1003                     __ptext7:	
  4008 ;; *************** function ___lwmod *****************
  4009 ;; Defined at:
  4010 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  divisor         2    3[COMMON] unsigned int 
  4013 ;;  dividend        2    5[COMMON] unsigned int 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  counter         1    8[COMMON] unsigned char 
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  2    3[COMMON] unsigned int 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2, status,0
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4025 ;;      Params:         4       0       0       0       0
  4026 ;;      Locals:         1       0       0       0       0
  4027 ;;      Temps:          1       0       0       0       0
  4028 ;;      Totals:         6       0       0       0       0
  4029 ;;Total ram usage:        6 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    1
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_fround
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           
  4040                           ;psect for function ___lwmod
  4041  1003                     ___lwmod:
  4042  1003                     l2307:	
  4043                           ;incstack = 0
  4044                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4045                           
  4046  1003  0873               	movf	___lwmod@divisor,w
  4047  1004  0474               	iorwf	___lwmod@divisor+1,w
  4048  1005  1903               	btfsc	3,2
  4049  1006  2808               	goto	u3091
  4050  1007  2809               	goto	u3090
  4051  1008                     u3091:
  4052  1008  2838               	goto	l2325
  4053  1009                     u3090:
  4054  1009                     l2309:
  4055  1009  01F8               	clrf	___lwmod@counter
  4056  100A  0AF8               	incf	___lwmod@counter,f
  4057  100B  2817               	goto	l2315
  4058  100C                     l2311:
  4059  100C  3001               	movlw	1
  4060  100D                     u3105:
  4061  100D  1003               	clrc
  4062  100E  0DF3               	rlf	___lwmod@divisor,f
  4063  100F  0DF4               	rlf	___lwmod@divisor+1,f
  4064  1010  3EFF               	addlw	-1
  4065  1011  1D03               	skipz
  4066  1012  280D               	goto	u3105
  4067  1013                     l2313:
  4068  1013  3001               	movlw	1
  4069  1014  00F7               	movwf	??___lwmod
  4070  1015  0877               	movf	??___lwmod,w
  4071  1016  07F8               	addwf	___lwmod@counter,f
  4072  1017                     l2315:
  4073  1017  1FF4               	btfss	___lwmod@divisor+1,7
  4074  1018  281A               	goto	u3111
  4075  1019  281B               	goto	u3110
  4076  101A                     u3111:
  4077  101A  280C               	goto	l2311
  4078  101B                     u3110:
  4079  101B                     l2317:
  4080  101B  0874               	movf	___lwmod@divisor+1,w
  4081  101C  0276               	subwf	___lwmod@dividend+1,w
  4082  101D  1D03               	skipz
  4083  101E  2821               	goto	u3125
  4084  101F  0873               	movf	___lwmod@divisor,w
  4085  1020  0275               	subwf	___lwmod@dividend,w
  4086  1021                     u3125:
  4087  1021  1C03               	skipc
  4088  1022  2824               	goto	u3121
  4089  1023  2825               	goto	u3120
  4090  1024                     u3121:
  4091  1024  282B               	goto	l2321
  4092  1025                     u3120:
  4093  1025                     l2319:
  4094  1025  0873               	movf	___lwmod@divisor,w
  4095  1026  02F5               	subwf	___lwmod@dividend,f
  4096  1027  0874               	movf	___lwmod@divisor+1,w
  4097  1028  1C03               	skipc
  4098  1029  03F6               	decf	___lwmod@dividend+1,f
  4099  102A  02F6               	subwf	___lwmod@dividend+1,f
  4100  102B                     l2321:
  4101  102B  3001               	movlw	1
  4102  102C                     u3135:
  4103  102C  1003               	clrc
  4104  102D  0CF4               	rrf	___lwmod@divisor+1,f
  4105  102E  0CF3               	rrf	___lwmod@divisor,f
  4106  102F  3EFF               	addlw	-1
  4107  1030  1D03               	skipz
  4108  1031  282C               	goto	u3135
  4109  1032                     l2323:
  4110  1032  3001               	movlw	1
  4111  1033  02F8               	subwf	___lwmod@counter,f
  4112  1034  1D03               	btfss	3,2
  4113  1035  2837               	goto	u3141
  4114  1036  2838               	goto	u3140
  4115  1037                     u3141:
  4116  1037  281B               	goto	l2317
  4117  1038                     u3140:
  4118  1038                     l2325:
  4119  1038  0876               	movf	___lwmod@dividend+1,w
  4120  1039  00F4               	movwf	?___lwmod+1
  4121  103A  0875               	movf	___lwmod@dividend,w
  4122  103B  00F3               	movwf	?___lwmod
  4123  103C                     l674:
  4124  103C  0008               	return
  4125  103D                     __end_of___lwmod:
  4126                           
  4127                           	psect	text8
  4128  1CD3                     __ptext8:	
  4129 ;; *************** function ___lwdiv *****************
  4130 ;; Defined at:
  4131 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  divisor         2    0[BANK0 ] unsigned int 
  4134 ;;  dividend        2    2[BANK0 ] unsigned int 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  quotient        2    4[BANK0 ] unsigned int 
  4137 ;;  counter         1    6[BANK0 ] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  2    0[BANK0 ] unsigned int 
  4140 ;; Registers used:
  4141 ;;		wreg, status,2, status,0
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4147 ;;      Params:         0       4       0       0       0
  4148 ;;      Locals:         0       3       0       0       0
  4149 ;;      Temps:          1       0       0       0       0
  4150 ;;      Totals:         1       7       0       0       0
  4151 ;;Total ram usage:        8 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    1
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_fround
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           
  4162                           ;psect for function ___lwdiv
  4163  1CD3                     ___lwdiv:
  4164  1CD3                     l2281:	
  4165                           ;incstack = 0
  4166                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4167                           
  4168  1CD3  1283               	bcf	3,5	;RP0=0, select bank0
  4169  1CD4  1303               	bcf	3,6	;RP1=0, select bank0
  4170  1CD5  01A4               	clrf	___lwdiv@quotient
  4171  1CD6  01A5               	clrf	___lwdiv@quotient+1
  4172  1CD7                     l2283:
  4173  1CD7  0820               	movf	___lwdiv@divisor,w
  4174  1CD8  0421               	iorwf	___lwdiv@divisor+1,w
  4175  1CD9  1903               	btfsc	3,2
  4176  1CDA  2CDC               	goto	u3021
  4177  1CDB  2CDD               	goto	u3020
  4178  1CDC                     u3021:
  4179  1CDC  2D14               	goto	l2303
  4180  1CDD                     u3020:
  4181  1CDD                     l2285:
  4182  1CDD  01A6               	clrf	___lwdiv@counter
  4183  1CDE  0AA6               	incf	___lwdiv@counter,f
  4184  1CDF  2CEB               	goto	l2291
  4185  1CE0                     l2287:
  4186  1CE0  3001               	movlw	1
  4187  1CE1                     u3035:
  4188  1CE1  1003               	clrc
  4189  1CE2  0DA0               	rlf	___lwdiv@divisor,f
  4190  1CE3  0DA1               	rlf	___lwdiv@divisor+1,f
  4191  1CE4  3EFF               	addlw	-1
  4192  1CE5  1D03               	skipz
  4193  1CE6  2CE1               	goto	u3035
  4194  1CE7                     l2289:
  4195  1CE7  3001               	movlw	1
  4196  1CE8  00F9               	movwf	??___lwdiv
  4197  1CE9  0879               	movf	??___lwdiv,w
  4198  1CEA  07A6               	addwf	___lwdiv@counter,f
  4199  1CEB                     l2291:
  4200  1CEB  1FA1               	btfss	___lwdiv@divisor+1,7
  4201  1CEC  2CEE               	goto	u3041
  4202  1CED  2CEF               	goto	u3040
  4203  1CEE                     u3041:
  4204  1CEE  2CE0               	goto	l2287
  4205  1CEF                     u3040:
  4206  1CEF                     l2293:
  4207  1CEF  3001               	movlw	1
  4208  1CF0                     u3055:
  4209  1CF0  1003               	clrc
  4210  1CF1  0DA4               	rlf	___lwdiv@quotient,f
  4211  1CF2  0DA5               	rlf	___lwdiv@quotient+1,f
  4212  1CF3  3EFF               	addlw	-1
  4213  1CF4  1D03               	skipz
  4214  1CF5  2CF0               	goto	u3055
  4215  1CF6  0821               	movf	___lwdiv@divisor+1,w
  4216  1CF7  0223               	subwf	___lwdiv@dividend+1,w
  4217  1CF8  1D03               	skipz
  4218  1CF9  2CFC               	goto	u3065
  4219  1CFA  0820               	movf	___lwdiv@divisor,w
  4220  1CFB  0222               	subwf	___lwdiv@dividend,w
  4221  1CFC                     u3065:
  4222  1CFC  1C03               	skipc
  4223  1CFD  2CFF               	goto	u3061
  4224  1CFE  2D00               	goto	u3060
  4225  1CFF                     u3061:
  4226  1CFF  2D07               	goto	l2299
  4227  1D00                     u3060:
  4228  1D00                     l2295:
  4229  1D00  0820               	movf	___lwdiv@divisor,w
  4230  1D01  02A2               	subwf	___lwdiv@dividend,f
  4231  1D02  0821               	movf	___lwdiv@divisor+1,w
  4232  1D03  1C03               	skipc
  4233  1D04  03A3               	decf	___lwdiv@dividend+1,f
  4234  1D05  02A3               	subwf	___lwdiv@dividend+1,f
  4235  1D06                     l2297:
  4236  1D06  1424               	bsf	___lwdiv@quotient,0
  4237  1D07                     l2299:
  4238  1D07  3001               	movlw	1
  4239  1D08                     u3075:
  4240  1D08  1003               	clrc
  4241  1D09  0CA1               	rrf	___lwdiv@divisor+1,f
  4242  1D0A  0CA0               	rrf	___lwdiv@divisor,f
  4243  1D0B  3EFF               	addlw	-1
  4244  1D0C  1D03               	skipz
  4245  1D0D  2D08               	goto	u3075
  4246  1D0E                     l2301:
  4247  1D0E  3001               	movlw	1
  4248  1D0F  02A6               	subwf	___lwdiv@counter,f
  4249  1D10  1D03               	btfss	3,2
  4250  1D11  2D13               	goto	u3081
  4251  1D12  2D14               	goto	u3080
  4252  1D13                     u3081:
  4253  1D13  2CEF               	goto	l2293
  4254  1D14                     u3080:
  4255  1D14                     l2303:
  4256  1D14  0825               	movf	___lwdiv@quotient+1,w
  4257  1D15  00A1               	movwf	?___lwdiv+1
  4258  1D16  0824               	movf	___lwdiv@quotient,w
  4259  1D17  00A0               	movwf	?___lwdiv
  4260  1D18                     l664:
  4261  1D18  0008               	return
  4262  1D19                     __end_of___lwdiv:
  4263                           
  4264                           	psect	text9
  4265  10F9                     __ptext9:	
  4266 ;; *************** function __tdiv_to_l_ *****************
  4267 ;; Defined at:
  4268 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  f1              4    3[COMMON] float 
  4271 ;;  f2              4    7[COMMON] float 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  quot            4    4[BANK0 ] unsigned long 
  4274 ;;  exp1            1    9[BANK0 ] unsigned char 
  4275 ;;  cntr            1    8[BANK0 ] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  4    3[COMMON] unsigned long 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4285 ;;      Params:         8       0       0       0       0
  4286 ;;      Locals:         0       6       0       0       0
  4287 ;;      Temps:          0       4       0       0       0
  4288 ;;      Totals:         8      10       0       0       0
  4289 ;;Total ram usage:       18 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    1
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_sprintf
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function __tdiv_to_l_
  4301  10F9                     __tdiv_to_l_:
  4302  10F9                     l2749:	
  4303                           ;incstack = 0
  4304                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4305                           
  4306  10F9  0873               	movf	__tdiv_to_l_@f1,w
  4307  10FA  1283               	bcf	3,5	;RP0=0, select bank0
  4308  10FB  1303               	bcf	3,6	;RP1=0, select bank0
  4309  10FC  00A0               	movwf	??__tdiv_to_l_
  4310  10FD  0874               	movf	__tdiv_to_l_@f1+1,w
  4311  10FE  00A1               	movwf	??__tdiv_to_l_+1
  4312  10FF  0875               	movf	__tdiv_to_l_@f1+2,w
  4313  1100  00A2               	movwf	??__tdiv_to_l_+2
  4314  1101  1003               	clrc
  4315  1102  0D21               	rlf	??__tdiv_to_l_+1,w
  4316  1103  0D22               	rlf	??__tdiv_to_l_+2,w
  4317  1104  00A3               	movwf	??__tdiv_to_l_+3
  4318  1105  0823               	movf	??__tdiv_to_l_+3,w
  4319  1106  00A9               	movwf	__tdiv_to_l_@exp1
  4320  1107  0829               	movf	__tdiv_to_l_@exp1,w
  4321  1108  1D03               	btfss	3,2
  4322  1109  290B               	goto	u4281
  4323  110A  290C               	goto	u4280
  4324  110B                     u4281:
  4325  110B  2915               	goto	l2755
  4326  110C                     u4280:
  4327  110C                     l2751:
  4328  110C  3000               	movlw	0
  4329  110D  00F6               	movwf	?__tdiv_to_l_+3
  4330  110E  3000               	movlw	0
  4331  110F  00F5               	movwf	?__tdiv_to_l_+2
  4332  1110  3000               	movlw	0
  4333  1111  00F4               	movwf	?__tdiv_to_l_+1
  4334  1112  3000               	movlw	0
  4335  1113  00F3               	movwf	?__tdiv_to_l_
  4336  1114  29B5               	goto	l575
  4337  1115                     l2755:
  4338  1115  0877               	movf	__tdiv_to_l_@f2,w
  4339  1116  00A0               	movwf	??__tdiv_to_l_
  4340  1117  0878               	movf	__tdiv_to_l_@f2+1,w
  4341  1118  00A1               	movwf	??__tdiv_to_l_+1
  4342  1119  0879               	movf	__tdiv_to_l_@f2+2,w
  4343  111A  00A2               	movwf	??__tdiv_to_l_+2
  4344  111B  1003               	clrc
  4345  111C  0D21               	rlf	??__tdiv_to_l_+1,w
  4346  111D  0D22               	rlf	??__tdiv_to_l_+2,w
  4347  111E  00A3               	movwf	??__tdiv_to_l_+3
  4348  111F  0823               	movf	??__tdiv_to_l_+3,w
  4349  1120  00A8               	movwf	__tdiv_to_l_@cntr
  4350  1121  0828               	movf	__tdiv_to_l_@cntr,w
  4351  1122  1D03               	btfss	3,2
  4352  1123  2925               	goto	u4291
  4353  1124  2926               	goto	u4290
  4354  1125                     u4291:
  4355  1125  2927               	goto	l576
  4356  1126                     u4290:
  4357  1126  290C               	goto	l2751
  4358  1127                     l576:
  4359  1127  17F4               	bsf	__tdiv_to_l_@f1+1,7
  4360  1128                     l2761:
  4361  1128  30FF               	movlw	255
  4362  1129  05F3               	andwf	__tdiv_to_l_@f1,f
  4363  112A  30FF               	movlw	255
  4364  112B  05F4               	andwf	__tdiv_to_l_@f1+1,f
  4365  112C  3000               	movlw	0
  4366  112D  05F5               	andwf	__tdiv_to_l_@f1+2,f
  4367  112E                     l2763:
  4368  112E  17F8               	bsf	__tdiv_to_l_@f2+1,7
  4369  112F  30FF               	movlw	255
  4370  1130  05F7               	andwf	__tdiv_to_l_@f2,f
  4371  1131  30FF               	movlw	255
  4372  1132  05F8               	andwf	__tdiv_to_l_@f2+1,f
  4373  1133  3000               	movlw	0
  4374  1134  05F9               	andwf	__tdiv_to_l_@f2+2,f
  4375  1135  3000               	movlw	0
  4376  1136  00A7               	movwf	__tdiv_to_l_@quot+3
  4377  1137  3000               	movlw	0
  4378  1138  00A6               	movwf	__tdiv_to_l_@quot+2
  4379  1139  3000               	movlw	0
  4380  113A  00A5               	movwf	__tdiv_to_l_@quot+1
  4381  113B  3000               	movlw	0
  4382  113C  00A4               	movwf	__tdiv_to_l_@quot
  4383  113D                     l2765:
  4384  113D  307F               	movlw	127
  4385  113E  02A9               	subwf	__tdiv_to_l_@exp1,f
  4386  113F                     l2767:
  4387  113F  3098               	movlw	152
  4388  1140  0728               	addwf	__tdiv_to_l_@cntr,w
  4389  1141  00A0               	movwf	??__tdiv_to_l_
  4390  1142  0820               	movf	??__tdiv_to_l_,w
  4391  1143  02A9               	subwf	__tdiv_to_l_@exp1,f
  4392  1144  3018               	movlw	24
  4393  1145  00A0               	movwf	??__tdiv_to_l_
  4394  1146  0820               	movf	??__tdiv_to_l_,w
  4395  1147  00A8               	movwf	__tdiv_to_l_@cntr
  4396  1148                     l2769:
  4397  1148  3001               	movlw	1
  4398  1149  00A0               	movwf	??__tdiv_to_l_
  4399  114A                     u4305:
  4400  114A  1003               	clrc
  4401  114B  0DA4               	rlf	__tdiv_to_l_@quot,f
  4402  114C  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4403  114D  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4404  114E  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4405  114F  0BA0               	decfsz	??__tdiv_to_l_,f
  4406  1150  294A               	goto	u4305
  4407  1151                     l2771:
  4408  1151  0879               	movf	__tdiv_to_l_@f2+2,w
  4409  1152  0275               	subwf	__tdiv_to_l_@f1+2,w
  4410  1153  1D03               	skipz
  4411  1154  295B               	goto	u4315
  4412  1155  0878               	movf	__tdiv_to_l_@f2+1,w
  4413  1156  0274               	subwf	__tdiv_to_l_@f1+1,w
  4414  1157  1D03               	skipz
  4415  1158  295B               	goto	u4315
  4416  1159  0877               	movf	__tdiv_to_l_@f2,w
  4417  115A  0273               	subwf	__tdiv_to_l_@f1,w
  4418  115B                     u4315:
  4419  115B  1C03               	skipc
  4420  115C  295E               	goto	u4311
  4421  115D  295F               	goto	u4310
  4422  115E                     u4311:
  4423  115E  296A               	goto	l2777
  4424  115F                     u4310:
  4425  115F                     l2773:
  4426  115F  0877               	movf	__tdiv_to_l_@f2,w
  4427  1160  02F3               	subwf	__tdiv_to_l_@f1,f
  4428  1161  0878               	movf	__tdiv_to_l_@f2+1,w
  4429  1162  1C03               	skipc
  4430  1163  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  4431  1164  02F4               	subwf	__tdiv_to_l_@f1+1,f
  4432  1165  0879               	movf	__tdiv_to_l_@f2+2,w
  4433  1166  1C03               	skipc
  4434  1167  0A79               	incf	__tdiv_to_l_@f2+2,w
  4435  1168  02F5               	subwf	__tdiv_to_l_@f1+2,f
  4436  1169                     l2775:
  4437  1169  1424               	bsf	__tdiv_to_l_@quot,0
  4438  116A                     l2777:
  4439  116A  3001               	movlw	1
  4440  116B                     u4325:
  4441  116B  1003               	clrc
  4442  116C  0DF3               	rlf	__tdiv_to_l_@f1,f
  4443  116D  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  4444  116E  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  4445  116F  3EFF               	addlw	-1
  4446  1170  1D03               	skipz
  4447  1171  296B               	goto	u4325
  4448  1172                     l2779:
  4449  1172  3001               	movlw	1
  4450  1173  02A8               	subwf	__tdiv_to_l_@cntr,f
  4451  1174  1D03               	btfss	3,2
  4452  1175  2977               	goto	u4331
  4453  1176  2978               	goto	u4330
  4454  1177                     u4331:
  4455  1177  2948               	goto	l2769
  4456  1178                     u4330:
  4457  1178                     l579:
  4458  1178  1FA9               	btfss	__tdiv_to_l_@exp1,7
  4459  1179  297B               	goto	u4341
  4460  117A  297C               	goto	u4340
  4461  117B                     u4341:
  4462  117B  2996               	goto	l2789
  4463  117C                     u4340:
  4464  117C                     l2781:
  4465  117C  0829               	movf	__tdiv_to_l_@exp1,w
  4466  117D  3A80               	xorlw	128
  4467  117E  3E97               	addlw	151
  4468  117F  1803               	skipnc
  4469  1180  2982               	goto	u4351
  4470  1181  2983               	goto	u4350
  4471  1182                     u4351:
  4472  1182  2984               	goto	l2787
  4473  1183                     u4350:
  4474  1183  290C               	goto	l2751
  4475  1184                     l2787:
  4476  1184  3001               	movlw	1
  4477  1185                     u4365:
  4478  1185  1003               	clrc
  4479  1186  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  4480  1187  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  4481  1188  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  4482  1189  0CA4               	rrf	__tdiv_to_l_@quot,f
  4483  118A  3EFF               	addlw	-1
  4484  118B  1D03               	skipz
  4485  118C  2985               	goto	u4365
  4486  118D  3001               	movlw	1
  4487  118E  00A0               	movwf	??__tdiv_to_l_
  4488  118F  0820               	movf	??__tdiv_to_l_,w
  4489  1190  07A9               	addwf	__tdiv_to_l_@exp1,f
  4490  1191  1D03               	btfss	3,2
  4491  1192  2994               	goto	u4371
  4492  1193  2995               	goto	u4370
  4493  1194                     u4371:
  4494  1194  2984               	goto	l2787
  4495  1195                     u4370:
  4496  1195  29AD               	goto	l2797
  4497  1196                     l2789:
  4498  1196  3018               	movlw	24
  4499  1197  0229               	subwf	__tdiv_to_l_@exp1,w
  4500  1198  1C03               	skipc
  4501  1199  299B               	goto	u4381
  4502  119A  299C               	goto	u4380
  4503  119B                     u4381:
  4504  119B  29A8               	goto	l586
  4505  119C                     u4380:
  4506  119C  290C               	goto	l2751
  4507  119D                     l2795:
  4508  119D  3001               	movlw	1
  4509  119E  00A0               	movwf	??__tdiv_to_l_
  4510  119F                     u4395:
  4511  119F  1003               	clrc
  4512  11A0  0DA4               	rlf	__tdiv_to_l_@quot,f
  4513  11A1  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4514  11A2  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4515  11A3  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4516  11A4  0BA0               	decfsz	??__tdiv_to_l_,f
  4517  11A5  299F               	goto	u4395
  4518  11A6  3001               	movlw	1
  4519  11A7  02A9               	subwf	__tdiv_to_l_@exp1,f
  4520  11A8                     l586:
  4521  11A8  0829               	movf	__tdiv_to_l_@exp1,w
  4522  11A9  1D03               	btfss	3,2
  4523  11AA  29AC               	goto	u4401
  4524  11AB  29AD               	goto	u4400
  4525  11AC                     u4401:
  4526  11AC  299D               	goto	l2795
  4527  11AD                     u4400:
  4528  11AD                     l2797:
  4529  11AD  0827               	movf	__tdiv_to_l_@quot+3,w
  4530  11AE  00F6               	movwf	?__tdiv_to_l_+3
  4531  11AF  0826               	movf	__tdiv_to_l_@quot+2,w
  4532  11B0  00F5               	movwf	?__tdiv_to_l_+2
  4533  11B1  0825               	movf	__tdiv_to_l_@quot+1,w
  4534  11B2  00F4               	movwf	?__tdiv_to_l_+1
  4535  11B3  0824               	movf	__tdiv_to_l_@quot,w
  4536  11B4  00F3               	movwf	?__tdiv_to_l_
  4537  11B5                     l575:
  4538  11B5  0008               	return
  4539  11B6                     __end_of__tdiv_to_l_:
  4540                           
  4541                           	psect	text10
  4542  11B6                     __ptext10:	
  4543 ;; *************** function __div_to_l_ *****************
  4544 ;; Defined at:
  4545 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  f1              4    3[COMMON] unsigned long 
  4548 ;;  f2              4    7[COMMON] unsigned long 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  quot            4    1[BANK0 ] unsigned long 
  4551 ;;  exp1            1    6[BANK0 ] unsigned char 
  4552 ;;  cntr            1    5[BANK0 ] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  4    3[COMMON] unsigned long 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         8       0       0       0       0
  4563 ;;      Locals:         0       6       0       0       0
  4564 ;;      Temps:          0       1       0       0       0
  4565 ;;      Totals:         8       7       0       0       0
  4566 ;;Total ram usage:       15 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    1
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_sprintf
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function __div_to_l_
  4578  11B6                     __div_to_l_:
  4579  11B6                     l2801:	
  4580                           ;incstack = 0
  4581                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4582                           
  4583  11B6  1003               	clrc
  4584  11B7  0D75               	rlf	__div_to_l_@f1+2,w
  4585  11B8  0D76               	rlf	__div_to_l_@f1+3,w
  4586  11B9  1283               	bcf	3,5	;RP0=0, select bank0
  4587  11BA  1303               	bcf	3,6	;RP1=0, select bank0
  4588  11BB  00A0               	movwf	??__div_to_l_
  4589  11BC  0820               	movf	??__div_to_l_,w
  4590  11BD  00A6               	movwf	__div_to_l_@exp1
  4591  11BE  0826               	movf	__div_to_l_@exp1,w
  4592  11BF  1D03               	btfss	3,2
  4593  11C0  29C2               	goto	u4411
  4594  11C1  29C3               	goto	u4410
  4595  11C2                     u4411:
  4596  11C2  29CC               	goto	l2807
  4597  11C3                     u4410:
  4598  11C3                     l2803:
  4599  11C3  3000               	movlw	0
  4600  11C4  00F6               	movwf	?__div_to_l_+3
  4601  11C5  3000               	movlw	0
  4602  11C6  00F5               	movwf	?__div_to_l_+2
  4603  11C7  3000               	movlw	0
  4604  11C8  00F4               	movwf	?__div_to_l_+1
  4605  11C9  3000               	movlw	0
  4606  11CA  00F3               	movwf	?__div_to_l_
  4607  11CB  2A73               	goto	l528
  4608  11CC                     l2807:
  4609  11CC  1003               	clrc
  4610  11CD  0D79               	rlf	__div_to_l_@f2+2,w
  4611  11CE  0D7A               	rlf	__div_to_l_@f2+3,w
  4612  11CF  00A0               	movwf	??__div_to_l_
  4613  11D0  0820               	movf	??__div_to_l_,w
  4614  11D1  00A5               	movwf	__div_to_l_@cntr
  4615  11D2  0825               	movf	__div_to_l_@cntr,w
  4616  11D3  1D03               	btfss	3,2
  4617  11D4  29D6               	goto	u4421
  4618  11D5  29D7               	goto	u4420
  4619  11D6                     u4421:
  4620  11D6  29D8               	goto	l529
  4621  11D7                     u4420:
  4622  11D7  29C3               	goto	l2803
  4623  11D8                     l529:
  4624  11D8  17F5               	bsf	__div_to_l_@f1+2,7
  4625  11D9                     l2813:
  4626  11D9  30FF               	movlw	255
  4627  11DA  05F3               	andwf	__div_to_l_@f1,f
  4628  11DB  30FF               	movlw	255
  4629  11DC  05F4               	andwf	__div_to_l_@f1+1,f
  4630  11DD  30FF               	movlw	255
  4631  11DE  05F5               	andwf	__div_to_l_@f1+2,f
  4632  11DF  3000               	movlw	0
  4633  11E0  05F6               	andwf	__div_to_l_@f1+3,f
  4634  11E1                     l2815:
  4635  11E1  17F9               	bsf	__div_to_l_@f2+2,7
  4636  11E2  30FF               	movlw	255
  4637  11E3  05F7               	andwf	__div_to_l_@f2,f
  4638  11E4  30FF               	movlw	255
  4639  11E5  05F8               	andwf	__div_to_l_@f2+1,f
  4640  11E6  30FF               	movlw	255
  4641  11E7  05F9               	andwf	__div_to_l_@f2+2,f
  4642  11E8  3000               	movlw	0
  4643  11E9  05FA               	andwf	__div_to_l_@f2+3,f
  4644  11EA  3000               	movlw	0
  4645  11EB  00A4               	movwf	__div_to_l_@quot+3
  4646  11EC  3000               	movlw	0
  4647  11ED  00A3               	movwf	__div_to_l_@quot+2
  4648  11EE  3000               	movlw	0
  4649  11EF  00A2               	movwf	__div_to_l_@quot+1
  4650  11F0  3000               	movlw	0
  4651  11F1  00A1               	movwf	__div_to_l_@quot
  4652  11F2                     l2817:
  4653  11F2  307F               	movlw	127
  4654  11F3  02A6               	subwf	__div_to_l_@exp1,f
  4655  11F4                     l2819:
  4656  11F4  30A0               	movlw	160
  4657  11F5  0725               	addwf	__div_to_l_@cntr,w
  4658  11F6  00A0               	movwf	??__div_to_l_
  4659  11F7  0820               	movf	??__div_to_l_,w
  4660  11F8  02A6               	subwf	__div_to_l_@exp1,f
  4661  11F9  3020               	movlw	32
  4662  11FA  00A0               	movwf	??__div_to_l_
  4663  11FB  0820               	movf	??__div_to_l_,w
  4664  11FC  00A5               	movwf	__div_to_l_@cntr
  4665  11FD                     l2821:
  4666  11FD  3001               	movlw	1
  4667  11FE  00A0               	movwf	??__div_to_l_
  4668  11FF                     u4435:
  4669  11FF  1003               	clrc
  4670  1200  0DA1               	rlf	__div_to_l_@quot,f
  4671  1201  0DA2               	rlf	__div_to_l_@quot+1,f
  4672  1202  0DA3               	rlf	__div_to_l_@quot+2,f
  4673  1203  0DA4               	rlf	__div_to_l_@quot+3,f
  4674  1204  0BA0               	decfsz	??__div_to_l_,f
  4675  1205  29FF               	goto	u4435
  4676  1206                     l2823:
  4677  1206  087A               	movf	__div_to_l_@f2+3,w
  4678  1207  0276               	subwf	__div_to_l_@f1+3,w
  4679  1208  1D03               	skipz
  4680  1209  2A14               	goto	u4445
  4681  120A  0879               	movf	__div_to_l_@f2+2,w
  4682  120B  0275               	subwf	__div_to_l_@f1+2,w
  4683  120C  1D03               	skipz
  4684  120D  2A14               	goto	u4445
  4685  120E  0878               	movf	__div_to_l_@f2+1,w
  4686  120F  0274               	subwf	__div_to_l_@f1+1,w
  4687  1210  1D03               	skipz
  4688  1211  2A14               	goto	u4445
  4689  1212  0877               	movf	__div_to_l_@f2,w
  4690  1213  0273               	subwf	__div_to_l_@f1,w
  4691  1214                     u4445:
  4692  1214  1C03               	skipc
  4693  1215  2A17               	goto	u4441
  4694  1216  2A18               	goto	u4440
  4695  1217                     u4441:
  4696  1217  2A27               	goto	l2829
  4697  1218                     u4440:
  4698  1218                     l2825:
  4699  1218  0877               	movf	__div_to_l_@f2,w
  4700  1219  02F3               	subwf	__div_to_l_@f1,f
  4701  121A  0878               	movf	__div_to_l_@f2+1,w
  4702  121B  1C03               	skipc
  4703  121C  0F78               	incfsz	__div_to_l_@f2+1,w
  4704  121D  02F4               	subwf	__div_to_l_@f1+1,f
  4705  121E  0879               	movf	__div_to_l_@f2+2,w
  4706  121F  1C03               	skipc
  4707  1220  0F79               	incfsz	__div_to_l_@f2+2,w
  4708  1221  02F5               	subwf	__div_to_l_@f1+2,f
  4709  1222  087A               	movf	__div_to_l_@f2+3,w
  4710  1223  1C03               	skipc
  4711  1224  0F7A               	incfsz	__div_to_l_@f2+3,w
  4712  1225  02F6               	subwf	__div_to_l_@f1+3,f
  4713  1226                     l2827:
  4714  1226  1421               	bsf	__div_to_l_@quot,0
  4715  1227                     l2829:
  4716  1227  3001               	movlw	1
  4717  1228  00A0               	movwf	??__div_to_l_
  4718  1229                     u4455:
  4719  1229  1003               	clrc
  4720  122A  0DF3               	rlf	__div_to_l_@f1,f
  4721  122B  0DF4               	rlf	__div_to_l_@f1+1,f
  4722  122C  0DF5               	rlf	__div_to_l_@f1+2,f
  4723  122D  0DF6               	rlf	__div_to_l_@f1+3,f
  4724  122E  0BA0               	decfsz	??__div_to_l_,f
  4725  122F  2A29               	goto	u4455
  4726  1230                     l2831:
  4727  1230  3001               	movlw	1
  4728  1231  02A5               	subwf	__div_to_l_@cntr,f
  4729  1232  1D03               	btfss	3,2
  4730  1233  2A35               	goto	u4461
  4731  1234  2A36               	goto	u4460
  4732  1235                     u4461:
  4733  1235  29FD               	goto	l2821
  4734  1236                     u4460:
  4735  1236                     l532:
  4736  1236  1FA6               	btfss	__div_to_l_@exp1,7
  4737  1237  2A39               	goto	u4471
  4738  1238  2A3A               	goto	u4470
  4739  1239                     u4471:
  4740  1239  2A54               	goto	l2841
  4741  123A                     u4470:
  4742  123A                     l2833:
  4743  123A  0826               	movf	__div_to_l_@exp1,w
  4744  123B  3A80               	xorlw	128
  4745  123C  3E9F               	addlw	159
  4746  123D  1803               	skipnc
  4747  123E  2A40               	goto	u4481
  4748  123F  2A41               	goto	u4480
  4749  1240                     u4481:
  4750  1240  2A42               	goto	l2839
  4751  1241                     u4480:
  4752  1241  29C3               	goto	l2803
  4753  1242                     l2839:
  4754  1242  3001               	movlw	1
  4755  1243                     u4495:
  4756  1243  1003               	clrc
  4757  1244  0CA4               	rrf	__div_to_l_@quot+3,f
  4758  1245  0CA3               	rrf	__div_to_l_@quot+2,f
  4759  1246  0CA2               	rrf	__div_to_l_@quot+1,f
  4760  1247  0CA1               	rrf	__div_to_l_@quot,f
  4761  1248  3EFF               	addlw	-1
  4762  1249  1D03               	skipz
  4763  124A  2A43               	goto	u4495
  4764  124B  3001               	movlw	1
  4765  124C  00A0               	movwf	??__div_to_l_
  4766  124D  0820               	movf	??__div_to_l_,w
  4767  124E  07A6               	addwf	__div_to_l_@exp1,f
  4768  124F  1D03               	btfss	3,2
  4769  1250  2A52               	goto	u4501
  4770  1251  2A53               	goto	u4500
  4771  1252                     u4501:
  4772  1252  2A42               	goto	l2839
  4773  1253                     u4500:
  4774  1253  2A6B               	goto	l2849
  4775  1254                     l2841:
  4776  1254  3020               	movlw	32
  4777  1255  0226               	subwf	__div_to_l_@exp1,w
  4778  1256  1C03               	skipc
  4779  1257  2A59               	goto	u4511
  4780  1258  2A5A               	goto	u4510
  4781  1259                     u4511:
  4782  1259  2A66               	goto	l539
  4783  125A                     u4510:
  4784  125A  29C3               	goto	l2803
  4785  125B                     l2847:
  4786  125B  3001               	movlw	1
  4787  125C  00A0               	movwf	??__div_to_l_
  4788  125D                     u4525:
  4789  125D  1003               	clrc
  4790  125E  0DA1               	rlf	__div_to_l_@quot,f
  4791  125F  0DA2               	rlf	__div_to_l_@quot+1,f
  4792  1260  0DA3               	rlf	__div_to_l_@quot+2,f
  4793  1261  0DA4               	rlf	__div_to_l_@quot+3,f
  4794  1262  0BA0               	decfsz	??__div_to_l_,f
  4795  1263  2A5D               	goto	u4525
  4796  1264  3001               	movlw	1
  4797  1265  02A6               	subwf	__div_to_l_@exp1,f
  4798  1266                     l539:
  4799  1266  0826               	movf	__div_to_l_@exp1,w
  4800  1267  1D03               	btfss	3,2
  4801  1268  2A6A               	goto	u4531
  4802  1269  2A6B               	goto	u4530
  4803  126A                     u4531:
  4804  126A  2A5B               	goto	l2847
  4805  126B                     u4530:
  4806  126B                     l2849:
  4807  126B  0824               	movf	__div_to_l_@quot+3,w
  4808  126C  00F6               	movwf	?__div_to_l_+3
  4809  126D  0823               	movf	__div_to_l_@quot+2,w
  4810  126E  00F5               	movwf	?__div_to_l_+2
  4811  126F  0822               	movf	__div_to_l_@quot+1,w
  4812  1270  00F4               	movwf	?__div_to_l_+1
  4813  1271  0821               	movf	__div_to_l_@quot,w
  4814  1272  00F3               	movwf	?__div_to_l_
  4815  1273                     l528:
  4816  1273  0008               	return
  4817  1274                     __end_of__div_to_l_:
  4818                           
  4819                           	psect	text11
  4820  1C5D                     __ptext11:	
  4821 ;; *************** function ___wmul *****************
  4822 ;; Defined at:
  4823 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  multiplier      2    3[COMMON] unsigned int 
  4826 ;;  multiplicand    2    5[COMMON] unsigned int 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  product         2    7[COMMON] unsigned int 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  2    3[COMMON] unsigned int 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4838 ;;      Params:         4       0       0       0       0
  4839 ;;      Locals:         2       0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0
  4841 ;;      Totals:         6       0       0       0       0
  4842 ;;Total ram usage:        6 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_sprintf
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           
  4853                           ;psect for function ___wmul
  4854  1C5D                     ___wmul:
  4855  1C5D                     l2853:	
  4856                           ;incstack = 0
  4857                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4858                           
  4859  1C5D  01F7               	clrf	___wmul@product
  4860  1C5E  01F8               	clrf	___wmul@product+1
  4861  1C5F                     l2855:
  4862  1C5F  1C73               	btfss	___wmul@multiplier,0
  4863  1C60  2C62               	goto	u4541
  4864  1C61  2C63               	goto	u4540
  4865  1C62                     u4541:
  4866  1C62  2C69               	goto	l358
  4867  1C63                     u4540:
  4868  1C63                     l2857:
  4869  1C63  0875               	movf	___wmul@multiplicand,w
  4870  1C64  07F7               	addwf	___wmul@product,f
  4871  1C65  1803               	skipnc
  4872  1C66  0AF8               	incf	___wmul@product+1,f
  4873  1C67  0876               	movf	___wmul@multiplicand+1,w
  4874  1C68  07F8               	addwf	___wmul@product+1,f
  4875  1C69                     l358:
  4876  1C69  3001               	movlw	1
  4877  1C6A                     u4555:
  4878  1C6A  1003               	clrc
  4879  1C6B  0DF5               	rlf	___wmul@multiplicand,f
  4880  1C6C  0DF6               	rlf	___wmul@multiplicand+1,f
  4881  1C6D  3EFF               	addlw	-1
  4882  1C6E  1D03               	skipz
  4883  1C6F  2C6A               	goto	u4555
  4884  1C70                     l2859:
  4885  1C70  3001               	movlw	1
  4886  1C71                     u4565:
  4887  1C71  1003               	clrc
  4888  1C72  0CF4               	rrf	___wmul@multiplier+1,f
  4889  1C73  0CF3               	rrf	___wmul@multiplier,f
  4890  1C74  3EFF               	addlw	-1
  4891  1C75  1D03               	skipz
  4892  1C76  2C71               	goto	u4565
  4893  1C77                     l2861:
  4894  1C77  0873               	movf	___wmul@multiplier,w
  4895  1C78  0474               	iorwf	___wmul@multiplier+1,w
  4896  1C79  1D03               	btfss	3,2
  4897  1C7A  2C7C               	goto	u4571
  4898  1C7B  2C7D               	goto	u4570
  4899  1C7C                     u4571:
  4900  1C7C  2C5F               	goto	l2855
  4901  1C7D                     u4570:
  4902  1C7D                     l2863:
  4903  1C7D  0878               	movf	___wmul@product+1,w
  4904  1C7E  00F4               	movwf	?___wmul+1
  4905  1C7F  0877               	movf	___wmul@product,w
  4906  1C80  00F3               	movwf	?___wmul
  4907  1C81                     l360:
  4908  1C81  0008               	return
  4909  1C82                     __end_of___wmul:
  4910                           
  4911                           	psect	text12
  4912  1DB9                     __ptext12:	
  4913 ;; *************** function ___llmod *****************
  4914 ;; Defined at:
  4915 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  divisor         4    3[COMMON] unsigned long 
  4918 ;;  dividend        4    7[COMMON] unsigned long 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;  counter         1    1[BANK0 ] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  4    3[COMMON] unsigned long 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4930 ;;      Params:         8       0       0       0       0
  4931 ;;      Locals:         0       1       0       0       0
  4932 ;;      Temps:          0       1       0       0       0
  4933 ;;      Totals:         8       2       0       0       0
  4934 ;;Total ram usage:       10 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    1
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_sprintf
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           
  4945                           ;psect for function ___llmod
  4946  1DB9                     ___llmod:
  4947  1DB9                     l2967:	
  4948                           ;incstack = 0
  4949                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4950                           
  4951  1DB9  0876               	movf	___llmod@divisor+3,w
  4952  1DBA  0475               	iorwf	___llmod@divisor+2,w
  4953  1DBB  0474               	iorwf	___llmod@divisor+1,w
  4954  1DBC  0473               	iorwf	___llmod@divisor,w
  4955  1DBD  1903               	skipnz
  4956  1DBE  2DC0               	goto	u4861
  4957  1DBF  2DC1               	goto	u4860
  4958  1DC0                     u4861:
  4959  1DC0  2E06               	goto	l2983
  4960  1DC1                     u4860:
  4961  1DC1                     l2969:
  4962  1DC1  1283               	bcf	3,5	;RP0=0, select bank0
  4963  1DC2  1303               	bcf	3,6	;RP1=0, select bank0
  4964  1DC3  01A1               	clrf	___llmod@counter
  4965  1DC4  0AA1               	incf	___llmod@counter,f
  4966  1DC5  2DD3               	goto	l2973
  4967  1DC6                     l2971:
  4968  1DC6  3001               	movlw	1
  4969  1DC7  00A0               	movwf	??___llmod
  4970  1DC8                     u4875:
  4971  1DC8  1003               	clrc
  4972  1DC9  0DF3               	rlf	___llmod@divisor,f
  4973  1DCA  0DF4               	rlf	___llmod@divisor+1,f
  4974  1DCB  0DF5               	rlf	___llmod@divisor+2,f
  4975  1DCC  0DF6               	rlf	___llmod@divisor+3,f
  4976  1DCD  0BA0               	decfsz	??___llmod,f
  4977  1DCE  2DC8               	goto	u4875
  4978  1DCF  3001               	movlw	1
  4979  1DD0  00A0               	movwf	??___llmod
  4980  1DD1  0820               	movf	??___llmod,w
  4981  1DD2  07A1               	addwf	___llmod@counter,f
  4982  1DD3                     l2973:
  4983  1DD3  1FF6               	btfss	___llmod@divisor+3,7
  4984  1DD4  2DD6               	goto	u4881
  4985  1DD5  2DD7               	goto	u4880
  4986  1DD6                     u4881:
  4987  1DD6  2DC6               	goto	l2971
  4988  1DD7                     u4880:
  4989  1DD7                     l2975:
  4990  1DD7  0876               	movf	___llmod@divisor+3,w
  4991  1DD8  027A               	subwf	___llmod@dividend+3,w
  4992  1DD9  1D03               	skipz
  4993  1DDA  2DE5               	goto	u4895
  4994  1DDB  0875               	movf	___llmod@divisor+2,w
  4995  1DDC  0279               	subwf	___llmod@dividend+2,w
  4996  1DDD  1D03               	skipz
  4997  1DDE  2DE5               	goto	u4895
  4998  1DDF  0874               	movf	___llmod@divisor+1,w
  4999  1DE0  0278               	subwf	___llmod@dividend+1,w
  5000  1DE1  1D03               	skipz
  5001  1DE2  2DE5               	goto	u4895
  5002  1DE3  0873               	movf	___llmod@divisor,w
  5003  1DE4  0277               	subwf	___llmod@dividend,w
  5004  1DE5                     u4895:
  5005  1DE5  1C03               	skipc
  5006  1DE6  2DE8               	goto	u4891
  5007  1DE7  2DE9               	goto	u4890
  5008  1DE8                     u4891:
  5009  1DE8  2DF7               	goto	l2979
  5010  1DE9                     u4890:
  5011  1DE9                     l2977:
  5012  1DE9  0873               	movf	___llmod@divisor,w
  5013  1DEA  02F7               	subwf	___llmod@dividend,f
  5014  1DEB  0874               	movf	___llmod@divisor+1,w
  5015  1DEC  1C03               	skipc
  5016  1DED  0F74               	incfsz	___llmod@divisor+1,w
  5017  1DEE  02F8               	subwf	___llmod@dividend+1,f
  5018  1DEF  0875               	movf	___llmod@divisor+2,w
  5019  1DF0  1C03               	skipc
  5020  1DF1  0F75               	incfsz	___llmod@divisor+2,w
  5021  1DF2  02F9               	subwf	___llmod@dividend+2,f
  5022  1DF3  0876               	movf	___llmod@divisor+3,w
  5023  1DF4  1C03               	skipc
  5024  1DF5  0F76               	incfsz	___llmod@divisor+3,w
  5025  1DF6  02FA               	subwf	___llmod@dividend+3,f
  5026  1DF7                     l2979:
  5027  1DF7  3001               	movlw	1
  5028  1DF8                     u4905:
  5029  1DF8  1003               	clrc
  5030  1DF9  0CF6               	rrf	___llmod@divisor+3,f
  5031  1DFA  0CF5               	rrf	___llmod@divisor+2,f
  5032  1DFB  0CF4               	rrf	___llmod@divisor+1,f
  5033  1DFC  0CF3               	rrf	___llmod@divisor,f
  5034  1DFD  3EFF               	addlw	-1
  5035  1DFE  1D03               	skipz
  5036  1DFF  2DF8               	goto	u4905
  5037  1E00                     l2981:
  5038  1E00  3001               	movlw	1
  5039  1E01  02A1               	subwf	___llmod@counter,f
  5040  1E02  1D03               	btfss	3,2
  5041  1E03  2E05               	goto	u4911
  5042  1E04  2E06               	goto	u4910
  5043  1E05                     u4911:
  5044  1E05  2DD7               	goto	l2975
  5045  1E06                     u4910:
  5046  1E06                     l2983:
  5047  1E06  087A               	movf	___llmod@dividend+3,w
  5048  1E07  00F6               	movwf	?___llmod+3
  5049  1E08  0879               	movf	___llmod@dividend+2,w
  5050  1E09  00F5               	movwf	?___llmod+2
  5051  1E0A  0878               	movf	___llmod@dividend+1,w
  5052  1E0B  00F4               	movwf	?___llmod+1
  5053  1E0C  0877               	movf	___llmod@dividend,w
  5054  1E0D  00F3               	movwf	?___llmod
  5055  1E0E                     l614:
  5056  1E0E  0008               	return
  5057  1E0F                     __end_of___llmod:
  5058                           
  5059                           	psect	text13
  5060  1E0F                     __ptext13:	
  5061 ;; *************** function ___lldiv *****************
  5062 ;; Defined at:
  5063 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  divisor         4    3[COMMON] unsigned long 
  5066 ;;  dividend        4    7[COMMON] unsigned long 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  quotient        4    1[BANK0 ] unsigned long 
  5069 ;;  counter         1    5[BANK0 ] unsigned char 
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  4    3[COMMON] unsigned long 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5079 ;;      Params:         8       0       0       0       0
  5080 ;;      Locals:         0       5       0       0       0
  5081 ;;      Temps:          0       1       0       0       0
  5082 ;;      Totals:         8       6       0       0       0
  5083 ;;Total ram usage:       14 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    1
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_sprintf
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           
  5094                           ;psect for function ___lldiv
  5095  1E0F                     ___lldiv:
  5096  1E0F                     l2867:	
  5097                           ;incstack = 0
  5098                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5099                           
  5100  1E0F  3000               	movlw	0
  5101  1E10  1283               	bcf	3,5	;RP0=0, select bank0
  5102  1E11  1303               	bcf	3,6	;RP1=0, select bank0
  5103  1E12  00A4               	movwf	___lldiv@quotient+3
  5104  1E13  3000               	movlw	0
  5105  1E14  00A3               	movwf	___lldiv@quotient+2
  5106  1E15  3000               	movlw	0
  5107  1E16  00A2               	movwf	___lldiv@quotient+1
  5108  1E17  3000               	movlw	0
  5109  1E18  00A1               	movwf	___lldiv@quotient
  5110  1E19  0876               	movf	___lldiv@divisor+3,w
  5111  1E1A  0475               	iorwf	___lldiv@divisor+2,w
  5112  1E1B  0474               	iorwf	___lldiv@divisor+1,w
  5113  1E1C  0473               	iorwf	___lldiv@divisor,w
  5114  1E1D  1903               	skipnz
  5115  1E1E  2E20               	goto	u4581
  5116  1E1F  2E21               	goto	u4580
  5117  1E20                     u4581:
  5118  1E20  2E6E               	goto	l2887
  5119  1E21                     u4580:
  5120  1E21                     l2869:
  5121  1E21  01A5               	clrf	___lldiv@counter
  5122  1E22  0AA5               	incf	___lldiv@counter,f
  5123  1E23  2E31               	goto	l2873
  5124  1E24                     l2871:
  5125  1E24  3001               	movlw	1
  5126  1E25  00A0               	movwf	??___lldiv
  5127  1E26                     u4595:
  5128  1E26  1003               	clrc
  5129  1E27  0DF3               	rlf	___lldiv@divisor,f
  5130  1E28  0DF4               	rlf	___lldiv@divisor+1,f
  5131  1E29  0DF5               	rlf	___lldiv@divisor+2,f
  5132  1E2A  0DF6               	rlf	___lldiv@divisor+3,f
  5133  1E2B  0BA0               	decfsz	??___lldiv,f
  5134  1E2C  2E26               	goto	u4595
  5135  1E2D  3001               	movlw	1
  5136  1E2E  00A0               	movwf	??___lldiv
  5137  1E2F  0820               	movf	??___lldiv,w
  5138  1E30  07A5               	addwf	___lldiv@counter,f
  5139  1E31                     l2873:
  5140  1E31  1FF6               	btfss	___lldiv@divisor+3,7
  5141  1E32  2E34               	goto	u4601
  5142  1E33  2E35               	goto	u4600
  5143  1E34                     u4601:
  5144  1E34  2E24               	goto	l2871
  5145  1E35                     u4600:
  5146  1E35                     l2875:
  5147  1E35  3001               	movlw	1
  5148  1E36  00A0               	movwf	??___lldiv
  5149  1E37                     u4615:
  5150  1E37  1003               	clrc
  5151  1E38  0DA1               	rlf	___lldiv@quotient,f
  5152  1E39  0DA2               	rlf	___lldiv@quotient+1,f
  5153  1E3A  0DA3               	rlf	___lldiv@quotient+2,f
  5154  1E3B  0DA4               	rlf	___lldiv@quotient+3,f
  5155  1E3C  0BA0               	decfsz	??___lldiv,f
  5156  1E3D  2E37               	goto	u4615
  5157  1E3E                     l2877:
  5158  1E3E  0876               	movf	___lldiv@divisor+3,w
  5159  1E3F  027A               	subwf	___lldiv@dividend+3,w
  5160  1E40  1D03               	skipz
  5161  1E41  2E4C               	goto	u4625
  5162  1E42  0875               	movf	___lldiv@divisor+2,w
  5163  1E43  0279               	subwf	___lldiv@dividend+2,w
  5164  1E44  1D03               	skipz
  5165  1E45  2E4C               	goto	u4625
  5166  1E46  0874               	movf	___lldiv@divisor+1,w
  5167  1E47  0278               	subwf	___lldiv@dividend+1,w
  5168  1E48  1D03               	skipz
  5169  1E49  2E4C               	goto	u4625
  5170  1E4A  0873               	movf	___lldiv@divisor,w
  5171  1E4B  0277               	subwf	___lldiv@dividend,w
  5172  1E4C                     u4625:
  5173  1E4C  1C03               	skipc
  5174  1E4D  2E4F               	goto	u4621
  5175  1E4E  2E50               	goto	u4620
  5176  1E4F                     u4621:
  5177  1E4F  2E5F               	goto	l2883
  5178  1E50                     u4620:
  5179  1E50                     l2879:
  5180  1E50  0873               	movf	___lldiv@divisor,w
  5181  1E51  02F7               	subwf	___lldiv@dividend,f
  5182  1E52  0874               	movf	___lldiv@divisor+1,w
  5183  1E53  1C03               	skipc
  5184  1E54  0F74               	incfsz	___lldiv@divisor+1,w
  5185  1E55  02F8               	subwf	___lldiv@dividend+1,f
  5186  1E56  0875               	movf	___lldiv@divisor+2,w
  5187  1E57  1C03               	skipc
  5188  1E58  0F75               	incfsz	___lldiv@divisor+2,w
  5189  1E59  02F9               	subwf	___lldiv@dividend+2,f
  5190  1E5A  0876               	movf	___lldiv@divisor+3,w
  5191  1E5B  1C03               	skipc
  5192  1E5C  0F76               	incfsz	___lldiv@divisor+3,w
  5193  1E5D  02FA               	subwf	___lldiv@dividend+3,f
  5194  1E5E                     l2881:
  5195  1E5E  1421               	bsf	___lldiv@quotient,0
  5196  1E5F                     l2883:
  5197  1E5F  3001               	movlw	1
  5198  1E60                     u4635:
  5199  1E60  1003               	clrc
  5200  1E61  0CF6               	rrf	___lldiv@divisor+3,f
  5201  1E62  0CF5               	rrf	___lldiv@divisor+2,f
  5202  1E63  0CF4               	rrf	___lldiv@divisor+1,f
  5203  1E64  0CF3               	rrf	___lldiv@divisor,f
  5204  1E65  3EFF               	addlw	-1
  5205  1E66  1D03               	skipz
  5206  1E67  2E60               	goto	u4635
  5207  1E68                     l2885:
  5208  1E68  3001               	movlw	1
  5209  1E69  02A5               	subwf	___lldiv@counter,f
  5210  1E6A  1D03               	btfss	3,2
  5211  1E6B  2E6D               	goto	u4641
  5212  1E6C  2E6E               	goto	u4640
  5213  1E6D                     u4641:
  5214  1E6D  2E35               	goto	l2875
  5215  1E6E                     u4640:
  5216  1E6E                     l2887:
  5217  1E6E  0824               	movf	___lldiv@quotient+3,w
  5218  1E6F  00F6               	movwf	?___lldiv+3
  5219  1E70  0823               	movf	___lldiv@quotient+2,w
  5220  1E71  00F5               	movwf	?___lldiv+2
  5221  1E72  0822               	movf	___lldiv@quotient+1,w
  5222  1E73  00F4               	movwf	?___lldiv+1
  5223  1E74  0821               	movf	___lldiv@quotient,w
  5224  1E75  00F3               	movwf	?___lldiv
  5225  1E76                     l394:
  5226  1E76  0008               	return
  5227  1E77                     __end_of___lldiv:
  5228                           
  5229                           	psect	text14
  5230  1EE0                     __ptext14:	
  5231 ;; *************** function ___fltol *****************
  5232 ;; Defined at:
  5233 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  f1              4   53[BANK0 ] unsigned long 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;  exp1            1   63[BANK0 ] unsigned char 
  5238 ;;  sign1           1   62[BANK0 ] unsigned char 
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  4   53[BANK0 ] long 
  5241 ;; Registers used:
  5242 ;;		wreg, status,2, status,0
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5248 ;;      Params:         0       4       0       0       0
  5249 ;;      Locals:         0       2       0       0       0
  5250 ;;      Temps:          0       5       0       0       0
  5251 ;;      Totals:         0      11       0       0       0
  5252 ;;Total ram usage:       11 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:    1
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		_sprintf
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function ___fltol
  5264  1EE0                     ___fltol:
  5265  1EE0                     l2931:	
  5266                           ;incstack = 0
  5267                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5268                           
  5269  1EE0  1003               	clrc
  5270  1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  5271  1EE2  1303               	bcf	3,6	;RP1=0, select bank0
  5272  1EE3  0D57               	rlf	___fltol@f1+2,w
  5273  1EE4  0D58               	rlf	___fltol@f1+3,w
  5274  1EE5  00D9               	movwf	??___fltol
  5275  1EE6  0859               	movf	??___fltol,w
  5276  1EE7  00DF               	movwf	___fltol@exp1
  5277  1EE8  085F               	movf	___fltol@exp1,w
  5278  1EE9  1D03               	btfss	3,2
  5279  1EEA  2EEC               	goto	u4761
  5280  1EEB  2EED               	goto	u4760
  5281  1EEC                     u4761:
  5282  1EEC  2EF6               	goto	l2937
  5283  1EED                     u4760:
  5284  1EED                     l2933:
  5285  1EED  3000               	movlw	0
  5286  1EEE  00D8               	movwf	?___fltol+3
  5287  1EEF  3000               	movlw	0
  5288  1EF0  00D7               	movwf	?___fltol+2
  5289  1EF1  3000               	movlw	0
  5290  1EF2  00D6               	movwf	?___fltol+1
  5291  1EF3  3000               	movlw	0
  5292  1EF4  00D5               	movwf	?___fltol
  5293  1EF5  2F5B               	goto	l561
  5294  1EF6                     l2937:
  5295  1EF6  0855               	movf	___fltol@f1,w
  5296  1EF7  00D9               	movwf	??___fltol
  5297  1EF8  0856               	movf	___fltol@f1+1,w
  5298  1EF9  00DA               	movwf	??___fltol+1
  5299  1EFA  0857               	movf	___fltol@f1+2,w
  5300  1EFB  00DB               	movwf	??___fltol+2
  5301  1EFC  0858               	movf	___fltol@f1+3,w
  5302  1EFD  00DC               	movwf	??___fltol+3
  5303  1EFE  301F               	movlw	31
  5304  1EFF                     u4775:
  5305  1EFF  1003               	clrc
  5306  1F00  0CDC               	rrf	??___fltol+3,f
  5307  1F01  0CDB               	rrf	??___fltol+2,f
  5308  1F02  0CDA               	rrf	??___fltol+1,f
  5309  1F03  0CD9               	rrf	??___fltol,f
  5310  1F04                     u4770:
  5311  1F04  3EFF               	addlw	-1
  5312  1F05  1D03               	skipz
  5313  1F06  2EFF               	goto	u4775
  5314  1F07  0859               	movf	??___fltol,w
  5315  1F08  00DD               	movwf	??___fltol+4
  5316  1F09  085D               	movf	??___fltol+4,w
  5317  1F0A  00DE               	movwf	___fltol@sign1
  5318  1F0B                     l2939:
  5319  1F0B  17D7               	bsf	___fltol@f1+2,7
  5320  1F0C                     l2941:
  5321  1F0C  30FF               	movlw	255
  5322  1F0D  05D5               	andwf	___fltol@f1,f
  5323  1F0E  30FF               	movlw	255
  5324  1F0F  05D6               	andwf	___fltol@f1+1,f
  5325  1F10  30FF               	movlw	255
  5326  1F11  05D7               	andwf	___fltol@f1+2,f
  5327  1F12  3000               	movlw	0
  5328  1F13  05D8               	andwf	___fltol@f1+3,f
  5329  1F14                     l2943:
  5330  1F14  3096               	movlw	150
  5331  1F15  02DF               	subwf	___fltol@exp1,f
  5332  1F16                     l2945:
  5333  1F16  1FDF               	btfss	___fltol@exp1,7
  5334  1F17  2F19               	goto	u4781
  5335  1F18  2F1A               	goto	u4780
  5336  1F19                     u4781:
  5337  1F19  2F34               	goto	l2955
  5338  1F1A                     u4780:
  5339  1F1A                     l2947:
  5340  1F1A  085F               	movf	___fltol@exp1,w
  5341  1F1B  3A80               	xorlw	128
  5342  1F1C  3E97               	addlw	151
  5343  1F1D  1803               	skipnc
  5344  1F1E  2F20               	goto	u4791
  5345  1F1F  2F21               	goto	u4790
  5346  1F20                     u4791:
  5347  1F20  2F22               	goto	l2953
  5348  1F21                     u4790:
  5349  1F21  2EED               	goto	l2933
  5350  1F22                     l2953:
  5351  1F22  3001               	movlw	1
  5352  1F23                     u4805:
  5353  1F23  1003               	clrc
  5354  1F24  0CD8               	rrf	___fltol@f1+3,f
  5355  1F25  0CD7               	rrf	___fltol@f1+2,f
  5356  1F26  0CD6               	rrf	___fltol@f1+1,f
  5357  1F27  0CD5               	rrf	___fltol@f1,f
  5358  1F28  3EFF               	addlw	-1
  5359  1F29  1D03               	skipz
  5360  1F2A  2F23               	goto	u4805
  5361  1F2B  3001               	movlw	1
  5362  1F2C  00D9               	movwf	??___fltol
  5363  1F2D  0859               	movf	??___fltol,w
  5364  1F2E  07DF               	addwf	___fltol@exp1,f
  5365  1F2F  1D03               	btfss	3,2
  5366  1F30  2F32               	goto	u4811
  5367  1F31  2F33               	goto	u4810
  5368  1F32                     u4811:
  5369  1F32  2F22               	goto	l2953
  5370  1F33                     u4810:
  5371  1F33  2F4B               	goto	l2963
  5372  1F34                     l2955:
  5373  1F34  3020               	movlw	32
  5374  1F35  025F               	subwf	___fltol@exp1,w
  5375  1F36  1C03               	skipc
  5376  1F37  2F39               	goto	u4821
  5377  1F38  2F3A               	goto	u4820
  5378  1F39                     u4821:
  5379  1F39  2F46               	goto	l568
  5380  1F3A                     u4820:
  5381  1F3A  2EED               	goto	l2933
  5382  1F3B                     l2961:
  5383  1F3B  3001               	movlw	1
  5384  1F3C  00D9               	movwf	??___fltol
  5385  1F3D                     u4835:
  5386  1F3D  1003               	clrc
  5387  1F3E  0DD5               	rlf	___fltol@f1,f
  5388  1F3F  0DD6               	rlf	___fltol@f1+1,f
  5389  1F40  0DD7               	rlf	___fltol@f1+2,f
  5390  1F41  0DD8               	rlf	___fltol@f1+3,f
  5391  1F42  0BD9               	decfsz	??___fltol,f
  5392  1F43  2F3D               	goto	u4835
  5393  1F44  3001               	movlw	1
  5394  1F45  02DF               	subwf	___fltol@exp1,f
  5395  1F46                     l568:
  5396  1F46  085F               	movf	___fltol@exp1,w
  5397  1F47  1D03               	btfss	3,2
  5398  1F48  2F4A               	goto	u4841
  5399  1F49  2F4B               	goto	u4840
  5400  1F4A                     u4841:
  5401  1F4A  2F3B               	goto	l2961
  5402  1F4B                     u4840:
  5403  1F4B                     l2963:
  5404  1F4B  085E               	movf	___fltol@sign1,w
  5405  1F4C  1903               	btfsc	3,2
  5406  1F4D  2F4F               	goto	u4851
  5407  1F4E  2F50               	goto	u4850
  5408  1F4F                     u4851:
  5409  1F4F  2F5B               	goto	l571
  5410  1F50                     u4850:
  5411  1F50                     l2965:
  5412  1F50  09D5               	comf	___fltol@f1,f
  5413  1F51  09D6               	comf	___fltol@f1+1,f
  5414  1F52  09D7               	comf	___fltol@f1+2,f
  5415  1F53  09D8               	comf	___fltol@f1+3,f
  5416  1F54  0AD5               	incf	___fltol@f1,f
  5417  1F55  1903               	skipnz
  5418  1F56  0AD6               	incf	___fltol@f1+1,f
  5419  1F57  1903               	skipnz
  5420  1F58  0AD7               	incf	___fltol@f1+2,f
  5421  1F59  1903               	skipnz
  5422  1F5A  0AD8               	incf	___fltol@f1+3,f
  5423  1F5B                     l571:
  5424  1F5B                     l561:
  5425  1F5B  0008               	return
  5426  1F5C                     __end_of___fltol:
  5427                           
  5428                           	psect	text15
  5429  1D69                     __ptext15:	
  5430 ;; *************** function ___flsub *****************
  5431 ;; Defined at:
  5432 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  a               4    0[BANK1 ] long 
  5435 ;;  b               4    4[BANK1 ] long 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  4    0[BANK1 ] long 
  5440 ;; Registers used:
  5441 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5447 ;;      Params:         0       0       8       0       0
  5448 ;;      Locals:         0       0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0
  5450 ;;      Totals:         0       0       8       0       0
  5451 ;;Total ram usage:        8 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    2
  5454 ;; This function calls:
  5455 ;;		___fladd
  5456 ;; This function is called by:
  5457 ;;		_sprintf
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           
  5462                           ;psect for function ___flsub
  5463  1D69                     ___flsub:
  5464  1D69                     l2987:	
  5465                           ;incstack = 0
  5466                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5467                           
  5468  1D69  3080               	movlw	128
  5469  1D6A  1683               	bsf	3,5	;RP0=1, select bank1
  5470  1D6B  1303               	bcf	3,6	;RP1=0, select bank1
  5471  1D6C  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5472  1D6D                     l2989:
  5473  1D6D  0827               	movf	(___flsub@b+3)^(0+128),w
  5474  1D6E  1283               	bcf	3,5	;RP0=0, select bank0
  5475  1D6F  1303               	bcf	3,6	;RP1=0, select bank0
  5476  1D70  00D9               	movwf	___fladd@b+3
  5477  1D71  1683               	bsf	3,5	;RP0=1, select bank1
  5478  1D72  1303               	bcf	3,6	;RP1=0, select bank1
  5479  1D73  0826               	movf	(___flsub@b+2)^(0+128),w
  5480  1D74  1283               	bcf	3,5	;RP0=0, select bank0
  5481  1D75  1303               	bcf	3,6	;RP1=0, select bank0
  5482  1D76  00D8               	movwf	___fladd@b+2
  5483  1D77  1683               	bsf	3,5	;RP0=1, select bank1
  5484  1D78  1303               	bcf	3,6	;RP1=0, select bank1
  5485  1D79  0825               	movf	(___flsub@b+1)^(0+128),w
  5486  1D7A  1283               	bcf	3,5	;RP0=0, select bank0
  5487  1D7B  1303               	bcf	3,6	;RP1=0, select bank0
  5488  1D7C  00D7               	movwf	___fladd@b+1
  5489  1D7D  1683               	bsf	3,5	;RP0=1, select bank1
  5490  1D7E  1303               	bcf	3,6	;RP1=0, select bank1
  5491  1D7F  0824               	movf	___flsub@b^(0+128),w
  5492  1D80  1283               	bcf	3,5	;RP0=0, select bank0
  5493  1D81  1303               	bcf	3,6	;RP1=0, select bank0
  5494  1D82  00D6               	movwf	___fladd@b
  5495  1D83  1683               	bsf	3,5	;RP0=1, select bank1
  5496  1D84  1303               	bcf	3,6	;RP1=0, select bank1
  5497  1D85  0823               	movf	(___flsub@a+3)^(0+128),w
  5498  1D86  1283               	bcf	3,5	;RP0=0, select bank0
  5499  1D87  1303               	bcf	3,6	;RP1=0, select bank0
  5500  1D88  00DD               	movwf	___fladd@a+3
  5501  1D89  1683               	bsf	3,5	;RP0=1, select bank1
  5502  1D8A  1303               	bcf	3,6	;RP1=0, select bank1
  5503  1D8B  0822               	movf	(___flsub@a+2)^(0+128),w
  5504  1D8C  1283               	bcf	3,5	;RP0=0, select bank0
  5505  1D8D  1303               	bcf	3,6	;RP1=0, select bank0
  5506  1D8E  00DC               	movwf	___fladd@a+2
  5507  1D8F  1683               	bsf	3,5	;RP0=1, select bank1
  5508  1D90  1303               	bcf	3,6	;RP1=0, select bank1
  5509  1D91  0821               	movf	(___flsub@a+1)^(0+128),w
  5510  1D92  1283               	bcf	3,5	;RP0=0, select bank0
  5511  1D93  1303               	bcf	3,6	;RP1=0, select bank0
  5512  1D94  00DB               	movwf	___fladd@a+1
  5513  1D95  1683               	bsf	3,5	;RP0=1, select bank1
  5514  1D96  1303               	bcf	3,6	;RP1=0, select bank1
  5515  1D97  0820               	movf	___flsub@a^(0+128),w
  5516  1D98  1283               	bcf	3,5	;RP0=0, select bank0
  5517  1D99  1303               	bcf	3,6	;RP1=0, select bank0
  5518  1D9A  00DA               	movwf	___fladd@a
  5519  1D9B  160A  118A  2274  160A  158A  	fcall	___fladd
  5520  1DA0  1283               	bcf	3,5	;RP0=0, select bank0
  5521  1DA1  1303               	bcf	3,6	;RP1=0, select bank0
  5522  1DA2  0859               	movf	?___fladd+3,w
  5523  1DA3  1683               	bsf	3,5	;RP0=1, select bank1
  5524  1DA4  1303               	bcf	3,6	;RP1=0, select bank1
  5525  1DA5  00A3               	movwf	(?___flsub+3)^(0+128)
  5526  1DA6  1283               	bcf	3,5	;RP0=0, select bank0
  5527  1DA7  1303               	bcf	3,6	;RP1=0, select bank0
  5528  1DA8  0858               	movf	?___fladd+2,w
  5529  1DA9  1683               	bsf	3,5	;RP0=1, select bank1
  5530  1DAA  1303               	bcf	3,6	;RP1=0, select bank1
  5531  1DAB  00A2               	movwf	(?___flsub+2)^(0+128)
  5532  1DAC  1283               	bcf	3,5	;RP0=0, select bank0
  5533  1DAD  1303               	bcf	3,6	;RP1=0, select bank0
  5534  1DAE  0857               	movf	?___fladd+1,w
  5535  1DAF  1683               	bsf	3,5	;RP0=1, select bank1
  5536  1DB0  1303               	bcf	3,6	;RP1=0, select bank1
  5537  1DB1  00A1               	movwf	(?___flsub+1)^(0+128)
  5538  1DB2  1283               	bcf	3,5	;RP0=0, select bank0
  5539  1DB3  1303               	bcf	3,6	;RP1=0, select bank0
  5540  1DB4  0856               	movf	?___fladd,w
  5541  1DB5  1683               	bsf	3,5	;RP0=1, select bank1
  5542  1DB6  1303               	bcf	3,6	;RP1=0, select bank1
  5543  1DB7  00A0               	movwf	?___flsub^(0+128)
  5544  1DB8                     l731:
  5545  1DB8  0008               	return
  5546  1DB9                     __end_of___flsub:
  5547                           
  5548                           	psect	text16
  5549  1274                     __ptext16:	
  5550 ;; *************** function ___fladd *****************
  5551 ;; Defined at:
  5552 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  b               4   54[BANK0 ] long 
  5555 ;;  a               4   58[BANK0 ] long 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  grs             1   73[BANK0 ] unsigned char 
  5558 ;;  bexp            1   72[BANK0 ] unsigned char 
  5559 ;;  aexp            1   71[BANK0 ] unsigned char 
  5560 ;;  signs           1   70[BANK0 ] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  4   54[BANK0 ] unsigned char 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0, btemp+1
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5570 ;;      Params:         0       8       0       0       0
  5571 ;;      Locals:         0       4       0       0       0
  5572 ;;      Temps:          0       8       0       0       0
  5573 ;;      Totals:         0      20       0       0       0
  5574 ;;Total ram usage:       20 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_sprintf
  5581 ;;		___flsub
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           
  5586                           ;psect for function ___fladd
  5587  1274                     ___fladd:
  5588  1274                     l2329:	
  5589                           ;incstack = 0
  5590                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5591                           
  5592  1274  1283               	bcf	3,5	;RP0=0, select bank0
  5593  1275  1303               	bcf	3,6	;RP1=0, select bank0
  5594  1276  0859               	movf	___fladd@b+3,w
  5595  1277  3980               	andlw	128
  5596  1278  00DE               	movwf	??___fladd
  5597  1279  085E               	movf	??___fladd,w
  5598  127A  00E6               	movwf	___fladd@signs
  5599  127B                     l2331:
  5600  127B  0859               	movf	___fladd@b+3,w
  5601  127C  00DE               	movwf	??___fladd
  5602  127D  075E               	addwf	??___fladd,w
  5603  127E  00DF               	movwf	??___fladd+1
  5604  127F  085F               	movf	??___fladd+1,w
  5605  1280  00E8               	movwf	___fladd@bexp
  5606  1281                     l2333:
  5607  1281  1FD8               	btfss	___fladd@b+2,7
  5608  1282  2A84               	goto	u3151
  5609  1283  2A85               	goto	u3150
  5610  1284                     u3151:
  5611  1284  2A86               	goto	l2337
  5612  1285                     u3150:
  5613  1285                     l2335:
  5614  1285  1468               	bsf	___fladd@bexp,0
  5615  1286                     l2337:
  5616  1286  0868               	movf	___fladd@bexp,w
  5617  1287  1903               	btfsc	3,2
  5618  1288  2A8A               	goto	u3161
  5619  1289  2A8B               	goto	u3160
  5620  128A                     u3161:
  5621  128A  2A9B               	goto	l2347
  5622  128B                     u3160:
  5623  128B                     l2339:
  5624  128B  0A68               	incf	___fladd@bexp,w
  5625  128C  1D03               	btfss	3,2
  5626  128D  2A8F               	goto	u3171
  5627  128E  2A90               	goto	u3170
  5628  128F                     u3171:
  5629  128F  2A98               	goto	l2343
  5630  1290                     u3170:
  5631  1290                     l2341:
  5632  1290  3000               	movlw	0
  5633  1291  00D9               	movwf	___fladd@b+3
  5634  1292  3000               	movlw	0
  5635  1293  00D8               	movwf	___fladd@b+2
  5636  1294  3000               	movlw	0
  5637  1295  00D7               	movwf	___fladd@b+1
  5638  1296  3000               	movlw	0
  5639  1297  00D6               	movwf	___fladd@b
  5640  1298                     l2343:
  5641  1298  17D8               	bsf	___fladd@b+2,7
  5642  1299                     l2345:
  5643  1299  01D9               	clrf	___fladd@b+3
  5644  129A  2AA3               	goto	l2349
  5645  129B                     l2347:
  5646  129B  3000               	movlw	0
  5647  129C  00D9               	movwf	___fladd@b+3
  5648  129D  3000               	movlw	0
  5649  129E  00D8               	movwf	___fladd@b+2
  5650  129F  3000               	movlw	0
  5651  12A0  00D7               	movwf	___fladd@b+1
  5652  12A1  3000               	movlw	0
  5653  12A2  00D6               	movwf	___fladd@b
  5654  12A3                     l2349:
  5655  12A3  085D               	movf	___fladd@a+3,w
  5656  12A4  3980               	andlw	128
  5657  12A5  00DE               	movwf	??___fladd
  5658  12A6  085E               	movf	??___fladd,w
  5659  12A7  00E7               	movwf	___fladd@aexp
  5660  12A8                     l2351:
  5661  12A8  0867               	movf	___fladd@aexp,w
  5662  12A9  0666               	xorwf	___fladd@signs,w
  5663  12AA  1903               	skipnz
  5664  12AB  2AAD               	goto	u3181
  5665  12AC  2AAE               	goto	u3180
  5666  12AD                     u3181:
  5667  12AD  2AAF               	goto	l2355
  5668  12AE                     u3180:
  5669  12AE                     l2353:
  5670  12AE  1766               	bsf	___fladd@signs,6
  5671  12AF                     l2355:
  5672  12AF  085D               	movf	___fladd@a+3,w
  5673  12B0  00DE               	movwf	??___fladd
  5674  12B1  075E               	addwf	??___fladd,w
  5675  12B2  00DF               	movwf	??___fladd+1
  5676  12B3  085F               	movf	??___fladd+1,w
  5677  12B4  00E7               	movwf	___fladd@aexp
  5678  12B5                     l2357:
  5679  12B5  1FDC               	btfss	___fladd@a+2,7
  5680  12B6  2AB8               	goto	u3191
  5681  12B7  2AB9               	goto	u3190
  5682  12B8                     u3191:
  5683  12B8  2ABA               	goto	l2361
  5684  12B9                     u3190:
  5685  12B9                     l2359:
  5686  12B9  1467               	bsf	___fladd@aexp,0
  5687  12BA                     l2361:
  5688  12BA  0867               	movf	___fladd@aexp,w
  5689  12BB  1903               	btfsc	3,2
  5690  12BC  2ABE               	goto	u3201
  5691  12BD  2ABF               	goto	u3200
  5692  12BE                     u3201:
  5693  12BE  2ACF               	goto	l2371
  5694  12BF                     u3200:
  5695  12BF                     l2363:
  5696  12BF  0A67               	incf	___fladd@aexp,w
  5697  12C0  1D03               	btfss	3,2
  5698  12C1  2AC3               	goto	u3211
  5699  12C2  2AC4               	goto	u3210
  5700  12C3                     u3211:
  5701  12C3  2ACC               	goto	l2367
  5702  12C4                     u3210:
  5703  12C4                     l2365:
  5704  12C4  3000               	movlw	0
  5705  12C5  00DD               	movwf	___fladd@a+3
  5706  12C6  3000               	movlw	0
  5707  12C7  00DC               	movwf	___fladd@a+2
  5708  12C8  3000               	movlw	0
  5709  12C9  00DB               	movwf	___fladd@a+1
  5710  12CA  3000               	movlw	0
  5711  12CB  00DA               	movwf	___fladd@a
  5712  12CC                     l2367:
  5713  12CC  17DC               	bsf	___fladd@a+2,7
  5714  12CD                     l2369:
  5715  12CD  01DD               	clrf	___fladd@a+3
  5716  12CE  2AD7               	goto	l685
  5717  12CF                     l2371:
  5718  12CF  3000               	movlw	0
  5719  12D0  00DD               	movwf	___fladd@a+3
  5720  12D1  3000               	movlw	0
  5721  12D2  00DC               	movwf	___fladd@a+2
  5722  12D3  3000               	movlw	0
  5723  12D4  00DB               	movwf	___fladd@a+1
  5724  12D5  3000               	movlw	0
  5725  12D6  00DA               	movwf	___fladd@a
  5726  12D7                     l685:
  5727  12D7  0868               	movf	___fladd@bexp,w
  5728  12D8  0267               	subwf	___fladd@aexp,w
  5729  12D9  1803               	skipnc
  5730  12DA  2ADC               	goto	u3221
  5731  12DB  2ADD               	goto	u3220
  5732  12DC                     u3221:
  5733  12DC  2B21               	goto	l2407
  5734  12DD                     u3220:
  5735  12DD                     l2373:
  5736  12DD  1F66               	btfss	___fladd@signs,6
  5737  12DE  2AE0               	goto	u3231
  5738  12DF  2AE1               	goto	u3230
  5739  12E0                     u3231:
  5740  12E0  2AE5               	goto	l2377
  5741  12E1                     u3230:
  5742  12E1                     l2375:
  5743  12E1  3080               	movlw	128
  5744  12E2  00DE               	movwf	??___fladd
  5745  12E3  085E               	movf	??___fladd,w
  5746  12E4  06E6               	xorwf	___fladd@signs,f
  5747  12E5                     l2377:
  5748  12E5  0868               	movf	___fladd@bexp,w
  5749  12E6  00DE               	movwf	??___fladd
  5750  12E7  085E               	movf	??___fladd,w
  5751  12E8  00E9               	movwf	___fladd@grs
  5752  12E9                     l2379:
  5753  12E9  0867               	movf	___fladd@aexp,w
  5754  12EA  00DE               	movwf	??___fladd
  5755  12EB  085E               	movf	??___fladd,w
  5756  12EC  00E8               	movwf	___fladd@bexp
  5757  12ED                     l2381:
  5758  12ED  0869               	movf	___fladd@grs,w
  5759  12EE  00DE               	movwf	??___fladd
  5760  12EF  085E               	movf	??___fladd,w
  5761  12F0  00E7               	movwf	___fladd@aexp
  5762  12F1                     l2383:
  5763  12F1  0856               	movf	___fladd@b,w
  5764  12F2  00DE               	movwf	??___fladd
  5765  12F3  085E               	movf	??___fladd,w
  5766  12F4  00E9               	movwf	___fladd@grs
  5767  12F5                     l2385:
  5768  12F5  085A               	movf	___fladd@a,w
  5769  12F6  00DE               	movwf	??___fladd
  5770  12F7  085E               	movf	??___fladd,w
  5771  12F8  00D6               	movwf	___fladd@b
  5772  12F9                     l2387:
  5773  12F9  0869               	movf	___fladd@grs,w
  5774  12FA  00DE               	movwf	??___fladd
  5775  12FB  085E               	movf	??___fladd,w
  5776  12FC  00DA               	movwf	___fladd@a
  5777  12FD                     l2389:
  5778  12FD  0857               	movf	___fladd@b+1,w
  5779  12FE  00DE               	movwf	??___fladd
  5780  12FF  085E               	movf	??___fladd,w
  5781  1300  00E9               	movwf	___fladd@grs
  5782  1301                     l2391:
  5783  1301  085B               	movf	___fladd@a+1,w
  5784  1302  00DE               	movwf	??___fladd
  5785  1303  085E               	movf	??___fladd,w
  5786  1304  00D7               	movwf	___fladd@b+1
  5787  1305                     l2393:
  5788  1305  0869               	movf	___fladd@grs,w
  5789  1306  00DE               	movwf	??___fladd
  5790  1307  085E               	movf	??___fladd,w
  5791  1308  00DB               	movwf	___fladd@a+1
  5792  1309                     l2395:
  5793  1309  0858               	movf	___fladd@b+2,w
  5794  130A  00DE               	movwf	??___fladd
  5795  130B  085E               	movf	??___fladd,w
  5796  130C  00E9               	movwf	___fladd@grs
  5797  130D                     l2397:
  5798  130D  085C               	movf	___fladd@a+2,w
  5799  130E  00DE               	movwf	??___fladd
  5800  130F  085E               	movf	??___fladd,w
  5801  1310  00D8               	movwf	___fladd@b+2
  5802  1311                     l2399:
  5803  1311  0869               	movf	___fladd@grs,w
  5804  1312  00DE               	movwf	??___fladd
  5805  1313  085E               	movf	??___fladd,w
  5806  1314  00DC               	movwf	___fladd@a+2
  5807  1315                     l2401:
  5808  1315  0859               	movf	___fladd@b+3,w
  5809  1316  00DE               	movwf	??___fladd
  5810  1317  085E               	movf	??___fladd,w
  5811  1318  00E9               	movwf	___fladd@grs
  5812  1319                     l2403:
  5813  1319  085D               	movf	___fladd@a+3,w
  5814  131A  00DE               	movwf	??___fladd
  5815  131B  085E               	movf	??___fladd,w
  5816  131C  00D9               	movwf	___fladd@b+3
  5817  131D                     l2405:
  5818  131D  0869               	movf	___fladd@grs,w
  5819  131E  00DE               	movwf	??___fladd
  5820  131F  085E               	movf	??___fladd,w
  5821  1320  00DD               	movwf	___fladd@a+3
  5822  1321                     l2407:
  5823  1321  01E9               	clrf	___fladd@grs
  5824  1322                     l2409:
  5825  1322  0867               	movf	___fladd@aexp,w
  5826  1323  00DE               	movwf	??___fladd
  5827  1324  01DF               	clrf	??___fladd+1
  5828  1325  085F               	movf	??___fladd+1,w
  5829  1326  00E1               	movwf	??___fladd+3
  5830  1327  0868               	movf	___fladd@bexp,w
  5831  1328  025E               	subwf	??___fladd,w
  5832  1329  00E0               	movwf	??___fladd+2
  5833  132A  1C03               	skipc
  5834  132B  03E1               	decf	??___fladd+3,f
  5835  132C  0861               	movf	??___fladd+3,w
  5836  132D  3A80               	xorlw	128
  5837  132E  00FF               	movwf	btemp+1
  5838  132F  3080               	movlw	128
  5839  1330  027F               	subwf	btemp+1,w
  5840  1331  1D03               	skipz
  5841  1332  2B35               	goto	u3245
  5842  1333  301A               	movlw	26
  5843  1334  0260               	subwf	??___fladd+2,w
  5844  1335                     u3245:
  5845  1335  1C03               	skipc
  5846  1336  2B38               	goto	u3241
  5847  1337  2B39               	goto	u3240
  5848  1338                     u3241:
  5849  1338  2B76               	goto	l2425
  5850  1339                     u3240:
  5851  1339                     l2411:
  5852  1339  1283               	bcf	3,5	;RP0=0, select bank0
  5853  133A  1303               	bcf	3,6	;RP1=0, select bank0
  5854  133B  0859               	movf	___fladd@b+3,w
  5855  133C  0458               	iorwf	___fladd@b+2,w
  5856  133D  0457               	iorwf	___fladd@b+1,w
  5857  133E  0456               	iorwf	___fladd@b,w
  5858  133F  1D03               	skipz
  5859  1340  2B42               	goto	u3251
  5860  1341  2B44               	goto	u3250
  5861  1342                     u3251:
  5862  1342  3001               	movlw	1
  5863  1343  2B45               	goto	u3260
  5864  1344                     u3250:
  5865  1344  3000               	movlw	0
  5866  1345                     u3260:
  5867  1345  00DE               	movwf	??___fladd
  5868  1346  085E               	movf	??___fladd,w
  5869  1347  00E9               	movwf	___fladd@grs
  5870  1348  3000               	movlw	0
  5871  1349  00D9               	movwf	___fladd@b+3
  5872  134A  3000               	movlw	0
  5873  134B  00D8               	movwf	___fladd@b+2
  5874  134C  3000               	movlw	0
  5875  134D  00D7               	movwf	___fladd@b+1
  5876  134E  3000               	movlw	0
  5877  134F  00D6               	movwf	___fladd@b
  5878  1350  0867               	movf	___fladd@aexp,w
  5879  1351  00DE               	movwf	??___fladd
  5880  1352  085E               	movf	??___fladd,w
  5881  1353  00E8               	movwf	___fladd@bexp
  5882  1354  2B7E               	goto	l689
  5883  1355                     l691:
  5884  1355  1C69               	btfss	___fladd@grs,0
  5885  1356  2B58               	goto	u3271
  5886  1357  2B59               	goto	u3270
  5887  1358                     u3271:
  5888  1358  2B62               	goto	l2415
  5889  1359                     u3270:
  5890  1359                     l2413:
  5891  1359  0869               	movf	___fladd@grs,w
  5892  135A  00DE               	movwf	??___fladd
  5893  135B  1003               	clrc
  5894  135C  0C5E               	rrf	??___fladd,w
  5895  135D  3801               	iorlw	1
  5896  135E  00DF               	movwf	??___fladd+1
  5897  135F  085F               	movf	??___fladd+1,w
  5898  1360  00E9               	movwf	___fladd@grs
  5899  1361  2B64               	goto	l2417
  5900  1362                     l2415:
  5901  1362  1003               	clrc
  5902  1363  0CE9               	rrf	___fladd@grs,f
  5903  1364                     l2417:
  5904  1364  1C56               	btfss	___fladd@b,0
  5905  1365  2B67               	goto	u3281
  5906  1366  2B68               	goto	u3280
  5907  1367                     u3281:
  5908  1367  2B69               	goto	l2421
  5909  1368                     u3280:
  5910  1368                     l2419:
  5911  1368  17E9               	bsf	___fladd@grs,7
  5912  1369                     l2421:
  5913  1369  3001               	movlw	1
  5914  136A  00DE               	movwf	??___fladd
  5915  136B                     u3295:
  5916  136B  0D59               	rlf	___fladd@b+3,w
  5917  136C  0CD9               	rrf	___fladd@b+3,f
  5918  136D  0CD8               	rrf	___fladd@b+2,f
  5919  136E  0CD7               	rrf	___fladd@b+1,f
  5920  136F  0CD6               	rrf	___fladd@b,f
  5921  1370  0BDE               	decfsz	??___fladd& (0+127),f
  5922  1371  2B6B               	goto	u3295
  5923  1372                     l2423:
  5924  1372  3001               	movlw	1
  5925  1373  00DE               	movwf	??___fladd
  5926  1374  085E               	movf	??___fladd,w
  5927  1375  07E8               	addwf	___fladd@bexp,f
  5928  1376                     l2425:
  5929  1376  1283               	bcf	3,5	;RP0=0, select bank0
  5930  1377  1303               	bcf	3,6	;RP1=0, select bank0
  5931  1378  0867               	movf	___fladd@aexp,w
  5932  1379  0268               	subwf	___fladd@bexp,w
  5933  137A  1C03               	skipc
  5934  137B  2B7D               	goto	u3301
  5935  137C  2B7E               	goto	u3300
  5936  137D                     u3301:
  5937  137D  2B55               	goto	l691
  5938  137E                     u3300:
  5939  137E                     l689:
  5940  137E  1B66               	btfsc	___fladd@signs,6
  5941  137F  2B81               	goto	u3311
  5942  1380  2B82               	goto	u3310
  5943  1381                     u3311:
  5944  1381  2BCD               	goto	l2451
  5945  1382                     u3310:
  5946  1382                     l2427:
  5947  1382  0868               	movf	___fladd@bexp,w
  5948  1383  1D03               	btfss	3,2
  5949  1384  2B86               	goto	u3321
  5950  1385  2B87               	goto	u3320
  5951  1386                     u3321:
  5952  1386  2B90               	goto	l2433
  5953  1387                     u3320:
  5954  1387                     l2429:
  5955  1387  3000               	movlw	0
  5956  1388  00D9               	movwf	?___fladd+3
  5957  1389  3000               	movlw	0
  5958  138A  00D8               	movwf	?___fladd+2
  5959  138B  3000               	movlw	0
  5960  138C  00D7               	movwf	?___fladd+1
  5961  138D  3000               	movlw	0
  5962  138E  00D6               	movwf	?___fladd
  5963  138F  2CFB               	goto	l698
  5964  1390                     l2433:
  5965  1390  085A               	movf	___fladd@a,w
  5966  1391  07D6               	addwf	___fladd@b,f
  5967  1392  085B               	movf	___fladd@a+1,w
  5968  1393  1103               	clrz
  5969  1394  1803               	skipnc
  5970  1395  3E01               	addlw	1
  5971  1396  1903               	skipnz
  5972  1397  2B99               	goto	u3331
  5973  1398  07D7               	addwf	___fladd@b+1,f
  5974  1399                     u3331:
  5975  1399  085C               	movf	___fladd@a+2,w
  5976  139A  1103               	clrz
  5977  139B  1803               	skipnc
  5978  139C  3E01               	addlw	1
  5979  139D  1903               	skipnz
  5980  139E  2BA0               	goto	u3332
  5981  139F  07D8               	addwf	___fladd@b+2,f
  5982  13A0                     u3332:
  5983  13A0  085D               	movf	___fladd@a+3,w
  5984  13A1  1103               	clrz
  5985  13A2  1803               	skipnc
  5986  13A3  3E01               	addlw	1
  5987  13A4  1903               	skipnz
  5988  13A5  2BA7               	goto	u3333
  5989  13A6  07D9               	addwf	___fladd@b+3,f
  5990  13A7                     u3333:
  5991  13A7                     l2435:
  5992  13A7  1C59               	btfss	___fladd@b+3,0
  5993  13A8  2BAA               	goto	u3341
  5994  13A9  2BAB               	goto	u3340
  5995  13AA                     u3341:
  5996  13AA  2C81               	goto	l2485
  5997  13AB                     u3340:
  5998  13AB                     l2437:
  5999  13AB  1C69               	btfss	___fladd@grs,0
  6000  13AC  2BAE               	goto	u3351
  6001  13AD  2BAF               	goto	u3350
  6002  13AE                     u3351:
  6003  13AE  2BB8               	goto	l2441
  6004  13AF                     u3350:
  6005  13AF                     l2439:
  6006  13AF  0869               	movf	___fladd@grs,w
  6007  13B0  00DE               	movwf	??___fladd
  6008  13B1  1003               	clrc
  6009  13B2  0C5E               	rrf	??___fladd,w
  6010  13B3  3801               	iorlw	1
  6011  13B4  00DF               	movwf	??___fladd+1
  6012  13B5  085F               	movf	??___fladd+1,w
  6013  13B6  00E9               	movwf	___fladd@grs
  6014  13B7  2BBA               	goto	l2443
  6015  13B8                     l2441:
  6016  13B8  1003               	clrc
  6017  13B9  0CE9               	rrf	___fladd@grs,f
  6018  13BA                     l2443:
  6019  13BA  1C56               	btfss	___fladd@b,0
  6020  13BB  2BBD               	goto	u3361
  6021  13BC  2BBE               	goto	u3360
  6022  13BD                     u3361:
  6023  13BD  2BBF               	goto	l2447
  6024  13BE                     u3360:
  6025  13BE                     l2445:
  6026  13BE  17E9               	bsf	___fladd@grs,7
  6027  13BF                     l2447:
  6028  13BF  3001               	movlw	1
  6029  13C0  00DE               	movwf	??___fladd
  6030  13C1                     u3375:
  6031  13C1  0D59               	rlf	___fladd@b+3,w
  6032  13C2  0CD9               	rrf	___fladd@b+3,f
  6033  13C3  0CD8               	rrf	___fladd@b+2,f
  6034  13C4  0CD7               	rrf	___fladd@b+1,f
  6035  13C5  0CD6               	rrf	___fladd@b,f
  6036  13C6  0BDE               	decfsz	??___fladd& (0+127),f
  6037  13C7  2BC1               	goto	u3375
  6038  13C8                     l2449:
  6039  13C8  3001               	movlw	1
  6040  13C9  00DE               	movwf	??___fladd
  6041  13CA  085E               	movf	??___fladd,w
  6042  13CB  07E8               	addwf	___fladd@bexp,f
  6043  13CC  2C81               	goto	l2485
  6044  13CD                     l2451:
  6045  13CD  0859               	movf	___fladd@b+3,w
  6046  13CE  3A80               	xorlw	128
  6047  13CF  00FF               	movwf	btemp+1
  6048  13D0  085D               	movf	___fladd@a+3,w
  6049  13D1  3A80               	xorlw	128
  6050  13D2  027F               	subwf	btemp+1,w
  6051  13D3  1D03               	skipz
  6052  13D4  2BDF               	goto	u3383
  6053  13D5  085C               	movf	___fladd@a+2,w
  6054  13D6  0258               	subwf	___fladd@b+2,w
  6055  13D7  1D03               	skipz
  6056  13D8  2BDF               	goto	u3383
  6057  13D9  085B               	movf	___fladd@a+1,w
  6058  13DA  0257               	subwf	___fladd@b+1,w
  6059  13DB  1D03               	skipz
  6060  13DC  2BDF               	goto	u3383
  6061  13DD  085A               	movf	___fladd@a,w
  6062  13DE  0256               	subwf	___fladd@b,w
  6063  13DF                     u3383:
  6064  13DF  1803               	skipnc
  6065  13E0  2BE2               	goto	u3381
  6066  13E1  2BE3               	goto	u3380
  6067  13E2                     u3381:
  6068  13E2  2C3B               	goto	l2461
  6069  13E3                     u3380:
  6070  13E3                     l2453:
  6071  13E3  30FF               	movlw	255
  6072  13E4  00DE               	movwf	??___fladd
  6073  13E5  30FF               	movlw	255
  6074  13E6  00DF               	movwf	??___fladd+1
  6075  13E7  30FF               	movlw	255
  6076  13E8  00E0               	movwf	??___fladd+2
  6077  13E9  30FF               	movlw	255
  6078  13EA  00E1               	movwf	??___fladd+3
  6079  13EB  085A               	movf	___fladd@a,w
  6080  13EC  00E2               	movwf	??___fladd+4
  6081  13ED  085B               	movf	___fladd@a+1,w
  6082  13EE  00E3               	movwf	??___fladd+5
  6083  13EF  085C               	movf	___fladd@a+2,w
  6084  13F0  00E4               	movwf	??___fladd+6
  6085  13F1  085D               	movf	___fladd@a+3,w
  6086  13F2  00E5               	movwf	??___fladd+7
  6087  13F3  0856               	movf	___fladd@b,w
  6088  13F4  02E2               	subwf	??___fladd+4,f
  6089  13F5  0857               	movf	___fladd@b+1,w
  6090  13F6  1C03               	skipc
  6091  13F7  0F57               	incfsz	___fladd@b+1,w
  6092  13F8  2BFA               	goto	u3391
  6093  13F9  2BFB               	goto	u3392
  6094  13FA                     u3391:
  6095  13FA  02E3               	subwf	??___fladd+5,f
  6096  13FB                     u3392:
  6097  13FB  0858               	movf	___fladd@b+2,w
  6098  13FC  1C03               	skipc
  6099  13FD  0F58               	incfsz	___fladd@b+2,w
  6100  13FE  2C00               	goto	u3393
  6101  13FF  2C01               	goto	u3394
  6102  1400                     u3393:
  6103  1400  02E4               	subwf	??___fladd+6,f
  6104  1401                     u3394:
  6105  1401  0859               	movf	___fladd@b+3,w
  6106  1402  1C03               	skipc
  6107  1403  0F59               	incfsz	___fladd@b+3,w
  6108  1404  2C06               	goto	u3395
  6109  1405  2C07               	goto	u3396
  6110  1406                     u3395:
  6111  1406  02E5               	subwf	??___fladd+7,f
  6112  1407                     u3396:
  6113  1407  0862               	movf	??___fladd+4,w
  6114  1408  07DE               	addwf	??___fladd,f
  6115  1409  0863               	movf	??___fladd+5,w
  6116  140A  1803               	skipnc
  6117  140B  0F63               	incfsz	??___fladd+5,w
  6118  140C  2C0E               	goto	u3400
  6119  140D  2C0F               	goto	u3401
  6120  140E                     u3400:
  6121  140E  07DF               	addwf	??___fladd+1,f
  6122  140F                     u3401:
  6123  140F  0864               	movf	??___fladd+6,w
  6124  1410  1803               	skipnc
  6125  1411  0F64               	incfsz	??___fladd+6,w
  6126  1412  2C14               	goto	u3402
  6127  1413  2C15               	goto	u3403
  6128  1414                     u3402:
  6129  1414  07E0               	addwf	??___fladd+2,f
  6130  1415                     u3403:
  6131  1415  0865               	movf	??___fladd+7,w
  6132  1416  1803               	skipnc
  6133  1417  0A65               	incf	??___fladd+7,w
  6134  1418  07E1               	addwf	??___fladd+3,f
  6135  1419  0861               	movf	??___fladd+3,w
  6136  141A  00D9               	movwf	___fladd@b+3
  6137  141B  0860               	movf	??___fladd+2,w
  6138  141C  00D8               	movwf	___fladd@b+2
  6139  141D  085F               	movf	??___fladd+1,w
  6140  141E  00D7               	movwf	___fladd@b+1
  6141  141F  085E               	movf	??___fladd,w
  6142  1420  00D6               	movwf	___fladd@b
  6143  1421                     l2455:
  6144  1421  3080               	movlw	128
  6145  1422  00DE               	movwf	??___fladd
  6146  1423  085E               	movf	??___fladd,w
  6147  1424  06E6               	xorwf	___fladd@signs,f
  6148  1425  09E9               	comf	___fladd@grs,f
  6149  1426  0AE9               	incf	___fladd@grs,f
  6150  1427                     l2457:
  6151  1427  0869               	movf	___fladd@grs,w
  6152  1428  1D03               	btfss	3,2
  6153  1429  2C2B               	goto	u3411
  6154  142A  2C2C               	goto	u3410
  6155  142B                     u3411:
  6156  142B  2C49               	goto	l706
  6157  142C                     u3410:
  6158  142C                     l2459:
  6159  142C  3001               	movlw	1
  6160  142D  07D6               	addwf	___fladd@b,f
  6161  142E  3000               	movlw	0
  6162  142F  1803               	skipnc
  6163  1430  3001               	movlw	1
  6164  1431  07D7               	addwf	___fladd@b+1,f
  6165  1432  3000               	movlw	0
  6166  1433  1803               	skipnc
  6167  1434  3001               	movlw	1
  6168  1435  07D8               	addwf	___fladd@b+2,f
  6169  1436  3000               	movlw	0
  6170  1437  1803               	skipnc
  6171  1438  3001               	movlw	1
  6172  1439  07D9               	addwf	___fladd@b+3,f
  6173  143A  2C49               	goto	l706
  6174  143B                     l2461:
  6175  143B  085A               	movf	___fladd@a,w
  6176  143C  02D6               	subwf	___fladd@b,f
  6177  143D  085B               	movf	___fladd@a+1,w
  6178  143E  1C03               	skipc
  6179  143F  0F5B               	incfsz	___fladd@a+1,w
  6180  1440  02D7               	subwf	___fladd@b+1,f
  6181  1441  085C               	movf	___fladd@a+2,w
  6182  1442  1C03               	skipc
  6183  1443  0F5C               	incfsz	___fladd@a+2,w
  6184  1444  02D8               	subwf	___fladd@b+2,f
  6185  1445  085D               	movf	___fladd@a+3,w
  6186  1446  1C03               	skipc
  6187  1447  0F5D               	incfsz	___fladd@a+3,w
  6188  1448  02D9               	subwf	___fladd@b+3,f
  6189  1449                     l706:
  6190  1449  0859               	movf	___fladd@b+3,w
  6191  144A  0458               	iorwf	___fladd@b+2,w
  6192  144B  0457               	iorwf	___fladd@b+1,w
  6193  144C  0456               	iorwf	___fladd@b,w
  6194  144D  1D03               	skipz
  6195  144E  2C50               	goto	u3421
  6196  144F  2C51               	goto	u3420
  6197  1450                     u3421:
  6198  1450  2C7D               	goto	l2483
  6199  1451                     u3420:
  6200  1451                     l2463:
  6201  1451  0869               	movf	___fladd@grs,w
  6202  1452  1D03               	btfss	3,2
  6203  1453  2C55               	goto	u3431
  6204  1454  2C56               	goto	u3430
  6205  1455                     u3431:
  6206  1455  2C7D               	goto	l2483
  6207  1456                     u3430:
  6208  1456                     l2465:
  6209  1456  3000               	movlw	0
  6210  1457  00D9               	movwf	?___fladd+3
  6211  1458  3000               	movlw	0
  6212  1459  00D8               	movwf	?___fladd+2
  6213  145A  3000               	movlw	0
  6214  145B  00D7               	movwf	?___fladd+1
  6215  145C  3000               	movlw	0
  6216  145D  00D6               	movwf	?___fladd
  6217  145E  2CFB               	goto	l698
  6218  145F                     l2469:
  6219  145F  3001               	movlw	1
  6220  1460  00DE               	movwf	??___fladd
  6221  1461                     u3445:
  6222  1461  1003               	clrc
  6223  1462  0DD6               	rlf	___fladd@b,f
  6224  1463  0DD7               	rlf	___fladd@b+1,f
  6225  1464  0DD8               	rlf	___fladd@b+2,f
  6226  1465  0DD9               	rlf	___fladd@b+3,f
  6227  1466  0BDE               	decfsz	??___fladd,f
  6228  1467  2C61               	goto	u3445
  6229  1468                     l2471:
  6230  1468  1FE9               	btfss	___fladd@grs,7
  6231  1469  2C6B               	goto	u3451
  6232  146A  2C6C               	goto	u3450
  6233  146B                     u3451:
  6234  146B  2C6D               	goto	l710
  6235  146C                     u3450:
  6236  146C                     l2473:
  6237  146C  1456               	bsf	___fladd@b,0
  6238  146D                     l710:
  6239  146D  1C69               	btfss	___fladd@grs,0
  6240  146E  2C70               	goto	u3461
  6241  146F  2C71               	goto	u3460
  6242  1470                     u3461:
  6243  1470  2C74               	goto	l2477
  6244  1471                     u3460:
  6245  1471                     l2475:
  6246  1471  1403               	setc
  6247  1472  0DE9               	rlf	___fladd@grs,f
  6248  1473  2C76               	goto	l2479
  6249  1474                     l2477:
  6250  1474  1003               	clrc
  6251  1475  0DE9               	rlf	___fladd@grs,f
  6252  1476                     l2479:
  6253  1476  0868               	movf	___fladd@bexp,w
  6254  1477  1903               	btfsc	3,2
  6255  1478  2C7A               	goto	u3471
  6256  1479  2C7B               	goto	u3470
  6257  147A                     u3471:
  6258  147A  2C7D               	goto	l2483
  6259  147B                     u3470:
  6260  147B                     l2481:
  6261  147B  3001               	movlw	1
  6262  147C  02E8               	subwf	___fladd@bexp,f
  6263  147D                     l2483:
  6264  147D  1FD8               	btfss	___fladd@b+2,7
  6265  147E  2C80               	goto	u3481
  6266  147F  2C81               	goto	u3480
  6267  1480                     u3481:
  6268  1480  2C5F               	goto	l2469
  6269  1481                     u3480:
  6270  1481                     l2485:
  6271  1481  01E7               	clrf	___fladd@aexp
  6272  1482                     l2487:
  6273  1482  1FE9               	btfss	___fladd@grs,7
  6274  1483  2C85               	goto	u3491
  6275  1484  2C86               	goto	u3490
  6276  1485                     u3491:
  6277  1485  2C94               	goto	l2495
  6278  1486                     u3490:
  6279  1486                     l2489:
  6280  1486  0869               	movf	___fladd@grs,w
  6281  1487  397F               	andlw	127
  6282  1488  1903               	btfsc	3,2
  6283  1489  2C8B               	goto	u3501
  6284  148A  2C8C               	goto	u3500
  6285  148B                     u3501:
  6286  148B  2C8F               	goto	l716
  6287  148C                     u3500:
  6288  148C                     l2491:
  6289  148C  01E7               	clrf	___fladd@aexp
  6290  148D  0AE7               	incf	___fladd@aexp,f
  6291  148E  2C94               	goto	l2495
  6292  148F                     l716:
  6293  148F  1C56               	btfss	___fladd@b,0
  6294  1490  2C92               	goto	u3511
  6295  1491  2C93               	goto	u3510
  6296  1492                     u3511:
  6297  1492  2C94               	goto	l2495
  6298  1493                     u3510:
  6299  1493  2C8C               	goto	l2491
  6300  1494                     l2495:
  6301  1494  0867               	movf	___fladd@aexp,w
  6302  1495  1903               	btfsc	3,2
  6303  1496  2C98               	goto	u3521
  6304  1497  2C99               	goto	u3520
  6305  1498                     u3521:
  6306  1498  2CCD               	goto	l719
  6307  1499                     u3520:
  6308  1499                     l2497:
  6309  1499  3001               	movlw	1
  6310  149A  07D6               	addwf	___fladd@b,f
  6311  149B  3000               	movlw	0
  6312  149C  1803               	skipnc
  6313  149D  3001               	movlw	1
  6314  149E  07D7               	addwf	___fladd@b+1,f
  6315  149F  3000               	movlw	0
  6316  14A0  1803               	skipnc
  6317  14A1  3001               	movlw	1
  6318  14A2  07D8               	addwf	___fladd@b+2,f
  6319  14A3  3000               	movlw	0
  6320  14A4  1803               	skipnc
  6321  14A5  3001               	movlw	1
  6322  14A6  07D9               	addwf	___fladd@b+3,f
  6323  14A7                     l2499:
  6324  14A7  1C59               	btfss	___fladd@b+3,0
  6325  14A8  2CAA               	goto	u3531
  6326  14A9  2CAB               	goto	u3530
  6327  14AA                     u3531:
  6328  14AA  2CCD               	goto	l719
  6329  14AB                     u3530:
  6330  14AB                     l2501:
  6331  14AB  0856               	movf	___fladd@b,w
  6332  14AC  00DE               	movwf	??___fladd
  6333  14AD  0857               	movf	___fladd@b+1,w
  6334  14AE  00DF               	movwf	??___fladd+1
  6335  14AF  0858               	movf	___fladd@b+2,w
  6336  14B0  00E0               	movwf	??___fladd+2
  6337  14B1  0859               	movf	___fladd@b+3,w
  6338  14B2  00E1               	movwf	??___fladd+3
  6339  14B3  3001               	movlw	1
  6340  14B4  00E2               	movwf	??___fladd+4
  6341  14B5                     u3545:
  6342  14B5  0D61               	rlf	??___fladd+3,w
  6343  14B6  0CE1               	rrf	??___fladd+3,f
  6344  14B7  0CE0               	rrf	??___fladd+2,f
  6345  14B8  0CDF               	rrf	??___fladd+1,f
  6346  14B9  0CDE               	rrf	??___fladd,f
  6347  14BA                     u3540:
  6348  14BA  0BE2               	decfsz	??___fladd+4,f
  6349  14BB  2CB5               	goto	u3545
  6350  14BC  0861               	movf	??___fladd+3,w
  6351  14BD  00D9               	movwf	___fladd@b+3
  6352  14BE  0860               	movf	??___fladd+2,w
  6353  14BF  00D8               	movwf	___fladd@b+2
  6354  14C0  085F               	movf	??___fladd+1,w
  6355  14C1  00D7               	movwf	___fladd@b+1
  6356  14C2  085E               	movf	??___fladd,w
  6357  14C3  00D6               	movwf	___fladd@b
  6358  14C4  0A68               	incf	___fladd@bexp,w
  6359  14C5  1903               	btfsc	3,2
  6360  14C6  2CC8               	goto	u3551
  6361  14C7  2CC9               	goto	u3550
  6362  14C8                     u3551:
  6363  14C8  2CCD               	goto	l719
  6364  14C9                     u3550:
  6365  14C9                     l2503:
  6366  14C9  3001               	movlw	1
  6367  14CA  00DE               	movwf	??___fladd
  6368  14CB  085E               	movf	??___fladd,w
  6369  14CC  07E8               	addwf	___fladd@bexp,f
  6370  14CD                     l719:
  6371  14CD  0A68               	incf	___fladd@bexp,w
  6372  14CE  1903               	btfsc	3,2
  6373  14CF  2CD1               	goto	u3561
  6374  14D0  2CD2               	goto	u3560
  6375  14D1                     u3561:
  6376  14D1  2CD7               	goto	l2507
  6377  14D2                     u3560:
  6378  14D2                     l2505:
  6379  14D2  0868               	movf	___fladd@bexp,w
  6380  14D3  1D03               	btfss	3,2
  6381  14D4  2CD6               	goto	u3571
  6382  14D5  2CD7               	goto	u3570
  6383  14D6                     u3571:
  6384  14D6  2CE5               	goto	l2513
  6385  14D7                     u3570:
  6386  14D7                     l2507:
  6387  14D7  3000               	movlw	0
  6388  14D8  00D9               	movwf	___fladd@b+3
  6389  14D9  3000               	movlw	0
  6390  14DA  00D8               	movwf	___fladd@b+2
  6391  14DB  3000               	movlw	0
  6392  14DC  00D7               	movwf	___fladd@b+1
  6393  14DD  3000               	movlw	0
  6394  14DE  00D6               	movwf	___fladd@b
  6395  14DF                     l2509:
  6396  14DF  0868               	movf	___fladd@bexp,w
  6397  14E0  1D03               	btfss	3,2
  6398  14E1  2CE3               	goto	u3581
  6399  14E2  2CE4               	goto	u3580
  6400  14E3                     u3581:
  6401  14E3  2CE5               	goto	l2513
  6402  14E4                     u3580:
  6403  14E4                     l2511:
  6404  14E4  01E6               	clrf	___fladd@signs
  6405  14E5                     l2513:
  6406  14E5  1C68               	btfss	___fladd@bexp,0
  6407  14E6  2CE8               	goto	u3591
  6408  14E7  2CE9               	goto	u3590
  6409  14E8                     u3591:
  6410  14E8  2CEB               	goto	l2517
  6411  14E9                     u3590:
  6412  14E9                     l2515:
  6413  14E9  17D8               	bsf	___fladd@b+2,7
  6414  14EA  2CEF               	goto	l727
  6415  14EB                     l2517:
  6416  14EB  307F               	movlw	127
  6417  14EC  00DE               	movwf	??___fladd
  6418  14ED  085E               	movf	??___fladd,w
  6419  14EE  05D8               	andwf	___fladd@b+2,f
  6420  14EF                     l727:
  6421  14EF  0868               	movf	___fladd@bexp,w
  6422  14F0  00DE               	movwf	??___fladd
  6423  14F1  1003               	clrc
  6424  14F2  0C5E               	rrf	??___fladd,w
  6425  14F3  00DF               	movwf	??___fladd+1
  6426  14F4  085F               	movf	??___fladd+1,w
  6427  14F5  00D9               	movwf	___fladd@b+3
  6428  14F6                     l2519:
  6429  14F6  1FE6               	btfss	___fladd@signs,7
  6430  14F7  2CF9               	goto	u3601
  6431  14F8  2CFA               	goto	u3600
  6432  14F9                     u3601:
  6433  14F9  2CFB               	goto	l728
  6434  14FA                     u3600:
  6435  14FA                     l2521:
  6436  14FA  17D9               	bsf	___fladd@b+3,7
  6437  14FB                     l728:
  6438  14FB                     l698:
  6439  14FB  0008               	return
  6440  14FC                     __end_of___fladd:
  6441                           
  6442                           	psect	text17
  6443  1BDB                     __ptext17:	
  6444 ;; *************** function ___flneg *****************
  6445 ;; Defined at:
  6446 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  f1              4    3[COMMON] unsigned char 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;		None
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  4    3[COMMON] unsigned char 
  6453 ;; Registers used:
  6454 ;;		wreg
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6460 ;;      Params:         4       0       0       0       0
  6461 ;;      Locals:         0       0       0       0       0
  6462 ;;      Temps:          0       0       0       0       0
  6463 ;;      Totals:         4       0       0       0       0
  6464 ;;Total ram usage:        4 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; Hardware stack levels required when called:    1
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_sprintf
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           
  6475                           ;psect for function ___flneg
  6476  1BDB                     ___flneg:
  6477  1BDB                     l2923:	
  6478                           ;incstack = 0
  6479                           ; Regs used in ___flneg: [wreg]
  6480                           
  6481  1BDB  0876               	movf	___flneg@f1+3,w
  6482  1BDC  0475               	iorwf	___flneg@f1+2,w
  6483  1BDD  0474               	iorwf	___flneg@f1+1,w
  6484  1BDE  0473               	iorwf	___flneg@f1,w
  6485  1BDF  1903               	skipnz
  6486  1BE0  2BE2               	goto	u4751
  6487  1BE1  2BE3               	goto	u4750
  6488  1BE2                     u4751:
  6489  1BE2  2BE5               	goto	l2927
  6490  1BE3                     u4750:
  6491  1BE3                     l2925:
  6492  1BE3  3080               	movlw	128
  6493  1BE4  06F6               	xorwf	___flneg@f1+3,f
  6494  1BE5                     l2927:
  6495  1BE5                     l557:
  6496  1BE5  0008               	return
  6497  1BE6                     __end_of___flneg:
  6498                           
  6499                           	psect	text18
  6500  1F5C                     __ptext18:	
  6501 ;; *************** function ___flge *****************
  6502 ;; Defined at:
  6503 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  ff1             4    3[COMMON] unsigned char 
  6506 ;;  ff2             4    7[COMMON] unsigned char 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;		None               void
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6518 ;;      Params:         8       0       0       0       0
  6519 ;;      Locals:         0       0       0       0       0
  6520 ;;      Temps:          0       4       0       0       0
  6521 ;;      Totals:         8       4       0       0       0
  6522 ;;Total ram usage:       12 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    1
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		_sprintf
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           
  6533                           ;psect for function ___flge
  6534  1F5C                     ___flge:
  6535  1F5C                     l2903:	
  6536                           ;incstack = 0
  6537                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6538                           
  6539  1F5C  3000               	movlw	0
  6540  1F5D  0573               	andwf	___flge@ff1,w
  6541  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  6542  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  6543  1F60  00A0               	movwf	??___flge
  6544  1F61  3000               	movlw	0
  6545  1F62  0574               	andwf	___flge@ff1+1,w
  6546  1F63  00A1               	movwf	??___flge+1
  6547  1F64  3080               	movlw	128
  6548  1F65  0575               	andwf	___flge@ff1+2,w
  6549  1F66  00A2               	movwf	??___flge+2
  6550  1F67  307F               	movlw	127
  6551  1F68  0576               	andwf	___flge@ff1+3,w
  6552  1F69  00A3               	movwf	??___flge+3
  6553  1F6A  0823               	movf	??___flge+3,w
  6554  1F6B  0422               	iorwf	??___flge+2,w
  6555  1F6C  0421               	iorwf	??___flge+1,w
  6556  1F6D  0420               	iorwf	??___flge,w
  6557  1F6E  1D03               	skipz
  6558  1F6F  2F71               	goto	u4681
  6559  1F70  2F72               	goto	u4680
  6560  1F71                     u4681:
  6561  1F71  2F7A               	goto	l549
  6562  1F72                     u4680:
  6563  1F72                     l2905:
  6564  1F72  3000               	movlw	0
  6565  1F73  00F6               	movwf	___flge@ff1+3
  6566  1F74  3000               	movlw	0
  6567  1F75  00F5               	movwf	___flge@ff1+2
  6568  1F76  3000               	movlw	0
  6569  1F77  00F4               	movwf	___flge@ff1+1
  6570  1F78  3000               	movlw	0
  6571  1F79  00F3               	movwf	___flge@ff1
  6572  1F7A                     l549:
  6573  1F7A  3000               	movlw	0
  6574  1F7B  0577               	andwf	___flge@ff2,w
  6575  1F7C  00A0               	movwf	??___flge
  6576  1F7D  3000               	movlw	0
  6577  1F7E  0578               	andwf	___flge@ff2+1,w
  6578  1F7F  00A1               	movwf	??___flge+1
  6579  1F80  3080               	movlw	128
  6580  1F81  0579               	andwf	___flge@ff2+2,w
  6581  1F82  00A2               	movwf	??___flge+2
  6582  1F83  307F               	movlw	127
  6583  1F84  057A               	andwf	___flge@ff2+3,w
  6584  1F85  00A3               	movwf	??___flge+3
  6585  1F86  0823               	movf	??___flge+3,w
  6586  1F87  0422               	iorwf	??___flge+2,w
  6587  1F88  0421               	iorwf	??___flge+1,w
  6588  1F89  0420               	iorwf	??___flge,w
  6589  1F8A  1D03               	skipz
  6590  1F8B  2F8D               	goto	u4691
  6591  1F8C  2F8E               	goto	u4690
  6592  1F8D                     u4691:
  6593  1F8D  2F96               	goto	l2909
  6594  1F8E                     u4690:
  6595  1F8E                     l2907:
  6596  1F8E  3000               	movlw	0
  6597  1F8F  00FA               	movwf	___flge@ff2+3
  6598  1F90  3000               	movlw	0
  6599  1F91  00F9               	movwf	___flge@ff2+2
  6600  1F92  3000               	movlw	0
  6601  1F93  00F8               	movwf	___flge@ff2+1
  6602  1F94  3000               	movlw	0
  6603  1F95  00F7               	movwf	___flge@ff2
  6604  1F96                     l2909:
  6605  1F96  1FF6               	btfss	___flge@ff1+3,7
  6606  1F97  2F99               	goto	u4701
  6607  1F98  2F9A               	goto	u4700
  6608  1F99                     u4701:
  6609  1F99  2FBE               	goto	l2913
  6610  1F9A                     u4700:
  6611  1F9A                     l2911:
  6612  1F9A  3000               	movlw	0
  6613  1F9B  00A0               	movwf	??___flge
  6614  1F9C  3000               	movlw	0
  6615  1F9D  00A1               	movwf	??___flge+1
  6616  1F9E  3000               	movlw	0
  6617  1F9F  00A2               	movwf	??___flge+2
  6618  1FA0  3080               	movlw	128
  6619  1FA1  00A3               	movwf	??___flge+3
  6620  1FA2  0873               	movf	___flge@ff1,w
  6621  1FA3  02A0               	subwf	??___flge,f
  6622  1FA4  0874               	movf	___flge@ff1+1,w
  6623  1FA5  1C03               	skipc
  6624  1FA6  0F74               	incfsz	___flge@ff1+1,w
  6625  1FA7  2FA9               	goto	u4711
  6626  1FA8  2FAA               	goto	u4712
  6627  1FA9                     u4711:
  6628  1FA9  02A1               	subwf	??___flge+1,f
  6629  1FAA                     u4712:
  6630  1FAA  0875               	movf	___flge@ff1+2,w
  6631  1FAB  1C03               	skipc
  6632  1FAC  0F75               	incfsz	___flge@ff1+2,w
  6633  1FAD  2FAF               	goto	u4713
  6634  1FAE  2FB0               	goto	u4714
  6635  1FAF                     u4713:
  6636  1FAF  02A2               	subwf	??___flge+2,f
  6637  1FB0                     u4714:
  6638  1FB0  0876               	movf	___flge@ff1+3,w
  6639  1FB1  1C03               	skipc
  6640  1FB2  0F76               	incfsz	___flge@ff1+3,w
  6641  1FB3  2FB5               	goto	u4715
  6642  1FB4  2FB6               	goto	u4716
  6643  1FB5                     u4715:
  6644  1FB5  02A3               	subwf	??___flge+3,f
  6645  1FB6                     u4716:
  6646  1FB6  0823               	movf	??___flge+3,w
  6647  1FB7  00F6               	movwf	___flge@ff1+3
  6648  1FB8  0822               	movf	??___flge+2,w
  6649  1FB9  00F5               	movwf	___flge@ff1+2
  6650  1FBA  0821               	movf	??___flge+1,w
  6651  1FBB  00F4               	movwf	___flge@ff1+1
  6652  1FBC  0820               	movf	??___flge,w
  6653  1FBD  00F3               	movwf	___flge@ff1
  6654  1FBE                     l2913:
  6655  1FBE  1FFA               	btfss	___flge@ff2+3,7
  6656  1FBF  2FC1               	goto	u4721
  6657  1FC0  2FC2               	goto	u4720
  6658  1FC1                     u4721:
  6659  1FC1  2FE6               	goto	l552
  6660  1FC2                     u4720:
  6661  1FC2                     l2915:
  6662  1FC2  3000               	movlw	0
  6663  1FC3  00A0               	movwf	??___flge
  6664  1FC4  3000               	movlw	0
  6665  1FC5  00A1               	movwf	??___flge+1
  6666  1FC6  3000               	movlw	0
  6667  1FC7  00A2               	movwf	??___flge+2
  6668  1FC8  3080               	movlw	128
  6669  1FC9  00A3               	movwf	??___flge+3
  6670  1FCA  0877               	movf	___flge@ff2,w
  6671  1FCB  02A0               	subwf	??___flge,f
  6672  1FCC  0878               	movf	___flge@ff2+1,w
  6673  1FCD  1C03               	skipc
  6674  1FCE  0F78               	incfsz	___flge@ff2+1,w
  6675  1FCF  2FD1               	goto	u4731
  6676  1FD0  2FD2               	goto	u4732
  6677  1FD1                     u4731:
  6678  1FD1  02A1               	subwf	??___flge+1,f
  6679  1FD2                     u4732:
  6680  1FD2  0879               	movf	___flge@ff2+2,w
  6681  1FD3  1C03               	skipc
  6682  1FD4  0F79               	incfsz	___flge@ff2+2,w
  6683  1FD5  2FD7               	goto	u4733
  6684  1FD6  2FD8               	goto	u4734
  6685  1FD7                     u4733:
  6686  1FD7  02A2               	subwf	??___flge+2,f
  6687  1FD8                     u4734:
  6688  1FD8  087A               	movf	___flge@ff2+3,w
  6689  1FD9  1C03               	skipc
  6690  1FDA  0F7A               	incfsz	___flge@ff2+3,w
  6691  1FDB  2FDD               	goto	u4735
  6692  1FDC  2FDE               	goto	u4736
  6693  1FDD                     u4735:
  6694  1FDD  02A3               	subwf	??___flge+3,f
  6695  1FDE                     u4736:
  6696  1FDE  0823               	movf	??___flge+3,w
  6697  1FDF  00FA               	movwf	___flge@ff2+3
  6698  1FE0  0822               	movf	??___flge+2,w
  6699  1FE1  00F9               	movwf	___flge@ff2+2
  6700  1FE2  0821               	movf	??___flge+1,w
  6701  1FE3  00F8               	movwf	___flge@ff2+1
  6702  1FE4  0820               	movf	??___flge,w
  6703  1FE5  00F7               	movwf	___flge@ff2
  6704  1FE6                     l552:
  6705  1FE6  3080               	movlw	128
  6706  1FE7  06F6               	xorwf	___flge@ff1+3,f
  6707  1FE8  3080               	movlw	128
  6708  1FE9  06FA               	xorwf	___flge@ff2+3,f
  6709  1FEA  087A               	movf	___flge@ff2+3,w
  6710  1FEB  0276               	subwf	___flge@ff1+3,w
  6711  1FEC  1D03               	skipz
  6712  1FED  2FF8               	goto	u4745
  6713  1FEE  0879               	movf	___flge@ff2+2,w
  6714  1FEF  0275               	subwf	___flge@ff1+2,w
  6715  1FF0  1D03               	skipz
  6716  1FF1  2FF8               	goto	u4745
  6717  1FF2  0878               	movf	___flge@ff2+1,w
  6718  1FF3  0274               	subwf	___flge@ff1+1,w
  6719  1FF4  1D03               	skipz
  6720  1FF5  2FF8               	goto	u4745
  6721  1FF6  0877               	movf	___flge@ff2,w
  6722  1FF7  0273               	subwf	___flge@ff1,w
  6723  1FF8                     u4745:
  6724  1FF8  1803               	skipnc
  6725  1FF9  2FFB               	goto	u4741
  6726  1FFA  2FFC               	goto	u4740
  6727  1FFB                     u4741:
  6728  1FFB  2FFE               	goto	l2919
  6729  1FFC                     u4740:
  6730  1FFC                     l2917:
  6731  1FFC  1003               	clrc
  6732  1FFD  2FFF               	goto	l553
  6733  1FFE                     l2919:
  6734  1FFE  1403               	setc
  6735  1FFF                     l553:
  6736  1FFF  0008               	return
  6737  2000                     __end_of___flge:
  6738                           
  6739                           	psect	text19
  6740  1D19                     __ptext19:	
  6741 ;; *************** function ___fleq *****************
  6742 ;; Defined at:
  6743 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  ff1             4    3[COMMON] unsigned char 
  6746 ;;  ff2             4    7[COMMON] unsigned char 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;		None
  6749 ;; Return value:  Size  Location     Type
  6750 ;;		None               void
  6751 ;; Registers used:
  6752 ;;		wreg, status,2, status,0
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6758 ;;      Params:         8       0       0       0       0
  6759 ;;      Locals:         0       0       0       0       0
  6760 ;;      Temps:          0       4       0       0       0
  6761 ;;      Totals:         8       4       0       0       0
  6762 ;;Total ram usage:       12 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; Hardware stack levels required when called:    1
  6765 ;; This function calls:
  6766 ;;		Nothing
  6767 ;; This function is called by:
  6768 ;;		_sprintf
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           
  6773                           ;psect for function ___fleq
  6774  1D19                     ___fleq:
  6775  1D19                     l2891:	
  6776                           ;incstack = 0
  6777                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6778                           
  6779  1D19  3000               	movlw	0
  6780  1D1A  0573               	andwf	___fleq@ff1,w
  6781  1D1B  1283               	bcf	3,5	;RP0=0, select bank0
  6782  1D1C  1303               	bcf	3,6	;RP1=0, select bank0
  6783  1D1D  00A0               	movwf	??___fleq
  6784  1D1E  3000               	movlw	0
  6785  1D1F  0574               	andwf	___fleq@ff1+1,w
  6786  1D20  00A1               	movwf	??___fleq+1
  6787  1D21  3080               	movlw	128
  6788  1D22  0575               	andwf	___fleq@ff1+2,w
  6789  1D23  00A2               	movwf	??___fleq+2
  6790  1D24  307F               	movlw	127
  6791  1D25  0576               	andwf	___fleq@ff1+3,w
  6792  1D26  00A3               	movwf	??___fleq+3
  6793  1D27  0823               	movf	??___fleq+3,w
  6794  1D28  0422               	iorwf	??___fleq+2,w
  6795  1D29  0421               	iorwf	??___fleq+1,w
  6796  1D2A  0420               	iorwf	??___fleq,w
  6797  1D2B  1D03               	skipz
  6798  1D2C  2D2E               	goto	u4651
  6799  1D2D  2D2F               	goto	u4650
  6800  1D2E                     u4651:
  6801  1D2E  2D37               	goto	l544
  6802  1D2F                     u4650:
  6803  1D2F                     l2893:
  6804  1D2F  3000               	movlw	0
  6805  1D30  00F6               	movwf	___fleq@ff1+3
  6806  1D31  3000               	movlw	0
  6807  1D32  00F5               	movwf	___fleq@ff1+2
  6808  1D33  3000               	movlw	0
  6809  1D34  00F4               	movwf	___fleq@ff1+1
  6810  1D35  3000               	movlw	0
  6811  1D36  00F3               	movwf	___fleq@ff1
  6812  1D37                     l544:
  6813  1D37  3000               	movlw	0
  6814  1D38  0577               	andwf	___fleq@ff2,w
  6815  1D39  00A0               	movwf	??___fleq
  6816  1D3A  3000               	movlw	0
  6817  1D3B  0578               	andwf	___fleq@ff2+1,w
  6818  1D3C  00A1               	movwf	??___fleq+1
  6819  1D3D  3080               	movlw	128
  6820  1D3E  0579               	andwf	___fleq@ff2+2,w
  6821  1D3F  00A2               	movwf	??___fleq+2
  6822  1D40  307F               	movlw	127
  6823  1D41  057A               	andwf	___fleq@ff2+3,w
  6824  1D42  00A3               	movwf	??___fleq+3
  6825  1D43  0823               	movf	??___fleq+3,w
  6826  1D44  0422               	iorwf	??___fleq+2,w
  6827  1D45  0421               	iorwf	??___fleq+1,w
  6828  1D46  0420               	iorwf	??___fleq,w
  6829  1D47  1D03               	skipz
  6830  1D48  2D4A               	goto	u4661
  6831  1D49  2D4B               	goto	u4660
  6832  1D4A                     u4661:
  6833  1D4A  2D53               	goto	l545
  6834  1D4B                     u4660:
  6835  1D4B                     l2895:
  6836  1D4B  3000               	movlw	0
  6837  1D4C  00FA               	movwf	___fleq@ff2+3
  6838  1D4D  3000               	movlw	0
  6839  1D4E  00F9               	movwf	___fleq@ff2+2
  6840  1D4F  3000               	movlw	0
  6841  1D50  00F8               	movwf	___fleq@ff2+1
  6842  1D51  3000               	movlw	0
  6843  1D52  00F7               	movwf	___fleq@ff2
  6844  1D53                     l545:
  6845  1D53  087A               	movf	___fleq@ff2+3,w
  6846  1D54  0676               	xorwf	___fleq@ff1+3,w
  6847  1D55  1D03               	skipz
  6848  1D56  2D61               	goto	u4675
  6849  1D57  0879               	movf	___fleq@ff2+2,w
  6850  1D58  0675               	xorwf	___fleq@ff1+2,w
  6851  1D59  1D03               	skipz
  6852  1D5A  2D61               	goto	u4675
  6853  1D5B  0878               	movf	___fleq@ff2+1,w
  6854  1D5C  0674               	xorwf	___fleq@ff1+1,w
  6855  1D5D  1D03               	skipz
  6856  1D5E  2D61               	goto	u4675
  6857  1D5F  0877               	movf	___fleq@ff2,w
  6858  1D60  0673               	xorwf	___fleq@ff1,w
  6859  1D61                     u4675:
  6860  1D61  1903               	skipnz
  6861  1D62  2D64               	goto	u4671
  6862  1D63  2D65               	goto	u4670
  6863  1D64                     u4671:
  6864  1D64  2D67               	goto	l2899
  6865  1D65                     u4670:
  6866  1D65                     l2897:
  6867  1D65  1003               	clrc
  6868  1D66  2D68               	goto	l546
  6869  1D67                     l2899:
  6870  1D67  1403               	setc
  6871  1D68                     l546:
  6872  1D68  0008               	return
  6873  1D69                     __end_of___fleq:
  6874                           
  6875                           	psect	text20
  6876  1BAB                     __ptext20:	
  6877 ;; *************** function _spiWrite *****************
  6878 ;; Defined at:
  6879 ;;		line 34 in file "SPI.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  dat             1    wreg     unsigned char 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  dat             1    3[COMMON] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  1    wreg      void 
  6886 ;; Registers used:
  6887 ;;		wreg
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6893 ;;      Params:         0       0       0       0       0
  6894 ;;      Locals:         1       0       0       0       0
  6895 ;;      Temps:          0       0       0       0       0
  6896 ;;      Totals:         1       0       0       0       0
  6897 ;;Total ram usage:        1 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    1
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_main
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           
  6908                           ;psect for function _spiWrite
  6909  1BAB                     _spiWrite:
  6910                           
  6911                           ;incstack = 0
  6912                           ; Regs used in _spiWrite: [wreg]
  6913                           ;spiWrite@dat stored from wreg
  6914  1BAB  00F3               	movwf	spiWrite@dat
  6915  1BAC                     l3037:
  6916                           
  6917                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  6918  1BAC  0873               	movf	spiWrite@dat,w
  6919  1BAD  1283               	bcf	3,5	;RP0=0, select bank0
  6920  1BAE  1303               	bcf	3,6	;RP1=0, select bank0
  6921  1BAF  0093               	movwf	19	;volatile
  6922  1BB0                     l26:
  6923  1BB0  0008               	return
  6924  1BB1                     __end_of_spiWrite:
  6925                           
  6926                           	psect	text21
  6927  1BC8                     __ptext21:	
  6928 ;; *************** function _spiRead *****************
  6929 ;; Defined at:
  6930 ;;		line 47 in file "SPI.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;		None
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  1    wreg      unsigned char 
  6937 ;; Registers used:
  6938 ;;		wreg, status,2, status,0, pclath, cstack
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6944 ;;      Params:         0       0       0       0       0
  6945 ;;      Locals:         0       0       0       0       0
  6946 ;;      Temps:          0       0       0       0       0
  6947 ;;      Totals:         0       0       0       0       0
  6948 ;;Total ram usage:        0 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:    2
  6951 ;; This function calls:
  6952 ;;		_spiReceiveWait
  6953 ;; This function is called by:
  6954 ;;		_main
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           
  6959                           ;psect for function _spiRead
  6960  1BC8                     _spiRead:
  6961  1BC8                     l3039:	
  6962                           ;incstack = 0
  6963                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  6964                           
  6965                           
  6966                           ;SPI.c: 49:     spiReceiveWait();
  6967  1BC8  160A  158A  23B1  160A  158A  	fcall	_spiReceiveWait
  6968  1BCD                     l3041:
  6969                           
  6970                           ;SPI.c: 50:     return(SSPBUF);
  6971  1BCD  1283               	bcf	3,5	;RP0=0, select bank0
  6972  1BCE  1303               	bcf	3,6	;RP1=0, select bank0
  6973  1BCF  0813               	movf	19,w	;volatile
  6974  1BD0                     l34:
  6975  1BD0  0008               	return
  6976  1BD1                     __end_of_spiRead:
  6977                           
  6978                           	psect	text22
  6979  1BB1                     __ptext22:	
  6980 ;; *************** function _spiReceiveWait *****************
  6981 ;; Defined at:
  6982 ;;		line 29 in file "SPI.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;		None
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  1    wreg      void 
  6989 ;; Registers used:
  6990 ;;		None
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6996 ;;      Params:         0       0       0       0       0
  6997 ;;      Locals:         0       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0
  6999 ;;      Totals:         0       0       0       0       0
  7000 ;;Total ram usage:        0 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:    1
  7003 ;; This function calls:
  7004 ;;		Nothing
  7005 ;; This function is called by:
  7006 ;;		_spiRead
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           
  7011                           ;psect for function _spiReceiveWait
  7012  1BB1                     _spiReceiveWait:
  7013  1BB1                     l2673:	
  7014                           ;incstack = 0
  7015                           ; Regs used in _spiReceiveWait: []
  7016                           
  7017  1BB1                     l20:	
  7018                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  7019                           
  7020  1BB1  1683               	bsf	3,5	;RP0=1, select bank1
  7021  1BB2  1303               	bcf	3,6	;RP1=0, select bank1
  7022  1BB3  1C14               	btfss	20,0	;volatile
  7023  1BB4  2BB6               	goto	u3991
  7024  1BB5  2BB7               	goto	u3990
  7025  1BB6                     u3991:
  7026  1BB6  2BB1               	goto	l20
  7027  1BB7                     u3990:
  7028  1BB7                     l23:
  7029  1BB7  0008               	return
  7030  1BB8                     __end_of_spiReceiveWait:
  7031                           
  7032                           	psect	text23
  7033  1C23                     __ptext23:	
  7034 ;; *************** function _setup *****************
  7035 ;; Defined at:
  7036 ;;		line 130 in file "main3a.c"
  7037 ;; Parameters:    Size  Location     Type
  7038 ;;		None
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;		None
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  1    wreg      void 
  7043 ;; Registers used:
  7044 ;;		wreg, status,2, status,0, pclath, cstack
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7050 ;;      Params:         0       0       0       0       0
  7051 ;;      Locals:         0       0       0       0       0
  7052 ;;      Temps:          0       0       0       0       0
  7053 ;;      Totals:         0       0       0       0       0
  7054 ;;Total ram usage:        0 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:    2
  7057 ;; This function calls:
  7058 ;;		_spiInit
  7059 ;; This function is called by:
  7060 ;;		_main
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           
  7065                           ;psect for function _setup
  7066  1C23                     _setup:
  7067  1C23                     l3045:	
  7068                           ;incstack = 0
  7069                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  7070                           
  7071                           
  7072                           ;main3a.c: 131:     ANSEL = 0;
  7073  1C23  1683               	bsf	3,5	;RP0=1, select bank3
  7074  1C24  1703               	bsf	3,6	;RP1=1, select bank3
  7075  1C25  0188               	clrf	8	;volatile
  7076                           
  7077                           ;main3a.c: 132:     ANSELH = 0;
  7078  1C26  0189               	clrf	9	;volatile
  7079  1C27                     l3047:
  7080                           
  7081                           ;main3a.c: 134:     TRISCbits.TRISC2 = 0;
  7082  1C27  1683               	bsf	3,5	;RP0=1, select bank1
  7083  1C28  1303               	bcf	3,6	;RP1=0, select bank1
  7084  1C29  1107               	bcf	7,2	;volatile
  7085  1C2A                     l3049:
  7086                           
  7087                           ;main3a.c: 135:     TRISA0 = 0;
  7088  1C2A  1005               	bcf	5,0	;volatile
  7089                           
  7090                           ;main3a.c: 136:     TRISB = 0;
  7091  1C2B  0186               	clrf	6	;volatile
  7092                           
  7093                           ;main3a.c: 137:     TRISD = 0;
  7094  1C2C  0188               	clrf	8	;volatile
  7095                           
  7096                           ;main3a.c: 139:     PORTB = 0;
  7097  1C2D  1283               	bcf	3,5	;RP0=0, select bank0
  7098  1C2E  1303               	bcf	3,6	;RP1=0, select bank0
  7099  1C2F  0186               	clrf	6	;volatile
  7100                           
  7101                           ;main3a.c: 140:     PORTD = 0;
  7102  1C30  0188               	clrf	8	;volatile
  7103  1C31                     l3051:
  7104                           
  7105                           ;main3a.c: 141:     PORTCbits.RC2 = 1;
  7106  1C31  1507               	bsf	7,2	;volatile
  7107  1C32                     l3053:
  7108                           
  7109                           ;main3a.c: 142:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
  7110  1C32  01F3               	clrf	spiInit@sDataSample
  7111  1C33  01F4               	clrf	spiInit@sClockIdle
  7112  1C34  01F5               	clrf	spiInit@sTransmitEdge
  7113  1C35  3020               	movlw	32
  7114  1C36  160A  158A  240D  160A  158A  	fcall	_spiInit
  7115  1C3B                     l138:
  7116  1C3B  0008               	return
  7117  1C3C                     __end_of_setup:
  7118                           
  7119                           	psect	text24
  7120  1C0D                     __ptext24:	
  7121 ;; *************** function _spiInit *****************
  7122 ;; Defined at:
  7123 ;;		line 12 in file "SPI.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  sType           1    wreg     enum E1264
  7126 ;;  sDataSample     1    3[COMMON] enum E1272
  7127 ;;  sClockIdle      1    4[COMMON] enum E1276
  7128 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;  sType           1    6[COMMON] enum E1264
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  1    wreg      void 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7140 ;;      Params:         3       0       0       0       0
  7141 ;;      Locals:         1       0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0
  7143 ;;      Totals:         4       0       0       0       0
  7144 ;;Total ram usage:        4 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    1
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_setup
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           
  7155                           ;psect for function _spiInit
  7156  1C0D                     _spiInit:
  7157                           
  7158                           ;incstack = 0
  7159                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  7160                           ;spiInit@sType stored from wreg
  7161  1C0D  00F6               	movwf	spiInit@sType
  7162  1C0E                     l2663:
  7163                           
  7164                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  7165  1C0E  1683               	bsf	3,5	;RP0=1, select bank1
  7166  1C0F  1303               	bcf	3,6	;RP1=0, select bank1
  7167  1C10  1287               	bcf	7,5	;volatile
  7168                           
  7169                           ;SPI.c: 15:     if(sType & 0b00000100)
  7170  1C11  1D76               	btfss	spiInit@sType,2
  7171  1C12  2C14               	goto	u3981
  7172  1C13  2C15               	goto	u3980
  7173  1C14                     u3981:
  7174  1C14  2C19               	goto	l2669
  7175  1C15                     u3980:
  7176  1C15                     l2665:
  7177                           
  7178                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  7179  1C15  0875               	movf	spiInit@sTransmitEdge,w
  7180  1C16  0094               	movwf	20	;volatile
  7181  1C17                     l2667:
  7182                           
  7183                           ;SPI.c: 18:         TRISC3 = 1;
  7184  1C17  1587               	bsf	7,3	;volatile
  7185                           
  7186                           ;SPI.c: 19:     }
  7187  1C18  2C1D               	goto	l16
  7188  1C19                     l2669:
  7189                           
  7190                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  7191  1C19  0873               	movf	spiInit@sDataSample,w
  7192  1C1A  0475               	iorwf	spiInit@sTransmitEdge,w
  7193  1C1B  0094               	movwf	20	;volatile
  7194  1C1C                     l2671:
  7195                           
  7196                           ;SPI.c: 23:         TRISC3 = 0;
  7197  1C1C  1187               	bcf	7,3	;volatile
  7198  1C1D                     l16:	
  7199                           ;SPI.c: 24:     }
  7200                           
  7201                           
  7202                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  7203  1C1D  0876               	movf	spiInit@sType,w
  7204  1C1E  0474               	iorwf	spiInit@sClockIdle,w
  7205  1C1F  1283               	bcf	3,5	;RP0=0, select bank0
  7206  1C20  1303               	bcf	3,6	;RP1=0, select bank0
  7207  1C21  0094               	movwf	20	;volatile
  7208  1C22                     l17:
  7209  1C22  0008               	return
  7210  1C23                     __end_of_spiInit:
  7211                           
  7212                           	psect	text25
  7213  1C3C                     __ptext25:	
  7214 ;; *************** function _send_crct *****************
  7215 ;; Defined at:
  7216 ;;		line 176 in file "main3a.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;  st              1    wreg     PTR unsigned char 
  7219 ;;		 -> f1(10), 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;  st              1    7[COMMON] PTR unsigned char 
  7222 ;;		 -> f1(10), 
  7223 ;;  i               2    5[COMMON] int 
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  1    wreg      void 
  7226 ;; Registers used:
  7227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7233 ;;      Params:         0       0       0       0       0
  7234 ;;      Locals:         3       0       0       0       0
  7235 ;;      Temps:          1       0       0       0       0
  7236 ;;      Totals:         4       0       0       0       0
  7237 ;;Total ram usage:        4 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:    2
  7240 ;; This function calls:
  7241 ;;		_send_char
  7242 ;; This function is called by:
  7243 ;;		_main
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           
  7248                           ;psect for function _send_crct
  7249  1C3C                     _send_crct:
  7250                           
  7251                           ;incstack = 0
  7252                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7253                           ;send_crct@st stored from wreg
  7254  1C3C  00F7               	movwf	send_crct@st
  7255  1C3D                     l3343:
  7256                           
  7257                           ;main3a.c: 177:     int i = 0;
  7258  1C3D  01F5               	clrf	send_crct@i
  7259  1C3E  01F6               	clrf	send_crct@i+1
  7260                           
  7261                           ;main3a.c: 178:     while (st[i] != 0){
  7262  1C3F  2C51               	goto	l3349
  7263  1C40                     l3345:
  7264                           
  7265                           ;main3a.c: 179:         send_char(st[i]);
  7266  1C40  0875               	movf	send_crct@i,w
  7267  1C41  0777               	addwf	send_crct@st,w
  7268  1C42  00F4               	movwf	??_send_crct
  7269  1C43  0874               	movf	??_send_crct,w
  7270  1C44  0084               	movwf	4
  7271  1C45  0800               	movf	0,w
  7272  1C46  160A  158A  23D1  160A  158A  	fcall	_send_char
  7273  1C4B                     l3347:
  7274                           
  7275                           ;main3a.c: 180:         i++;
  7276  1C4B  3001               	movlw	1
  7277  1C4C  07F5               	addwf	send_crct@i,f
  7278  1C4D  1803               	skipnc
  7279  1C4E  0AF6               	incf	send_crct@i+1,f
  7280  1C4F  3000               	movlw	0
  7281  1C50  07F6               	addwf	send_crct@i+1,f
  7282  1C51                     l3349:
  7283                           
  7284                           ;main3a.c: 178:     while (st[i] != 0){
  7285  1C51  0875               	movf	send_crct@i,w
  7286  1C52  0777               	addwf	send_crct@st,w
  7287  1C53  00F4               	movwf	??_send_crct
  7288  1C54  0874               	movf	??_send_crct,w
  7289  1C55  0084               	movwf	4
  7290  1C56  1383               	bcf	3,7	;select IRP bank0
  7291  1C57  0800               	movf	0,w
  7292  1C58  1D03               	btfss	3,2
  7293  1C59  2C5B               	goto	u5531
  7294  1C5A  2C5C               	goto	u5530
  7295  1C5B                     u5531:
  7296  1C5B  2C40               	goto	l3345
  7297  1C5C                     u5530:
  7298  1C5C                     l153:
  7299  1C5C  0008               	return
  7300  1C5D                     __end_of_send_crct:
  7301                           
  7302                           	psect	text26
  7303  1BD1                     __ptext26:	
  7304 ;; *************** function _send_char *****************
  7305 ;; Defined at:
  7306 ;;		line 184 in file "main3a.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;  dato            1    wreg     unsigned char 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  dato            1    3[COMMON] unsigned char 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      void 
  7313 ;; Registers used:
  7314 ;;		wreg
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7320 ;;      Params:         0       0       0       0       0
  7321 ;;      Locals:         1       0       0       0       0
  7322 ;;      Temps:          0       0       0       0       0
  7323 ;;      Totals:         1       0       0       0       0
  7324 ;;Total ram usage:        1 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    1
  7327 ;; This function calls:
  7328 ;;		Nothing
  7329 ;; This function is called by:
  7330 ;;		_send_crct
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           
  7335                           ;psect for function _send_char
  7336  1BD1                     _send_char:
  7337                           
  7338                           ;incstack = 0
  7339                           ; Regs used in _send_char: [wreg]
  7340                           ;send_char@dato stored from wreg
  7341  1BD1  00F3               	movwf	send_char@dato
  7342  1BD2                     l2675:
  7343  1BD2                     l156:	
  7344                           ;main3a.c: 185:     while(!TXIF);
  7345                           
  7346  1BD2  1283               	bcf	3,5	;RP0=0, select bank0
  7347  1BD3  1303               	bcf	3,6	;RP1=0, select bank0
  7348  1BD4  1E0C               	btfss	12,4	;volatile
  7349  1BD5  2BD7               	goto	u4001
  7350  1BD6  2BD8               	goto	u4000
  7351  1BD7                     u4001:
  7352  1BD7  2BD2               	goto	l156
  7353  1BD8                     u4000:
  7354  1BD8                     l2677:
  7355                           
  7356                           ;main3a.c: 186:     TXREG = dato;
  7357  1BD8  0873               	movf	send_char@dato,w
  7358  1BD9  0099               	movwf	25	;volatile
  7359  1BDA                     l159:
  7360  1BDA  0008               	return
  7361  1BDB                     __end_of_send_char:
  7362                           
  7363                           	psect	text27
  7364  0803                     __ptext27:	
  7365 ;; *************** function _conv *****************
  7366 ;; Defined at:
  7367 ;;		line 188 in file "main3a.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  aa              1    wreg     unsigned char 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  aa              1   46[BANK0 ] unsigned char 
  7372 ;;  result          4   42[BANK0 ] unsigned char 
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  4   34[BANK0 ] unsigned char 
  7375 ;; Registers used:
  7376 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7382 ;;      Params:         0       4       0       0       0
  7383 ;;      Locals:         0       5       0       0       0
  7384 ;;      Temps:          0       4       0       0       0
  7385 ;;      Totals:         0      13       0       0       0
  7386 ;;Total ram usage:       13 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; Hardware stack levels required when called:    3
  7389 ;; This function calls:
  7390 ;;		___flmul
  7391 ;;		___xxtofl
  7392 ;; This function is called by:
  7393 ;;		_main
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           
  7398                           ;psect for function _conv
  7399  0803                     _conv:
  7400                           
  7401                           ;incstack = 0
  7402                           ; Regs used in _conv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7403                           ;conv@aa stored from wreg
  7404  0803  1283               	bcf	3,5	;RP0=0, select bank0
  7405  0804  1303               	bcf	3,6	;RP1=0, select bank0
  7406  0805  00CE               	movwf	conv@aa
  7407  0806                     l3075:
  7408                           
  7409                           ;main3a.c: 189:     double result;;main3a.c: 190:     result = aa*0.0196;
  7410  0806  303C               	movlw	60
  7411  0807  00AB               	movwf	___flmul@b+3
  7412  0808  30A0               	movlw	160
  7413  0809  00AA               	movwf	___flmul@b+2
  7414  080A  3090               	movlw	144
  7415  080B  00A9               	movwf	___flmul@b+1
  7416  080C  302E               	movlw	46
  7417  080D  00A8               	movwf	___flmul@b
  7418  080E  084E               	movf	conv@aa,w
  7419  080F  00C6               	movwf	??_conv
  7420  0810  01C7               	clrf	??_conv+1
  7421  0811  01C8               	clrf	??_conv+2
  7422  0812  01C9               	clrf	??_conv+3
  7423  0813  0849               	movf	??_conv+3,w
  7424  0814  00F6               	movwf	___xxtofl@val+3
  7425  0815  0848               	movf	??_conv+2,w
  7426  0816  00F5               	movwf	___xxtofl@val+2
  7427  0817  0847               	movf	??_conv+1,w
  7428  0818  00F4               	movwf	___xxtofl@val+1
  7429  0819  0846               	movf	??_conv,w
  7430  081A  00F3               	movwf	___xxtofl@val
  7431  081B  3001               	movlw	1
  7432  081C  160A  118A  203D  120A  158A  	fcall	___xxtofl
  7433  0821  0876               	movf	?___xxtofl+3,w
  7434  0822  1283               	bcf	3,5	;RP0=0, select bank0
  7435  0823  1303               	bcf	3,6	;RP1=0, select bank0
  7436  0824  00AF               	movwf	___flmul@a+3
  7437  0825  0875               	movf	?___xxtofl+2,w
  7438  0826  00AE               	movwf	___flmul@a+2
  7439  0827  0874               	movf	?___xxtofl+1,w
  7440  0828  00AD               	movwf	___flmul@a+1
  7441  0829  0873               	movf	?___xxtofl,w
  7442  082A  00AC               	movwf	___flmul@a
  7443  082B  120A  158A  213C  120A  158A  	fcall	___flmul
  7444  0830  1283               	bcf	3,5	;RP0=0, select bank0
  7445  0831  1303               	bcf	3,6	;RP1=0, select bank0
  7446  0832  082B               	movf	?___flmul+3,w
  7447  0833  00CD               	movwf	conv@result+3
  7448  0834  082A               	movf	?___flmul+2,w
  7449  0835  00CC               	movwf	conv@result+2
  7450  0836  0829               	movf	?___flmul+1,w
  7451  0837  00CB               	movwf	conv@result+1
  7452  0838  0828               	movf	?___flmul,w
  7453  0839  00CA               	movwf	conv@result
  7454  083A                     l3077:
  7455                           
  7456                           ;main3a.c: 191:     return result;
  7457  083A  084D               	movf	conv@result+3,w
  7458  083B  00C5               	movwf	?_conv+3
  7459  083C  084C               	movf	conv@result+2,w
  7460  083D  00C4               	movwf	?_conv+2
  7461  083E  084B               	movf	conv@result+1,w
  7462  083F  00C3               	movwf	?_conv+1
  7463  0840  084A               	movf	conv@result,w
  7464  0841  00C2               	movwf	?_conv
  7465  0842                     l162:
  7466  0842  0008               	return
  7467  0843                     __end_of_conv:
  7468                           
  7469                           	psect	text28
  7470  103D                     __ptext28:	
  7471 ;; *************** function ___xxtofl *****************
  7472 ;; Defined at:
  7473 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;  sign            1    wreg     unsigned char 
  7476 ;;  val             4    3[COMMON] long 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;  sign            1    0[BANK0 ] unsigned char 
  7479 ;;  arg             4    2[BANK0 ] unsigned long 
  7480 ;;  exp             1    1[BANK0 ] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  4    3[COMMON] unsigned char 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7490 ;;      Params:         4       0       0       0       0
  7491 ;;      Locals:         0       6       0       0       0
  7492 ;;      Temps:          4       0       0       0       0
  7493 ;;      Totals:         8       6       0       0       0
  7494 ;;Total ram usage:       14 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    1
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_conv
  7501 ;;		_sprintf
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           
  7506                           ;psect for function ___xxtofl
  7507  103D                     ___xxtofl:
  7508                           
  7509                           ;incstack = 0
  7510                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7511                           ;___xxtofl@sign stored from wreg
  7512  103D  1283               	bcf	3,5	;RP0=0, select bank0
  7513  103E  1303               	bcf	3,6	;RP1=0, select bank0
  7514  103F  00A0               	movwf	___xxtofl@sign
  7515  1040                     l2993:
  7516  1040  0820               	movf	___xxtofl@sign,w
  7517  1041  1903               	btfsc	3,2
  7518  1042  2844               	goto	u4921
  7519  1043  2845               	goto	u4920
  7520  1044                     u4921:
  7521  1044  2859               	goto	l2999
  7522  1045                     u4920:
  7523  1045                     l2995:
  7524  1045  1FF6               	btfss	___xxtofl@val+3,7
  7525  1046  2848               	goto	u4931
  7526  1047  2849               	goto	u4930
  7527  1048                     u4931:
  7528  1048  2859               	goto	l2999
  7529  1049                     u4930:
  7530  1049                     l2997:
  7531  1049  0973               	comf	___xxtofl@val,w
  7532  104A  00A2               	movwf	___xxtofl@arg
  7533  104B  0974               	comf	___xxtofl@val+1,w
  7534  104C  00A3               	movwf	___xxtofl@arg+1
  7535  104D  0975               	comf	___xxtofl@val+2,w
  7536  104E  00A4               	movwf	___xxtofl@arg+2
  7537  104F  0976               	comf	___xxtofl@val+3,w
  7538  1050  00A5               	movwf	___xxtofl@arg+3
  7539  1051  0AA2               	incf	___xxtofl@arg,f
  7540  1052  1903               	skipnz
  7541  1053  0AA3               	incf	___xxtofl@arg+1,f
  7542  1054  1903               	skipnz
  7543  1055  0AA4               	incf	___xxtofl@arg+2,f
  7544  1056  1903               	skipnz
  7545  1057  0AA5               	incf	___xxtofl@arg+3,f
  7546  1058  2861               	goto	l825
  7547  1059                     l2999:
  7548  1059  0876               	movf	___xxtofl@val+3,w
  7549  105A  00A5               	movwf	___xxtofl@arg+3
  7550  105B  0875               	movf	___xxtofl@val+2,w
  7551  105C  00A4               	movwf	___xxtofl@arg+2
  7552  105D  0874               	movf	___xxtofl@val+1,w
  7553  105E  00A3               	movwf	___xxtofl@arg+1
  7554  105F  0873               	movf	___xxtofl@val,w
  7555  1060  00A2               	movwf	___xxtofl@arg
  7556  1061                     l825:
  7557  1061  0876               	movf	___xxtofl@val+3,w
  7558  1062  0475               	iorwf	___xxtofl@val+2,w
  7559  1063  0474               	iorwf	___xxtofl@val+1,w
  7560  1064  0473               	iorwf	___xxtofl@val,w
  7561  1065  1D03               	skipz
  7562  1066  2868               	goto	u4941
  7563  1067  2869               	goto	u4940
  7564  1068                     u4941:
  7565  1068  2872               	goto	l3005
  7566  1069                     u4940:
  7567  1069                     l3001:
  7568  1069  3000               	movlw	0
  7569  106A  00F6               	movwf	?___xxtofl+3
  7570  106B  3000               	movlw	0
  7571  106C  00F5               	movwf	?___xxtofl+2
  7572  106D  3000               	movlw	0
  7573  106E  00F4               	movwf	?___xxtofl+1
  7574  106F  3000               	movlw	0
  7575  1070  00F3               	movwf	?___xxtofl
  7576  1071  28F8               	goto	l827
  7577  1072                     l3005:
  7578  1072  3096               	movlw	150
  7579  1073  00F7               	movwf	??___xxtofl
  7580  1074  0877               	movf	??___xxtofl,w
  7581  1075  00A1               	movwf	___xxtofl@exp
  7582  1076  2884               	goto	l3009
  7583  1077                     l3007:
  7584  1077  3001               	movlw	1
  7585  1078  00F7               	movwf	??___xxtofl
  7586  1079  0877               	movf	??___xxtofl,w
  7587  107A  07A1               	addwf	___xxtofl@exp,f
  7588  107B  3001               	movlw	1
  7589  107C                     u4955:
  7590  107C  1003               	clrc
  7591  107D  0CA5               	rrf	___xxtofl@arg+3,f
  7592  107E  0CA4               	rrf	___xxtofl@arg+2,f
  7593  107F  0CA3               	rrf	___xxtofl@arg+1,f
  7594  1080  0CA2               	rrf	___xxtofl@arg,f
  7595  1081  3EFF               	addlw	-1
  7596  1082  1D03               	skipz
  7597  1083  287C               	goto	u4955
  7598  1084                     l3009:
  7599  1084  30FE               	movlw	254
  7600  1085  0525               	andwf	___xxtofl@arg+3,w
  7601  1086  1D03               	btfss	3,2
  7602  1087  2889               	goto	u4961
  7603  1088  288A               	goto	u4960
  7604  1089                     u4961:
  7605  1089  2877               	goto	l3007
  7606  108A                     u4960:
  7607  108A  28A6               	goto	l831
  7608  108B                     l3011:
  7609  108B  3001               	movlw	1
  7610  108C  00F7               	movwf	??___xxtofl
  7611  108D  0877               	movf	??___xxtofl,w
  7612  108E  07A1               	addwf	___xxtofl@exp,f
  7613  108F                     l3013:
  7614  108F  3001               	movlw	1
  7615  1090  07A2               	addwf	___xxtofl@arg,f
  7616  1091  3000               	movlw	0
  7617  1092  1803               	skipnc
  7618  1093  3001               	movlw	1
  7619  1094  07A3               	addwf	___xxtofl@arg+1,f
  7620  1095  3000               	movlw	0
  7621  1096  1803               	skipnc
  7622  1097  3001               	movlw	1
  7623  1098  07A4               	addwf	___xxtofl@arg+2,f
  7624  1099  3000               	movlw	0
  7625  109A  1803               	skipnc
  7626  109B  3001               	movlw	1
  7627  109C  07A5               	addwf	___xxtofl@arg+3,f
  7628  109D                     l3015:
  7629  109D  3001               	movlw	1
  7630  109E                     u4975:
  7631  109E  1003               	clrc
  7632  109F  0CA5               	rrf	___xxtofl@arg+3,f
  7633  10A0  0CA4               	rrf	___xxtofl@arg+2,f
  7634  10A1  0CA3               	rrf	___xxtofl@arg+1,f
  7635  10A2  0CA2               	rrf	___xxtofl@arg,f
  7636  10A3  3EFF               	addlw	-1
  7637  10A4  1D03               	skipz
  7638  10A5  289E               	goto	u4975
  7639  10A6                     l831:
  7640  10A6  30FF               	movlw	255
  7641  10A7  0525               	andwf	___xxtofl@arg+3,w
  7642  10A8  1D03               	btfss	3,2
  7643  10A9  28AB               	goto	u4981
  7644  10AA  28AC               	goto	u4980
  7645  10AB                     u4981:
  7646  10AB  288B               	goto	l3011
  7647  10AC                     u4980:
  7648  10AC  28B8               	goto	l3019
  7649  10AD                     l3017:
  7650  10AD  3001               	movlw	1
  7651  10AE  02A1               	subwf	___xxtofl@exp,f
  7652  10AF  3001               	movlw	1
  7653  10B0  00F7               	movwf	??___xxtofl
  7654  10B1                     u4995:
  7655  10B1  1003               	clrc
  7656  10B2  0DA2               	rlf	___xxtofl@arg,f
  7657  10B3  0DA3               	rlf	___xxtofl@arg+1,f
  7658  10B4  0DA4               	rlf	___xxtofl@arg+2,f
  7659  10B5  0DA5               	rlf	___xxtofl@arg+3,f
  7660  10B6  0BF7               	decfsz	??___xxtofl,f
  7661  10B7  28B1               	goto	u4995
  7662  10B8                     l3019:
  7663  10B8  1BA4               	btfsc	___xxtofl@arg+2,7
  7664  10B9  28BB               	goto	u5001
  7665  10BA  28BC               	goto	u5000
  7666  10BB                     u5001:
  7667  10BB  28C2               	goto	l838
  7668  10BC                     u5000:
  7669  10BC                     l3021:
  7670  10BC  3002               	movlw	2
  7671  10BD  0221               	subwf	___xxtofl@exp,w
  7672  10BE  1803               	skipnc
  7673  10BF  28C1               	goto	u5011
  7674  10C0  28C2               	goto	u5010
  7675  10C1                     u5011:
  7676  10C1  28AD               	goto	l3017
  7677  10C2                     u5010:
  7678  10C2                     l838:
  7679  10C2  1821               	btfsc	___xxtofl@exp,0
  7680  10C3  28C5               	goto	u5021
  7681  10C4  28C6               	goto	u5020
  7682  10C5                     u5021:
  7683  10C5  28CE               	goto	l839
  7684  10C6                     u5020:
  7685  10C6                     l3023:
  7686  10C6  30FF               	movlw	255
  7687  10C7  05A2               	andwf	___xxtofl@arg,f
  7688  10C8  30FF               	movlw	255
  7689  10C9  05A3               	andwf	___xxtofl@arg+1,f
  7690  10CA  307F               	movlw	127
  7691  10CB  05A4               	andwf	___xxtofl@arg+2,f
  7692  10CC  30FF               	movlw	255
  7693  10CD  05A5               	andwf	___xxtofl@arg+3,f
  7694  10CE                     l839:
  7695  10CE  1003               	clrc
  7696  10CF  0CA1               	rrf	___xxtofl@exp,f
  7697  10D0                     l3025:
  7698  10D0  0821               	movf	___xxtofl@exp,w
  7699  10D1  00F7               	movwf	??___xxtofl
  7700  10D2  01F8               	clrf	??___xxtofl+1
  7701  10D3  01F9               	clrf	??___xxtofl+2
  7702  10D4  01FA               	clrf	??___xxtofl+3
  7703  10D5  3018               	movlw	24
  7704  10D6                     u5035:
  7705  10D6  1003               	clrc
  7706  10D7  0DF7               	rlf	??___xxtofl,f
  7707  10D8  0DF8               	rlf	??___xxtofl+1,f
  7708  10D9  0DF9               	rlf	??___xxtofl+2,f
  7709  10DA  0DFA               	rlf	??___xxtofl+3,f
  7710  10DB                     u5030:
  7711  10DB  3EFF               	addlw	-1
  7712  10DC  1D03               	skipz
  7713  10DD  28D6               	goto	u5035
  7714  10DE  0877               	movf	??___xxtofl,w
  7715  10DF  04A2               	iorwf	___xxtofl@arg,f
  7716  10E0  0878               	movf	??___xxtofl+1,w
  7717  10E1  04A3               	iorwf	___xxtofl@arg+1,f
  7718  10E2  0879               	movf	??___xxtofl+2,w
  7719  10E3  04A4               	iorwf	___xxtofl@arg+2,f
  7720  10E4  087A               	movf	??___xxtofl+3,w
  7721  10E5  04A5               	iorwf	___xxtofl@arg+3,f
  7722  10E6                     l3027:
  7723  10E6  0820               	movf	___xxtofl@sign,w
  7724  10E7  1903               	btfsc	3,2
  7725  10E8  28EA               	goto	u5041
  7726  10E9  28EB               	goto	u5040
  7727  10EA                     u5041:
  7728  10EA  28F0               	goto	l3033
  7729  10EB                     u5040:
  7730  10EB                     l3029:
  7731  10EB  1FF6               	btfss	___xxtofl@val+3,7
  7732  10EC  28EE               	goto	u5051
  7733  10ED  28EF               	goto	u5050
  7734  10EE                     u5051:
  7735  10EE  28F0               	goto	l3033
  7736  10EF                     u5050:
  7737  10EF                     l3031:
  7738  10EF  17A5               	bsf	___xxtofl@arg+3,7
  7739  10F0                     l3033:
  7740  10F0  0825               	movf	___xxtofl@arg+3,w
  7741  10F1  00F6               	movwf	?___xxtofl+3
  7742  10F2  0824               	movf	___xxtofl@arg+2,w
  7743  10F3  00F5               	movwf	?___xxtofl+2
  7744  10F4  0823               	movf	___xxtofl@arg+1,w
  7745  10F5  00F4               	movwf	?___xxtofl+1
  7746  10F6  0822               	movf	___xxtofl@arg,w
  7747  10F7  00F3               	movwf	?___xxtofl
  7748  10F8                     l827:
  7749  10F8  0008               	return
  7750  10F9                     __end_of___xxtofl:
  7751                           
  7752                           	psect	text29
  7753  093C                     __ptext29:	
  7754 ;; *************** function ___flmul *****************
  7755 ;; Defined at:
  7756 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  b               4    8[BANK0 ] unsigned char 
  7759 ;;  a               4   12[BANK0 ] unsigned char 
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;  prod            4   28[BANK0 ] struct .
  7762 ;;  grs             4   22[BANK0 ] unsigned long 
  7763 ;;  temp            2   32[BANK0 ] struct .
  7764 ;;  bexp            1   27[BANK0 ] unsigned char 
  7765 ;;  aexp            1   26[BANK0 ] unsigned char 
  7766 ;;  sign            1   21[BANK0 ] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  4    8[BANK0 ] unsigned char 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7776 ;;      Params:         0       8       0       0       0
  7777 ;;      Locals:         0      13       0       0       0
  7778 ;;      Temps:          0       5       0       0       0
  7779 ;;      Totals:         0      26       0       0       0
  7780 ;;Total ram usage:       26 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:    2
  7783 ;; This function calls:
  7784 ;;		__Umul8_16
  7785 ;; This function is called by:
  7786 ;;		_conv
  7787 ;;		_fround
  7788 ;;		_scale
  7789 ;;		_sprintf
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           
  7794                           ;psect for function ___flmul
  7795  093C                     ___flmul:
  7796  093C                     l2523:	
  7797                           ;incstack = 0
  7798                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7799                           
  7800  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7801  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7802  093E  082B               	movf	___flmul@b+3,w
  7803  093F  3980               	andlw	128
  7804  0940  00B0               	movwf	??___flmul
  7805  0941  0830               	movf	??___flmul,w
  7806  0942  00B5               	movwf	___flmul@sign
  7807  0943                     l2525:
  7808  0943  082B               	movf	___flmul@b+3,w
  7809  0944  00B0               	movwf	??___flmul
  7810  0945  0730               	addwf	??___flmul,w
  7811  0946  00B1               	movwf	??___flmul+1
  7812  0947  0831               	movf	??___flmul+1,w
  7813  0948  00BB               	movwf	___flmul@bexp
  7814  0949                     l2527:
  7815  0949  1FAA               	btfss	___flmul@b+2,7
  7816  094A  294C               	goto	u3611
  7817  094B  294D               	goto	u3610
  7818  094C                     u3611:
  7819  094C  294E               	goto	l2531
  7820  094D                     u3610:
  7821  094D                     l2529:
  7822  094D  143B               	bsf	___flmul@bexp,0
  7823  094E                     l2531:
  7824  094E  083B               	movf	___flmul@bexp,w
  7825  094F  1903               	btfsc	3,2
  7826  0950  2952               	goto	u3621
  7827  0951  2953               	goto	u3620
  7828  0952                     u3621:
  7829  0952  2962               	goto	l2539
  7830  0953                     u3620:
  7831  0953                     l2533:
  7832  0953  0A3B               	incf	___flmul@bexp,w
  7833  0954  1D03               	btfss	3,2
  7834  0955  2957               	goto	u3631
  7835  0956  2958               	goto	u3630
  7836  0957                     u3631:
  7837  0957  2960               	goto	l2537
  7838  0958                     u3630:
  7839  0958                     l2535:
  7840  0958  3000               	movlw	0
  7841  0959  00AB               	movwf	___flmul@b+3
  7842  095A  3000               	movlw	0
  7843  095B  00AA               	movwf	___flmul@b+2
  7844  095C  3000               	movlw	0
  7845  095D  00A9               	movwf	___flmul@b+1
  7846  095E  3000               	movlw	0
  7847  095F  00A8               	movwf	___flmul@b
  7848  0960                     l2537:
  7849  0960  17AA               	bsf	___flmul@b+2,7
  7850  0961  296A               	goto	l2541
  7851  0962                     l2539:
  7852  0962  3000               	movlw	0
  7853  0963  00AB               	movwf	___flmul@b+3
  7854  0964  3000               	movlw	0
  7855  0965  00AA               	movwf	___flmul@b+2
  7856  0966  3000               	movlw	0
  7857  0967  00A9               	movwf	___flmul@b+1
  7858  0968  3000               	movlw	0
  7859  0969  00A8               	movwf	___flmul@b
  7860  096A                     l2541:
  7861  096A  082F               	movf	___flmul@a+3,w
  7862  096B  3980               	andlw	128
  7863  096C  00B0               	movwf	??___flmul
  7864  096D  0830               	movf	??___flmul,w
  7865  096E  06B5               	xorwf	___flmul@sign,f
  7866  096F                     l2543:
  7867  096F  082F               	movf	___flmul@a+3,w
  7868  0970  00B0               	movwf	??___flmul
  7869  0971  0730               	addwf	??___flmul,w
  7870  0972  00B1               	movwf	??___flmul+1
  7871  0973  0831               	movf	??___flmul+1,w
  7872  0974  00BA               	movwf	___flmul@aexp
  7873  0975                     l2545:
  7874  0975  1FAE               	btfss	___flmul@a+2,7
  7875  0976  2978               	goto	u3641
  7876  0977  2979               	goto	u3640
  7877  0978                     u3641:
  7878  0978  297A               	goto	l2549
  7879  0979                     u3640:
  7880  0979                     l2547:
  7881  0979  143A               	bsf	___flmul@aexp,0
  7882  097A                     l2549:
  7883  097A  083A               	movf	___flmul@aexp,w
  7884  097B  1903               	btfsc	3,2
  7885  097C  297E               	goto	u3651
  7886  097D  297F               	goto	u3650
  7887  097E                     u3651:
  7888  097E  298E               	goto	l2557
  7889  097F                     u3650:
  7890  097F                     l2551:
  7891  097F  0A3A               	incf	___flmul@aexp,w
  7892  0980  1D03               	btfss	3,2
  7893  0981  2983               	goto	u3661
  7894  0982  2984               	goto	u3660
  7895  0983                     u3661:
  7896  0983  298C               	goto	l2555
  7897  0984                     u3660:
  7898  0984                     l2553:
  7899  0984  3000               	movlw	0
  7900  0985  00AF               	movwf	___flmul@a+3
  7901  0986  3000               	movlw	0
  7902  0987  00AE               	movwf	___flmul@a+2
  7903  0988  3000               	movlw	0
  7904  0989  00AD               	movwf	___flmul@a+1
  7905  098A  3000               	movlw	0
  7906  098B  00AC               	movwf	___flmul@a
  7907  098C                     l2555:
  7908  098C  17AE               	bsf	___flmul@a+2,7
  7909  098D  2996               	goto	l2559
  7910  098E                     l2557:
  7911  098E  3000               	movlw	0
  7912  098F  00AF               	movwf	___flmul@a+3
  7913  0990  3000               	movlw	0
  7914  0991  00AE               	movwf	___flmul@a+2
  7915  0992  3000               	movlw	0
  7916  0993  00AD               	movwf	___flmul@a+1
  7917  0994  3000               	movlw	0
  7918  0995  00AC               	movwf	___flmul@a
  7919  0996                     l2559:
  7920  0996  083A               	movf	___flmul@aexp,w
  7921  0997  1903               	btfsc	3,2
  7922  0998  299A               	goto	u3671
  7923  0999  299B               	goto	u3670
  7924  099A                     u3671:
  7925  099A  29A0               	goto	l2563
  7926  099B                     u3670:
  7927  099B                     l2561:
  7928  099B  083B               	movf	___flmul@bexp,w
  7929  099C  1D03               	btfss	3,2
  7930  099D  299F               	goto	u3681
  7931  099E  29A0               	goto	u3680
  7932  099F                     u3681:
  7933  099F  29A9               	goto	l2567
  7934  09A0                     u3680:
  7935  09A0                     l2563:
  7936  09A0  3000               	movlw	0
  7937  09A1  00AB               	movwf	?___flmul+3
  7938  09A2  3000               	movlw	0
  7939  09A3  00AA               	movwf	?___flmul+2
  7940  09A4  3000               	movlw	0
  7941  09A5  00A9               	movwf	?___flmul+1
  7942  09A6  3000               	movlw	0
  7943  09A7  00A8               	movwf	?___flmul
  7944  09A8  2C9C               	goto	l781
  7945  09A9                     l2567:
  7946  09A9  0828               	movf	___flmul@b,w
  7947  09AA  00B0               	movwf	??___flmul
  7948  09AB  0830               	movf	??___flmul,w
  7949  09AC  00F3               	movwf	__Umul8_16@multiplicand
  7950  09AD  082E               	movf	___flmul@a+2,w
  7951  09AE  160A  158A  24AA  120A  158A  	fcall	__Umul8_16
  7952  09B3  0874               	movf	?__Umul8_16+1,w
  7953  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  7954  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  7955  09B6  00C1               	movwf	___flmul@temp+1
  7956  09B7  0873               	movf	?__Umul8_16,w
  7957  09B8  00C0               	movwf	___flmul@temp
  7958  09B9                     l2569:
  7959  09B9  0840               	movf	___flmul@temp,w
  7960  09BA  00B0               	movwf	??___flmul
  7961  09BB  01B1               	clrf	??___flmul+1
  7962  09BC  01B2               	clrf	??___flmul+2
  7963  09BD  01B3               	clrf	??___flmul+3
  7964  09BE  0833               	movf	??___flmul+3,w
  7965  09BF  00B9               	movwf	___flmul@grs+3
  7966  09C0  0832               	movf	??___flmul+2,w
  7967  09C1  00B8               	movwf	___flmul@grs+2
  7968  09C2  0831               	movf	??___flmul+1,w
  7969  09C3  00B7               	movwf	___flmul@grs+1
  7970  09C4  0830               	movf	??___flmul,w
  7971  09C5  00B6               	movwf	___flmul@grs
  7972  09C6                     l2571:
  7973  09C6  0841               	movf	___flmul@temp+1,w
  7974  09C7  00B0               	movwf	??___flmul
  7975  09C8  01B1               	clrf	??___flmul+1
  7976  09C9  01B2               	clrf	??___flmul+2
  7977  09CA  01B3               	clrf	??___flmul+3
  7978  09CB  0833               	movf	??___flmul+3,w
  7979  09CC  00BF               	movwf	___flmul@prod+3
  7980  09CD  0832               	movf	??___flmul+2,w
  7981  09CE  00BE               	movwf	___flmul@prod+2
  7982  09CF  0831               	movf	??___flmul+1,w
  7983  09D0  00BD               	movwf	___flmul@prod+1
  7984  09D1  0830               	movf	??___flmul,w
  7985  09D2  00BC               	movwf	___flmul@prod
  7986  09D3  0829               	movf	___flmul@b+1,w
  7987  09D4  00B0               	movwf	??___flmul
  7988  09D5  0830               	movf	??___flmul,w
  7989  09D6  00F3               	movwf	__Umul8_16@multiplicand
  7990  09D7  082D               	movf	___flmul@a+1,w
  7991  09D8  160A  158A  24AA  120A  158A  	fcall	__Umul8_16
  7992  09DD  0874               	movf	?__Umul8_16+1,w
  7993  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7994  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  7995  09E0  00C1               	movwf	___flmul@temp+1
  7996  09E1  0873               	movf	?__Umul8_16,w
  7997  09E2  00C0               	movwf	___flmul@temp
  7998  09E3                     l2573:
  7999  09E3  0840               	movf	___flmul@temp,w
  8000  09E4  00B0               	movwf	??___flmul
  8001  09E5  01B1               	clrf	??___flmul+1
  8002  09E6  01B2               	clrf	??___flmul+2
  8003  09E7  01B3               	clrf	??___flmul+3
  8004  09E8  0830               	movf	??___flmul,w
  8005  09E9  07B6               	addwf	___flmul@grs,f
  8006  09EA  0831               	movf	??___flmul+1,w
  8007  09EB  1103               	clrz
  8008  09EC  1803               	skipnc
  8009  09ED  3E01               	addlw	1
  8010  09EE  1903               	skipnz
  8011  09EF  29F1               	goto	u3691
  8012  09F0  07B7               	addwf	___flmul@grs+1,f
  8013  09F1                     u3691:
  8014  09F1  0832               	movf	??___flmul+2,w
  8015  09F2  1103               	clrz
  8016  09F3  1803               	skipnc
  8017  09F4  3E01               	addlw	1
  8018  09F5  1903               	skipnz
  8019  09F6  29F8               	goto	u3692
  8020  09F7  07B8               	addwf	___flmul@grs+2,f
  8021  09F8                     u3692:
  8022  09F8  0833               	movf	??___flmul+3,w
  8023  09F9  1103               	clrz
  8024  09FA  1803               	skipnc
  8025  09FB  3E01               	addlw	1
  8026  09FC  1903               	skipnz
  8027  09FD  29FF               	goto	u3693
  8028  09FE  07B9               	addwf	___flmul@grs+3,f
  8029  09FF                     u3693:
  8030  09FF                     l2575:
  8031  09FF  0841               	movf	___flmul@temp+1,w
  8032  0A00  00B0               	movwf	??___flmul
  8033  0A01  01B1               	clrf	??___flmul+1
  8034  0A02  01B2               	clrf	??___flmul+2
  8035  0A03  01B3               	clrf	??___flmul+3
  8036  0A04  0830               	movf	??___flmul,w
  8037  0A05  07BC               	addwf	___flmul@prod,f
  8038  0A06  0831               	movf	??___flmul+1,w
  8039  0A07  1103               	clrz
  8040  0A08  1803               	skipnc
  8041  0A09  3E01               	addlw	1
  8042  0A0A  1903               	skipnz
  8043  0A0B  2A0D               	goto	u3701
  8044  0A0C  07BD               	addwf	___flmul@prod+1,f
  8045  0A0D                     u3701:
  8046  0A0D  0832               	movf	??___flmul+2,w
  8047  0A0E  1103               	clrz
  8048  0A0F  1803               	skipnc
  8049  0A10  3E01               	addlw	1
  8050  0A11  1903               	skipnz
  8051  0A12  2A14               	goto	u3702
  8052  0A13  07BE               	addwf	___flmul@prod+2,f
  8053  0A14                     u3702:
  8054  0A14  0833               	movf	??___flmul+3,w
  8055  0A15  1103               	clrz
  8056  0A16  1803               	skipnc
  8057  0A17  3E01               	addlw	1
  8058  0A18  1903               	skipnz
  8059  0A19  2A1B               	goto	u3703
  8060  0A1A  07BF               	addwf	___flmul@prod+3,f
  8061  0A1B                     u3703:
  8062  0A1B  082A               	movf	___flmul@b+2,w
  8063  0A1C  00B0               	movwf	??___flmul
  8064  0A1D  0830               	movf	??___flmul,w
  8065  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  8066  0A1F  082C               	movf	___flmul@a,w
  8067  0A20  160A  158A  24AA  120A  158A  	fcall	__Umul8_16
  8068  0A25  0874               	movf	?__Umul8_16+1,w
  8069  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8070  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8071  0A28  00C1               	movwf	___flmul@temp+1
  8072  0A29  0873               	movf	?__Umul8_16,w
  8073  0A2A  00C0               	movwf	___flmul@temp
  8074  0A2B                     l2577:
  8075  0A2B  0840               	movf	___flmul@temp,w
  8076  0A2C  00B0               	movwf	??___flmul
  8077  0A2D  01B1               	clrf	??___flmul+1
  8078  0A2E  01B2               	clrf	??___flmul+2
  8079  0A2F  01B3               	clrf	??___flmul+3
  8080  0A30  0830               	movf	??___flmul,w
  8081  0A31  07B6               	addwf	___flmul@grs,f
  8082  0A32  0831               	movf	??___flmul+1,w
  8083  0A33  1103               	clrz
  8084  0A34  1803               	skipnc
  8085  0A35  3E01               	addlw	1
  8086  0A36  1903               	skipnz
  8087  0A37  2A39               	goto	u3711
  8088  0A38  07B7               	addwf	___flmul@grs+1,f
  8089  0A39                     u3711:
  8090  0A39  0832               	movf	??___flmul+2,w
  8091  0A3A  1103               	clrz
  8092  0A3B  1803               	skipnc
  8093  0A3C  3E01               	addlw	1
  8094  0A3D  1903               	skipnz
  8095  0A3E  2A40               	goto	u3712
  8096  0A3F  07B8               	addwf	___flmul@grs+2,f
  8097  0A40                     u3712:
  8098  0A40  0833               	movf	??___flmul+3,w
  8099  0A41  1103               	clrz
  8100  0A42  1803               	skipnc
  8101  0A43  3E01               	addlw	1
  8102  0A44  1903               	skipnz
  8103  0A45  2A47               	goto	u3713
  8104  0A46  07B9               	addwf	___flmul@grs+3,f
  8105  0A47                     u3713:
  8106  0A47                     l2579:
  8107  0A47  0841               	movf	___flmul@temp+1,w
  8108  0A48  00B0               	movwf	??___flmul
  8109  0A49  01B1               	clrf	??___flmul+1
  8110  0A4A  01B2               	clrf	??___flmul+2
  8111  0A4B  01B3               	clrf	??___flmul+3
  8112  0A4C  0830               	movf	??___flmul,w
  8113  0A4D  07BC               	addwf	___flmul@prod,f
  8114  0A4E  0831               	movf	??___flmul+1,w
  8115  0A4F  1103               	clrz
  8116  0A50  1803               	skipnc
  8117  0A51  3E01               	addlw	1
  8118  0A52  1903               	skipnz
  8119  0A53  2A55               	goto	u3721
  8120  0A54  07BD               	addwf	___flmul@prod+1,f
  8121  0A55                     u3721:
  8122  0A55  0832               	movf	??___flmul+2,w
  8123  0A56  1103               	clrz
  8124  0A57  1803               	skipnc
  8125  0A58  3E01               	addlw	1
  8126  0A59  1903               	skipnz
  8127  0A5A  2A5C               	goto	u3722
  8128  0A5B  07BE               	addwf	___flmul@prod+2,f
  8129  0A5C                     u3722:
  8130  0A5C  0833               	movf	??___flmul+3,w
  8131  0A5D  1103               	clrz
  8132  0A5E  1803               	skipnc
  8133  0A5F  3E01               	addlw	1
  8134  0A60  1903               	skipnz
  8135  0A61  2A63               	goto	u3723
  8136  0A62  07BF               	addwf	___flmul@prod+3,f
  8137  0A63                     u3723:
  8138  0A63                     l2581:
  8139  0A63  3008               	movlw	8
  8140  0A64  00B0               	movwf	??___flmul
  8141  0A65                     u3735:
  8142  0A65  1003               	clrc
  8143  0A66  0DB6               	rlf	___flmul@grs,f
  8144  0A67  0DB7               	rlf	___flmul@grs+1,f
  8145  0A68  0DB8               	rlf	___flmul@grs+2,f
  8146  0A69  0DB9               	rlf	___flmul@grs+3,f
  8147  0A6A  0BB0               	decfsz	??___flmul,f
  8148  0A6B  2A65               	goto	u3735
  8149  0A6C                     l2583:
  8150  0A6C  0829               	movf	___flmul@b+1,w
  8151  0A6D  00B0               	movwf	??___flmul
  8152  0A6E  0830               	movf	??___flmul,w
  8153  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  8154  0A70  082C               	movf	___flmul@a,w
  8155  0A71  160A  158A  24AA  120A  158A  	fcall	__Umul8_16
  8156  0A76  0874               	movf	?__Umul8_16+1,w
  8157  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8158  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8159  0A79  00C1               	movwf	___flmul@temp+1
  8160  0A7A  0873               	movf	?__Umul8_16,w
  8161  0A7B  00C0               	movwf	___flmul@temp
  8162  0A7C                     l2585:
  8163  0A7C  0840               	movf	___flmul@temp,w
  8164  0A7D  00B0               	movwf	??___flmul
  8165  0A7E  0841               	movf	___flmul@temp+1,w
  8166  0A7F  00B1               	movwf	??___flmul+1
  8167  0A80  01B2               	clrf	??___flmul+2
  8168  0A81  01B3               	clrf	??___flmul+3
  8169  0A82  0830               	movf	??___flmul,w
  8170  0A83  07B6               	addwf	___flmul@grs,f
  8171  0A84  0831               	movf	??___flmul+1,w
  8172  0A85  1103               	clrz
  8173  0A86  1803               	skipnc
  8174  0A87  3E01               	addlw	1
  8175  0A88  1903               	skipnz
  8176  0A89  2A8B               	goto	u3741
  8177  0A8A  07B7               	addwf	___flmul@grs+1,f
  8178  0A8B                     u3741:
  8179  0A8B  0832               	movf	??___flmul+2,w
  8180  0A8C  1103               	clrz
  8181  0A8D  1803               	skipnc
  8182  0A8E  3E01               	addlw	1
  8183  0A8F  1903               	skipnz
  8184  0A90  2A92               	goto	u3742
  8185  0A91  07B8               	addwf	___flmul@grs+2,f
  8186  0A92                     u3742:
  8187  0A92  0833               	movf	??___flmul+3,w
  8188  0A93  1103               	clrz
  8189  0A94  1803               	skipnc
  8190  0A95  3E01               	addlw	1
  8191  0A96  1903               	skipnz
  8192  0A97  2A99               	goto	u3743
  8193  0A98  07B9               	addwf	___flmul@grs+3,f
  8194  0A99                     u3743:
  8195  0A99                     l2587:
  8196  0A99  0828               	movf	___flmul@b,w
  8197  0A9A  00B0               	movwf	??___flmul
  8198  0A9B  0830               	movf	??___flmul,w
  8199  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  8200  0A9D  082D               	movf	___flmul@a+1,w
  8201  0A9E  160A  158A  24AA  120A  158A  	fcall	__Umul8_16
  8202  0AA3  0874               	movf	?__Umul8_16+1,w
  8203  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8204  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8205  0AA6  00C1               	movwf	___flmul@temp+1
  8206  0AA7  0873               	movf	?__Umul8_16,w
  8207  0AA8  00C0               	movwf	___flmul@temp
  8208  0AA9                     l2589:
  8209  0AA9  0840               	movf	___flmul@temp,w
  8210  0AAA  00B0               	movwf	??___flmul
  8211  0AAB  0841               	movf	___flmul@temp+1,w
  8212  0AAC  00B1               	movwf	??___flmul+1
  8213  0AAD  01B2               	clrf	??___flmul+2
  8214  0AAE  01B3               	clrf	??___flmul+3
  8215  0AAF  0830               	movf	??___flmul,w
  8216  0AB0  07B6               	addwf	___flmul@grs,f
  8217  0AB1  0831               	movf	??___flmul+1,w
  8218  0AB2  1103               	clrz
  8219  0AB3  1803               	skipnc
  8220  0AB4  3E01               	addlw	1
  8221  0AB5  1903               	skipnz
  8222  0AB6  2AB8               	goto	u3751
  8223  0AB7  07B7               	addwf	___flmul@grs+1,f
  8224  0AB8                     u3751:
  8225  0AB8  0832               	movf	??___flmul+2,w
  8226  0AB9  1103               	clrz
  8227  0ABA  1803               	skipnc
  8228  0ABB  3E01               	addlw	1
  8229  0ABC  1903               	skipnz
  8230  0ABD  2ABF               	goto	u3752
  8231  0ABE  07B8               	addwf	___flmul@grs+2,f
  8232  0ABF                     u3752:
  8233  0ABF  0833               	movf	??___flmul+3,w
  8234  0AC0  1103               	clrz
  8235  0AC1  1803               	skipnc
  8236  0AC2  3E01               	addlw	1
  8237  0AC3  1903               	skipnz
  8238  0AC4  2AC6               	goto	u3753
  8239  0AC5  07B9               	addwf	___flmul@grs+3,f
  8240  0AC6                     u3753:
  8241  0AC6                     l2591:
  8242  0AC6  3008               	movlw	8
  8243  0AC7  00B0               	movwf	??___flmul
  8244  0AC8                     u3765:
  8245  0AC8  1003               	clrc
  8246  0AC9  0DB6               	rlf	___flmul@grs,f
  8247  0ACA  0DB7               	rlf	___flmul@grs+1,f
  8248  0ACB  0DB8               	rlf	___flmul@grs+2,f
  8249  0ACC  0DB9               	rlf	___flmul@grs+3,f
  8250  0ACD  0BB0               	decfsz	??___flmul,f
  8251  0ACE  2AC8               	goto	u3765
  8252  0ACF  0828               	movf	___flmul@b,w
  8253  0AD0  00B0               	movwf	??___flmul
  8254  0AD1  0830               	movf	??___flmul,w
  8255  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  8256  0AD3  082C               	movf	___flmul@a,w
  8257  0AD4  160A  158A  24AA  120A  158A  	fcall	__Umul8_16
  8258  0AD9  0874               	movf	?__Umul8_16+1,w
  8259  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8260  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8261  0ADC  00C1               	movwf	___flmul@temp+1
  8262  0ADD  0873               	movf	?__Umul8_16,w
  8263  0ADE  00C0               	movwf	___flmul@temp
  8264  0ADF                     l2593:
  8265  0ADF  0840               	movf	___flmul@temp,w
  8266  0AE0  00B0               	movwf	??___flmul
  8267  0AE1  0841               	movf	___flmul@temp+1,w
  8268  0AE2  00B1               	movwf	??___flmul+1
  8269  0AE3  01B2               	clrf	??___flmul+2
  8270  0AE4  01B3               	clrf	??___flmul+3
  8271  0AE5  0830               	movf	??___flmul,w
  8272  0AE6  07B6               	addwf	___flmul@grs,f
  8273  0AE7  0831               	movf	??___flmul+1,w
  8274  0AE8  1103               	clrz
  8275  0AE9  1803               	skipnc
  8276  0AEA  3E01               	addlw	1
  8277  0AEB  1903               	skipnz
  8278  0AEC  2AEE               	goto	u3771
  8279  0AED  07B7               	addwf	___flmul@grs+1,f
  8280  0AEE                     u3771:
  8281  0AEE  0832               	movf	??___flmul+2,w
  8282  0AEF  1103               	clrz
  8283  0AF0  1803               	skipnc
  8284  0AF1  3E01               	addlw	1
  8285  0AF2  1903               	skipnz
  8286  0AF3  2AF5               	goto	u3772
  8287  0AF4  07B8               	addwf	___flmul@grs+2,f
  8288  0AF5                     u3772:
  8289  0AF5  0833               	movf	??___flmul+3,w
  8290  0AF6  1103               	clrz
  8291  0AF7  1803               	skipnc
  8292  0AF8  3E01               	addlw	1
  8293  0AF9  1903               	skipnz
  8294  0AFA  2AFC               	goto	u3773
  8295  0AFB  07B9               	addwf	___flmul@grs+3,f
  8296  0AFC                     u3773:
  8297  0AFC                     l2595:
  8298  0AFC  0829               	movf	___flmul@b+1,w
  8299  0AFD  00B0               	movwf	??___flmul
  8300  0AFE  0830               	movf	??___flmul,w
  8301  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  8302  0B00  082E               	movf	___flmul@a+2,w
  8303  0B01  160A  158A  24AA  120A  158A  	fcall	__Umul8_16
  8304  0B06  0874               	movf	?__Umul8_16+1,w
  8305  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8306  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8307  0B09  00C1               	movwf	___flmul@temp+1
  8308  0B0A  0873               	movf	?__Umul8_16,w
  8309  0B0B  00C0               	movwf	___flmul@temp
  8310  0B0C  0840               	movf	___flmul@temp,w
  8311  0B0D  00B0               	movwf	??___flmul
  8312  0B0E  0841               	movf	___flmul@temp+1,w
  8313  0B0F  00B1               	movwf	??___flmul+1
  8314  0B10  01B2               	clrf	??___flmul+2
  8315  0B11  01B3               	clrf	??___flmul+3
  8316  0B12  0830               	movf	??___flmul,w
  8317  0B13  07BC               	addwf	___flmul@prod,f
  8318  0B14  0831               	movf	??___flmul+1,w
  8319  0B15  1103               	clrz
  8320  0B16  1803               	skipnc
  8321  0B17  3E01               	addlw	1
  8322  0B18  1903               	skipnz
  8323  0B19  2B1B               	goto	u3781
  8324  0B1A  07BD               	addwf	___flmul@prod+1,f
  8325  0B1B                     u3781:
  8326  0B1B  0832               	movf	??___flmul+2,w
  8327  0B1C  1103               	clrz
  8328  0B1D  1803               	skipnc
  8329  0B1E  3E01               	addlw	1
  8330  0B1F  1903               	skipnz
  8331  0B20  2B22               	goto	u3782
  8332  0B21  07BE               	addwf	___flmul@prod+2,f
  8333  0B22                     u3782:
  8334  0B22  0833               	movf	??___flmul+3,w
  8335  0B23  1103               	clrz
  8336  0B24  1803               	skipnc
  8337  0B25  3E01               	addlw	1
  8338  0B26  1903               	skipnz
  8339  0B27  2B29               	goto	u3783
  8340  0B28  07BF               	addwf	___flmul@prod+3,f
  8341  0B29                     u3783:
  8342  0B29                     l2597:
  8343  0B29  082A               	movf	___flmul@b+2,w
  8344  0B2A  00B0               	movwf	??___flmul
  8345  0B2B  0830               	movf	??___flmul,w
  8346  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  8347  0B2D  082D               	movf	___flmul@a+1,w
  8348  0B2E  160A  158A  24AA  120A  158A  	fcall	__Umul8_16
  8349  0B33  0874               	movf	?__Umul8_16+1,w
  8350  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8351  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8352  0B36  00C1               	movwf	___flmul@temp+1
  8353  0B37  0873               	movf	?__Umul8_16,w
  8354  0B38  00C0               	movwf	___flmul@temp
  8355  0B39                     l2599:
  8356  0B39  0840               	movf	___flmul@temp,w
  8357  0B3A  00B0               	movwf	??___flmul
  8358  0B3B  0841               	movf	___flmul@temp+1,w
  8359  0B3C  00B1               	movwf	??___flmul+1
  8360  0B3D  01B2               	clrf	??___flmul+2
  8361  0B3E  01B3               	clrf	??___flmul+3
  8362  0B3F  0830               	movf	??___flmul,w
  8363  0B40  07BC               	addwf	___flmul@prod,f
  8364  0B41  0831               	movf	??___flmul+1,w
  8365  0B42  1103               	clrz
  8366  0B43  1803               	skipnc
  8367  0B44  3E01               	addlw	1
  8368  0B45  1903               	skipnz
  8369  0B46  2B48               	goto	u3791
  8370  0B47  07BD               	addwf	___flmul@prod+1,f
  8371  0B48                     u3791:
  8372  0B48  0832               	movf	??___flmul+2,w
  8373  0B49  1103               	clrz
  8374  0B4A  1803               	skipnc
  8375  0B4B  3E01               	addlw	1
  8376  0B4C  1903               	skipnz
  8377  0B4D  2B4F               	goto	u3792
  8378  0B4E  07BE               	addwf	___flmul@prod+2,f
  8379  0B4F                     u3792:
  8380  0B4F  0833               	movf	??___flmul+3,w
  8381  0B50  1103               	clrz
  8382  0B51  1803               	skipnc
  8383  0B52  3E01               	addlw	1
  8384  0B53  1903               	skipnz
  8385  0B54  2B56               	goto	u3793
  8386  0B55  07BF               	addwf	___flmul@prod+3,f
  8387  0B56                     u3793:
  8388  0B56  082A               	movf	___flmul@b+2,w
  8389  0B57  00B0               	movwf	??___flmul
  8390  0B58  0830               	movf	??___flmul,w
  8391  0B59  00F3               	movwf	__Umul8_16@multiplicand
  8392  0B5A  082E               	movf	___flmul@a+2,w
  8393  0B5B  160A  158A  24AA  120A  158A  	fcall	__Umul8_16
  8394  0B60  0874               	movf	?__Umul8_16+1,w
  8395  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8396  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8397  0B63  00C1               	movwf	___flmul@temp+1
  8398  0B64  0873               	movf	?__Umul8_16,w
  8399  0B65  00C0               	movwf	___flmul@temp
  8400  0B66                     l2601:
  8401  0B66  0840               	movf	___flmul@temp,w
  8402  0B67  00B0               	movwf	??___flmul
  8403  0B68  0841               	movf	___flmul@temp+1,w
  8404  0B69  00B1               	movwf	??___flmul+1
  8405  0B6A  01B2               	clrf	??___flmul+2
  8406  0B6B  01B3               	clrf	??___flmul+3
  8407  0B6C  3008               	movlw	8
  8408  0B6D                     u3805:
  8409  0B6D  1003               	clrc
  8410  0B6E  0DB0               	rlf	??___flmul,f
  8411  0B6F  0DB1               	rlf	??___flmul+1,f
  8412  0B70  0DB2               	rlf	??___flmul+2,f
  8413  0B71  0DB3               	rlf	??___flmul+3,f
  8414  0B72                     u3800:
  8415  0B72  3EFF               	addlw	-1
  8416  0B73  1D03               	skipz
  8417  0B74  2B6D               	goto	u3805
  8418  0B75  0830               	movf	??___flmul,w
  8419  0B76  07BC               	addwf	___flmul@prod,f
  8420  0B77  0831               	movf	??___flmul+1,w
  8421  0B78  1103               	clrz
  8422  0B79  1803               	skipnc
  8423  0B7A  3E01               	addlw	1
  8424  0B7B  1903               	skipnz
  8425  0B7C  2B7E               	goto	u3811
  8426  0B7D  07BD               	addwf	___flmul@prod+1,f
  8427  0B7E                     u3811:
  8428  0B7E  0832               	movf	??___flmul+2,w
  8429  0B7F  1103               	clrz
  8430  0B80  1803               	skipnc
  8431  0B81  3E01               	addlw	1
  8432  0B82  1903               	skipnz
  8433  0B83  2B85               	goto	u3812
  8434  0B84  07BE               	addwf	___flmul@prod+2,f
  8435  0B85                     u3812:
  8436  0B85  0833               	movf	??___flmul+3,w
  8437  0B86  1103               	clrz
  8438  0B87  1803               	skipnc
  8439  0B88  3E01               	addlw	1
  8440  0B89  1903               	skipnz
  8441  0B8A  2B8C               	goto	u3813
  8442  0B8B  07BF               	addwf	___flmul@prod+3,f
  8443  0B8C                     u3813:
  8444  0B8C                     l2603:
  8445  0B8C  0836               	movf	___flmul@grs,w
  8446  0B8D  00B0               	movwf	??___flmul
  8447  0B8E  0837               	movf	___flmul@grs+1,w
  8448  0B8F  00B1               	movwf	??___flmul+1
  8449  0B90  0838               	movf	___flmul@grs+2,w
  8450  0B91  00B2               	movwf	??___flmul+2
  8451  0B92  0839               	movf	___flmul@grs+3,w
  8452  0B93  00B3               	movwf	??___flmul+3
  8453  0B94  3018               	movlw	24
  8454  0B95                     u3825:
  8455  0B95  1003               	clrc
  8456  0B96  0CB3               	rrf	??___flmul+3,f
  8457  0B97  0CB2               	rrf	??___flmul+2,f
  8458  0B98  0CB1               	rrf	??___flmul+1,f
  8459  0B99  0CB0               	rrf	??___flmul,f
  8460  0B9A                     u3820:
  8461  0B9A  3EFF               	addlw	-1
  8462  0B9B  1D03               	skipz
  8463  0B9C  2B95               	goto	u3825
  8464  0B9D  0830               	movf	??___flmul,w
  8465  0B9E  07BC               	addwf	___flmul@prod,f
  8466  0B9F  0831               	movf	??___flmul+1,w
  8467  0BA0  1103               	clrz
  8468  0BA1  1803               	skipnc
  8469  0BA2  3E01               	addlw	1
  8470  0BA3  1903               	skipnz
  8471  0BA4  2BA6               	goto	u3831
  8472  0BA5  07BD               	addwf	___flmul@prod+1,f
  8473  0BA6                     u3831:
  8474  0BA6  0832               	movf	??___flmul+2,w
  8475  0BA7  1103               	clrz
  8476  0BA8  1803               	skipnc
  8477  0BA9  3E01               	addlw	1
  8478  0BAA  1903               	skipnz
  8479  0BAB  2BAD               	goto	u3832
  8480  0BAC  07BE               	addwf	___flmul@prod+2,f
  8481  0BAD                     u3832:
  8482  0BAD  0833               	movf	??___flmul+3,w
  8483  0BAE  1103               	clrz
  8484  0BAF  1803               	skipnc
  8485  0BB0  3E01               	addlw	1
  8486  0BB1  1903               	skipnz
  8487  0BB2  2BB4               	goto	u3833
  8488  0BB3  07BF               	addwf	___flmul@prod+3,f
  8489  0BB4                     u3833:
  8490  0BB4                     l2605:
  8491  0BB4  3008               	movlw	8
  8492  0BB5  00B0               	movwf	??___flmul
  8493  0BB6                     u3845:
  8494  0BB6  1003               	clrc
  8495  0BB7  0DB6               	rlf	___flmul@grs,f
  8496  0BB8  0DB7               	rlf	___flmul@grs+1,f
  8497  0BB9  0DB8               	rlf	___flmul@grs+2,f
  8498  0BBA  0DB9               	rlf	___flmul@grs+3,f
  8499  0BBB  0BB0               	decfsz	??___flmul,f
  8500  0BBC  2BB6               	goto	u3845
  8501  0BBD                     l2607:
  8502  0BBD  083B               	movf	___flmul@bexp,w
  8503  0BBE  073A               	addwf	___flmul@aexp,w
  8504  0BBF  00B0               	movwf	??___flmul
  8505  0BC0  01B1               	clrf	??___flmul+1
  8506  0BC1  0DB1               	rlf	??___flmul+1,f
  8507  0BC2  0830               	movf	??___flmul,w
  8508  0BC3  3E82               	addlw	130
  8509  0BC4  00C0               	movwf	___flmul@temp
  8510  0BC5  0831               	movf	??___flmul+1,w
  8511  0BC6  1803               	skipnc
  8512  0BC7  3E01               	addlw	1
  8513  0BC8  3EFF               	addlw	255
  8514  0BC9  00C1               	movwf	___flmul@temp+1
  8515  0BCA  2BE8               	goto	l2619
  8516  0BCB                     l2609:
  8517  0BCB  3001               	movlw	1
  8518  0BCC  00B0               	movwf	??___flmul
  8519  0BCD                     u3855:
  8520  0BCD  1003               	clrc
  8521  0BCE  0DBC               	rlf	___flmul@prod,f
  8522  0BCF  0DBD               	rlf	___flmul@prod+1,f
  8523  0BD0  0DBE               	rlf	___flmul@prod+2,f
  8524  0BD1  0DBF               	rlf	___flmul@prod+3,f
  8525  0BD2  0BB0               	decfsz	??___flmul,f
  8526  0BD3  2BCD               	goto	u3855
  8527  0BD4                     l2611:
  8528  0BD4  1FB9               	btfss	___flmul@grs+3,7
  8529  0BD5  2BD7               	goto	u3861
  8530  0BD6  2BD8               	goto	u3860
  8531  0BD7                     u3861:
  8532  0BD7  2BD9               	goto	l2615
  8533  0BD8                     u3860:
  8534  0BD8                     l2613:
  8535  0BD8  143C               	bsf	___flmul@prod,0
  8536  0BD9                     l2615:
  8537  0BD9  3001               	movlw	1
  8538  0BDA  00B0               	movwf	??___flmul
  8539  0BDB                     u3875:
  8540  0BDB  1003               	clrc
  8541  0BDC  0DB6               	rlf	___flmul@grs,f
  8542  0BDD  0DB7               	rlf	___flmul@grs+1,f
  8543  0BDE  0DB8               	rlf	___flmul@grs+2,f
  8544  0BDF  0DB9               	rlf	___flmul@grs+3,f
  8545  0BE0  0BB0               	decfsz	??___flmul,f
  8546  0BE1  2BDB               	goto	u3875
  8547  0BE2                     l2617:
  8548  0BE2  30FF               	movlw	255
  8549  0BE3  07C0               	addwf	___flmul@temp,f
  8550  0BE4  1803               	skipnc
  8551  0BE5  0AC1               	incf	___flmul@temp+1,f
  8552  0BE6  30FF               	movlw	255
  8553  0BE7  07C1               	addwf	___flmul@temp+1,f
  8554  0BE8                     l2619:
  8555  0BE8  1FBE               	btfss	___flmul@prod+2,7
  8556  0BE9  2BEB               	goto	u3881
  8557  0BEA  2BEC               	goto	u3880
  8558  0BEB                     u3881:
  8559  0BEB  2BCB               	goto	l2609
  8560  0BEC                     u3880:
  8561  0BEC                     l2621:
  8562  0BEC  01BA               	clrf	___flmul@aexp
  8563  0BED                     l2623:
  8564  0BED  1FB9               	btfss	___flmul@grs+3,7
  8565  0BEE  2BF0               	goto	u3891
  8566  0BEF  2BF1               	goto	u3890
  8567  0BF0                     u3891:
  8568  0BF0  2C0D               	goto	l2631
  8569  0BF1                     u3890:
  8570  0BF1                     l2625:
  8571  0BF1  30FF               	movlw	255
  8572  0BF2  0536               	andwf	___flmul@grs,w
  8573  0BF3  00B0               	movwf	??___flmul
  8574  0BF4  30FF               	movlw	255
  8575  0BF5  0537               	andwf	___flmul@grs+1,w
  8576  0BF6  00B1               	movwf	??___flmul+1
  8577  0BF7  30FF               	movlw	255
  8578  0BF8  0538               	andwf	___flmul@grs+2,w
  8579  0BF9  00B2               	movwf	??___flmul+2
  8580  0BFA  307F               	movlw	127
  8581  0BFB  0539               	andwf	___flmul@grs+3,w
  8582  0BFC  00B3               	movwf	??___flmul+3
  8583  0BFD  0833               	movf	??___flmul+3,w
  8584  0BFE  0432               	iorwf	??___flmul+2,w
  8585  0BFF  0431               	iorwf	??___flmul+1,w
  8586  0C00  0430               	iorwf	??___flmul,w
  8587  0C01  1903               	skipnz
  8588  0C02  2C04               	goto	u3901
  8589  0C03  2C05               	goto	u3900
  8590  0C04                     u3901:
  8591  0C04  2C08               	goto	l787
  8592  0C05                     u3900:
  8593  0C05                     l2627:
  8594  0C05  01BA               	clrf	___flmul@aexp
  8595  0C06  0ABA               	incf	___flmul@aexp,f
  8596  0C07  2C0D               	goto	l2631
  8597  0C08                     l787:
  8598  0C08  1C3C               	btfss	___flmul@prod,0
  8599  0C09  2C0B               	goto	u3911
  8600  0C0A  2C0C               	goto	u3910
  8601  0C0B                     u3911:
  8602  0C0B  2C0D               	goto	l2631
  8603  0C0C                     u3910:
  8604  0C0C  2C05               	goto	l2627
  8605  0C0D                     l2631:
  8606  0C0D  083A               	movf	___flmul@aexp,w
  8607  0C0E  1903               	btfsc	3,2
  8608  0C0F  2C11               	goto	u3921
  8609  0C10  2C12               	goto	u3920
  8610  0C11                     u3921:
  8611  0C11  2C43               	goto	l2641
  8612  0C12                     u3920:
  8613  0C12                     l2633:
  8614  0C12  3001               	movlw	1
  8615  0C13  07BC               	addwf	___flmul@prod,f
  8616  0C14  3000               	movlw	0
  8617  0C15  1803               	skipnc
  8618  0C16  3001               	movlw	1
  8619  0C17  07BD               	addwf	___flmul@prod+1,f
  8620  0C18  3000               	movlw	0
  8621  0C19  1803               	skipnc
  8622  0C1A  3001               	movlw	1
  8623  0C1B  07BE               	addwf	___flmul@prod+2,f
  8624  0C1C  3000               	movlw	0
  8625  0C1D  1803               	skipnc
  8626  0C1E  3001               	movlw	1
  8627  0C1F  07BF               	addwf	___flmul@prod+3,f
  8628  0C20                     l2635:
  8629  0C20  1C3F               	btfss	___flmul@prod+3,0
  8630  0C21  2C23               	goto	u3931
  8631  0C22  2C24               	goto	u3930
  8632  0C23                     u3931:
  8633  0C23  2C43               	goto	l2641
  8634  0C24                     u3930:
  8635  0C24                     l2637:
  8636  0C24  083C               	movf	___flmul@prod,w
  8637  0C25  00B0               	movwf	??___flmul
  8638  0C26  083D               	movf	___flmul@prod+1,w
  8639  0C27  00B1               	movwf	??___flmul+1
  8640  0C28  083E               	movf	___flmul@prod+2,w
  8641  0C29  00B2               	movwf	??___flmul+2
  8642  0C2A  083F               	movf	___flmul@prod+3,w
  8643  0C2B  00B3               	movwf	??___flmul+3
  8644  0C2C  3001               	movlw	1
  8645  0C2D  00B4               	movwf	??___flmul+4
  8646  0C2E                     u3945:
  8647  0C2E  0D33               	rlf	??___flmul+3,w
  8648  0C2F  0CB3               	rrf	??___flmul+3,f
  8649  0C30  0CB2               	rrf	??___flmul+2,f
  8650  0C31  0CB1               	rrf	??___flmul+1,f
  8651  0C32  0CB0               	rrf	??___flmul,f
  8652  0C33                     u3940:
  8653  0C33  0BB4               	decfsz	??___flmul+4,f
  8654  0C34  2C2E               	goto	u3945
  8655  0C35  0833               	movf	??___flmul+3,w
  8656  0C36  00BF               	movwf	___flmul@prod+3
  8657  0C37  0832               	movf	??___flmul+2,w
  8658  0C38  00BE               	movwf	___flmul@prod+2
  8659  0C39  0831               	movf	??___flmul+1,w
  8660  0C3A  00BD               	movwf	___flmul@prod+1
  8661  0C3B  0830               	movf	??___flmul,w
  8662  0C3C  00BC               	movwf	___flmul@prod
  8663  0C3D                     l2639:
  8664  0C3D  3001               	movlw	1
  8665  0C3E  07C0               	addwf	___flmul@temp,f
  8666  0C3F  1803               	skipnc
  8667  0C40  0AC1               	incf	___flmul@temp+1,f
  8668  0C41  3000               	movlw	0
  8669  0C42  07C1               	addwf	___flmul@temp+1,f
  8670  0C43                     l2641:
  8671  0C43  0841               	movf	___flmul@temp+1,w
  8672  0C44  3A80               	xorlw	128
  8673  0C45  00FF               	movwf	btemp+1
  8674  0C46  3080               	movlw	128
  8675  0C47  027F               	subwf	btemp+1,w
  8676  0C48  1D03               	skipz
  8677  0C49  2C4C               	goto	u3955
  8678  0C4A  30FF               	movlw	255
  8679  0C4B  0240               	subwf	___flmul@temp,w
  8680  0C4C                     u3955:
  8681  0C4C  1C03               	skipc
  8682  0C4D  2C4F               	goto	u3951
  8683  0C4E  2C50               	goto	u3950
  8684  0C4F                     u3951:
  8685  0C4F  2C5B               	goto	l2645
  8686  0C50                     u3950:
  8687  0C50                     l2643:
  8688  0C50  307F               	movlw	127
  8689  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8690  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8691  0C53  00BF               	movwf	___flmul@prod+3
  8692  0C54  3080               	movlw	128
  8693  0C55  00BE               	movwf	___flmul@prod+2
  8694  0C56  3000               	movlw	0
  8695  0C57  00BD               	movwf	___flmul@prod+1
  8696  0C58  3000               	movlw	0
  8697  0C59  00BC               	movwf	___flmul@prod
  8698  0C5A  2C90               	goto	l793
  8699  0C5B                     l2645:
  8700  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8701  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8702  0C5D  0841               	movf	___flmul@temp+1,w
  8703  0C5E  3A80               	xorlw	128
  8704  0C5F  00FF               	movwf	btemp+1
  8705  0C60  3080               	movlw	128
  8706  0C61  027F               	subwf	btemp+1,w
  8707  0C62  1D03               	skipz
  8708  0C63  2C66               	goto	u3965
  8709  0C64  3001               	movlw	1
  8710  0C65  0240               	subwf	___flmul@temp,w
  8711  0C66                     u3965:
  8712  0C66  1803               	skipnc
  8713  0C67  2C69               	goto	u3961
  8714  0C68  2C6A               	goto	u3960
  8715  0C69                     u3961:
  8716  0C69  2C76               	goto	l2651
  8717  0C6A                     u3960:
  8718  0C6A                     l2647:
  8719  0C6A  3000               	movlw	0
  8720  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8721  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8722  0C6D  00BF               	movwf	___flmul@prod+3
  8723  0C6E  3000               	movlw	0
  8724  0C6F  00BE               	movwf	___flmul@prod+2
  8725  0C70  3000               	movlw	0
  8726  0C71  00BD               	movwf	___flmul@prod+1
  8727  0C72  3000               	movlw	0
  8728  0C73  00BC               	movwf	___flmul@prod
  8729  0C74                     l2649:
  8730  0C74  01B5               	clrf	___flmul@sign
  8731  0C75  2C90               	goto	l793
  8732  0C76                     l2651:
  8733  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8734  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8735  0C78  0840               	movf	___flmul@temp,w
  8736  0C79  00B0               	movwf	??___flmul
  8737  0C7A  0830               	movf	??___flmul,w
  8738  0C7B  00BB               	movwf	___flmul@bexp
  8739  0C7C  30FF               	movlw	255
  8740  0C7D  05BC               	andwf	___flmul@prod,f
  8741  0C7E  30FF               	movlw	255
  8742  0C7F  05BD               	andwf	___flmul@prod+1,f
  8743  0C80  307F               	movlw	127
  8744  0C81  05BE               	andwf	___flmul@prod+2,f
  8745  0C82  3000               	movlw	0
  8746  0C83  05BF               	andwf	___flmul@prod+3,f
  8747  0C84                     l2653:
  8748  0C84  1C3B               	btfss	___flmul@bexp,0
  8749  0C85  2C87               	goto	u3971
  8750  0C86  2C88               	goto	u3970
  8751  0C87                     u3971:
  8752  0C87  2C89               	goto	l2657
  8753  0C88                     u3970:
  8754  0C88                     l2655:
  8755  0C88  17BE               	bsf	___flmul@prod+2,7
  8756  0C89                     l2657:
  8757  0C89  083B               	movf	___flmul@bexp,w
  8758  0C8A  00B0               	movwf	??___flmul
  8759  0C8B  1003               	clrc
  8760  0C8C  0C30               	rrf	??___flmul,w
  8761  0C8D  00B1               	movwf	??___flmul+1
  8762  0C8E  0831               	movf	??___flmul+1,w
  8763  0C8F  00BF               	movwf	___flmul@prod+3
  8764  0C90                     l793:
  8765  0C90  0835               	movf	___flmul@sign,w
  8766  0C91  00B0               	movwf	??___flmul
  8767  0C92  0830               	movf	??___flmul,w
  8768  0C93  04BF               	iorwf	___flmul@prod+3,f
  8769  0C94                     l2659:
  8770  0C94  083F               	movf	___flmul@prod+3,w
  8771  0C95  00AB               	movwf	?___flmul+3
  8772  0C96  083E               	movf	___flmul@prod+2,w
  8773  0C97  00AA               	movwf	?___flmul+2
  8774  0C98  083D               	movf	___flmul@prod+1,w
  8775  0C99  00A9               	movwf	?___flmul+1
  8776  0C9A  083C               	movf	___flmul@prod,w
  8777  0C9B  00A8               	movwf	?___flmul
  8778  0C9C                     l781:
  8779  0C9C  0008               	return
  8780  0C9D                     __end_of___flmul:
  8781                           
  8782                           	psect	text30
  8783  1CAA                     __ptext30:	
  8784 ;; *************** function __Umul8_16 *****************
  8785 ;; Defined at:
  8786 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;  multiplier      1    wreg     unsigned char 
  8789 ;;  multiplicand    1    3[COMMON] unsigned char 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8792 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8793 ;;  product         2    0[BANK0 ] unsigned int 
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  2    3[COMMON] unsigned int 
  8796 ;; Registers used:
  8797 ;;		wreg, status,2, status,0
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8803 ;;      Params:         2       0       0       0       0
  8804 ;;      Locals:         0       5       0       0       0
  8805 ;;      Temps:          2       0       0       0       0
  8806 ;;      Totals:         4       5       0       0       0
  8807 ;;Total ram usage:        9 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; Hardware stack levels required when called:    1
  8810 ;; This function calls:
  8811 ;;		Nothing
  8812 ;; This function is called by:
  8813 ;;		___flmul
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           
  8818                           ;psect for function __Umul8_16
  8819  1CAA                     __Umul8_16:
  8820                           
  8821                           ;incstack = 0
  8822                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8823                           ;__Umul8_16@multiplier stored from wreg
  8824  1CAA  1283               	bcf	3,5	;RP0=0, select bank0
  8825  1CAB  1303               	bcf	3,6	;RP1=0, select bank0
  8826  1CAC  00A4               	movwf	__Umul8_16@multiplier
  8827  1CAD                     l2185:
  8828  1CAD  01A0               	clrf	__Umul8_16@product
  8829  1CAE  01A1               	clrf	__Umul8_16@product+1
  8830  1CAF                     l2187:
  8831  1CAF  0873               	movf	__Umul8_16@multiplicand,w
  8832  1CB0  00F5               	movwf	??__Umul8_16
  8833  1CB1  01F6               	clrf	??__Umul8_16+1
  8834  1CB2  0875               	movf	??__Umul8_16,w
  8835  1CB3  00A2               	movwf	__Umul8_16@word_mpld
  8836  1CB4  0876               	movf	??__Umul8_16+1,w
  8837  1CB5  00A3               	movwf	__Umul8_16@word_mpld+1
  8838  1CB6                     l2189:
  8839  1CB6  1C24               	btfss	__Umul8_16@multiplier,0
  8840  1CB7  2CB9               	goto	u2801
  8841  1CB8  2CBA               	goto	u2800
  8842  1CB9                     u2801:
  8843  1CB9  2CC0               	goto	l800
  8844  1CBA                     u2800:
  8845  1CBA                     l2191:
  8846  1CBA  0822               	movf	__Umul8_16@word_mpld,w
  8847  1CBB  07A0               	addwf	__Umul8_16@product,f
  8848  1CBC  1803               	skipnc
  8849  1CBD  0AA1               	incf	__Umul8_16@product+1,f
  8850  1CBE  0823               	movf	__Umul8_16@word_mpld+1,w
  8851  1CBF  07A1               	addwf	__Umul8_16@product+1,f
  8852  1CC0                     l800:
  8853  1CC0  3001               	movlw	1
  8854  1CC1                     u2815:
  8855  1CC1  1003               	clrc
  8856  1CC2  0DA2               	rlf	__Umul8_16@word_mpld,f
  8857  1CC3  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  8858  1CC4  3EFF               	addlw	-1
  8859  1CC5  1D03               	skipz
  8860  1CC6  2CC1               	goto	u2815
  8861  1CC7  1003               	clrc
  8862  1CC8  0CA4               	rrf	__Umul8_16@multiplier,f
  8863  1CC9                     l2193:
  8864  1CC9  0824               	movf	__Umul8_16@multiplier,w
  8865  1CCA  1D03               	btfss	3,2
  8866  1CCB  2CCD               	goto	u2821
  8867  1CCC  2CCE               	goto	u2820
  8868  1CCD                     u2821:
  8869  1CCD  2CB6               	goto	l2189
  8870  1CCE                     u2820:
  8871  1CCE                     l2195:
  8872  1CCE  0821               	movf	__Umul8_16@product+1,w
  8873  1CCF  00F4               	movwf	?__Umul8_16+1
  8874  1CD0  0820               	movf	__Umul8_16@product,w
  8875  1CD1  00F3               	movwf	?__Umul8_16
  8876  1CD2                     l802:
  8877  1CD2  0008               	return
  8878  1CD3                     __end_of__Umul8_16:
  8879                           
  8880                           	psect	text31
  8881  1BF8                     __ptext31:	
  8882 ;; *************** function _cfg_usart *****************
  8883 ;; Defined at:
  8884 ;;		line 149 in file "main3a.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;		None
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;		None
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  1    wreg      void 
  8891 ;; Registers used:
  8892 ;;		wreg, status,2
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8898 ;;      Params:         0       0       0       0       0
  8899 ;;      Locals:         0       0       0       0       0
  8900 ;;      Temps:          0       0       0       0       0
  8901 ;;      Totals:         0       0       0       0       0
  8902 ;;Total ram usage:        0 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    1
  8905 ;; This function calls:
  8906 ;;		Nothing
  8907 ;; This function is called by:
  8908 ;;		_main
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           
  8913                           ;psect for function _cfg_usart
  8914  1BF8                     _cfg_usart:
  8915  1BF8                     l3057:	
  8916                           ;incstack = 0
  8917                           ; Regs used in _cfg_usart: [wreg+status,2]
  8918                           
  8919                           
  8920                           ;main3a.c: 151:     TXSTAbits.SYNC = 0;
  8921  1BF8  1683               	bsf	3,5	;RP0=1, select bank1
  8922  1BF9  1303               	bcf	3,6	;RP1=0, select bank1
  8923  1BFA  1218               	bcf	24,4	;volatile
  8924                           
  8925                           ;main3a.c: 152:     TXSTAbits.BRGH = 1;
  8926  1BFB  1518               	bsf	24,2	;volatile
  8927                           
  8928                           ;main3a.c: 154:     BAUDCTLbits.BRG16 = 1;
  8929  1BFC  1683               	bsf	3,5	;RP0=1, select bank3
  8930  1BFD  1703               	bsf	3,6	;RP1=1, select bank3
  8931  1BFE  1587               	bsf	7,3	;volatile
  8932  1BFF                     l3059:
  8933                           
  8934                           ;main3a.c: 156:     SPBRG = 25;
  8935  1BFF  3019               	movlw	25
  8936  1C00  1683               	bsf	3,5	;RP0=1, select bank1
  8937  1C01  1303               	bcf	3,6	;RP1=0, select bank1
  8938  1C02  0099               	movwf	25	;volatile
  8939  1C03                     l3061:
  8940                           
  8941                           ;main3a.c: 157:     SPBRGH = 0;
  8942  1C03  019A               	clrf	26	;volatile
  8943  1C04                     l3063:
  8944                           
  8945                           ;main3a.c: 159:     RCSTAbits.SPEN = 1;
  8946  1C04  1283               	bcf	3,5	;RP0=0, select bank0
  8947  1C05  1303               	bcf	3,6	;RP1=0, select bank0
  8948  1C06  1798               	bsf	24,7	;volatile
  8949  1C07                     l3065:
  8950                           
  8951                           ;main3a.c: 160:     RCSTAbits.RX9 = 0;
  8952  1C07  1318               	bcf	24,6	;volatile
  8953  1C08                     l3067:
  8954                           
  8955                           ;main3a.c: 161:     RCSTAbits.CREN = 1;
  8956  1C08  1618               	bsf	24,4	;volatile
  8957  1C09                     l3069:
  8958                           
  8959                           ;main3a.c: 163:     TXSTAbits.TXEN = 1;
  8960  1C09  1683               	bsf	3,5	;RP0=1, select bank1
  8961  1C0A  1303               	bcf	3,6	;RP1=0, select bank1
  8962  1C0B  1698               	bsf	24,5	;volatile
  8963  1C0C                     l144:
  8964  1C0C  0008               	return
  8965  1C0D                     __end_of_cfg_usart:
  8966                           
  8967                           	psect	text32
  8968  1BA5                     __ptext32:	
  8969 ;; *************** function _cfg_inte *****************
  8970 ;; Defined at:
  8971 ;;		line 166 in file "main3a.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;		None
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;		None
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		None
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8985 ;;      Params:         0       0       0       0       0
  8986 ;;      Locals:         0       0       0       0       0
  8987 ;;      Temps:          0       0       0       0       0
  8988 ;;      Totals:         0       0       0       0       0
  8989 ;;Total ram usage:        0 bytes
  8990 ;; Hardware stack levels used:    1
  8991 ;; Hardware stack levels required when called:    1
  8992 ;; This function calls:
  8993 ;;		Nothing
  8994 ;; This function is called by:
  8995 ;;		_main
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           
  9000                           ;psect for function _cfg_inte
  9001  1BA5                     _cfg_inte:
  9002  1BA5                     l3055:	
  9003                           ;incstack = 0
  9004                           ; Regs used in _cfg_inte: []
  9005                           
  9006                           
  9007                           ;main3a.c: 167:     INTCONbits.GIE = 1;
  9008  1BA5  178B               	bsf	11,7	;volatile
  9009                           
  9010                           ;main3a.c: 168:     INTCONbits.PEIE = 1;
  9011  1BA6  170B               	bsf	11,6	;volatile
  9012                           
  9013                           ;main3a.c: 169:     PIE1bits.RCIE = 1;
  9014  1BA7  1683               	bsf	3,5	;RP0=1, select bank1
  9015  1BA8  1303               	bcf	3,6	;RP1=0, select bank1
  9016  1BA9  168C               	bsf	12,5	;volatile
  9017  1BAA                     l147:
  9018  1BAA  0008               	return
  9019  1BAB                     __end_of_cfg_inte:
  9020                           
  9021                           	psect	text33
  9022  1BB8                     __ptext33:	
  9023 ;; *************** function _cfg_clk *****************
  9024 ;; Defined at:
  9025 ;;		line 145 in file "main3a.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, status,0
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9039 ;;      Params:         0       0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0
  9042 ;;      Totals:         0       0       0       0       0
  9043 ;;Total ram usage:        0 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    1
  9046 ;; This function calls:
  9047 ;;		Nothing
  9048 ;; This function is called by:
  9049 ;;		_main
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           
  9054                           ;psect for function _cfg_clk
  9055  1BB8                     _cfg_clk:
  9056  1BB8                     l3071:	
  9057                           ;incstack = 0
  9058                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  9059                           
  9060                           
  9061                           ;main3a.c: 146:     OSCCONbits.IRCF = 0b100;
  9062  1BB8  1683               	bsf	3,5	;RP0=1, select bank1
  9063  1BB9  1303               	bcf	3,6	;RP1=0, select bank1
  9064  1BBA  080F               	movf	15,w	;volatile
  9065  1BBB  398F               	andlw	-113
  9066  1BBC  3840               	iorlw	64
  9067  1BBD  008F               	movwf	15	;volatile
  9068  1BBE                     l3073:
  9069                           
  9070                           ;main3a.c: 147:     OSCCONbits.SCS = 1;
  9071  1BBE  140F               	bsf	15,0	;volatile
  9072  1BBF                     l141:
  9073  1BBF  0008               	return
  9074  1BC0                     __end_of_cfg_clk:
  9075                           
  9076                           	psect	text34
  9077  1C82                     __ptext34:	
  9078 ;; *************** function _isr *****************
  9079 ;; Defined at:
  9080 ;;		line 66 in file "main3a.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;		None
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;		None
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1    wreg      void 
  9087 ;; Registers used:
  9088 ;;		wreg, status,2, status,0
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9094 ;;      Params:         0       0       0       0       0
  9095 ;;      Locals:         0       0       0       0       0
  9096 ;;      Temps:          3       0       0       0       0
  9097 ;;      Totals:         3       0       0       0       0
  9098 ;;Total ram usage:        3 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; This function calls:
  9101 ;;		Nothing
  9102 ;; This function is called by:
  9103 ;;		Interrupt level 1
  9104 ;; This function uses a non-reentrant model
  9105 ;;
  9106                           
  9107                           
  9108                           ;psect for function _isr
  9109  1C82                     _isr:
  9110  1C82                     i1l3351:
  9111                           
  9112                           ;main3a.c: 68: if(PIR1bits.RCIF){
  9113  1C82  1283               	bcf	3,5	;RP0=0, select bank0
  9114  1C83  1303               	bcf	3,6	;RP1=0, select bank0
  9115  1C84  1E8C               	btfss	12,5	;volatile
  9116  1C85  2C87               	goto	u554_21
  9117  1C86  2C88               	goto	u554_20
  9118  1C87                     u554_21:
  9119  1C87  2CA3               	goto	i1l124
  9120  1C88                     u554_20:
  9121  1C88                     i1l3353:
  9122                           
  9123                           ;main3a.c: 70:     if (RCREG == 43){
  9124  1C88  302B               	movlw	43
  9125  1C89  061A               	xorwf	26,w	;volatile
  9126  1C8A  1D03               	btfss	3,2
  9127  1C8B  2C8D               	goto	u555_21
  9128  1C8C  2C8E               	goto	u555_20
  9129  1C8D                     u555_21:
  9130  1C8D  2C96               	goto	i1l3359
  9131  1C8E                     u555_20:
  9132  1C8E                     i1l3355:
  9133                           
  9134                           ;main3a.c: 71:         TXREG = 43;
  9135  1C8E  302B               	movlw	43
  9136  1C8F  0099               	movwf	25	;volatile
  9137  1C90                     i1l3357:
  9138                           
  9139                           ;main3a.c: 72:         V3++;
  9140  1C90  3001               	movlw	1
  9141  1C91  00F0               	movwf	??_isr
  9142  1C92  0870               	movf	??_isr,w
  9143  1C93  1683               	bsf	3,5	;RP0=1, select bank1
  9144  1C94  1303               	bcf	3,6	;RP1=0, select bank1
  9145  1C95  07DE               	addwf	_V3^(0+128),f
  9146  1C96                     i1l3359:
  9147                           
  9148                           ;main3a.c: 74:     if (RCREG == 45){
  9149  1C96  302D               	movlw	45
  9150  1C97  1283               	bcf	3,5	;RP0=0, select bank0
  9151  1C98  061A               	xorwf	26,w	;volatile
  9152  1C99  1D03               	btfss	3,2
  9153  1C9A  2C9C               	goto	u556_21
  9154  1C9B  2C9D               	goto	u556_20
  9155  1C9C                     u556_21:
  9156  1C9C  2CA3               	goto	i1l124
  9157  1C9D                     u556_20:
  9158  1C9D                     i1l3361:
  9159                           
  9160                           ;main3a.c: 75:         TXREG = 45;
  9161  1C9D  302D               	movlw	45
  9162  1C9E  0099               	movwf	25	;volatile
  9163  1C9F                     i1l3363:
  9164                           
  9165                           ;main3a.c: 76:         V3--;
  9166  1C9F  3001               	movlw	1
  9167  1CA0  1683               	bsf	3,5	;RP0=1, select bank1
  9168  1CA1  1303               	bcf	3,6	;RP1=0, select bank1
  9169  1CA2  02DE               	subwf	_V3^(0+128),f
  9170  1CA3                     i1l124:
  9171  1CA3  0872               	movf	??_isr+2,w
  9172  1CA4  008A               	movwf	10
  9173  1CA5  0E71               	swapf	??_isr+1,w
  9174  1CA6  0083               	movwf	3
  9175  1CA7  0EFE               	swapf	btemp,f
  9176  1CA8  0E7E               	swapf	btemp,w
  9177  1CA9  0009               	retfie
  9178  1CAA                     __end_of_isr:
  9179  007E                     btemp	set	126	;btemp
  9180  007E                     wtemp0	set	126
  9181                           
  9182                           	psect	intentry
  9183  0004                     __pintentry:	
  9184                           ;incstack = 0
  9185                           ; Regs used in _isr: [wreg+status,2+status,0]
  9186                           
  9187  0004                     interrupt_function:
  9188  007E                     saved_w	set	btemp
  9189  0004  00FE               	movwf	btemp
  9190  0005  0E03               	swapf	3,w
  9191  0006  00F1               	movwf	??_isr+1
  9192  0007  080A               	movf	10,w
  9193  0008  00F2               	movwf	??_isr+2
  9194  0009  160A  158A  2C82   	ljmp	_isr
  9195                           
  9196                           	psect	config
  9197                           
  9198                           ;Config register CONFIG1 @ 0x2007
  9199                           ;	Oscillator Selection bits
  9200                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9201                           ;	Watchdog Timer Enable bit
  9202                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9203                           ;	Power-up Timer Enable bit
  9204                           ;	PWRTE = OFF, PWRT disabled
  9205                           ;	RE3/MCLR pin function select bit
  9206                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9207                           ;	Code Protection bit
  9208                           ;	CP = OFF, Program memory code protection is disabled
  9209                           ;	Data Code Protection bit
  9210                           ;	CPD = OFF, Data memory code protection is disabled
  9211                           ;	Brown Out Reset Selection bits
  9212                           ;	BOREN = OFF, BOR disabled
  9213                           ;	Internal External Switchover bit
  9214                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9215                           ;	Fail-Safe Clock Monitor Enabled bit
  9216                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9217                           ;	Low Voltage Programming Enable bit
  9218                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9219                           ;	In-Circuit Debugger Mode bit
  9220                           ;	DEBUG = 0x1, unprogrammed default
  9221  2007                     	org	8199
  9222  2007  20D4               	dw	8404
  9223                           
  9224                           ;Config register CONFIG2 @ 0x2008
  9225                           ;	Brown-out Reset Selection bit
  9226                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9227                           ;	Flash Program Memory Self Write Enable bits
  9228                           ;	WRT = OFF, Write protection off
  9229  2008                     	org	8200
  9230  2008  3FFF               	dw	16383
  9231                           
  9232                           	psect	text1_split_1
  9233  001C                     u5190:
  9234  001C                     l3177:
  9235  001C  1683               	bsf	3,5	;RP0=1, select bank1
  9236  001D  1303               	bcf	3,6	;RP1=0, select bank1
  9237  001E  084B               	movf	(sprintf@fval+3)^(0+128),w
  9238  001F  00F6               	movwf	___fleq@ff1+3
  9239  0020  084A               	movf	(sprintf@fval+2)^(0+128),w
  9240  0021  00F5               	movwf	___fleq@ff1+2
  9241  0022  0849               	movf	(sprintf@fval+1)^(0+128),w
  9242  0023  00F4               	movwf	___fleq@ff1+1
  9243  0024  0848               	movf	sprintf@fval^(0+128),w
  9244  0025  00F3               	movwf	___fleq@ff1
  9245  0026  3000               	movlw	0
  9246  0027  00FA               	movwf	___fleq@ff2+3
  9247  0028  3000               	movlw	0
  9248  0029  00F9               	movwf	___fleq@ff2+2
  9249  002A  3000               	movlw	0
  9250  002B  00F8               	movwf	___fleq@ff2+1
  9251  002C  3000               	movlw	0
  9252  002D  00F7               	movwf	___fleq@ff2
  9253  002E  160A  158A  2519  120A  118A  	fcall	___fleq
  9254  0033  1803               	btfsc	3,0
  9255  0034  2836               	goto	u5201
  9256  0035  2837               	goto	u5200
  9257  0036                     u5201:
  9258  0036  28DF               	goto	l3197
  9259  0037                     u5200:
  9260  0037                     l3179:
  9261  0037  1683               	bsf	3,5	;RP0=1, select bank1
  9262  0038  1303               	bcf	3,6	;RP1=0, select bank1
  9263  0039  084B               	movf	(sprintf@fval+3)^(0+128),w
  9264  003A  1283               	bcf	3,5	;RP0=0, select bank0
  9265  003B  1303               	bcf	3,6	;RP1=0, select bank0
  9266  003C  00D8               	movwf	___fltol@f1+3
  9267  003D  1683               	bsf	3,5	;RP0=1, select bank1
  9268  003E  1303               	bcf	3,6	;RP1=0, select bank1
  9269  003F  084A               	movf	(sprintf@fval+2)^(0+128),w
  9270  0040  1283               	bcf	3,5	;RP0=0, select bank0
  9271  0041  1303               	bcf	3,6	;RP1=0, select bank0
  9272  0042  00D7               	movwf	___fltol@f1+2
  9273  0043  1683               	bsf	3,5	;RP0=1, select bank1
  9274  0044  1303               	bcf	3,6	;RP1=0, select bank1
  9275  0045  0849               	movf	(sprintf@fval+1)^(0+128),w
  9276  0046  1283               	bcf	3,5	;RP0=0, select bank0
  9277  0047  1303               	bcf	3,6	;RP1=0, select bank0
  9278  0048  00D6               	movwf	___fltol@f1+1
  9279  0049  1683               	bsf	3,5	;RP0=1, select bank1
  9280  004A  1303               	bcf	3,6	;RP1=0, select bank1
  9281  004B  0848               	movf	sprintf@fval^(0+128),w
  9282  004C  1283               	bcf	3,5	;RP0=0, select bank0
  9283  004D  1303               	bcf	3,6	;RP1=0, select bank0
  9284  004E  00D5               	movwf	___fltol@f1
  9285  004F  160A  158A  26E0  120A  118A  	fcall	___fltol
  9286  0054  1283               	bcf	3,5	;RP0=0, select bank0
  9287  0055  1303               	bcf	3,6	;RP1=0, select bank0
  9288  0056  0858               	movf	?___fltol+3,w
  9289  0057  0457               	iorwf	?___fltol+2,w
  9290  0058  0456               	iorwf	?___fltol+1,w
  9291  0059  0455               	iorwf	?___fltol,w
  9292  005A  1D03               	skipz
  9293  005B  285D               	goto	u5211
  9294  005C  285E               	goto	u5210
  9295  005D                     u5211:
  9296  005D  28DF               	goto	l3197
  9297  005E                     u5210:
  9298  005E                     l3181:
  9299  005E  1683               	bsf	3,5	;RP0=1, select bank1
  9300  005F  1303               	bcf	3,6	;RP1=0, select bank1
  9301  0060  0847               	movf	(sprintf@eexp+1)^(0+128),w
  9302  0061  3A80               	xorlw	128
  9303  0062  00FF               	movwf	btemp+1
  9304  0063  3080               	movlw	128
  9305  0064  027F               	subwf	btemp+1,w
  9306  0065  1D03               	skipz
  9307  0066  2869               	goto	u5225
  9308  0067  3002               	movlw	2
  9309  0068  0246               	subwf	sprintf@eexp^(0+128),w
  9310  0069                     u5225:
  9311  0069  1C03               	skipc
  9312  006A  286C               	goto	u5221
  9313  006B  286D               	goto	u5220
  9314  006C                     u5221:
  9315  006C  28DF               	goto	l3197
  9316  006D                     u5220:
  9317  006D                     l3183:
  9318                           
  9319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9320  006D  1683               	bsf	3,5	;RP0=1, select bank1
  9321  006E  1303               	bcf	3,6	;RP1=0, select bank1
  9322  006F  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  9323  0070  00F6               	movwf	___flge@ff1+3
  9324  0071  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  9325  0072  00F5               	movwf	___flge@ff1+2
  9326  0073  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  9327  0074  00F4               	movwf	___flge@ff1+1
  9328  0075  0842               	movf	sprintf@tmpval^(0+128),w
  9329  0076  00F3               	movwf	___flge@ff1
  9330  0077  3040               	movlw	64
  9331  0078  00FA               	movwf	___flge@ff2+3
  9332  0079  3089               	movlw	137
  9333  007A  00F9               	movwf	___flge@ff2+2
  9334  007B  3070               	movlw	112
  9335  007C  00F8               	movwf	___flge@ff2+1
  9336  007D  305F               	movlw	95
  9337  007E  00F7               	movwf	___flge@ff2
  9338  007F  160A  158A  275C  120A  118A  	fcall	___flge
  9339  0084  1803               	btfsc	3,0
  9340  0085  2887               	goto	u5231
  9341  0086  2888               	goto	u5230
  9342  0087                     u5231:
  9343  0087  2891               	goto	l3187
  9344  0088                     u5230:
  9345  0088                     l3185:
  9346                           
  9347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9348  0088  30F7               	movlw	247
  9349  0089  1683               	bsf	3,5	;RP0=1, select bank1
  9350  008A  1303               	bcf	3,6	;RP1=0, select bank1
  9351  008B  07C6               	addwf	sprintf@eexp^(0+128),f
  9352  008C  1803               	skipnc
  9353  008D  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  9354  008E  30FF               	movlw	255
  9355  008F  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  9356                           
  9357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9358  0090  2899               	goto	l3189
  9359  0091                     l3187:
  9360                           
  9361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9362  0091  30F8               	movlw	248
  9363  0092  1683               	bsf	3,5	;RP0=1, select bank1
  9364  0093  1303               	bcf	3,6	;RP1=0, select bank1
  9365  0094  07C6               	addwf	sprintf@eexp^(0+128),f
  9366  0095  1803               	skipnc
  9367  0096  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  9368  0097  30FF               	movlw	255
  9369  0098  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  9370  0099                     l3189:
  9371                           
  9372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9373  0099  0846               	movf	sprintf@eexp^(0+128),w
  9374  009A  120A  158A  249D  120A  118A  	fcall	_scale
  9375  009F  1283               	bcf	3,5	;RP0=0, select bank0
  9376  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  9377  00A1  0845               	movf	?_scale+3,w
  9378  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  9379  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  9380  00A4  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  9381  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  9382  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  9383  00A7  0844               	movf	?_scale+2,w
  9384  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  9385  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  9386  00AA  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  9387  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  9388  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  9389  00AD  0843               	movf	?_scale+1,w
  9390  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  9391  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  9392  00B0  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  9393  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  9394  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  9395  00B3  0842               	movf	?_scale,w
  9396  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  9397  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  9398  00B6  00C2               	movwf	sprintf@tmpval^(0+128)
  9399  00B7                     l3191:
  9400  00B7  084B               	movf	(sprintf@fval+3)^(0+128),w
  9401  00B8  00F6               	movwf	__div_to_l_@f1+3
  9402  00B9  084A               	movf	(sprintf@fval+2)^(0+128),w
  9403  00BA  00F5               	movwf	__div_to_l_@f1+2
  9404  00BB  0849               	movf	(sprintf@fval+1)^(0+128),w
  9405  00BC  00F4               	movwf	__div_to_l_@f1+1
  9406  00BD  0848               	movf	sprintf@fval^(0+128),w
  9407  00BE  00F3               	movwf	__div_to_l_@f1
  9408  00BF  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  9409  00C0  00FA               	movwf	__div_to_l_@f2+3
  9410  00C1  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  9411  00C2  00F9               	movwf	__div_to_l_@f2+2
  9412  00C3  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  9413  00C4  00F8               	movwf	__div_to_l_@f2+1
  9414  00C5  0842               	movf	sprintf@tmpval^(0+128),w
  9415  00C6  00F7               	movwf	__div_to_l_@f2
  9416  00C7  160A  118A  21B6  120A  118A  	fcall	__div_to_l_
  9417  00CC  0876               	movf	?__div_to_l_+3,w
  9418  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  9419  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  9420  00CF  00BD               	movwf	(sprintf@val+3)^(0+128)
  9421  00D0  0875               	movf	?__div_to_l_+2,w
  9422  00D1  00BC               	movwf	(sprintf@val+2)^(0+128)
  9423  00D2  0874               	movf	?__div_to_l_+1,w
  9424  00D3  00BB               	movwf	(sprintf@val+1)^(0+128)
  9425  00D4  0873               	movf	?__div_to_l_,w
  9426  00D5  00BA               	movwf	sprintf@val^(0+128)
  9427  00D6                     l3195:
  9428                           
  9429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9430  00D6  3000               	movlw	0
  9431  00D7  00CB               	movwf	(sprintf@fval+3)^(0+128)
  9432  00D8  3000               	movlw	0
  9433  00D9  00CA               	movwf	(sprintf@fval+2)^(0+128)
  9434  00DA  3000               	movlw	0
  9435  00DB  00C9               	movwf	(sprintf@fval+1)^(0+128)
  9436  00DC  3000               	movlw	0
  9437  00DD  00C8               	movwf	sprintf@fval^(0+128)
  9438                           
  9439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9440  00DE  2945               	goto	l3203
  9441  00DF                     l3197:
  9442                           
  9443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9444  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  9445  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  9446  00E1  084B               	movf	(sprintf@fval+3)^(0+128),w
  9447  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  9448  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  9449  00E4  00D8               	movwf	___fltol@f1+3
  9450  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  9451  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  9452  00E7  084A               	movf	(sprintf@fval+2)^(0+128),w
  9453  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  9454  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  9455  00EA  00D7               	movwf	___fltol@f1+2
  9456  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  9457  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  9458  00ED  0849               	movf	(sprintf@fval+1)^(0+128),w
  9459  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  9460  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  9461  00F0  00D6               	movwf	___fltol@f1+1
  9462  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  9463  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  9464  00F3  0848               	movf	sprintf@fval^(0+128),w
  9465  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  9466  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  9467  00F6  00D5               	movwf	___fltol@f1
  9468  00F7  160A  158A  26E0  120A  118A  	fcall	___fltol
  9469  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  9470  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  9471  00FE  0858               	movf	?___fltol+3,w
  9472  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  9473  0100  1303               	bcf	3,6	;RP1=0, select bank1
  9474  0101  00BD               	movwf	(sprintf@val+3)^(0+128)
  9475  0102  1283               	bcf	3,5	;RP0=0, select bank0
  9476  0103  1303               	bcf	3,6	;RP1=0, select bank0
  9477  0104  0857               	movf	?___fltol+2,w
  9478  0105  1683               	bsf	3,5	;RP0=1, select bank1
  9479  0106  1303               	bcf	3,6	;RP1=0, select bank1
  9480  0107  00BC               	movwf	(sprintf@val+2)^(0+128)
  9481  0108  1283               	bcf	3,5	;RP0=0, select bank0
  9482  0109  1303               	bcf	3,6	;RP1=0, select bank0
  9483  010A  0856               	movf	?___fltol+1,w
  9484  010B  1683               	bsf	3,5	;RP0=1, select bank1
  9485  010C  1303               	bcf	3,6	;RP1=0, select bank1
  9486  010D  00BB               	movwf	(sprintf@val+1)^(0+128)
  9487  010E  1283               	bcf	3,5	;RP0=0, select bank0
  9488  010F  1303               	bcf	3,6	;RP1=0, select bank0
  9489  0110  0855               	movf	?___fltol,w
  9490  0111  1683               	bsf	3,5	;RP0=1, select bank1
  9491  0112  1303               	bcf	3,6	;RP1=0, select bank1
  9492  0113  00BA               	movwf	sprintf@val^(0+128)
  9493  0114                     l3199:
  9494                           
  9495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9496  0114  083D               	movf	(sprintf@val+3)^(0+128),w
  9497  0115  00F6               	movwf	___xxtofl@val+3
  9498  0116  083C               	movf	(sprintf@val+2)^(0+128),w
  9499  0117  00F5               	movwf	___xxtofl@val+2
  9500  0118  083B               	movf	(sprintf@val+1)^(0+128),w
  9501  0119  00F4               	movwf	___xxtofl@val+1
  9502  011A  083A               	movf	sprintf@val^(0+128),w
  9503  011B  00F3               	movwf	___xxtofl@val
  9504  011C  3000               	movlw	0
  9505  011D  160A  118A  203D  120A  118A  	fcall	___xxtofl
  9506  0122  0876               	movf	?___xxtofl+3,w
  9507  0123  1683               	bsf	3,5	;RP0=1, select bank1
  9508  0124  1303               	bcf	3,6	;RP1=0, select bank1
  9509  0125  00A3               	movwf	(___flsub@a+3)^(0+128)
  9510  0126  0875               	movf	?___xxtofl+2,w
  9511  0127  00A2               	movwf	(___flsub@a+2)^(0+128)
  9512  0128  0874               	movf	?___xxtofl+1,w
  9513  0129  00A1               	movwf	(___flsub@a+1)^(0+128)
  9514  012A  0873               	movf	?___xxtofl,w
  9515  012B  00A0               	movwf	___flsub@a^(0+128)
  9516  012C  084B               	movf	(sprintf@fval+3)^(0+128),w
  9517  012D  00A7               	movwf	(___flsub@b+3)^(0+128)
  9518  012E  084A               	movf	(sprintf@fval+2)^(0+128),w
  9519  012F  00A6               	movwf	(___flsub@b+2)^(0+128)
  9520  0130  0849               	movf	(sprintf@fval+1)^(0+128),w
  9521  0131  00A5               	movwf	(___flsub@b+1)^(0+128)
  9522  0132  0848               	movf	sprintf@fval^(0+128),w
  9523  0133  00A4               	movwf	___flsub@b^(0+128)
  9524  0134  160A  158A  2569  120A  118A  	fcall	___flsub
  9525  0139  1683               	bsf	3,5	;RP0=1, select bank1
  9526  013A  1303               	bcf	3,6	;RP1=0, select bank1
  9527  013B  0823               	movf	(?___flsub+3)^(0+128),w
  9528  013C  00CB               	movwf	(sprintf@fval+3)^(0+128)
  9529  013D  0822               	movf	(?___flsub+2)^(0+128),w
  9530  013E  00CA               	movwf	(sprintf@fval+2)^(0+128)
  9531  013F  0821               	movf	(?___flsub+1)^(0+128),w
  9532  0140  00C9               	movwf	(sprintf@fval+1)^(0+128)
  9533  0141  0820               	movf	?___flsub^(0+128),w
  9534  0142  00C8               	movwf	sprintf@fval^(0+128)
  9535  0143                     l3201:
  9536                           
  9537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9538  0143  01C6               	clrf	sprintf@eexp^(0+128)
  9539  0144  01C7               	clrf	(sprintf@eexp+1)^(0+128)
  9540  0145                     l3203:
  9541                           
  9542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9543  0145  01CF               	clrf	sprintf@c^(0+128)
  9544  0146  0ACF               	incf	sprintf@c^(0+128),f
  9545  0147                     l3209:
  9546                           
  9547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9548  0147  084F               	movf	sprintf@c^(0+128),w
  9549  0148  1283               	bcf	3,5	;RP0=0, select bank0
  9550  0149  1303               	bcf	3,6	;RP1=0, select bank0
  9551  014A  00EA               	movwf	??_sprintf
  9552  014B  3001               	movlw	1
  9553  014C                     u5245:
  9554  014C  1003               	clrc
  9555  014D  0DEA               	rlf	??_sprintf,f
  9556  014E  3EFF               	addlw	-1
  9557  014F  1D03               	skipz
  9558  0150  294C               	goto	u5245
  9559  0151  1003               	clrc
  9560  0152  0D6A               	rlf	??_sprintf,w
  9561  0153  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9562  0154  0084               	movwf	4
  9563  0155  160A  158A  2000  120A  118A  	fcall	stringdir
  9564  015A  00EB               	movwf	??_sprintf+1
  9565  015B  160A  158A  2000  120A  118A  	fcall	stringdir
  9566  0160  00EC               	movwf	??_sprintf+2
  9567  0161  160A  158A  2000  120A  118A  	fcall	stringdir
  9568  0166  00ED               	movwf	??_sprintf+3
  9569  0167  160A  158A  2000  120A  118A  	fcall	stringdir
  9570  016C  00EE               	movwf	??_sprintf+4
  9571  016D  086E               	movf	??_sprintf+4,w
  9572  016E  1683               	bsf	3,5	;RP0=1, select bank1
  9573  016F  1303               	bcf	3,6	;RP1=0, select bank1
  9574  0170  023D               	subwf	(sprintf@val+3)^(0+128),w
  9575  0171  1D03               	skipz
  9576  0172  2989               	goto	u5255
  9577  0173  1283               	bcf	3,5	;RP0=0, select bank0
  9578  0174  1303               	bcf	3,6	;RP1=0, select bank0
  9579  0175  086D               	movf	??_sprintf+3,w
  9580  0176  1683               	bsf	3,5	;RP0=1, select bank1
  9581  0177  1303               	bcf	3,6	;RP1=0, select bank1
  9582  0178  023C               	subwf	(sprintf@val+2)^(0+128),w
  9583  0179  1D03               	skipz
  9584  017A  2989               	goto	u5255
  9585  017B  1283               	bcf	3,5	;RP0=0, select bank0
  9586  017C  1303               	bcf	3,6	;RP1=0, select bank0
  9587  017D  086C               	movf	??_sprintf+2,w
  9588  017E  1683               	bsf	3,5	;RP0=1, select bank1
  9589  017F  1303               	bcf	3,6	;RP1=0, select bank1
  9590  0180  023B               	subwf	(sprintf@val+1)^(0+128),w
  9591  0181  1D03               	skipz
  9592  0182  2989               	goto	u5255
  9593  0183  1283               	bcf	3,5	;RP0=0, select bank0
  9594  0184  1303               	bcf	3,6	;RP1=0, select bank0
  9595  0185  086B               	movf	??_sprintf+1,w
  9596  0186  1683               	bsf	3,5	;RP0=1, select bank1
  9597  0187  1303               	bcf	3,6	;RP1=0, select bank1
  9598  0188  023A               	subwf	sprintf@val^(0+128),w
  9599  0189                     u5255:
  9600  0189  1803               	skipnc
  9601  018A  298C               	goto	u5251
  9602  018B  298D               	goto	u5250
  9603  018C                     u5251:
  9604  018C  298E               	goto	l3213
  9605  018D                     u5250:
  9606  018D  299C               	goto	l3215
  9607  018E                     l3213:
  9608  018E  3001               	movlw	1
  9609  018F  1283               	bcf	3,5	;RP0=0, select bank0
  9610  0190  1303               	bcf	3,6	;RP1=0, select bank0
  9611  0191  00EA               	movwf	??_sprintf
  9612  0192  086A               	movf	??_sprintf,w
  9613  0193  1683               	bsf	3,5	;RP0=1, select bank1
  9614  0194  1303               	bcf	3,6	;RP1=0, select bank1
  9615  0195  07CF               	addwf	sprintf@c^(0+128),f
  9616  0196  300A               	movlw	10
  9617  0197  064F               	xorwf	sprintf@c^(0+128),w
  9618  0198  1D03               	btfss	3,2
  9619  0199  299B               	goto	u5261
  9620  019A  299C               	goto	u5260
  9621  019B                     u5261:
  9622  019B  2947               	goto	l3209
  9623  019C                     u5260:
  9624  019C                     l3215:
  9625                           
  9626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9627  019C  084F               	movf	sprintf@c^(0+128),w
  9628  019D  074D               	addwf	sprintf@prec^(0+128),w
  9629  019E  1283               	bcf	3,5	;RP0=0, select bank0
  9630  019F  1303               	bcf	3,6	;RP1=0, select bank0
  9631  01A0  00EA               	movwf	??_sprintf
  9632  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  9633  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  9634  01A3  084E               	movf	(sprintf@prec+1)^(0+128),w
  9635  01A4  1803               	skipnc
  9636  01A5  0A4E               	incf	(sprintf@prec+1)^(0+128),w
  9637  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  9638  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  9639  01A8  00EB               	movwf	??_sprintf+1
  9640  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  9641  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  9642  01AB  0846               	movf	sprintf@eexp^(0+128),w
  9643  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  9644  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  9645  01AE  076A               	addwf	??_sprintf,w
  9646  01AF  00EC               	movwf	??_sprintf+2
  9647  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  9648  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  9649  01B2  0847               	movf	(sprintf@eexp+1)^(0+128),w
  9650  01B3  1803               	skipnc
  9651  01B4  0A47               	incf	(sprintf@eexp+1)^(0+128),w
  9652  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  9653  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  9654  01B7  076B               	addwf	??_sprintf+1,w
  9655  01B8  00ED               	movwf	??_sprintf+3
  9656  01B9  086C               	movf	??_sprintf+2,w
  9657  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  9658  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  9659  01BC  02C0               	subwf	sprintf@width^(0+128),f
  9660  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  9661  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  9662  01BF  086D               	movf	??_sprintf+3,w
  9663  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  9664  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  9665  01C2  1C03               	skipc
  9666  01C3  03C1               	decf	(sprintf@width+1)^(0+128),f
  9667  01C4  02C1               	subwf	(sprintf@width+1)^(0+128),f
  9668                           
  9669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9670  01C5  084D               	movf	sprintf@prec^(0+128),w
  9671  01C6  044E               	iorwf	(sprintf@prec+1)^(0+128),w
  9672  01C7  1903               	btfsc	3,2
  9673  01C8  29CA               	goto	u5271
  9674  01C9  29CB               	goto	u5270
  9675  01CA                     u5271:
  9676  01CA  29D1               	goto	l3219
  9677  01CB                     u5270:
  9678  01CB                     l3217:
  9679                           
  9680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9681  01CB  30FF               	movlw	255
  9682  01CC  07C0               	addwf	sprintf@width^(0+128),f
  9683  01CD  1803               	skipnc
  9684  01CE  0AC1               	incf	(sprintf@width+1)^(0+128),f
  9685  01CF  30FF               	movlw	255
  9686  01D0  07C1               	addwf	(sprintf@width+1)^(0+128),f
  9687  01D1                     l3219:
  9688                           
  9689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9690  01D1  3003               	movlw	3
  9691  01D2  053E               	andwf	sprintf@flag^(0+128),w
  9692  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  9693  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  9694  01D5  00EA               	movwf	??_sprintf
  9695  01D6  3000               	movlw	0
  9696  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  9697  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  9698  01D9  053F               	andwf	(sprintf@flag+1)^(0+128),w
  9699  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  9700  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  9701  01DC  00EB               	movwf	??_sprintf+1
  9702  01DD  086A               	movf	??_sprintf,w
  9703  01DE  046B               	iorwf	??_sprintf+1,w
  9704  01DF  1903               	btfsc	3,2
  9705  01E0  29E2               	goto	u5281
  9706  01E1  29E3               	goto	u5280
  9707  01E2                     u5281:
  9708  01E2  2A00               	goto	l3229
  9709  01E3                     u5280:
  9710  01E3                     l3221:
  9711                           
  9712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9713  01E3  30FF               	movlw	255
  9714  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  9715  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  9716  01E6  07C0               	addwf	sprintf@width^(0+128),f
  9717  01E7  1803               	skipnc
  9718  01E8  0AC1               	incf	(sprintf@width+1)^(0+128),f
  9719  01E9  30FF               	movlw	255
  9720  01EA  07C1               	addwf	(sprintf@width+1)^(0+128),f
  9721  01EB  2A00               	goto	l3229
  9722  01EC                     l3223:
  9723                           
  9724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9725  01EC  3020               	movlw	32
  9726  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  9727  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  9728  01EF  00EA               	movwf	??_sprintf
  9729  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  9730  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  9731  01F2  084C               	movf	sprintf@sp^(0+128),w
  9732  01F3  0084               	movwf	4
  9733  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  9734  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  9735  01F6  086A               	movf	??_sprintf,w
  9736  01F7  1383               	bcf	3,7	;select IRP bank0
  9737  01F8  0080               	movwf	0
  9738  01F9                     l3225:
  9739  01F9  3001               	movlw	1
  9740  01FA  00EA               	movwf	??_sprintf
  9741  01FB  086A               	movf	??_sprintf,w
  9742  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  9743  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  9744  01FE  07CC               	addwf	sprintf@sp^(0+128),f
  9745  01FF  29E3               	goto	l3221
  9746  0200                     l3229:
  9747                           
  9748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9749  0200  1683               	bsf	3,5	;RP0=1, select bank1
  9750  0201  1303               	bcf	3,6	;RP1=0, select bank1
  9751  0202  0841               	movf	(sprintf@width+1)^(0+128),w
  9752  0203  3A80               	xorlw	128
  9753  0204  00FF               	movwf	btemp+1
  9754  0205  3080               	movlw	128
  9755  0206  027F               	subwf	btemp+1,w
  9756  0207  1D03               	skipz
  9757  0208  2A0B               	goto	u5295
  9758  0209  3001               	movlw	1
  9759  020A  0240               	subwf	sprintf@width^(0+128),w
  9760  020B                     u5295:
  9761  020B  1803               	skipnc
  9762  020C  2A0E               	goto	u5291
  9763  020D  2A0F               	goto	u5290
  9764  020E                     u5291:
  9765  020E  29EC               	goto	l3223
  9766  020F                     u5290:
  9767  020F                     l3231:
  9768                           
  9769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9770  020F  3003               	movlw	3
  9771  0210  1683               	bsf	3,5	;RP0=1, select bank1
  9772  0211  1303               	bcf	3,6	;RP1=0, select bank1
  9773  0212  053E               	andwf	sprintf@flag^(0+128),w
  9774  0213  1283               	bcf	3,5	;RP0=0, select bank0
  9775  0214  1303               	bcf	3,6	;RP1=0, select bank0
  9776  0215  00EA               	movwf	??_sprintf
  9777  0216  3000               	movlw	0
  9778  0217  1683               	bsf	3,5	;RP0=1, select bank1
  9779  0218  1303               	bcf	3,6	;RP1=0, select bank1
  9780  0219  053F               	andwf	(sprintf@flag+1)^(0+128),w
  9781  021A  1283               	bcf	3,5	;RP0=0, select bank0
  9782  021B  1303               	bcf	3,6	;RP1=0, select bank0
  9783  021C  00EB               	movwf	??_sprintf+1
  9784  021D  086A               	movf	??_sprintf,w
  9785  021E  046B               	iorwf	??_sprintf+1,w
  9786  021F  1903               	btfsc	3,2
  9787  0220  2A22               	goto	u5301
  9788  0221  2A23               	goto	u5300
  9789  0222                     u5301:
  9790  0222  2AA7               	goto	l324
  9791  0223                     u5300:
  9792  0223                     l3233:
  9793                           
  9794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9795  0223  302D               	movlw	45
  9796  0224  00EA               	movwf	??_sprintf
  9797  0225  1683               	bsf	3,5	;RP0=1, select bank1
  9798  0226  1303               	bcf	3,6	;RP1=0, select bank1
  9799  0227  084C               	movf	sprintf@sp^(0+128),w
  9800  0228  0084               	movwf	4
  9801  0229  1283               	bcf	3,5	;RP0=0, select bank0
  9802  022A  1303               	bcf	3,6	;RP1=0, select bank0
  9803  022B  086A               	movf	??_sprintf,w
  9804  022C  1383               	bcf	3,7	;select IRP bank0
  9805  022D  0080               	movwf	0
  9806  022E                     l3235:
  9807  022E  3001               	movlw	1
  9808  022F  00EA               	movwf	??_sprintf
  9809  0230  086A               	movf	??_sprintf,w
  9810  0231  1683               	bsf	3,5	;RP0=1, select bank1
  9811  0232  1303               	bcf	3,6	;RP1=0, select bank1
  9812  0233  07CC               	addwf	sprintf@sp^(0+128),f
  9813  0234  2AA7               	goto	l324
  9814  0235                     l3237:
  9815                           
  9816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9817  0235  084F               	movf	sprintf@c^(0+128),w
  9818  0236  1283               	bcf	3,5	;RP0=0, select bank0
  9819  0237  1303               	bcf	3,6	;RP1=0, select bank0
  9820  0238  00EA               	movwf	??_sprintf
  9821  0239  3001               	movlw	1
  9822  023A                     u5315:
  9823  023A  1003               	clrc
  9824  023B  0DEA               	rlf	??_sprintf,f
  9825  023C  3EFF               	addlw	-1
  9826  023D  1D03               	skipz
  9827  023E  2A3A               	goto	u5315
  9828  023F  1003               	clrc
  9829  0240  0D6A               	rlf	??_sprintf,w
  9830  0241  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9831  0242  0084               	movwf	4
  9832  0243  160A  158A  2000  120A  118A  	fcall	stringdir
  9833  0248  00F3               	movwf	___lldiv@divisor
  9834  0249  160A  158A  2000  120A  118A  	fcall	stringdir
  9835  024E  00F4               	movwf	___lldiv@divisor+1
  9836  024F  160A  158A  2000  120A  118A  	fcall	stringdir
  9837  0254  00F5               	movwf	___lldiv@divisor+2
  9838  0255  160A  158A  2000  120A  118A  	fcall	stringdir
  9839  025A  00F6               	movwf	___lldiv@divisor+3
  9840  025B  1683               	bsf	3,5	;RP0=1, select bank1
  9841  025C  1303               	bcf	3,6	;RP1=0, select bank1
  9842  025D  083D               	movf	(sprintf@val+3)^(0+128),w
  9843  025E  00FA               	movwf	___lldiv@dividend+3
  9844  025F  083C               	movf	(sprintf@val+2)^(0+128),w
  9845  0260  00F9               	movwf	___lldiv@dividend+2
  9846  0261  083B               	movf	(sprintf@val+1)^(0+128),w
  9847  0262  00F8               	movwf	___lldiv@dividend+1
  9848  0263  083A               	movf	sprintf@val^(0+128),w
  9849  0264  00F7               	movwf	___lldiv@dividend
  9850  0265  160A  158A  260F  120A  118A  	fcall	___lldiv
  9851  026A  0876               	movf	?___lldiv+3,w
  9852  026B  1683               	bsf	3,5	;RP0=1, select bank1
  9853  026C  1303               	bcf	3,6	;RP1=0, select bank1
  9854  026D  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  9855  026E  0875               	movf	?___lldiv+2,w
  9856  026F  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  9857  0270  0874               	movf	?___lldiv+1,w
  9858  0271  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  9859  0272  0873               	movf	?___lldiv,w
  9860  0273  00C2               	movwf	sprintf@tmpval^(0+128)
  9861  0274                     l3239:
  9862                           
  9863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9864  0274  3000               	movlw	0
  9865  0275  00F6               	movwf	___llmod@divisor+3
  9866  0276  3000               	movlw	0
  9867  0277  00F5               	movwf	___llmod@divisor+2
  9868  0278  3000               	movlw	0
  9869  0279  00F4               	movwf	___llmod@divisor+1
  9870  027A  300A               	movlw	10
  9871  027B  00F3               	movwf	___llmod@divisor
  9872  027C  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  9873  027D  00FA               	movwf	___llmod@dividend+3
  9874  027E  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  9875  027F  00F9               	movwf	___llmod@dividend+2
  9876  0280  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  9877  0281  00F8               	movwf	___llmod@dividend+1
  9878  0282  0842               	movf	sprintf@tmpval^(0+128),w
  9879  0283  00F7               	movwf	___llmod@dividend
  9880  0284  160A  158A  25B9  120A  118A  	fcall	___llmod
  9881  0289  0876               	movf	?___llmod+3,w
  9882  028A  1683               	bsf	3,5	;RP0=1, select bank1
  9883  028B  1303               	bcf	3,6	;RP1=0, select bank1
  9884  028C  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  9885  028D  0875               	movf	?___llmod+2,w
  9886  028E  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  9887  028F  0874               	movf	?___llmod+1,w
  9888  0290  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  9889  0291  0873               	movf	?___llmod,w
  9890  0292  00C2               	movwf	sprintf@tmpval^(0+128)
  9891  0293                     l3241:
  9892                           
  9893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9894  0293  0842               	movf	sprintf@tmpval^(0+128),w
  9895  0294  3E30               	addlw	48
  9896  0295  1283               	bcf	3,5	;RP0=0, select bank0
  9897  0296  1303               	bcf	3,6	;RP1=0, select bank0
  9898  0297  00EA               	movwf	??_sprintf
  9899  0298  1683               	bsf	3,5	;RP0=1, select bank1
  9900  0299  1303               	bcf	3,6	;RP1=0, select bank1
  9901  029A  084C               	movf	sprintf@sp^(0+128),w
  9902  029B  0084               	movwf	4
  9903  029C  1283               	bcf	3,5	;RP0=0, select bank0
  9904  029D  1303               	bcf	3,6	;RP1=0, select bank0
  9905  029E  086A               	movf	??_sprintf,w
  9906  029F  1383               	bcf	3,7	;select IRP bank0
  9907  02A0  0080               	movwf	0
  9908  02A1  3001               	movlw	1
  9909  02A2  00EA               	movwf	??_sprintf
  9910  02A3  086A               	movf	??_sprintf,w
  9911  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  9912  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  9913  02A6  07CC               	addwf	sprintf@sp^(0+128),f
  9914  02A7                     l324:	
  9915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9916                           
  9917                           
  9918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9919  02A7  3001               	movlw	1
  9920  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  9921  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  9922  02AA  02CF               	subwf	sprintf@c^(0+128),f
  9923  02AB  0A4F               	incf	sprintf@c^(0+128),w
  9924  02AC  1D03               	btfss	3,2
  9925  02AD  2AAF               	goto	u5321
  9926  02AE  2AB0               	goto	u5320
  9927  02AF                     u5321:
  9928  02AF  2A35               	goto	l3237
  9929  02B0                     u5320:
  9930  02B0  2ACA               	goto	l3249
  9931  02B1                     l3243:
  9932                           
  9933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9934  02B1  3030               	movlw	48
  9935  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  9936  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  9937  02B4  00EA               	movwf	??_sprintf
  9938  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  9939  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  9940  02B7  084C               	movf	sprintf@sp^(0+128),w
  9941  02B8  0084               	movwf	4
  9942  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  9943  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  9944  02BB  086A               	movf	??_sprintf,w
  9945  02BC  1383               	bcf	3,7	;select IRP bank0
  9946  02BD  0080               	movwf	0
  9947  02BE                     l3245:
  9948  02BE  3001               	movlw	1
  9949  02BF  00EA               	movwf	??_sprintf
  9950  02C0  086A               	movf	??_sprintf,w
  9951  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  9952  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  9953  02C3  07CC               	addwf	sprintf@sp^(0+128),f
  9954  02C4                     l3247:
  9955                           
  9956                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9957  02C4  30FF               	movlw	255
  9958  02C5  07C6               	addwf	sprintf@eexp^(0+128),f
  9959  02C6  1803               	skipnc
  9960  02C7  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  9961  02C8  30FF               	movlw	255
  9962  02C9  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  9963  02CA                     l3249:
  9964                           
  9965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9966  02CA  0847               	movf	(sprintf@eexp+1)^(0+128),w
  9967  02CB  3A80               	xorlw	128
  9968  02CC  00FF               	movwf	btemp+1
  9969  02CD  3080               	movlw	128
  9970  02CE  027F               	subwf	btemp+1,w
  9971  02CF  1D03               	skipz
  9972  02D0  2AD3               	goto	u5335
  9973  02D1  3001               	movlw	1
  9974  02D2  0246               	subwf	sprintf@eexp^(0+128),w
  9975  02D3                     u5335:
  9976  02D3  1803               	skipnc
  9977  02D4  2AD6               	goto	u5331
  9978  02D5  2AD7               	goto	u5330
  9979  02D6                     u5331:
  9980  02D6  2AB1               	goto	l3243
  9981  02D7                     u5330:
  9982  02D7                     l3251:
  9983                           
  9984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9985  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  9986  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  9987  02D9  084E               	movf	(sprintf@prec+1)^(0+128),w
  9988  02DA  3A80               	xorlw	128
  9989  02DB  00FF               	movwf	btemp+1
  9990  02DC  3080               	movlw	128
  9991  02DD  027F               	subwf	btemp+1,w
  9992  02DE  1D03               	skipz
  9993  02DF  2AE2               	goto	u5345
  9994  02E0  3009               	movlw	9
  9995  02E1  024D               	subwf	sprintf@prec^(0+128),w
  9996  02E2                     u5345:
  9997  02E2  1C03               	skipc
  9998  02E3  2AE5               	goto	u5341
  9999  02E4  2AE6               	goto	u5340
 10000  02E5                     u5341:
 10001  02E5  2AEF               	goto	l3255
 10002  02E6                     u5340:
 10003  02E6                     l3253:
 10004                           
 10005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10006  02E6  3008               	movlw	8
 10007  02E7  1283               	bcf	3,5	;RP0=0, select bank0
 10008  02E8  1303               	bcf	3,6	;RP1=0, select bank0
 10009  02E9  00EA               	movwf	??_sprintf
 10010  02EA  086A               	movf	??_sprintf,w
 10011  02EB  1683               	bsf	3,5	;RP0=1, select bank1
 10012  02EC  1303               	bcf	3,6	;RP1=0, select bank1
 10013  02ED  00CF               	movwf	sprintf@c^(0+128)
 10014  02EE  2AF9               	goto	l331
 10015  02EF                     l3255:
 10016                           
 10017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10018  02EF  1683               	bsf	3,5	;RP0=1, select bank1
 10019  02F0  1303               	bcf	3,6	;RP1=0, select bank1
 10020  02F1  084D               	movf	sprintf@prec^(0+128),w
 10021  02F2  1283               	bcf	3,5	;RP0=0, select bank0
 10022  02F3  1303               	bcf	3,6	;RP1=0, select bank0
 10023  02F4  00EA               	movwf	??_sprintf
 10024  02F5  086A               	movf	??_sprintf,w
 10025  02F6  1683               	bsf	3,5	;RP0=1, select bank1
 10026  02F7  1303               	bcf	3,6	;RP1=0, select bank1
 10027  02F8  00CF               	movwf	sprintf@c^(0+128)
 10028  02F9                     l331:
 10029                           
 10030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10031  02F9  084F               	movf	sprintf@c^(0+128),w
 10032  02FA  1283               	bcf	3,5	;RP0=0, select bank0
 10033  02FB  1303               	bcf	3,6	;RP1=0, select bank0
 10034  02FC  00EA               	movwf	??_sprintf
 10035  02FD  01EB               	clrf	??_sprintf+1
 10036  02FE  086A               	movf	??_sprintf,w
 10037  02FF  1683               	bsf	3,5	;RP0=1, select bank1
 10038  0300  1303               	bcf	3,6	;RP1=0, select bank1
 10039  0301  02CD               	subwf	sprintf@prec^(0+128),f
 10040  0302  1283               	bcf	3,5	;RP0=0, select bank0
 10041  0303  1303               	bcf	3,6	;RP1=0, select bank0
 10042  0304  086B               	movf	??_sprintf+1,w
 10043  0305  1683               	bsf	3,5	;RP0=1, select bank1
 10044  0306  1303               	bcf	3,6	;RP1=0, select bank1
 10045  0307  1C03               	skipc
 10046  0308  03CE               	decf	(sprintf@prec+1)^(0+128),f
 10047  0309  02CE               	subwf	(sprintf@prec+1)^(0+128),f
 10048  030A                     l3257:
 10049                           
 10050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10051  030A  084F               	movf	sprintf@c^(0+128),w
 10052  030B  1903               	btfsc	3,2
 10053  030C  2B0E               	goto	u5351
 10054  030D  2B0F               	goto	u5350
 10055  030E                     u5351:
 10056  030E  2B22               	goto	l3263
 10057  030F                     u5350:
 10058  030F                     l3259:
 10059                           
 10060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10061  030F  302E               	movlw	46
 10062  0310  1283               	bcf	3,5	;RP0=0, select bank0
 10063  0311  1303               	bcf	3,6	;RP1=0, select bank0
 10064  0312  00EA               	movwf	??_sprintf
 10065  0313  1683               	bsf	3,5	;RP0=1, select bank1
 10066  0314  1303               	bcf	3,6	;RP1=0, select bank1
 10067  0315  084C               	movf	sprintf@sp^(0+128),w
 10068  0316  0084               	movwf	4
 10069  0317  1283               	bcf	3,5	;RP0=0, select bank0
 10070  0318  1303               	bcf	3,6	;RP1=0, select bank0
 10071  0319  086A               	movf	??_sprintf,w
 10072  031A  1383               	bcf	3,7	;select IRP bank0
 10073  031B  0080               	movwf	0
 10074  031C                     l3261:
 10075  031C  3001               	movlw	1
 10076  031D  00EA               	movwf	??_sprintf
 10077  031E  086A               	movf	??_sprintf,w
 10078  031F  1683               	bsf	3,5	;RP0=1, select bank1
 10079  0320  1303               	bcf	3,6	;RP1=0, select bank1
 10080  0321  07CC               	addwf	sprintf@sp^(0+128),f
 10081  0322                     l3263:
 10082                           
 10083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10084  0322  084F               	movf	sprintf@c^(0+128),w
 10085  0323  120A  158A  249D  120A  118A  	fcall	_scale
 10086  0328  1283               	bcf	3,5	;RP0=0, select bank0
 10087  0329  1303               	bcf	3,6	;RP1=0, select bank0
 10088  032A  0845               	movf	?_scale+3,w
 10089  032B  1683               	bsf	3,5	;RP0=1, select bank1
 10090  032C  1303               	bcf	3,6	;RP1=0, select bank1
 10091  032D  00B8               	movwf	(_sprintf$1265+3)^(0+128)
 10092  032E  1283               	bcf	3,5	;RP0=0, select bank0
 10093  032F  1303               	bcf	3,6	;RP1=0, select bank0
 10094  0330  0844               	movf	?_scale+2,w
 10095  0331  1683               	bsf	3,5	;RP0=1, select bank1
 10096  0332  1303               	bcf	3,6	;RP1=0, select bank1
 10097  0333  00B7               	movwf	(_sprintf$1265+2)^(0+128)
 10098  0334  1283               	bcf	3,5	;RP0=0, select bank0
 10099  0335  1303               	bcf	3,6	;RP1=0, select bank0
 10100  0336  0843               	movf	?_scale+1,w
 10101  0337  1683               	bsf	3,5	;RP0=1, select bank1
 10102  0338  1303               	bcf	3,6	;RP1=0, select bank1
 10103  0339  00B6               	movwf	(_sprintf$1265+1)^(0+128)
 10104  033A  1283               	bcf	3,5	;RP0=0, select bank0
 10105  033B  1303               	bcf	3,6	;RP1=0, select bank0
 10106  033C  0842               	movf	?_scale,w
 10107  033D  1683               	bsf	3,5	;RP0=1, select bank1
 10108  033E  1303               	bcf	3,6	;RP1=0, select bank1
 10109  033F  00B5               	movwf	_sprintf$1265^(0+128)
 10110  0340                     l3265:
 10111                           
 10112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10113  0340  0838               	movf	(_sprintf$1265+3)^(0+128),w
 10114  0341  1283               	bcf	3,5	;RP0=0, select bank0
 10115  0342  1303               	bcf	3,6	;RP1=0, select bank0
 10116  0343  00AF               	movwf	___flmul@a+3
 10117  0344  1683               	bsf	3,5	;RP0=1, select bank1
 10118  0345  1303               	bcf	3,6	;RP1=0, select bank1
 10119  0346  0837               	movf	(_sprintf$1265+2)^(0+128),w
 10120  0347  1283               	bcf	3,5	;RP0=0, select bank0
 10121  0348  1303               	bcf	3,6	;RP1=0, select bank0
 10122  0349  00AE               	movwf	___flmul@a+2
 10123  034A  1683               	bsf	3,5	;RP0=1, select bank1
 10124  034B  1303               	bcf	3,6	;RP1=0, select bank1
 10125  034C  0836               	movf	(_sprintf$1265+1)^(0+128),w
 10126  034D  1283               	bcf	3,5	;RP0=0, select bank0
 10127  034E  1303               	bcf	3,6	;RP1=0, select bank0
 10128  034F  00AD               	movwf	___flmul@a+1
 10129  0350  1683               	bsf	3,5	;RP0=1, select bank1
 10130  0351  1303               	bcf	3,6	;RP1=0, select bank1
 10131  0352  0835               	movf	_sprintf$1265^(0+128),w
 10132  0353  1283               	bcf	3,5	;RP0=0, select bank0
 10133  0354  1303               	bcf	3,6	;RP1=0, select bank0
 10134  0355  00AC               	movwf	___flmul@a
 10135  0356  1683               	bsf	3,5	;RP0=1, select bank1
 10136  0357  1303               	bcf	3,6	;RP1=0, select bank1
 10137  0358  084B               	movf	(sprintf@fval+3)^(0+128),w
 10138  0359  1283               	bcf	3,5	;RP0=0, select bank0
 10139  035A  1303               	bcf	3,6	;RP1=0, select bank0
 10140  035B  00AB               	movwf	___flmul@b+3
 10141  035C  1683               	bsf	3,5	;RP0=1, select bank1
 10142  035D  1303               	bcf	3,6	;RP1=0, select bank1
 10143  035E  084A               	movf	(sprintf@fval+2)^(0+128),w
 10144  035F  1283               	bcf	3,5	;RP0=0, select bank0
 10145  0360  1303               	bcf	3,6	;RP1=0, select bank0
 10146  0361  00AA               	movwf	___flmul@b+2
 10147  0362  1683               	bsf	3,5	;RP0=1, select bank1
 10148  0363  1303               	bcf	3,6	;RP1=0, select bank1
 10149  0364  0849               	movf	(sprintf@fval+1)^(0+128),w
 10150  0365  1283               	bcf	3,5	;RP0=0, select bank0
 10151  0366  1303               	bcf	3,6	;RP1=0, select bank0
 10152  0367  00A9               	movwf	___flmul@b+1
 10153  0368  1683               	bsf	3,5	;RP0=1, select bank1
 10154  0369  1303               	bcf	3,6	;RP1=0, select bank1
 10155  036A  0848               	movf	sprintf@fval^(0+128),w
 10156  036B  1283               	bcf	3,5	;RP0=0, select bank0
 10157  036C  1303               	bcf	3,6	;RP1=0, select bank0
 10158  036D  00A8               	movwf	___flmul@b
 10159  036E  120A  158A  213C  120A  118A  	fcall	___flmul
 10160  0373  1283               	bcf	3,5	;RP0=0, select bank0
 10161  0374  1303               	bcf	3,6	;RP1=0, select bank0
 10162  0375  082B               	movf	?___flmul+3,w
 10163  0376  00D8               	movwf	___fltol@f1+3
 10164  0377  082A               	movf	?___flmul+2,w
 10165  0378  00D7               	movwf	___fltol@f1+2
 10166  0379  0829               	movf	?___flmul+1,w
 10167  037A  00D6               	movwf	___fltol@f1+1
 10168  037B  0828               	movf	?___flmul,w
 10169  037C  00D5               	movwf	___fltol@f1
 10170  037D  160A  158A  26E0  120A  118A  	fcall	___fltol
 10171  0382  1283               	bcf	3,5	;RP0=0, select bank0
 10172  0383  1303               	bcf	3,6	;RP1=0, select bank0
 10173  0384  0858               	movf	?___fltol+3,w
 10174  0385  1683               	bsf	3,5	;RP0=1, select bank1
 10175  0386  1303               	bcf	3,6	;RP1=0, select bank1
 10176  0387  00BD               	movwf	(sprintf@val+3)^(0+128)
 10177  0388  1283               	bcf	3,5	;RP0=0, select bank0
 10178  0389  1303               	bcf	3,6	;RP1=0, select bank0
 10179  038A  0857               	movf	?___fltol+2,w
 10180  038B  1683               	bsf	3,5	;RP0=1, select bank1
 10181  038C  1303               	bcf	3,6	;RP1=0, select bank1
 10182  038D  00BC               	movwf	(sprintf@val+2)^(0+128)
 10183  038E  1283               	bcf	3,5	;RP0=0, select bank0
 10184  038F  1303               	bcf	3,6	;RP1=0, select bank0
 10185  0390  0856               	movf	?___fltol+1,w
 10186  0391  1683               	bsf	3,5	;RP0=1, select bank1
 10187  0392  1303               	bcf	3,6	;RP1=0, select bank1
 10188  0393  00BB               	movwf	(sprintf@val+1)^(0+128)
 10189  0394  1283               	bcf	3,5	;RP0=0, select bank0
 10190  0395  1303               	bcf	3,6	;RP1=0, select bank0
 10191  0396  0855               	movf	?___fltol,w
 10192  0397  1683               	bsf	3,5	;RP0=1, select bank1
 10193  0398  1303               	bcf	3,6	;RP1=0, select bank1
 10194  0399  00BA               	movwf	sprintf@val^(0+128)
 10195                           
 10196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10197  039A  2C4C               	goto	l3275
 10198  039B                     l3267:
 10199                           
 10200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10201  039B  084F               	movf	sprintf@c^(0+128),w
 10202  039C  1283               	bcf	3,5	;RP0=0, select bank0
 10203  039D  1303               	bcf	3,6	;RP1=0, select bank0
 10204  039E  00EA               	movwf	??_sprintf
 10205  039F  3001               	movlw	1
 10206  03A0                     u5365:
 10207  03A0  1003               	clrc
 10208  03A1  0DEA               	rlf	??_sprintf,f
 10209  03A2  3EFF               	addlw	-1
 10210  03A3  1D03               	skipz
 10211  03A4  2BA0               	goto	u5365
 10212  03A5  1003               	clrc
 10213  03A6  0D6A               	rlf	??_sprintf,w
 10214  03A7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10215  03A8  0084               	movwf	4
 10216  03A9  160A  158A  2000  120A  118A  	fcall	stringdir
 10217  03AE  00F3               	movwf	___lldiv@divisor
 10218  03AF  160A  158A  2000  120A  118A  	fcall	stringdir
 10219  03B4  00F4               	movwf	___lldiv@divisor+1
 10220  03B5  160A  158A  2000  120A  118A  	fcall	stringdir
 10221  03BA  00F5               	movwf	___lldiv@divisor+2
 10222  03BB  160A  158A  2000  120A  118A  	fcall	stringdir
 10223  03C0  00F6               	movwf	___lldiv@divisor+3
 10224  03C1  1683               	bsf	3,5	;RP0=1, select bank1
 10225  03C2  1303               	bcf	3,6	;RP1=0, select bank1
 10226  03C3  083D               	movf	(sprintf@val+3)^(0+128),w
 10227  03C4  00FA               	movwf	___lldiv@dividend+3
 10228  03C5  083C               	movf	(sprintf@val+2)^(0+128),w
 10229  03C6  00F9               	movwf	___lldiv@dividend+2
 10230  03C7  083B               	movf	(sprintf@val+1)^(0+128),w
 10231  03C8  00F8               	movwf	___lldiv@dividend+1
 10232  03C9  083A               	movf	sprintf@val^(0+128),w
 10233  03CA  00F7               	movwf	___lldiv@dividend
 10234  03CB  160A  158A  260F  120A  118A  	fcall	___lldiv
 10235  03D0  0876               	movf	?___lldiv+3,w
 10236  03D1  1683               	bsf	3,5	;RP0=1, select bank1
 10237  03D2  1303               	bcf	3,6	;RP1=0, select bank1
 10238  03D3  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 10239  03D4  0875               	movf	?___lldiv+2,w
 10240  03D5  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 10241  03D6  0874               	movf	?___lldiv+1,w
 10242  03D7  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 10243  03D8  0873               	movf	?___lldiv,w
 10244  03D9  00C2               	movwf	sprintf@tmpval^(0+128)
 10245  03DA                     l3269:
 10246                           
 10247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10248  03DA  3000               	movlw	0
 10249  03DB  00F6               	movwf	___llmod@divisor+3
 10250  03DC  3000               	movlw	0
 10251  03DD  00F5               	movwf	___llmod@divisor+2
 10252  03DE  3000               	movlw	0
 10253  03DF  00F4               	movwf	___llmod@divisor+1
 10254  03E0  300A               	movlw	10
 10255  03E1  00F3               	movwf	___llmod@divisor
 10256  03E2  0845               	movf	(sprintf@tmpval+3)^(0+128),w
 10257  03E3  00FA               	movwf	___llmod@dividend+3
 10258  03E4  0844               	movf	(sprintf@tmpval+2)^(0+128),w
 10259  03E5  00F9               	movwf	___llmod@dividend+2
 10260  03E6  0843               	movf	(sprintf@tmpval+1)^(0+128),w
 10261  03E7  00F8               	movwf	___llmod@dividend+1
 10262  03E8  0842               	movf	sprintf@tmpval^(0+128),w
 10263  03E9  00F7               	movwf	___llmod@dividend
 10264  03EA  160A  158A  25B9  120A  118A  	fcall	___llmod
 10265  03EF  0876               	movf	?___llmod+3,w
 10266  03F0  1683               	bsf	3,5	;RP0=1, select bank1
 10267  03F1  1303               	bcf	3,6	;RP1=0, select bank1
 10268  03F2  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 10269  03F3  0875               	movf	?___llmod+2,w
 10270  03F4  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 10271  03F5  0874               	movf	?___llmod+1,w
 10272  03F6  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 10273  03F7  0873               	movf	?___llmod,w
 10274  03F8  00C2               	movwf	sprintf@tmpval^(0+128)
 10275  03F9                     l3271:
 10276                           
 10277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10278  03F9  0842               	movf	sprintf@tmpval^(0+128),w
 10279  03FA  3E30               	addlw	48
 10280  03FB  1283               	bcf	3,5	;RP0=0, select bank0
 10281  03FC  1303               	bcf	3,6	;RP1=0, select bank0
 10282  03FD  00EA               	movwf	??_sprintf
 10283  03FE  1683               	bsf	3,5	;RP0=1, select bank1
 10284  03FF  1303               	bcf	3,6	;RP1=0, select bank1
 10285  0400  084C               	movf	sprintf@sp^(0+128),w
 10286  0401  0084               	movwf	4
 10287  0402  1283               	bcf	3,5	;RP0=0, select bank0
 10288  0403  1303               	bcf	3,6	;RP1=0, select bank0
 10289  0404  086A               	movf	??_sprintf,w
 10290  0405  1383               	bcf	3,7	;select IRP bank0
 10291  0406  0080               	movwf	0
 10292  0407  3001               	movlw	1
 10293  0408  00EA               	movwf	??_sprintf
 10294  0409  086A               	movf	??_sprintf,w
 10295  040A  1683               	bsf	3,5	;RP0=1, select bank1
 10296  040B  1303               	bcf	3,6	;RP1=0, select bank1
 10297  040C  07CC               	addwf	sprintf@sp^(0+128),f
 10298  040D                     l3273:
 10299                           
 10300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10301  040D  084F               	movf	sprintf@c^(0+128),w
 10302  040E  1283               	bcf	3,5	;RP0=0, select bank0
 10303  040F  1303               	bcf	3,6	;RP1=0, select bank0
 10304  0410  00EA               	movwf	??_sprintf
 10305  0411  3001               	movlw	1
 10306  0412                     u5375:
 10307  0412  1003               	clrc
 10308  0413  0DEA               	rlf	??_sprintf,f
 10309  0414  3EFF               	addlw	-1
 10310  0415  1D03               	skipz
 10311  0416  2C12               	goto	u5375
 10312  0417  1003               	clrc
 10313  0418  0D6A               	rlf	??_sprintf,w
 10314  0419  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10315  041A  0084               	movwf	4
 10316  041B  160A  158A  2000  120A  118A  	fcall	stringdir
 10317  0420  00F3               	movwf	___llmod@divisor
 10318  0421  160A  158A  2000  120A  118A  	fcall	stringdir
 10319  0426  00F4               	movwf	___llmod@divisor+1
 10320  0427  160A  158A  2000  120A  118A  	fcall	stringdir
 10321  042C  00F5               	movwf	___llmod@divisor+2
 10322  042D  160A  158A  2000  120A  118A  	fcall	stringdir
 10323  0432  00F6               	movwf	___llmod@divisor+3
 10324  0433  1683               	bsf	3,5	;RP0=1, select bank1
 10325  0434  1303               	bcf	3,6	;RP1=0, select bank1
 10326  0435  083D               	movf	(sprintf@val+3)^(0+128),w
 10327  0436  00FA               	movwf	___llmod@dividend+3
 10328  0437  083C               	movf	(sprintf@val+2)^(0+128),w
 10329  0438  00F9               	movwf	___llmod@dividend+2
 10330  0439  083B               	movf	(sprintf@val+1)^(0+128),w
 10331  043A  00F8               	movwf	___llmod@dividend+1
 10332  043B  083A               	movf	sprintf@val^(0+128),w
 10333  043C  00F7               	movwf	___llmod@dividend
 10334  043D  160A  158A  25B9  120A  118A  	fcall	___llmod
 10335  0442  0876               	movf	?___llmod+3,w
 10336  0443  1683               	bsf	3,5	;RP0=1, select bank1
 10337  0444  1303               	bcf	3,6	;RP1=0, select bank1
 10338  0445  00BD               	movwf	(sprintf@val+3)^(0+128)
 10339  0446  0875               	movf	?___llmod+2,w
 10340  0447  00BC               	movwf	(sprintf@val+2)^(0+128)
 10341  0448  0874               	movf	?___llmod+1,w
 10342  0449  00BB               	movwf	(sprintf@val+1)^(0+128)
 10343  044A  0873               	movf	?___llmod,w
 10344  044B  00BA               	movwf	sprintf@val^(0+128)
 10345  044C                     l3275:
 10346                           
 10347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10348  044C  3001               	movlw	1
 10349  044D  02CF               	subwf	sprintf@c^(0+128),f
 10350  044E  0A4F               	incf	sprintf@c^(0+128),w
 10351  044F  1D03               	btfss	3,2
 10352  0450  2C52               	goto	u5381
 10353  0451  2C53               	goto	u5380
 10354  0452                     u5381:
 10355  0452  2B9B               	goto	l3267
 10356  0453                     u5380:
 10357  0453  2C6D               	goto	l3283
 10358  0454                     l3277:
 10359                           
 10360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10361  0454  3030               	movlw	48
 10362  0455  1283               	bcf	3,5	;RP0=0, select bank0
 10363  0456  1303               	bcf	3,6	;RP1=0, select bank0
 10364  0457  00EA               	movwf	??_sprintf
 10365  0458  1683               	bsf	3,5	;RP0=1, select bank1
 10366  0459  1303               	bcf	3,6	;RP1=0, select bank1
 10367  045A  084C               	movf	sprintf@sp^(0+128),w
 10368  045B  0084               	movwf	4
 10369  045C  1283               	bcf	3,5	;RP0=0, select bank0
 10370  045D  1303               	bcf	3,6	;RP1=0, select bank0
 10371  045E  086A               	movf	??_sprintf,w
 10372  045F  1383               	bcf	3,7	;select IRP bank0
 10373  0460  0080               	movwf	0
 10374  0461                     l3279:
 10375  0461  3001               	movlw	1
 10376  0462  00EA               	movwf	??_sprintf
 10377  0463  086A               	movf	??_sprintf,w
 10378  0464  1683               	bsf	3,5	;RP0=1, select bank1
 10379  0465  1303               	bcf	3,6	;RP1=0, select bank1
 10380  0466  07CC               	addwf	sprintf@sp^(0+128),f
 10381  0467                     l3281:
 10382                           
 10383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10384  0467  30FF               	movlw	255
 10385  0468  07CD               	addwf	sprintf@prec^(0+128),f
 10386  0469  1803               	skipnc
 10387  046A  0ACE               	incf	(sprintf@prec+1)^(0+128),f
 10388  046B  30FF               	movlw	255
 10389  046C  07CE               	addwf	(sprintf@prec+1)^(0+128),f
 10390  046D                     l3283:
 10391                           
 10392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10393  046D  084D               	movf	sprintf@prec^(0+128),w
 10394  046E  044E               	iorwf	(sprintf@prec+1)^(0+128),w
 10395  046F  1D03               	btfss	3,2
 10396  0470  2C72               	goto	u5391
 10397  0471  2C73               	goto	u5390
 10398  0472                     u5391:
 10399  0472  2C54               	goto	l3277
 10400  0473                     u5390:
 10401  0473  2D77               	goto	l3331
 10402  0474                     l3285:
 10403                           
 10404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10405  0474  1683               	bsf	3,5	;RP0=1, select bank1
 10406  0475  1303               	bcf	3,6	;RP1=0, select bank1
 10407  0476  084D               	movf	sprintf@prec^(0+128),w
 10408  0477  044E               	iorwf	(sprintf@prec+1)^(0+128),w
 10409  0478  1D03               	btfss	3,2
 10410  0479  2C7B               	goto	u5401
 10411  047A  2C7C               	goto	u5400
 10412  047B                     u5401:
 10413  047B  2C8A               	goto	l339
 10414  047C                     u5400:
 10415  047C                     l3287:
 10416  047C  083D               	movf	(sprintf@val+3)^(0+128),w
 10417  047D  043C               	iorwf	(sprintf@val+2)^(0+128),w
 10418  047E  043B               	iorwf	(sprintf@val+1)^(0+128),w
 10419  047F  043A               	iorwf	sprintf@val^(0+128),w
 10420  0480  1D03               	skipz
 10421  0481  2C83               	goto	u5411
 10422  0482  2C84               	goto	u5410
 10423  0483                     u5411:
 10424  0483  2C8A               	goto	l339
 10425  0484                     u5410:
 10426  0484                     l3289:
 10427                           
 10428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10429  0484  3001               	movlw	1
 10430  0485  07CD               	addwf	sprintf@prec^(0+128),f
 10431  0486  1803               	skipnc
 10432  0487  0ACE               	incf	(sprintf@prec+1)^(0+128),f
 10433  0488  3000               	movlw	0
 10434  0489  07CE               	addwf	(sprintf@prec+1)^(0+128),f
 10435  048A                     l339:
 10436                           
 10437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10438  048A  084E               	movf	(sprintf@prec+1)^(0+128),w
 10439  048B  3A80               	xorlw	128
 10440  048C  3C80               	sublw	128
 10441  048D  1D03               	skipz
 10442  048E  2C91               	goto	u5425
 10443  048F  084D               	movf	sprintf@prec^(0+128),w
 10444  0490  024F               	subwf	sprintf@c^(0+128),w
 10445  0491                     u5425:
 10446  0491  1803               	skipnc
 10447  0492  2C94               	goto	u5421
 10448  0493  2C95               	goto	u5420
 10449  0494                     u5421:
 10450  0494  2CA0               	goto	l3293
 10451  0495                     u5420:
 10452  0495                     l3291:
 10453                           
 10454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10455  0495  1683               	bsf	3,5	;RP0=1, select bank1
 10456  0496  1303               	bcf	3,6	;RP1=0, select bank1
 10457  0497  084D               	movf	sprintf@prec^(0+128),w
 10458  0498  1283               	bcf	3,5	;RP0=0, select bank0
 10459  0499  1303               	bcf	3,6	;RP1=0, select bank0
 10460  049A  00EA               	movwf	??_sprintf
 10461  049B  086A               	movf	??_sprintf,w
 10462  049C  1683               	bsf	3,5	;RP0=1, select bank1
 10463  049D  1303               	bcf	3,6	;RP1=0, select bank1
 10464  049E  00CF               	movwf	sprintf@c^(0+128)
 10465  049F  2CC4               	goto	l3297
 10466  04A0                     l3293:
 10467  04A0  1683               	bsf	3,5	;RP0=1, select bank1
 10468  04A1  1303               	bcf	3,6	;RP1=0, select bank1
 10469  04A2  084E               	movf	(sprintf@prec+1)^(0+128),w
 10470  04A3  3A80               	xorlw	128
 10471  04A4  1283               	bcf	3,5	;RP0=0, select bank0
 10472  04A5  1303               	bcf	3,6	;RP1=0, select bank0
 10473  04A6  00EA               	movwf	??_sprintf
 10474  04A7  3080               	movlw	128
 10475  04A8  026A               	subwf	??_sprintf,w
 10476  04A9  1D03               	skipz
 10477  04AA  2CAF               	goto	u5435
 10478  04AB  1683               	bsf	3,5	;RP0=1, select bank1
 10479  04AC  1303               	bcf	3,6	;RP1=0, select bank1
 10480  04AD  084F               	movf	sprintf@c^(0+128),w
 10481  04AE  024D               	subwf	sprintf@prec^(0+128),w
 10482  04AF                     u5435:
 10483  04AF  1803               	skipnc
 10484  04B0  2CB2               	goto	u5431
 10485  04B1  2CB3               	goto	u5430
 10486  04B2                     u5431:
 10487  04B2  2CC4               	goto	l3297
 10488  04B3                     u5430:
 10489  04B3                     l3295:
 10490                           
 10491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10492  04B3  1683               	bsf	3,5	;RP0=1, select bank1
 10493  04B4  1303               	bcf	3,6	;RP1=0, select bank1
 10494  04B5  084F               	movf	sprintf@c^(0+128),w
 10495  04B6  1283               	bcf	3,5	;RP0=0, select bank0
 10496  04B7  1303               	bcf	3,6	;RP1=0, select bank0
 10497  04B8  00EA               	movwf	??_sprintf
 10498  04B9  01EB               	clrf	??_sprintf+1
 10499  04BA  086A               	movf	??_sprintf,w
 10500  04BB  1683               	bsf	3,5	;RP0=1, select bank1
 10501  04BC  1303               	bcf	3,6	;RP1=0, select bank1
 10502  04BD  00CD               	movwf	sprintf@prec^(0+128)
 10503  04BE  1283               	bcf	3,5	;RP0=0, select bank0
 10504  04BF  1303               	bcf	3,6	;RP1=0, select bank0
 10505  04C0  086B               	movf	??_sprintf+1,w
 10506  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 10507  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 10508  04C3  00CE               	movwf	(sprintf@prec+1)^(0+128)
 10509  04C4                     l3297:
 10510                           
 10511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10512  04C4  1683               	bsf	3,5	;RP0=1, select bank1
 10513  04C5  1303               	bcf	3,6	;RP1=0, select bank1
 10514  04C6  0840               	movf	sprintf@width^(0+128),w
 10515  04C7  0441               	iorwf	(sprintf@width+1)^(0+128),w
 10516  04C8  1903               	btfsc	3,2
 10517  04C9  2CCB               	goto	u5441
 10518  04CA  2CCC               	goto	u5440
 10519  04CB                     u5441:
 10520  04CB  2CE6               	goto	l3303
 10521  04CC                     u5440:
 10522  04CC                     l3299:
 10523  04CC  3003               	movlw	3
 10524  04CD  053E               	andwf	sprintf@flag^(0+128),w
 10525  04CE  1283               	bcf	3,5	;RP0=0, select bank0
 10526  04CF  1303               	bcf	3,6	;RP1=0, select bank0
 10527  04D0  00EA               	movwf	??_sprintf
 10528  04D1  3000               	movlw	0
 10529  04D2  1683               	bsf	3,5	;RP0=1, select bank1
 10530  04D3  1303               	bcf	3,6	;RP1=0, select bank1
 10531  04D4  053F               	andwf	(sprintf@flag+1)^(0+128),w
 10532  04D5  1283               	bcf	3,5	;RP0=0, select bank0
 10533  04D6  1303               	bcf	3,6	;RP1=0, select bank0
 10534  04D7  00EB               	movwf	??_sprintf+1
 10535  04D8  086A               	movf	??_sprintf,w
 10536  04D9  046B               	iorwf	??_sprintf+1,w
 10537  04DA  1903               	btfsc	3,2
 10538  04DB  2CDD               	goto	u5451
 10539  04DC  2CDE               	goto	u5450
 10540  04DD                     u5451:
 10541  04DD  2CE6               	goto	l3303
 10542  04DE                     u5450:
 10543  04DE                     l3301:
 10544                           
 10545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10546  04DE  30FF               	movlw	255
 10547  04DF  1683               	bsf	3,5	;RP0=1, select bank1
 10548  04E0  1303               	bcf	3,6	;RP1=0, select bank1
 10549  04E1  07C0               	addwf	sprintf@width^(0+128),f
 10550  04E2  1803               	skipnc
 10551  04E3  0AC1               	incf	(sprintf@width+1)^(0+128),f
 10552  04E4  30FF               	movlw	255
 10553  04E5  07C1               	addwf	(sprintf@width+1)^(0+128),f
 10554  04E6                     l3303:
 10555                           
 10556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10557  04E6  1683               	bsf	3,5	;RP0=1, select bank1
 10558  04E7  1303               	bcf	3,6	;RP1=0, select bank1
 10559  04E8  1F3F               	btfss	(sprintf@flag+1)^(0+128),6
 10560  04E9  2CEB               	goto	u5461
 10561  04EA  2CEC               	goto	u5460
 10562  04EB                     u5461:
 10563  04EB  2D0F               	goto	l3311
 10564  04EC                     u5460:
 10565  04EC                     l3305:
 10566                           
 10567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10568  04EC  084E               	movf	(sprintf@prec+1)^(0+128),w
 10569  04ED  3A80               	xorlw	128
 10570  04EE  1283               	bcf	3,5	;RP0=0, select bank0
 10571  04EF  1303               	bcf	3,6	;RP1=0, select bank0
 10572  04F0  00EA               	movwf	??_sprintf
 10573  04F1  1683               	bsf	3,5	;RP0=1, select bank1
 10574  04F2  1303               	bcf	3,6	;RP1=0, select bank1
 10575  04F3  0841               	movf	(sprintf@width+1)^(0+128),w
 10576  04F4  3A80               	xorlw	128
 10577  04F5  1283               	bcf	3,5	;RP0=0, select bank0
 10578  04F6  1303               	bcf	3,6	;RP1=0, select bank0
 10579  04F7  026A               	subwf	??_sprintf,w
 10580  04F8  1D03               	skipz
 10581  04F9  2CFE               	goto	u5475
 10582  04FA  1683               	bsf	3,5	;RP0=1, select bank1
 10583  04FB  1303               	bcf	3,6	;RP1=0, select bank1
 10584  04FC  0840               	movf	sprintf@width^(0+128),w
 10585  04FD  024D               	subwf	sprintf@prec^(0+128),w
 10586  04FE                     u5475:
 10587  04FE  1803               	skipnc
 10588  04FF  2D01               	goto	u5471
 10589  0500  2D02               	goto	u5470
 10590  0501                     u5471:
 10591  0501  2D0B               	goto	l3309
 10592  0502                     u5470:
 10593  0502                     l3307:
 10594                           
 10595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10596  0502  1683               	bsf	3,5	;RP0=1, select bank1
 10597  0503  1303               	bcf	3,6	;RP1=0, select bank1
 10598  0504  084D               	movf	sprintf@prec^(0+128),w
 10599  0505  02C0               	subwf	sprintf@width^(0+128),f
 10600  0506  084E               	movf	(sprintf@prec+1)^(0+128),w
 10601  0507  1C03               	skipc
 10602  0508  03C1               	decf	(sprintf@width+1)^(0+128),f
 10603  0509  02C1               	subwf	(sprintf@width+1)^(0+128),f
 10604  050A  2D0F               	goto	l3311
 10605  050B                     l3309:
 10606                           
 10607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10608  050B  1683               	bsf	3,5	;RP0=1, select bank1
 10609  050C  1303               	bcf	3,6	;RP1=0, select bank1
 10610  050D  01C0               	clrf	sprintf@width^(0+128)
 10611  050E  01C1               	clrf	(sprintf@width+1)^(0+128)
 10612  050F                     l3311:
 10613                           
 10614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10615  050F  0841               	movf	(sprintf@width+1)^(0+128),w
 10616  0510  3A80               	xorlw	128
 10617  0511  3C80               	sublw	128
 10618  0512  1D03               	skipz
 10619  0513  2D16               	goto	u5485
 10620  0514  0840               	movf	sprintf@width^(0+128),w
 10621  0515  024F               	subwf	sprintf@c^(0+128),w
 10622  0516                     u5485:
 10623  0516  1803               	skipnc
 10624  0517  2D19               	goto	u5481
 10625  0518  2D1A               	goto	u5480
 10626  0519                     u5481:
 10627  0519  2D2E               	goto	l3315
 10628  051A                     u5480:
 10629  051A                     l3313:
 10630                           
 10631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10632  051A  1683               	bsf	3,5	;RP0=1, select bank1
 10633  051B  1303               	bcf	3,6	;RP1=0, select bank1
 10634  051C  084F               	movf	sprintf@c^(0+128),w
 10635  051D  1283               	bcf	3,5	;RP0=0, select bank0
 10636  051E  1303               	bcf	3,6	;RP1=0, select bank0
 10637  051F  00EA               	movwf	??_sprintf
 10638  0520  01EB               	clrf	??_sprintf+1
 10639  0521  086A               	movf	??_sprintf,w
 10640  0522  1683               	bsf	3,5	;RP0=1, select bank1
 10641  0523  1303               	bcf	3,6	;RP1=0, select bank1
 10642  0524  02C0               	subwf	sprintf@width^(0+128),f
 10643  0525  1283               	bcf	3,5	;RP0=0, select bank0
 10644  0526  1303               	bcf	3,6	;RP1=0, select bank0
 10645  0527  086B               	movf	??_sprintf+1,w
 10646  0528  1683               	bsf	3,5	;RP0=1, select bank1
 10647  0529  1303               	bcf	3,6	;RP1=0, select bank1
 10648  052A  1C03               	skipc
 10649  052B  03C1               	decf	(sprintf@width+1)^(0+128),f
 10650  052C  02C1               	subwf	(sprintf@width+1)^(0+128),f
 10651  052D  2D32               	goto	l3317
 10652  052E                     l3315:
 10653                           
 10654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10655  052E  1683               	bsf	3,5	;RP0=1, select bank1
 10656  052F  1303               	bcf	3,6	;RP1=0, select bank1
 10657  0530  01C0               	clrf	sprintf@width^(0+128)
 10658  0531  01C1               	clrf	(sprintf@width+1)^(0+128)
 10659  0532                     l3317:
 10660                           
 10661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10662  0532  0840               	movf	sprintf@width^(0+128),w
 10663  0533  0441               	iorwf	(sprintf@width+1)^(0+128),w
 10664  0534  1903               	btfsc	3,2
 10665  0535  2D37               	goto	u5491
 10666  0536  2D38               	goto	u5490
 10667  0537                     u5491:
 10668  0537  2D57               	goto	l3325
 10669  0538                     u5490:
 10670  0538                     l3319:
 10671                           
 10672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10673  0538  3020               	movlw	32
 10674  0539  1283               	bcf	3,5	;RP0=0, select bank0
 10675  053A  1303               	bcf	3,6	;RP1=0, select bank0
 10676  053B  00EA               	movwf	??_sprintf
 10677  053C  1683               	bsf	3,5	;RP0=1, select bank1
 10678  053D  1303               	bcf	3,6	;RP1=0, select bank1
 10679  053E  084C               	movf	sprintf@sp^(0+128),w
 10680  053F  0084               	movwf	4
 10681  0540  1283               	bcf	3,5	;RP0=0, select bank0
 10682  0541  1303               	bcf	3,6	;RP1=0, select bank0
 10683  0542  086A               	movf	??_sprintf,w
 10684  0543  1383               	bcf	3,7	;select IRP bank0
 10685  0544  0080               	movwf	0
 10686  0545                     l3321:
 10687  0545  3001               	movlw	1
 10688  0546  00EA               	movwf	??_sprintf
 10689  0547  086A               	movf	??_sprintf,w
 10690  0548  1683               	bsf	3,5	;RP0=1, select bank1
 10691  0549  1303               	bcf	3,6	;RP1=0, select bank1
 10692  054A  07CC               	addwf	sprintf@sp^(0+128),f
 10693  054B                     l3323:
 10694  054B  30FF               	movlw	255
 10695  054C  07C0               	addwf	sprintf@width^(0+128),f
 10696  054D  1803               	skipnc
 10697  054E  0AC1               	incf	(sprintf@width+1)^(0+128),f
 10698  054F  30FF               	movlw	255
 10699  0550  07C1               	addwf	(sprintf@width+1)^(0+128),f
 10700  0551  0840               	movf	sprintf@width^(0+128),w
 10701  0552  0441               	iorwf	(sprintf@width+1)^(0+128),w
 10702  0553  1D03               	btfss	3,2
 10703  0554  2D56               	goto	u5501
 10704  0555  2D57               	goto	u5500
 10705  0556                     u5501:
 10706  0556  2D38               	goto	l3319
 10707  0557                     u5500:
 10708  0557                     l3325:
 10709                           
 10710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10711  0557  3003               	movlw	3
 10712  0558  053E               	andwf	sprintf@flag^(0+128),w
 10713  0559  1283               	bcf	3,5	;RP0=0, select bank0
 10714  055A  1303               	bcf	3,6	;RP1=0, select bank0
 10715  055B  00EA               	movwf	??_sprintf
 10716  055C  3000               	movlw	0
 10717  055D  1683               	bsf	3,5	;RP0=1, select bank1
 10718  055E  1303               	bcf	3,6	;RP1=0, select bank1
 10719  055F  053F               	andwf	(sprintf@flag+1)^(0+128),w
 10720  0560  1283               	bcf	3,5	;RP0=0, select bank0
 10721  0561  1303               	bcf	3,6	;RP1=0, select bank0
 10722  0562  00EB               	movwf	??_sprintf+1
 10723  0563  086A               	movf	??_sprintf,w
 10724  0564  046B               	iorwf	??_sprintf+1,w
 10725  0565  1903               	btfsc	3,2
 10726  0566  2D68               	goto	u5511
 10727  0567  2D69               	goto	u5510
 10728  0568                     u5511:
 10729  0568  2D77               	goto	l3331
 10730  0569                     u5510:
 10731  0569                     l3327:
 10732                           
 10733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10734  0569  302D               	movlw	45
 10735  056A  00EA               	movwf	??_sprintf
 10736  056B  1683               	bsf	3,5	;RP0=1, select bank1
 10737  056C  1303               	bcf	3,6	;RP1=0, select bank1
 10738  056D  084C               	movf	sprintf@sp^(0+128),w
 10739  056E  0084               	movwf	4
 10740  056F  1283               	bcf	3,5	;RP0=0, select bank0
 10741  0570  1303               	bcf	3,6	;RP1=0, select bank0
 10742  0571  086A               	movf	??_sprintf,w
 10743  0572  1383               	bcf	3,7	;select IRP bank0
 10744  0573  0080               	movwf	0
 10745  0574  160A  118A  2D1D   	goto	l3087
 10746  0577                     l3331:
 10747                           
 10748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10749  0577  3001               	movlw	1
 10750  0578  1683               	bsf	3,5	;RP0=1, select bank1
 10751  0579  1303               	bcf	3,6	;RP1=0, select bank1
 10752  057A  07A8               	addwf	sprintf@f^(0+128),f
 10753  057B  30FF               	movlw	-1
 10754  057C  0728               	addwf	sprintf@f^(0+128),w
 10755  057D  0084               	movwf	4
 10756  057E  160A  158A  2000  120A  118A  	fcall	stringdir
 10757  0583  1283               	bcf	3,5	;RP0=0, select bank0
 10758  0584  1303               	bcf	3,6	;RP1=0, select bank0
 10759  0585  00EA               	movwf	??_sprintf
 10760  0586  086A               	movf	??_sprintf,w
 10761  0587  1683               	bsf	3,5	;RP0=1, select bank1
 10762  0588  1303               	bcf	3,6	;RP1=0, select bank1
 10763  0589  00CF               	movwf	sprintf@c^(0+128)
 10764  058A  084F               	movf	sprintf@c^(0+128),w
 10765  058B  1D03               	btfss	3,2
 10766  058C  2D8E               	goto	u5521
 10767  058D  2D91               	goto	u5520
 10768  058E                     u5521:
 10769  058E  160A  118A  2D0A   	goto	l3083
 10770  0591                     u5520:
 10771  0591                     l3333:
 10772                           
 10773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10774  0591  1683               	bsf	3,5	;RP0=1, select bank1
 10775  0592  1303               	bcf	3,6	;RP1=0, select bank1
 10776  0593  084C               	movf	sprintf@sp^(0+128),w
 10777  0594  0084               	movwf	4
 10778  0595  1383               	bcf	3,7	;select IRP bank0
 10779  0596  0180               	clrf	0
 10780  0597                     l354:
 10781  0597  0008               	return
 10782  0598                     __end_of_sprintf:

Data Sizes:
    Strings     20
    Constant    144
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     80      80
    BANK1            80     48      73
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[20]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _setup->_spiInit
    _send_crct->_send_char
    _conv->___xxtofl
    ___flmul->___awdiv
    ___flmul->___xxtofl

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___flmul
    ___flmul->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   37219
                                             79 BANK0      1     1      0
                            _cfg_clk
                           _cfg_inte
                          _cfg_usart
                               _conv
                          _send_crct
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    37     13   31628
                                             74 BANK0      5     5      0
                                              8 BANK1     40    27     13
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              4 COMMON     4     4      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4    5064
                                             34 BANK0     13     9      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_inte                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cfg_clk
   _cfg_inte
   _cfg_usart
   _conv
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _send_crct
     _send_char
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     30      49       7       91.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A4      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 04 00:34:24 2021

                      pc 0002              _SSPSTATbits 0094                       l20 1BB1  
                     l23 1BB7                       l16 1C1D                       l17 1C22  
                     l34 1BD0                       l26 1BB0                       _V3 00DE  
                     _f1 00DF             ___awdiv@sign 0025                       fsr 0004  
    ___wmul@multiplicand 0075      __Umul8_16@word_mpld 0022                      l130 0881  
                    l141 1BBF                      l144 1C0C                      l153 1C5C  
                    l162 0842                      l138 1C3B                      l147 1BAA  
                    l331 02F9                      l156 1BD2                      l324 02A7  
                    l159 1BDA                      l511 1EDF                      l271 0FFF  
                    l360 1C81                      l264 07A4                      l354 0597  
                    l339 048A                      l532 1236                      l524 07FD  
                    l293 15EB                      l710 146D                      l614 1E0E  
                    l358 1C69                      l800 1CC0                      l544 1D37  
                    l552 1FE6                      l528 1273                      l545 1D53  
                    l553 1FFF                      l561 1F5B                      l529 11D8  
                    l802 1CD2                      l546 1D68                      l706 1449  
                    l394 1E76                      l731 1DB8                      l571 1F5B  
                    l539 1266                      l716 148F                      l549 1F7A  
                    l557 1BE5                      l831 10A6                      l727 14EF  
                    l719 14CD                      l575 11B5                      l728 14FB  
                    l568 1F46                      l576 1127                      l664 1D18  
                    l825 1061                      l586 11A8                      l674 103C  
                    l827 10F8                      l691 1355                      l579 1178  
                    l781 0C9C                      l685 12D7                      l845 1BF7  
                    l838 10C2                      l839 10CE                      l793 0C90  
                    l689 137E                      l698 14FB                      l787 0C08  
                    _v11 00D8                      _v22 00D4                      _v33 00D0  
                    _isr 1C82                      fsr0 0004                      indf 0000  
           ___awmod@sign 0079             ___flmul@aexp 003A             ___flmul@bexp 003B  
           ___flmul@sign 0035             ___flmul@temp 0040             ___flmul@prod 003C  
           ___fltol@exp1 005F                     l3001 1069                     l2201 1E7A  
                   l3011 108B                     l2211 1E8E                     l2203 1E7E  
                   l3021 10BC                     l3013 108F                     l3005 1072  
                   l2301 1D0E                     l2221 1EA4                     l2213 1E92  
                   l2205 1E83                     l3101 1574                     l3031 10EF  
                   l3023 10C6                     l3015 109D                     l3007 1077  
                   l2303 1D14                     l2311 100C                     l2231 1EC4  
                   l2223 1EA8                     l2215 1E94                     l2207 1E85  
                   l3111 159E                     l3103 1584                     l3033 10F0  
                   l3025 10D0                     l3017 10AD                     l3009 1084  
                   l3041 1BCD                     l2401 1315                     l2321 102B  
                   l2313 1013                     l2233 1ECB                     l2225 1EAC  
                   l2217 1E9A                     l2209 1E89                     l3201 0143  
                   l3121 15E9                     l3113 15B3                     l3105 1592  
                   l3027 10E6                     l3019 10B8                     l3051 1C31  
                   l2411 1339                     l2403 1319                     l2331 127B  
                   l2323 1032                     l2315 1017                     l2307 1003  
                   l2227 1EBD                     l2219 1E9D                     l2235 1ED1  
                   l2251 07B1                     l2243 07A5                     l3203 0145  
                   l3131 1627                     l3115 15CE                     l3107 1593  
                   l3061 1C03                     l3029 10EB                     l3053 1C32  
                   l3045 1C23                     l3037 1BAC                     l2501 14AB  
                   l2421 1369                     l2413 1359                     l2405 131D  
                   l2341 1290                     l2333 1281                     l2317 101B  
                   l2309 1009                     l2325 1038                     l2237 1ED6  
                   l2229 1EC3                     l2261 07CA                     l2253 07B5  
                   l2245 07A6                     l3301 04DE                     l3221 01E3  
                   l3213 018E                     l3141 1673                     l3133 162B  
                   l3125 15EF                     l3117 15D6                     l3109 159B  
                   l3071 1BB8                     l3055 1BA5                     l3063 1C04  
                   l2191 1CBA                     l3047 1C27                     l3039 1BC8  
                   l2511 14E4                     l2503 14C9                     l2423 1372  
                   l2415 1362                     l2407 1321                     l2351 12A8  
                   l2343 1298                     l2335 1285                     l2319 1025  
                   l2239 1EDB                     l2271 07E9                     l2263 07CE  
                   l2255 07BA                     l2247 07AA                     l3311 050F  
                   l3303 04E6                     l3231 020F                     l3223 01EC  
                   l3215 019C                     l3151 16A5                     l3143 1677  
                   l3135 1639                     l3127 160D                     l3119 15E7  
                   l3073 1BBE                     l3065 1C07                     l3057 1BF8  
                   l2193 1CC9                     l2185 1CAD                     l2601 0B66  
                   l3049 1C2A                     l2521 14FA                     l2513 14E5  
                   l2505 14D2                     l2441 13B8                     l2433 1390  
                   l2417 1364                     l2425 1376                     l2409 1322  
                   l2361 12BA                     l2353 12AE                     l2345 1299  
                   l2337 1286                     l2329 1274                     l2281 1CD3  
                   l2265 07D2                     l2257 07C0                     l2273 07EF  
                   l2249 07AF                     l3321 0545                     l3313 051A  
                   l3305 04EC                     l3241 0293                     l3233 0223  
                   l3225 01F9                     l3217 01CB                     l3209 0147  
                   l3161 1704                     l3153 16B8                     l3145 167B  
                   l3137 1641                     l3129 1621                     l3081 14FF  
                   l3401 0921                     l3067 1C08                     l3059 1BFF  
                   l2195 1CCE                     l2187 1CAF                     l2611 0BD4  
                   l2603 0B8C                     l2531 094E                     l2523 093C  
                   l3075 0806                     l2515 14E9                     l2507 14D7  
                   l2443 13BA                     l2435 13A7                     l2427 1382  
                   l2451 13CD                     l2419 1368                     l2363 12BF  
                   l2371 12CF                     l2355 12AF                     l2339 128B  
                   l2347 129B                     l2291 1CEB                     l2283 1CD7  
                   l2275 07F4                     l2267 07DC                     l2259 07C3  
                   l3323 054B                     l3315 052E                     l3307 0502  
                   l3251 02D7                     l3243 02B1                     l3235 022E  
                   l3219 01D1                     l3163 174F                     l3155 16DB  
                   l3147 1694                     l3171 1794                     l3139 165A  
                   l3091 1528                     l3083 150A                     l3331 0577  
                   l3403 092B                     l3069 1C09                     l2189 1CB6  
                   l2621 0BEC                     l2613 0BD8                     l2605 0BB4  
                   l2541 096A                     l2533 0953                     l2525 0943  
                   l3077 083A                     l2517 14EB                     l2509 14DF  
                   l2453 13E3                     l2461 143B                     l2445 13BE  
                   l2437 13AB                     l2429 1387                     l2381 12ED  
                   l2373 12DD                     l2365 12C4                     l2357 12B5  
                   l2349 12A3                     l2293 1CEF                     l2285 1CDD  
                   l2277 07F9                     l2269 07E2                     l2701 0CA6  
                   l3325 0557                     l3317 0532                     l3309 050B  
                   l3261 031C                     l3253 02E6                     l3245 02BE  
                   l3237 0235                     l3229 0200                     l3181 005E  
                   l3173 17A3                     l3165 1768                     l3157 16DF  
                   l3149 169F                     l3333 0591                     l3093 1538  
                   l3085 1510                     l3405 0932                     l2631 0C0D  
                   l2623 0BED                     l2615 0BD9                     l2607 0BBD  
                   l2551 097F                     l2543 096F                     l2535 0958  
                   l2527 0949                     l3343 1C3D                     l2519 14F6  
                   l2471 1468                     l2463 1451                     l2455 1421  
                   l2447 13BF                     l2439 13AF                     l2391 1301  
                   l2383 12F1                     l2375 12E1                     l2367 12CC  
                   l2359 12B9                     l2295 1D00                     l2287 1CE0  
                   l2199 1E77                     l2711 0D9E                     l2703 0CAD  
                   l3327 0569                     l3319 0538                     l3271 03F9  
                   l3263 0322                     l3255 02EF                     l3247 02C4  
                   l3239 0274                     l3191 00B7                     l3183 006D  
                   l3175 17EA                     l3167 1771                     l3159 16E5  
                   l3095 153C                     l3087 151D                     l2633 0C12  
                   l2641 0C43                     l2625 0BF1                     l2617 0BE2  
                   l2609 0BCB                     l2561 099B                     l2553 0984  
                   l2545 0975                     l2537 0960                     l2529 094D  
                   l3345 1C40                     l2481 147B                     l2473 146C  
                   l2465 1456                     l2457 1427                     l2449 13C8  
                   l2393 1305                     l2385 12F5                     l2377 12E5  
                   l2369 12CD                     l2801 11B6                     l2297 1D06  
                   l2289 1CE7                     l2721 0E5A                     l3281 0467  
                   l3273 040D                     l3265 0340                     l3257 030A  
                   l3249 02CA                     l3185 0088                     l3177 001C  
                   l3169 178C                     l3097 1551                     l3089 1524  
                   l2651 0C76                     l2643 0C50                     l2635 0C20  
                   l2627 0C05                     l2619 0BE8                     l2571 09C6  
                   l2563 09A0                     l2555 098C                     l2547 0979  
                   l2539 0962                     l3347 1C4B                     l2491 148C  
                   l2475 1471                     l2483 147D                     l2459 142C  
                   l2395 1309                     l2387 12F9                     l2379 12E9  
                   l2803 11C3                     l2299 1D07                     l2715 0E26  
                   l3291 0495                     l3283 046D                     l3267 039B  
                   l3275 044C                     l3259 030F                     l3195 00D6  
                   l3187 0091                     l3179 0037                     l3099 156C  
                   l3371 0852                     l2653 0C84                     l2645 0C5B  
                   l2637 0C24                     l2581 0A63                     l2573 09E3  
                   l2557 098E                     l2549 097A                     l3349 1C51  
                   l2477 1474                     l2469 145F                     l2485 1481  
                   l2397 130D                     l2389 12FD                     l2821 11FD  
                   l2813 11D9                     l2741 1BEE                     l2733 0FD3  
                   l2709 0D97                     l3293 04A0                     l3277 0454  
                   l3269 03DA                     l3189 0099                     l3197 00DF  
                   l3285 0474                     l3437 1605                     l3381 0871  
                   l3373 0857                     l3365 0843                     l2655 0C88  
                   l2647 0C6A                     l2639 0C3D                     l2591 0AC6  
                   l2583 0A6C                     l2575 09FF                     l2567 09A9  
                   l2559 0996                     l2671 1C1C                     l2663 1C0E  
                   l2911 1F9A                     l2903 1F5C                     l2495 1494  
                   l2487 1482                     l2479 1476                     l2399 1311  
                   l2831 1230                     l2823 1206                     l2815 11E1  
                   l2807 11CC                     l2751 110C                     l2743 1BF4  
                   l2727 0F44                     l2719 0E53                     l3295 04B3  
                   l3287 047C                     l3279 0461                     l3199 0114  
                   l3391 089C                     l3383 087D                     l3375 085A  
                   l3367 0848                     l2657 0C89                     l2649 0C74  
                   l2593 0ADF                     l2585 0A7C                     l2577 0A2B  
                   l2569 09B9                     l2665 1C15                     l2673 1BB1  
                   l2913 1FBE                     l2905 1F72                     l2497 1499  
                   l2489 1486                     l2833 123A                     l2841 1254  
                   l2825 1218                     l2817 11F2                     l2761 1128  
                   l2681 05A1                     l2745 1BF6                     l2737 1BE7  
                   l2729 0F4B                     l3297 04C4                     l3289 0484  
                   l3393 089F                     l3385 0885                     l3377 0863  
                   l3369 084D                     l2659 0C94                     l2595 0AFC  
                   l2587 0A99                     l2579 0A47                     l2675 1BD2  
                   l2667 1C17                     l2915 1FC2                     l2907 1F8E  
                   l2923 1BDB                     l2499 14A7                     l2931 1EE0  
                   l2827 1226                     l2819 11F4                     l2771 1151  
                   l2763 112E                     l2755 1115                     l2739 1BE8  
                   l3299 04CC                     l3395 08BF                     l3387 0891  
                   l3379 086B                     l2597 0B29                     l2589 0AA9  
                   l2677 1BD8                     l2669 1C19                     l2917 1FFC  
                   l2909 1F96                     l2925 1BE3                     l2941 1F0C  
                   l2933 1EED                     l2861 1C77                     l2853 1C5D  
                   l2829 1227                     l2781 117C                     l2773 115F  
                   l2765 113D                     l2749 10F9                     l2693 0761  
                   l3397 08DD                     l3389 0894                     l2599 0B39  
                   l2919 1FFE                     l2927 1BE5                     l2943 1F14  
                   l2871 1E24                     l2863 1C7D                     l2855 1C5F  
                   l2847 125B                     l2839 1242                     l2775 1169  
                   l2767 113F                     l2687 06B0                     l2679 059B  
                   l3399 08FB                     l2961 1F3B                     l2953 1F22  
                   l2945 1F16                     l2937 1EF6                     l2881 1E5E  
                   l2873 1E31                     l2857 1C63                     l2849 126B  
                   l2777 116A                     l2769 1148                     l2689 06B6  
                   l2697 0CA0                     l2891 1D19                     l2963 1F4B  
                   l2947 1F1A                     l2955 1F34                     l2939 1F0B  
                   l2883 1E5F                     l2875 1E35                     l2867 1E0F  
                   l2971 1DC6                     l2859 1C70                     l2795 119D  
                   l2787 1184                     l2779 1172                     l2699 0CA4  
                   l2893 1D2F                     l2965 1F50                     l2885 1E68  
                   l2877 1E3E                     l2869 1E21                     l2981 1E00  
                   l2973 1DD3                     l2797 11AD                     l2789 1196  
                   l2895 1D4B                     l2879 1E50                     l2887 1E6E  
                   l2975 1DD7                     l2983 1E06                     l2967 1DB9  
                   l2993 1040                     l2897 1D65                     l2977 1DE9  
                   l2969 1DC1                     l2995 1045                     l2899 1D67  
                   l2987 1D69                     l2979 1DF7                     l2997 1049  
                   l2989 1D6D                     l2999 1059                     ?_isr 0070  
                   STR_1 1896                     u3000 07EF                     u3001 07EE  
                   u3010 07F4                     u3011 07F3                     u3020 1CDD  
                   u3021 1CDC                     u3110 101B                     u3111 101A  
                   u4000 1BD8                     u3200 12BF                     u3040 1CEF  
                   u3120 1025                     u4001 1BD7                     u3201 12BE  
                   u3041 1CEE                     u3121 1024                     u3105 100D  
                   u3210 12C4                     u4010 05A1                     u3211 12C3  
                   u3035 1CE1                     u4011 05A0                     u3300 137E  
                   u3220 12DD                     u3060 1D00                     u3140 1038  
                   u4100 0CAD                     u3301 137D                     u3221 12DC  
                   u3061 1CFF                     u3141 1037                     u3125 1021  
                   u4101 0CAC                     u3310 1382                     u3230 12E1  
                   u3150 1285                     u3311 1381                     u3231 12E0  
                   u3151 1284                     u3055 1CF0                     u3135 102C  
                   u5000 10BC                     u3400 140E                     u3320 1387  
                   u3240 1339                     u3160 128B                     u3080 1D14  
                   u5001 10BB                     u3401 140F                     u3321 1386  
                   u3241 1338                     u3161 128A                     u3081 1D13  
                   u3065 1CFC                     u4025 05BE                     u5010 10C2  
                   u3410 142C                     u3402 1414                     u3250 1344  
                   u3170 1290                     u3090 1009                     u4050 06B6  
                   u5011 10C1                     u3411 142B                     u3403 1415  
                   u3331 1399                     u3251 1342                     u3171 128F  
                   u3075 1D08                     u3091 1008                     u4051 06B5  
                   u4035 061A                     u4115 0CCF                     u5020 10C6  
                   u3500 148C                     u3420 1451                     u3340 13AB  
                   u3332 13A0                     u3260 1345                     u3180 12AE  
                   u4220 0F4B                     u4140 0D9E                     u5100 15E6  
                   u5021 10C5                     u3501 148B                     u3421 1450  
                   u3341 13AA                     u3333 13A7                     u3245 1335  
                   u3181 12AD                     u4045 066F                     u4221 0F4A  
                   u4205 0EB8                     u4141 0D9D                     u4125 0D0B  
                   u5101 15E5                     u5030 10DB                     u3510 1493  
                   u3430 1456                     u3350 13AF                     u3270 1359  
                   u3190 12B9                     u4310 115F                     u5110 1621  
                   u3511 1492                     u3431 1455                     u3351 13AE  
                   u3271 1358                     u3191 12B8                     u4311 115E  
                   u4215 0F03                     u4135 0D56                     u5111 161E  
                   u2800 1CBA                     u5040 10EB                     u3600 14FA  
                   u3520 1499                     u3360 13BE                     u3280 1368  
                   u4400 11AD                     u5200 0037                     u5120 1627  
                   u2801 1CB9                     u5041 10EA                     u3601 14F9  
                   u3521 1498                     u3361 13BD                     u3281 1367  
                   u4401 11AC                     u4305 114A                     u4065 06D3  
                   u5201 0036                     u5121 1626                     u3610 094D  
                   u5050 10EF                     u3530 14AB                     u3450 146C  
                   u4410 11C3                     u4330 1178                     u4090 0CA4  
                   u5210 005E                     u5130 165A                     u3611 094C  
                   u5051 10EE                     u5035 10D6                     u3531 14AA  
                   u3451 146B                     u4411 11C2                     u4331 1177  
                   u4315 115B                     u4075 0720                     u4235 0F5E  
                   u4155 0DB1                     u4091 0CA3                     u5211 005D  
                   u5131 1659                     u2820 1CCE                     u3620 0953  
                   u3540 14BA                     u3460 1471                     u3380 13E3  
                   u4500 1253                     u4420 11D7                     u4340 117C  
                   u4260 1BEE                     u4180 0E5A                     u5300 0223  
                   u5220 006D                     u5140 1694                     u5060 1510  
                   u2821 1CCD                     u3701 0A0D                     u3621 0952  
                   u3461 1470                     u3445 1461                     u3381 13E2  
                   u4501 1252                     u4421 11D6                     u4341 117B  
                   u4325 116B                     u4085 076C                     u4261 1BED  
                   u4245 0F9A                     u4181 0E59                     u4165 0DED  
                   u5301 0222                     u5221 006C                     u5141 1693  
                   u5061 150F                     u3702 0A14                     u3630 0958  
                   u3550 14C9                     u3470 147B                     u4510 125A  
                   u4350 1183                     u4270 1BF4                     u2910 1ED1  
                   u2830 1E7E                     u5230 0088                     u5150 16DF  
                   u5070 1538                     u2815 1CC1                     u3711 0A39  
                   u3703 0A1B                     u3631 0957                     u3551 14C8  
                   u3471 147A                     u3391 13FA                     u3383 13DF  
                   u3375 13C1                     u3295 136B                     u4511 1259  
                   u4351 1182                     u4271 1BF3                     u2911 1ED0  
                   u2831 1E7D                     u4255 0FD6                     u4175 0E29  
                   u5231 0087                     u5151 16DE                     u5071 1537  
                   u3800 0B72                     u3712 0A40                     u3640 0979  
                   u3560 14D2                     u3480 1481                     u3392 13FB  
                   u4600 1E35                     u4440 1218                     u4280 110C  
                   u2920 1ED6                     u2840 1E89                     u5400 047C  
                   u5320 02B0                     u5160 1768                     u5080 1584  
                   u3721 0A55                     u3713 0A47                     u3641 0978  
                   u3561 14D1                     u3545 14B5                     u3481 1480  
                   u3393 1400                     u4601 1E34                     u4441 1217  
                   u4281 110B                     u2921 1ED5                     u2905 1EC5  
                   u2841 1E88                     u5401 047B                     u5321 02AF  
                   u5225 0069                     u5161 1767                     u5081 1583  
                   u3722 0A5C                     u3650 097F                     u3570 14D7  
                   u3490 1486                     u3394 1401                     u4530 126B  
                   u4370 1195                     u4290 1126                     u2850 1E9A  
                   u2930 07AA                     u5410 0484                     u5330 02D7  
                   u5250 018D                     u5170 178C                     u5090 1592  
                   u3811 0B7E                     u3723 0A63                     u3651 097E  
                   u3571 14D6                     u3491 1485                     u3395 1406  
                   u4531 126A                     u4435 11FF                     u4371 1194  
                   u4291 1125                     u2851 1E99                     u2931 07A9  
                   u4195 0E7C                     u5411 0483                     u5331 02D6  
                   u5315 023A                     u5251 018C                     u5171 178B  
                   u5091 1591                     u3900 0C05                     u3820 0B9A  
                   u3812 0B85                     u3660 0984                     u4700 1F9A  
                   u3580 14E4                     u3396 1407                     u4620 1E50  
                   u4540 1C63                     u4460 1236                     u4380 119C  
                   u2940 07B5                     u5500 0557                     u5420 0495  
                   u5340 02E6                     u5260 019C                     u5180 17A3  
                   u3901 0C04                     u3813 0B8C                     u3805 0B6D  
                   u3741 0A8B                     u3661 0983                     u4701 1F99  
                   u3581 14E3                     u4621 1E4F                     u4541 1C62  
                   u4525 125D                     u4461 1235                     u4445 1214  
                   u4381 119B                     u4365 1185                     u2941 07B4  
                   u5501 0556                     u5421 0494                     u5341 02E5  
                   u5261 019B                     u5245 014C                     u5181 17A2  
                   u3910 0C0C                     u3742 0A92                     u3670 099B  
                   u3590 14E9                     u4470 123A                     u2870 1EAC  
                   u2950 07C0                     u5510 0569                     u5430 04B3  
                   u5350 030F                     u5270 01CB                     u5190 001C  
                   u3911 0C0B                     u3831 0BA6                     u3751 0AB8  
                   u3743 0A99                     u3735 0A65                     u3671 099A  
                   u4711 1FA9                     u3591 14E8                     u4615 1E37  
                   u4471 1239                     u4455 1229                     u2871 1EAB  
                   u2951 07BF                     u5511 0568                     u5431 04B2  
                   u5351 030E                     u5335 02D3                     u5271 01CA  
                   u5255 0189                     u5191 17FA                     u3920 0C12  
                   u3832 0BAD                     u3752 0ABF                     u3680 09A0  
                   u4720 1FC2                     u4712 1FAA                     u4640 1E6E  
                   u4480 1241                     u5520 0591                     u5440 04CC  
                   u5280 01E3                     u3921 0C11                     u3833 0BB4  
                   u3825 0B95                     u3753 0AC6                     u3681 099F  
                   u4721 1FC1                     u4713 1FAF                     u4641 1E6D  
                   u4625 1E4C                     u4481 1240                     u2865 1E9E  
                   u5521 058E                     u5441 04CB                     u5425 0491  
                   u5345 02E2                     u5281 01E2                     u5185 179F  
                   u3930 0C24                     u5530 1C5C                     u4650 1D2F  
                   u4714 1FB0                     u4810 1F33                     u4570 1C7D  
                   u2890 1EBD                     u2970 07D2                     u5450 04DE  
                   u5290 020F                     u3931 0C23                     u3771 0AEE  
                   u3691 09F1                     u5531 1C5B                     u4651 1D2E  
                   u4731 1FD1                     u4715 1FB5                     u4811 1F32  
                   u4635 1E60                     u4571 1C7C                     u4555 1C6A  
                   u4395 119F                     u2891 1EBC                     u2971 07D1  
                   u5451 04DD                     u5435 04AF                     u5291 020E  
                   u5195 17F5                     u3940 0C33                     u3860 0BD8  
                   u3772 0AF5                     u3692 09F8                     u4660 1D4B  
                   u4740 1FFC                     u4732 1FD2                     u4716 1FB6  
                   u4820 1F3A                     u4580 1E21                     u2980 07DC  
                   u5460 04EC                     u5380 0453                     u3861 0BD7  
                   u3845 0BB6                     u3781 0B1B                     u3773 0AFC  
                   u3765 0AC8                     u3693 09FF                     u4661 1D4A  
                   u4741 1FFB                     u4733 1FD7                     u4821 1F39  
                   u4805 1F23                     u4581 1E20                     u4565 1C71  
                   u2885 1EAD                     u2981 07DB                     u2965 07C4  
                   u5461 04EB                     u5381 0452                     u5365 03A0  
                   u3950 0C50                     u3782 0B22                     u4670 1D65  
                   u4734 1FD8                     u4750 1BE3                     u4910 1E06  
                   u5470 0502                     u5390 0473                     u3951 0C4F  
                   u3855 0BCD                     u3791 0B48                     u3783 0B29  
                   u4671 1D64                     u4735 1FDD                     u4751 1BE2  
                   u4911 1E05                     u4495 1243                     u2895 1EB9  
                   u5471 0501                     u5391 0472                     u5375 0412  
                   u5295 020B                     u5607 0898                     u3960 0C6A  
                   u3880 0BEC                     u3792 0B4F                     u4920 1045  
                   u4736 1FDE                     u4680 1F72                     u4840 1F4B  
                   u4760 1EED                     u5480 051A                     u3961 0C69  
                   u3945 0C2E                     u3881 0BEB                     u3793 0B56  
                   u4921 1044                     u4745 1FF8                     u4681 1F71  
                   u4841 1F4A                     u4761 1EEC                     u4905 1DF8  
                   u2985 07D8                     u5481 0519                     u5617 092F  
                   u3970 0C88                     u3890 0BF1                     u4930 1049  
                   u4690 1F8E                     u4850 1F50                     u4770 1F04  
                   u5490 0538                     u5570 0871                     u3971 0C87  
                   u3955 0C4C                     u3891 0BF0                     u3875 0BDB  
                   u4931 1048                     u4675 1D61                     u4691 1F8D  
                   u4851 1F4F                     u4835 1F3D                     u4595 1E26  
                   u2995 07E3                     u5491 0537                     u5475 04FE  
                   u5571 0870                     u4940 1069                     u3980 1C15  
                   u4780 1F1A                     u4860 1DC1                     u5580 0885  
                   u3965 0C66                     u4941 1068                     u3981 1C14  
                   u4781 1F19                     u4861 1DC0                     u5485 0516  
                   u5581 0884                     u3990 1BB7                     u4790 1F21  
                   u3991 1BB6                     u4791 1F20                     u4775 1EFF  
                   u4960 108A                     u4880 1DD7                     u4961 1089  
                   u4881 1DD6                     u4890 1DE9                     u4955 107C  
                   u4891 1DE8                     u4875 1DC8                     u4980 10AC  
                   u4981 10AB                     u5597 085F                     u4975 109E  
                   u4895 1DE5                     u4995 10B1                     _TXIF 0064  
                   _conv 0803                     _main 0843                     btemp 007E  
                   start 000C             _sprintf$1265 00B5                    ??_isr 0070  
          ___fltol@sign1 005E                    ?_conv 0042          __end_of___fladd 14FC  
                  ?_main 0070          __end_of___awdiv 1EE0          __end_of___flneg 1BE6  
        __end_of___awmod 07FE          __end_of___flmul 0C9D          __end_of___flsub 1DB9  
        __end_of___fltol 1F5C                    _ANSEL 0188          __end_of___lldiv 1E77  
        ___awdiv@divisor 0020          __end_of___llmod 1E0F          __end_of___lwdiv 1D19  
                  i1l124 1CA3          __end_of___lwmod 103D          ___awdiv@counter 0024  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008          __end_of_cfg_clk 1BC0                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019                    _chng1 00DD  
                  _chng2 00DC          __end_of_dpowers 1896                    _scale 0C9D  
        __end_of_isdigit 1BF8                    _setup 1C23                    pclath 000A  
        __end_of_spiInit 1C23          __end_of_spiRead 1BD1                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0598          __initialization 000F  
           __end_of_conv 0843             __end_of_main 093C                   ??_conv 0046  
                 ??_main 006F     __size_of__tdiv_to_l_ 00BD         ___llmod@dividend 0077  
                 ?_scale 0042         ___awdiv@dividend 0022                   ?_setup 0070  
                 _ANSELH 0189                   i1l3351 1C82                   i1l3361 1C9D  
                 i1l3353 1C88                   i1l3363 1C9F                   i1l3355 1C8E  
                 i1l3357 1C90                   i1l3359 1C96                   u554_20 1C88  
                 u554_21 1C87                   u555_20 1C8E                   u555_21 1C8D  
                 u556_20 1C9D                   u556_21 1C9C                   _SPBRGH 009A  
                 _TRISA0 0428                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_cfg_inte 1BAB  
       __end_of___xxtofl 10F9         __end_of__powers_ 183A                   ___flge 1F5C  
                 ___fleq 1D19                ??___fladd 005E                   ___wmul 1C5D  
              ??___awdiv 007A                ??___flneg 0077                ??___awmod 0077  
              ??___flmul 0030                ??___flsub 007B                ??___fltol 0059  
              ??___lldiv 0020                ??___llmod 0020                ??___lwdiv 0079  
              ??___lwmod 0077                ??_cfg_clk 0073                   _fround 0598  
       ___awdiv@quotient 0026          ___awmod@divisor 0073          ___awmod@counter 0078  
                 conv@aa 004E                ??_isdigit 0073       __size_of__Umul8_16 0029  
                 saved_w 007E         __end_of_spiWrite 1BB1                ??_spiInit 0076  
              ??_spiRead 0073                ??_sprintf 006A               ___flge@ff1 0073  
             ___flge@ff2 0077             ___xxtofl@arg 0022             ___xxtofl@exp 0021  
           ___xxtofl@val 0073               ___fleq@ff1 0073               ___fleq@ff2 0077  
__end_of__initialization 0018               ___flneg@f1 0073               ___fltol@f1 0055  
         __pcstackCOMMON 0070       __size_of_cfg_usart 0015            __end_of_scale 1000  
          __end_of_setup 1C3C               __div_to_l_ 11B6          __div_to_l_@exp1 0026  
        __div_to_l_@cntr 0025                  ??_scale 0046          __div_to_l_@quot 0021  
           sprintf@width 00C0                  ??_setup 0077               __pbssBANK1 00D0  
          __div_to_l_@f1 0073            __div_to_l_@f2 0077        __end_of__Umul8_16 1CD3  
             __pmaintext 0843                  ?___flge 0073                  ?___fleq 0073  
                ?___wmul 0073               __pintentry 0004       __size_of_send_char 000A  
__size_of_spiReceiveWait 0007       __size_of_send_crct 0021                  ?_fround 0042  
              ?_cfg_inte 0070                ?___xxtofl 0073                  _SSPSTAT 0094  
            send_crct@st 0077               __stringtab 1800        __end_of_cfg_usart 1C0D  
      __end_of__npowers_ 186E               _scale$1264 0050                ?_spiWrite 0070  
        __size_of___flge 00A4          __size_of___fleq 0050                  ___fladd 1274  
                ___awdiv 1E77                  ___flneg 1BDB                  ___awmod 07A5  
                ___flmul 093C                  ___flsub 1D69                  ___fltol 1EE0  
                ___lldiv 1E0F          __size_of___wmul 0025                  ___llmod 1DB9  
                ___lwdiv 1CD3                  ___lwmod 1003                  _cfg_clk 1BB8  
        __size_of_fround 020D                  __ptext1 14FC                  __ptext2 0C9D  
                __ptext3 07A5                  __ptext4 1E77                  __ptext5 1BE6  
                __ptext6 0598                  __ptext7 1003                  __ptext8 1CD3  
                __ptext9 10F9              ?__div_to_l_ 0073                  _dpowers 186E  
             ??_cfg_inte 0073                  _isdigit 1BE6             __size_of_isr 0028  
             ??___xxtofl 0077         ___awmod@dividend 0075                  _spiInit 1C0D  
                _spiRead 1BC8                  _sprintf 14FC                  clrloop0 1BC1  
   end_of_initialization 0018        __end_of_send_char 1BDB        __end_of_send_crct 1C5D  
        ___lldiv@divisor 0073          ___lldiv@counter 0025                _RCSTAbits 0018  
             ??_spiWrite 0073                  psplit$0 A002E           __tdiv_to_l_@f1 0073  
         __tdiv_to_l_@f2 0077            send_char@dato 0073            ??__tdiv_to_l_ 0020  
              _PORTAbits 0005                _PORTCbits 0007              ___fladd@grs 0069  
          ___xxtofl@sign 0020                _TRISCbits 0087              spiWrite@dat 0073  
             conv@result 004A              ___flmul@grs 0036                _TXSTAbits 0098  
    __size_of__div_to_l_ 00BE           _spiReceiveWait 1BB1           __end_of___flge 2000  
         __end_of___fleq 1D69           __end_of___wmul 1C82        pnum$text1_split_1 002E  
            _BAUDCTLbits 0187           __end_of_fround 07A5      start_initialization 000F  
    __end_of__tdiv_to_l_ 11B6              __end_of_isr 1CAA          ___llmod@divisor 0073  
        ___llmod@counter 0021   __end_of_spiReceiveWait 1BB8                 ??___flge 0020  
               ??___fleq 0020                 ??___wmul 0077                __Umul8_16 1CAA  
               ??_fround 0046            sprintf@tmpval 00C2                ___fladd@a 005A  
              ___fladd@b 0056               fround@prec 0055                ___flmul@a 002C  
              ___flmul@b 0028                ___flsub@a 00A0                ___flsub@b 00A4  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of_cfg_inte 0006        __size_of___xxtofl 00BC             _isdigit$1082 0073  
            sprintf@flag 00BE              sprintf@eexp 00C6              sprintf@fval 00C8  
            sprintf@prec 00CD                _cfg_usart 1BF8         ___lwdiv@dividend 0022  
        ?_spiReceiveWait 0070                 ?___fladd 0056                 ?___awdiv 0020  
               ?___flneg 0073                 ?___awmod 0073                 ?___flmul 0028  
               ?___flsub 00A0                 ?___fltol 0055                 ?___lldiv 0073  
               ?___llmod 0073                __npowers_ 183A               ?__Umul8_16 0073  
               ?___lwdiv 0020                 ?___lwmod 0073                 ?_cfg_clk 0070  
      __size_of_spiWrite 0006                __pstrings 1800              __tdiv_to_l_ 10F9  
             send_crct@i 0075             ??__div_to_l_ 0020                 ?_isdigit 0070  
               ?_spiInit 0073                 ?_spiRead 0070         ___lwdiv@quotient 0024  
               ?_sprintf 00A8           __size_of_scale 0363           __size_of_setup 0019  
   spiInit@sTransmitEdge 0075        interrupt_function 0004           ___wmul@product 0077  
              clear_ram0 1BC0               ?_cfg_usart 0070                 _PIE1bits 008C  
              _send_char 1BD1                _send_crct 1C3C       spiInit@sDataSample 0073  
               _PIR1bits 000C       __end_of__div_to_l_ 1274              __stringbase 1805  
      ___wmul@multiplier 0073               ?_send_char 0070               ?_send_crct 0070  
            ??__Umul8_16 0075         __size_of___fladd 0288         __size_of___awdiv 0069  
       __size_of___flneg 000B         __size_of___awmod 0059         __size_of___flmul 0361  
       __size_of___flsub 0050         __size_of___fltol 007C         __size_of___lldiv 0068  
       __size_of___llmod 0056         __size_of___lwdiv 0046         __size_of___lwmod 003A  
       __size_of_cfg_clk 0008              _fround$1262 0051              _fround$1263 004D  
     __end_of__stringtab 1806               sprintf@val 00BA                 _cfg_inte 1BA5  
               ___xxtofl 103D         __size_of_isdigit 0012          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0026                 __ptext10 11B6                 __ptext11 1C5D  
               __ptext20 1BAB                 __ptext12 1DB9                 __ptext21 1BC8  
               __ptext13 1E0F                 __ptext30 1CAA                 __ptext22 1BB1  
               __ptext14 1EE0                 __ptext31 1BF8                 __ptext23 1C23  
               __ptext15 1D69                 __ptext32 1BA5                 __ptext24 1C0D  
               __ptext16 1274                 __ptext33 1BB8                 __ptext25 1C3C  
               __ptext17 1BDB                 __ptext34 1C82                 __ptext26 1BD1  
               __ptext18 1F5C                 __ptext27 0803                 __ptext19 1D19  
               __ptext28 103D                 __ptext29 093C         __size_of_spiInit 0016  
       __size_of_spiRead 0009                 __powers_ 1806         __size_of_sprintf F09C  
          __size_of_conv 0040            __size_of_main 00F9                pnum$text1 000A  
            ??_cfg_usart 0073                 _spiWrite 1BAB             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B                 isdigit@c 0074  
               scale@scl 0054                 intlevel1 0000                sprintf@ap 00B9  
       __tdiv_to_l_@exp1 0029         __tdiv_to_l_@cntr 0028                sprintf@sp 00CC  
       __tdiv_to_l_@quot 0024         ___lwmod@dividend 0075         ___lldiv@dividend 0077  
       ??_spiReceiveWait 0073              ??_send_char 0073              ??_send_crct 0074  
              stringcode 1800               _OSCCONbits 008F             ?__tdiv_to_l_ 0073  
 __Umul8_16@multiplicand 0073                 sprintf@c 00CF                 sprintf@f 00A8  
       ___lldiv@quotient 0021          ___lwmod@divisor 0073          ___lwmod@counter 0078  
               stringdir 1800                 stringtab 1800            ___fladd@signs 0066  
           ___fladd@aexp 0067             ___fladd@bexp 0068     __Umul8_16@multiplier 0024  
      __Umul8_16@product 0020  

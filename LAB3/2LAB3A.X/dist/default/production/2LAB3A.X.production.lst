

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 30 13:57:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0008                     _PORTD	set	8
   286  0006                     _PORTB	set	6
   287  0007                     _PORTCbits	set	7
   288  0005                     _PORTAbits	set	5
   289  0013                     _SSPBUF	set	19
   290  0014                     _SSPCON	set	20
   291  008F                     _OSCCONbits	set	143
   292  0088                     _TRISD	set	136
   293  0086                     _TRISB	set	134
   294  0094                     _SSPSTATbits	set	148
   295  0094                     _SSPSTAT	set	148
   296  0428                     _TRISA0	set	1064
   297  043A                     _TRISC2	set	1082
   298  043B                     _TRISC3	set	1083
   299  043D                     _TRISC5	set	1085
   300  0189                     _ANSELH	set	393
   301  0188                     _ANSEL	set	392
   302                           
   303                           	psect	cinit
   304  07FA                     start_initialization:	
   305                           ; #config settings
   306                           
   307  07FA                     __initialization:
   308                           
   309                           ; Clear objects allocated to COMMON
   310  07FA  01F7               	clrf	__pbssCOMMON& (0+127)
   311  07FB  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   312  07FC                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  07FC                     __end_of__initialization:
   316  07FC  0183               	clrf	3
   317  07FD  120A  118A  2F9D   	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMMON
   320  0077                     __pbssCOMMON:
   321  0077                     _chng:
   322  0077                     	ds	1
   323  0078                     _V1:
   324  0078                     	ds	1
   325                           
   326                           	psect	cstackCOMMON
   327  0070                     __pcstackCOMMON:
   328  0070                     ?_setup:
   329  0070                     ?_cfg_clk:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ??_cfg_clk:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_spiInit:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_spiReceiveWait:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_spiReceiveWait:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_spiWrite:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_spiWrite:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_spiRead:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ??_spiRead:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_main:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     spiInit@sDataSample:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     spiWrite@dat:	
   363                           ; 1 bytes @ 0x0
   364                           
   365                           
   366                           ; 1 bytes @ 0x0
   367  0070                     	ds	1
   368  0071                     spiInit@sClockIdle:
   369                           
   370                           ; 1 bytes @ 0x1
   371  0071                     	ds	1
   372  0072                     spiInit@sTransmitEdge:
   373                           
   374                           ; 1 bytes @ 0x2
   375  0072                     	ds	1
   376  0073                     ??_spiInit:
   377  0073                     spiInit@sType:	
   378                           ; 1 bytes @ 0x3
   379                           
   380                           
   381                           ; 1 bytes @ 0x3
   382  0073                     	ds	1
   383  0074                     ??_setup:
   384  0074                     ??_main:	
   385                           ; 1 bytes @ 0x4
   386                           
   387                           
   388                           ; 1 bytes @ 0x4
   389  0074                     	ds	3
   390                           
   391                           	psect	maintext
   392  079D                     __pmaintext:	
   393 ;;
   394 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   395 ;;
   396 ;; *************** function _main *****************
   397 ;; Defined at:
   398 ;;		line 54 in file "main3a.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0, pclath, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : B00/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   412 ;;      Params:         0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0
   414 ;;      Temps:          3       0       0       0       0
   415 ;;      Totals:         3       0       0       0       0
   416 ;;Total ram usage:        3 bytes
   417 ;; Hardware stack levels required when called:    2
   418 ;; This function calls:
   419 ;;		_cfg_clk
   420 ;;		_setup
   421 ;;		_spiRead
   422 ;;		_spiWrite
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _main
   430  079D                     _main:
   431  079D                     l769:	
   432                           ;incstack = 0
   433                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   434                           
   435                           
   436                           ;main3a.c: 55:     setup();
   437  079D  120A  118A  2784  120A  118A  	fcall	_setup
   438                           
   439                           ;main3a.c: 56:     cfg_clk();
   440  07A2  120A  118A  275D  120A  118A  	fcall	_cfg_clk
   441  07A7                     l771:
   442                           
   443                           ;main3a.c: 57:     PORTAbits.RA0 = 1;
   444  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   445  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   446  07A9  1405               	bsf	5,0	;volatile
   447  07AA                     l773:
   448                           
   449                           ;main3a.c: 62:        PORTCbits.RC2 = 0;
   450  07AA  1107               	bcf	7,2	;volatile
   451  07AB                     l775:
   452                           
   453                           ;main3a.c: 63:        _delay((unsigned long)((1)*(4000000/4000.0)));
   454  07AB  30C7               	movlw	199
   455  07AC  00F4               	movwf	??_main
   456  07AD                     u87:
   457  07AD  2FAE               	nop2
   458  07AE  0BF4               	decfsz	??_main,f
   459  07AF  2FAD               	goto	u87
   460  07B0  2FB1               	nop2
   461  07B1  2FB2               	nop2
   462  07B2                     l777:
   463                           
   464                           ;main3a.c: 65:        spiWrite(PORTB);
   465  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   466  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   467  07B4  0806               	movf	6,w	;volatile
   468  07B5  120A  118A  2750  120A  118A  	fcall	_spiWrite
   469  07BA                     l779:
   470                           
   471                           ;main3a.c: 67:        if(PORTAbits.RA0 == 1){
   472  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   473  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   474  07BC  1C05               	btfss	5,0	;volatile
   475  07BD  2FBF               	goto	u61
   476  07BE  2FC0               	goto	u60
   477  07BF                     u61:
   478  07BF  2FCC               	goto	l78
   479  07C0                     u60:
   480  07C0                     l781:
   481                           
   482                           ;main3a.c: 68:            chng = spiRead();
   483  07C0  120A  118A  2765  120A  118A  	fcall	_spiRead
   484  07C5  00F4               	movwf	??_main
   485  07C6  0874               	movf	??_main,w
   486  07C7  00F7               	movwf	_chng
   487  07C8                     l783:
   488                           
   489                           ;main3a.c: 69:            PORTAbits.RA0 = 0;
   490  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   491  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   492  07CA  1005               	bcf	5,0	;volatile
   493                           
   494                           ;main3a.c: 70:        }
   495  07CB  2FD9               	goto	l789
   496  07CC                     l78:	
   497                           ;main3a.c: 71:        else if(PORTAbits.RA0 == 0){
   498                           
   499  07CC  1805               	btfsc	5,0	;volatile
   500  07CD  2FCF               	goto	u71
   501  07CE  2FD0               	goto	u70
   502  07CF                     u71:
   503  07CF  2FD9               	goto	l789
   504  07D0                     u70:
   505  07D0                     l785:
   506                           
   507                           ;main3a.c: 72:            PORTD = spiRead();
   508  07D0  120A  118A  2765  120A  118A  	fcall	_spiRead
   509  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   510  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   511  07D7  0088               	movwf	8	;volatile
   512  07D8                     l787:
   513                           
   514                           ;main3a.c: 73:            PORTAbits.RA0 = 1;
   515  07D8  1405               	bsf	5,0	;volatile
   516  07D9                     l789:
   517                           
   518                           ;main3a.c: 78:        _delay((unsigned long)((1)*(4000000/4000.0)));
   519  07D9  30C7               	movlw	199
   520  07DA  00F4               	movwf	??_main
   521  07DB                     u97:
   522  07DB  2FDC               	nop2
   523  07DC  0BF4               	decfsz	??_main,f
   524  07DD  2FDB               	goto	u97
   525  07DE  2FDF               	nop2
   526  07DF  2FE0               	nop2
   527  07E0                     l791:
   528                           
   529                           ;main3a.c: 79:        PORTCbits.RC2 = 1;
   530  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   531  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   532  07E2  1507               	bsf	7,2	;volatile
   533  07E3                     l793:
   534                           
   535                           ;main3a.c: 81:        _delay((unsigned long)((250)*(4000000/4000.0)));
   536  07E3  3002               	movlw	2
   537  07E4  00F6               	movwf	??_main+2
   538  07E5  3045               	movlw	69
   539  07E6  00F5               	movwf	??_main+1
   540  07E7  30A9               	movlw	169
   541  07E8  00F4               	movwf	??_main
   542  07E9                     u107:
   543  07E9  0BF4               	decfsz	??_main,f
   544  07EA  2FE9               	goto	u107
   545  07EB  0BF5               	decfsz	??_main+1,f
   546  07EC  2FE9               	goto	u107
   547  07ED  0BF6               	decfsz	??_main+2,f
   548  07EE  2FE9               	goto	u107
   549  07EF  2FF0               	nop2
   550  07F0                     l795:
   551                           
   552                           ;main3a.c: 82:        PORTB++;
   553  07F0  3001               	movlw	1
   554  07F1  00F4               	movwf	??_main
   555  07F2  0874               	movf	??_main,w
   556  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   557  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   558  07F5  0786               	addwf	6,f	;volatile
   559  07F6  2FAA               	goto	l773
   560  07F7  120A  118A  2800   	ljmp	start
   561  07FA                     __end_of_main:
   562                           
   563                           	psect	text1
   564  0750                     __ptext1:	
   565 ;; *************** function _spiWrite *****************
   566 ;; Defined at:
   567 ;;		line 34 in file "SPI.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  dat             1    wreg     unsigned char 
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  dat             1    0[COMMON] unsigned char 
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   581 ;;      Params:         0       0       0       0       0
   582 ;;      Locals:         1       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0
   584 ;;      Totals:         1       0       0       0       0
   585 ;;Total ram usage:        1 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function _spiWrite
   596  0750                     _spiWrite:
   597                           
   598                           ;incstack = 0
   599                           ; Regs used in _spiWrite: [wreg]
   600                           ;spiWrite@dat stored from wreg
   601  0750  00F0               	movwf	spiWrite@dat
   602  0751                     l693:
   603                           
   604                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   605  0751  0870               	movf	spiWrite@dat,w
   606  0752  1283               	bcf	3,5	;RP0=0, select bank0
   607  0753  1303               	bcf	3,6	;RP1=0, select bank0
   608  0754  0093               	movwf	19	;volatile
   609  0755                     l26:
   610  0755  0008               	return
   611  0756                     __end_of_spiWrite:
   612                           
   613                           	psect	text2
   614  0765                     __ptext2:	
   615 ;; *************** function _spiRead *****************
   616 ;; Defined at:
   617 ;;		line 47 in file "SPI.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      unsigned char 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0, pclath, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0
   634 ;;      Totals:         0       0       0       0       0
   635 ;;Total ram usage:        0 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    1
   638 ;; This function calls:
   639 ;;		_spiReceiveWait
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _spiRead
   647  0765                     _spiRead:
   648  0765                     l695:	
   649                           ;incstack = 0
   650                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   651                           
   652                           
   653                           ;SPI.c: 49:     spiReceiveWait();
   654  0765  120A  118A  2756  120A  118A  	fcall	_spiReceiveWait
   655  076A                     l697:
   656                           
   657                           ;SPI.c: 50:     return(SSPBUF);
   658  076A  1283               	bcf	3,5	;RP0=0, select bank0
   659  076B  1303               	bcf	3,6	;RP1=0, select bank0
   660  076C  0813               	movf	19,w	;volatile
   661  076D                     l34:
   662  076D  0008               	return
   663  076E                     __end_of_spiRead:
   664                           
   665                           	psect	text3
   666  0756                     __ptext3:	
   667 ;; *************** function _spiReceiveWait *****************
   668 ;; Defined at:
   669 ;;		line 29 in file "SPI.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		None
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0
   686 ;;      Totals:         0       0       0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		_spiRead
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _spiReceiveWait
   698  0756                     _spiReceiveWait:
   699  0756                     l691:	
   700                           ;incstack = 0
   701                           ; Regs used in _spiReceiveWait: []
   702                           
   703  0756                     l20:	
   704                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   705                           
   706  0756  1683               	bsf	3,5	;RP0=1, select bank1
   707  0757  1303               	bcf	3,6	;RP1=0, select bank1
   708  0758  1C14               	btfss	20,0	;volatile
   709  0759  2F5B               	goto	u21
   710  075A  2F5C               	goto	u20
   711  075B                     u21:
   712  075B  2F56               	goto	l20
   713  075C                     u20:
   714  075C                     l23:
   715  075C  0008               	return
   716  075D                     __end_of_spiReceiveWait:
   717                           
   718                           	psect	text4
   719  0784                     __ptext4:	
   720 ;; *************** function _setup *****************
   721 ;; Defined at:
   722 ;;		line 89 in file "main3a.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, pclath, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    1
   743 ;; This function calls:
   744 ;;		_spiInit
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _setup
   752  0784                     _setup:
   753  0784                     l759:	
   754                           ;incstack = 0
   755                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   756                           
   757                           
   758                           ;main3a.c: 90:     ANSEL = 0;
   759  0784  1683               	bsf	3,5	;RP0=1, select bank3
   760  0785  1703               	bsf	3,6	;RP1=1, select bank3
   761  0786  0188               	clrf	8	;volatile
   762                           
   763                           ;main3a.c: 91:     ANSELH = 0;
   764  0787  0189               	clrf	9	;volatile
   765  0788                     l761:
   766                           
   767                           ;main3a.c: 92:     TRISC2 = 0;
   768  0788  1683               	bsf	3,5	;RP0=1, select bank1
   769  0789  1303               	bcf	3,6	;RP1=0, select bank1
   770  078A  1107               	bcf	7,2	;volatile
   771  078B                     l763:
   772                           
   773                           ;main3a.c: 93:     TRISA0 = 0;
   774  078B  1005               	bcf	5,0	;volatile
   775                           
   776                           ;main3a.c: 94:     TRISB = 0;
   777  078C  0186               	clrf	6	;volatile
   778                           
   779                           ;main3a.c: 95:     TRISD = 0;
   780  078D  0188               	clrf	8	;volatile
   781                           
   782                           ;main3a.c: 96:     PORTB = 0;
   783  078E  1283               	bcf	3,5	;RP0=0, select bank0
   784  078F  1303               	bcf	3,6	;RP1=0, select bank0
   785  0790  0186               	clrf	6	;volatile
   786                           
   787                           ;main3a.c: 97:     PORTD = 0;
   788  0791  0188               	clrf	8	;volatile
   789  0792                     l765:
   790                           
   791                           ;main3a.c: 98:     PORTCbits.RC2 = 1;
   792  0792  1507               	bsf	7,2	;volatile
   793  0793                     l767:
   794                           
   795                           ;main3a.c: 99:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   796  0793  01F0               	clrf	spiInit@sDataSample
   797  0794  01F1               	clrf	spiInit@sClockIdle
   798  0795  01F2               	clrf	spiInit@sTransmitEdge
   799  0796  3020               	movlw	32
   800  0797  120A  118A  276E  120A  118A  	fcall	_spiInit
   801  079C                     l86:
   802  079C  0008               	return
   803  079D                     __end_of_setup:
   804                           
   805                           	psect	text5
   806  076E                     __ptext5:	
   807 ;; *************** function _spiInit *****************
   808 ;; Defined at:
   809 ;;		line 12 in file "SPI.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  sType           1    wreg     enum E1264
   812 ;;  sDataSample     1    0[COMMON] enum E1272
   813 ;;  sClockIdle      1    1[COMMON] enum E1276
   814 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  sType           1    3[COMMON] enum E1264
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         3       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0
   829 ;;      Totals:         4       0       0       0       0
   830 ;;Total ram usage:        4 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_setup
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _spiInit
   841  076E                     _spiInit:
   842                           
   843                           ;incstack = 0
   844                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   845                           ;spiInit@sType stored from wreg
   846  076E  00F3               	movwf	spiInit@sType
   847  076F                     l749:
   848                           
   849                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   850  076F  1683               	bsf	3,5	;RP0=1, select bank1
   851  0770  1303               	bcf	3,6	;RP1=0, select bank1
   852  0771  1287               	bcf	7,5	;volatile
   853                           
   854                           ;SPI.c: 15:     if(sType & 0b00000100)
   855  0772  1D73               	btfss	spiInit@sType,2
   856  0773  2F75               	goto	u51
   857  0774  2F76               	goto	u50
   858  0775                     u51:
   859  0775  2F7A               	goto	l755
   860  0776                     u50:
   861  0776                     l751:
   862                           
   863                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   864  0776  0872               	movf	spiInit@sTransmitEdge,w
   865  0777  0094               	movwf	20	;volatile
   866  0778                     l753:
   867                           
   868                           ;SPI.c: 18:         TRISC3 = 1;
   869  0778  1587               	bsf	7,3	;volatile
   870                           
   871                           ;SPI.c: 19:     }
   872  0779  2F7E               	goto	l16
   873  077A                     l755:
   874                           
   875                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   876  077A  0870               	movf	spiInit@sDataSample,w
   877  077B  0472               	iorwf	spiInit@sTransmitEdge,w
   878  077C  0094               	movwf	20	;volatile
   879  077D                     l757:
   880                           
   881                           ;SPI.c: 23:         TRISC3 = 0;
   882  077D  1187               	bcf	7,3	;volatile
   883  077E                     l16:	
   884                           ;SPI.c: 24:     }
   885                           
   886                           
   887                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   888  077E  0873               	movf	spiInit@sType,w
   889  077F  0471               	iorwf	spiInit@sClockIdle,w
   890  0780  1283               	bcf	3,5	;RP0=0, select bank0
   891  0781  1303               	bcf	3,6	;RP1=0, select bank0
   892  0782  0094               	movwf	20	;volatile
   893  0783                     l17:
   894  0783  0008               	return
   895  0784                     __end_of_spiInit:
   896                           
   897                           	psect	text6
   898  075D                     __ptext6:	
   899 ;; *************** function _cfg_clk *****************
   900 ;; Defined at:
   901 ;;		line 102 in file "main3a.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0
   918 ;;      Totals:         0       0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           
   929                           ;psect for function _cfg_clk
   930  075D                     _cfg_clk:
   931  075D                     l711:	
   932                           ;incstack = 0
   933                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
   934                           
   935                           
   936                           ;main3a.c: 103:     OSCCONbits.IRCF = 0b100;
   937  075D  1683               	bsf	3,5	;RP0=1, select bank1
   938  075E  1303               	bcf	3,6	;RP1=0, select bank1
   939  075F  080F               	movf	15,w	;volatile
   940  0760  398F               	andlw	-113
   941  0761  3840               	iorlw	64
   942  0762  008F               	movwf	15	;volatile
   943  0763                     l713:
   944                           
   945                           ;main3a.c: 104:     OSCCONbits.SCS = 1;
   946  0763  140F               	bsf	15,0	;volatile
   947  0764                     l89:
   948  0764  0008               	return
   949  0765                     __end_of_cfg_clk:
   950  007E                     btemp	set	126	;btemp
   951  007E                     wtemp0	set	126
   952                           
   953                           	psect	config
   954                           
   955                           ;Config register CONFIG1 @ 0x2007
   956                           ;	Oscillator Selection bits
   957                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   958                           ;	Watchdog Timer Enable bit
   959                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   960                           ;	Power-up Timer Enable bit
   961                           ;	PWRTE = OFF, PWRT disabled
   962                           ;	RE3/MCLR pin function select bit
   963                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   964                           ;	Code Protection bit
   965                           ;	CP = OFF, Program memory code protection is disabled
   966                           ;	Data Code Protection bit
   967                           ;	CPD = OFF, Data memory code protection is disabled
   968                           ;	Brown Out Reset Selection bits
   969                           ;	BOREN = OFF, BOR disabled
   970                           ;	Internal External Switchover bit
   971                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   972                           ;	Fail-Safe Clock Monitor Enabled bit
   973                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   974                           ;	Low Voltage Programming Enable bit
   975                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   976                           ;	In-Circuit Debugger Mode bit
   977                           ;	DEBUG = 0x1, unprogrammed default
   978  2007                     	org	8199
   979  2007  20D6               	dw	8406
   980                           
   981                           ;Config register CONFIG2 @ 0x2008
   982                           ;	Brown-out Reset Selection bit
   983                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   984                           ;	Flash Program Memory Self Write Enable bits
   985                           ;	WRT = OFF, Write protection off
   986  2008                     	org	8200
   987  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     375
                                              4 COMMON     3     3      0
                            _cfg_clk
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cfg_clk
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 30 13:57:21 2021

            _SSPSTATbits 0094                       l20 0756                       l23 075C  
                     l16 077E                       l17 0783                       l34 076D  
                     l26 0755                       l86 079C                       l78 07CC  
                     l89 0764                       _V1 0078                       u20 075C  
                     u21 075B                       u50 0776                       u51 0775  
                     u60 07C0                       u61 07BF                       u70 07D0  
                     u71 07CF                       u87 07AD                       u97 07DB  
                    l711 075D                      l713 0763                      l751 0776  
                    l753 0778                      l761 0788                      l755 077A  
                    l763 078B                      l691 0756                      l771 07A7  
                    l757 077D                      l749 076F                      l765 0792  
                    l693 0751                      l781 07C0                      l773 07AA  
                    l767 0793                      l759 0784                      l695 0765  
                    l791 07E0                      l783 07C8                      l775 07AB  
                    l697 076A                      l793 07E3                      l785 07D0  
                    l777 07B2                      l769 079D                      l795 07F0  
                    l787 07D8                      l779 07BA                      l789 07D9  
                    u107 07E9                     _chng 0077                     _main 079D  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTD 0008  
        __end_of_cfg_clk 0765                    _TRISB 0086                    _TRISD 0088  
                  _setup 0784          __end_of_spiInit 0784          __end_of_spiRead 076E  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 07FA                   ??_main 0074                   ?_setup 0070  
                 _ANSELH 0189                   _TRISA0 0428                   _TRISC2 043A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                ??_cfg_clk 0070         __end_of_spiWrite 0756  
              ??_spiInit 0073                ??_spiRead 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 079D                  ??_setup 0074  
             __pmaintext 079D  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  _cfg_clk 075D                  __ptext1 0750  
                __ptext2 0765                  __ptext3 0756                  __ptext4 0784  
                __ptext5 076E                  __ptext6 075D                  _spiInit 076E  
                _spiRead 0765     end_of_initialization 07FC               ??_spiWrite 0070  
              _PORTAbits 0005                _PORTCbits 0007              spiWrite@dat 0070  
         _spiReceiveWait 0756      start_initialization 07FA   __end_of_spiReceiveWait 075D  
            __pbssCOMMON 0077                ___latbits 0002          ?_spiReceiveWait 0070  
               ?_cfg_clk 0070        __size_of_spiWrite 0006                 ?_spiInit 0070  
               ?_spiRead 0070           __size_of_setup 0019     spiInit@sTransmitEdge 0072  
     spiInit@sDataSample 0070         __size_of_cfg_clk 0008         __size_of_spiInit 0016  
       __size_of_spiRead 0009            __size_of_main 005D                 _spiWrite 0750  
           spiInit@sType 0073        spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
             _OSCCONbits 008F  

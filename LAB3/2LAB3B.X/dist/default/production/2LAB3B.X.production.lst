

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 04 00:33:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  000B                     _INTCONbits	set	11
   290  0006                     _PORTB	set	6
   291  001E                     _ADRESH	set	30
   292  001F                     _ADCON0bits	set	31
   293  000C                     _PIR1bits	set	12
   294  0005                     _PORTAbits	set	5
   295  0008                     _PORTD	set	8
   296  0013                     _SSPBUF	set	19
   297  0014                     _SSPCON	set	20
   298  0063                     _SSPIF	set	99
   299  008F                     _OSCCONbits	set	143
   300  009F                     _ADCON1bits	set	159
   301  008C                     _PIE1bits	set	140
   302  0085                     _TRISAbits	set	133
   303  0089                     _TRISE	set	137
   304  0088                     _TRISD	set	136
   305  0086                     _TRISB	set	134
   306  0094                     _SSPSTATbits	set	148
   307  0094                     _SSPSTAT	set	148
   308  043B                     _TRISC3	set	1083
   309  043D                     _TRISC5	set	1085
   310  0189                     _ANSELH	set	393
   311  0188                     _ANSEL	set	392
   312                           
   313                           	psect	cinit
   314  000F                     start_initialization:	
   315                           ; #config settings
   316                           
   317  000F                     __initialization:
   318                           
   319                           ; Clear objects allocated to COMMON
   320  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   321  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   322  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   323  0012                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  0012                     __end_of__initialization:
   327  0012  0183               	clrf	3
   328  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  0077                     __pbssCOMMON:
   332  0077                     _V2:
   333  0077                     	ds	1
   334  0078                     _V1:
   335  0078                     	ds	1
   336  0079                     _temporal:
   337  0079                     	ds	1
   338                           
   339                           	psect	cstackCOMMON
   340  0070                     __pcstackCOMMON:
   341  0070                     ?_cfg_adc:
   342  0070                     ?_cfg_clk:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_setup:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_spiReceiveWait:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ??_spiReceiveWait:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_spiWrite:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ??_spiWrite:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_spiRead:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ??_spiRead:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_isr:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_main:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     spiWrite@dat:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 1 bytes @ 0x0
   377  0070                     	ds	1
   378  0071                     ??_isr:
   379                           
   380                           ; 1 bytes @ 0x1
   381  0071                     	ds	3
   382  0074                     ??_cfg_adc:
   383  0074                     ??_cfg_clk:	
   384                           ; 1 bytes @ 0x4
   385                           
   386  0074                     ?_spiInit:	
   387                           ; 1 bytes @ 0x4
   388                           
   389  0074                     spiInit@sDataSample:	
   390                           ; 1 bytes @ 0x4
   391                           
   392                           
   393                           ; 1 bytes @ 0x4
   394  0074                     	ds	1
   395  0075                     spiInit@sClockIdle:
   396                           
   397                           ; 1 bytes @ 0x5
   398  0075                     	ds	1
   399  0076                     spiInit@sTransmitEdge:
   400                           
   401                           ; 1 bytes @ 0x6
   402  0076                     	ds	1
   403  0077                     ??_setup:
   404  0077                     ??_spiInit:	
   405                           ; 1 bytes @ 0x7
   406                           
   407                           
   408                           	psect	cstackBANK0
   409  0020                     __pcstackBANK0:	
   410                           ; 1 bytes @ 0x7
   411                           
   412  0020                     spiInit@sType:
   413                           
   414                           ; 1 bytes @ 0x0
   415  0020                     	ds	1
   416  0021                     ??_main:
   417                           
   418                           ; 1 bytes @ 0x1
   419  0021                     	ds	3
   420                           
   421                           	psect	maintext
   422  0016                     __pmaintext:	
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 81 in file "main3b.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : B00/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0
   444 ;;      Temps:          0       3       0       0       0
   445 ;;      Totals:         0       3       0       0       0
   446 ;;Total ram usage:        3 bytes
   447 ;; Hardware stack levels required when called:    5
   448 ;; This function calls:
   449 ;;		_cfg_adc
   450 ;;		_cfg_clk
   451 ;;		_setup
   452 ;; This function is called by:
   453 ;;		Startup code after reset
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _main
   459  0016                     _main:
   460  0016                     l931:	
   461                           ;incstack = 0
   462                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   463                           
   464                           
   465                           ;main3b.c: 83:     cfg_adc();
   466  0016  120A  118A  20E9  120A  118A  	fcall	_cfg_adc
   467                           
   468                           ;main3b.c: 84:     cfg_clk();
   469  001B  120A  118A  2108  120A  118A  	fcall	_cfg_clk
   470                           
   471                           ;main3b.c: 85:     setup();
   472  0020  120A  118A  20A1  120A  118A  	fcall	_setup
   473  0025                     l933:
   474                           
   475                           ;main3b.c: 86:     ADCON0bits.GO = 1;
   476  0025  1283               	bcf	3,5	;RP0=0, select bank0
   477  0026  1303               	bcf	3,6	;RP1=0, select bank0
   478  0027  149F               	bsf	31,1	;volatile
   479  0028                     l935:
   480                           
   481                           ;main3b.c: 92:        _delay((unsigned long)((250)*(8000000/4000.0)));
   482  0028  3003               	movlw	3
   483  0029  1283               	bcf	3,5	;RP0=0, select bank0
   484  002A  1303               	bcf	3,6	;RP1=0, select bank0
   485  002B  00A3               	movwf	??_main+2
   486  002C  308A               	movlw	138
   487  002D  00A2               	movwf	??_main+1
   488  002E  3055               	movlw	85
   489  002F  00A1               	movwf	??_main
   490  0030                     u167:
   491  0030  0BA1               	decfsz	??_main,f
   492  0031  2830               	goto	u167
   493  0032  0BA2               	decfsz	??_main+1,f
   494  0033  2830               	goto	u167
   495  0034  0BA3               	decfsz	??_main+2,f
   496  0035  2830               	goto	u167
   497  0036                     l937:
   498                           
   499                           ;main3b.c: 93:       if(ADCON0bits.GO == 0){
   500  0036  1283               	bcf	3,5	;RP0=0, select bank0
   501  0037  1303               	bcf	3,6	;RP1=0, select bank0
   502  0038  189F               	btfsc	31,1	;volatile
   503  0039  283B               	goto	u141
   504  003A  283C               	goto	u140
   505  003B                     u141:
   506  003B  2828               	goto	l935
   507  003C                     u140:
   508  003C                     l939:
   509                           
   510                           ;main3b.c: 94:         if (ADCON0bits.CHS == 5){
   511  003C  0C1F               	rrf	31,w	;volatile
   512  003D  00A1               	movwf	??_main
   513  003E  0C21               	rrf	??_main,w
   514  003F  390F               	andlw	15
   515  0040  3A05               	xorlw	5
   516  0041  1D03               	skipz
   517  0042  2844               	goto	u151
   518  0043  2845               	goto	u150
   519  0044                     u151:
   520  0044  284A               	goto	l943
   521  0045                     u150:
   522  0045                     l941:
   523                           
   524                           ;main3b.c: 95:             ADCON0bits.CHS = 6;
   525  0045  081F               	movf	31,w	;volatile
   526  0046  39C3               	andlw	-61
   527  0047  3818               	iorlw	24
   528  0048  009F               	movwf	31	;volatile
   529                           
   530                           ;main3b.c: 96:         }
   531  0049  284E               	goto	l945
   532  004A                     l943:
   533                           
   534                           ;main3b.c: 98:             ADCON0bits.CHS = 5;
   535  004A  081F               	movf	31,w	;volatile
   536  004B  39C3               	andlw	-61
   537  004C  3814               	iorlw	20
   538  004D  009F               	movwf	31	;volatile
   539  004E                     l945:
   540                           
   541                           ;main3b.c: 100:         _delay((unsigned long)((50)*(8000000/4000000.0)));
   542  004E  3020               	movlw	32
   543  004F  1283               	bcf	3,5	;RP0=0, select bank0
   544  0050  1303               	bcf	3,6	;RP1=0, select bank0
   545  0051  00A1               	movwf	??_main
   546  0052                     u177:
   547  0052  0BA1               	decfsz	??_main,f
   548  0053  2852               	goto	u177
   549  0054  0000               	nop
   550  0055                     l947:
   551                           
   552                           ;main3b.c: 101:         ADCON0bits.GO = 1;
   553  0055  1283               	bcf	3,5	;RP0=0, select bank0
   554  0056  1303               	bcf	3,6	;RP1=0, select bank0
   555  0057  149F               	bsf	31,1	;volatile
   556  0058  2828               	goto	l935
   557  0059  120A  118A  280C   	ljmp	start
   558  005C                     __end_of_main:
   559                           
   560                           	psect	text1
   561  00A1                     __ptext1:	
   562 ;; *************** function _setup *****************
   563 ;; Defined at:
   564 ;;		line 109 in file "main3b.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;		None
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0, pclath, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         0       0       0       0       0
   579 ;;      Locals:         0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0
   581 ;;      Totals:         0       0       0       0       0
   582 ;;Total ram usage:        0 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    4
   585 ;; This function calls:
   586 ;;		_spiInit
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _setup
   594  00A1                     _setup:
   595  00A1                     l897:	
   596                           ;incstack = 0
   597                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   598                           
   599                           
   600                           ;main3b.c: 110:     ANSEL = 0X20;
   601  00A1  3020               	movlw	32
   602  00A2  1683               	bsf	3,5	;RP0=1, select bank3
   603  00A3  1703               	bsf	3,6	;RP1=1, select bank3
   604  00A4  0088               	movwf	8	;volatile
   605  00A5                     l899:
   606                           
   607                           ;main3b.c: 111:     ANSELH = 0;
   608  00A5  0189               	clrf	9	;volatile
   609  00A6                     l901:
   610                           
   611                           ;main3b.c: 113:     TRISB = 0;
   612  00A6  1683               	bsf	3,5	;RP0=1, select bank1
   613  00A7  1303               	bcf	3,6	;RP1=0, select bank1
   614  00A8  0186               	clrf	6	;volatile
   615  00A9                     l903:
   616                           
   617                           ;main3b.c: 114:     TRISD = 0;
   618  00A9  0188               	clrf	8	;volatile
   619  00AA                     l905:
   620                           
   621                           ;main3b.c: 115:     TRISE = 0X03;
   622  00AA  3003               	movlw	3
   623  00AB  0089               	movwf	9	;volatile
   624  00AC                     l907:
   625                           
   626                           ;main3b.c: 116:     TRISAbits.TRISA0 = 1;
   627  00AC  1405               	bsf	5,0	;volatile
   628  00AD                     l909:
   629                           
   630                           ;main3b.c: 117:     TRISAbits.TRISA1 = 0;
   631  00AD  1085               	bcf	5,1	;volatile
   632  00AE                     l911:
   633                           
   634                           ;main3b.c: 118:     TRISAbits.TRISA2 = 0;
   635  00AE  1105               	bcf	5,2	;volatile
   636  00AF                     l913:
   637                           
   638                           ;main3b.c: 119:     TRISAbits.TRISA3 = 0;
   639  00AF  1185               	bcf	5,3	;volatile
   640                           
   641                           ;main3b.c: 121:     PORTB = 0;
   642  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   643  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   644  00B2  0186               	clrf	6	;volatile
   645                           
   646                           ;main3b.c: 122:     PORTD = 0;
   647  00B3  0188               	clrf	8	;volatile
   648  00B4                     l915:
   649                           
   650                           ;main3b.c: 124:     INTCONbits.GIE = 1;
   651  00B4  178B               	bsf	11,7	;volatile
   652  00B5                     l917:
   653                           
   654                           ;main3b.c: 125:     INTCONbits.PEIE = 1;
   655  00B5  170B               	bsf	11,6	;volatile
   656  00B6                     l919:
   657                           
   658                           ;main3b.c: 126:     PIE1bits.ADIE = 1;
   659  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   660  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   661  00B8  170C               	bsf	12,6	;volatile
   662  00B9                     l921:
   663                           
   664                           ;main3b.c: 127:     PIR1bits.ADIF = 0;
   665  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   666  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   667  00BB  130C               	bcf	12,6	;volatile
   668  00BC                     l923:
   669                           
   670                           ;main3b.c: 128:     PIR1bits.SSPIF = 0;
   671  00BC  118C               	bcf	12,3	;volatile
   672  00BD                     l925:
   673                           
   674                           ;main3b.c: 129:     PIE1bits.SSPIE = 1;
   675  00BD  1683               	bsf	3,5	;RP0=1, select bank1
   676  00BE  1303               	bcf	3,6	;RP1=0, select bank1
   677  00BF  158C               	bsf	12,3	;volatile
   678  00C0                     l927:
   679                           
   680                           ;main3b.c: 130:     TRISAbits.TRISA5 = 1;
   681  00C0  1685               	bsf	5,5	;volatile
   682  00C1                     l929:
   683                           
   684                           ;main3b.c: 131:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   685  00C1  01F4               	clrf	spiInit@sDataSample
   686  00C2  01F5               	clrf	spiInit@sClockIdle
   687  00C3  01F6               	clrf	spiInit@sTransmitEdge
   688  00C4  3024               	movlw	36
   689  00C5  120A  118A  20CB  120A  118A  	fcall	_spiInit
   690  00CA                     l113:
   691  00CA  0008               	return
   692  00CB                     __end_of_setup:
   693                           
   694                           	psect	text2
   695  00CB                     __ptext2:	
   696 ;; *************** function _spiInit *****************
   697 ;; Defined at:
   698 ;;		line 12 in file "SPI.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  sType           1    wreg     enum E1264
   701 ;;  sDataSample     1    4[COMMON] enum E1272
   702 ;;  sClockIdle      1    5[COMMON] enum E1276
   703 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  sType           1    0[BANK0 ] enum E1264
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         3       0       0       0       0
   716 ;;      Locals:         0       1       0       0       0
   717 ;;      Temps:          0       0       0       0       0
   718 ;;      Totals:         3       1       0       0       0
   719 ;;Total ram usage:        4 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    3
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_setup
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           
   730                           ;psect for function _spiInit
   731  00CB                     _spiInit:
   732                           
   733                           ;incstack = 0
   734                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   735                           ;spiInit@sType stored from wreg
   736  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   737  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   738  00CD  00A0               	movwf	spiInit@sType
   739  00CE                     l887:
   740                           
   741                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   742  00CE  1683               	bsf	3,5	;RP0=1, select bank1
   743  00CF  1303               	bcf	3,6	;RP1=0, select bank1
   744  00D0  1287               	bcf	7,5	;volatile
   745                           
   746                           ;SPI.c: 15:     if(sType & 0b00000100)
   747  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   748  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   749  00D3  1D20               	btfss	spiInit@sType,2
   750  00D4  28D6               	goto	u131
   751  00D5  28D7               	goto	u130
   752  00D6                     u131:
   753  00D6  28DD               	goto	l893
   754  00D7                     u130:
   755  00D7                     l889:
   756                           
   757                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   758  00D7  0876               	movf	spiInit@sTransmitEdge,w
   759  00D8  1683               	bsf	3,5	;RP0=1, select bank1
   760  00D9  1303               	bcf	3,6	;RP1=0, select bank1
   761  00DA  0094               	movwf	20	;volatile
   762  00DB                     l891:
   763                           
   764                           ;SPI.c: 18:         TRISC3 = 1;
   765  00DB  1587               	bsf	7,3	;volatile
   766                           
   767                           ;SPI.c: 19:     }
   768  00DC  28E3               	goto	l16
   769  00DD                     l893:
   770                           
   771                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   772  00DD  0874               	movf	spiInit@sDataSample,w
   773  00DE  0476               	iorwf	spiInit@sTransmitEdge,w
   774  00DF  1683               	bsf	3,5	;RP0=1, select bank1
   775  00E0  1303               	bcf	3,6	;RP1=0, select bank1
   776  00E1  0094               	movwf	20	;volatile
   777  00E2                     l895:
   778                           
   779                           ;SPI.c: 23:         TRISC3 = 0;
   780  00E2  1187               	bcf	7,3	;volatile
   781  00E3                     l16:	
   782                           ;SPI.c: 24:     }
   783                           
   784                           
   785                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   786  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   787  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   788  00E5  0820               	movf	spiInit@sType,w
   789  00E6  0475               	iorwf	spiInit@sClockIdle,w
   790  00E7  0094               	movwf	20	;volatile
   791  00E8                     l17:
   792  00E8  0008               	return
   793  00E9                     __end_of_spiInit:
   794                           
   795                           	psect	text3
   796  0108                     __ptext3:	
   797 ;; *************** function _cfg_clk *****************
   798 ;; Defined at:
   799 ;;		line 147 in file "main3b.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0
   816 ;;      Totals:         0       0       0       0       0
   817 ;;Total ram usage:        0 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    3
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _cfg_clk
   829  0108                     _cfg_clk:
   830  0108                     l739:	
   831                           ;incstack = 0
   832                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
   833                           
   834                           
   835                           ;main3b.c: 148:     OSCCONbits.IRCF = 0b100;
   836  0108  1683               	bsf	3,5	;RP0=1, select bank1
   837  0109  1303               	bcf	3,6	;RP1=0, select bank1
   838  010A  080F               	movf	15,w	;volatile
   839  010B  398F               	andlw	-113
   840  010C  3840               	iorlw	64
   841  010D  008F               	movwf	15	;volatile
   842  010E                     l741:
   843                           
   844                           ;main3b.c: 149:     OSCCONbits.SCS = 1;
   845  010E  140F               	bsf	15,0	;volatile
   846  010F                     l119:
   847  010F  0008               	return
   848  0110                     __end_of_cfg_clk:
   849                           
   850                           	psect	text4
   851  00E9                     __ptext4:	
   852 ;; *************** function _cfg_adc *****************
   853 ;; Defined at:
   854 ;;		line 134 in file "main3b.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0
   870 ;;      Temps:          1       0       0       0       0
   871 ;;      Totals:         1       0       0       0       0
   872 ;;Total ram usage:        1 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    3
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _cfg_adc
   884  00E9                     _cfg_adc:
   885  00E9                     l731:	
   886                           ;incstack = 0
   887                           ; Regs used in _cfg_adc: [wreg+status,2+status,0]
   888                           
   889                           
   890                           ;main3b.c: 135:     ADCON1bits.ADFM = 0;
   891  00E9  1683               	bsf	3,5	;RP0=1, select bank1
   892  00EA  1303               	bcf	3,6	;RP1=0, select bank1
   893  00EB  139F               	bcf	31,7	;volatile
   894                           
   895                           ;main3b.c: 136:     ADCON1bits.VCFG0 = 0;
   896  00EC  121F               	bcf	31,4	;volatile
   897                           
   898                           ;main3b.c: 137:     ADCON1bits.VCFG1 = 0;
   899  00ED  129F               	bcf	31,5	;volatile
   900                           
   901                           ;main3b.c: 139:     ADCON0bits.ADCS0 = 0;
   902  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   903  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   904  00F0  131F               	bcf	31,6	;volatile
   905                           
   906                           ;main3b.c: 140:     ADCON0bits.ADCS1 = 0;
   907  00F1  139F               	bcf	31,7	;volatile
   908  00F2                     l733:
   909                           
   910                           ;main3b.c: 141:     ADCON0bits.CHS = 5;
   911  00F2  081F               	movf	31,w	;volatile
   912  00F3  39C3               	andlw	-61
   913  00F4  3814               	iorlw	20
   914  00F5  009F               	movwf	31	;volatile
   915  00F6                     l735:
   916                           
   917                           ;main3b.c: 142:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   918  00F6  3042               	movlw	66
   919  00F7  00F4               	movwf	??_cfg_adc
   920  00F8                     u187:
   921  00F8  0BF4               	decfsz	??_cfg_adc,f
   922  00F9  28F8               	goto	u187
   923  00FA  0000               	nop
   924  00FB                     l737:
   925                           
   926                           ;main3b.c: 143:     ADCON0bits.ADON = 1;
   927  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   928  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   929  00FD  141F               	bsf	31,0	;volatile
   930  00FE                     l116:
   931  00FE  0008               	return
   932  00FF                     __end_of_cfg_adc:
   933                           
   934                           	psect	text5
   935  005C                     __ptext5:	
   936 ;; *************** function _isr *****************
   937 ;; Defined at:
   938 ;;		line 57 in file "main3b.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0, pclath, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0
   954 ;;      Temps:          3       0       0       0       0
   955 ;;      Totals:         3       0       0       0       0
   956 ;;Total ram usage:        3 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    2
   959 ;; This function calls:
   960 ;;		_spiRead
   961 ;;		_spiWrite
   962 ;; This function is called by:
   963 ;;		Interrupt level 1
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _isr
   969  005C                     _isr:
   970  005C                     i1l783:
   971                           
   972                           ;main3b.c: 58:    if(SSPIF == 1){
   973  005C  1283               	bcf	3,5	;RP0=0, select bank0
   974  005D  1303               	bcf	3,6	;RP1=0, select bank0
   975  005E  1D8C               	btfss	12,3	;volatile
   976  005F  2861               	goto	u3_21
   977  0060  2862               	goto	u3_20
   978  0061                     u3_21:
   979  0061  2883               	goto	i1l797
   980  0062                     u3_20:
   981  0062                     i1l785:
   982                           
   983                           ;main3b.c: 59:         PORTD = spiRead();
   984  0062  120A  118A  20FF  120A  118A  	fcall	_spiRead
   985  0067  1283               	bcf	3,5	;RP0=0, select bank0
   986  0068  1303               	bcf	3,6	;RP1=0, select bank0
   987  0069  0088               	movwf	8	;volatile
   988  006A                     i1l787:
   989                           
   990                           ;main3b.c: 60:         if(PORTAbits.RA0 == 1){
   991  006A  1C05               	btfss	5,0	;volatile
   992  006B  286D               	goto	u4_21
   993  006C  286E               	goto	u4_20
   994  006D                     u4_21:
   995  006D  2874               	goto	i1l791
   996  006E                     u4_20:
   997  006E                     i1l789:
   998                           
   999                           ;main3b.c: 61:             spiWrite(V1);
  1000  006E  0878               	movf	_V1,w
  1001  006F  120A  118A  2117  120A  118A  	fcall	_spiWrite
  1002  0074                     i1l791:
  1003                           
  1004                           ;main3b.c: 63:         if(PORTAbits.RA0 == 0){
  1005  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0076  1805               	btfsc	5,0	;volatile
  1008  0077  2879               	goto	u5_21
  1009  0078  287A               	goto	u5_20
  1010  0079                     u5_21:
  1011  0079  2880               	goto	i1l795
  1012  007A                     u5_20:
  1013  007A                     i1l793:
  1014                           
  1015                           ;main3b.c: 64:             spiWrite(V2);
  1016  007A  0877               	movf	_V2,w
  1017  007B  120A  118A  2117  120A  118A  	fcall	_spiWrite
  1018  0080                     i1l795:
  1019                           
  1020                           ;main3b.c: 66:         SSPIF = 0;
  1021  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0082  118C               	bcf	12,3	;volatile
  1024  0083                     i1l797:
  1025                           
  1026                           ;main3b.c: 68:     if(PIR1bits.ADIF){
  1027  0083  1F0C               	btfss	12,6	;volatile
  1028  0084  2886               	goto	u6_21
  1029  0085  2887               	goto	u6_20
  1030  0086                     u6_21:
  1031  0086  289A               	goto	i1l99
  1032  0087                     u6_20:
  1033  0087                     i1l799:
  1034                           
  1035                           ;main3b.c: 69:         if(ADCON0bits.CHS == 5){
  1036  0087  0C1F               	rrf	31,w	;volatile
  1037  0088  00F1               	movwf	??_isr
  1038  0089  0C71               	rrf	??_isr,w
  1039  008A  390F               	andlw	15
  1040  008B  3A05               	xorlw	5
  1041  008C  1D03               	skipz
  1042  008D  288F               	goto	u7_21
  1043  008E  2890               	goto	u7_20
  1044  008F                     u7_21:
  1045  008F  2895               	goto	i1l803
  1046  0090                     u7_20:
  1047  0090                     i1l801:
  1048                           
  1049                           ;main3b.c: 70:             V1 = ADRESH;
  1050  0090  081E               	movf	30,w	;volatile
  1051  0091  00F1               	movwf	??_isr
  1052  0092  0871               	movf	??_isr,w
  1053  0093  00F8               	movwf	_V1
  1054                           
  1055                           ;main3b.c: 71:         }
  1056  0094  2899               	goto	i1l805
  1057  0095                     i1l803:
  1058                           
  1059                           ;main3b.c: 73:             V2 = ADRESH;
  1060  0095  081E               	movf	30,w	;volatile
  1061  0096  00F1               	movwf	??_isr
  1062  0097  0871               	movf	??_isr,w
  1063  0098  00F7               	movwf	_V2
  1064  0099                     i1l805:
  1065                           
  1066                           ;main3b.c: 75:         PIR1bits.ADIF = 0;
  1067  0099  130C               	bcf	12,6	;volatile
  1068  009A                     i1l99:
  1069  009A  0873               	movf	??_isr+2,w
  1070  009B  008A               	movwf	10
  1071  009C  0E72               	swapf	??_isr+1,w
  1072  009D  0083               	movwf	3
  1073  009E  0EFE               	swapf	btemp,f
  1074  009F  0E7E               	swapf	btemp,w
  1075  00A0  0009               	retfie
  1076  00A1                     __end_of_isr:
  1077                           
  1078                           	psect	intentry
  1079  0004                     __pintentry:	
  1080                           ;incstack = 0
  1081                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1082                           
  1083  0004                     interrupt_function:
  1084  007E                     saved_w	set	btemp
  1085  0004  00FE               	movwf	btemp
  1086  0005  0E03               	swapf	3,w
  1087  0006  00F2               	movwf	??_isr+1
  1088  0007  080A               	movf	10,w
  1089  0008  00F3               	movwf	??_isr+2
  1090  0009  120A  118A  285C   	ljmp	_isr
  1091                           
  1092                           	psect	text6
  1093  0117                     __ptext6:	
  1094 ;; *************** function _spiWrite *****************
  1095 ;; Defined at:
  1096 ;;		line 34 in file "SPI.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  dat             1    wreg     unsigned char 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  dat             1    0[COMMON] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1110 ;;      Params:         0       0       0       0       0
  1111 ;;      Locals:         1       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0
  1113 ;;      Totals:         1       0       0       0       0
  1114 ;;Total ram usage:        1 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_isr
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function _spiWrite
  1125  0117                     _spiWrite:
  1126                           
  1127                           ;incstack = 0
  1128                           ; Regs used in _spiWrite: [wreg]
  1129                           ;spiWrite@dat stored from wreg
  1130  0117  00F0               	movwf	spiWrite@dat
  1131  0118                     i1l723:
  1132                           
  1133                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1134  0118  0870               	movf	spiWrite@dat,w
  1135  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1136  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1137  011B  0093               	movwf	19	;volatile
  1138  011C                     i1l26:
  1139  011C  0008               	return
  1140  011D                     __end_of_spiWrite:
  1141                           
  1142                           	psect	text7
  1143  00FF                     __ptext7:	
  1144 ;; *************** function _spiRead *****************
  1145 ;; Defined at:
  1146 ;;		line 47 in file "SPI.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      unsigned char 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0
  1163 ;;      Totals:         0       0       0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    1
  1167 ;; This function calls:
  1168 ;;		_spiReceiveWait
  1169 ;; This function is called by:
  1170 ;;		_isr
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _spiRead
  1176  00FF                     _spiRead:
  1177  00FF                     i1l725:	
  1178                           ;incstack = 0
  1179                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1180                           
  1181                           
  1182                           ;SPI.c: 49:     spiReceiveWait();
  1183  00FF  120A  118A  2110  120A  118A  	fcall	_spiReceiveWait
  1184  0104                     i1l727:
  1185                           
  1186                           ;SPI.c: 50:     return(SSPBUF);
  1187  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0106  0813               	movf	19,w	;volatile
  1190  0107                     i1l34:
  1191  0107  0008               	return
  1192  0108                     __end_of_spiRead:
  1193                           
  1194                           	psect	text8
  1195  0110                     __ptext8:	
  1196 ;; *************** function _spiReceiveWait *****************
  1197 ;; Defined at:
  1198 ;;		line 29 in file "SPI.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		None
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_spiRead
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _spiReceiveWait
  1227  0110                     _spiReceiveWait:
  1228  0110                     i1l721:	
  1229                           ;incstack = 0
  1230                           ; Regs used in _spiReceiveWait: []
  1231                           
  1232  0110                     i1l20:	
  1233                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1234                           
  1235  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1236  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1237  0112  1C14               	btfss	20,0	;volatile
  1238  0113  2915               	goto	u2_21
  1239  0114  2916               	goto	u2_20
  1240  0115                     u2_21:
  1241  0115  2910               	goto	i1l20
  1242  0116                     u2_20:
  1243  0116                     i1l23:
  1244  0116  0008               	return
  1245  0117                     __end_of_spiReceiveWait:
  1246  007E                     btemp	set	126	;btemp
  1247  007E                     wtemp0	set	126
  1248                           
  1249                           	psect	config
  1250                           
  1251                           ;Config register CONFIG1 @ 0x2007
  1252                           ;	Oscillator Selection bits
  1253                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1254                           ;	Watchdog Timer Enable bit
  1255                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1256                           ;	Power-up Timer Enable bit
  1257                           ;	PWRTE = OFF, PWRT disabled
  1258                           ;	RE3/MCLR pin function select bit
  1259                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1260                           ;	Code Protection bit
  1261                           ;	CP = OFF, Program memory code protection is disabled
  1262                           ;	Data Code Protection bit
  1263                           ;	CPD = OFF, Data memory code protection is disabled
  1264                           ;	Brown Out Reset Selection bits
  1265                           ;	BOREN = OFF, BOR disabled
  1266                           ;	Internal External Switchover bit
  1267                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1268                           ;	Fail-Safe Clock Monitor Enabled bit
  1269                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1270                           ;	Low Voltage Programming Enable bit
  1271                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1272                           ;	In-Circuit Debugger Mode bit
  1273                           ;	DEBUG = 0x1, unprogrammed default
  1274  2007                     	org	8199
  1275  2007  20D4               	dw	8404
  1276                           
  1277                           ;Config register CONFIG2 @ 0x2008
  1278                           ;	Brown-out Reset Selection bit
  1279                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1280                           ;	Flash Program Memory Self Write Enable bits
  1281                           ;	WRT = OFF, Write protection off
  1282  2008                     	org	8200
  1283  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     456
                                              1 BANK0      3     3      0
                            _cfg_adc
                            _cfg_clk
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_adc                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cfg_adc
   _cfg_clk
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 04 00:33:59 2021

            _SSPSTATbits 0094                       l16 00E3                       l17 00E8  
                     _V1 0078                       _V2 0077                      l113 00CA  
                    l116 00FE                      l119 010F                      l731 00E9  
                    l733 00F2                      l741 010E                      l901 00A6  
                    l735 00F6                      l911 00AE                      l903 00A9  
                    l737 00FB                      l921 00B9                      l913 00AF  
                    l905 00AA                      l739 0108                      l923 00BC  
                    l915 00B4                      l907 00AC                      l931 0016  
                    l925 00BD                      l917 00B5                      l909 00AD  
                    l941 0045                      l933 0025                      l927 00C0  
                    l919 00B6                      l943 004A                      l935 0028  
                    l929 00C1                      l945 004E                      l937 0036  
                    l891 00DB                      l947 0055                      l939 003C  
                    l893 00DD                      l895 00E2                      l887 00CE  
                    l889 00D7                      l897 00A1                      l899 00A5  
                    u130 00D7                      u131 00D6                      u140 003C  
                    u141 003B                      u150 0045                      u151 0044  
                    u167 0030                      u177 0052                      u187 00F8  
                    _isr 005C                     ?_isr 0070                     i1l20 0110  
                   i1l23 0116                     i1l34 0107                     i1l26 011C  
                   i1l99 009A                     u2_20 0116                     u2_21 0115  
                   u3_20 0062                     u3_21 0061                     u4_20 006E  
                   u4_21 006D                     u5_20 007A                     u5_21 0079  
                   u6_20 0087                     u6_21 0086                     u7_20 0090  
                   u7_21 008F                     _main 0016                     btemp 007E  
                   start 000C                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l721 0110                    i1l801 0090  
                  i1l723 0118                    i1l803 0095                    i1l725 00FF  
                  i1l805 0099                    i1l727 0104                    i1l791 0074  
                  i1l783 005C                    i1l793 007A                    i1l785 0062  
                  i1l795 0080                    i1l787 006A                    i1l789 006E  
                  i1l797 0083                    i1l799 0087          __end_of_cfg_adc 00FF  
                  _PORTB 0006                    _PORTD 0008          __end_of_cfg_clk 0110  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    _setup 00A1                    pclath 000A  
        __end_of_spiInit 00E9          __end_of_spiRead 0108                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 005C  
                 ??_main 0021                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                ??_cfg_adc 0074  
              ??_cfg_clk 0074                   saved_w 007E         __end_of_spiWrite 011D  
              ??_spiInit 0077                ??_spiRead 0070  __end_of__initialization 0012  
         __pcstackCOMMON 0070            __end_of_setup 00CB                  ??_setup 0077  
             __pmaintext 0016               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  _cfg_adc 00E9  
                _cfg_clk 0108                  __ptext1 00A1                  __ptext2 00CB  
                __ptext3 0108                  __ptext4 00E9                  __ptext5 005C  
                __ptext6 0117                  __ptext7 00FF                  __ptext8 0110  
           __size_of_isr 0045                  _spiInit 00CB                  _spiRead 00FF  
   end_of_initialization 0012               ??_spiWrite 0070                _PORTAbits 0005  
              _TRISAbits 0085              spiWrite@dat 0070           _spiReceiveWait 0110  
    start_initialization 000F              __end_of_isr 00A1   __end_of_spiReceiveWait 0117  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070                 ?_cfg_adc 0070                 ?_cfg_clk 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0074                 ?_spiRead 0070  
         __size_of_setup 002A     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0074                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of_cfg_adc 0016  
       __size_of_cfg_clk 0008         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 0046                 _temporal 0079                 _spiWrite 0117  
           spiInit@sType 0020        spiInit@sClockIdle 0075               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  

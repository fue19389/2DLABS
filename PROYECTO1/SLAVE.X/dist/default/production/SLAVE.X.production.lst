

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Sep 01 12:54:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0006                     _PORTB	set	6
   288  0006                     _PORTBbits	set	6
   289  0005                     _PORTAbits	set	5
   290  000E                     _TMR1L	set	14
   291  000F                     _TMR1H	set	15
   292  0014                     _SSPCONbits	set	20
   293  000C                     _PIR1bits	set	12
   294  0013                     _SSPBUF	set	19
   295  0014                     _SSPCON	set	20
   296  0080                     _TMR1ON	set	128
   297  0063                     _SSPIF	set	99
   298  005E                     _PEIE	set	94
   299  005F                     _GIE	set	95
   300  008F                     _OSCCONbits	set	143
   301  0086                     _TRISB	set	134
   302  0085                     _TRISAbits	set	133
   303  0094                     _SSPSTATbits	set	148
   304  0091                     _SSPCON2bits	set	145
   305  0087                     _TRISCbits	set	135
   306  0094                     _SSPSTAT	set	148
   307  0093                     _SSPADD	set	147
   308  0091                     _SSPCON2	set	145
   309  04A0                     _BF	set	1184
   310  0463                     _SSPIE	set	1123
   311  043C                     _TRISC4	set	1084
   312  043B                     _TRISC3	set	1083
   313  0189                     _ANSELH	set	393
   314  0188                     _ANSEL	set	392
   315                           
   316                           	psect	cinit
   317  000F                     start_initialization:	
   318                           ; #config settings
   319                           
   320  000F                     __initialization:
   321                           
   322                           ; Clear objects allocated to COMMON
   323  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   324  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   325  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   326  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   327                           
   328                           ; Clear objects allocated to BANK0
   329  0013  1283               	bcf	3,5	;RP0=0, select bank0
   330  0014  1303               	bcf	3,6	;RP1=0, select bank0
   331  0015  01A7               	clrf	__pbssBANK0& (0+127)
   332  0016  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   333  0017  01A9               	clrf	(__pbssBANK0+2)& (0+127)
   334  0018  01AA               	clrf	(__pbssBANK0+3)& (0+127)
   335  0019                     end_of_initialization:	
   336                           ;End of C runtime variable initialization code
   337                           
   338  0019                     __end_of__initialization:
   339  0019  0183               	clrf	3
   340  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   341                           
   342                           	psect	bssCOMMON
   343  0077                     __pbssCOMMON:
   344  0077                     _i1:
   345  0077                     	ds	1
   346  0078                     _i0:
   347  0078                     	ds	1
   348  0079                     _dato:
   349  0079                     	ds	1
   350  007A                     _z:
   351  007A                     	ds	1
   352                           
   353                           	psect	bssBANK0
   354  0027                     __pbssBANK0:
   355  0027                     _D:
   356  0027                     	ds	2
   357  0029                     _V:
   358  0029                     	ds	2
   359                           
   360                           	psect	cstackCOMMON
   361  0070                     __pcstackCOMMON:
   362  0070                     ?_setup:
   363  0070                     ?_cfg_clk:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_I2C_Slave_Init:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_isr:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ??_isr:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_main:	
   376                           ; 1 bytes @ 0x0
   377                           
   378                           
   379                           ; 1 bytes @ 0x0
   380  0070                     	ds	3
   381  0073                     ??_cfg_clk:
   382  0073                     ??_I2C_Slave_Init:	
   383                           ; 1 bytes @ 0x3
   384                           
   385  0073                     ?___awdiv:	
   386                           ; 1 bytes @ 0x3
   387                           
   388  0073                     I2C_Slave_Init@address:	
   389                           ; 2 bytes @ 0x3
   390                           
   391  0073                     ___awdiv@divisor:	
   392                           ; 1 bytes @ 0x3
   393                           
   394                           
   395                           ; 2 bytes @ 0x3
   396  0073                     	ds	1
   397  0074                     ??_setup:
   398                           
   399                           ; 1 bytes @ 0x4
   400  0074                     	ds	1
   401  0075                     ___awdiv@dividend:
   402                           
   403                           ; 2 bytes @ 0x5
   404  0075                     	ds	2
   405                           
   406                           	psect	cstackBANK0
   407  0020                     __pcstackBANK0:
   408  0020                     ??___awdiv:
   409                           
   410                           ; 1 bytes @ 0x0
   411  0020                     	ds	1
   412  0021                     ___awdiv@counter:
   413                           
   414                           ; 1 bytes @ 0x1
   415  0021                     	ds	1
   416  0022                     ___awdiv@sign:
   417                           
   418                           ; 1 bytes @ 0x2
   419  0022                     	ds	1
   420  0023                     ___awdiv@quotient:
   421                           
   422                           ; 2 bytes @ 0x3
   423  0023                     	ds	2
   424  0025                     ??_main:
   425                           
   426                           ; 1 bytes @ 0x5
   427  0025                     	ds	2
   428                           
   429                           	psect	maintext
   430  001D                     __pmaintext:	
   431 ;;
   432 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   433 ;;
   434 ;; *************** function _main *****************
   435 ;; Defined at:
   436 ;;		line 95 in file "esclavo.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : B00/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0
   452 ;;      Temps:          0       2       0       0       0
   453 ;;      Totals:         0       2       0       0       0
   454 ;;Total ram usage:        2 bytes
   455 ;; Hardware stack levels required when called:    3
   456 ;; This function calls:
   457 ;;		___awdiv
   458 ;;		_cfg_clk
   459 ;;		_setup
   460 ;; This function is called by:
   461 ;;		Startup code after reset
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           
   466                           ;psect for function _main
   467  001D                     _main:
   468  001D                     l1085:	
   469                           ;incstack = 0
   470                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   471                           
   472                           
   473                           ;esclavo.c: 96:     setup();
   474  001D  120A  118A  218A  120A  118A  	fcall	_setup
   475                           
   476                           ;esclavo.c: 97:     cfg_clk();
   477  0022  120A  118A  219F  120A  118A  	fcall	_cfg_clk
   478  0027                     l1087:
   479                           
   480                           ;esclavo.c: 104:         TMR1H = 0;
   481  0027  1283               	bcf	3,5	;RP0=0, select bank0
   482  0028  1303               	bcf	3,6	;RP1=0, select bank0
   483  0029  018F               	clrf	15	;volatile
   484  002A                     l1089:
   485                           
   486                           ;esclavo.c: 105:         TMR1L = 0;
   487  002A  018E               	clrf	14	;volatile
   488  002B                     l1091:
   489                           
   490                           ;esclavo.c: 107:         PORTAbits.RA0 = 1;
   491  002B  1405               	bsf	5,0	;volatile
   492  002C                     l1093:
   493                           
   494                           ;esclavo.c: 108:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   495  002C  3002               	movlw	2
   496  002D  1283               	bcf	3,5	;RP0=0, select bank0
   497  002E  1303               	bcf	3,6	;RP1=0, select bank0
   498  002F  00A5               	movwf	??_main
   499  0030                     u637:
   500  0030  0BA5               	decfsz	??_main,f
   501  0031  2830               	goto	u637
   502  0032  0000               	nop
   503  0033                     l1095:
   504                           
   505                           ;esclavo.c: 109:         PORTAbits.RA0 = 0;
   506  0033  1283               	bcf	3,5	;RP0=0, select bank0
   507  0034  1303               	bcf	3,6	;RP1=0, select bank0
   508  0035  1005               	bcf	5,0	;volatile
   509  0036                     l133:	
   510                           ;esclavo.c: 112:         while(!PORTAbits.RA1);
   511                           
   512  0036  1C85               	btfss	5,1	;volatile
   513  0037  2839               	goto	u571
   514  0038  283A               	goto	u570
   515  0039                     u571:
   516  0039  2836               	goto	l133
   517  003A                     u570:
   518  003A                     l135:
   519                           
   520                           ;esclavo.c: 113:         TMR1ON = 1;
   521  003A  1410               	bsf	16,0	;volatile
   522  003B                     l136:	
   523                           ;esclavo.c: 114:         while(PORTAbits.RA1);
   524                           
   525  003B  1885               	btfsc	5,1	;volatile
   526  003C  283E               	goto	u581
   527  003D  283F               	goto	u580
   528  003E                     u581:
   529  003E  283B               	goto	l136
   530  003F                     u580:
   531  003F                     l138:
   532                           
   533                           ;esclavo.c: 115:         TMR1ON = 0;
   534  003F  1010               	bcf	16,0	;volatile
   535  0040                     l1097:
   536                           
   537                           ;esclavo.c: 117:         V = (TMR1L | (TMR1H<<8));
   538  0040  080F               	movf	15,w	;volatile
   539  0041  00AA               	movwf	_V+1
   540  0042  080E               	movf	14,w	;volatile
   541  0043  00A9               	movwf	_V
   542  0044                     l1099:
   543                           
   544                           ;esclavo.c: 118:         D = V/58;
   545  0044  303A               	movlw	58
   546  0045  00F3               	movwf	___awdiv@divisor
   547  0046  3000               	movlw	0
   548  0047  00F4               	movwf	___awdiv@divisor+1
   549  0048  082A               	movf	_V+1,w
   550  0049  00F6               	movwf	___awdiv@dividend+1
   551  004A  0829               	movf	_V,w
   552  004B  00F5               	movwf	___awdiv@dividend
   553  004C  120A  118A  2107  120A  118A  	fcall	___awdiv
   554  0051  0874               	movf	?___awdiv+1,w
   555  0052  1283               	bcf	3,5	;RP0=0, select bank0
   556  0053  1303               	bcf	3,6	;RP1=0, select bank0
   557  0054  00A8               	movwf	_D+1
   558  0055  0873               	movf	?___awdiv,w
   559  0056  00A7               	movwf	_D
   560  0057                     l1101:
   561                           
   562                           ;esclavo.c: 120:         if(D >= 20){
   563  0057  0828               	movf	_D+1,w
   564  0058  3A80               	xorlw	128
   565  0059  00FF               	movwf	btemp+1
   566  005A  3080               	movlw	128
   567  005B  027F               	subwf	btemp+1,w
   568  005C  1D03               	skipz
   569  005D  2860               	goto	u595
   570  005E  3014               	movlw	20
   571  005F  0227               	subwf	_D,w
   572  0060                     u595:
   573  0060  1C03               	skipc
   574  0061  2863               	goto	u591
   575  0062  2864               	goto	u590
   576  0063                     u591:
   577  0063  2868               	goto	l1107
   578  0064                     u590:
   579  0064                     l1103:
   580                           
   581                           ;esclavo.c: 121:             PORTBbits.RB6 = 0;
   582  0064  1283               	bcf	3,5	;RP0=0, select bank0
   583  0065  1303               	bcf	3,6	;RP1=0, select bank0
   584  0066  1306               	bcf	6,6	;volatile
   585  0067                     l1105:
   586                           
   587                           ;esclavo.c: 122:             i1 = 0;
   588  0067  01F7               	clrf	_i1
   589  0068                     l1107:
   590                           
   591                           ;esclavo.c: 124:         if(D < 20){
   592  0068  1283               	bcf	3,5	;RP0=0, select bank0
   593  0069  1303               	bcf	3,6	;RP1=0, select bank0
   594  006A  0828               	movf	_D+1,w
   595  006B  3A80               	xorlw	128
   596  006C  00FF               	movwf	btemp+1
   597  006D  3080               	movlw	128
   598  006E  027F               	subwf	btemp+1,w
   599  006F  1D03               	skipz
   600  0070  2873               	goto	u605
   601  0071  3014               	movlw	20
   602  0072  0227               	subwf	_D,w
   603  0073                     u605:
   604  0073  1803               	skipnc
   605  0074  2876               	goto	u601
   606  0075  2877               	goto	u600
   607  0076                     u601:
   608  0076  287C               	goto	l140
   609  0077                     u600:
   610  0077                     l1109:
   611                           
   612                           ;esclavo.c: 125:             PORTBbits.RB6 = 1;
   613  0077  1283               	bcf	3,5	;RP0=0, select bank0
   614  0078  1303               	bcf	3,6	;RP1=0, select bank0
   615  0079  1706               	bsf	6,6	;volatile
   616                           
   617                           ;esclavo.c: 126:             i1 = 1;
   618  007A  01F7               	clrf	_i1
   619  007B  0AF7               	incf	_i1,f
   620  007C                     l140:	
   621                           ;esclavo.c: 127:         }
   622                           
   623                           
   624                           ;esclavo.c: 128:         if(PORTAbits.RA2 == 1){
   625  007C  1283               	bcf	3,5	;RP0=0, select bank0
   626  007D  1303               	bcf	3,6	;RP1=0, select bank0
   627  007E  1D05               	btfss	5,2	;volatile
   628  007F  2881               	goto	u611
   629  0080  2882               	goto	u610
   630  0081                     u611:
   631  0081  2885               	goto	l141
   632  0082                     u610:
   633  0082                     l1111:
   634                           
   635                           ;esclavo.c: 129:             i0 = 1;
   636  0082  01F8               	clrf	_i0
   637  0083  0AF8               	incf	_i0,f
   638                           
   639                           ;esclavo.c: 130:             PORTBbits.RB7 = 1;
   640  0084  1786               	bsf	6,7	;volatile
   641  0085                     l141:	
   642                           ;esclavo.c: 132:         }
   643                           
   644                           
   645                           ;esclavo.c: 133:         if(PORTAbits.RA2 == 0){
   646  0085  1905               	btfsc	5,2	;volatile
   647  0086  2888               	goto	u621
   648  0087  2889               	goto	u620
   649  0088                     u621:
   650  0088  288B               	goto	l1117
   651  0089                     u620:
   652  0089                     l1113:
   653                           
   654                           ;esclavo.c: 134:             i0 = 0;
   655  0089  01F8               	clrf	_i0
   656  008A                     l1115:
   657                           
   658                           ;esclavo.c: 135:             PORTBbits.RB7 = 0;
   659  008A  1386               	bcf	6,7	;volatile
   660  008B                     l1117:
   661                           
   662                           ;esclavo.c: 137:        _delay((unsigned long)((50)*(4000000/4000.0)));
   663  008B  3041               	movlw	65
   664  008C  1283               	bcf	3,5	;RP0=0, select bank0
   665  008D  1303               	bcf	3,6	;RP1=0, select bank0
   666  008E  00A6               	movwf	??_main+1
   667  008F  30ED               	movlw	237
   668  0090  00A5               	movwf	??_main
   669  0091                     u647:
   670  0091  0BA5               	decfsz	??_main,f
   671  0092  2891               	goto	u647
   672  0093  0BA6               	decfsz	??_main+1,f
   673  0094  2891               	goto	u647
   674  0095  2896               	nop2
   675  0096  2827               	goto	l1087
   676  0097  120A  118A  280C   	ljmp	start
   677  009A                     __end_of_main:
   678                           
   679                           	psect	text1
   680  018A                     __ptext1:	
   681 ;; *************** function _setup *****************
   682 ;; Defined at:
   683 ;;		line 144 in file "esclavo.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;		None
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0, pclath, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       0       0       0       0
   698 ;;      Locals:         0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         0       0       0       0       0
   701 ;;Total ram usage:        0 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    2
   704 ;; This function calls:
   705 ;;		_I2C_Slave_Init
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           
   712                           ;psect for function _setup
   713  018A                     _setup:
   714  018A                     l947:	
   715                           ;incstack = 0
   716                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   717                           
   718                           
   719                           ;esclavo.c: 145:     ANSEL = 0;
   720  018A  1683               	bsf	3,5	;RP0=1, select bank3
   721  018B  1703               	bsf	3,6	;RP1=1, select bank3
   722  018C  0188               	clrf	8	;volatile
   723                           
   724                           ;esclavo.c: 146:     ANSELH = 0;
   725  018D  0189               	clrf	9	;volatile
   726  018E                     l949:
   727                           
   728                           ;esclavo.c: 148:     TRISAbits.TRISA0 = 0;
   729  018E  1683               	bsf	3,5	;RP0=1, select bank1
   730  018F  1303               	bcf	3,6	;RP1=0, select bank1
   731  0190  1005               	bcf	5,0	;volatile
   732  0191                     l951:
   733                           
   734                           ;esclavo.c: 149:     TRISAbits.TRISA1 = 1;
   735  0191  1485               	bsf	5,1	;volatile
   736  0192                     l953:
   737                           
   738                           ;esclavo.c: 150:     TRISAbits.TRISA2 = 1;
   739  0192  1505               	bsf	5,2	;volatile
   740                           
   741                           ;esclavo.c: 151:     TRISB = 0;
   742  0193  0186               	clrf	6	;volatile
   743                           
   744                           ;esclavo.c: 152:     PORTB = 0;
   745  0194  1283               	bcf	3,5	;RP0=0, select bank0
   746  0195  1303               	bcf	3,6	;RP1=0, select bank0
   747  0196  0186               	clrf	6	;volatile
   748  0197                     l955:
   749                           
   750                           ;esclavo.c: 153:     GIE = 1;
   751  0197  178B               	bsf	11,7	;volatile
   752  0198                     l957:
   753                           
   754                           ;esclavo.c: 155:     I2C_Slave_Init(0x50);
   755  0198  3050               	movlw	80
   756  0199  120A  118A  2170  120A  118A  	fcall	_I2C_Slave_Init
   757  019E                     l148:
   758  019E  0008               	return
   759  019F                     __end_of_setup:
   760                           
   761                           	psect	text2
   762  0170                     __ptext2:	
   763 ;; *************** function _I2C_Slave_Init *****************
   764 ;; Defined at:
   765 ;;		line 93 in file "I2C.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  address         1    wreg     unsigned char 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  address         1    3[COMMON] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         0       0       0       0       0
   780 ;;      Locals:         1       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         1       0       0       0       0
   783 ;;Total ram usage:        1 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_setup
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _I2C_Slave_Init
   795  0170                     _I2C_Slave_Init:
   796                           
   797                           ;incstack = 0
   798                           ; Regs used in _I2C_Slave_Init: [wreg]
   799                           ;I2C_Slave_Init@address stored from wreg
   800  0170  00F3               	movwf	I2C_Slave_Init@address
   801  0171                     l933:
   802                           
   803                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   804  0171  0873               	movf	I2C_Slave_Init@address,w
   805  0172  1683               	bsf	3,5	;RP0=1, select bank1
   806  0173  1303               	bcf	3,6	;RP1=0, select bank1
   807  0174  0093               	movwf	19	;volatile
   808                           
   809                           ;I2C.c: 96:     SSPCON = 0x36;
   810  0175  3036               	movlw	54
   811  0176  1283               	bcf	3,5	;RP0=0, select bank0
   812  0177  1303               	bcf	3,6	;RP1=0, select bank0
   813  0178  0094               	movwf	20	;volatile
   814                           
   815                           ;I2C.c: 97:     SSPSTAT = 0x80;
   816  0179  3080               	movlw	128
   817  017A  1683               	bsf	3,5	;RP0=1, select bank1
   818  017B  1303               	bcf	3,6	;RP1=0, select bank1
   819  017C  0094               	movwf	20	;volatile
   820                           
   821                           ;I2C.c: 98:     SSPCON2 = 0x01;
   822  017D  3001               	movlw	1
   823  017E  0091               	movwf	17	;volatile
   824  017F                     l935:
   825                           
   826                           ;I2C.c: 99:     TRISC3 = 1;
   827  017F  1587               	bsf	7,3	;volatile
   828  0180                     l937:
   829                           
   830                           ;I2C.c: 100:     TRISC4 = 1;
   831  0180  1607               	bsf	7,4	;volatile
   832  0181                     l939:
   833                           
   834                           ;I2C.c: 101:     GIE = 1;
   835  0181  178B               	bsf	11,7	;volatile
   836  0182                     l941:
   837                           
   838                           ;I2C.c: 102:     PEIE = 1;
   839  0182  170B               	bsf	11,6	;volatile
   840  0183                     l943:
   841                           
   842                           ;I2C.c: 103:     SSPIF = 0;
   843  0183  1283               	bcf	3,5	;RP0=0, select bank0
   844  0184  1303               	bcf	3,6	;RP1=0, select bank0
   845  0185  118C               	bcf	12,3	;volatile
   846  0186                     l945:
   847                           
   848                           ;I2C.c: 104:     SSPIE = 1;
   849  0186  1683               	bsf	3,5	;RP0=1, select bank1
   850  0187  1303               	bcf	3,6	;RP1=0, select bank1
   851  0188  158C               	bsf	12,3	;volatile
   852  0189                     l55:
   853  0189  0008               	return
   854  018A                     __end_of_I2C_Slave_Init:
   855                           
   856                           	psect	text3
   857  019F                     __ptext3:	
   858 ;; *************** function _cfg_clk *****************
   859 ;; Defined at:
   860 ;;		line 157 in file "esclavo.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0
   877 ;;      Totals:         0       0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    1
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _cfg_clk
   890  019F                     _cfg_clk:
   891  019F                     l959:	
   892                           ;incstack = 0
   893                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
   894                           
   895                           
   896                           ;esclavo.c: 158:     OSCCONbits.IRCF = 0b110;
   897  019F  1683               	bsf	3,5	;RP0=1, select bank1
   898  01A0  1303               	bcf	3,6	;RP1=0, select bank1
   899  01A1  080F               	movf	15,w	;volatile
   900  01A2  398F               	andlw	-113
   901  01A3  3860               	iorlw	96
   902  01A4  008F               	movwf	15	;volatile
   903  01A5                     l961:
   904                           
   905                           ;esclavo.c: 159:     OSCCONbits.SCS = 1;
   906  01A5  140F               	bsf	15,0	;volatile
   907  01A6                     l151:
   908  01A6  0008               	return
   909  01A7                     __end_of_cfg_clk:
   910                           
   911                           	psect	text4
   912  0107                     __ptext4:	
   913 ;; *************** function ___awdiv *****************
   914 ;; Defined at:
   915 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  divisor         2    3[COMMON] int 
   918 ;;  dividend        2    5[COMMON] int 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  quotient        2    3[BANK0 ] int 
   921 ;;  sign            1    2[BANK0 ] unsigned char 
   922 ;;  counter         1    1[BANK0 ] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  2    3[COMMON] int 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         4       0       0       0       0
   933 ;;      Locals:         0       4       0       0       0
   934 ;;      Temps:          0       1       0       0       0
   935 ;;      Totals:         4       5       0       0       0
   936 ;;Total ram usage:        9 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    1
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function ___awdiv
   948  0107                     ___awdiv:
   949  0107                     l1041:	
   950                           ;incstack = 0
   951                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   952                           
   953  0107  1283               	bcf	3,5	;RP0=0, select bank0
   954  0108  1303               	bcf	3,6	;RP1=0, select bank0
   955  0109  01A2               	clrf	___awdiv@sign
   956  010A                     l1043:
   957  010A  1FF4               	btfss	___awdiv@divisor+1,7
   958  010B  290D               	goto	u471
   959  010C  290E               	goto	u470
   960  010D                     u471:
   961  010D  2915               	goto	l1049
   962  010E                     u470:
   963  010E                     l1045:
   964  010E  09F3               	comf	___awdiv@divisor,f
   965  010F  09F4               	comf	___awdiv@divisor+1,f
   966  0110  0AF3               	incf	___awdiv@divisor,f
   967  0111  1903               	skipnz
   968  0112  0AF4               	incf	___awdiv@divisor+1,f
   969  0113                     l1047:
   970  0113  01A2               	clrf	___awdiv@sign
   971  0114  0AA2               	incf	___awdiv@sign,f
   972  0115                     l1049:
   973  0115  1FF6               	btfss	___awdiv@dividend+1,7
   974  0116  2918               	goto	u481
   975  0117  2919               	goto	u480
   976  0118                     u481:
   977  0118  2922               	goto	l1055
   978  0119                     u480:
   979  0119                     l1051:
   980  0119  09F5               	comf	___awdiv@dividend,f
   981  011A  09F6               	comf	___awdiv@dividend+1,f
   982  011B  0AF5               	incf	___awdiv@dividend,f
   983  011C  1903               	skipnz
   984  011D  0AF6               	incf	___awdiv@dividend+1,f
   985  011E                     l1053:
   986  011E  3001               	movlw	1
   987  011F  00A0               	movwf	??___awdiv
   988  0120  0820               	movf	??___awdiv,w
   989  0121  06A2               	xorwf	___awdiv@sign,f
   990  0122                     l1055:
   991  0122  01A3               	clrf	___awdiv@quotient
   992  0123  01A4               	clrf	___awdiv@quotient+1
   993  0124                     l1057:
   994  0124  0873               	movf	___awdiv@divisor,w
   995  0125  0474               	iorwf	___awdiv@divisor+1,w
   996  0126  1903               	btfsc	3,2
   997  0127  2929               	goto	u491
   998  0128  292A               	goto	u490
   999  0129                     u491:
  1000  0129  2961               	goto	l1077
  1001  012A                     u490:
  1002  012A                     l1059:
  1003  012A  01A1               	clrf	___awdiv@counter
  1004  012B  0AA1               	incf	___awdiv@counter,f
  1005  012C  2938               	goto	l1065
  1006  012D                     l1061:
  1007  012D  3001               	movlw	1
  1008  012E                     u505:
  1009  012E  1003               	clrc
  1010  012F  0DF3               	rlf	___awdiv@divisor,f
  1011  0130  0DF4               	rlf	___awdiv@divisor+1,f
  1012  0131  3EFF               	addlw	-1
  1013  0132  1D03               	skipz
  1014  0133  292E               	goto	u505
  1015  0134                     l1063:
  1016  0134  3001               	movlw	1
  1017  0135  00A0               	movwf	??___awdiv
  1018  0136  0820               	movf	??___awdiv,w
  1019  0137  07A1               	addwf	___awdiv@counter,f
  1020  0138                     l1065:
  1021  0138  1FF4               	btfss	___awdiv@divisor+1,7
  1022  0139  293B               	goto	u511
  1023  013A  293C               	goto	u510
  1024  013B                     u511:
  1025  013B  292D               	goto	l1061
  1026  013C                     u510:
  1027  013C                     l1067:
  1028  013C  3001               	movlw	1
  1029  013D                     u525:
  1030  013D  1003               	clrc
  1031  013E  0DA3               	rlf	___awdiv@quotient,f
  1032  013F  0DA4               	rlf	___awdiv@quotient+1,f
  1033  0140  3EFF               	addlw	-1
  1034  0141  1D03               	skipz
  1035  0142  293D               	goto	u525
  1036  0143  0874               	movf	___awdiv@divisor+1,w
  1037  0144  0276               	subwf	___awdiv@dividend+1,w
  1038  0145  1D03               	skipz
  1039  0146  2949               	goto	u535
  1040  0147  0873               	movf	___awdiv@divisor,w
  1041  0148  0275               	subwf	___awdiv@dividend,w
  1042  0149                     u535:
  1043  0149  1C03               	skipc
  1044  014A  294C               	goto	u531
  1045  014B  294D               	goto	u530
  1046  014C                     u531:
  1047  014C  2954               	goto	l1073
  1048  014D                     u530:
  1049  014D                     l1069:
  1050  014D  0873               	movf	___awdiv@divisor,w
  1051  014E  02F5               	subwf	___awdiv@dividend,f
  1052  014F  0874               	movf	___awdiv@divisor+1,w
  1053  0150  1C03               	skipc
  1054  0151  03F6               	decf	___awdiv@dividend+1,f
  1055  0152  02F6               	subwf	___awdiv@dividend+1,f
  1056  0153                     l1071:
  1057  0153  1423               	bsf	___awdiv@quotient,0
  1058  0154                     l1073:
  1059  0154  3001               	movlw	1
  1060  0155                     u545:
  1061  0155  1003               	clrc
  1062  0156  0CF4               	rrf	___awdiv@divisor+1,f
  1063  0157  0CF3               	rrf	___awdiv@divisor,f
  1064  0158  3EFF               	addlw	-1
  1065  0159  1D03               	skipz
  1066  015A  2955               	goto	u545
  1067  015B                     l1075:
  1068  015B  3001               	movlw	1
  1069  015C  02A1               	subwf	___awdiv@counter,f
  1070  015D  1D03               	btfss	3,2
  1071  015E  2960               	goto	u551
  1072  015F  2961               	goto	u550
  1073  0160                     u551:
  1074  0160  293C               	goto	l1067
  1075  0161                     u550:
  1076  0161                     l1077:
  1077  0161  0822               	movf	___awdiv@sign,w
  1078  0162  1903               	btfsc	3,2
  1079  0163  2965               	goto	u561
  1080  0164  2966               	goto	u560
  1081  0165                     u561:
  1082  0165  296B               	goto	l1081
  1083  0166                     u560:
  1084  0166                     l1079:
  1085  0166  09A3               	comf	___awdiv@quotient,f
  1086  0167  09A4               	comf	___awdiv@quotient+1,f
  1087  0168  0AA3               	incf	___awdiv@quotient,f
  1088  0169  1903               	skipnz
  1089  016A  0AA4               	incf	___awdiv@quotient+1,f
  1090  016B                     l1081:
  1091  016B  0824               	movf	___awdiv@quotient+1,w
  1092  016C  00F4               	movwf	?___awdiv+1
  1093  016D  0823               	movf	___awdiv@quotient,w
  1094  016E  00F3               	movwf	?___awdiv
  1095  016F                     l390:
  1096  016F  0008               	return
  1097  0170                     __end_of___awdiv:
  1098                           
  1099                           	psect	text5
  1100  009A                     __ptext5:	
  1101 ;; *************** function _isr *****************
  1102 ;; Defined at:
  1103 ;;		line 58 in file "esclavo.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1117 ;;      Params:         0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0
  1119 ;;      Temps:          3       0       0       0       0
  1120 ;;      Totals:         3       0       0       0       0
  1121 ;;Total ram usage:        3 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		Interrupt level 1
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           
  1131                           ;psect for function _isr
  1132  009A                     _isr:
  1133  009A                     i1l861:
  1134                           
  1135                           ;esclavo.c: 59:    if(PIR1bits.SSPIF == 1){
  1136  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1137  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1138  009C  1D8C               	btfss	12,3	;volatile
  1139  009D  289F               	goto	u15_21
  1140  009E  28A0               	goto	u15_20
  1141  009F                     u15_21:
  1142  009F  2900               	goto	i1l127
  1143  00A0                     u15_20:
  1144  00A0                     i1l863:
  1145                           
  1146                           ;esclavo.c: 61:         SSPCONbits.CKP = 0;
  1147  00A0  1214               	bcf	20,4	;volatile
  1148                           
  1149                           ;esclavo.c: 63:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1150  00A1  1B14               	btfsc	20,6	;volatile
  1151  00A2  28A4               	goto	u16_21
  1152  00A3  28A5               	goto	u16_20
  1153  00A4                     u16_21:
  1154  00A4  28A9               	goto	i1l867
  1155  00A5                     u16_20:
  1156  00A5                     i1l865:
  1157  00A5  1F94               	btfss	20,7	;volatile
  1158  00A6  28A8               	goto	u17_21
  1159  00A7  28A9               	goto	u17_20
  1160  00A8                     u17_21:
  1161  00A8  28B0               	goto	i1l875
  1162  00A9                     u17_20:
  1163  00A9                     i1l867:
  1164                           
  1165                           ;esclavo.c: 64:             z = SSPBUF;
  1166  00A9  0813               	movf	19,w	;volatile
  1167  00AA  00F0               	movwf	??_isr
  1168  00AB  0870               	movf	??_isr,w
  1169  00AC  00FA               	movwf	_z
  1170  00AD                     i1l869:
  1171                           
  1172                           ;esclavo.c: 65:             SSPCONbits.SSPOV = 0;
  1173  00AD  1314               	bcf	20,6	;volatile
  1174  00AE                     i1l871:
  1175                           
  1176                           ;esclavo.c: 66:             SSPCONbits.WCOL = 0;
  1177  00AE  1394               	bcf	20,7	;volatile
  1178  00AF                     i1l873:
  1179                           
  1180                           ;esclavo.c: 67:             SSPCONbits.CKP = 1;
  1181  00AF  1614               	bsf	20,4	;volatile
  1182  00B0                     i1l875:
  1183                           
  1184                           ;esclavo.c: 70:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1185  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  1186  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  1187  00B2  1A94               	btfsc	20,5	;volatile
  1188  00B3  28B5               	goto	u18_21
  1189  00B4  28B6               	goto	u18_20
  1190  00B5                     u18_21:
  1191  00B5  28D3               	goto	i1l118
  1192  00B6                     u18_20:
  1193  00B6                     i1l877:
  1194  00B6  1914               	btfsc	20,2	;volatile
  1195  00B7  28B9               	goto	u19_21
  1196  00B8  28BA               	goto	u19_20
  1197  00B9                     u19_21:
  1198  00B9  28D3               	goto	i1l118
  1199  00BA                     u19_20:
  1200  00BA                     i1l879:
  1201                           
  1202                           ;esclavo.c: 72:             z = SSPBUF;
  1203  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1204  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1205  00BC  0813               	movf	19,w	;volatile
  1206  00BD  00F0               	movwf	??_isr
  1207  00BE  0870               	movf	??_isr,w
  1208  00BF  00FA               	movwf	_z
  1209  00C0                     i1l881:
  1210                           
  1211                           ;esclavo.c: 74:             PIR1bits.SSPIF = 0;
  1212  00C0  118C               	bcf	12,3	;volatile
  1213  00C1                     i1l883:
  1214                           
  1215                           ;esclavo.c: 75:             SSPCONbits.CKP = 1;
  1216  00C1  1614               	bsf	20,4	;volatile
  1217  00C2                     i1l119:	
  1218                           ;esclavo.c: 76:             while(!SSPSTATbits.BF);
  1219                           
  1220  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  1221  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  1222  00C4  1C14               	btfss	20,0	;volatile
  1223  00C5  28C7               	goto	u20_21
  1224  00C6  28C8               	goto	u20_20
  1225  00C7                     u20_21:
  1226  00C7  28C2               	goto	i1l119
  1227  00C8                     u20_20:
  1228  00C8                     i1l885:
  1229                           
  1230                           ;esclavo.c: 77:             dato = SSPBUF;
  1231  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1232  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1233  00CA  0813               	movf	19,w	;volatile
  1234  00CB  00F0               	movwf	??_isr
  1235  00CC  0870               	movf	??_isr,w
  1236  00CD  00F9               	movwf	_dato
  1237                           
  1238                           ;esclavo.c: 78:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1239  00CE  3053               	movlw	83
  1240  00CF  00F0               	movwf	??_isr
  1241  00D0                     u65_27:
  1242  00D0  0BF0               	decfsz	??_isr,f
  1243  00D1  28D0               	goto	u65_27
  1244                           
  1245                           ;esclavo.c: 80:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1246  00D2  28FD               	goto	i1l122
  1247  00D3                     i1l118:
  1248  00D3  1A94               	btfsc	20,5	;volatile
  1249  00D4  28D6               	goto	u21_21
  1250  00D5  28D7               	goto	u21_20
  1251  00D6                     u21_21:
  1252  00D6  28FD               	goto	i1l122
  1253  00D7                     u21_20:
  1254  00D7                     i1l887:
  1255  00D7  1D14               	btfss	20,2	;volatile
  1256  00D8  28DA               	goto	u22_21
  1257  00D9  28DB               	goto	u22_20
  1258  00DA                     u22_21:
  1259  00DA  28FD               	goto	i1l122
  1260  00DB                     u22_20:
  1261  00DB                     i1l889:
  1262                           
  1263                           ;esclavo.c: 81:             z = SSPBUF;
  1264  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1265  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1266  00DD  0813               	movf	19,w	;volatile
  1267  00DE  00F0               	movwf	??_isr
  1268  00DF  0870               	movf	??_isr,w
  1269  00E0  00FA               	movwf	_z
  1270  00E1                     i1l891:
  1271                           
  1272                           ;esclavo.c: 82:             BF = 0;
  1273  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1274  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1275  00E3  1014               	bcf	20,0	;volatile
  1276  00E4                     i1l893:
  1277                           
  1278                           ;esclavo.c: 83:             SSPBUF = (i0 | (i1<<4));;
  1279  00E4  0877               	movf	_i1,w
  1280  00E5  00F0               	movwf	??_isr
  1281  00E6  3003               	movlw	3
  1282  00E7                     u23_25:
  1283  00E7  1003               	clrc
  1284  00E8  0DF0               	rlf	??_isr,f
  1285  00E9  3EFF               	addlw	-1
  1286  00EA  1D03               	skipz
  1287  00EB  28E7               	goto	u23_25
  1288  00EC  1003               	clrc
  1289  00ED  0D70               	rlf	??_isr,w
  1290  00EE  0478               	iorwf	_i0,w
  1291  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1292  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1293  00F1  0093               	movwf	19	;volatile
  1294  00F2                     i1l895:
  1295                           
  1296                           ;esclavo.c: 84:             SSPCONbits.CKP = 1;
  1297  00F2  1614               	bsf	20,4	;volatile
  1298  00F3                     i1l897:
  1299                           
  1300                           ;esclavo.c: 85:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1301  00F3  3053               	movlw	83
  1302  00F4  00F0               	movwf	??_isr
  1303  00F5                     u66_27:
  1304  00F5  0BF0               	decfsz	??_isr,f
  1305  00F6  28F5               	goto	u66_27
  1306  00F7                     i1l124:	
  1307                           ;esclavo.c: 86:             while(SSPSTATbits.BF);
  1308                           
  1309  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  1310  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  1311  00F9  1814               	btfsc	20,0	;volatile
  1312  00FA  28FC               	goto	u24_21
  1313  00FB  28FD               	goto	u24_20
  1314  00FC                     u24_21:
  1315  00FC  28F7               	goto	i1l124
  1316  00FD                     u24_20:
  1317  00FD                     i1l122:
  1318                           
  1319                           ;esclavo.c: 89:         PIR1bits.SSPIF = 0;
  1320  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1321  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1322  00FF  118C               	bcf	12,3	;volatile
  1323  0100                     i1l127:
  1324  0100  0872               	movf	??_isr+2,w
  1325  0101  008A               	movwf	10
  1326  0102  0E71               	swapf	??_isr+1,w
  1327  0103  0083               	movwf	3
  1328  0104  0EFE               	swapf	btemp,f
  1329  0105  0E7E               	swapf	btemp,w
  1330  0106  0009               	retfie
  1331  0107                     __end_of_isr:
  1332  007E                     btemp	set	126	;btemp
  1333  007E                     wtemp0	set	126
  1334                           
  1335                           	psect	intentry
  1336  0004                     __pintentry:	
  1337                           ;incstack = 0
  1338                           ; Regs used in _isr: [wreg+status,2+status,0]
  1339                           
  1340  0004                     interrupt_function:
  1341  007E                     saved_w	set	btemp
  1342  0004  00FE               	movwf	btemp
  1343  0005  0E03               	swapf	3,w
  1344  0006  00F1               	movwf	??_isr+1
  1345  0007  080A               	movf	10,w
  1346  0008  00F2               	movwf	??_isr+2
  1347  0009  120A  118A  289A   	ljmp	_isr
  1348                           
  1349                           	psect	config
  1350                           
  1351                           ;Config register CONFIG1 @ 0x2007
  1352                           ;	Oscillator Selection bits
  1353                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1354                           ;	Watchdog Timer Enable bit
  1355                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1356                           ;	Power-up Timer Enable bit
  1357                           ;	PWRTE = OFF, PWRT disabled
  1358                           ;	RE3/MCLR pin function select bit
  1359                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1360                           ;	Code Protection bit
  1361                           ;	CP = OFF, Program memory code protection is disabled
  1362                           ;	Data Code Protection bit
  1363                           ;	CPD = OFF, Data memory code protection is disabled
  1364                           ;	Brown Out Reset Selection bits
  1365                           ;	BOREN = OFF, BOR disabled
  1366                           ;	Internal External Switchover bit
  1367                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1368                           ;	Fail-Safe Clock Monitor Enabled bit
  1369                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1370                           ;	Low Voltage Programming Enable bit
  1371                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1372                           ;	In-Circuit Debugger Mode bit
  1373                           ;	DEBUG = 0x1, unprogrammed default
  1374  2007                     	org	8199
  1375  2007  20D4               	dw	8404
  1376                           
  1377                           ;Config register CONFIG2 @ 0x2008
  1378                           ;	Brown-out Reset Selection bit
  1379                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1380                           ;	Flash Program Memory Self Write Enable bits
  1381                           ;	WRT = OFF, Write protection off
  1382  2008                     	org	8200
  1383  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      7      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     647
                                              5 BANK0      2     2      0
                            ___awdiv
                            _cfg_clk
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     625
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _cfg_clk
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Sep 01 12:54:48 2021

                      _D 0027                        _V 0029                        _z 007A  
            _SSPSTATbits 0094                       _BF 04A0                       l55 0189  
                     _i0 0078                       _i1 0077             ___awdiv@sign 0022  
                    l140 007C                      l141 0085                      l133 0036  
                    l151 01A6                      l135 003A                      l136 003B  
                    l138 003F                      l148 019E                      l390 016F  
                    l941 0182                      l933 0171                      l943 0183  
                    l935 017F                      l951 0191                      l961 01A5  
                    l945 0186                      l937 0180                      l953 0192  
                    l939 0181                      l955 0197                      l947 018A  
                    l957 0198                      l949 018E                      l959 019F  
                    _GIE 005F                      u510 013C                      u511 013B  
                    u600 0077                      u505 012E                      u601 0076  
                    u530 014D                      u610 0082                      u531 014C  
                    u611 0081                      u620 0089                      u525 013D  
                    u621 0088                      u605 0073                      u550 0161  
                    u470 010E                      u551 0160                      u535 0149  
                    u471 010D                      u560 0166                      u480 0119  
                    u561 0165                      u545 0155                      u481 0118  
                    u490 012A                      u570 003A                      u491 0129  
                    u571 0039                      u580 003F                      u581 003E  
                    u637 0030                      u590 0064                      u647 0091  
                    u591 0063                      u595 0060                      _isr 009A  
                   l1101 0057                     l1111 0082                     l1103 0064  
                   l1041 0107                     l1113 0089                     l1105 0067  
                   l1051 0119                     l1043 010A                     l1115 008A  
                   l1107 0068                     l1061 012D                     l1053 011E  
                   l1045 010E                     l1117 008B                     l1109 0077  
                   l1071 0153                     l1063 0134                     l1055 0122  
                   l1047 0113                     l1081 016B                     l1073 0154  
                   l1065 0138                     l1057 0124                     l1049 0115  
                   l1075 015B                     l1067 013C                     l1059 012A  
                   l1091 002B                     l1069 014D                     l1077 0161  
                   l1093 002C                     l1085 001D                     l1079 0166  
                   l1095 0033                     l1087 0027                     l1097 0040  
                   l1089 002A                     l1099 0044                     ?_isr 0070  
                   _PEIE 005E                     _dato 0079                     _main 001D  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 0170                    _ANSEL 0188  
        ___awdiv@divisor 0073                    i1l122 00FD                    i1l124 00F7  
                  i1l118 00D3                    i1l119 00C2                    i1l127 0100  
                  i1l861 009A                    i1l871 00AE                    i1l863 00A0  
                  i1l881 00C0                    i1l873 00AF                    i1l865 00A5  
                  i1l891 00E1                    i1l883 00C1                    i1l875 00B0  
                  i1l867 00A9                    i1l893 00E4                    i1l885 00C8  
                  i1l877 00B6                    i1l869 00AD                    i1l895 00F2  
                  i1l887 00D7                    i1l879 00BA                    i1l897 00F3  
                  i1l889 00DB          ___awdiv@counter 0021                    u20_20 00C8  
                  u20_21 00C7                    u21_20 00D7                    u21_21 00D6  
                  u22_20 00DB                    u22_21 00DA                    u15_20 00A0  
                  u15_21 009F                    u23_25 00E7                    u24_20 00FD  
                  u16_20 00A5                    u24_21 00FC                    u16_21 00A4  
                  u17_20 00A9                    u17_21 00A8                    _TMR1H 000F  
                  _TMR1L 000E                    u18_20 00B6                    u18_21 00B5  
                  u19_20 00BA                    u19_21 00B9                    _PORTB 0006  
        __end_of_cfg_clk 01A7                    _TRISB 0086                    u65_27 00D0  
                  _SSPIE 0463                    _SSPIF 0063                    u66_27 00F5  
                  _setup 018A                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 009A  
                 ??_main 0025         ___awdiv@dividend 0075                   ?_setup 0070  
                 _ANSELH 0189                   _TMR1ON 0080                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPCON 0014  
                 _SSPBUF 0013                ??___awdiv 0020                ??_cfg_clk 0073  
       ___awdiv@quotient 0023                   saved_w 007E  __end_of__initialization 0019  
         __pcstackCOMMON 0070  __size_of_I2C_Slave_Init 001A            __end_of_setup 019F  
                ??_setup 0074    I2C_Slave_Init@address 0073               __pbssBANK0 0027  
             __pmaintext 001D               __pintentry 0004                  _SSPCON2 0091  
                _SSPSTAT 0094                  ___awdiv 0107                  _cfg_clk 019F  
                __ptext1 018A                  __ptext2 0170                  __ptext3 019F  
                __ptext4 0107                  __ptext5 009A             __size_of_isr 006D  
   end_of_initialization 0019           _I2C_Slave_Init 0170                _PORTAbits 0005  
              _PORTBbits 0006                _TRISAbits 0085                _TRISCbits 0087  
 __end_of_I2C_Slave_Init 018A      start_initialization 000F              __end_of_isr 0107  
        ?_I2C_Slave_Init 0070              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0073                 ?_cfg_clk 0070  
         __size_of_setup 0015        interrupt_function 0004                 _PIR1bits 000C  
       __size_of___awdiv 0069         __size_of_cfg_clk 0008         ??_I2C_Slave_Init 0073  
          __size_of_main 007D                 intlevel1 0000               _OSCCONbits 008F  
            _SSPCON2bits 0091               _SSPCONbits 0014  

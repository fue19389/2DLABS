

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Sep 01 17:57:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0009                     _PORTE	set	9
   288  0008                     _PORTD	set	8
   289  0007                     _PORTC	set	7
   290  0006                     _PORTB	set	6
   291  0005                     _PORTA	set	5
   292  0005                     _PORTAbits	set	5
   293  000E                     _TMR1L	set	14
   294  000F                     _TMR1H	set	15
   295  0014                     _SSPCONbits	set	20
   296  000C                     _PIR1bits	set	12
   297  0013                     _SSPBUF	set	19
   298  0014                     _SSPCON	set	20
   299  0080                     _TMR1ON	set	128
   300  0063                     _SSPIF	set	99
   301  005E                     _PEIE	set	94
   302  005F                     _GIE	set	95
   303  008F                     _OSCCONbits	set	143
   304  0088                     _TRISD	set	136
   305  0085                     _TRISA	set	133
   306  0089                     _TRISE	set	137
   307  0087                     _TRISC	set	135
   308  0086                     _TRISB	set	134
   309  0094                     _SSPSTATbits	set	148
   310  0091                     _SSPCON2bits	set	145
   311  0087                     _TRISCbits	set	135
   312  0094                     _SSPSTAT	set	148
   313  0093                     _SSPADD	set	147
   314  0091                     _SSPCON2	set	145
   315  04A0                     _BF	set	1184
   316  0463                     _SSPIE	set	1123
   317  043C                     _TRISC4	set	1084
   318  043B                     _TRISC3	set	1083
   319  0189                     _ANSELH	set	393
   320  0188                     _ANSEL	set	392
   321                           
   322                           	psect	cinit
   323  000F                     start_initialization:	
   324                           ; #config settings
   325                           
   326  000F                     __initialization:
   327                           
   328                           ; Clear objects allocated to COMMON
   329  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   330  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   331  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   332  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   333                           
   334                           ; Clear objects allocated to BANK0
   335  0013  1283               	bcf	3,5	;RP0=0, select bank0
   336  0014  1303               	bcf	3,6	;RP1=0, select bank0
   337  0015  01A7               	clrf	__pbssBANK0& (0+127)
   338  0016  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   339  0017  01A9               	clrf	(__pbssBANK0+2)& (0+127)
   340  0018  01AA               	clrf	(__pbssBANK0+3)& (0+127)
   341  0019                     end_of_initialization:	
   342                           ;End of C runtime variable initialization code
   343                           
   344  0019                     __end_of__initialization:
   345  0019  0183               	clrf	3
   346  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   347                           
   348                           	psect	bssCOMMON
   349  0077                     __pbssCOMMON:
   350  0077                     _i1:
   351  0077                     	ds	1
   352  0078                     _i0:
   353  0078                     	ds	1
   354  0079                     _dato:
   355  0079                     	ds	1
   356  007A                     _z:
   357  007A                     	ds	1
   358                           
   359                           	psect	bssBANK0
   360  0027                     __pbssBANK0:
   361  0027                     _D:
   362  0027                     	ds	2
   363  0029                     _V:
   364  0029                     	ds	2
   365                           
   366                           	psect	cstackCOMMON
   367  0070                     __pcstackCOMMON:
   368  0070                     ?_setup:
   369  0070                     ?_cfg_clk:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_I2C_Slave_Init:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_isr:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ??_isr:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_main:	
   382                           ; 1 bytes @ 0x0
   383                           
   384                           
   385                           ; 1 bytes @ 0x0
   386  0070                     	ds	3
   387  0073                     ??_cfg_clk:
   388  0073                     ??_I2C_Slave_Init:	
   389                           ; 1 bytes @ 0x3
   390                           
   391  0073                     ?___awdiv:	
   392                           ; 1 bytes @ 0x3
   393                           
   394  0073                     I2C_Slave_Init@address:	
   395                           ; 2 bytes @ 0x3
   396                           
   397  0073                     ___awdiv@divisor:	
   398                           ; 1 bytes @ 0x3
   399                           
   400                           
   401                           ; 2 bytes @ 0x3
   402  0073                     	ds	1
   403  0074                     ??_setup:
   404                           
   405                           ; 1 bytes @ 0x4
   406  0074                     	ds	1
   407  0075                     ___awdiv@dividend:
   408                           
   409                           ; 2 bytes @ 0x5
   410  0075                     	ds	2
   411                           
   412                           	psect	cstackBANK0
   413  0020                     __pcstackBANK0:
   414  0020                     ??___awdiv:
   415                           
   416                           ; 1 bytes @ 0x0
   417  0020                     	ds	1
   418  0021                     ___awdiv@counter:
   419                           
   420                           ; 1 bytes @ 0x1
   421  0021                     	ds	1
   422  0022                     ___awdiv@sign:
   423                           
   424                           ; 1 bytes @ 0x2
   425  0022                     	ds	1
   426  0023                     ___awdiv@quotient:
   427                           
   428                           ; 2 bytes @ 0x3
   429  0023                     	ds	2
   430  0025                     ??_main:
   431                           
   432                           ; 1 bytes @ 0x5
   433  0025                     	ds	2
   434                           
   435                           	psect	maintext
   436  001D                     __pmaintext:	
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 97 in file "esclavo.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : B00/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   456 ;;      Params:         0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0
   458 ;;      Temps:          0       2       0       0       0
   459 ;;      Totals:         0       2       0       0       0
   460 ;;Total ram usage:        2 bytes
   461 ;; Hardware stack levels required when called:    3
   462 ;; This function calls:
   463 ;;		___awdiv
   464 ;;		_cfg_clk
   465 ;;		_setup
   466 ;; This function is called by:
   467 ;;		Startup code after reset
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           
   472                           ;psect for function _main
   473  001D                     _main:
   474  001D                     l1099:	
   475                           ;incstack = 0
   476                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   477                           
   478                           
   479                           ;esclavo.c: 98:     setup();
   480  001D  120A  118A  2168  120A  118A  	fcall	_setup
   481                           
   482                           ;esclavo.c: 99:     cfg_clk();
   483  0022  120A  118A  219C  120A  118A  	fcall	_cfg_clk
   484  0027                     l1101:
   485                           
   486                           ;esclavo.c: 106:         TMR1H = 0;
   487  0027  1283               	bcf	3,5	;RP0=0, select bank0
   488  0028  1303               	bcf	3,6	;RP1=0, select bank0
   489  0029  018F               	clrf	15	;volatile
   490  002A                     l1103:
   491                           
   492                           ;esclavo.c: 107:         TMR1L = 0;
   493  002A  018E               	clrf	14	;volatile
   494  002B                     l1105:
   495                           
   496                           ;esclavo.c: 109:         PORTAbits.RA0 = 1;
   497  002B  1405               	bsf	5,0	;volatile
   498  002C                     l1107:
   499                           
   500                           ;esclavo.c: 110:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   501  002C  3002               	movlw	2
   502  002D  1283               	bcf	3,5	;RP0=0, select bank0
   503  002E  1303               	bcf	3,6	;RP1=0, select bank0
   504  002F  00A5               	movwf	??_main
   505  0030                     u637:
   506  0030  0BA5               	decfsz	??_main,f
   507  0031  2830               	goto	u637
   508  0032  0000               	nop
   509  0033                     l1109:
   510                           
   511                           ;esclavo.c: 111:         PORTAbits.RA0 = 0;
   512  0033  1283               	bcf	3,5	;RP0=0, select bank0
   513  0034  1303               	bcf	3,6	;RP1=0, select bank0
   514  0035  1005               	bcf	5,0	;volatile
   515  0036                     l143:	
   516                           ;esclavo.c: 114:         while(!PORTAbits.RA1);
   517                           
   518  0036  1C85               	btfss	5,1	;volatile
   519  0037  2839               	goto	u571
   520  0038  283A               	goto	u570
   521  0039                     u571:
   522  0039  2836               	goto	l143
   523  003A                     u570:
   524  003A                     l145:
   525                           
   526                           ;esclavo.c: 115:         TMR1ON = 1;
   527  003A  1410               	bsf	16,0	;volatile
   528  003B                     l146:	
   529                           ;esclavo.c: 116:         while(PORTAbits.RA1);
   530                           
   531  003B  1885               	btfsc	5,1	;volatile
   532  003C  283E               	goto	u581
   533  003D  283F               	goto	u580
   534  003E                     u581:
   535  003E  283B               	goto	l146
   536  003F                     u580:
   537  003F                     l148:
   538                           
   539                           ;esclavo.c: 117:         TMR1ON = 0;
   540  003F  1010               	bcf	16,0	;volatile
   541  0040                     l1111:
   542                           
   543                           ;esclavo.c: 119:         V = (TMR1L | (TMR1H<<8));
   544  0040  080F               	movf	15,w	;volatile
   545  0041  00AA               	movwf	_V+1
   546  0042  080E               	movf	14,w	;volatile
   547  0043  00A9               	movwf	_V
   548  0044                     l1113:
   549                           
   550                           ;esclavo.c: 120:         D = V/58;
   551  0044  303A               	movlw	58
   552  0045  00F3               	movwf	___awdiv@divisor
   553  0046  3000               	movlw	0
   554  0047  00F4               	movwf	___awdiv@divisor+1
   555  0048  082A               	movf	_V+1,w
   556  0049  00F6               	movwf	___awdiv@dividend+1
   557  004A  0829               	movf	_V,w
   558  004B  00F5               	movwf	___awdiv@dividend
   559  004C  120A  118A  20FF  120A  118A  	fcall	___awdiv
   560  0051  0874               	movf	?___awdiv+1,w
   561  0052  1283               	bcf	3,5	;RP0=0, select bank0
   562  0053  1303               	bcf	3,6	;RP1=0, select bank0
   563  0054  00A8               	movwf	_D+1
   564  0055  0873               	movf	?___awdiv,w
   565  0056  00A7               	movwf	_D
   566  0057                     l1115:
   567                           
   568                           ;esclavo.c: 122:         if(D >= 10){
   569  0057  0828               	movf	_D+1,w
   570  0058  3A80               	xorlw	128
   571  0059  00FF               	movwf	btemp+1
   572  005A  3080               	movlw	128
   573  005B  027F               	subwf	btemp+1,w
   574  005C  1D03               	skipz
   575  005D  2860               	goto	u595
   576  005E  300A               	movlw	10
   577  005F  0227               	subwf	_D,w
   578  0060                     u595:
   579  0060  1C03               	skipc
   580  0061  2863               	goto	u591
   581  0062  2864               	goto	u590
   582  0063                     u591:
   583  0063  2865               	goto	l1119
   584  0064                     u590:
   585  0064                     l1117:
   586                           
   587                           ;esclavo.c: 123:             i0 = 0;
   588  0064  01F8               	clrf	_i0
   589  0065                     l1119:
   590                           
   591                           ;esclavo.c: 125:         if(D < 10){
   592  0065  1283               	bcf	3,5	;RP0=0, select bank0
   593  0066  1303               	bcf	3,6	;RP1=0, select bank0
   594  0067  0828               	movf	_D+1,w
   595  0068  3A80               	xorlw	128
   596  0069  00FF               	movwf	btemp+1
   597  006A  3080               	movlw	128
   598  006B  027F               	subwf	btemp+1,w
   599  006C  1D03               	skipz
   600  006D  2870               	goto	u605
   601  006E  300A               	movlw	10
   602  006F  0227               	subwf	_D,w
   603  0070                     u605:
   604  0070  1803               	skipnc
   605  0071  2873               	goto	u601
   606  0072  2874               	goto	u600
   607  0073                     u601:
   608  0073  2876               	goto	l150
   609  0074                     u600:
   610  0074                     l1121:
   611                           
   612                           ;esclavo.c: 126:             i0 = 1;
   613  0074  01F8               	clrf	_i0
   614  0075  0AF8               	incf	_i0,f
   615  0076                     l150:	
   616                           ;esclavo.c: 127:         }
   617                           
   618                           
   619                           ;esclavo.c: 128:         if(PORTAbits.RA2 == 1){
   620  0076  1283               	bcf	3,5	;RP0=0, select bank0
   621  0077  1303               	bcf	3,6	;RP1=0, select bank0
   622  0078  1D05               	btfss	5,2	;volatile
   623  0079  287B               	goto	u611
   624  007A  287C               	goto	u610
   625  007B                     u611:
   626  007B  287E               	goto	l151
   627  007C                     u610:
   628  007C                     l1123:
   629                           
   630                           ;esclavo.c: 129:             i1 = 1;
   631  007C  01F7               	clrf	_i1
   632  007D  0AF7               	incf	_i1,f
   633  007E                     l151:	
   634                           ;esclavo.c: 130:         }
   635                           
   636                           
   637                           ;esclavo.c: 131:         if(PORTAbits.RA2 == 0){
   638  007E  1905               	btfsc	5,2	;volatile
   639  007F  2881               	goto	u621
   640  0080  2882               	goto	u620
   641  0081                     u621:
   642  0081  2883               	goto	l1127
   643  0082                     u620:
   644  0082                     l1125:
   645                           
   646                           ;esclavo.c: 132:             i1 = 0;
   647  0082  01F7               	clrf	_i1
   648  0083                     l1127:
   649                           
   650                           ;esclavo.c: 134:        _delay((unsigned long)((50)*(4000000/4000.0)));
   651  0083  3041               	movlw	65
   652  0084  1283               	bcf	3,5	;RP0=0, select bank0
   653  0085  1303               	bcf	3,6	;RP1=0, select bank0
   654  0086  00A6               	movwf	??_main+1
   655  0087  30ED               	movlw	237
   656  0088  00A5               	movwf	??_main
   657  0089                     u647:
   658  0089  0BA5               	decfsz	??_main,f
   659  008A  2889               	goto	u647
   660  008B  0BA6               	decfsz	??_main+1,f
   661  008C  2889               	goto	u647
   662  008D  288E               	nop2
   663  008E  2827               	goto	l1101
   664  008F  120A  118A  280C   	ljmp	start
   665  0092                     __end_of_main:
   666                           
   667                           	psect	text1
   668  0168                     __ptext1:	
   669 ;; *************** function _setup *****************
   670 ;; Defined at:
   671 ;;		line 141 in file "esclavo.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    2
   692 ;; This function calls:
   693 ;;		_I2C_Slave_Init
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _setup
   701  0168                     _setup:
   702  0168                     l959:	
   703                           ;incstack = 0
   704                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   705                           
   706                           
   707                           ;esclavo.c: 142:     ANSEL = 0;
   708  0168  1683               	bsf	3,5	;RP0=1, select bank3
   709  0169  1703               	bsf	3,6	;RP1=1, select bank3
   710  016A  0188               	clrf	8	;volatile
   711                           
   712                           ;esclavo.c: 143:     ANSELH = 0;
   713  016B  0189               	clrf	9	;volatile
   714                           
   715                           ;esclavo.c: 145:     TRISB = 0;
   716  016C  1683               	bsf	3,5	;RP0=1, select bank1
   717  016D  1303               	bcf	3,6	;RP1=0, select bank1
   718  016E  0186               	clrf	6	;volatile
   719                           
   720                           ;esclavo.c: 146:     TRISC = 0;
   721  016F  0187               	clrf	7	;volatile
   722                           
   723                           ;esclavo.c: 147:     TRISE = 0;
   724  0170  0189               	clrf	9	;volatile
   725  0171                     l961:
   726                           
   727                           ;esclavo.c: 148:     TRISA = 0x06;
   728  0171  3006               	movlw	6
   729  0172  0085               	movwf	5	;volatile
   730  0173                     l963:
   731                           
   732                           ;esclavo.c: 149:     TRISD = 0;
   733  0173  0188               	clrf	8	;volatile
   734  0174                     l965:
   735                           
   736                           ;esclavo.c: 151:     PORTA = 0;
   737  0174  1283               	bcf	3,5	;RP0=0, select bank0
   738  0175  1303               	bcf	3,6	;RP1=0, select bank0
   739  0176  0185               	clrf	5	;volatile
   740  0177                     l967:
   741                           
   742                           ;esclavo.c: 152:     PORTB = 0;
   743  0177  0186               	clrf	6	;volatile
   744  0178                     l969:
   745                           
   746                           ;esclavo.c: 153:     PORTC = 0;
   747  0178  0187               	clrf	7	;volatile
   748  0179                     l971:
   749                           
   750                           ;esclavo.c: 154:     PORTD = 0;
   751  0179  0188               	clrf	8	;volatile
   752  017A                     l973:
   753                           
   754                           ;esclavo.c: 155:     PORTE = 0;
   755  017A  0189               	clrf	9	;volatile
   756  017B                     l975:
   757                           
   758                           ;esclavo.c: 158:     I2C_Slave_Init(0x50);
   759  017B  3050               	movlw	80
   760  017C  120A  118A  2182  120A  118A  	fcall	_I2C_Slave_Init
   761  0181                     l158:
   762  0181  0008               	return
   763  0182                     __end_of_setup:
   764                           
   765                           	psect	text2
   766  0182                     __ptext2:	
   767 ;; *************** function _I2C_Slave_Init *****************
   768 ;; Defined at:
   769 ;;		line 96 in file "I2C.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  address         1    wreg     unsigned char 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  address         1    3[COMMON] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         0       0       0       0       0
   784 ;;      Locals:         1       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0
   786 ;;      Totals:         1       0       0       0       0
   787 ;;Total ram usage:        1 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_setup
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _I2C_Slave_Init
   799  0182                     _I2C_Slave_Init:
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _I2C_Slave_Init: [wreg]
   803                           ;I2C_Slave_Init@address stored from wreg
   804  0182  00F3               	movwf	I2C_Slave_Init@address
   805  0183                     l945:
   806                           
   807                           ;I2C.c: 96: void I2C_Slave_Init(uint8_t address);I2C.c: 97: {;I2C.c: 98:     SSPADD = ad
      +                          dress;
   808  0183  0873               	movf	I2C_Slave_Init@address,w
   809  0184  1683               	bsf	3,5	;RP0=1, select bank1
   810  0185  1303               	bcf	3,6	;RP1=0, select bank1
   811  0186  0093               	movwf	19	;volatile
   812                           
   813                           ;I2C.c: 99:     SSPCON = 0x36;
   814  0187  3036               	movlw	54
   815  0188  1283               	bcf	3,5	;RP0=0, select bank0
   816  0189  1303               	bcf	3,6	;RP1=0, select bank0
   817  018A  0094               	movwf	20	;volatile
   818                           
   819                           ;I2C.c: 100:     SSPSTAT = 0x80;
   820  018B  3080               	movlw	128
   821  018C  1683               	bsf	3,5	;RP0=1, select bank1
   822  018D  1303               	bcf	3,6	;RP1=0, select bank1
   823  018E  0094               	movwf	20	;volatile
   824                           
   825                           ;I2C.c: 101:     SSPCON2 = 0x01;
   826  018F  3001               	movlw	1
   827  0190  0091               	movwf	17	;volatile
   828  0191                     l947:
   829                           
   830                           ;I2C.c: 102:     TRISC3 = 1;
   831  0191  1587               	bsf	7,3	;volatile
   832  0192                     l949:
   833                           
   834                           ;I2C.c: 103:     TRISC4 = 1;
   835  0192  1607               	bsf	7,4	;volatile
   836  0193                     l951:
   837                           
   838                           ;I2C.c: 104:     GIE = 1;
   839  0193  178B               	bsf	11,7	;volatile
   840  0194                     l953:
   841                           
   842                           ;I2C.c: 105:     PEIE = 1;
   843  0194  170B               	bsf	11,6	;volatile
   844  0195                     l955:
   845                           
   846                           ;I2C.c: 106:     SSPIF = 0;
   847  0195  1283               	bcf	3,5	;RP0=0, select bank0
   848  0196  1303               	bcf	3,6	;RP1=0, select bank0
   849  0197  118C               	bcf	12,3	;volatile
   850  0198                     l957:
   851                           
   852                           ;I2C.c: 107:     SSPIE = 1;
   853  0198  1683               	bsf	3,5	;RP0=1, select bank1
   854  0199  1303               	bcf	3,6	;RP1=0, select bank1
   855  019A  158C               	bsf	12,3	;volatile
   856  019B                     l55:
   857  019B  0008               	return
   858  019C                     __end_of_I2C_Slave_Init:
   859                           
   860                           	psect	text3
   861  019C                     __ptext3:	
   862 ;; *************** function _cfg_clk *****************
   863 ;; Defined at:
   864 ;;		line 161 in file "esclavo.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _cfg_clk
   894  019C                     _cfg_clk:
   895  019C                     l977:	
   896                           ;incstack = 0
   897                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
   898                           
   899                           
   900                           ;esclavo.c: 162:     OSCCONbits.IRCF = 0b110;
   901  019C  1683               	bsf	3,5	;RP0=1, select bank1
   902  019D  1303               	bcf	3,6	;RP1=0, select bank1
   903  019E  080F               	movf	15,w	;volatile
   904  019F  398F               	andlw	-113
   905  01A0  3860               	iorlw	96
   906  01A1  008F               	movwf	15	;volatile
   907  01A2                     l979:
   908                           
   909                           ;esclavo.c: 163:     OSCCONbits.SCS = 1;
   910  01A2  140F               	bsf	15,0	;volatile
   911  01A3                     l161:
   912  01A3  0008               	return
   913  01A4                     __end_of_cfg_clk:
   914                           
   915                           	psect	text4
   916  00FF                     __ptext4:	
   917 ;; *************** function ___awdiv *****************
   918 ;; Defined at:
   919 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  divisor         2    3[COMMON] int 
   922 ;;  dividend        2    5[COMMON] int 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  quotient        2    3[BANK0 ] int 
   925 ;;  sign            1    2[BANK0 ] unsigned char 
   926 ;;  counter         1    1[BANK0 ] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  2    3[COMMON] int 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         4       0       0       0       0
   937 ;;      Locals:         0       4       0       0       0
   938 ;;      Temps:          0       1       0       0       0
   939 ;;      Totals:         4       5       0       0       0
   940 ;;Total ram usage:        9 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function ___awdiv
   952  00FF                     ___awdiv:
   953  00FF                     l1055:	
   954                           ;incstack = 0
   955                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   956                           
   957  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   958  0100  1303               	bcf	3,6	;RP1=0, select bank0
   959  0101  01A2               	clrf	___awdiv@sign
   960  0102                     l1057:
   961  0102  1FF4               	btfss	___awdiv@divisor+1,7
   962  0103  2905               	goto	u471
   963  0104  2906               	goto	u470
   964  0105                     u471:
   965  0105  290D               	goto	l1063
   966  0106                     u470:
   967  0106                     l1059:
   968  0106  09F3               	comf	___awdiv@divisor,f
   969  0107  09F4               	comf	___awdiv@divisor+1,f
   970  0108  0AF3               	incf	___awdiv@divisor,f
   971  0109  1903               	skipnz
   972  010A  0AF4               	incf	___awdiv@divisor+1,f
   973  010B                     l1061:
   974  010B  01A2               	clrf	___awdiv@sign
   975  010C  0AA2               	incf	___awdiv@sign,f
   976  010D                     l1063:
   977  010D  1FF6               	btfss	___awdiv@dividend+1,7
   978  010E  2910               	goto	u481
   979  010F  2911               	goto	u480
   980  0110                     u481:
   981  0110  291A               	goto	l1069
   982  0111                     u480:
   983  0111                     l1065:
   984  0111  09F5               	comf	___awdiv@dividend,f
   985  0112  09F6               	comf	___awdiv@dividend+1,f
   986  0113  0AF5               	incf	___awdiv@dividend,f
   987  0114  1903               	skipnz
   988  0115  0AF6               	incf	___awdiv@dividend+1,f
   989  0116                     l1067:
   990  0116  3001               	movlw	1
   991  0117  00A0               	movwf	??___awdiv
   992  0118  0820               	movf	??___awdiv,w
   993  0119  06A2               	xorwf	___awdiv@sign,f
   994  011A                     l1069:
   995  011A  01A3               	clrf	___awdiv@quotient
   996  011B  01A4               	clrf	___awdiv@quotient+1
   997  011C                     l1071:
   998  011C  0873               	movf	___awdiv@divisor,w
   999  011D  0474               	iorwf	___awdiv@divisor+1,w
  1000  011E  1903               	btfsc	3,2
  1001  011F  2921               	goto	u491
  1002  0120  2922               	goto	u490
  1003  0121                     u491:
  1004  0121  2959               	goto	l1091
  1005  0122                     u490:
  1006  0122                     l1073:
  1007  0122  01A1               	clrf	___awdiv@counter
  1008  0123  0AA1               	incf	___awdiv@counter,f
  1009  0124  2930               	goto	l1079
  1010  0125                     l1075:
  1011  0125  3001               	movlw	1
  1012  0126                     u505:
  1013  0126  1003               	clrc
  1014  0127  0DF3               	rlf	___awdiv@divisor,f
  1015  0128  0DF4               	rlf	___awdiv@divisor+1,f
  1016  0129  3EFF               	addlw	-1
  1017  012A  1D03               	skipz
  1018  012B  2926               	goto	u505
  1019  012C                     l1077:
  1020  012C  3001               	movlw	1
  1021  012D  00A0               	movwf	??___awdiv
  1022  012E  0820               	movf	??___awdiv,w
  1023  012F  07A1               	addwf	___awdiv@counter,f
  1024  0130                     l1079:
  1025  0130  1FF4               	btfss	___awdiv@divisor+1,7
  1026  0131  2933               	goto	u511
  1027  0132  2934               	goto	u510
  1028  0133                     u511:
  1029  0133  2925               	goto	l1075
  1030  0134                     u510:
  1031  0134                     l1081:
  1032  0134  3001               	movlw	1
  1033  0135                     u525:
  1034  0135  1003               	clrc
  1035  0136  0DA3               	rlf	___awdiv@quotient,f
  1036  0137  0DA4               	rlf	___awdiv@quotient+1,f
  1037  0138  3EFF               	addlw	-1
  1038  0139  1D03               	skipz
  1039  013A  2935               	goto	u525
  1040  013B  0874               	movf	___awdiv@divisor+1,w
  1041  013C  0276               	subwf	___awdiv@dividend+1,w
  1042  013D  1D03               	skipz
  1043  013E  2941               	goto	u535
  1044  013F  0873               	movf	___awdiv@divisor,w
  1045  0140  0275               	subwf	___awdiv@dividend,w
  1046  0141                     u535:
  1047  0141  1C03               	skipc
  1048  0142  2944               	goto	u531
  1049  0143  2945               	goto	u530
  1050  0144                     u531:
  1051  0144  294C               	goto	l1087
  1052  0145                     u530:
  1053  0145                     l1083:
  1054  0145  0873               	movf	___awdiv@divisor,w
  1055  0146  02F5               	subwf	___awdiv@dividend,f
  1056  0147  0874               	movf	___awdiv@divisor+1,w
  1057  0148  1C03               	skipc
  1058  0149  03F6               	decf	___awdiv@dividend+1,f
  1059  014A  02F6               	subwf	___awdiv@dividend+1,f
  1060  014B                     l1085:
  1061  014B  1423               	bsf	___awdiv@quotient,0
  1062  014C                     l1087:
  1063  014C  3001               	movlw	1
  1064  014D                     u545:
  1065  014D  1003               	clrc
  1066  014E  0CF4               	rrf	___awdiv@divisor+1,f
  1067  014F  0CF3               	rrf	___awdiv@divisor,f
  1068  0150  3EFF               	addlw	-1
  1069  0151  1D03               	skipz
  1070  0152  294D               	goto	u545
  1071  0153                     l1089:
  1072  0153  3001               	movlw	1
  1073  0154  02A1               	subwf	___awdiv@counter,f
  1074  0155  1D03               	btfss	3,2
  1075  0156  2958               	goto	u551
  1076  0157  2959               	goto	u550
  1077  0158                     u551:
  1078  0158  2934               	goto	l1081
  1079  0159                     u550:
  1080  0159                     l1091:
  1081  0159  0822               	movf	___awdiv@sign,w
  1082  015A  1903               	btfsc	3,2
  1083  015B  295D               	goto	u561
  1084  015C  295E               	goto	u560
  1085  015D                     u561:
  1086  015D  2963               	goto	l1095
  1087  015E                     u560:
  1088  015E                     l1093:
  1089  015E  09A3               	comf	___awdiv@quotient,f
  1090  015F  09A4               	comf	___awdiv@quotient+1,f
  1091  0160  0AA3               	incf	___awdiv@quotient,f
  1092  0161  1903               	skipnz
  1093  0162  0AA4               	incf	___awdiv@quotient+1,f
  1094  0163                     l1095:
  1095  0163  0824               	movf	___awdiv@quotient+1,w
  1096  0164  00F4               	movwf	?___awdiv+1
  1097  0165  0823               	movf	___awdiv@quotient,w
  1098  0166  00F3               	movwf	?___awdiv
  1099  0167                     l400:
  1100  0167  0008               	return
  1101  0168                     __end_of___awdiv:
  1102                           
  1103                           	psect	text5
  1104  0092                     __ptext5:	
  1105 ;; *************** function _isr *****************
  1106 ;; Defined at:
  1107 ;;		line 60 in file "esclavo.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1121 ;;      Params:         0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0
  1123 ;;      Temps:          3       0       0       0       0
  1124 ;;      Totals:         3       0       0       0       0
  1125 ;;Total ram usage:        3 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		Interrupt level 1
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           
  1135                           ;psect for function _isr
  1136  0092                     _isr:
  1137  0092                     i1l877:
  1138                           
  1139                           ;esclavo.c: 61:    if(PIR1bits.SSPIF == 1){
  1140  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0094  1D8C               	btfss	12,3	;volatile
  1143  0095  2897               	goto	u15_21
  1144  0096  2898               	goto	u15_20
  1145  0097                     u15_21:
  1146  0097  28F8               	goto	i1l137
  1147  0098                     u15_20:
  1148  0098                     i1l879:
  1149                           
  1150                           ;esclavo.c: 63:         SSPCONbits.CKP = 0;
  1151  0098  1214               	bcf	20,4	;volatile
  1152                           
  1153                           ;esclavo.c: 65:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1154  0099  1B14               	btfsc	20,6	;volatile
  1155  009A  289C               	goto	u16_21
  1156  009B  289D               	goto	u16_20
  1157  009C                     u16_21:
  1158  009C  28A1               	goto	i1l883
  1159  009D                     u16_20:
  1160  009D                     i1l881:
  1161  009D  1F94               	btfss	20,7	;volatile
  1162  009E  28A0               	goto	u17_21
  1163  009F  28A1               	goto	u17_20
  1164  00A0                     u17_21:
  1165  00A0  28A8               	goto	i1l891
  1166  00A1                     u17_20:
  1167  00A1                     i1l883:
  1168                           
  1169                           ;esclavo.c: 66:             z = SSPBUF;
  1170  00A1  0813               	movf	19,w	;volatile
  1171  00A2  00F0               	movwf	??_isr
  1172  00A3  0870               	movf	??_isr,w
  1173  00A4  00FA               	movwf	_z
  1174  00A5                     i1l885:
  1175                           
  1176                           ;esclavo.c: 67:             SSPCONbits.SSPOV = 0;
  1177  00A5  1314               	bcf	20,6	;volatile
  1178  00A6                     i1l887:
  1179                           
  1180                           ;esclavo.c: 68:             SSPCONbits.WCOL = 0;
  1181  00A6  1394               	bcf	20,7	;volatile
  1182  00A7                     i1l889:
  1183                           
  1184                           ;esclavo.c: 69:             SSPCONbits.CKP = 1;
  1185  00A7  1614               	bsf	20,4	;volatile
  1186  00A8                     i1l891:
  1187                           
  1188                           ;esclavo.c: 72:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1189  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1190  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  1191  00AA  1A94               	btfsc	20,5	;volatile
  1192  00AB  28AD               	goto	u18_21
  1193  00AC  28AE               	goto	u18_20
  1194  00AD                     u18_21:
  1195  00AD  28CB               	goto	i1l128
  1196  00AE                     u18_20:
  1197  00AE                     i1l893:
  1198  00AE  1914               	btfsc	20,2	;volatile
  1199  00AF  28B1               	goto	u19_21
  1200  00B0  28B2               	goto	u19_20
  1201  00B1                     u19_21:
  1202  00B1  28CB               	goto	i1l128
  1203  00B2                     u19_20:
  1204  00B2                     i1l895:
  1205                           
  1206                           ;esclavo.c: 74:             z = SSPBUF;
  1207  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1208  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1209  00B4  0813               	movf	19,w	;volatile
  1210  00B5  00F0               	movwf	??_isr
  1211  00B6  0870               	movf	??_isr,w
  1212  00B7  00FA               	movwf	_z
  1213  00B8                     i1l897:
  1214                           
  1215                           ;esclavo.c: 76:             PIR1bits.SSPIF = 0;
  1216  00B8  118C               	bcf	12,3	;volatile
  1217  00B9                     i1l899:
  1218                           
  1219                           ;esclavo.c: 77:             SSPCONbits.CKP = 1;
  1220  00B9  1614               	bsf	20,4	;volatile
  1221  00BA                     i1l129:	
  1222                           ;esclavo.c: 78:             while(!SSPSTATbits.BF);
  1223                           
  1224  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  1225  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  1226  00BC  1C14               	btfss	20,0	;volatile
  1227  00BD  28BF               	goto	u20_21
  1228  00BE  28C0               	goto	u20_20
  1229  00BF                     u20_21:
  1230  00BF  28BA               	goto	i1l129
  1231  00C0                     u20_20:
  1232  00C0                     i1l901:
  1233                           
  1234                           ;esclavo.c: 79:             dato = SSPBUF;
  1235  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1236  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1237  00C2  0813               	movf	19,w	;volatile
  1238  00C3  00F0               	movwf	??_isr
  1239  00C4  0870               	movf	??_isr,w
  1240  00C5  00F9               	movwf	_dato
  1241                           
  1242                           ;esclavo.c: 80:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1243  00C6  3053               	movlw	83
  1244  00C7  00F0               	movwf	??_isr
  1245  00C8                     u65_27:
  1246  00C8  0BF0               	decfsz	??_isr,f
  1247  00C9  28C8               	goto	u65_27
  1248                           
  1249                           ;esclavo.c: 82:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1250  00CA  28F5               	goto	i1l132
  1251  00CB                     i1l128:
  1252  00CB  1A94               	btfsc	20,5	;volatile
  1253  00CC  28CE               	goto	u21_21
  1254  00CD  28CF               	goto	u21_20
  1255  00CE                     u21_21:
  1256  00CE  28F5               	goto	i1l132
  1257  00CF                     u21_20:
  1258  00CF                     i1l903:
  1259  00CF  1D14               	btfss	20,2	;volatile
  1260  00D0  28D2               	goto	u22_21
  1261  00D1  28D3               	goto	u22_20
  1262  00D2                     u22_21:
  1263  00D2  28F5               	goto	i1l132
  1264  00D3                     u22_20:
  1265  00D3                     i1l905:
  1266                           
  1267                           ;esclavo.c: 83:             z = SSPBUF;
  1268  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1269  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1270  00D5  0813               	movf	19,w	;volatile
  1271  00D6  00F0               	movwf	??_isr
  1272  00D7  0870               	movf	??_isr,w
  1273  00D8  00FA               	movwf	_z
  1274  00D9                     i1l907:
  1275                           
  1276                           ;esclavo.c: 84:             BF = 0;
  1277  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1278  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1279  00DB  1014               	bcf	20,0	;volatile
  1280  00DC                     i1l909:
  1281                           
  1282                           ;esclavo.c: 85:             SSPBUF = (i0 | (i1<<4));;
  1283  00DC  0877               	movf	_i1,w
  1284  00DD  00F0               	movwf	??_isr
  1285  00DE  3003               	movlw	3
  1286  00DF                     u23_25:
  1287  00DF  1003               	clrc
  1288  00E0  0DF0               	rlf	??_isr,f
  1289  00E1  3EFF               	addlw	-1
  1290  00E2  1D03               	skipz
  1291  00E3  28DF               	goto	u23_25
  1292  00E4  1003               	clrc
  1293  00E5  0D70               	rlf	??_isr,w
  1294  00E6  0478               	iorwf	_i0,w
  1295  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1296  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1297  00E9  0093               	movwf	19	;volatile
  1298  00EA                     i1l911:
  1299                           
  1300                           ;esclavo.c: 86:             SSPCONbits.CKP = 1;
  1301  00EA  1614               	bsf	20,4	;volatile
  1302  00EB                     i1l913:
  1303                           
  1304                           ;esclavo.c: 87:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1305  00EB  3053               	movlw	83
  1306  00EC  00F0               	movwf	??_isr
  1307  00ED                     u66_27:
  1308  00ED  0BF0               	decfsz	??_isr,f
  1309  00EE  28ED               	goto	u66_27
  1310  00EF                     i1l134:	
  1311                           ;esclavo.c: 88:             while(SSPSTATbits.BF);
  1312                           
  1313  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1314  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1315  00F1  1814               	btfsc	20,0	;volatile
  1316  00F2  28F4               	goto	u24_21
  1317  00F3  28F5               	goto	u24_20
  1318  00F4                     u24_21:
  1319  00F4  28EF               	goto	i1l134
  1320  00F5                     u24_20:
  1321  00F5                     i1l132:
  1322                           
  1323                           ;esclavo.c: 91:         PIR1bits.SSPIF = 0;
  1324  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1325  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1326  00F7  118C               	bcf	12,3	;volatile
  1327  00F8                     i1l137:
  1328  00F8  0872               	movf	??_isr+2,w
  1329  00F9  008A               	movwf	10
  1330  00FA  0E71               	swapf	??_isr+1,w
  1331  00FB  0083               	movwf	3
  1332  00FC  0EFE               	swapf	btemp,f
  1333  00FD  0E7E               	swapf	btemp,w
  1334  00FE  0009               	retfie
  1335  00FF                     __end_of_isr:
  1336  007E                     btemp	set	126	;btemp
  1337  007E                     wtemp0	set	126
  1338                           
  1339                           	psect	intentry
  1340  0004                     __pintentry:	
  1341                           ;incstack = 0
  1342                           ; Regs used in _isr: [wreg+status,2+status,0]
  1343                           
  1344  0004                     interrupt_function:
  1345  007E                     saved_w	set	btemp
  1346  0004  00FE               	movwf	btemp
  1347  0005  0E03               	swapf	3,w
  1348  0006  00F1               	movwf	??_isr+1
  1349  0007  080A               	movf	10,w
  1350  0008  00F2               	movwf	??_isr+2
  1351  0009  120A  118A  2892   	ljmp	_isr
  1352                           
  1353                           	psect	config
  1354                           
  1355                           ;Config register CONFIG1 @ 0x2007
  1356                           ;	Oscillator Selection bits
  1357                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1358                           ;	Watchdog Timer Enable bit
  1359                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1360                           ;	Power-up Timer Enable bit
  1361                           ;	PWRTE = OFF, PWRT disabled
  1362                           ;	RE3/MCLR pin function select bit
  1363                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1364                           ;	Code Protection bit
  1365                           ;	CP = OFF, Program memory code protection is disabled
  1366                           ;	Data Code Protection bit
  1367                           ;	CPD = OFF, Data memory code protection is disabled
  1368                           ;	Brown Out Reset Selection bits
  1369                           ;	BOREN = OFF, BOR disabled
  1370                           ;	Internal External Switchover bit
  1371                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1372                           ;	Fail-Safe Clock Monitor Enabled bit
  1373                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1374                           ;	Low Voltage Programming Enable bit
  1375                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1376                           ;	In-Circuit Debugger Mode bit
  1377                           ;	DEBUG = 0x1, unprogrammed default
  1378  2007                     	org	8199
  1379  2007  20D4               	dw	8404
  1380                           
  1381                           ;Config register CONFIG2 @ 0x2008
  1382                           ;	Brown-out Reset Selection bit
  1383                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1384                           ;	Flash Program Memory Self Write Enable bits
  1385                           ;	WRT = OFF, Write protection off
  1386  2008                     	org	8200
  1387  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      7      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     647
                                              5 BANK0      2     2      0
                            ___awdiv
                            _cfg_clk
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     625
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _cfg_clk
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Sep 01 17:57:20 2021

                      _D 0027                        _V 0029                        _z 007A  
            _SSPSTATbits 0094                       _BF 04A0                       l55 019B  
                     _i0 0078                       _i1 0077             ___awdiv@sign 0022  
                    l150 0076                      l151 007E                      l143 0036  
                    l400 0167                      l161 01A3                      l145 003A  
                    l146 003B                      l148 003F                      l158 0181  
                    l951 0193                      l953 0194                      l945 0183  
                    l961 0171                      l955 0195                      l947 0191  
                    l971 0179                      l963 0173                      l957 0198  
                    l949 0192                      l973 017A                      l965 0174  
                    l975 017B                      l967 0177                      l959 0168  
                    l977 019C                      l969 0178                      l979 01A2  
                    _GIE 005F                      u510 0134                      u511 0133  
                    u600 0074                      u505 0126                      u601 0073  
                    u530 0145                      u610 007C                      u531 0144  
                    u611 007B                      u620 0082                      u525 0135  
                    u621 0081                      u605 0070                      u550 0159  
                    u470 0106                      u551 0158                      u535 0141  
                    u471 0105                      u560 015E                      u480 0111  
                    u561 015D                      u545 014D                      u481 0110  
                    u490 0122                      u570 003A                      u491 0121  
                    u571 0039                      u580 003F                      u581 003E  
                    u637 0030                      u590 0064                      u647 0089  
                    u591 0063                      u595 0060                      _isr 0092  
                   l1101 0027                     l1111 0040                     l1103 002A  
                   l1121 0074                     l1113 0044                     l1105 002B  
                   l1123 007C                     l1115 0057                     l1107 002C  
                   l1061 010B                     l1125 0082                     l1117 0064  
                   l1109 0033                     l1071 011C                     l1063 010D  
                   l1055 00FF                     l1127 0083                     l1119 0065  
                   l1081 0134                     l1073 0122                     l1065 0111  
                   l1057 0102                     l1083 0145                     l1075 0125  
                   l1091 0159                     l1067 0116                     l1059 0106  
                   l1093 015E                     l1085 014B                     l1077 012C  
                   l1069 011A                     l1095 0163                     l1087 014C  
                   l1079 0130                     l1089 0153                     l1099 001D  
                   ?_isr 0070                     _PEIE 005E                     _dato 0079  
                   _main 001D                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 0168  
                  _ANSEL 0188          ___awdiv@divisor 0073                    i1l132 00F5  
                  i1l134 00EF                    i1l128 00CB                    i1l129 00BA  
                  i1l137 00F8                    i1l901 00C0                    i1l911 00EA  
                  i1l903 00CF                    i1l913 00EB                    i1l905 00D3  
                  i1l907 00D9                    i1l909 00DC                    i1l881 009D  
                  i1l891 00A8                    i1l883 00A1                    i1l893 00AE  
                  i1l885 00A5                    i1l877 0092                    i1l895 00B2  
                  i1l887 00A6                    i1l879 0098                    i1l897 00B8  
                  i1l889 00A7                    i1l899 00B9          ___awdiv@counter 0021  
                  u20_20 00C0                    u20_21 00BF                    u21_20 00CF  
                  u21_21 00CE                    u22_20 00D3                    u22_21 00D2  
                  u15_20 0098                    u15_21 0097                    u23_25 00DF  
                  u24_20 00F5                    u16_20 009D                    u24_21 00F4  
                  u16_21 009C                    u17_20 00A1                    u17_21 00A0  
                  _TMR1H 000F                    _TMR1L 000E                    u18_20 00AE  
                  u18_21 00AD                    u19_20 00B2                    u19_21 00B1  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009          __end_of_cfg_clk 01A4  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    u65_27 00C8                    _SSPIE 0463  
                  _TRISE 0089                    _SSPIF 0063                    u66_27 00ED  
                  _setup 0168                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0092  
                 ??_main 0025         ___awdiv@dividend 0075                   ?_setup 0070  
                 _ANSELH 0189                   _TMR1ON 0080                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPCON 0014  
                 _SSPBUF 0013                ??___awdiv 0020                ??_cfg_clk 0073  
       ___awdiv@quotient 0023                   saved_w 007E  __end_of__initialization 0019  
         __pcstackCOMMON 0070  __size_of_I2C_Slave_Init 001A            __end_of_setup 0182  
                ??_setup 0074    I2C_Slave_Init@address 0073               __pbssBANK0 0027  
             __pmaintext 001D               __pintentry 0004                  _SSPCON2 0091  
                _SSPSTAT 0094                  ___awdiv 00FF                  _cfg_clk 019C  
                __ptext1 0168                  __ptext2 0182                  __ptext3 019C  
                __ptext4 00FF                  __ptext5 0092             __size_of_isr 006D  
   end_of_initialization 0019           _I2C_Slave_Init 0182                _PORTAbits 0005  
              _TRISCbits 0087   __end_of_I2C_Slave_Init 019C      start_initialization 000F  
            __end_of_isr 00FF          ?_I2C_Slave_Init 0070              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0073  
               ?_cfg_clk 0070           __size_of_setup 001A        interrupt_function 0004  
               _PIR1bits 000C         __size_of___awdiv 0069         __size_of_cfg_clk 0008  
       ??_I2C_Slave_Init 0073            __size_of_main 0075                 intlevel1 0000  
             _OSCCONbits 008F              _SSPCON2bits 0091               _SSPCONbits 0014  

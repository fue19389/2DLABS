

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Sep 01 19:29:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    51                           	psect	text1_split_2,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0185                     	;# 
   161  0187                     	;# 
   162  0188                     	;# 
   163  0189                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  008F                     	;# 
   211  0090                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  0105                     	;# 
   230  0107                     	;# 
   231  0108                     	;# 
   232  0109                     	;# 
   233  010C                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  0185                     	;# 
   239  0187                     	;# 
   240  0188                     	;# 
   241  0189                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  008F                     	;# 
   289  0090                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0095                     	;# 
   297  0096                     	;# 
   298  0097                     	;# 
   299  0098                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  0105                     	;# 
   308  0107                     	;# 
   309  0108                     	;# 
   310  0109                     	;# 
   311  010C                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  0185                     	;# 
   317  0187                     	;# 
   318  0188                     	;# 
   319  0189                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322                           
   323                           	psect	strings
   324  1800                     __pstrings:
   325  1800                     stringtab:
   326  1800                     __stringtab:
   327  1800                     stringcode:	
   328                           ;	String table - string pointers are 1 byte each
   329                           
   330  1800                     stringdir:
   331  1800  3018               	movlw	high stringdir
   332  1801  008A               	movwf	10
   333  1802  0804               	movf	4,w
   334  1803  0A84               	incf	4,f
   335  1804  0782               	addwf	2,f
   336  1805                     __stringbase:
   337  1805  3400               	retlw	0
   338  1806                     __end_of__stringtab:
   339  1806                     __powers_:
   340  1806  3400               	retlw	0
   341  1807  3400               	retlw	0
   342  1808  3480               	retlw	128
   343  1809  343F               	retlw	63
   344  180A  3400               	retlw	0
   345  180B  3400               	retlw	0
   346  180C  3420               	retlw	32
   347  180D  3441               	retlw	65
   348  180E  3400               	retlw	0
   349  180F  3400               	retlw	0
   350  1810  34C8               	retlw	200
   351  1811  3442               	retlw	66
   352  1812  3400               	retlw	0
   353  1813  3400               	retlw	0
   354  1814  347A               	retlw	122
   355  1815  3444               	retlw	68
   356  1816  3400               	retlw	0
   357  1817  3440               	retlw	64
   358  1818  341C               	retlw	28
   359  1819  3446               	retlw	70
   360  181A  3400               	retlw	0
   361  181B  3450               	retlw	80
   362  181C  34C3               	retlw	195
   363  181D  3447               	retlw	71
   364  181E  3400               	retlw	0
   365  181F  3424               	retlw	36
   366  1820  3474               	retlw	116
   367  1821  3449               	retlw	73
   368  1822  3480               	retlw	128
   369  1823  3496               	retlw	150
   370  1824  3418               	retlw	24
   371  1825  344B               	retlw	75
   372  1826  3420               	retlw	32
   373  1827  34BC               	retlw	188
   374  1828  34BE               	retlw	190
   375  1829  344C               	retlw	76
   376  182A  3428               	retlw	40
   377  182B  346B               	retlw	107
   378  182C  346E               	retlw	110
   379  182D  344E               	retlw	78
   380  182E  34F9               	retlw	249
   381  182F  3402               	retlw	2
   382  1830  3415               	retlw	21
   383  1831  3450               	retlw	80
   384  1832  34EC               	retlw	236
   385  1833  3478               	retlw	120
   386  1834  34AD               	retlw	173
   387  1835  3460               	retlw	96
   388  1836  34CA               	retlw	202
   389  1837  34F2               	retlw	242
   390  1838  3449               	retlw	73
   391  1839  3471               	retlw	113
   392  183A                     __end_of__powers_:
   393  183A                     __npowers_:
   394  183A  3400               	retlw	0
   395  183B  3400               	retlw	0
   396  183C  3480               	retlw	128
   397  183D  343F               	retlw	63
   398  183E  34CD               	retlw	205
   399  183F  34CC               	retlw	204
   400  1840  34CC               	retlw	204
   401  1841  343D               	retlw	61
   402  1842  340A               	retlw	10
   403  1843  34D7               	retlw	215
   404  1844  3423               	retlw	35
   405  1845  343C               	retlw	60
   406  1846  346F               	retlw	111
   407  1847  3412               	retlw	18
   408  1848  3483               	retlw	131
   409  1849  343A               	retlw	58
   410  184A  3417               	retlw	23
   411  184B  34B7               	retlw	183
   412  184C  34D1               	retlw	209
   413  184D  3438               	retlw	56
   414  184E  34AC               	retlw	172
   415  184F  34C5               	retlw	197
   416  1850  3427               	retlw	39
   417  1851  3437               	retlw	55
   418  1852  34BD               	retlw	189
   419  1853  3437               	retlw	55
   420  1854  3486               	retlw	134
   421  1855  3435               	retlw	53
   422  1856  3495               	retlw	149
   423  1857  34BF               	retlw	191
   424  1858  34D6               	retlw	214
   425  1859  3433               	retlw	51
   426  185A  3477               	retlw	119
   427  185B  34CC               	retlw	204
   428  185C  342B               	retlw	43
   429  185D  3432               	retlw	50
   430  185E  345F               	retlw	95
   431  185F  3470               	retlw	112
   432  1860  3489               	retlw	137
   433  1861  3430               	retlw	48
   434  1862  34FF               	retlw	255
   435  1863  34E6               	retlw	230
   436  1864  34DB               	retlw	219
   437  1865  342E               	retlw	46
   438  1866  3408               	retlw	8
   439  1867  34E5               	retlw	229
   440  1868  343C               	retlw	60
   441  1869  341E               	retlw	30
   442  186A  3460               	retlw	96
   443  186B  3442               	retlw	66
   444  186C  34A2               	retlw	162
   445  186D  340D               	retlw	13
   446  186E                     __end_of__npowers_:
   447  186E                     _dpowers:
   448  186E  3401               	retlw	1
   449  186F  3400               	retlw	0
   450  1870  3400               	retlw	0
   451  1871  3400               	retlw	0
   452  1872  340A               	retlw	10
   453  1873  3400               	retlw	0
   454  1874  3400               	retlw	0
   455  1875  3400               	retlw	0
   456  1876  3464               	retlw	100
   457  1877  3400               	retlw	0
   458  1878  3400               	retlw	0
   459  1879  3400               	retlw	0
   460  187A  34E8               	retlw	232
   461  187B  3403               	retlw	3
   462  187C  3400               	retlw	0
   463  187D  3400               	retlw	0
   464  187E  3410               	retlw	16
   465  187F  3427               	retlw	39
   466  1880  3400               	retlw	0
   467  1881  3400               	retlw	0
   468  1882  34A0               	retlw	160
   469  1883  3486               	retlw	134
   470  1884  3401               	retlw	1
   471  1885  3400               	retlw	0
   472  1886  3440               	retlw	64
   473  1887  3442               	retlw	66
   474  1888  340F               	retlw	15
   475  1889  3400               	retlw	0
   476  188A  3480               	retlw	128
   477  188B  3496               	retlw	150
   478  188C  3498               	retlw	152
   479  188D  3400               	retlw	0
   480  188E  3400               	retlw	0
   481  188F  34E1               	retlw	225
   482  1890  34F5               	retlw	245
   483  1891  3405               	retlw	5
   484  1892  3400               	retlw	0
   485  1893  34CA               	retlw	202
   486  1894  349A               	retlw	154
   487  1895  343B               	retlw	59
   488  1896                     __end_of_dpowers:
   489  0019                     _TXREG	set	25
   490  0018                     _RCSTAbits	set	24
   491  000B                     _INTCONbits	set	11
   492  0005                     _PORTA	set	5
   493  0008                     _PORTD	set	8
   494  0005                     _PORTAbits	set	5
   495  0008                     _PORTDbits	set	8
   496  001A                     _RCREG	set	26
   497  000C                     _PIR1bits	set	12
   498  0013                     _SSPBUF	set	19
   499  0014                     _SSPCON	set	20
   500  0064                     _TXIF	set	100
   501  0063                     _SSPIF	set	99
   502  005E                     _PEIE	set	94
   503  005F                     _GIE	set	95
   504  009A                     _SPBRGH	set	154
   505  0099                     _SPBRG	set	153
   506  0098                     _TXSTAbits	set	152
   507  008F                     _OSCCONbits	set	143
   508  008C                     _PIE1bits	set	140
   509  0085                     _TRISA	set	133
   510  0088                     _TRISD	set	136
   511  0091                     _SSPCON2bits	set	145
   512  0087                     _TRISCbits	set	135
   513  0094                     _SSPSTAT	set	148
   514  0093                     _SSPADD	set	147
   515  0091                     _SSPCON2	set	145
   516  0463                     _SSPIE	set	1123
   517  043C                     _TRISC4	set	1084
   518  043B                     _TRISC3	set	1083
   519  0187                     _BAUDCTLbits	set	391
   520  0189                     _ANSELH	set	393
   521  0188                     _ANSEL	set	392
   522  1896                     STR_1:
   523  1896  342C               	retlw	44	;','
   524  1897  3425               	retlw	37	;'%'
   525  1898  3430               	retlw	48	;'0'
   526  1899  342E               	retlw	46	;'.'
   527  189A  3430               	retlw	48	;'0'
   528  189B  3466               	retlw	102	;'f'
   529  189C  342C               	retlw	44	;','
   530  189D  3425               	retlw	37	;'%'
   531  189E  3430               	retlw	48	;'0'
   532  189F  342E               	retlw	46	;'.'
   533  18A0  3430               	retlw	48	;'0'
   534  18A1  3466               	retlw	102	;'f'
   535  18A2  342C               	retlw	44	;','
   536  18A3  3425               	retlw	37	;'%'
   537  18A4  3430               	retlw	48	;'0'
   538  18A5  342E               	retlw	46	;'.'
   539  18A6  3430               	retlw	48	;'0'
   540  18A7  3466               	retlw	102	;'f'
   541  18A8  342C               	retlw	44	;','
   542  18A9  3400               	retlw	0
   543                           
   544                           	psect	cinit
   545  000F                     start_initialization:	
   546                           ; #config settings
   547                           
   548  000F                     __initialization:
   549                           
   550                           ; Clear objects allocated to COMMON
   551  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   552                           
   553                           ; Clear objects allocated to BANK1
   554  0010  1383               	bcf	3,7	;select IRP bank0
   555  0011  30D3               	movlw	low __pbssBANK1
   556  0012  0084               	movwf	4
   557  0013  30ED               	movlw	low (__pbssBANK1+26)
   558  0014  160A  158A  2298  120A  118A  	fcall	clear_ram0
   559  0019                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562  0019                     __end_of__initialization:
   563  0019  0183               	clrf	3
   564  001A  160A  118A  299B   	ljmp	_main	;jump to C main() function
   565                           
   566                           	psect	bssCOMMON
   567  007B                     __pbssCOMMON:
   568  007B                     _val:
   569  007B                     	ds	1
   570                           
   571                           	psect	bssBANK1
   572  00D3                     __pbssBANK1:
   573  00D3                     _v2:
   574  00D3                     	ds	4
   575  00D7                     _v1:
   576  00D7                     	ds	4
   577  00DB                     _v0:
   578  00DB                     	ds	4
   579  00DF                     _light:
   580  00DF                     	ds	1
   581  00E0                     _door:
   582  00E0                     	ds	1
   583  00E1                     _lock:
   584  00E1                     	ds	1
   585  00E2                     _f1:
   586  00E2                     	ds	10
   587  00EC                     _pd:
   588  00EC                     	ds	1
   589                           
   590                           	psect	clrtext
   591  1A98                     clear_ram0:	
   592                           ;	Called with FSR containing the base address, and
   593                           ;	W with the last address+1
   594                           
   595  1A98  0064               	clrwdt	;clear the watchdog before getting into this loop
   596  1A99                     clrloop0:
   597  1A99  0180               	clrf	0	;clear RAM location pointed to by FSR
   598  1A9A  0A84               	incf	4,f	;increment pointer
   599  1A9B  0604               	xorwf	4,w	;XOR with final address
   600  1A9C  1903               	btfsc	3,2	;have we reached the end yet?
   601  1A9D  3400               	retlw	0	;all done for this memory range, return
   602  1A9E  0604               	xorwf	4,w	;XOR again to restore value
   603  1A9F  2A99               	goto	clrloop0	;do the next byte
   604                           
   605                           	psect	cstackBANK1
   606  00A0                     __pcstackBANK1:
   607  00A0                     ?___flsub:
   608  00A0                     ___flsub@a:	
   609                           ; 4 bytes @ 0x0
   610                           
   611                           
   612                           ; 4 bytes @ 0x0
   613  00A0                     	ds	4
   614  00A4                     ___flsub@b:
   615                           
   616                           ; 4 bytes @ 0x4
   617  00A4                     	ds	4
   618  00A8                     ?_sprintf:
   619  00A8                     sprintf@f:	
   620                           ; 2 bytes @ 0x8
   621                           
   622                           
   623                           ; 1 bytes @ 0x8
   624  00A8                     	ds	13
   625  00B5                     _sprintf$1181:
   626                           
   627                           ; 4 bytes @ 0x15
   628  00B5                     	ds	4
   629  00B9                     sprintf@ap:
   630                           
   631                           ; 1 bytes @ 0x19
   632  00B9                     	ds	1
   633  00BA                     sprintf@val:
   634                           
   635                           ; 4 bytes @ 0x1A
   636  00BA                     	ds	4
   637  00BE                     sprintf@tmpval:
   638                           
   639                           ; 4 bytes @ 0x1E
   640  00BE                     	ds	4
   641  00C2                     sprintf@eexp:
   642                           
   643                           ; 2 bytes @ 0x22
   644  00C2                     	ds	2
   645  00C4                     sprintf@flag:
   646                           
   647                           ; 2 bytes @ 0x24
   648  00C4                     	ds	2
   649  00C6                     sprintf@width:
   650                           
   651                           ; 2 bytes @ 0x26
   652  00C6                     	ds	2
   653  00C8                     sprintf@fval:
   654                           
   655                           ; 4 bytes @ 0x28
   656  00C8                     	ds	4
   657  00CC                     sprintf@prec:
   658                           
   659                           ; 2 bytes @ 0x2C
   660  00CC                     	ds	2
   661  00CE                     sprintf@sp:
   662                           
   663                           ; 1 bytes @ 0x2E
   664  00CE                     	ds	1
   665  00CF                     sprintf@c:
   666                           
   667                           ; 1 bytes @ 0x2F
   668  00CF                     	ds	1
   669  00D0                     ??_main:
   670                           
   671                           ; 1 bytes @ 0x30
   672  00D0                     	ds	3
   673                           
   674                           	psect	cstackCOMMON
   675  0070                     __pcstackCOMMON:
   676  0070                     ?_isdigit:
   677  0070                     ?_setup:	
   678                           ; 1 bit 
   679                           
   680  0070                     ?_cfg_clk:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_cfg_usart:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_send_crct:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_send_char:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_I2C_Master_Wait:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_I2C_Master_Start:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_I2C_Master_Stop:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_isr:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ??_isr:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_main:	
   708                           ; 1 bytes @ 0x0
   709                           
   710                           
   711                           ; 1 bytes @ 0x0
   712  0070                     	ds	2
   713  0072                     ?___fleq:
   714  0072                     ?___flge:	
   715                           ; 1 bit 
   716                           
   717  0072                     ??_cfg_clk:	
   718                           ; 1 bit 
   719                           
   720  0072                     ??_cfg_usart:	
   721                           ; 1 bytes @ 0x2
   722                           
   723  0072                     ??_send_char:	
   724                           ; 1 bytes @ 0x2
   725                           
   726  0072                     ??_isdigit:	
   727                           ; 1 bytes @ 0x2
   728                           
   729  0072                     ??_I2C_Master_Wait:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  0072                     ??_I2C_Master_Start:	
   733                           ; 1 bytes @ 0x2
   734                           
   735  0072                     ??_I2C_Master_Stop:	
   736                           ; 1 bytes @ 0x2
   737                           
   738  0072                     ?_I2C_Master_Write:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0072                     ?__Umul8_16:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0072                     ?_I2C_Master_Read:	
   745                           ; 2 bytes @ 0x2
   746                           
   747  0072                     ?___wmul:	
   748                           ; 2 bytes @ 0x2
   749                           
   750  0072                     ?___awmod:	
   751                           ; 2 bytes @ 0x2
   752                           
   753  0072                     ?___lwmod:	
   754                           ; 2 bytes @ 0x2
   755                           
   756  0072                     ?__tdiv_to_l_:	
   757                           ; 2 bytes @ 0x2
   758                           
   759  0072                     ?__div_to_l_:	
   760                           ; 4 bytes @ 0x2
   761                           
   762  0072                     ?___lldiv:	
   763                           ; 4 bytes @ 0x2
   764                           
   765  0072                     ?___flneg:	
   766                           ; 4 bytes @ 0x2
   767                           
   768  0072                     ?___llmod:	
   769                           ; 4 bytes @ 0x2
   770                           
   771  0072                     ?___xxtofl:	
   772                           ; 4 bytes @ 0x2
   773                           
   774  0072                     send_char@dato:	
   775                           ; 4 bytes @ 0x2
   776                           
   777  0072                     __Umul8_16@multiplicand:	
   778                           ; 1 bytes @ 0x2
   779                           
   780  0072                     _isdigit$991:	
   781                           ; 1 bytes @ 0x2
   782                           
   783  0072                     I2C_Master_Write@d:	
   784                           ; 1 bytes @ 0x2
   785                           
   786  0072                     I2C_Master_Read@a:	
   787                           ; 2 bytes @ 0x2
   788                           
   789  0072                     ___wmul@multiplier:	
   790                           ; 2 bytes @ 0x2
   791                           
   792  0072                     ___awmod@divisor:	
   793                           ; 2 bytes @ 0x2
   794                           
   795  0072                     ___lwmod@divisor:	
   796                           ; 2 bytes @ 0x2
   797                           
   798  0072                     ___lldiv@divisor:	
   799                           ; 2 bytes @ 0x2
   800                           
   801  0072                     __div_to_l_@f1:	
   802                           ; 4 bytes @ 0x2
   803                           
   804  0072                     ___fleq@ff1:	
   805                           ; 4 bytes @ 0x2
   806                           
   807  0072                     ___flge@ff1:	
   808                           ; 4 bytes @ 0x2
   809                           
   810  0072                     ___flneg@f1:	
   811                           ; 4 bytes @ 0x2
   812                           
   813  0072                     __tdiv_to_l_@f1:	
   814                           ; 4 bytes @ 0x2
   815                           
   816  0072                     ___llmod@divisor:	
   817                           ; 4 bytes @ 0x2
   818                           
   819  0072                     ___xxtofl@val:	
   820                           ; 4 bytes @ 0x2
   821                           
   822                           
   823                           ; 4 bytes @ 0x2
   824  0072                     	ds	1
   825  0073                     ??_send_crct:
   826  0073                     isdigit@c:	
   827                           ; 1 bytes @ 0x3
   828                           
   829                           
   830                           ; 1 bytes @ 0x3
   831  0073                     	ds	1
   832  0074                     ??__Umul8_16:
   833  0074                     ??_I2C_Master_Write:	
   834                           ; 1 bytes @ 0x4
   835                           
   836  0074                     ??_I2C_Master_Read:	
   837                           ; 1 bytes @ 0x4
   838                           
   839  0074                     send_crct@i:	
   840                           ; 1 bytes @ 0x4
   841                           
   842  0074                     ___wmul@multiplicand:	
   843                           ; 2 bytes @ 0x4
   844                           
   845  0074                     ___awmod@dividend:	
   846                           ; 2 bytes @ 0x4
   847                           
   848  0074                     ___lwmod@dividend:	
   849                           ; 2 bytes @ 0x4
   850                           
   851                           
   852                           ; 2 bytes @ 0x4
   853  0074                     	ds	2
   854  0076                     ??___wmul:
   855  0076                     ??___awmod:	
   856                           ; 1 bytes @ 0x6
   857                           
   858  0076                     ??___flneg:	
   859                           ; 1 bytes @ 0x6
   860                           
   861  0076                     ??___lwmod:	
   862                           ; 1 bytes @ 0x6
   863                           
   864  0076                     ??___xxtofl:	
   865                           ; 1 bytes @ 0x6
   866                           
   867  0076                     send_crct@st:	
   868                           ; 1 bytes @ 0x6
   869                           
   870  0076                     I2C_Master_Read@temp:	
   871                           ; 1 bytes @ 0x6
   872                           
   873  0076                     ___wmul@product:	
   874                           ; 2 bytes @ 0x6
   875                           
   876  0076                     __Umul8_16@product:	
   877                           ; 2 bytes @ 0x6
   878                           
   879  0076                     ___lldiv@dividend:	
   880                           ; 2 bytes @ 0x6
   881                           
   882  0076                     __div_to_l_@f2:	
   883                           ; 4 bytes @ 0x6
   884                           
   885  0076                     ___fleq@ff2:	
   886                           ; 4 bytes @ 0x6
   887                           
   888  0076                     ___flge@ff2:	
   889                           ; 4 bytes @ 0x6
   890                           
   891  0076                     __tdiv_to_l_@f2:	
   892                           ; 4 bytes @ 0x6
   893                           
   894  0076                     ___llmod@dividend:	
   895                           ; 4 bytes @ 0x6
   896                           
   897                           
   898                           ; 4 bytes @ 0x6
   899  0076                     	ds	1
   900  0077                     ___awmod@counter:
   901  0077                     ___lwmod@counter:	
   902                           ; 1 bytes @ 0x7
   903                           
   904                           
   905                           ; 1 bytes @ 0x7
   906  0077                     	ds	1
   907  0078                     ??___lwdiv:
   908  0078                     ___awmod@sign:	
   909                           ; 1 bytes @ 0x8
   910                           
   911  0078                     __Umul8_16@word_mpld:	
   912                           ; 1 bytes @ 0x8
   913                           
   914                           
   915                           ; 2 bytes @ 0x8
   916  0078                     	ds	1
   917  0079                     ??___awdiv:
   918                           
   919                           ; 1 bytes @ 0x9
   920  0079                     	ds	1
   921  007A                     ??__div_to_l_:
   922  007A                     ??___lldiv:	
   923                           ; 1 bytes @ 0xA
   924                           
   925  007A                     ??___llmod:	
   926                           ; 1 bytes @ 0xA
   927                           
   928  007A                     __Umul8_16@multiplier:	
   929                           ; 1 bytes @ 0xA
   930                           
   931                           
   932                           ; 1 bytes @ 0xA
   933  007A                     	ds	1
   934  007B                     ??_setup:
   935  007B                     ??___flsub:	
   936                           ; 1 bytes @ 0xB
   937                           
   938                           
   939                           	psect	cstackBANK0
   940  0020                     __pcstackBANK0:	
   941                           ; 1 bytes @ 0xB
   942                           
   943  0020                     ??__tdiv_to_l_:
   944  0020                     ??___fleq:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0020                     ??___flge:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0020                     ?___awdiv:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0020                     ?___lwdiv:	
   954                           ; 2 bytes @ 0x0
   955                           
   956  0020                     ___llmod@counter:	
   957                           ; 2 bytes @ 0x0
   958                           
   959  0020                     ___xxtofl@sign:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0020                     ___awdiv@divisor:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0020                     ___lwdiv@divisor:	
   966                           ; 2 bytes @ 0x0
   967                           
   968  0020                     ___lldiv@quotient:	
   969                           ; 2 bytes @ 0x0
   970                           
   971  0020                     __div_to_l_@quot:	
   972                           ; 4 bytes @ 0x0
   973                           
   974                           
   975                           ; 4 bytes @ 0x0
   976  0020                     	ds	1
   977  0021                     ___xxtofl@exp:
   978                           
   979                           ; 1 bytes @ 0x1
   980  0021                     	ds	1
   981  0022                     ___awdiv@dividend:
   982  0022                     ___lwdiv@dividend:	
   983                           ; 2 bytes @ 0x2
   984                           
   985  0022                     ___xxtofl@arg:	
   986                           ; 2 bytes @ 0x2
   987                           
   988                           
   989                           ; 4 bytes @ 0x2
   990  0022                     	ds	2
   991  0024                     ___lldiv@counter:
   992  0024                     ___awdiv@counter:	
   993                           ; 1 bytes @ 0x4
   994                           
   995  0024                     __div_to_l_@cntr:	
   996                           ; 1 bytes @ 0x4
   997                           
   998  0024                     ___lwdiv@counter:	
   999                           ; 1 bytes @ 0x4
  1000                           
  1001  0024                     __tdiv_to_l_@quot:	
  1002                           ; 1 bytes @ 0x4
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x4
  1006  0024                     	ds	1
  1007  0025                     ?_I2C_Master_Init:
  1008  0025                     ___awdiv@sign:	
  1009                           ; 1 bytes @ 0x5
  1010                           
  1011  0025                     __div_to_l_@exp1:	
  1012                           ; 1 bytes @ 0x5
  1013                           
  1014  0025                     ___lwdiv@quotient:	
  1015                           ; 1 bytes @ 0x5
  1016                           
  1017  0025                     I2C_Master_Init@c:	
  1018                           ; 2 bytes @ 0x5
  1019                           
  1020                           
  1021                           ; 4 bytes @ 0x5
  1022  0025                     	ds	1
  1023  0026                     ?_conv:
  1024  0026                     ___awdiv@quotient:	
  1025                           ; 4 bytes @ 0x6
  1026                           
  1027                           
  1028                           ; 2 bytes @ 0x6
  1029  0026                     	ds	2
  1030  0028                     ?___flmul:
  1031  0028                     __tdiv_to_l_@cntr:	
  1032                           ; 4 bytes @ 0x8
  1033                           
  1034  0028                     ___flmul@b:	
  1035                           ; 1 bytes @ 0x8
  1036                           
  1037                           
  1038                           ; 4 bytes @ 0x8
  1039  0028                     	ds	1
  1040  0029                     ??_I2C_Master_Init:
  1041  0029                     __tdiv_to_l_@exp1:	
  1042                           ; 1 bytes @ 0x9
  1043                           
  1044                           
  1045                           ; 1 bytes @ 0x9
  1046  0029                     	ds	1
  1047  002A                     ??_conv:
  1048                           
  1049                           ; 1 bytes @ 0xA
  1050  002A                     	ds	2
  1051  002C                     ___flmul@a:
  1052                           
  1053                           ; 4 bytes @ 0xC
  1054  002C                     	ds	2
  1055  002E                     conv@result:
  1056                           
  1057                           ; 4 bytes @ 0xE
  1058  002E                     	ds	2
  1059  0030                     ??___flmul:
  1060                           
  1061                           ; 1 bytes @ 0x10
  1062  0030                     	ds	2
  1063  0032                     conv@aa:
  1064                           
  1065                           ; 1 bytes @ 0x12
  1066  0032                     	ds	3
  1067  0035                     ___flmul@sign:
  1068                           
  1069                           ; 1 bytes @ 0x15
  1070  0035                     	ds	1
  1071  0036                     ___flmul@grs:
  1072                           
  1073                           ; 4 bytes @ 0x16
  1074  0036                     	ds	4
  1075  003A                     ___flmul@aexp:
  1076                           
  1077                           ; 1 bytes @ 0x1A
  1078  003A                     	ds	1
  1079  003B                     ___flmul@bexp:
  1080                           
  1081                           ; 1 bytes @ 0x1B
  1082  003B                     	ds	1
  1083  003C                     ___flmul@prod:
  1084                           
  1085                           ; 4 bytes @ 0x1C
  1086  003C                     	ds	4
  1087  0040                     ___flmul@temp:
  1088                           
  1089                           ; 2 bytes @ 0x20
  1090  0040                     	ds	2
  1091  0042                     ?_fround:
  1092  0042                     ?_scale:	
  1093                           ; 4 bytes @ 0x22
  1094                           
  1095                           
  1096                           ; 4 bytes @ 0x22
  1097  0042                     	ds	4
  1098  0046                     ??_fround:
  1099  0046                     ??_scale:	
  1100                           ; 1 bytes @ 0x26
  1101                           
  1102                           
  1103                           ; 1 bytes @ 0x26
  1104  0046                     	ds	7
  1105  004D                     _fround$1179:
  1106                           
  1107                           ; 4 bytes @ 0x2D
  1108  004D                     	ds	3
  1109  0050                     _scale$1180:
  1110                           
  1111                           ; 4 bytes @ 0x30
  1112  0050                     	ds	1
  1113  0051                     _fround$1178:
  1114                           
  1115                           ; 4 bytes @ 0x31
  1116  0051                     	ds	3
  1117  0054                     scale@scl:
  1118                           
  1119                           ; 1 bytes @ 0x34
  1120  0054                     	ds	1
  1121  0055                     ?___fltol:
  1122  0055                     fround@prec:	
  1123                           ; 4 bytes @ 0x35
  1124                           
  1125  0055                     ___fltol@f1:	
  1126                           ; 1 bytes @ 0x35
  1127                           
  1128                           
  1129                           ; 4 bytes @ 0x35
  1130  0055                     	ds	1
  1131  0056                     ?___fladd:
  1132  0056                     ___fladd@b:	
  1133                           ; 4 bytes @ 0x36
  1134                           
  1135                           
  1136                           ; 4 bytes @ 0x36
  1137  0056                     	ds	3
  1138  0059                     ??___fltol:
  1139                           
  1140                           ; 1 bytes @ 0x39
  1141  0059                     	ds	1
  1142  005A                     ___fladd@a:
  1143                           
  1144                           ; 4 bytes @ 0x3A
  1145  005A                     	ds	4
  1146  005E                     ??___fladd:
  1147  005E                     ___fltol@sign1:	
  1148                           ; 1 bytes @ 0x3E
  1149                           
  1150                           
  1151                           ; 1 bytes @ 0x3E
  1152  005E                     	ds	1
  1153  005F                     ___fltol@exp1:
  1154                           
  1155                           ; 1 bytes @ 0x3F
  1156  005F                     	ds	7
  1157  0066                     ___fladd@signs:
  1158                           
  1159                           ; 1 bytes @ 0x46
  1160  0066                     	ds	1
  1161  0067                     ___fladd@aexp:
  1162                           
  1163                           ; 1 bytes @ 0x47
  1164  0067                     	ds	1
  1165  0068                     ___fladd@bexp:
  1166                           
  1167                           ; 1 bytes @ 0x48
  1168  0068                     	ds	1
  1169  0069                     ___fladd@grs:
  1170                           
  1171                           ; 1 bytes @ 0x49
  1172  0069                     	ds	1
  1173  006A                     ??_sprintf:
  1174                           
  1175                           ; 1 bytes @ 0x4A
  1176  006A                     	ds	5
  1177                           
  1178                           	psect	maintext
  1179  119B                     __pmaintext:	
  1180 ;;
  1181 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1182 ;;
  1183 ;; *************** function _main *****************
  1184 ;; Defined at:
  1185 ;;		line 83 in file "maestro.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : B00/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0
  1201 ;;      Temps:          0       0       3       0       0
  1202 ;;      Totals:         0       0       3       0       0
  1203 ;;Total ram usage:        3 bytes
  1204 ;; Hardware stack levels required when called:    5
  1205 ;; This function calls:
  1206 ;;		_I2C_Master_Read
  1207 ;;		_I2C_Master_Start
  1208 ;;		_I2C_Master_Stop
  1209 ;;		_I2C_Master_Write
  1210 ;;		_cfg_clk
  1211 ;;		_cfg_usart
  1212 ;;		_conv
  1213 ;;		_send_crct
  1214 ;;		_setup
  1215 ;;		_sprintf
  1216 ;; This function is called by:
  1217 ;;		Startup code after reset
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           
  1222                           ;psect for function _main
  1223  119B                     _main:
  1224  119B                     l4008:	
  1225                           ;incstack = 0
  1226                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1227                           
  1228                           
  1229                           ;maestro.c: 84:     setup();
  1230  119B  160A  158A  231A  160A  118A  	fcall	_setup
  1231                           
  1232                           ;maestro.c: 85:     cfg_clk();
  1233  11A0  160A  158A  2290  160A  118A  	fcall	_cfg_clk
  1234                           
  1235                           ;maestro.c: 86:     cfg_usart();
  1236  11A5  160A  118A  200B  160A  118A  	fcall	_cfg_usart
  1237  11AA                     l152:	
  1238                           ;maestro.c: 87:     while(1){
  1239                           
  1240                           
  1241                           ;maestro.c: 94:         I2C_Master_Start();
  1242  11AA  160A  158A  22A0  160A  118A  	fcall	_I2C_Master_Start
  1243                           
  1244                           ;maestro.c: 95:         I2C_Master_Write(0x51);
  1245  11AF  3051               	movlw	81
  1246  11B0  00F2               	movwf	I2C_Master_Write@d
  1247  11B1  3000               	movlw	0
  1248  11B2  00F3               	movwf	I2C_Master_Write@d+1
  1249  11B3  160A  158A  22B2  160A  118A  	fcall	_I2C_Master_Write
  1250                           
  1251                           ;maestro.c: 96:         pd = I2C_Master_Read(0);
  1252  11B8  3000               	movlw	0
  1253  11B9  00F2               	movwf	I2C_Master_Read@a
  1254  11BA  00F3               	movwf	I2C_Master_Read@a+1
  1255  11BB  160A  158A  2387  160A  118A  	fcall	_I2C_Master_Read
  1256  11C0  0872               	movf	?_I2C_Master_Read,w
  1257  11C1  1683               	bsf	3,5	;RP0=1, select bank1
  1258  11C2  1303               	bcf	3,6	;RP1=0, select bank1
  1259  11C3  00D0               	movwf	??_main^(0+128)
  1260  11C4  0850               	movf	??_main^(0+128),w
  1261  11C5  00EC               	movwf	_pd^(0+128)
  1262                           
  1263                           ;maestro.c: 97:         I2C_Master_Stop();
  1264  11C6  160A  158A  22A9  160A  118A  	fcall	_I2C_Master_Stop
  1265  11CB                     l4010:
  1266                           
  1267                           ;maestro.c: 98:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1268  11CB  3002               	movlw	2
  1269  11CC  1683               	bsf	3,5	;RP0=1, select bank1
  1270  11CD  1303               	bcf	3,6	;RP1=0, select bank1
  1271  11CE  00D2               	movwf	(??_main^(0+128)+2)
  1272  11CF  3004               	movlw	4
  1273  11D0  00D1               	movwf	(??_main^(0+128)+1)
  1274  11D1  30B9               	movlw	185
  1275  11D2  00D0               	movwf	??_main^(0+128)
  1276  11D3                     u6577:
  1277  11D3  0BD0               	decfsz	??_main^(0+128),f
  1278  11D4  29D3               	goto	u6577
  1279  11D5  0BD1               	decfsz	(??_main^(0+128)+1),f
  1280  11D6  29D3               	goto	u6577
  1281  11D7  0BD2               	decfsz	(??_main^(0+128)+2),f
  1282  11D8  29D3               	goto	u6577
  1283  11D9  29DA               	nop2
  1284  11DA                     l4012:
  1285                           
  1286                           ;maestro.c: 100:         lock = (0x0F & pd);
  1287  11DA  1683               	bsf	3,5	;RP0=1, select bank1
  1288  11DB  1303               	bcf	3,6	;RP1=0, select bank1
  1289  11DC  086C               	movf	_pd^(0+128),w
  1290  11DD  390F               	andlw	15
  1291  11DE  00D0               	movwf	??_main^(0+128)
  1292  11DF  0850               	movf	??_main^(0+128),w
  1293  11E0  00E1               	movwf	_lock^(0+128)
  1294  11E1                     l4014:
  1295                           
  1296                           ;maestro.c: 101:         door = (0x0F & (pd>>4));
  1297  11E1  086C               	movf	_pd^(0+128),w
  1298  11E2  00D0               	movwf	??_main^(0+128)
  1299  11E3  3004               	movlw	4
  1300  11E4                     u6545:
  1301  11E4  1003               	clrc
  1302  11E5  0CD0               	rrf	??_main^(0+128),f
  1303  11E6  3EFF               	addlw	-1
  1304  11E7  1D03               	skipz
  1305  11E8  29E4               	goto	u6545
  1306  11E9  0850               	movf	??_main^(0+128),w
  1307  11EA  390F               	andlw	15
  1308  11EB  00D1               	movwf	(??_main+1)^(0+128)
  1309  11EC  0851               	movf	(??_main+1)^(0+128),w
  1310  11ED  00E0               	movwf	_door^(0+128)
  1311  11EE                     l4016:
  1312                           
  1313                           ;maestro.c: 103:         v0 = conv(lock);
  1314  11EE  0861               	movf	_lock^(0+128),w
  1315  11EF  120A  158A  2001  160A  118A  	fcall	_conv
  1316  11F4  1283               	bcf	3,5	;RP0=0, select bank0
  1317  11F5  1303               	bcf	3,6	;RP1=0, select bank0
  1318  11F6  0829               	movf	?_conv+3,w
  1319  11F7  1683               	bsf	3,5	;RP0=1, select bank1
  1320  11F8  1303               	bcf	3,6	;RP1=0, select bank1
  1321  11F9  00DE               	movwf	(_v0+3)^(0+128)
  1322  11FA  1283               	bcf	3,5	;RP0=0, select bank0
  1323  11FB  1303               	bcf	3,6	;RP1=0, select bank0
  1324  11FC  0828               	movf	?_conv+2,w
  1325  11FD  1683               	bsf	3,5	;RP0=1, select bank1
  1326  11FE  1303               	bcf	3,6	;RP1=0, select bank1
  1327  11FF  00DD               	movwf	(_v0+2)^(0+128)
  1328  1200  1283               	bcf	3,5	;RP0=0, select bank0
  1329  1201  1303               	bcf	3,6	;RP1=0, select bank0
  1330  1202  0827               	movf	?_conv+1,w
  1331  1203  1683               	bsf	3,5	;RP0=1, select bank1
  1332  1204  1303               	bcf	3,6	;RP1=0, select bank1
  1333  1205  00DC               	movwf	(_v0+1)^(0+128)
  1334  1206  1283               	bcf	3,5	;RP0=0, select bank0
  1335  1207  1303               	bcf	3,6	;RP1=0, select bank0
  1336  1208  0826               	movf	?_conv,w
  1337  1209  1683               	bsf	3,5	;RP0=1, select bank1
  1338  120A  1303               	bcf	3,6	;RP1=0, select bank1
  1339  120B  00DB               	movwf	_v0^(0+128)
  1340  120C                     l4018:
  1341                           
  1342                           ;maestro.c: 104:         v1 = conv(door);
  1343  120C  0860               	movf	_door^(0+128),w
  1344  120D  120A  158A  2001  160A  118A  	fcall	_conv
  1345  1212  1283               	bcf	3,5	;RP0=0, select bank0
  1346  1213  1303               	bcf	3,6	;RP1=0, select bank0
  1347  1214  0829               	movf	?_conv+3,w
  1348  1215  1683               	bsf	3,5	;RP0=1, select bank1
  1349  1216  1303               	bcf	3,6	;RP1=0, select bank1
  1350  1217  00DA               	movwf	(_v1+3)^(0+128)
  1351  1218  1283               	bcf	3,5	;RP0=0, select bank0
  1352  1219  1303               	bcf	3,6	;RP1=0, select bank0
  1353  121A  0828               	movf	?_conv+2,w
  1354  121B  1683               	bsf	3,5	;RP0=1, select bank1
  1355  121C  1303               	bcf	3,6	;RP1=0, select bank1
  1356  121D  00D9               	movwf	(_v1+2)^(0+128)
  1357  121E  1283               	bcf	3,5	;RP0=0, select bank0
  1358  121F  1303               	bcf	3,6	;RP1=0, select bank0
  1359  1220  0827               	movf	?_conv+1,w
  1360  1221  1683               	bsf	3,5	;RP0=1, select bank1
  1361  1222  1303               	bcf	3,6	;RP1=0, select bank1
  1362  1223  00D8               	movwf	(_v1+1)^(0+128)
  1363  1224  1283               	bcf	3,5	;RP0=0, select bank0
  1364  1225  1303               	bcf	3,6	;RP1=0, select bank0
  1365  1226  0826               	movf	?_conv,w
  1366  1227  1683               	bsf	3,5	;RP0=1, select bank1
  1367  1228  1303               	bcf	3,6	;RP1=0, select bank1
  1368  1229  00D7               	movwf	_v1^(0+128)
  1369  122A                     l4020:
  1370                           
  1371                           ;maestro.c: 105:         v2 = conv(light);
  1372  122A  085F               	movf	_light^(0+128),w
  1373  122B  120A  158A  2001  160A  118A  	fcall	_conv
  1374  1230  1283               	bcf	3,5	;RP0=0, select bank0
  1375  1231  1303               	bcf	3,6	;RP1=0, select bank0
  1376  1232  0829               	movf	?_conv+3,w
  1377  1233  1683               	bsf	3,5	;RP0=1, select bank1
  1378  1234  1303               	bcf	3,6	;RP1=0, select bank1
  1379  1235  00D6               	movwf	(_v2+3)^(0+128)
  1380  1236  1283               	bcf	3,5	;RP0=0, select bank0
  1381  1237  1303               	bcf	3,6	;RP1=0, select bank0
  1382  1238  0828               	movf	?_conv+2,w
  1383  1239  1683               	bsf	3,5	;RP0=1, select bank1
  1384  123A  1303               	bcf	3,6	;RP1=0, select bank1
  1385  123B  00D5               	movwf	(_v2+2)^(0+128)
  1386  123C  1283               	bcf	3,5	;RP0=0, select bank0
  1387  123D  1303               	bcf	3,6	;RP1=0, select bank0
  1388  123E  0827               	movf	?_conv+1,w
  1389  123F  1683               	bsf	3,5	;RP0=1, select bank1
  1390  1240  1303               	bcf	3,6	;RP1=0, select bank1
  1391  1241  00D4               	movwf	(_v2+1)^(0+128)
  1392  1242  1283               	bcf	3,5	;RP0=0, select bank0
  1393  1243  1303               	bcf	3,6	;RP1=0, select bank0
  1394  1244  0826               	movf	?_conv,w
  1395  1245  1683               	bsf	3,5	;RP0=1, select bank1
  1396  1246  1303               	bcf	3,6	;RP1=0, select bank1
  1397  1247  00D3               	movwf	_v2^(0+128)
  1398  1248                     l4022:
  1399                           
  1400                           ;maestro.c: 107:         sprintf(f1, ",%0.0f,%0.0f,%0.0f,",v0,v1,v2);
  1401  1248  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1402  1249  00D0               	movwf	??_main^(0+128)
  1403  124A  0850               	movf	??_main^(0+128),w
  1404  124B  00A8               	movwf	sprintf@f^(0+128)
  1405  124C  085E               	movf	(_v0+3)^(0+128),w
  1406  124D  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1407  124E  085D               	movf	(_v0+2)^(0+128),w
  1408  124F  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1409  1250  085C               	movf	(_v0+1)^(0+128),w
  1410  1251  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1411  1252  085B               	movf	_v0^(0+128),w
  1412  1253  00A9               	movwf	(?_sprintf^(0+128)+1)
  1413  1254  085A               	movf	(_v1+3)^(0+128),w
  1414  1255  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1415  1256  0859               	movf	(_v1+2)^(0+128),w
  1416  1257  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1417  1258  0858               	movf	(_v1+1)^(0+128),w
  1418  1259  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1419  125A  0857               	movf	_v1^(0+128),w
  1420  125B  00AD               	movwf	(?_sprintf^(0+128)+5)
  1421  125C  0856               	movf	(_v2+3)^(0+128),w
  1422  125D  00B4               	movwf	((?_sprintf+3)^(0+128)+9)
  1423  125E  0855               	movf	(_v2+2)^(0+128),w
  1424  125F  00B3               	movwf	((?_sprintf+2)^(0+128)+9)
  1425  1260  0854               	movf	(_v2+1)^(0+128),w
  1426  1261  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1427  1262  0853               	movf	_v2^(0+128),w
  1428  1263  00B1               	movwf	(?_sprintf^(0+128)+9)
  1429  1264  30E2               	movlw	(low (_f1| 0))& (0+255)
  1430  1265  120A  158A  202A  160A  118A  	fcall	_sprintf
  1431  126A                     l4024:
  1432                           
  1433                           ;maestro.c: 109:         send_crct(f1);
  1434  126A  30E2               	movlw	(low (_f1| 0))& (0+255)
  1435  126B  160A  158A  22F9  160A  118A  	fcall	_send_crct
  1436  1270                     l4026:
  1437                           
  1438                           ;maestro.c: 110:         PORTDbits.RD0 = lock;
  1439  1270  1683               	bsf	3,5	;RP0=1, select bank1
  1440  1271  1303               	bcf	3,6	;RP1=0, select bank1
  1441  1272  0C61               	rrf	_lock^(0+128),w
  1442  1273  1283               	bcf	3,5	;RP0=0, select bank0
  1443  1274  1303               	bcf	3,6	;RP1=0, select bank0
  1444  1275  1C03               	skipc
  1445  1276  1008               	bcf	8,0	;volatile
  1446  1277  1803               	skipnc
  1447  1278  1408               	bsf	8,0	;volatile
  1448  1279                     l4028:
  1449                           
  1450                           ;maestro.c: 111:         PORTDbits.RD1 = door;
  1451  1279  1683               	bsf	3,5	;RP0=1, select bank1
  1452  127A  1303               	bcf	3,6	;RP1=0, select bank1
  1453  127B  0C60               	rrf	_door^(0+128),w
  1454  127C  1283               	bcf	3,5	;RP0=0, select bank0
  1455  127D  1303               	bcf	3,6	;RP1=0, select bank0
  1456  127E  1C03               	skipc
  1457  127F  1088               	bcf	8,1	;volatile
  1458  1280  1803               	skipnc
  1459  1281  1488               	bsf	8,1	;volatile
  1460  1282                     l4030:
  1461                           
  1462                           ;maestro.c: 113:         if(light == 1){
  1463  1282  1683               	bsf	3,5	;RP0=1, select bank1
  1464  1283  1303               	bcf	3,6	;RP1=0, select bank1
  1465  1284  035F               	decf	_light^(0+128),w
  1466  1285  1D03               	btfss	3,2
  1467  1286  2A88               	goto	u6551
  1468  1287  2A89               	goto	u6550
  1469  1288                     u6551:
  1470  1288  2A8C               	goto	l4034
  1471  1289                     u6550:
  1472  1289                     l4032:
  1473                           
  1474                           ;maestro.c: 114:             PORTAbits.RA0 = 1;
  1475  1289  1283               	bcf	3,5	;RP0=0, select bank0
  1476  128A  1303               	bcf	3,6	;RP1=0, select bank0
  1477  128B  1405               	bsf	5,0	;volatile
  1478  128C                     l4034:
  1479                           
  1480                           ;maestro.c: 116:         if(light == 0){
  1481  128C  1683               	bsf	3,5	;RP0=1, select bank1
  1482  128D  1303               	bcf	3,6	;RP1=0, select bank1
  1483  128E  085F               	movf	_light^(0+128),w
  1484  128F  1D03               	btfss	3,2
  1485  1290  2A92               	goto	u6561
  1486  1291  2A93               	goto	u6560
  1487  1292                     u6561:
  1488  1292  29AA               	goto	l152
  1489  1293                     u6560:
  1490  1293                     l4036:
  1491                           
  1492                           ;maestro.c: 117:             PORTAbits.RA0 = 0;
  1493  1293  1283               	bcf	3,5	;RP0=0, select bank0
  1494  1294  1303               	bcf	3,6	;RP1=0, select bank0
  1495  1295  1005               	bcf	5,0	;volatile
  1496  1296  29AA               	goto	l152
  1497  1297  120A  118A  280C   	ljmp	start
  1498  129A                     __end_of_main:
  1499                           
  1500                           	psect	text1
  1501  082A                     __ptext1:	
  1502 ;; *************** function _sprintf *****************
  1503 ;; Defined at:
  1504 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  sp              1    wreg     PTR unsigned char 
  1507 ;;		 -> f1(10), 
  1508 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1509 ;;		 -> STR_1(20), 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  sp              1   46[BANK1 ] PTR unsigned char 
  1512 ;;		 -> f1(10), 
  1513 ;;  fval            4   40[BANK1 ] PTR unsigned char 
  1514 ;;  tmpval          4   30[BANK1 ] struct .
  1515 ;;  val             4   26[BANK1 ] unsigned long 
  1516 ;;  prec            2   44[BANK1 ] int 
  1517 ;;  width           2   38[BANK1 ] int 
  1518 ;;  flag            2   36[BANK1 ] unsigned short 
  1519 ;;  eexp            2   34[BANK1 ] int 
  1520 ;;  cp              2    0        PTR const unsigned char 
  1521 ;;  len             2    0        unsigned int 
  1522 ;;  c               1   47[BANK1 ] unsigned char 
  1523 ;;  ap              1   25[BANK1 ] PTR void [1]
  1524 ;;		 -> ?_sprintf(2), 
  1525 ;;  d               1    0        unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  2    8[BANK1 ] int 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       0      13       0       0
  1536 ;;      Locals:         0       0      27       0       0
  1537 ;;      Temps:          0       5       0       0       0
  1538 ;;      Totals:         0       5      40       0       0
  1539 ;;Total ram usage:       45 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    4
  1542 ;; This function calls:
  1543 ;;		___awdiv
  1544 ;;		___fladd
  1545 ;;		___fleq
  1546 ;;		___flge
  1547 ;;		___flmul
  1548 ;;		___flneg
  1549 ;;		___flsub
  1550 ;;		___fltol
  1551 ;;		___lldiv
  1552 ;;		___llmod
  1553 ;;		___wmul
  1554 ;;		___xxtofl
  1555 ;;		__div_to_l_
  1556 ;;		__tdiv_to_l_
  1557 ;;		_fround
  1558 ;;		_isdigit
  1559 ;;		_scale
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           
  1566                           ;psect for function _sprintf
  1567  082A                     _sprintf:
  1568                           
  1569                           ;incstack = 0
  1570                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1571                           ;sprintf@sp stored from wreg
  1572  082A  1683               	bsf	3,5	;RP0=1, select bank1
  1573  082B  1303               	bcf	3,6	;RP1=0, select bank1
  1574  082C  00CE               	movwf	sprintf@sp^(0+128)
  1575  082D                     l3702:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1578  082D  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1579  082E  1283               	bcf	3,5	;RP0=0, select bank0
  1580  082F  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0830  00EA               	movwf	??_sprintf
  1582  0831  086A               	movf	??_sprintf,w
  1583  0832  1683               	bsf	3,5	;RP0=1, select bank1
  1584  0833  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0834  00B9               	movwf	sprintf@ap^(0+128)
  1586  0835                     L1:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1589  0835  120A  118A  2D59   	goto	l3990
  1590  0838                     l3704:
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1593  0838  3025               	movlw	37
  1594  0839  064F               	xorwf	sprintf@c^(0+128),w
  1595  083A  1903               	btfsc	3,2
  1596  083B  283D               	goto	u6001
  1597  083C  283E               	goto	u6000
  1598  083D                     u6001:
  1599  083D  2852               	goto	l3710
  1600  083E                     u6000:
  1601  083E                     l3706:
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1604  083E  084F               	movf	sprintf@c^(0+128),w
  1605  083F  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0840  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0841  00EA               	movwf	??_sprintf
  1608  0842  1683               	bsf	3,5	;RP0=1, select bank1
  1609  0843  1303               	bcf	3,6	;RP1=0, select bank1
  1610  0844  084E               	movf	sprintf@sp^(0+128),w
  1611  0845  0084               	movwf	4
  1612  0846  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0847  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0848  086A               	movf	??_sprintf,w
  1615  0849  1383               	bcf	3,7	;select IRP bank0
  1616  084A  0080               	movwf	0
  1617  084B                     l3708:
  1618  084B  3001               	movlw	1
  1619  084C  00EA               	movwf	??_sprintf
  1620  084D  086A               	movf	??_sprintf,w
  1621  084E  1683               	bsf	3,5	;RP0=1, select bank1
  1622  084F  1303               	bcf	3,6	;RP1=0, select bank1
  1623  0850  07CE               	addwf	sprintf@sp^(0+128),f
  1624                           
  1625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1626  0851  2835               	goto	L1
  1627  0852                     l3710:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1630  0852  01C6               	clrf	sprintf@width^(0+128)
  1631  0853  01C7               	clrf	(sprintf@width+1)^(0+128)
  1632                           
  1633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1634  0854  01C4               	clrf	sprintf@flag^(0+128)
  1635  0855  01C5               	clrf	(sprintf@flag+1)^(0+128)
  1636  0856  2862               	goto	l3716
  1637  0857                     l303:	
  1638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1639                           
  1640                           
  1641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1642  0857  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0858  1303               	bcf	3,6	;RP1=0, select bank1
  1644  0859  1544               	bsf	sprintf@flag^(0+128),2
  1645  085A                     l3712:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  1648  085A  3001               	movlw	1
  1649  085B  1283               	bcf	3,5	;RP0=0, select bank0
  1650  085C  1303               	bcf	3,6	;RP1=0, select bank0
  1651  085D  00EA               	movwf	??_sprintf
  1652  085E  086A               	movf	??_sprintf,w
  1653  085F  1683               	bsf	3,5	;RP0=1, select bank1
  1654  0860  1303               	bcf	3,6	;RP1=0, select bank1
  1655  0861  07A8               	addwf	sprintf@f^(0+128),f
  1656  0862                     l3716:	
  1657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1658                           
  1659  0862  0828               	movf	sprintf@f^(0+128),w
  1660  0863  0084               	movwf	4
  1661  0864  160A  158A  2000  120A  158A  	fcall	stringdir
  1662  0869  1283               	bcf	3,5	;RP0=0, select bank0
  1663  086A  1303               	bcf	3,6	;RP1=0, select bank0
  1664  086B  00EA               	movwf	??_sprintf
  1665  086C  01EB               	clrf	??_sprintf+1
  1666                           
  1667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1668                           ; Switch size 1, requested type "simple"
  1669                           ; Number of cases is 1, Range of values is 0 to 0
  1670                           ; switch strategies available:
  1671                           ; Name         Instructions Cycles
  1672                           ; simple_byte            4     3 (average)
  1673                           ; direct_byte           11     8 (fixed)
  1674                           ; jumptable            260     6 (fixed)
  1675                           ;	Chosen strategy is simple_byte
  1676  086D  086B               	movf	??_sprintf+1,w
  1677  086E  3A00               	xorlw	0	; case 0
  1678  086F  1903               	skipnz
  1679  0870  2872               	goto	l4098
  1680  0871  2877               	goto	l3718
  1681  0872                     l4098:
  1682                           
  1683                           ; Switch size 1, requested type "simple"
  1684                           ; Number of cases is 1, Range of values is 48 to 48
  1685                           ; switch strategies available:
  1686                           ; Name         Instructions Cycles
  1687                           ; simple_byte            4     3 (average)
  1688                           ; direct_byte           14    11 (fixed)
  1689                           ; jumptable            263     9 (fixed)
  1690                           ;	Chosen strategy is simple_byte
  1691  0872  086A               	movf	??_sprintf,w
  1692  0873  3A30               	xorlw	48	; case 48
  1693  0874  1903               	skipnz
  1694  0875  2857               	goto	l303
  1695  0876  2877               	goto	l3718
  1696  0877                     l3718:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1699  0877  1683               	bsf	3,5	;RP0=1, select bank1
  1700  0878  1303               	bcf	3,6	;RP1=0, select bank1
  1701  0879  0828               	movf	sprintf@f^(0+128),w
  1702  087A  0084               	movwf	4
  1703  087B  160A  158A  2000  120A  158A  	fcall	stringdir
  1704  0880  160A  158A  22C6  120A  158A  	fcall	_isdigit
  1705  0885  1C03               	btfss	3,0
  1706  0886  2888               	goto	u6011
  1707  0887  2889               	goto	u6010
  1708  0888                     u6011:
  1709  0888  28D5               	goto	l3730
  1710  0889                     u6010:
  1711  0889                     l3720:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1714  0889  1683               	bsf	3,5	;RP0=1, select bank1
  1715  088A  1303               	bcf	3,6	;RP1=0, select bank1
  1716  088B  01C6               	clrf	sprintf@width^(0+128)
  1717  088C  01C7               	clrf	(sprintf@width+1)^(0+128)
  1718  088D                     l3722:
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1721  088D  300A               	movlw	10
  1722  088E  00F2               	movwf	___wmul@multiplier
  1723  088F  3000               	movlw	0
  1724  0890  00F3               	movwf	___wmul@multiplier+1
  1725  0891  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0892  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0893  0847               	movf	(sprintf@width+1)^(0+128),w
  1728  0894  00F5               	movwf	___wmul@multiplicand+1
  1729  0895  0846               	movf	sprintf@width^(0+128),w
  1730  0896  00F4               	movwf	___wmul@multiplicand
  1731  0897  160A  158A  233B  120A  158A  	fcall	___wmul
  1732  089C  0873               	movf	?___wmul+1,w
  1733  089D  1683               	bsf	3,5	;RP0=1, select bank1
  1734  089E  1303               	bcf	3,6	;RP1=0, select bank1
  1735  089F  00C7               	movwf	(sprintf@width+1)^(0+128)
  1736  08A0  0872               	movf	?___wmul,w
  1737  08A1  00C6               	movwf	sprintf@width^(0+128)
  1738  08A2                     l3724:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1741  08A2  0828               	movf	sprintf@f^(0+128),w
  1742  08A3  0084               	movwf	4
  1743  08A4  160A  158A  2000  120A  158A  	fcall	stringdir
  1744  08A9  3ED0               	addlw	208
  1745  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  1746  08AB  1303               	bcf	3,6	;RP1=0, select bank0
  1747  08AC  00EA               	movwf	??_sprintf
  1748  08AD  30FF               	movlw	255
  1749  08AE  1803               	skipnc
  1750  08AF  3000               	movlw	0
  1751  08B0  00EB               	movwf	??_sprintf+1
  1752  08B1  086A               	movf	??_sprintf,w
  1753  08B2  1683               	bsf	3,5	;RP0=1, select bank1
  1754  08B3  1303               	bcf	3,6	;RP1=0, select bank1
  1755  08B4  07C6               	addwf	sprintf@width^(0+128),f
  1756  08B5  1803               	skipnc
  1757  08B6  0AC7               	incf	(sprintf@width+1)^(0+128),f
  1758  08B7  1283               	bcf	3,5	;RP0=0, select bank0
  1759  08B8  1303               	bcf	3,6	;RP1=0, select bank0
  1760  08B9  086B               	movf	??_sprintf+1,w
  1761  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  1762  08BB  1303               	bcf	3,6	;RP1=0, select bank1
  1763  08BC  07C7               	addwf	(sprintf@width+1)^(0+128),f
  1764  08BD                     l3726:
  1765  08BD  3001               	movlw	1
  1766  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  1767  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  1768  08C0  00EA               	movwf	??_sprintf
  1769  08C1  086A               	movf	??_sprintf,w
  1770  08C2  1683               	bsf	3,5	;RP0=1, select bank1
  1771  08C3  1303               	bcf	3,6	;RP1=0, select bank1
  1772  08C4  07A8               	addwf	sprintf@f^(0+128),f
  1773  08C5                     l3728:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1776  08C5  0828               	movf	sprintf@f^(0+128),w
  1777  08C6  0084               	movwf	4
  1778  08C7  160A  158A  2000  120A  158A  	fcall	stringdir
  1779  08CC  160A  158A  22C6  120A  158A  	fcall	_isdigit
  1780  08D1  1803               	btfsc	3,0
  1781  08D2  28D4               	goto	u6021
  1782  08D3  28D5               	goto	u6020
  1783  08D4                     u6021:
  1784  08D4  288D               	goto	l3722
  1785  08D5                     u6020:
  1786  08D5                     l3730:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1789  08D5  1683               	bsf	3,5	;RP0=1, select bank1
  1790  08D6  1303               	bcf	3,6	;RP1=0, select bank1
  1791  08D7  0828               	movf	sprintf@f^(0+128),w
  1792  08D8  0084               	movwf	4
  1793  08D9  160A  158A  2000  120A  158A  	fcall	stringdir
  1794  08DE  3A2E               	xorlw	46
  1795  08DF  1D03               	skipz
  1796  08E0  28E2               	goto	u6031
  1797  08E1  28E5               	goto	u6030
  1798  08E2                     u6031:
  1799  08E2  160A  118A  2D22   	goto	l3746
  1800  08E5                     u6030:
  1801  08E5                     l3732:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1804  08E5  1745               	bsf	(sprintf@flag^(0+128)+1),6
  1805  08E6                     l3734:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1808  08E6  3001               	movlw	1
  1809  08E7  1283               	bcf	3,5	;RP0=0, select bank0
  1810  08E8  1303               	bcf	3,6	;RP1=0, select bank0
  1811  08E9  00EA               	movwf	??_sprintf
  1812  08EA  086A               	movf	??_sprintf,w
  1813  08EB  1683               	bsf	3,5	;RP0=1, select bank1
  1814  08EC  1303               	bcf	3,6	;RP1=0, select bank1
  1815  08ED  07A8               	addwf	sprintf@f^(0+128),f
  1816  08EE                     l3736:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1819  08EE  01CC               	clrf	sprintf@prec^(0+128)
  1820  08EF  01CD               	clrf	(sprintf@prec+1)^(0+128)
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1823  08F0  2929               	goto	l3744
  1824  08F1                     l3738:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1827  08F1  300A               	movlw	10
  1828  08F2  00F2               	movwf	___wmul@multiplier
  1829  08F3  3000               	movlw	0
  1830  08F4  00F3               	movwf	___wmul@multiplier+1
  1831  08F5  1683               	bsf	3,5	;RP0=1, select bank1
  1832  08F6  1303               	bcf	3,6	;RP1=0, select bank1
  1833  08F7  084D               	movf	(sprintf@prec+1)^(0+128),w
  1834  08F8  00F5               	movwf	___wmul@multiplicand+1
  1835  08F9  084C               	movf	sprintf@prec^(0+128),w
  1836  08FA  00F4               	movwf	___wmul@multiplicand
  1837  08FB  160A  158A  233B  120A  158A  	fcall	___wmul
  1838  0900  0873               	movf	?___wmul+1,w
  1839  0901  1683               	bsf	3,5	;RP0=1, select bank1
  1840  0902  1303               	bcf	3,6	;RP1=0, select bank1
  1841  0903  00CD               	movwf	(sprintf@prec+1)^(0+128)
  1842  0904  0872               	movf	?___wmul,w
  1843  0905  00CC               	movwf	sprintf@prec^(0+128)
  1844  0906                     l3740:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1847  0906  0828               	movf	sprintf@f^(0+128),w
  1848  0907  0084               	movwf	4
  1849  0908  160A  158A  2000  120A  158A  	fcall	stringdir
  1850  090D  3ED0               	addlw	208
  1851  090E  1283               	bcf	3,5	;RP0=0, select bank0
  1852  090F  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0910  00EA               	movwf	??_sprintf
  1854  0911  30FF               	movlw	255
  1855  0912  1803               	skipnc
  1856  0913  3000               	movlw	0
  1857  0914  00EB               	movwf	??_sprintf+1
  1858  0915  086A               	movf	??_sprintf,w
  1859  0916  1683               	bsf	3,5	;RP0=1, select bank1
  1860  0917  1303               	bcf	3,6	;RP1=0, select bank1
  1861  0918  07CC               	addwf	sprintf@prec^(0+128),f
  1862  0919  1803               	skipnc
  1863  091A  0ACD               	incf	(sprintf@prec+1)^(0+128),f
  1864  091B  1283               	bcf	3,5	;RP0=0, select bank0
  1865  091C  1303               	bcf	3,6	;RP1=0, select bank0
  1866  091D  086B               	movf	??_sprintf+1,w
  1867  091E  1683               	bsf	3,5	;RP0=1, select bank1
  1868  091F  1303               	bcf	3,6	;RP1=0, select bank1
  1869  0920  07CD               	addwf	(sprintf@prec+1)^(0+128),f
  1870  0921                     l3742:
  1871  0921  3001               	movlw	1
  1872  0922  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0923  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0924  00EA               	movwf	??_sprintf
  1875  0925  086A               	movf	??_sprintf,w
  1876  0926  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0927  1303               	bcf	3,6	;RP1=0, select bank1
  1878  0928  07A8               	addwf	sprintf@f^(0+128),f
  1879  0929                     l3744:
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1882  0929  0828               	movf	sprintf@f^(0+128),w
  1883  092A  0084               	movwf	4
  1884  092B  160A  158A  2000  120A  158A  	fcall	stringdir
  1885  0930  160A  158A  22C6  120A  158A  	fcall	_isdigit
  1886  0935  1803               	btfsc	3,0
  1887  0936  2938               	goto	u6041
  1888  0937  2939               	goto	u6040
  1889  0938                     u6041:
  1890  0938  28F1               	goto	l3738
  1891  0939                     u6040:
  1892  0939  160A  118A  2D2A   	goto	l3752
  1893                           
  1894                           	psect	text2
  1895  0C9D                     __ptext2:	
  1896 ;; *************** function _scale *****************
  1897 ;; Defined at:
  1898 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  scl             1    wreg     char 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  scl             1   52[BANK0 ] char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  4   34[BANK0 ] char 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       4       0       0       0
  1913 ;;      Locals:         0       5       0       0       0
  1914 ;;      Temps:          0      10       0       0       0
  1915 ;;      Totals:         0      19       0       0       0
  1916 ;;Total ram usage:       19 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    3
  1919 ;; This function calls:
  1920 ;;		___awdiv
  1921 ;;		___awmod
  1922 ;;		___flmul
  1923 ;; This function is called by:
  1924 ;;		_sprintf
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _scale
  1930  0C9D                     _scale:
  1931                           
  1932                           ;incstack = 0
  1933                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1934                           ;scale@scl stored from wreg
  1935  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  1936  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  1937  0C9F  00D4               	movwf	scale@scl
  1938  0CA0                     l2842:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  1941  0CA0  1FD4               	btfss	scale@scl,7
  1942  0CA1  2CA3               	goto	u4271
  1943  0CA2  2CA4               	goto	u4270
  1944  0CA3                     u4271:
  1945  0CA3  2E53               	goto	l2864
  1946  0CA4                     u4270:
  1947  0CA4                     l2844:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  1950  0CA4  09D4               	comf	scale@scl,f
  1951  0CA5  0AD4               	incf	scale@scl,f
  1952  0CA6                     l2846:
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  1955  0CA6  0854               	movf	scale@scl,w
  1956  0CA7  3A80               	xorlw	128
  1957  0CA8  3E12               	addlw	-238
  1958  0CA9  1C03               	skipc
  1959  0CAA  2CAC               	goto	u4281
  1960  0CAB  2CAD               	goto	u4280
  1961  0CAC                     u4281:
  1962  0CAC  2D97               	goto	l2854
  1963  0CAD                     u4280:
  1964  0CAD                     l2848:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  1967  0CAD  300A               	movlw	10
  1968  0CAE  00A0               	movwf	___awdiv@divisor
  1969  0CAF  3000               	movlw	0
  1970  0CB0  00A1               	movwf	___awdiv@divisor+1
  1971  0CB1  0854               	movf	scale@scl,w
  1972  0CB2  00F4               	movwf	___awmod@dividend
  1973  0CB3  01F5               	clrf	___awmod@dividend+1
  1974  0CB4  1BF4               	btfsc	___awmod@dividend,7
  1975  0CB5  03F5               	decf	___awmod@dividend+1,f
  1976  0CB6  3064               	movlw	100
  1977  0CB7  00F2               	movwf	___awmod@divisor
  1978  0CB8  3000               	movlw	0
  1979  0CB9  00F3               	movwf	___awmod@divisor+1
  1980  0CBA  160A  158A  2563  120A  158A  	fcall	___awmod
  1981  0CBF  0873               	movf	?___awmod+1,w
  1982  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0CC2  00A3               	movwf	___awdiv@dividend+1
  1985  0CC3  0872               	movf	?___awmod,w
  1986  0CC4  00A2               	movwf	___awdiv@dividend
  1987  0CC5  120A  118A  2787  120A  158A  	fcall	___awdiv
  1988  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0CCC  0820               	movf	?___awdiv,w
  1991  0CCD  00C6               	movwf	??_scale
  1992  0CCE  3001               	movlw	1
  1993  0CCF                     u4295:
  1994  0CCF  1003               	clrc
  1995  0CD0  0DC6               	rlf	??_scale,f
  1996  0CD1  3EFF               	addlw	-1
  1997  0CD2  1D03               	skipz
  1998  0CD3  2CCF               	goto	u4295
  1999  0CD4  1003               	clrc
  2000  0CD5  0D46               	rlf	??_scale,w
  2001  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2002  0CD7  0084               	movwf	4
  2003  0CD8  160A  158A  2000  120A  158A  	fcall	stringdir
  2004  0CDD  00C7               	movwf	??_scale+1
  2005  0CDE  160A  158A  2000  120A  158A  	fcall	stringdir
  2006  0CE3  00C8               	movwf	??_scale+2
  2007  0CE4  160A  158A  2000  120A  158A  	fcall	stringdir
  2008  0CE9  00C9               	movwf	??_scale+3
  2009  0CEA  160A  158A  2000  120A  158A  	fcall	stringdir
  2010  0CEF  00CA               	movwf	??_scale+4
  2011  0CF0  084A               	movf	??_scale+4,w
  2012  0CF1  00AB               	movwf	___flmul@b+3
  2013  0CF2  0849               	movf	??_scale+3,w
  2014  0CF3  00AA               	movwf	___flmul@b+2
  2015  0CF4  0848               	movf	??_scale+2,w
  2016  0CF5  00A9               	movwf	___flmul@b+1
  2017  0CF6  0847               	movf	??_scale+1,w
  2018  0CF7  00A8               	movwf	___flmul@b
  2019  0CF8  3064               	movlw	100
  2020  0CF9  00A0               	movwf	___awdiv@divisor
  2021  0CFA  3000               	movlw	0
  2022  0CFB  00A1               	movwf	___awdiv@divisor+1
  2023  0CFC  0854               	movf	scale@scl,w
  2024  0CFD  00A2               	movwf	___awdiv@dividend
  2025  0CFE  01A3               	clrf	___awdiv@dividend+1
  2026  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2027  0D00  03A3               	decf	___awdiv@dividend+1,f
  2028  0D01  120A  118A  2787  120A  158A  	fcall	___awdiv
  2029  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0D08  0820               	movf	?___awdiv,w
  2032  0D09  00CB               	movwf	??_scale+5
  2033  0D0A  3001               	movlw	1
  2034  0D0B                     u4305:
  2035  0D0B  1003               	clrc
  2036  0D0C  0DCB               	rlf	??_scale+5,f
  2037  0D0D  3EFF               	addlw	-1
  2038  0D0E  1D03               	skipz
  2039  0D0F  2D0B               	goto	u4305
  2040  0D10  1003               	clrc
  2041  0D11  0D4B               	rlf	??_scale+5,w
  2042  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2043  0D13  0084               	movwf	4
  2044  0D14  160A  158A  2000  120A  158A  	fcall	stringdir
  2045  0D19  00CC               	movwf	??_scale+6
  2046  0D1A  160A  158A  2000  120A  158A  	fcall	stringdir
  2047  0D1F  00CD               	movwf	??_scale+7
  2048  0D20  160A  158A  2000  120A  158A  	fcall	stringdir
  2049  0D25  00CE               	movwf	??_scale+8
  2050  0D26  160A  158A  2000  120A  158A  	fcall	stringdir
  2051  0D2B  00CF               	movwf	??_scale+9
  2052  0D2C  084F               	movf	??_scale+9,w
  2053  0D2D  00AF               	movwf	___flmul@a+3
  2054  0D2E  084E               	movf	??_scale+8,w
  2055  0D2F  00AE               	movwf	___flmul@a+2
  2056  0D30  084D               	movf	??_scale+7,w
  2057  0D31  00AD               	movwf	___flmul@a+1
  2058  0D32  084C               	movf	??_scale+6,w
  2059  0D33  00AC               	movwf	___flmul@a
  2060  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2061  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0D3B  082B               	movf	?___flmul+3,w
  2064  0D3C  00D3               	movwf	_scale$1180+3
  2065  0D3D  082A               	movf	?___flmul+2,w
  2066  0D3E  00D2               	movwf	_scale$1180+2
  2067  0D3F  0829               	movf	?___flmul+1,w
  2068  0D40  00D1               	movwf	_scale$1180+1
  2069  0D41  0828               	movf	?___flmul,w
  2070  0D42  00D0               	movwf	_scale$1180
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2073  0D43  300A               	movlw	10
  2074  0D44  00F2               	movwf	___awmod@divisor
  2075  0D45  3000               	movlw	0
  2076  0D46  00F3               	movwf	___awmod@divisor+1
  2077  0D47  0854               	movf	scale@scl,w
  2078  0D48  00F4               	movwf	___awmod@dividend
  2079  0D49  01F5               	clrf	___awmod@dividend+1
  2080  0D4A  1BF4               	btfsc	___awmod@dividend,7
  2081  0D4B  03F5               	decf	___awmod@dividend+1,f
  2082  0D4C  160A  158A  2563  120A  158A  	fcall	___awmod
  2083  0D51  0872               	movf	?___awmod,w
  2084  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0D54  00C6               	movwf	??_scale
  2087  0D55  3001               	movlw	1
  2088  0D56                     u4315:
  2089  0D56  1003               	clrc
  2090  0D57  0DC6               	rlf	??_scale,f
  2091  0D58  3EFF               	addlw	-1
  2092  0D59  1D03               	skipz
  2093  0D5A  2D56               	goto	u4315
  2094  0D5B  1003               	clrc
  2095  0D5C  0D46               	rlf	??_scale,w
  2096  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2097  0D5E  0084               	movwf	4
  2098  0D5F  160A  158A  2000  120A  158A  	fcall	stringdir
  2099  0D64  00C7               	movwf	??_scale+1
  2100  0D65  160A  158A  2000  120A  158A  	fcall	stringdir
  2101  0D6A  00C8               	movwf	??_scale+2
  2102  0D6B  160A  158A  2000  120A  158A  	fcall	stringdir
  2103  0D70  00C9               	movwf	??_scale+3
  2104  0D71  160A  158A  2000  120A  158A  	fcall	stringdir
  2105  0D76  00CA               	movwf	??_scale+4
  2106  0D77  084A               	movf	??_scale+4,w
  2107  0D78  00AB               	movwf	___flmul@b+3
  2108  0D79  0849               	movf	??_scale+3,w
  2109  0D7A  00AA               	movwf	___flmul@b+2
  2110  0D7B  0848               	movf	??_scale+2,w
  2111  0D7C  00A9               	movwf	___flmul@b+1
  2112  0D7D  0847               	movf	??_scale+1,w
  2113  0D7E  00A8               	movwf	___flmul@b
  2114  0D7F  0853               	movf	_scale$1180+3,w
  2115  0D80  00AF               	movwf	___flmul@a+3
  2116  0D81  0852               	movf	_scale$1180+2,w
  2117  0D82  00AE               	movwf	___flmul@a+2
  2118  0D83  0851               	movf	_scale$1180+1,w
  2119  0D84  00AD               	movwf	___flmul@a+1
  2120  0D85  0850               	movf	_scale$1180,w
  2121  0D86  00AC               	movwf	___flmul@a
  2122  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2123  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2124  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2125  0D8E  082B               	movf	?___flmul+3,w
  2126  0D8F  00C5               	movwf	?_scale+3
  2127  0D90  082A               	movf	?___flmul+2,w
  2128  0D91  00C4               	movwf	?_scale+2
  2129  0D92  0829               	movf	?___flmul+1,w
  2130  0D93  00C3               	movwf	?_scale+1
  2131  0D94  0828               	movf	?___flmul,w
  2132  0D95  00C2               	movwf	?_scale
  2133  0D96  2FFF               	goto	l290
  2134  0D97                     l2854:
  2135  0D97  0854               	movf	scale@scl,w
  2136  0D98  3A80               	xorlw	128
  2137  0D99  3E75               	addlw	-139
  2138  0D9A  1C03               	skipc
  2139  0D9B  2D9D               	goto	u4321
  2140  0D9C  2D9E               	goto	u4320
  2141  0D9D                     u4321:
  2142  0D9D  2E26               	goto	l2860
  2143  0D9E                     u4320:
  2144  0D9E                     l2856:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2147  0D9E  300A               	movlw	10
  2148  0D9F  00F2               	movwf	___awmod@divisor
  2149  0DA0  3000               	movlw	0
  2150  0DA1  00F3               	movwf	___awmod@divisor+1
  2151  0DA2  0854               	movf	scale@scl,w
  2152  0DA3  00F4               	movwf	___awmod@dividend
  2153  0DA4  01F5               	clrf	___awmod@dividend+1
  2154  0DA5  1BF4               	btfsc	___awmod@dividend,7
  2155  0DA6  03F5               	decf	___awmod@dividend+1,f
  2156  0DA7  160A  158A  2563  120A  158A  	fcall	___awmod
  2157  0DAC  0872               	movf	?___awmod,w
  2158  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0DAF  00C6               	movwf	??_scale
  2161  0DB0  3001               	movlw	1
  2162  0DB1                     u4335:
  2163  0DB1  1003               	clrc
  2164  0DB2  0DC6               	rlf	??_scale,f
  2165  0DB3  3EFF               	addlw	-1
  2166  0DB4  1D03               	skipz
  2167  0DB5  2DB1               	goto	u4335
  2168  0DB6  1003               	clrc
  2169  0DB7  0D46               	rlf	??_scale,w
  2170  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2171  0DB9  0084               	movwf	4
  2172  0DBA  160A  158A  2000  120A  158A  	fcall	stringdir
  2173  0DBF  00C7               	movwf	??_scale+1
  2174  0DC0  160A  158A  2000  120A  158A  	fcall	stringdir
  2175  0DC5  00C8               	movwf	??_scale+2
  2176  0DC6  160A  158A  2000  120A  158A  	fcall	stringdir
  2177  0DCB  00C9               	movwf	??_scale+3
  2178  0DCC  160A  158A  2000  120A  158A  	fcall	stringdir
  2179  0DD1  00CA               	movwf	??_scale+4
  2180  0DD2  084A               	movf	??_scale+4,w
  2181  0DD3  00AB               	movwf	___flmul@b+3
  2182  0DD4  0849               	movf	??_scale+3,w
  2183  0DD5  00AA               	movwf	___flmul@b+2
  2184  0DD6  0848               	movf	??_scale+2,w
  2185  0DD7  00A9               	movwf	___flmul@b+1
  2186  0DD8  0847               	movf	??_scale+1,w
  2187  0DD9  00A8               	movwf	___flmul@b
  2188  0DDA  300A               	movlw	10
  2189  0DDB  00A0               	movwf	___awdiv@divisor
  2190  0DDC  3000               	movlw	0
  2191  0DDD  00A1               	movwf	___awdiv@divisor+1
  2192  0DDE  0854               	movf	scale@scl,w
  2193  0DDF  00A2               	movwf	___awdiv@dividend
  2194  0DE0  01A3               	clrf	___awdiv@dividend+1
  2195  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2196  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2197  0DE3  120A  118A  2787  120A  158A  	fcall	___awdiv
  2198  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0DEA  0820               	movf	?___awdiv,w
  2201  0DEB  00CB               	movwf	??_scale+5
  2202  0DEC  3001               	movlw	1
  2203  0DED                     u4345:
  2204  0DED  1003               	clrc
  2205  0DEE  0DCB               	rlf	??_scale+5,f
  2206  0DEF  3EFF               	addlw	-1
  2207  0DF0  1D03               	skipz
  2208  0DF1  2DED               	goto	u4345
  2209  0DF2  1003               	clrc
  2210  0DF3  0D4B               	rlf	??_scale+5,w
  2211  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2212  0DF5  0084               	movwf	4
  2213  0DF6  160A  158A  2000  120A  158A  	fcall	stringdir
  2214  0DFB  00CC               	movwf	??_scale+6
  2215  0DFC  160A  158A  2000  120A  158A  	fcall	stringdir
  2216  0E01  00CD               	movwf	??_scale+7
  2217  0E02  160A  158A  2000  120A  158A  	fcall	stringdir
  2218  0E07  00CE               	movwf	??_scale+8
  2219  0E08  160A  158A  2000  120A  158A  	fcall	stringdir
  2220  0E0D  00CF               	movwf	??_scale+9
  2221  0E0E  084F               	movf	??_scale+9,w
  2222  0E0F  00AF               	movwf	___flmul@a+3
  2223  0E10  084E               	movf	??_scale+8,w
  2224  0E11  00AE               	movwf	___flmul@a+2
  2225  0E12  084D               	movf	??_scale+7,w
  2226  0E13  00AD               	movwf	___flmul@a+1
  2227  0E14  084C               	movf	??_scale+6,w
  2228  0E15  00AC               	movwf	___flmul@a
  2229  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2230  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0E1D  082B               	movf	?___flmul+3,w
  2233  0E1E  00C5               	movwf	?_scale+3
  2234  0E1F  082A               	movf	?___flmul+2,w
  2235  0E20  00C4               	movwf	?_scale+2
  2236  0E21  0829               	movf	?___flmul+1,w
  2237  0E22  00C3               	movwf	?_scale+1
  2238  0E23  0828               	movf	?___flmul,w
  2239  0E24  00C2               	movwf	?_scale
  2240  0E25  2FFF               	goto	l290
  2241  0E26                     l2860:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2244  0E26  0854               	movf	scale@scl,w
  2245  0E27  00C6               	movwf	??_scale
  2246  0E28  3001               	movlw	1
  2247  0E29                     u4355:
  2248  0E29  1003               	clrc
  2249  0E2A  0DC6               	rlf	??_scale,f
  2250  0E2B  3EFF               	addlw	-1
  2251  0E2C  1D03               	skipz
  2252  0E2D  2E29               	goto	u4355
  2253  0E2E  1003               	clrc
  2254  0E2F  0D46               	rlf	??_scale,w
  2255  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2256  0E31  0084               	movwf	4
  2257  0E32  160A  158A  2000  120A  158A  	fcall	stringdir
  2258  0E37  00C7               	movwf	??_scale+1
  2259  0E38  160A  158A  2000  120A  158A  	fcall	stringdir
  2260  0E3D  00C8               	movwf	??_scale+2
  2261  0E3E  160A  158A  2000  120A  158A  	fcall	stringdir
  2262  0E43  00C9               	movwf	??_scale+3
  2263  0E44  160A  158A  2000  120A  158A  	fcall	stringdir
  2264  0E49  00CA               	movwf	??_scale+4
  2265  0E4A  084A               	movf	??_scale+4,w
  2266  0E4B  00C5               	movwf	?_scale+3
  2267  0E4C  0849               	movf	??_scale+3,w
  2268  0E4D  00C4               	movwf	?_scale+2
  2269  0E4E  0848               	movf	??_scale+2,w
  2270  0E4F  00C3               	movwf	?_scale+1
  2271  0E50  0847               	movf	??_scale+1,w
  2272  0E51  00C2               	movwf	?_scale
  2273  0E52  2FFF               	goto	l290
  2274  0E53                     l2864:
  2275                           
  2276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2277  0E53  0854               	movf	scale@scl,w
  2278  0E54  3A80               	xorlw	128
  2279  0E55  3E12               	addlw	-238
  2280  0E56  1C03               	skipc
  2281  0E57  2E59               	goto	u4361
  2282  0E58  2E5A               	goto	u4360
  2283  0E59                     u4361:
  2284  0E59  2F44               	goto	l2872
  2285  0E5A                     u4360:
  2286  0E5A                     l2866:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2289  0E5A  300A               	movlw	10
  2290  0E5B  00A0               	movwf	___awdiv@divisor
  2291  0E5C  3000               	movlw	0
  2292  0E5D  00A1               	movwf	___awdiv@divisor+1
  2293  0E5E  0854               	movf	scale@scl,w
  2294  0E5F  00F4               	movwf	___awmod@dividend
  2295  0E60  01F5               	clrf	___awmod@dividend+1
  2296  0E61  1BF4               	btfsc	___awmod@dividend,7
  2297  0E62  03F5               	decf	___awmod@dividend+1,f
  2298  0E63  3064               	movlw	100
  2299  0E64  00F2               	movwf	___awmod@divisor
  2300  0E65  3000               	movlw	0
  2301  0E66  00F3               	movwf	___awmod@divisor+1
  2302  0E67  160A  158A  2563  120A  158A  	fcall	___awmod
  2303  0E6C  0873               	movf	?___awmod+1,w
  2304  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0E6F  00A3               	movwf	___awdiv@dividend+1
  2307  0E70  0872               	movf	?___awmod,w
  2308  0E71  00A2               	movwf	___awdiv@dividend
  2309  0E72  120A  118A  2787  120A  158A  	fcall	___awdiv
  2310  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0E79  0820               	movf	?___awdiv,w
  2313  0E7A  00C6               	movwf	??_scale
  2314  0E7B  3001               	movlw	1
  2315  0E7C                     u4375:
  2316  0E7C  1003               	clrc
  2317  0E7D  0DC6               	rlf	??_scale,f
  2318  0E7E  3EFF               	addlw	-1
  2319  0E7F  1D03               	skipz
  2320  0E80  2E7C               	goto	u4375
  2321  0E81  1003               	clrc
  2322  0E82  0D46               	rlf	??_scale,w
  2323  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2324  0E84  0084               	movwf	4
  2325  0E85  160A  158A  2000  120A  158A  	fcall	stringdir
  2326  0E8A  00C7               	movwf	??_scale+1
  2327  0E8B  160A  158A  2000  120A  158A  	fcall	stringdir
  2328  0E90  00C8               	movwf	??_scale+2
  2329  0E91  160A  158A  2000  120A  158A  	fcall	stringdir
  2330  0E96  00C9               	movwf	??_scale+3
  2331  0E97  160A  158A  2000  120A  158A  	fcall	stringdir
  2332  0E9C  00CA               	movwf	??_scale+4
  2333  0E9D  084A               	movf	??_scale+4,w
  2334  0E9E  00AB               	movwf	___flmul@b+3
  2335  0E9F  0849               	movf	??_scale+3,w
  2336  0EA0  00AA               	movwf	___flmul@b+2
  2337  0EA1  0848               	movf	??_scale+2,w
  2338  0EA2  00A9               	movwf	___flmul@b+1
  2339  0EA3  0847               	movf	??_scale+1,w
  2340  0EA4  00A8               	movwf	___flmul@b
  2341  0EA5  3064               	movlw	100
  2342  0EA6  00A0               	movwf	___awdiv@divisor
  2343  0EA7  3000               	movlw	0
  2344  0EA8  00A1               	movwf	___awdiv@divisor+1
  2345  0EA9  0854               	movf	scale@scl,w
  2346  0EAA  00A2               	movwf	___awdiv@dividend
  2347  0EAB  01A3               	clrf	___awdiv@dividend+1
  2348  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2349  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2350  0EAE  120A  118A  2787  120A  158A  	fcall	___awdiv
  2351  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2353  0EB5  0820               	movf	?___awdiv,w
  2354  0EB6  00CB               	movwf	??_scale+5
  2355  0EB7  3001               	movlw	1
  2356  0EB8                     u4385:
  2357  0EB8  1003               	clrc
  2358  0EB9  0DCB               	rlf	??_scale+5,f
  2359  0EBA  3EFF               	addlw	-1
  2360  0EBB  1D03               	skipz
  2361  0EBC  2EB8               	goto	u4385
  2362  0EBD  1003               	clrc
  2363  0EBE  0D4B               	rlf	??_scale+5,w
  2364  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2365  0EC0  0084               	movwf	4
  2366  0EC1  160A  158A  2000  120A  158A  	fcall	stringdir
  2367  0EC6  00CC               	movwf	??_scale+6
  2368  0EC7  160A  158A  2000  120A  158A  	fcall	stringdir
  2369  0ECC  00CD               	movwf	??_scale+7
  2370  0ECD  160A  158A  2000  120A  158A  	fcall	stringdir
  2371  0ED2  00CE               	movwf	??_scale+8
  2372  0ED3  160A  158A  2000  120A  158A  	fcall	stringdir
  2373  0ED8  00CF               	movwf	??_scale+9
  2374  0ED9  084F               	movf	??_scale+9,w
  2375  0EDA  00AF               	movwf	___flmul@a+3
  2376  0EDB  084E               	movf	??_scale+8,w
  2377  0EDC  00AE               	movwf	___flmul@a+2
  2378  0EDD  084D               	movf	??_scale+7,w
  2379  0EDE  00AD               	movwf	___flmul@a+1
  2380  0EDF  084C               	movf	??_scale+6,w
  2381  0EE0  00AC               	movwf	___flmul@a
  2382  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2383  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0EE8  082B               	movf	?___flmul+3,w
  2386  0EE9  00D3               	movwf	_scale$1180+3
  2387  0EEA  082A               	movf	?___flmul+2,w
  2388  0EEB  00D2               	movwf	_scale$1180+2
  2389  0EEC  0829               	movf	?___flmul+1,w
  2390  0EED  00D1               	movwf	_scale$1180+1
  2391  0EEE  0828               	movf	?___flmul,w
  2392  0EEF  00D0               	movwf	_scale$1180
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2395  0EF0  300A               	movlw	10
  2396  0EF1  00F2               	movwf	___awmod@divisor
  2397  0EF2  3000               	movlw	0
  2398  0EF3  00F3               	movwf	___awmod@divisor+1
  2399  0EF4  0854               	movf	scale@scl,w
  2400  0EF5  00F4               	movwf	___awmod@dividend
  2401  0EF6  01F5               	clrf	___awmod@dividend+1
  2402  0EF7  1BF4               	btfsc	___awmod@dividend,7
  2403  0EF8  03F5               	decf	___awmod@dividend+1,f
  2404  0EF9  160A  158A  2563  120A  158A  	fcall	___awmod
  2405  0EFE  0872               	movf	?___awmod,w
  2406  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0F01  00C6               	movwf	??_scale
  2409  0F02  3001               	movlw	1
  2410  0F03                     u4395:
  2411  0F03  1003               	clrc
  2412  0F04  0DC6               	rlf	??_scale,f
  2413  0F05  3EFF               	addlw	-1
  2414  0F06  1D03               	skipz
  2415  0F07  2F03               	goto	u4395
  2416  0F08  1003               	clrc
  2417  0F09  0D46               	rlf	??_scale,w
  2418  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2419  0F0B  0084               	movwf	4
  2420  0F0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2421  0F11  00C7               	movwf	??_scale+1
  2422  0F12  160A  158A  2000  120A  158A  	fcall	stringdir
  2423  0F17  00C8               	movwf	??_scale+2
  2424  0F18  160A  158A  2000  120A  158A  	fcall	stringdir
  2425  0F1D  00C9               	movwf	??_scale+3
  2426  0F1E  160A  158A  2000  120A  158A  	fcall	stringdir
  2427  0F23  00CA               	movwf	??_scale+4
  2428  0F24  084A               	movf	??_scale+4,w
  2429  0F25  00AB               	movwf	___flmul@b+3
  2430  0F26  0849               	movf	??_scale+3,w
  2431  0F27  00AA               	movwf	___flmul@b+2
  2432  0F28  0848               	movf	??_scale+2,w
  2433  0F29  00A9               	movwf	___flmul@b+1
  2434  0F2A  0847               	movf	??_scale+1,w
  2435  0F2B  00A8               	movwf	___flmul@b
  2436  0F2C  0853               	movf	_scale$1180+3,w
  2437  0F2D  00AF               	movwf	___flmul@a+3
  2438  0F2E  0852               	movf	_scale$1180+2,w
  2439  0F2F  00AE               	movwf	___flmul@a+2
  2440  0F30  0851               	movf	_scale$1180+1,w
  2441  0F31  00AD               	movwf	___flmul@a+1
  2442  0F32  0850               	movf	_scale$1180,w
  2443  0F33  00AC               	movwf	___flmul@a
  2444  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2445  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0F3B  082B               	movf	?___flmul+3,w
  2448  0F3C  00C5               	movwf	?_scale+3
  2449  0F3D  082A               	movf	?___flmul+2,w
  2450  0F3E  00C4               	movwf	?_scale+2
  2451  0F3F  0829               	movf	?___flmul+1,w
  2452  0F40  00C3               	movwf	?_scale+1
  2453  0F41  0828               	movf	?___flmul,w
  2454  0F42  00C2               	movwf	?_scale
  2455  0F43  2FFF               	goto	l290
  2456  0F44                     l2872:
  2457  0F44  0854               	movf	scale@scl,w
  2458  0F45  3A80               	xorlw	128
  2459  0F46  3E75               	addlw	-139
  2460  0F47  1C03               	skipc
  2461  0F48  2F4A               	goto	u4401
  2462  0F49  2F4B               	goto	u4400
  2463  0F4A                     u4401:
  2464  0F4A  2FD3               	goto	l2878
  2465  0F4B                     u4400:
  2466  0F4B                     l2874:
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2469  0F4B  300A               	movlw	10
  2470  0F4C  00F2               	movwf	___awmod@divisor
  2471  0F4D  3000               	movlw	0
  2472  0F4E  00F3               	movwf	___awmod@divisor+1
  2473  0F4F  0854               	movf	scale@scl,w
  2474  0F50  00F4               	movwf	___awmod@dividend
  2475  0F51  01F5               	clrf	___awmod@dividend+1
  2476  0F52  1BF4               	btfsc	___awmod@dividend,7
  2477  0F53  03F5               	decf	___awmod@dividend+1,f
  2478  0F54  160A  158A  2563  120A  158A  	fcall	___awmod
  2479  0F59  0872               	movf	?___awmod,w
  2480  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0F5C  00C6               	movwf	??_scale
  2483  0F5D  3001               	movlw	1
  2484  0F5E                     u4415:
  2485  0F5E  1003               	clrc
  2486  0F5F  0DC6               	rlf	??_scale,f
  2487  0F60  3EFF               	addlw	-1
  2488  0F61  1D03               	skipz
  2489  0F62  2F5E               	goto	u4415
  2490  0F63  1003               	clrc
  2491  0F64  0D46               	rlf	??_scale,w
  2492  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2493  0F66  0084               	movwf	4
  2494  0F67  160A  158A  2000  120A  158A  	fcall	stringdir
  2495  0F6C  00C7               	movwf	??_scale+1
  2496  0F6D  160A  158A  2000  120A  158A  	fcall	stringdir
  2497  0F72  00C8               	movwf	??_scale+2
  2498  0F73  160A  158A  2000  120A  158A  	fcall	stringdir
  2499  0F78  00C9               	movwf	??_scale+3
  2500  0F79  160A  158A  2000  120A  158A  	fcall	stringdir
  2501  0F7E  00CA               	movwf	??_scale+4
  2502  0F7F  084A               	movf	??_scale+4,w
  2503  0F80  00AB               	movwf	___flmul@b+3
  2504  0F81  0849               	movf	??_scale+3,w
  2505  0F82  00AA               	movwf	___flmul@b+2
  2506  0F83  0848               	movf	??_scale+2,w
  2507  0F84  00A9               	movwf	___flmul@b+1
  2508  0F85  0847               	movf	??_scale+1,w
  2509  0F86  00A8               	movwf	___flmul@b
  2510  0F87  300A               	movlw	10
  2511  0F88  00A0               	movwf	___awdiv@divisor
  2512  0F89  3000               	movlw	0
  2513  0F8A  00A1               	movwf	___awdiv@divisor+1
  2514  0F8B  0854               	movf	scale@scl,w
  2515  0F8C  00A2               	movwf	___awdiv@dividend
  2516  0F8D  01A3               	clrf	___awdiv@dividend+1
  2517  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  2518  0F8F  03A3               	decf	___awdiv@dividend+1,f
  2519  0F90  120A  118A  2787  120A  158A  	fcall	___awdiv
  2520  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0F97  0820               	movf	?___awdiv,w
  2523  0F98  00CB               	movwf	??_scale+5
  2524  0F99  3001               	movlw	1
  2525  0F9A                     u4425:
  2526  0F9A  1003               	clrc
  2527  0F9B  0DCB               	rlf	??_scale+5,f
  2528  0F9C  3EFF               	addlw	-1
  2529  0F9D  1D03               	skipz
  2530  0F9E  2F9A               	goto	u4425
  2531  0F9F  1003               	clrc
  2532  0FA0  0D4B               	rlf	??_scale+5,w
  2533  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2534  0FA2  0084               	movwf	4
  2535  0FA3  160A  158A  2000  120A  158A  	fcall	stringdir
  2536  0FA8  00CC               	movwf	??_scale+6
  2537  0FA9  160A  158A  2000  120A  158A  	fcall	stringdir
  2538  0FAE  00CD               	movwf	??_scale+7
  2539  0FAF  160A  158A  2000  120A  158A  	fcall	stringdir
  2540  0FB4  00CE               	movwf	??_scale+8
  2541  0FB5  160A  158A  2000  120A  158A  	fcall	stringdir
  2542  0FBA  00CF               	movwf	??_scale+9
  2543  0FBB  084F               	movf	??_scale+9,w
  2544  0FBC  00AF               	movwf	___flmul@a+3
  2545  0FBD  084E               	movf	??_scale+8,w
  2546  0FBE  00AE               	movwf	___flmul@a+2
  2547  0FBF  084D               	movf	??_scale+7,w
  2548  0FC0  00AD               	movwf	___flmul@a+1
  2549  0FC1  084C               	movf	??_scale+6,w
  2550  0FC2  00AC               	movwf	___flmul@a
  2551  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  2552  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  2554  0FCA  082B               	movf	?___flmul+3,w
  2555  0FCB  00C5               	movwf	?_scale+3
  2556  0FCC  082A               	movf	?___flmul+2,w
  2557  0FCD  00C4               	movwf	?_scale+2
  2558  0FCE  0829               	movf	?___flmul+1,w
  2559  0FCF  00C3               	movwf	?_scale+1
  2560  0FD0  0828               	movf	?___flmul,w
  2561  0FD1  00C2               	movwf	?_scale
  2562  0FD2  2FFF               	goto	l290
  2563  0FD3                     l2878:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  2566  0FD3  0854               	movf	scale@scl,w
  2567  0FD4  00C6               	movwf	??_scale
  2568  0FD5  3001               	movlw	1
  2569  0FD6                     u4435:
  2570  0FD6  1003               	clrc
  2571  0FD7  0DC6               	rlf	??_scale,f
  2572  0FD8  3EFF               	addlw	-1
  2573  0FD9  1D03               	skipz
  2574  0FDA  2FD6               	goto	u4435
  2575  0FDB  1003               	clrc
  2576  0FDC  0D46               	rlf	??_scale,w
  2577  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2578  0FDE  0084               	movwf	4
  2579  0FDF  160A  158A  2000  120A  158A  	fcall	stringdir
  2580  0FE4  00C7               	movwf	??_scale+1
  2581  0FE5  160A  158A  2000  120A  158A  	fcall	stringdir
  2582  0FEA  00C8               	movwf	??_scale+2
  2583  0FEB  160A  158A  2000  120A  158A  	fcall	stringdir
  2584  0FF0  00C9               	movwf	??_scale+3
  2585  0FF1  160A  158A  2000  120A  158A  	fcall	stringdir
  2586  0FF6  00CA               	movwf	??_scale+4
  2587  0FF7  084A               	movf	??_scale+4,w
  2588  0FF8  00C5               	movwf	?_scale+3
  2589  0FF9  0849               	movf	??_scale+3,w
  2590  0FFA  00C4               	movwf	?_scale+2
  2591  0FFB  0848               	movf	??_scale+2,w
  2592  0FFC  00C3               	movwf	?_scale+1
  2593  0FFD  0847               	movf	??_scale+1,w
  2594  0FFE  00C2               	movwf	?_scale
  2595  0FFF                     l290:
  2596  0FFF  0008               	return
  2597  1000                     __end_of_scale:
  2598                           
  2599                           	psect	text3
  2600  1D63                     __ptext3:	
  2601 ;; *************** function ___awmod *****************
  2602 ;; Defined at:
  2603 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  divisor         2    2[COMMON] int 
  2606 ;;  dividend        2    4[COMMON] int 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  sign            1    8[COMMON] unsigned char 
  2609 ;;  counter         1    7[COMMON] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  2    2[COMMON] int 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2619 ;;      Params:         4       0       0       0       0
  2620 ;;      Locals:         2       0       0       0       0
  2621 ;;      Temps:          1       0       0       0       0
  2622 ;;      Totals:         7       0       0       0       0
  2623 ;;Total ram usage:        7 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    1
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_scale
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           
  2634                           ;psect for function ___awmod
  2635  1D63                     ___awmod:
  2636  1D63                     l2384:	
  2637                           ;incstack = 0
  2638                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2639                           
  2640  1D63  01F8               	clrf	___awmod@sign
  2641  1D64                     l2386:
  2642  1D64  1FF5               	btfss	___awmod@dividend+1,7
  2643  1D65  2D67               	goto	u3101
  2644  1D66  2D68               	goto	u3100
  2645  1D67                     u3101:
  2646  1D67  2D6F               	goto	l2392
  2647  1D68                     u3100:
  2648  1D68                     l2388:
  2649  1D68  09F4               	comf	___awmod@dividend,f
  2650  1D69  09F5               	comf	___awmod@dividend+1,f
  2651  1D6A  0AF4               	incf	___awmod@dividend,f
  2652  1D6B  1903               	skipnz
  2653  1D6C  0AF5               	incf	___awmod@dividend+1,f
  2654  1D6D                     l2390:
  2655  1D6D  01F8               	clrf	___awmod@sign
  2656  1D6E  0AF8               	incf	___awmod@sign,f
  2657  1D6F                     l2392:
  2658  1D6F  1FF3               	btfss	___awmod@divisor+1,7
  2659  1D70  2D72               	goto	u3111
  2660  1D71  2D73               	goto	u3110
  2661  1D72                     u3111:
  2662  1D72  2D78               	goto	l2396
  2663  1D73                     u3110:
  2664  1D73                     l2394:
  2665  1D73  09F2               	comf	___awmod@divisor,f
  2666  1D74  09F3               	comf	___awmod@divisor+1,f
  2667  1D75  0AF2               	incf	___awmod@divisor,f
  2668  1D76  1903               	skipnz
  2669  1D77  0AF3               	incf	___awmod@divisor+1,f
  2670  1D78                     l2396:
  2671  1D78  0872               	movf	___awmod@divisor,w
  2672  1D79  0473               	iorwf	___awmod@divisor+1,w
  2673  1D7A  1903               	btfsc	3,2
  2674  1D7B  2D7D               	goto	u3121
  2675  1D7C  2D7E               	goto	u3120
  2676  1D7D                     u3121:
  2677  1D7D  2DAD               	goto	l2414
  2678  1D7E                     u3120:
  2679  1D7E                     l2398:
  2680  1D7E  01F7               	clrf	___awmod@counter
  2681  1D7F  0AF7               	incf	___awmod@counter,f
  2682  1D80  2D8C               	goto	l2404
  2683  1D81                     l2400:
  2684  1D81  3001               	movlw	1
  2685  1D82                     u3135:
  2686  1D82  1003               	clrc
  2687  1D83  0DF2               	rlf	___awmod@divisor,f
  2688  1D84  0DF3               	rlf	___awmod@divisor+1,f
  2689  1D85  3EFF               	addlw	-1
  2690  1D86  1D03               	skipz
  2691  1D87  2D82               	goto	u3135
  2692  1D88                     l2402:
  2693  1D88  3001               	movlw	1
  2694  1D89  00F6               	movwf	??___awmod
  2695  1D8A  0876               	movf	??___awmod,w
  2696  1D8B  07F7               	addwf	___awmod@counter,f
  2697  1D8C                     l2404:
  2698  1D8C  1FF3               	btfss	___awmod@divisor+1,7
  2699  1D8D  2D8F               	goto	u3141
  2700  1D8E  2D90               	goto	u3140
  2701  1D8F                     u3141:
  2702  1D8F  2D81               	goto	l2400
  2703  1D90                     u3140:
  2704  1D90                     l2406:
  2705  1D90  0873               	movf	___awmod@divisor+1,w
  2706  1D91  0275               	subwf	___awmod@dividend+1,w
  2707  1D92  1D03               	skipz
  2708  1D93  2D96               	goto	u3155
  2709  1D94  0872               	movf	___awmod@divisor,w
  2710  1D95  0274               	subwf	___awmod@dividend,w
  2711  1D96                     u3155:
  2712  1D96  1C03               	skipc
  2713  1D97  2D99               	goto	u3151
  2714  1D98  2D9A               	goto	u3150
  2715  1D99                     u3151:
  2716  1D99  2DA0               	goto	l2410
  2717  1D9A                     u3150:
  2718  1D9A                     l2408:
  2719  1D9A  0872               	movf	___awmod@divisor,w
  2720  1D9B  02F4               	subwf	___awmod@dividend,f
  2721  1D9C  0873               	movf	___awmod@divisor+1,w
  2722  1D9D  1C03               	skipc
  2723  1D9E  03F5               	decf	___awmod@dividend+1,f
  2724  1D9F  02F5               	subwf	___awmod@dividend+1,f
  2725  1DA0                     l2410:
  2726  1DA0  3001               	movlw	1
  2727  1DA1                     u3165:
  2728  1DA1  1003               	clrc
  2729  1DA2  0CF3               	rrf	___awmod@divisor+1,f
  2730  1DA3  0CF2               	rrf	___awmod@divisor,f
  2731  1DA4  3EFF               	addlw	-1
  2732  1DA5  1D03               	skipz
  2733  1DA6  2DA1               	goto	u3165
  2734  1DA7                     l2412:
  2735  1DA7  3001               	movlw	1
  2736  1DA8  02F7               	subwf	___awmod@counter,f
  2737  1DA9  1D03               	btfss	3,2
  2738  1DAA  2DAC               	goto	u3171
  2739  1DAB  2DAD               	goto	u3170
  2740  1DAC                     u3171:
  2741  1DAC  2D90               	goto	l2406
  2742  1DAD                     u3170:
  2743  1DAD                     l2414:
  2744  1DAD  0878               	movf	___awmod@sign,w
  2745  1DAE  1903               	btfsc	3,2
  2746  1DAF  2DB1               	goto	u3181
  2747  1DB0  2DB2               	goto	u3180
  2748  1DB1                     u3181:
  2749  1DB1  2DB7               	goto	l2418
  2750  1DB2                     u3180:
  2751  1DB2                     l2416:
  2752  1DB2  09F4               	comf	___awmod@dividend,f
  2753  1DB3  09F5               	comf	___awmod@dividend+1,f
  2754  1DB4  0AF4               	incf	___awmod@dividend,f
  2755  1DB5  1903               	skipnz
  2756  1DB6  0AF5               	incf	___awmod@dividend+1,f
  2757  1DB7                     l2418:
  2758  1DB7  0875               	movf	___awmod@dividend+1,w
  2759  1DB8  00F3               	movwf	?___awmod+1
  2760  1DB9  0874               	movf	___awmod@dividend,w
  2761  1DBA  00F2               	movwf	?___awmod
  2762  1DBB                     l561:
  2763  1DBB  0008               	return
  2764  1DBC                     __end_of___awmod:
  2765                           
  2766                           	psect	text4
  2767  0787                     __ptext4:	
  2768 ;; *************** function ___awdiv *****************
  2769 ;; Defined at:
  2770 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  divisor         2    0[BANK0 ] int 
  2773 ;;  dividend        2    2[BANK0 ] int 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  quotient        2    6[BANK0 ] int 
  2776 ;;  sign            1    5[BANK0 ] unsigned char 
  2777 ;;  counter         1    4[BANK0 ] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  2    0[BANK0 ] int 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         0       4       0       0       0
  2788 ;;      Locals:         0       4       0       0       0
  2789 ;;      Temps:          1       0       0       0       0
  2790 ;;      Totals:         1       8       0       0       0
  2791 ;;Total ram usage:        9 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    1
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_scale
  2798 ;;		_sprintf
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function ___awdiv
  2804  0787                     ___awdiv:
  2805  0787                     l2340:	
  2806                           ;incstack = 0
  2807                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2808                           
  2809  0787  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0788  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0789  01A5               	clrf	___awdiv@sign
  2812  078A                     l2342:
  2813  078A  1FA1               	btfss	___awdiv@divisor+1,7
  2814  078B  2F8D               	goto	u3001
  2815  078C  2F8E               	goto	u3000
  2816  078D                     u3001:
  2817  078D  2F95               	goto	l2348
  2818  078E                     u3000:
  2819  078E                     l2344:
  2820  078E  09A0               	comf	___awdiv@divisor,f
  2821  078F  09A1               	comf	___awdiv@divisor+1,f
  2822  0790  0AA0               	incf	___awdiv@divisor,f
  2823  0791  1903               	skipnz
  2824  0792  0AA1               	incf	___awdiv@divisor+1,f
  2825  0793                     l2346:
  2826  0793  01A5               	clrf	___awdiv@sign
  2827  0794  0AA5               	incf	___awdiv@sign,f
  2828  0795                     l2348:
  2829  0795  1FA3               	btfss	___awdiv@dividend+1,7
  2830  0796  2F98               	goto	u3011
  2831  0797  2F99               	goto	u3010
  2832  0798                     u3011:
  2833  0798  2FA2               	goto	l2354
  2834  0799                     u3010:
  2835  0799                     l2350:
  2836  0799  09A2               	comf	___awdiv@dividend,f
  2837  079A  09A3               	comf	___awdiv@dividend+1,f
  2838  079B  0AA2               	incf	___awdiv@dividend,f
  2839  079C  1903               	skipnz
  2840  079D  0AA3               	incf	___awdiv@dividend+1,f
  2841  079E                     l2352:
  2842  079E  3001               	movlw	1
  2843  079F  00F9               	movwf	??___awdiv
  2844  07A0  0879               	movf	??___awdiv,w
  2845  07A1  06A5               	xorwf	___awdiv@sign,f
  2846  07A2                     l2354:
  2847  07A2  01A6               	clrf	___awdiv@quotient
  2848  07A3  01A7               	clrf	___awdiv@quotient+1
  2849  07A4                     l2356:
  2850  07A4  0820               	movf	___awdiv@divisor,w
  2851  07A5  0421               	iorwf	___awdiv@divisor+1,w
  2852  07A6  1903               	btfsc	3,2
  2853  07A7  2FA9               	goto	u3021
  2854  07A8  2FAA               	goto	u3020
  2855  07A9                     u3021:
  2856  07A9  2FE1               	goto	l2376
  2857  07AA                     u3020:
  2858  07AA                     l2358:
  2859  07AA  01A4               	clrf	___awdiv@counter
  2860  07AB  0AA4               	incf	___awdiv@counter,f
  2861  07AC  2FB8               	goto	l2364
  2862  07AD                     l2360:
  2863  07AD  3001               	movlw	1
  2864  07AE                     u3035:
  2865  07AE  1003               	clrc
  2866  07AF  0DA0               	rlf	___awdiv@divisor,f
  2867  07B0  0DA1               	rlf	___awdiv@divisor+1,f
  2868  07B1  3EFF               	addlw	-1
  2869  07B2  1D03               	skipz
  2870  07B3  2FAE               	goto	u3035
  2871  07B4                     l2362:
  2872  07B4  3001               	movlw	1
  2873  07B5  00F9               	movwf	??___awdiv
  2874  07B6  0879               	movf	??___awdiv,w
  2875  07B7  07A4               	addwf	___awdiv@counter,f
  2876  07B8                     l2364:
  2877  07B8  1FA1               	btfss	___awdiv@divisor+1,7
  2878  07B9  2FBB               	goto	u3041
  2879  07BA  2FBC               	goto	u3040
  2880  07BB                     u3041:
  2881  07BB  2FAD               	goto	l2360
  2882  07BC                     u3040:
  2883  07BC                     l2366:
  2884  07BC  3001               	movlw	1
  2885  07BD                     u3055:
  2886  07BD  1003               	clrc
  2887  07BE  0DA6               	rlf	___awdiv@quotient,f
  2888  07BF  0DA7               	rlf	___awdiv@quotient+1,f
  2889  07C0  3EFF               	addlw	-1
  2890  07C1  1D03               	skipz
  2891  07C2  2FBD               	goto	u3055
  2892  07C3  0821               	movf	___awdiv@divisor+1,w
  2893  07C4  0223               	subwf	___awdiv@dividend+1,w
  2894  07C5  1D03               	skipz
  2895  07C6  2FC9               	goto	u3065
  2896  07C7  0820               	movf	___awdiv@divisor,w
  2897  07C8  0222               	subwf	___awdiv@dividend,w
  2898  07C9                     u3065:
  2899  07C9  1C03               	skipc
  2900  07CA  2FCC               	goto	u3061
  2901  07CB  2FCD               	goto	u3060
  2902  07CC                     u3061:
  2903  07CC  2FD4               	goto	l2372
  2904  07CD                     u3060:
  2905  07CD                     l2368:
  2906  07CD  0820               	movf	___awdiv@divisor,w
  2907  07CE  02A2               	subwf	___awdiv@dividend,f
  2908  07CF  0821               	movf	___awdiv@divisor+1,w
  2909  07D0  1C03               	skipc
  2910  07D1  03A3               	decf	___awdiv@dividend+1,f
  2911  07D2  02A3               	subwf	___awdiv@dividend+1,f
  2912  07D3                     l2370:
  2913  07D3  1426               	bsf	___awdiv@quotient,0
  2914  07D4                     l2372:
  2915  07D4  3001               	movlw	1
  2916  07D5                     u3075:
  2917  07D5  1003               	clrc
  2918  07D6  0CA1               	rrf	___awdiv@divisor+1,f
  2919  07D7  0CA0               	rrf	___awdiv@divisor,f
  2920  07D8  3EFF               	addlw	-1
  2921  07D9  1D03               	skipz
  2922  07DA  2FD5               	goto	u3075
  2923  07DB                     l2374:
  2924  07DB  3001               	movlw	1
  2925  07DC  02A4               	subwf	___awdiv@counter,f
  2926  07DD  1D03               	btfss	3,2
  2927  07DE  2FE0               	goto	u3081
  2928  07DF  2FE1               	goto	u3080
  2929  07E0                     u3081:
  2930  07E0  2FBC               	goto	l2366
  2931  07E1                     u3080:
  2932  07E1                     l2376:
  2933  07E1  0825               	movf	___awdiv@sign,w
  2934  07E2  1903               	btfsc	3,2
  2935  07E3  2FE5               	goto	u3091
  2936  07E4  2FE6               	goto	u3090
  2937  07E5                     u3091:
  2938  07E5  2FEB               	goto	l2380
  2939  07E6                     u3090:
  2940  07E6                     l2378:
  2941  07E6  09A6               	comf	___awdiv@quotient,f
  2942  07E7  09A7               	comf	___awdiv@quotient+1,f
  2943  07E8  0AA6               	incf	___awdiv@quotient,f
  2944  07E9  1903               	skipnz
  2945  07EA  0AA7               	incf	___awdiv@quotient+1,f
  2946  07EB                     l2380:
  2947  07EB  0827               	movf	___awdiv@quotient+1,w
  2948  07EC  00A1               	movwf	?___awdiv+1
  2949  07ED  0826               	movf	___awdiv@quotient,w
  2950  07EE  00A0               	movwf	?___awdiv
  2951  07EF                     l548:
  2952  07EF  0008               	return
  2953  07F0                     __end_of___awdiv:
  2954                           
  2955                           	psect	text5
  2956  1AC6                     __ptext5:	
  2957 ;; *************** function _isdigit *****************
  2958 ;; Defined at:
  2959 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  c               1    wreg     unsigned char 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  c               1    3[COMMON] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;		None               void
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         0       0       0       0       0
  2974 ;;      Locals:         2       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0
  2976 ;;      Totals:         2       0       0       0       0
  2977 ;;Total ram usage:        2 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_sprintf
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function _isdigit
  2989  1AC6                     _isdigit:
  2990                           
  2991                           ;incstack = 0
  2992                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2993                           ;isdigit@c stored from wreg
  2994  1AC6  00F3               	movwf	isdigit@c
  2995  1AC7                     l2882:
  2996  1AC7  01F2               	clrf	_isdigit$991
  2997  1AC8                     l2884:
  2998  1AC8  303A               	movlw	58
  2999  1AC9  0273               	subwf	isdigit@c,w
  3000  1ACA  1803               	skipnc
  3001  1ACB  2ACD               	goto	u4441
  3002  1ACC  2ACE               	goto	u4440
  3003  1ACD                     u4441:
  3004  1ACD  2AD6               	goto	l2890
  3005  1ACE                     u4440:
  3006  1ACE                     l2886:
  3007  1ACE  3030               	movlw	48
  3008  1ACF  0273               	subwf	isdigit@c,w
  3009  1AD0  1C03               	skipc
  3010  1AD1  2AD3               	goto	u4451
  3011  1AD2  2AD4               	goto	u4450
  3012  1AD3                     u4451:
  3013  1AD3  2AD6               	goto	l2890
  3014  1AD4                     u4450:
  3015  1AD4                     l2888:
  3016  1AD4  01F2               	clrf	_isdigit$991
  3017  1AD5  0AF2               	incf	_isdigit$991,f
  3018  1AD6                     l2890:
  3019  1AD6  0C72               	rrf	_isdigit$991,w
  3020  1AD7                     l882:
  3021  1AD7  0008               	return
  3022  1AD8                     __end_of_isdigit:
  3023                           
  3024                           	psect	text6
  3025  057A                     __ptext6:	
  3026 ;; *************** function _fround *****************
  3027 ;; Defined at:
  3028 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  prec            1    wreg     unsigned char 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  prec            1   53[BANK0 ] unsigned char 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  4   34[BANK0 ] unsigned char 
  3035 ;; Registers used:
  3036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3042 ;;      Params:         0       4       0       0       0
  3043 ;;      Locals:         0       9       0       0       0
  3044 ;;      Temps:          0       7       0       0       0
  3045 ;;      Totals:         0      20       0       0       0
  3046 ;;Total ram usage:       20 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    3
  3049 ;; This function calls:
  3050 ;;		___flmul
  3051 ;;		___lwdiv
  3052 ;;		___lwmod
  3053 ;; This function is called by:
  3054 ;;		_sprintf
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _fround
  3060  057A                     _fround:
  3061                           
  3062                           ;incstack = 0
  3063                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3064                           ;fround@prec stored from wreg
  3065  057A  1283               	bcf	3,5	;RP0=0, select bank0
  3066  057B  1303               	bcf	3,6	;RP1=0, select bank0
  3067  057C  00D5               	movwf	fround@prec
  3068  057D                     l3664:
  3069                           
  3070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3071  057D  306E               	movlw	110
  3072  057E  0255               	subwf	fround@prec,w
  3073  057F  1C03               	skipc
  3074  0580  2D82               	goto	u5861
  3075  0581  2D83               	goto	u5860
  3076  0582                     u5861:
  3077  0582  2E92               	goto	l3672
  3078  0583                     u5860:
  3079  0583                     l3666:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3082  0583  303F               	movlw	63
  3083  0584  00AB               	movwf	___flmul@b+3
  3084  0585  3000               	movlw	0
  3085  0586  00AA               	movwf	___flmul@b+2
  3086  0587  3000               	movlw	0
  3087  0588  00A9               	movwf	___flmul@b+1
  3088  0589  3000               	movlw	0
  3089  058A  00A8               	movwf	___flmul@b
  3090  058B  3064               	movlw	100
  3091  058C  00A0               	movwf	___lwdiv@divisor
  3092  058D  3000               	movlw	0
  3093  058E  00A1               	movwf	___lwdiv@divisor+1
  3094  058F  0855               	movf	fround@prec,w
  3095  0590  00C6               	movwf	??_fround
  3096  0591  01C7               	clrf	??_fround+1
  3097  0592  0846               	movf	??_fround,w
  3098  0593  00A2               	movwf	___lwdiv@dividend
  3099  0594  0847               	movf	??_fround+1,w
  3100  0595  00A3               	movwf	___lwdiv@dividend+1
  3101  0596  160A  158A  2427  120A  118A  	fcall	___lwdiv
  3102  059B  1283               	bcf	3,5	;RP0=0, select bank0
  3103  059C  1303               	bcf	3,6	;RP1=0, select bank0
  3104  059D  0820               	movf	?___lwdiv,w
  3105  059E  00C8               	movwf	??_fround+2
  3106  059F  3001               	movlw	1
  3107  05A0                     u5875:
  3108  05A0  1003               	clrc
  3109  05A1  0DC8               	rlf	??_fround+2,f
  3110  05A2  3EFF               	addlw	-1
  3111  05A3  1D03               	skipz
  3112  05A4  2DA0               	goto	u5875
  3113  05A5  1003               	clrc
  3114  05A6  0D48               	rlf	??_fround+2,w
  3115  05A7  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3116  05A8  0084               	movwf	4
  3117  05A9  160A  158A  2000  120A  118A  	fcall	stringdir
  3118  05AE  00C9               	movwf	??_fround+3
  3119  05AF  160A  158A  2000  120A  118A  	fcall	stringdir
  3120  05B4  00CA               	movwf	??_fround+4
  3121  05B5  160A  158A  2000  120A  118A  	fcall	stringdir
  3122  05BA  00CB               	movwf	??_fround+5
  3123  05BB  160A  158A  2000  120A  118A  	fcall	stringdir
  3124  05C0  00CC               	movwf	??_fround+6
  3125  05C1  084C               	movf	??_fround+6,w
  3126  05C2  00AF               	movwf	___flmul@a+3
  3127  05C3  084B               	movf	??_fround+5,w
  3128  05C4  00AE               	movwf	___flmul@a+2
  3129  05C5  084A               	movf	??_fround+4,w
  3130  05C6  00AD               	movwf	___flmul@a+1
  3131  05C7  0849               	movf	??_fround+3,w
  3132  05C8  00AC               	movwf	___flmul@a
  3133  05C9  120A  158A  213C  120A  118A  	fcall	___flmul
  3134  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3135  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3136  05D0  082B               	movf	?___flmul+3,w
  3137  05D1  00D4               	movwf	_fround$1178+3
  3138  05D2  082A               	movf	?___flmul+2,w
  3139  05D3  00D3               	movwf	_fround$1178+2
  3140  05D4  0829               	movf	?___flmul+1,w
  3141  05D5  00D2               	movwf	_fround$1178+1
  3142  05D6  0828               	movf	?___flmul,w
  3143  05D7  00D1               	movwf	_fround$1178
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3146  05D8  300A               	movlw	10
  3147  05D9  00A0               	movwf	___lwdiv@divisor
  3148  05DA  3000               	movlw	0
  3149  05DB  00A1               	movwf	___lwdiv@divisor+1
  3150  05DC  0855               	movf	fround@prec,w
  3151  05DD  00C6               	movwf	??_fround
  3152  05DE  01C7               	clrf	??_fround+1
  3153  05DF  0846               	movf	??_fround,w
  3154  05E0  00F4               	movwf	___lwmod@dividend
  3155  05E1  0847               	movf	??_fround+1,w
  3156  05E2  00F5               	movwf	___lwmod@dividend+1
  3157  05E3  3064               	movlw	100
  3158  05E4  00F2               	movwf	___lwmod@divisor
  3159  05E5  3000               	movlw	0
  3160  05E6  00F3               	movwf	___lwmod@divisor+1
  3161  05E7  160A  158A  23ED  120A  118A  	fcall	___lwmod
  3162  05EC  0873               	movf	?___lwmod+1,w
  3163  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  3164  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  3165  05EF  00A3               	movwf	___lwdiv@dividend+1
  3166  05F0  0872               	movf	?___lwmod,w
  3167  05F1  00A2               	movwf	___lwdiv@dividend
  3168  05F2  160A  158A  2427  120A  118A  	fcall	___lwdiv
  3169  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3170  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3171  05F9  0820               	movf	?___lwdiv,w
  3172  05FA  00C8               	movwf	??_fround+2
  3173  05FB  3001               	movlw	1
  3174  05FC                     u5885:
  3175  05FC  1003               	clrc
  3176  05FD  0DC8               	rlf	??_fround+2,f
  3177  05FE  3EFF               	addlw	-1
  3178  05FF  1D03               	skipz
  3179  0600  2DFC               	goto	u5885
  3180  0601  1003               	clrc
  3181  0602  0D48               	rlf	??_fround+2,w
  3182  0603  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3183  0604  0084               	movwf	4
  3184  0605  160A  158A  2000  120A  118A  	fcall	stringdir
  3185  060A  00C9               	movwf	??_fround+3
  3186  060B  160A  158A  2000  120A  118A  	fcall	stringdir
  3187  0610  00CA               	movwf	??_fround+4
  3188  0611  160A  158A  2000  120A  118A  	fcall	stringdir
  3189  0616  00CB               	movwf	??_fround+5
  3190  0617  160A  158A  2000  120A  118A  	fcall	stringdir
  3191  061C  00CC               	movwf	??_fround+6
  3192  061D  084C               	movf	??_fround+6,w
  3193  061E  00AB               	movwf	___flmul@b+3
  3194  061F  084B               	movf	??_fround+5,w
  3195  0620  00AA               	movwf	___flmul@b+2
  3196  0621  084A               	movf	??_fround+4,w
  3197  0622  00A9               	movwf	___flmul@b+1
  3198  0623  0849               	movf	??_fround+3,w
  3199  0624  00A8               	movwf	___flmul@b
  3200  0625  0854               	movf	_fround$1178+3,w
  3201  0626  00AF               	movwf	___flmul@a+3
  3202  0627  0853               	movf	_fround$1178+2,w
  3203  0628  00AE               	movwf	___flmul@a+2
  3204  0629  0852               	movf	_fround$1178+1,w
  3205  062A  00AD               	movwf	___flmul@a+1
  3206  062B  0851               	movf	_fround$1178,w
  3207  062C  00AC               	movwf	___flmul@a
  3208  062D  120A  158A  213C  120A  118A  	fcall	___flmul
  3209  0632  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0633  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0634  082B               	movf	?___flmul+3,w
  3212  0635  00D0               	movwf	_fround$1179+3
  3213  0636  082A               	movf	?___flmul+2,w
  3214  0637  00CF               	movwf	_fround$1179+2
  3215  0638  0829               	movf	?___flmul+1,w
  3216  0639  00CE               	movwf	_fround$1179+1
  3217  063A  0828               	movf	?___flmul,w
  3218  063B  00CD               	movwf	_fround$1179
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3221  063C  300A               	movlw	10
  3222  063D  00F2               	movwf	___lwmod@divisor
  3223  063E  3000               	movlw	0
  3224  063F  00F3               	movwf	___lwmod@divisor+1
  3225  0640  0855               	movf	fround@prec,w
  3226  0641  00C6               	movwf	??_fround
  3227  0642  01C7               	clrf	??_fround+1
  3228  0643  0846               	movf	??_fround,w
  3229  0644  00F4               	movwf	___lwmod@dividend
  3230  0645  0847               	movf	??_fround+1,w
  3231  0646  00F5               	movwf	___lwmod@dividend+1
  3232  0647  160A  158A  23ED  120A  118A  	fcall	___lwmod
  3233  064C  0872               	movf	?___lwmod,w
  3234  064D  1283               	bcf	3,5	;RP0=0, select bank0
  3235  064E  1303               	bcf	3,6	;RP1=0, select bank0
  3236  064F  00C8               	movwf	??_fround+2
  3237  0650  3001               	movlw	1
  3238  0651                     u5895:
  3239  0651  1003               	clrc
  3240  0652  0DC8               	rlf	??_fround+2,f
  3241  0653  3EFF               	addlw	-1
  3242  0654  1D03               	skipz
  3243  0655  2E51               	goto	u5895
  3244  0656  1003               	clrc
  3245  0657  0D48               	rlf	??_fround+2,w
  3246  0658  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3247  0659  0084               	movwf	4
  3248  065A  160A  158A  2000  120A  118A  	fcall	stringdir
  3249  065F  00C9               	movwf	??_fround+3
  3250  0660  160A  158A  2000  120A  118A  	fcall	stringdir
  3251  0665  00CA               	movwf	??_fround+4
  3252  0666  160A  158A  2000  120A  118A  	fcall	stringdir
  3253  066B  00CB               	movwf	??_fround+5
  3254  066C  160A  158A  2000  120A  118A  	fcall	stringdir
  3255  0671  00CC               	movwf	??_fround+6
  3256  0672  084C               	movf	??_fround+6,w
  3257  0673  00AB               	movwf	___flmul@b+3
  3258  0674  084B               	movf	??_fround+5,w
  3259  0675  00AA               	movwf	___flmul@b+2
  3260  0676  084A               	movf	??_fround+4,w
  3261  0677  00A9               	movwf	___flmul@b+1
  3262  0678  0849               	movf	??_fround+3,w
  3263  0679  00A8               	movwf	___flmul@b
  3264  067A  0850               	movf	_fround$1179+3,w
  3265  067B  00AF               	movwf	___flmul@a+3
  3266  067C  084F               	movf	_fround$1179+2,w
  3267  067D  00AE               	movwf	___flmul@a+2
  3268  067E  084E               	movf	_fround$1179+1,w
  3269  067F  00AD               	movwf	___flmul@a+1
  3270  0680  084D               	movf	_fround$1179,w
  3271  0681  00AC               	movwf	___flmul@a
  3272  0682  120A  158A  213C  120A  118A  	fcall	___flmul
  3273  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0688  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0689  082B               	movf	?___flmul+3,w
  3276  068A  00C5               	movwf	?_fround+3
  3277  068B  082A               	movf	?___flmul+2,w
  3278  068C  00C4               	movwf	?_fround+2
  3279  068D  0829               	movf	?___flmul+1,w
  3280  068E  00C3               	movwf	?_fround+1
  3281  068F  0828               	movf	?___flmul,w
  3282  0690  00C2               	movwf	?_fround
  3283  0691  2F86               	goto	l283
  3284  0692                     l3672:
  3285  0692  300B               	movlw	11
  3286  0693  0255               	subwf	fround@prec,w
  3287  0694  1C03               	skipc
  3288  0695  2E97               	goto	u5901
  3289  0696  2E98               	goto	u5900
  3290  0697                     u5901:
  3291  0697  2F43               	goto	l3678
  3292  0698                     u5900:
  3293  0698                     l3674:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3296  0698  303F               	movlw	63
  3297  0699  00AB               	movwf	___flmul@b+3
  3298  069A  3000               	movlw	0
  3299  069B  00AA               	movwf	___flmul@b+2
  3300  069C  3000               	movlw	0
  3301  069D  00A9               	movwf	___flmul@b+1
  3302  069E  3000               	movlw	0
  3303  069F  00A8               	movwf	___flmul@b
  3304  06A0  300A               	movlw	10
  3305  06A1  00A0               	movwf	___lwdiv@divisor
  3306  06A2  3000               	movlw	0
  3307  06A3  00A1               	movwf	___lwdiv@divisor+1
  3308  06A4  0855               	movf	fround@prec,w
  3309  06A5  00C6               	movwf	??_fround
  3310  06A6  01C7               	clrf	??_fround+1
  3311  06A7  0846               	movf	??_fround,w
  3312  06A8  00A2               	movwf	___lwdiv@dividend
  3313  06A9  0847               	movf	??_fround+1,w
  3314  06AA  00A3               	movwf	___lwdiv@dividend+1
  3315  06AB  160A  158A  2427  120A  118A  	fcall	___lwdiv
  3316  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  3317  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  3318  06B2  0820               	movf	?___lwdiv,w
  3319  06B3  00C8               	movwf	??_fround+2
  3320  06B4  3001               	movlw	1
  3321  06B5                     u5915:
  3322  06B5  1003               	clrc
  3323  06B6  0DC8               	rlf	??_fround+2,f
  3324  06B7  3EFF               	addlw	-1
  3325  06B8  1D03               	skipz
  3326  06B9  2EB5               	goto	u5915
  3327  06BA  1003               	clrc
  3328  06BB  0D48               	rlf	??_fround+2,w
  3329  06BC  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3330  06BD  0084               	movwf	4
  3331  06BE  160A  158A  2000  120A  118A  	fcall	stringdir
  3332  06C3  00C9               	movwf	??_fround+3
  3333  06C4  160A  158A  2000  120A  118A  	fcall	stringdir
  3334  06C9  00CA               	movwf	??_fround+4
  3335  06CA  160A  158A  2000  120A  118A  	fcall	stringdir
  3336  06CF  00CB               	movwf	??_fround+5
  3337  06D0  160A  158A  2000  120A  118A  	fcall	stringdir
  3338  06D5  00CC               	movwf	??_fround+6
  3339  06D6  084C               	movf	??_fround+6,w
  3340  06D7  00AF               	movwf	___flmul@a+3
  3341  06D8  084B               	movf	??_fround+5,w
  3342  06D9  00AE               	movwf	___flmul@a+2
  3343  06DA  084A               	movf	??_fround+4,w
  3344  06DB  00AD               	movwf	___flmul@a+1
  3345  06DC  0849               	movf	??_fround+3,w
  3346  06DD  00AC               	movwf	___flmul@a
  3347  06DE  120A  158A  213C  120A  118A  	fcall	___flmul
  3348  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  3349  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  3350  06E5  082B               	movf	?___flmul+3,w
  3351  06E6  00D4               	movwf	_fround$1178+3
  3352  06E7  082A               	movf	?___flmul+2,w
  3353  06E8  00D3               	movwf	_fround$1178+2
  3354  06E9  0829               	movf	?___flmul+1,w
  3355  06EA  00D2               	movwf	_fround$1178+1
  3356  06EB  0828               	movf	?___flmul,w
  3357  06EC  00D1               	movwf	_fround$1178
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3360  06ED  300A               	movlw	10
  3361  06EE  00F2               	movwf	___lwmod@divisor
  3362  06EF  3000               	movlw	0
  3363  06F0  00F3               	movwf	___lwmod@divisor+1
  3364  06F1  0855               	movf	fround@prec,w
  3365  06F2  00C6               	movwf	??_fround
  3366  06F3  01C7               	clrf	??_fround+1
  3367  06F4  0846               	movf	??_fround,w
  3368  06F5  00F4               	movwf	___lwmod@dividend
  3369  06F6  0847               	movf	??_fround+1,w
  3370  06F7  00F5               	movwf	___lwmod@dividend+1
  3371  06F8  160A  158A  23ED  120A  118A  	fcall	___lwmod
  3372  06FD  0872               	movf	?___lwmod,w
  3373  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3374  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3375  0700  00C8               	movwf	??_fround+2
  3376  0701  3001               	movlw	1
  3377  0702                     u5925:
  3378  0702  1003               	clrc
  3379  0703  0DC8               	rlf	??_fround+2,f
  3380  0704  3EFF               	addlw	-1
  3381  0705  1D03               	skipz
  3382  0706  2F02               	goto	u5925
  3383  0707  1003               	clrc
  3384  0708  0D48               	rlf	??_fround+2,w
  3385  0709  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3386  070A  0084               	movwf	4
  3387  070B  160A  158A  2000  120A  118A  	fcall	stringdir
  3388  0710  00C9               	movwf	??_fround+3
  3389  0711  160A  158A  2000  120A  118A  	fcall	stringdir
  3390  0716  00CA               	movwf	??_fround+4
  3391  0717  160A  158A  2000  120A  118A  	fcall	stringdir
  3392  071C  00CB               	movwf	??_fround+5
  3393  071D  160A  158A  2000  120A  118A  	fcall	stringdir
  3394  0722  00CC               	movwf	??_fround+6
  3395  0723  084C               	movf	??_fround+6,w
  3396  0724  00AB               	movwf	___flmul@b+3
  3397  0725  084B               	movf	??_fround+5,w
  3398  0726  00AA               	movwf	___flmul@b+2
  3399  0727  084A               	movf	??_fround+4,w
  3400  0728  00A9               	movwf	___flmul@b+1
  3401  0729  0849               	movf	??_fround+3,w
  3402  072A  00A8               	movwf	___flmul@b
  3403  072B  0854               	movf	_fround$1178+3,w
  3404  072C  00AF               	movwf	___flmul@a+3
  3405  072D  0853               	movf	_fround$1178+2,w
  3406  072E  00AE               	movwf	___flmul@a+2
  3407  072F  0852               	movf	_fround$1178+1,w
  3408  0730  00AD               	movwf	___flmul@a+1
  3409  0731  0851               	movf	_fround$1178,w
  3410  0732  00AC               	movwf	___flmul@a
  3411  0733  120A  158A  213C  120A  118A  	fcall	___flmul
  3412  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0739  1303               	bcf	3,6	;RP1=0, select bank0
  3414  073A  082B               	movf	?___flmul+3,w
  3415  073B  00C5               	movwf	?_fround+3
  3416  073C  082A               	movf	?___flmul+2,w
  3417  073D  00C4               	movwf	?_fround+2
  3418  073E  0829               	movf	?___flmul+1,w
  3419  073F  00C3               	movwf	?_fround+1
  3420  0740  0828               	movf	?___flmul,w
  3421  0741  00C2               	movwf	?_fround
  3422  0742  2F86               	goto	l283
  3423  0743                     l3678:
  3424                           
  3425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3426  0743  303F               	movlw	63
  3427  0744  00AB               	movwf	___flmul@b+3
  3428  0745  3000               	movlw	0
  3429  0746  00AA               	movwf	___flmul@b+2
  3430  0747  3000               	movlw	0
  3431  0748  00A9               	movwf	___flmul@b+1
  3432  0749  3000               	movlw	0
  3433  074A  00A8               	movwf	___flmul@b
  3434  074B  0855               	movf	fround@prec,w
  3435  074C  00C6               	movwf	??_fround
  3436  074D  3001               	movlw	1
  3437  074E                     u5935:
  3438  074E  1003               	clrc
  3439  074F  0DC6               	rlf	??_fround,f
  3440  0750  3EFF               	addlw	-1
  3441  0751  1D03               	skipz
  3442  0752  2F4E               	goto	u5935
  3443  0753  1003               	clrc
  3444  0754  0D46               	rlf	??_fround,w
  3445  0755  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3446  0756  0084               	movwf	4
  3447  0757  160A  158A  2000  120A  118A  	fcall	stringdir
  3448  075C  00C7               	movwf	??_fround+1
  3449  075D  160A  158A  2000  120A  118A  	fcall	stringdir
  3450  0762  00C8               	movwf	??_fround+2
  3451  0763  160A  158A  2000  120A  118A  	fcall	stringdir
  3452  0768  00C9               	movwf	??_fround+3
  3453  0769  160A  158A  2000  120A  118A  	fcall	stringdir
  3454  076E  00CA               	movwf	??_fround+4
  3455  076F  084A               	movf	??_fround+4,w
  3456  0770  00AF               	movwf	___flmul@a+3
  3457  0771  0849               	movf	??_fround+3,w
  3458  0772  00AE               	movwf	___flmul@a+2
  3459  0773  0848               	movf	??_fround+2,w
  3460  0774  00AD               	movwf	___flmul@a+1
  3461  0775  0847               	movf	??_fround+1,w
  3462  0776  00AC               	movwf	___flmul@a
  3463  0777  120A  158A  213C  120A  118A  	fcall	___flmul
  3464  077C  1283               	bcf	3,5	;RP0=0, select bank0
  3465  077D  1303               	bcf	3,6	;RP1=0, select bank0
  3466  077E  082B               	movf	?___flmul+3,w
  3467  077F  00C5               	movwf	?_fround+3
  3468  0780  082A               	movf	?___flmul+2,w
  3469  0781  00C4               	movwf	?_fround+2
  3470  0782  0829               	movf	?___flmul+1,w
  3471  0783  00C3               	movwf	?_fround+1
  3472  0784  0828               	movf	?___flmul,w
  3473  0785  00C2               	movwf	?_fround
  3474  0786                     l283:
  3475  0786  0008               	return
  3476  0787                     __end_of_fround:
  3477                           
  3478                           	psect	text7
  3479  1BED                     __ptext7:	
  3480 ;; *************** function ___lwmod *****************
  3481 ;; Defined at:
  3482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  divisor         2    2[COMMON] unsigned int 
  3485 ;;  dividend        2    4[COMMON] unsigned int 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  counter         1    7[COMMON] unsigned char 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  2    2[COMMON] unsigned int 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         4       0       0       0       0
  3498 ;;      Locals:         1       0       0       0       0
  3499 ;;      Temps:          1       0       0       0       0
  3500 ;;      Totals:         6       0       0       0       0
  3501 ;;Total ram usage:        6 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_fround
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function ___lwmod
  3513  1BED                     ___lwmod:
  3514  1BED                     l2448:	
  3515                           ;incstack = 0
  3516                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3517                           
  3518  1BED  0872               	movf	___lwmod@divisor,w
  3519  1BEE  0473               	iorwf	___lwmod@divisor+1,w
  3520  1BEF  1903               	btfsc	3,2
  3521  1BF0  2BF2               	goto	u3261
  3522  1BF1  2BF3               	goto	u3260
  3523  1BF2                     u3261:
  3524  1BF2  2C22               	goto	l2466
  3525  1BF3                     u3260:
  3526  1BF3                     l2450:
  3527  1BF3  01F7               	clrf	___lwmod@counter
  3528  1BF4  0AF7               	incf	___lwmod@counter,f
  3529  1BF5  2C01               	goto	l2456
  3530  1BF6                     l2452:
  3531  1BF6  3001               	movlw	1
  3532  1BF7                     u3275:
  3533  1BF7  1003               	clrc
  3534  1BF8  0DF2               	rlf	___lwmod@divisor,f
  3535  1BF9  0DF3               	rlf	___lwmod@divisor+1,f
  3536  1BFA  3EFF               	addlw	-1
  3537  1BFB  1D03               	skipz
  3538  1BFC  2BF7               	goto	u3275
  3539  1BFD                     l2454:
  3540  1BFD  3001               	movlw	1
  3541  1BFE  00F6               	movwf	??___lwmod
  3542  1BFF  0876               	movf	??___lwmod,w
  3543  1C00  07F7               	addwf	___lwmod@counter,f
  3544  1C01                     l2456:
  3545  1C01  1FF3               	btfss	___lwmod@divisor+1,7
  3546  1C02  2C04               	goto	u3281
  3547  1C03  2C05               	goto	u3280
  3548  1C04                     u3281:
  3549  1C04  2BF6               	goto	l2452
  3550  1C05                     u3280:
  3551  1C05                     l2458:
  3552  1C05  0873               	movf	___lwmod@divisor+1,w
  3553  1C06  0275               	subwf	___lwmod@dividend+1,w
  3554  1C07  1D03               	skipz
  3555  1C08  2C0B               	goto	u3295
  3556  1C09  0872               	movf	___lwmod@divisor,w
  3557  1C0A  0274               	subwf	___lwmod@dividend,w
  3558  1C0B                     u3295:
  3559  1C0B  1C03               	skipc
  3560  1C0C  2C0E               	goto	u3291
  3561  1C0D  2C0F               	goto	u3290
  3562  1C0E                     u3291:
  3563  1C0E  2C15               	goto	l2462
  3564  1C0F                     u3290:
  3565  1C0F                     l2460:
  3566  1C0F  0872               	movf	___lwmod@divisor,w
  3567  1C10  02F4               	subwf	___lwmod@dividend,f
  3568  1C11  0873               	movf	___lwmod@divisor+1,w
  3569  1C12  1C03               	skipc
  3570  1C13  03F5               	decf	___lwmod@dividend+1,f
  3571  1C14  02F5               	subwf	___lwmod@dividend+1,f
  3572  1C15                     l2462:
  3573  1C15  3001               	movlw	1
  3574  1C16                     u3305:
  3575  1C16  1003               	clrc
  3576  1C17  0CF3               	rrf	___lwmod@divisor+1,f
  3577  1C18  0CF2               	rrf	___lwmod@divisor,f
  3578  1C19  3EFF               	addlw	-1
  3579  1C1A  1D03               	skipz
  3580  1C1B  2C16               	goto	u3305
  3581  1C1C                     l2464:
  3582  1C1C  3001               	movlw	1
  3583  1C1D  02F7               	subwf	___lwmod@counter,f
  3584  1C1E  1D03               	btfss	3,2
  3585  1C1F  2C21               	goto	u3311
  3586  1C20  2C22               	goto	u3310
  3587  1C21                     u3311:
  3588  1C21  2C05               	goto	l2458
  3589  1C22                     u3310:
  3590  1C22                     l2466:
  3591  1C22  0875               	movf	___lwmod@dividend+1,w
  3592  1C23  00F3               	movwf	?___lwmod+1
  3593  1C24  0874               	movf	___lwmod@dividend,w
  3594  1C25  00F2               	movwf	?___lwmod
  3595  1C26                     l711:
  3596  1C26  0008               	return
  3597  1C27                     __end_of___lwmod:
  3598                           
  3599                           	psect	text8
  3600  1C27                     __ptext8:	
  3601 ;; *************** function ___lwdiv *****************
  3602 ;; Defined at:
  3603 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  divisor         2    0[BANK0 ] unsigned int 
  3606 ;;  dividend        2    2[BANK0 ] unsigned int 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  quotient        2    5[BANK0 ] unsigned int 
  3609 ;;  counter         1    4[BANK0 ] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  2    0[BANK0 ] unsigned int 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3619 ;;      Params:         0       4       0       0       0
  3620 ;;      Locals:         0       3       0       0       0
  3621 ;;      Temps:          1       0       0       0       0
  3622 ;;      Totals:         1       7       0       0       0
  3623 ;;Total ram usage:        8 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    1
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_fround
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           
  3634                           ;psect for function ___lwdiv
  3635  1C27                     ___lwdiv:
  3636  1C27                     l3638:	
  3637                           ;incstack = 0
  3638                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3639                           
  3640  1C27  1283               	bcf	3,5	;RP0=0, select bank0
  3641  1C28  1303               	bcf	3,6	;RP1=0, select bank0
  3642  1C29  01A5               	clrf	___lwdiv@quotient
  3643  1C2A  01A6               	clrf	___lwdiv@quotient+1
  3644  1C2B                     l3640:
  3645  1C2B  0820               	movf	___lwdiv@divisor,w
  3646  1C2C  0421               	iorwf	___lwdiv@divisor+1,w
  3647  1C2D  1903               	btfsc	3,2
  3648  1C2E  2C30               	goto	u5791
  3649  1C2F  2C31               	goto	u5790
  3650  1C30                     u5791:
  3651  1C30  2C68               	goto	l3660
  3652  1C31                     u5790:
  3653  1C31                     l3642:
  3654  1C31  01A4               	clrf	___lwdiv@counter
  3655  1C32  0AA4               	incf	___lwdiv@counter,f
  3656  1C33  2C3F               	goto	l3648
  3657  1C34                     l3644:
  3658  1C34  3001               	movlw	1
  3659  1C35                     u5805:
  3660  1C35  1003               	clrc
  3661  1C36  0DA0               	rlf	___lwdiv@divisor,f
  3662  1C37  0DA1               	rlf	___lwdiv@divisor+1,f
  3663  1C38  3EFF               	addlw	-1
  3664  1C39  1D03               	skipz
  3665  1C3A  2C35               	goto	u5805
  3666  1C3B                     l3646:
  3667  1C3B  3001               	movlw	1
  3668  1C3C  00F8               	movwf	??___lwdiv
  3669  1C3D  0878               	movf	??___lwdiv,w
  3670  1C3E  07A4               	addwf	___lwdiv@counter,f
  3671  1C3F                     l3648:
  3672  1C3F  1FA1               	btfss	___lwdiv@divisor+1,7
  3673  1C40  2C42               	goto	u5811
  3674  1C41  2C43               	goto	u5810
  3675  1C42                     u5811:
  3676  1C42  2C34               	goto	l3644
  3677  1C43                     u5810:
  3678  1C43                     l3650:
  3679  1C43  3001               	movlw	1
  3680  1C44                     u5825:
  3681  1C44  1003               	clrc
  3682  1C45  0DA5               	rlf	___lwdiv@quotient,f
  3683  1C46  0DA6               	rlf	___lwdiv@quotient+1,f
  3684  1C47  3EFF               	addlw	-1
  3685  1C48  1D03               	skipz
  3686  1C49  2C44               	goto	u5825
  3687  1C4A  0821               	movf	___lwdiv@divisor+1,w
  3688  1C4B  0223               	subwf	___lwdiv@dividend+1,w
  3689  1C4C  1D03               	skipz
  3690  1C4D  2C50               	goto	u5835
  3691  1C4E  0820               	movf	___lwdiv@divisor,w
  3692  1C4F  0222               	subwf	___lwdiv@dividend,w
  3693  1C50                     u5835:
  3694  1C50  1C03               	skipc
  3695  1C51  2C53               	goto	u5831
  3696  1C52  2C54               	goto	u5830
  3697  1C53                     u5831:
  3698  1C53  2C5B               	goto	l3656
  3699  1C54                     u5830:
  3700  1C54                     l3652:
  3701  1C54  0820               	movf	___lwdiv@divisor,w
  3702  1C55  02A2               	subwf	___lwdiv@dividend,f
  3703  1C56  0821               	movf	___lwdiv@divisor+1,w
  3704  1C57  1C03               	skipc
  3705  1C58  03A3               	decf	___lwdiv@dividend+1,f
  3706  1C59  02A3               	subwf	___lwdiv@dividend+1,f
  3707  1C5A                     l3654:
  3708  1C5A  1425               	bsf	___lwdiv@quotient,0
  3709  1C5B                     l3656:
  3710  1C5B  3001               	movlw	1
  3711  1C5C                     u5845:
  3712  1C5C  1003               	clrc
  3713  1C5D  0CA1               	rrf	___lwdiv@divisor+1,f
  3714  1C5E  0CA0               	rrf	___lwdiv@divisor,f
  3715  1C5F  3EFF               	addlw	-1
  3716  1C60  1D03               	skipz
  3717  1C61  2C5C               	goto	u5845
  3718  1C62                     l3658:
  3719  1C62  3001               	movlw	1
  3720  1C63  02A4               	subwf	___lwdiv@counter,f
  3721  1C64  1D03               	btfss	3,2
  3722  1C65  2C67               	goto	u5851
  3723  1C66  2C68               	goto	u5850
  3724  1C67                     u5851:
  3725  1C67  2C43               	goto	l3650
  3726  1C68                     u5850:
  3727  1C68                     l3660:
  3728  1C68  0826               	movf	___lwdiv@quotient+1,w
  3729  1C69  00A1               	movwf	?___lwdiv+1
  3730  1C6A  0825               	movf	___lwdiv@quotient,w
  3731  1C6B  00A0               	movwf	?___lwdiv
  3732  1C6C                     l701:
  3733  1C6C  0008               	return
  3734  1C6D                     __end_of___lwdiv:
  3735                           
  3736                           	psect	text9
  3737  093C                     __ptext9:	
  3738 ;; *************** function ___flmul *****************
  3739 ;; Defined at:
  3740 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  b               4    8[BANK0 ] unsigned int 
  3743 ;;  a               4   12[BANK0 ] unsigned int 
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  prod            4   28[BANK0 ] struct .
  3746 ;;  grs             4   22[BANK0 ] unsigned long 
  3747 ;;  temp            2   32[BANK0 ] struct .
  3748 ;;  bexp            1   27[BANK0 ] unsigned char 
  3749 ;;  aexp            1   26[BANK0 ] unsigned char 
  3750 ;;  sign            1   21[BANK0 ] unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  4    8[BANK0 ] unsigned char 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3760 ;;      Params:         0       8       0       0       0
  3761 ;;      Locals:         0      13       0       0       0
  3762 ;;      Temps:          0       5       0       0       0
  3763 ;;      Totals:         0      26       0       0       0
  3764 ;;Total ram usage:       26 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    2
  3767 ;; This function calls:
  3768 ;;		__Umul8_16
  3769 ;; This function is called by:
  3770 ;;		_fround
  3771 ;;		_scale
  3772 ;;		_sprintf
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           
  3777                           ;psect for function ___flmul
  3778  093C                     ___flmul:
  3779  093C                     l2664:	
  3780                           ;incstack = 0
  3781                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3782                           
  3783  093C  1283               	bcf	3,5	;RP0=0, select bank0
  3784  093D  1303               	bcf	3,6	;RP1=0, select bank0
  3785  093E  082B               	movf	___flmul@b+3,w
  3786  093F  3980               	andlw	128
  3787  0940  00B0               	movwf	??___flmul
  3788  0941  0830               	movf	??___flmul,w
  3789  0942  00B5               	movwf	___flmul@sign
  3790  0943                     l2666:
  3791  0943  082B               	movf	___flmul@b+3,w
  3792  0944  00B0               	movwf	??___flmul
  3793  0945  0730               	addwf	??___flmul,w
  3794  0946  00B1               	movwf	??___flmul+1
  3795  0947  0831               	movf	??___flmul+1,w
  3796  0948  00BB               	movwf	___flmul@bexp
  3797  0949                     l2668:
  3798  0949  1FAA               	btfss	___flmul@b+2,7
  3799  094A  294C               	goto	u3781
  3800  094B  294D               	goto	u3780
  3801  094C                     u3781:
  3802  094C  294E               	goto	l2672
  3803  094D                     u3780:
  3804  094D                     l2670:
  3805  094D  143B               	bsf	___flmul@bexp,0
  3806  094E                     l2672:
  3807  094E  083B               	movf	___flmul@bexp,w
  3808  094F  1903               	btfsc	3,2
  3809  0950  2952               	goto	u3791
  3810  0951  2953               	goto	u3790
  3811  0952                     u3791:
  3812  0952  2962               	goto	l2680
  3813  0953                     u3790:
  3814  0953                     l2674:
  3815  0953  0A3B               	incf	___flmul@bexp,w
  3816  0954  1D03               	btfss	3,2
  3817  0955  2957               	goto	u3801
  3818  0956  2958               	goto	u3800
  3819  0957                     u3801:
  3820  0957  2960               	goto	l2678
  3821  0958                     u3800:
  3822  0958                     l2676:
  3823  0958  3000               	movlw	0
  3824  0959  00AB               	movwf	___flmul@b+3
  3825  095A  3000               	movlw	0
  3826  095B  00AA               	movwf	___flmul@b+2
  3827  095C  3000               	movlw	0
  3828  095D  00A9               	movwf	___flmul@b+1
  3829  095E  3000               	movlw	0
  3830  095F  00A8               	movwf	___flmul@b
  3831  0960                     l2678:
  3832  0960  17AA               	bsf	___flmul@b+2,7
  3833  0961  296A               	goto	l2682
  3834  0962                     l2680:
  3835  0962  3000               	movlw	0
  3836  0963  00AB               	movwf	___flmul@b+3
  3837  0964  3000               	movlw	0
  3838  0965  00AA               	movwf	___flmul@b+2
  3839  0966  3000               	movlw	0
  3840  0967  00A9               	movwf	___flmul@b+1
  3841  0968  3000               	movlw	0
  3842  0969  00A8               	movwf	___flmul@b
  3843  096A                     l2682:
  3844  096A  082F               	movf	___flmul@a+3,w
  3845  096B  3980               	andlw	128
  3846  096C  00B0               	movwf	??___flmul
  3847  096D  0830               	movf	??___flmul,w
  3848  096E  06B5               	xorwf	___flmul@sign,f
  3849  096F                     l2684:
  3850  096F  082F               	movf	___flmul@a+3,w
  3851  0970  00B0               	movwf	??___flmul
  3852  0971  0730               	addwf	??___flmul,w
  3853  0972  00B1               	movwf	??___flmul+1
  3854  0973  0831               	movf	??___flmul+1,w
  3855  0974  00BA               	movwf	___flmul@aexp
  3856  0975                     l2686:
  3857  0975  1FAE               	btfss	___flmul@a+2,7
  3858  0976  2978               	goto	u3811
  3859  0977  2979               	goto	u3810
  3860  0978                     u3811:
  3861  0978  297A               	goto	l2690
  3862  0979                     u3810:
  3863  0979                     l2688:
  3864  0979  143A               	bsf	___flmul@aexp,0
  3865  097A                     l2690:
  3866  097A  083A               	movf	___flmul@aexp,w
  3867  097B  1903               	btfsc	3,2
  3868  097C  297E               	goto	u3821
  3869  097D  297F               	goto	u3820
  3870  097E                     u3821:
  3871  097E  298E               	goto	l2698
  3872  097F                     u3820:
  3873  097F                     l2692:
  3874  097F  0A3A               	incf	___flmul@aexp,w
  3875  0980  1D03               	btfss	3,2
  3876  0981  2983               	goto	u3831
  3877  0982  2984               	goto	u3830
  3878  0983                     u3831:
  3879  0983  298C               	goto	l2696
  3880  0984                     u3830:
  3881  0984                     l2694:
  3882  0984  3000               	movlw	0
  3883  0985  00AF               	movwf	___flmul@a+3
  3884  0986  3000               	movlw	0
  3885  0987  00AE               	movwf	___flmul@a+2
  3886  0988  3000               	movlw	0
  3887  0989  00AD               	movwf	___flmul@a+1
  3888  098A  3000               	movlw	0
  3889  098B  00AC               	movwf	___flmul@a
  3890  098C                     l2696:
  3891  098C  17AE               	bsf	___flmul@a+2,7
  3892  098D  2996               	goto	l2700
  3893  098E                     l2698:
  3894  098E  3000               	movlw	0
  3895  098F  00AF               	movwf	___flmul@a+3
  3896  0990  3000               	movlw	0
  3897  0991  00AE               	movwf	___flmul@a+2
  3898  0992  3000               	movlw	0
  3899  0993  00AD               	movwf	___flmul@a+1
  3900  0994  3000               	movlw	0
  3901  0995  00AC               	movwf	___flmul@a
  3902  0996                     l2700:
  3903  0996  083A               	movf	___flmul@aexp,w
  3904  0997  1903               	btfsc	3,2
  3905  0998  299A               	goto	u3841
  3906  0999  299B               	goto	u3840
  3907  099A                     u3841:
  3908  099A  29A0               	goto	l2704
  3909  099B                     u3840:
  3910  099B                     l2702:
  3911  099B  083B               	movf	___flmul@bexp,w
  3912  099C  1D03               	btfss	3,2
  3913  099D  299F               	goto	u3851
  3914  099E  29A0               	goto	u3850
  3915  099F                     u3851:
  3916  099F  29A9               	goto	l2708
  3917  09A0                     u3850:
  3918  09A0                     l2704:
  3919  09A0  3000               	movlw	0
  3920  09A1  00AB               	movwf	?___flmul+3
  3921  09A2  3000               	movlw	0
  3922  09A3  00AA               	movwf	?___flmul+2
  3923  09A4  3000               	movlw	0
  3924  09A5  00A9               	movwf	?___flmul+1
  3925  09A6  3000               	movlw	0
  3926  09A7  00A8               	movwf	?___flmul
  3927  09A8  2C9C               	goto	l818
  3928  09A9                     l2708:
  3929  09A9  0828               	movf	___flmul@b,w
  3930  09AA  00B0               	movwf	??___flmul
  3931  09AB  0830               	movf	??___flmul,w
  3932  09AC  00F2               	movwf	__Umul8_16@multiplicand
  3933  09AD  082E               	movf	___flmul@a+2,w
  3934  09AE  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  3935  09B3  0873               	movf	?__Umul8_16+1,w
  3936  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  3937  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  3938  09B6  00C1               	movwf	___flmul@temp+1
  3939  09B7  0872               	movf	?__Umul8_16,w
  3940  09B8  00C0               	movwf	___flmul@temp
  3941  09B9                     l2710:
  3942  09B9  0840               	movf	___flmul@temp,w
  3943  09BA  00B0               	movwf	??___flmul
  3944  09BB  01B1               	clrf	??___flmul+1
  3945  09BC  01B2               	clrf	??___flmul+2
  3946  09BD  01B3               	clrf	??___flmul+3
  3947  09BE  0833               	movf	??___flmul+3,w
  3948  09BF  00B9               	movwf	___flmul@grs+3
  3949  09C0  0832               	movf	??___flmul+2,w
  3950  09C1  00B8               	movwf	___flmul@grs+2
  3951  09C2  0831               	movf	??___flmul+1,w
  3952  09C3  00B7               	movwf	___flmul@grs+1
  3953  09C4  0830               	movf	??___flmul,w
  3954  09C5  00B6               	movwf	___flmul@grs
  3955  09C6                     l2712:
  3956  09C6  0841               	movf	___flmul@temp+1,w
  3957  09C7  00B0               	movwf	??___flmul
  3958  09C8  01B1               	clrf	??___flmul+1
  3959  09C9  01B2               	clrf	??___flmul+2
  3960  09CA  01B3               	clrf	??___flmul+3
  3961  09CB  0833               	movf	??___flmul+3,w
  3962  09CC  00BF               	movwf	___flmul@prod+3
  3963  09CD  0832               	movf	??___flmul+2,w
  3964  09CE  00BE               	movwf	___flmul@prod+2
  3965  09CF  0831               	movf	??___flmul+1,w
  3966  09D0  00BD               	movwf	___flmul@prod+1
  3967  09D1  0830               	movf	??___flmul,w
  3968  09D2  00BC               	movwf	___flmul@prod
  3969  09D3  0829               	movf	___flmul@b+1,w
  3970  09D4  00B0               	movwf	??___flmul
  3971  09D5  0830               	movf	??___flmul,w
  3972  09D6  00F2               	movwf	__Umul8_16@multiplicand
  3973  09D7  082D               	movf	___flmul@a+1,w
  3974  09D8  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  3975  09DD  0873               	movf	?__Umul8_16+1,w
  3976  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  3977  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  3978  09E0  00C1               	movwf	___flmul@temp+1
  3979  09E1  0872               	movf	?__Umul8_16,w
  3980  09E2  00C0               	movwf	___flmul@temp
  3981  09E3                     l2714:
  3982  09E3  0840               	movf	___flmul@temp,w
  3983  09E4  00B0               	movwf	??___flmul
  3984  09E5  01B1               	clrf	??___flmul+1
  3985  09E6  01B2               	clrf	??___flmul+2
  3986  09E7  01B3               	clrf	??___flmul+3
  3987  09E8  0830               	movf	??___flmul,w
  3988  09E9  07B6               	addwf	___flmul@grs,f
  3989  09EA  0831               	movf	??___flmul+1,w
  3990  09EB  1103               	clrz
  3991  09EC  1803               	skipnc
  3992  09ED  3E01               	addlw	1
  3993  09EE  1903               	skipnz
  3994  09EF  29F1               	goto	u3861
  3995  09F0  07B7               	addwf	___flmul@grs+1,f
  3996  09F1                     u3861:
  3997  09F1  0832               	movf	??___flmul+2,w
  3998  09F2  1103               	clrz
  3999  09F3  1803               	skipnc
  4000  09F4  3E01               	addlw	1
  4001  09F5  1903               	skipnz
  4002  09F6  29F8               	goto	u3862
  4003  09F7  07B8               	addwf	___flmul@grs+2,f
  4004  09F8                     u3862:
  4005  09F8  0833               	movf	??___flmul+3,w
  4006  09F9  1103               	clrz
  4007  09FA  1803               	skipnc
  4008  09FB  3E01               	addlw	1
  4009  09FC  1903               	skipnz
  4010  09FD  29FF               	goto	u3863
  4011  09FE  07B9               	addwf	___flmul@grs+3,f
  4012  09FF                     u3863:
  4013  09FF                     l2716:
  4014  09FF  0841               	movf	___flmul@temp+1,w
  4015  0A00  00B0               	movwf	??___flmul
  4016  0A01  01B1               	clrf	??___flmul+1
  4017  0A02  01B2               	clrf	??___flmul+2
  4018  0A03  01B3               	clrf	??___flmul+3
  4019  0A04  0830               	movf	??___flmul,w
  4020  0A05  07BC               	addwf	___flmul@prod,f
  4021  0A06  0831               	movf	??___flmul+1,w
  4022  0A07  1103               	clrz
  4023  0A08  1803               	skipnc
  4024  0A09  3E01               	addlw	1
  4025  0A0A  1903               	skipnz
  4026  0A0B  2A0D               	goto	u3871
  4027  0A0C  07BD               	addwf	___flmul@prod+1,f
  4028  0A0D                     u3871:
  4029  0A0D  0832               	movf	??___flmul+2,w
  4030  0A0E  1103               	clrz
  4031  0A0F  1803               	skipnc
  4032  0A10  3E01               	addlw	1
  4033  0A11  1903               	skipnz
  4034  0A12  2A14               	goto	u3872
  4035  0A13  07BE               	addwf	___flmul@prod+2,f
  4036  0A14                     u3872:
  4037  0A14  0833               	movf	??___flmul+3,w
  4038  0A15  1103               	clrz
  4039  0A16  1803               	skipnc
  4040  0A17  3E01               	addlw	1
  4041  0A18  1903               	skipnz
  4042  0A19  2A1B               	goto	u3873
  4043  0A1A  07BF               	addwf	___flmul@prod+3,f
  4044  0A1B                     u3873:
  4045  0A1B  082A               	movf	___flmul@b+2,w
  4046  0A1C  00B0               	movwf	??___flmul
  4047  0A1D  0830               	movf	??___flmul,w
  4048  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  4049  0A1F  082C               	movf	___flmul@a,w
  4050  0A20  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4051  0A25  0873               	movf	?__Umul8_16+1,w
  4052  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4053  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4054  0A28  00C1               	movwf	___flmul@temp+1
  4055  0A29  0872               	movf	?__Umul8_16,w
  4056  0A2A  00C0               	movwf	___flmul@temp
  4057  0A2B                     l2718:
  4058  0A2B  0840               	movf	___flmul@temp,w
  4059  0A2C  00B0               	movwf	??___flmul
  4060  0A2D  01B1               	clrf	??___flmul+1
  4061  0A2E  01B2               	clrf	??___flmul+2
  4062  0A2F  01B3               	clrf	??___flmul+3
  4063  0A30  0830               	movf	??___flmul,w
  4064  0A31  07B6               	addwf	___flmul@grs,f
  4065  0A32  0831               	movf	??___flmul+1,w
  4066  0A33  1103               	clrz
  4067  0A34  1803               	skipnc
  4068  0A35  3E01               	addlw	1
  4069  0A36  1903               	skipnz
  4070  0A37  2A39               	goto	u3881
  4071  0A38  07B7               	addwf	___flmul@grs+1,f
  4072  0A39                     u3881:
  4073  0A39  0832               	movf	??___flmul+2,w
  4074  0A3A  1103               	clrz
  4075  0A3B  1803               	skipnc
  4076  0A3C  3E01               	addlw	1
  4077  0A3D  1903               	skipnz
  4078  0A3E  2A40               	goto	u3882
  4079  0A3F  07B8               	addwf	___flmul@grs+2,f
  4080  0A40                     u3882:
  4081  0A40  0833               	movf	??___flmul+3,w
  4082  0A41  1103               	clrz
  4083  0A42  1803               	skipnc
  4084  0A43  3E01               	addlw	1
  4085  0A44  1903               	skipnz
  4086  0A45  2A47               	goto	u3883
  4087  0A46  07B9               	addwf	___flmul@grs+3,f
  4088  0A47                     u3883:
  4089  0A47                     l2720:
  4090  0A47  0841               	movf	___flmul@temp+1,w
  4091  0A48  00B0               	movwf	??___flmul
  4092  0A49  01B1               	clrf	??___flmul+1
  4093  0A4A  01B2               	clrf	??___flmul+2
  4094  0A4B  01B3               	clrf	??___flmul+3
  4095  0A4C  0830               	movf	??___flmul,w
  4096  0A4D  07BC               	addwf	___flmul@prod,f
  4097  0A4E  0831               	movf	??___flmul+1,w
  4098  0A4F  1103               	clrz
  4099  0A50  1803               	skipnc
  4100  0A51  3E01               	addlw	1
  4101  0A52  1903               	skipnz
  4102  0A53  2A55               	goto	u3891
  4103  0A54  07BD               	addwf	___flmul@prod+1,f
  4104  0A55                     u3891:
  4105  0A55  0832               	movf	??___flmul+2,w
  4106  0A56  1103               	clrz
  4107  0A57  1803               	skipnc
  4108  0A58  3E01               	addlw	1
  4109  0A59  1903               	skipnz
  4110  0A5A  2A5C               	goto	u3892
  4111  0A5B  07BE               	addwf	___flmul@prod+2,f
  4112  0A5C                     u3892:
  4113  0A5C  0833               	movf	??___flmul+3,w
  4114  0A5D  1103               	clrz
  4115  0A5E  1803               	skipnc
  4116  0A5F  3E01               	addlw	1
  4117  0A60  1903               	skipnz
  4118  0A61  2A63               	goto	u3893
  4119  0A62  07BF               	addwf	___flmul@prod+3,f
  4120  0A63                     u3893:
  4121  0A63                     l2722:
  4122  0A63  3008               	movlw	8
  4123  0A64  00B0               	movwf	??___flmul
  4124  0A65                     u3905:
  4125  0A65  1003               	clrc
  4126  0A66  0DB6               	rlf	___flmul@grs,f
  4127  0A67  0DB7               	rlf	___flmul@grs+1,f
  4128  0A68  0DB8               	rlf	___flmul@grs+2,f
  4129  0A69  0DB9               	rlf	___flmul@grs+3,f
  4130  0A6A  0BB0               	decfsz	??___flmul,f
  4131  0A6B  2A65               	goto	u3905
  4132  0A6C                     l2724:
  4133  0A6C  0829               	movf	___flmul@b+1,w
  4134  0A6D  00B0               	movwf	??___flmul
  4135  0A6E  0830               	movf	??___flmul,w
  4136  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  4137  0A70  082C               	movf	___flmul@a,w
  4138  0A71  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4139  0A76  0873               	movf	?__Umul8_16+1,w
  4140  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4141  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4142  0A79  00C1               	movwf	___flmul@temp+1
  4143  0A7A  0872               	movf	?__Umul8_16,w
  4144  0A7B  00C0               	movwf	___flmul@temp
  4145  0A7C                     l2726:
  4146  0A7C  0840               	movf	___flmul@temp,w
  4147  0A7D  00B0               	movwf	??___flmul
  4148  0A7E  0841               	movf	___flmul@temp+1,w
  4149  0A7F  00B1               	movwf	??___flmul+1
  4150  0A80  01B2               	clrf	??___flmul+2
  4151  0A81  01B3               	clrf	??___flmul+3
  4152  0A82  0830               	movf	??___flmul,w
  4153  0A83  07B6               	addwf	___flmul@grs,f
  4154  0A84  0831               	movf	??___flmul+1,w
  4155  0A85  1103               	clrz
  4156  0A86  1803               	skipnc
  4157  0A87  3E01               	addlw	1
  4158  0A88  1903               	skipnz
  4159  0A89  2A8B               	goto	u3911
  4160  0A8A  07B7               	addwf	___flmul@grs+1,f
  4161  0A8B                     u3911:
  4162  0A8B  0832               	movf	??___flmul+2,w
  4163  0A8C  1103               	clrz
  4164  0A8D  1803               	skipnc
  4165  0A8E  3E01               	addlw	1
  4166  0A8F  1903               	skipnz
  4167  0A90  2A92               	goto	u3912
  4168  0A91  07B8               	addwf	___flmul@grs+2,f
  4169  0A92                     u3912:
  4170  0A92  0833               	movf	??___flmul+3,w
  4171  0A93  1103               	clrz
  4172  0A94  1803               	skipnc
  4173  0A95  3E01               	addlw	1
  4174  0A96  1903               	skipnz
  4175  0A97  2A99               	goto	u3913
  4176  0A98  07B9               	addwf	___flmul@grs+3,f
  4177  0A99                     u3913:
  4178  0A99                     l2728:
  4179  0A99  0828               	movf	___flmul@b,w
  4180  0A9A  00B0               	movwf	??___flmul
  4181  0A9B  0830               	movf	??___flmul,w
  4182  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  4183  0A9D  082D               	movf	___flmul@a+1,w
  4184  0A9E  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4185  0AA3  0873               	movf	?__Umul8_16+1,w
  4186  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0AA6  00C1               	movwf	___flmul@temp+1
  4189  0AA7  0872               	movf	?__Umul8_16,w
  4190  0AA8  00C0               	movwf	___flmul@temp
  4191  0AA9                     l2730:
  4192  0AA9  0840               	movf	___flmul@temp,w
  4193  0AAA  00B0               	movwf	??___flmul
  4194  0AAB  0841               	movf	___flmul@temp+1,w
  4195  0AAC  00B1               	movwf	??___flmul+1
  4196  0AAD  01B2               	clrf	??___flmul+2
  4197  0AAE  01B3               	clrf	??___flmul+3
  4198  0AAF  0830               	movf	??___flmul,w
  4199  0AB0  07B6               	addwf	___flmul@grs,f
  4200  0AB1  0831               	movf	??___flmul+1,w
  4201  0AB2  1103               	clrz
  4202  0AB3  1803               	skipnc
  4203  0AB4  3E01               	addlw	1
  4204  0AB5  1903               	skipnz
  4205  0AB6  2AB8               	goto	u3921
  4206  0AB7  07B7               	addwf	___flmul@grs+1,f
  4207  0AB8                     u3921:
  4208  0AB8  0832               	movf	??___flmul+2,w
  4209  0AB9  1103               	clrz
  4210  0ABA  1803               	skipnc
  4211  0ABB  3E01               	addlw	1
  4212  0ABC  1903               	skipnz
  4213  0ABD  2ABF               	goto	u3922
  4214  0ABE  07B8               	addwf	___flmul@grs+2,f
  4215  0ABF                     u3922:
  4216  0ABF  0833               	movf	??___flmul+3,w
  4217  0AC0  1103               	clrz
  4218  0AC1  1803               	skipnc
  4219  0AC2  3E01               	addlw	1
  4220  0AC3  1903               	skipnz
  4221  0AC4  2AC6               	goto	u3923
  4222  0AC5  07B9               	addwf	___flmul@grs+3,f
  4223  0AC6                     u3923:
  4224  0AC6                     l2732:
  4225  0AC6  3008               	movlw	8
  4226  0AC7  00B0               	movwf	??___flmul
  4227  0AC8                     u3935:
  4228  0AC8  1003               	clrc
  4229  0AC9  0DB6               	rlf	___flmul@grs,f
  4230  0ACA  0DB7               	rlf	___flmul@grs+1,f
  4231  0ACB  0DB8               	rlf	___flmul@grs+2,f
  4232  0ACC  0DB9               	rlf	___flmul@grs+3,f
  4233  0ACD  0BB0               	decfsz	??___flmul,f
  4234  0ACE  2AC8               	goto	u3935
  4235  0ACF  0828               	movf	___flmul@b,w
  4236  0AD0  00B0               	movwf	??___flmul
  4237  0AD1  0830               	movf	??___flmul,w
  4238  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  4239  0AD3  082C               	movf	___flmul@a,w
  4240  0AD4  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4241  0AD9  0873               	movf	?__Umul8_16+1,w
  4242  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4243  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4244  0ADC  00C1               	movwf	___flmul@temp+1
  4245  0ADD  0872               	movf	?__Umul8_16,w
  4246  0ADE  00C0               	movwf	___flmul@temp
  4247  0ADF                     l2734:
  4248  0ADF  0840               	movf	___flmul@temp,w
  4249  0AE0  00B0               	movwf	??___flmul
  4250  0AE1  0841               	movf	___flmul@temp+1,w
  4251  0AE2  00B1               	movwf	??___flmul+1
  4252  0AE3  01B2               	clrf	??___flmul+2
  4253  0AE4  01B3               	clrf	??___flmul+3
  4254  0AE5  0830               	movf	??___flmul,w
  4255  0AE6  07B6               	addwf	___flmul@grs,f
  4256  0AE7  0831               	movf	??___flmul+1,w
  4257  0AE8  1103               	clrz
  4258  0AE9  1803               	skipnc
  4259  0AEA  3E01               	addlw	1
  4260  0AEB  1903               	skipnz
  4261  0AEC  2AEE               	goto	u3941
  4262  0AED  07B7               	addwf	___flmul@grs+1,f
  4263  0AEE                     u3941:
  4264  0AEE  0832               	movf	??___flmul+2,w
  4265  0AEF  1103               	clrz
  4266  0AF0  1803               	skipnc
  4267  0AF1  3E01               	addlw	1
  4268  0AF2  1903               	skipnz
  4269  0AF3  2AF5               	goto	u3942
  4270  0AF4  07B8               	addwf	___flmul@grs+2,f
  4271  0AF5                     u3942:
  4272  0AF5  0833               	movf	??___flmul+3,w
  4273  0AF6  1103               	clrz
  4274  0AF7  1803               	skipnc
  4275  0AF8  3E01               	addlw	1
  4276  0AF9  1903               	skipnz
  4277  0AFA  2AFC               	goto	u3943
  4278  0AFB  07B9               	addwf	___flmul@grs+3,f
  4279  0AFC                     u3943:
  4280  0AFC                     l2736:
  4281  0AFC  0829               	movf	___flmul@b+1,w
  4282  0AFD  00B0               	movwf	??___flmul
  4283  0AFE  0830               	movf	??___flmul,w
  4284  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  4285  0B00  082E               	movf	___flmul@a+2,w
  4286  0B01  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4287  0B06  0873               	movf	?__Umul8_16+1,w
  4288  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4289  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4290  0B09  00C1               	movwf	___flmul@temp+1
  4291  0B0A  0872               	movf	?__Umul8_16,w
  4292  0B0B  00C0               	movwf	___flmul@temp
  4293  0B0C  0840               	movf	___flmul@temp,w
  4294  0B0D  00B0               	movwf	??___flmul
  4295  0B0E  0841               	movf	___flmul@temp+1,w
  4296  0B0F  00B1               	movwf	??___flmul+1
  4297  0B10  01B2               	clrf	??___flmul+2
  4298  0B11  01B3               	clrf	??___flmul+3
  4299  0B12  0830               	movf	??___flmul,w
  4300  0B13  07BC               	addwf	___flmul@prod,f
  4301  0B14  0831               	movf	??___flmul+1,w
  4302  0B15  1103               	clrz
  4303  0B16  1803               	skipnc
  4304  0B17  3E01               	addlw	1
  4305  0B18  1903               	skipnz
  4306  0B19  2B1B               	goto	u3951
  4307  0B1A  07BD               	addwf	___flmul@prod+1,f
  4308  0B1B                     u3951:
  4309  0B1B  0832               	movf	??___flmul+2,w
  4310  0B1C  1103               	clrz
  4311  0B1D  1803               	skipnc
  4312  0B1E  3E01               	addlw	1
  4313  0B1F  1903               	skipnz
  4314  0B20  2B22               	goto	u3952
  4315  0B21  07BE               	addwf	___flmul@prod+2,f
  4316  0B22                     u3952:
  4317  0B22  0833               	movf	??___flmul+3,w
  4318  0B23  1103               	clrz
  4319  0B24  1803               	skipnc
  4320  0B25  3E01               	addlw	1
  4321  0B26  1903               	skipnz
  4322  0B27  2B29               	goto	u3953
  4323  0B28  07BF               	addwf	___flmul@prod+3,f
  4324  0B29                     u3953:
  4325  0B29                     l2738:
  4326  0B29  082A               	movf	___flmul@b+2,w
  4327  0B2A  00B0               	movwf	??___flmul
  4328  0B2B  0830               	movf	??___flmul,w
  4329  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  4330  0B2D  082D               	movf	___flmul@a+1,w
  4331  0B2E  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4332  0B33  0873               	movf	?__Umul8_16+1,w
  4333  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4334  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4335  0B36  00C1               	movwf	___flmul@temp+1
  4336  0B37  0872               	movf	?__Umul8_16,w
  4337  0B38  00C0               	movwf	___flmul@temp
  4338  0B39                     l2740:
  4339  0B39  0840               	movf	___flmul@temp,w
  4340  0B3A  00B0               	movwf	??___flmul
  4341  0B3B  0841               	movf	___flmul@temp+1,w
  4342  0B3C  00B1               	movwf	??___flmul+1
  4343  0B3D  01B2               	clrf	??___flmul+2
  4344  0B3E  01B3               	clrf	??___flmul+3
  4345  0B3F  0830               	movf	??___flmul,w
  4346  0B40  07BC               	addwf	___flmul@prod,f
  4347  0B41  0831               	movf	??___flmul+1,w
  4348  0B42  1103               	clrz
  4349  0B43  1803               	skipnc
  4350  0B44  3E01               	addlw	1
  4351  0B45  1903               	skipnz
  4352  0B46  2B48               	goto	u3961
  4353  0B47  07BD               	addwf	___flmul@prod+1,f
  4354  0B48                     u3961:
  4355  0B48  0832               	movf	??___flmul+2,w
  4356  0B49  1103               	clrz
  4357  0B4A  1803               	skipnc
  4358  0B4B  3E01               	addlw	1
  4359  0B4C  1903               	skipnz
  4360  0B4D  2B4F               	goto	u3962
  4361  0B4E  07BE               	addwf	___flmul@prod+2,f
  4362  0B4F                     u3962:
  4363  0B4F  0833               	movf	??___flmul+3,w
  4364  0B50  1103               	clrz
  4365  0B51  1803               	skipnc
  4366  0B52  3E01               	addlw	1
  4367  0B53  1903               	skipnz
  4368  0B54  2B56               	goto	u3963
  4369  0B55  07BF               	addwf	___flmul@prod+3,f
  4370  0B56                     u3963:
  4371  0B56  082A               	movf	___flmul@b+2,w
  4372  0B57  00B0               	movwf	??___flmul
  4373  0B58  0830               	movf	??___flmul,w
  4374  0B59  00F2               	movwf	__Umul8_16@multiplicand
  4375  0B5A  082E               	movf	___flmul@a+2,w
  4376  0B5B  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4377  0B60  0873               	movf	?__Umul8_16+1,w
  4378  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4379  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4380  0B63  00C1               	movwf	___flmul@temp+1
  4381  0B64  0872               	movf	?__Umul8_16,w
  4382  0B65  00C0               	movwf	___flmul@temp
  4383  0B66                     l2742:
  4384  0B66  0840               	movf	___flmul@temp,w
  4385  0B67  00B0               	movwf	??___flmul
  4386  0B68  0841               	movf	___flmul@temp+1,w
  4387  0B69  00B1               	movwf	??___flmul+1
  4388  0B6A  01B2               	clrf	??___flmul+2
  4389  0B6B  01B3               	clrf	??___flmul+3
  4390  0B6C  3008               	movlw	8
  4391  0B6D                     u3975:
  4392  0B6D  1003               	clrc
  4393  0B6E  0DB0               	rlf	??___flmul,f
  4394  0B6F  0DB1               	rlf	??___flmul+1,f
  4395  0B70  0DB2               	rlf	??___flmul+2,f
  4396  0B71  0DB3               	rlf	??___flmul+3,f
  4397  0B72                     u3970:
  4398  0B72  3EFF               	addlw	-1
  4399  0B73  1D03               	skipz
  4400  0B74  2B6D               	goto	u3975
  4401  0B75  0830               	movf	??___flmul,w
  4402  0B76  07BC               	addwf	___flmul@prod,f
  4403  0B77  0831               	movf	??___flmul+1,w
  4404  0B78  1103               	clrz
  4405  0B79  1803               	skipnc
  4406  0B7A  3E01               	addlw	1
  4407  0B7B  1903               	skipnz
  4408  0B7C  2B7E               	goto	u3981
  4409  0B7D  07BD               	addwf	___flmul@prod+1,f
  4410  0B7E                     u3981:
  4411  0B7E  0832               	movf	??___flmul+2,w
  4412  0B7F  1103               	clrz
  4413  0B80  1803               	skipnc
  4414  0B81  3E01               	addlw	1
  4415  0B82  1903               	skipnz
  4416  0B83  2B85               	goto	u3982
  4417  0B84  07BE               	addwf	___flmul@prod+2,f
  4418  0B85                     u3982:
  4419  0B85  0833               	movf	??___flmul+3,w
  4420  0B86  1103               	clrz
  4421  0B87  1803               	skipnc
  4422  0B88  3E01               	addlw	1
  4423  0B89  1903               	skipnz
  4424  0B8A  2B8C               	goto	u3983
  4425  0B8B  07BF               	addwf	___flmul@prod+3,f
  4426  0B8C                     u3983:
  4427  0B8C                     l2744:
  4428  0B8C  0836               	movf	___flmul@grs,w
  4429  0B8D  00B0               	movwf	??___flmul
  4430  0B8E  0837               	movf	___flmul@grs+1,w
  4431  0B8F  00B1               	movwf	??___flmul+1
  4432  0B90  0838               	movf	___flmul@grs+2,w
  4433  0B91  00B2               	movwf	??___flmul+2
  4434  0B92  0839               	movf	___flmul@grs+3,w
  4435  0B93  00B3               	movwf	??___flmul+3
  4436  0B94  3018               	movlw	24
  4437  0B95                     u3995:
  4438  0B95  1003               	clrc
  4439  0B96  0CB3               	rrf	??___flmul+3,f
  4440  0B97  0CB2               	rrf	??___flmul+2,f
  4441  0B98  0CB1               	rrf	??___flmul+1,f
  4442  0B99  0CB0               	rrf	??___flmul,f
  4443  0B9A                     u3990:
  4444  0B9A  3EFF               	addlw	-1
  4445  0B9B  1D03               	skipz
  4446  0B9C  2B95               	goto	u3995
  4447  0B9D  0830               	movf	??___flmul,w
  4448  0B9E  07BC               	addwf	___flmul@prod,f
  4449  0B9F  0831               	movf	??___flmul+1,w
  4450  0BA0  1103               	clrz
  4451  0BA1  1803               	skipnc
  4452  0BA2  3E01               	addlw	1
  4453  0BA3  1903               	skipnz
  4454  0BA4  2BA6               	goto	u4001
  4455  0BA5  07BD               	addwf	___flmul@prod+1,f
  4456  0BA6                     u4001:
  4457  0BA6  0832               	movf	??___flmul+2,w
  4458  0BA7  1103               	clrz
  4459  0BA8  1803               	skipnc
  4460  0BA9  3E01               	addlw	1
  4461  0BAA  1903               	skipnz
  4462  0BAB  2BAD               	goto	u4002
  4463  0BAC  07BE               	addwf	___flmul@prod+2,f
  4464  0BAD                     u4002:
  4465  0BAD  0833               	movf	??___flmul+3,w
  4466  0BAE  1103               	clrz
  4467  0BAF  1803               	skipnc
  4468  0BB0  3E01               	addlw	1
  4469  0BB1  1903               	skipnz
  4470  0BB2  2BB4               	goto	u4003
  4471  0BB3  07BF               	addwf	___flmul@prod+3,f
  4472  0BB4                     u4003:
  4473  0BB4                     l2746:
  4474  0BB4  3008               	movlw	8
  4475  0BB5  00B0               	movwf	??___flmul
  4476  0BB6                     u4015:
  4477  0BB6  1003               	clrc
  4478  0BB7  0DB6               	rlf	___flmul@grs,f
  4479  0BB8  0DB7               	rlf	___flmul@grs+1,f
  4480  0BB9  0DB8               	rlf	___flmul@grs+2,f
  4481  0BBA  0DB9               	rlf	___flmul@grs+3,f
  4482  0BBB  0BB0               	decfsz	??___flmul,f
  4483  0BBC  2BB6               	goto	u4015
  4484  0BBD                     l2748:
  4485  0BBD  083B               	movf	___flmul@bexp,w
  4486  0BBE  073A               	addwf	___flmul@aexp,w
  4487  0BBF  00B0               	movwf	??___flmul
  4488  0BC0  01B1               	clrf	??___flmul+1
  4489  0BC1  0DB1               	rlf	??___flmul+1,f
  4490  0BC2  0830               	movf	??___flmul,w
  4491  0BC3  3E82               	addlw	130
  4492  0BC4  00C0               	movwf	___flmul@temp
  4493  0BC5  0831               	movf	??___flmul+1,w
  4494  0BC6  1803               	skipnc
  4495  0BC7  3E01               	addlw	1
  4496  0BC8  3EFF               	addlw	255
  4497  0BC9  00C1               	movwf	___flmul@temp+1
  4498  0BCA  2BE8               	goto	l2760
  4499  0BCB                     l2750:
  4500  0BCB  3001               	movlw	1
  4501  0BCC  00B0               	movwf	??___flmul
  4502  0BCD                     u4025:
  4503  0BCD  1003               	clrc
  4504  0BCE  0DBC               	rlf	___flmul@prod,f
  4505  0BCF  0DBD               	rlf	___flmul@prod+1,f
  4506  0BD0  0DBE               	rlf	___flmul@prod+2,f
  4507  0BD1  0DBF               	rlf	___flmul@prod+3,f
  4508  0BD2  0BB0               	decfsz	??___flmul,f
  4509  0BD3  2BCD               	goto	u4025
  4510  0BD4                     l2752:
  4511  0BD4  1FB9               	btfss	___flmul@grs+3,7
  4512  0BD5  2BD7               	goto	u4031
  4513  0BD6  2BD8               	goto	u4030
  4514  0BD7                     u4031:
  4515  0BD7  2BD9               	goto	l2756
  4516  0BD8                     u4030:
  4517  0BD8                     l2754:
  4518  0BD8  143C               	bsf	___flmul@prod,0
  4519  0BD9                     l2756:
  4520  0BD9  3001               	movlw	1
  4521  0BDA  00B0               	movwf	??___flmul
  4522  0BDB                     u4045:
  4523  0BDB  1003               	clrc
  4524  0BDC  0DB6               	rlf	___flmul@grs,f
  4525  0BDD  0DB7               	rlf	___flmul@grs+1,f
  4526  0BDE  0DB8               	rlf	___flmul@grs+2,f
  4527  0BDF  0DB9               	rlf	___flmul@grs+3,f
  4528  0BE0  0BB0               	decfsz	??___flmul,f
  4529  0BE1  2BDB               	goto	u4045
  4530  0BE2                     l2758:
  4531  0BE2  30FF               	movlw	255
  4532  0BE3  07C0               	addwf	___flmul@temp,f
  4533  0BE4  1803               	skipnc
  4534  0BE5  0AC1               	incf	___flmul@temp+1,f
  4535  0BE6  30FF               	movlw	255
  4536  0BE7  07C1               	addwf	___flmul@temp+1,f
  4537  0BE8                     l2760:
  4538  0BE8  1FBE               	btfss	___flmul@prod+2,7
  4539  0BE9  2BEB               	goto	u4051
  4540  0BEA  2BEC               	goto	u4050
  4541  0BEB                     u4051:
  4542  0BEB  2BCB               	goto	l2750
  4543  0BEC                     u4050:
  4544  0BEC                     l2762:
  4545  0BEC  01BA               	clrf	___flmul@aexp
  4546  0BED                     l2764:
  4547  0BED  1FB9               	btfss	___flmul@grs+3,7
  4548  0BEE  2BF0               	goto	u4061
  4549  0BEF  2BF1               	goto	u4060
  4550  0BF0                     u4061:
  4551  0BF0  2C0D               	goto	l2772
  4552  0BF1                     u4060:
  4553  0BF1                     l2766:
  4554  0BF1  30FF               	movlw	255
  4555  0BF2  0536               	andwf	___flmul@grs,w
  4556  0BF3  00B0               	movwf	??___flmul
  4557  0BF4  30FF               	movlw	255
  4558  0BF5  0537               	andwf	___flmul@grs+1,w
  4559  0BF6  00B1               	movwf	??___flmul+1
  4560  0BF7  30FF               	movlw	255
  4561  0BF8  0538               	andwf	___flmul@grs+2,w
  4562  0BF9  00B2               	movwf	??___flmul+2
  4563  0BFA  307F               	movlw	127
  4564  0BFB  0539               	andwf	___flmul@grs+3,w
  4565  0BFC  00B3               	movwf	??___flmul+3
  4566  0BFD  0833               	movf	??___flmul+3,w
  4567  0BFE  0432               	iorwf	??___flmul+2,w
  4568  0BFF  0431               	iorwf	??___flmul+1,w
  4569  0C00  0430               	iorwf	??___flmul,w
  4570  0C01  1903               	skipnz
  4571  0C02  2C04               	goto	u4071
  4572  0C03  2C05               	goto	u4070
  4573  0C04                     u4071:
  4574  0C04  2C08               	goto	l824
  4575  0C05                     u4070:
  4576  0C05                     l2768:
  4577  0C05  01BA               	clrf	___flmul@aexp
  4578  0C06  0ABA               	incf	___flmul@aexp,f
  4579  0C07  2C0D               	goto	l2772
  4580  0C08                     l824:
  4581  0C08  1C3C               	btfss	___flmul@prod,0
  4582  0C09  2C0B               	goto	u4081
  4583  0C0A  2C0C               	goto	u4080
  4584  0C0B                     u4081:
  4585  0C0B  2C0D               	goto	l2772
  4586  0C0C                     u4080:
  4587  0C0C  2C05               	goto	l2768
  4588  0C0D                     l2772:
  4589  0C0D  083A               	movf	___flmul@aexp,w
  4590  0C0E  1903               	btfsc	3,2
  4591  0C0F  2C11               	goto	u4091
  4592  0C10  2C12               	goto	u4090
  4593  0C11                     u4091:
  4594  0C11  2C43               	goto	l2782
  4595  0C12                     u4090:
  4596  0C12                     l2774:
  4597  0C12  3001               	movlw	1
  4598  0C13  07BC               	addwf	___flmul@prod,f
  4599  0C14  3000               	movlw	0
  4600  0C15  1803               	skipnc
  4601  0C16  3001               	movlw	1
  4602  0C17  07BD               	addwf	___flmul@prod+1,f
  4603  0C18  3000               	movlw	0
  4604  0C19  1803               	skipnc
  4605  0C1A  3001               	movlw	1
  4606  0C1B  07BE               	addwf	___flmul@prod+2,f
  4607  0C1C  3000               	movlw	0
  4608  0C1D  1803               	skipnc
  4609  0C1E  3001               	movlw	1
  4610  0C1F  07BF               	addwf	___flmul@prod+3,f
  4611  0C20                     l2776:
  4612  0C20  1C3F               	btfss	___flmul@prod+3,0
  4613  0C21  2C23               	goto	u4101
  4614  0C22  2C24               	goto	u4100
  4615  0C23                     u4101:
  4616  0C23  2C43               	goto	l2782
  4617  0C24                     u4100:
  4618  0C24                     l2778:
  4619  0C24  083C               	movf	___flmul@prod,w
  4620  0C25  00B0               	movwf	??___flmul
  4621  0C26  083D               	movf	___flmul@prod+1,w
  4622  0C27  00B1               	movwf	??___flmul+1
  4623  0C28  083E               	movf	___flmul@prod+2,w
  4624  0C29  00B2               	movwf	??___flmul+2
  4625  0C2A  083F               	movf	___flmul@prod+3,w
  4626  0C2B  00B3               	movwf	??___flmul+3
  4627  0C2C  3001               	movlw	1
  4628  0C2D  00B4               	movwf	??___flmul+4
  4629  0C2E                     u4115:
  4630  0C2E  0D33               	rlf	??___flmul+3,w
  4631  0C2F  0CB3               	rrf	??___flmul+3,f
  4632  0C30  0CB2               	rrf	??___flmul+2,f
  4633  0C31  0CB1               	rrf	??___flmul+1,f
  4634  0C32  0CB0               	rrf	??___flmul,f
  4635  0C33                     u4110:
  4636  0C33  0BB4               	decfsz	??___flmul+4,f
  4637  0C34  2C2E               	goto	u4115
  4638  0C35  0833               	movf	??___flmul+3,w
  4639  0C36  00BF               	movwf	___flmul@prod+3
  4640  0C37  0832               	movf	??___flmul+2,w
  4641  0C38  00BE               	movwf	___flmul@prod+2
  4642  0C39  0831               	movf	??___flmul+1,w
  4643  0C3A  00BD               	movwf	___flmul@prod+1
  4644  0C3B  0830               	movf	??___flmul,w
  4645  0C3C  00BC               	movwf	___flmul@prod
  4646  0C3D                     l2780:
  4647  0C3D  3001               	movlw	1
  4648  0C3E  07C0               	addwf	___flmul@temp,f
  4649  0C3F  1803               	skipnc
  4650  0C40  0AC1               	incf	___flmul@temp+1,f
  4651  0C41  3000               	movlw	0
  4652  0C42  07C1               	addwf	___flmul@temp+1,f
  4653  0C43                     l2782:
  4654  0C43  0841               	movf	___flmul@temp+1,w
  4655  0C44  3A80               	xorlw	128
  4656  0C45  00FF               	movwf	btemp+1
  4657  0C46  3080               	movlw	128
  4658  0C47  027F               	subwf	btemp+1,w
  4659  0C48  1D03               	skipz
  4660  0C49  2C4C               	goto	u4125
  4661  0C4A  30FF               	movlw	255
  4662  0C4B  0240               	subwf	___flmul@temp,w
  4663  0C4C                     u4125:
  4664  0C4C  1C03               	skipc
  4665  0C4D  2C4F               	goto	u4121
  4666  0C4E  2C50               	goto	u4120
  4667  0C4F                     u4121:
  4668  0C4F  2C5B               	goto	l2786
  4669  0C50                     u4120:
  4670  0C50                     l2784:
  4671  0C50  307F               	movlw	127
  4672  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  4674  0C53  00BF               	movwf	___flmul@prod+3
  4675  0C54  3080               	movlw	128
  4676  0C55  00BE               	movwf	___flmul@prod+2
  4677  0C56  3000               	movlw	0
  4678  0C57  00BD               	movwf	___flmul@prod+1
  4679  0C58  3000               	movlw	0
  4680  0C59  00BC               	movwf	___flmul@prod
  4681  0C5A  2C90               	goto	l830
  4682  0C5B                     l2786:
  4683  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  4684  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  4685  0C5D  0841               	movf	___flmul@temp+1,w
  4686  0C5E  3A80               	xorlw	128
  4687  0C5F  00FF               	movwf	btemp+1
  4688  0C60  3080               	movlw	128
  4689  0C61  027F               	subwf	btemp+1,w
  4690  0C62  1D03               	skipz
  4691  0C63  2C66               	goto	u4135
  4692  0C64  3001               	movlw	1
  4693  0C65  0240               	subwf	___flmul@temp,w
  4694  0C66                     u4135:
  4695  0C66  1803               	skipnc
  4696  0C67  2C69               	goto	u4131
  4697  0C68  2C6A               	goto	u4130
  4698  0C69                     u4131:
  4699  0C69  2C76               	goto	l2792
  4700  0C6A                     u4130:
  4701  0C6A                     l2788:
  4702  0C6A  3000               	movlw	0
  4703  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  4704  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  4705  0C6D  00BF               	movwf	___flmul@prod+3
  4706  0C6E  3000               	movlw	0
  4707  0C6F  00BE               	movwf	___flmul@prod+2
  4708  0C70  3000               	movlw	0
  4709  0C71  00BD               	movwf	___flmul@prod+1
  4710  0C72  3000               	movlw	0
  4711  0C73  00BC               	movwf	___flmul@prod
  4712  0C74                     l2790:
  4713  0C74  01B5               	clrf	___flmul@sign
  4714  0C75  2C90               	goto	l830
  4715  0C76                     l2792:
  4716  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  4717  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  4718  0C78  0840               	movf	___flmul@temp,w
  4719  0C79  00B0               	movwf	??___flmul
  4720  0C7A  0830               	movf	??___flmul,w
  4721  0C7B  00BB               	movwf	___flmul@bexp
  4722  0C7C  30FF               	movlw	255
  4723  0C7D  05BC               	andwf	___flmul@prod,f
  4724  0C7E  30FF               	movlw	255
  4725  0C7F  05BD               	andwf	___flmul@prod+1,f
  4726  0C80  307F               	movlw	127
  4727  0C81  05BE               	andwf	___flmul@prod+2,f
  4728  0C82  3000               	movlw	0
  4729  0C83  05BF               	andwf	___flmul@prod+3,f
  4730  0C84                     l2794:
  4731  0C84  1C3B               	btfss	___flmul@bexp,0
  4732  0C85  2C87               	goto	u4141
  4733  0C86  2C88               	goto	u4140
  4734  0C87                     u4141:
  4735  0C87  2C89               	goto	l2798
  4736  0C88                     u4140:
  4737  0C88                     l2796:
  4738  0C88  17BE               	bsf	___flmul@prod+2,7
  4739  0C89                     l2798:
  4740  0C89  083B               	movf	___flmul@bexp,w
  4741  0C8A  00B0               	movwf	??___flmul
  4742  0C8B  1003               	clrc
  4743  0C8C  0C30               	rrf	??___flmul,w
  4744  0C8D  00B1               	movwf	??___flmul+1
  4745  0C8E  0831               	movf	??___flmul+1,w
  4746  0C8F  00BF               	movwf	___flmul@prod+3
  4747  0C90                     l830:
  4748  0C90  0835               	movf	___flmul@sign,w
  4749  0C91  00B0               	movwf	??___flmul
  4750  0C92  0830               	movf	??___flmul,w
  4751  0C93  04BF               	iorwf	___flmul@prod+3,f
  4752  0C94                     l2800:
  4753  0C94  083F               	movf	___flmul@prod+3,w
  4754  0C95  00AB               	movwf	?___flmul+3
  4755  0C96  083E               	movf	___flmul@prod+2,w
  4756  0C97  00AA               	movwf	?___flmul+2
  4757  0C98  083D               	movf	___flmul@prod+1,w
  4758  0C99  00A9               	movwf	?___flmul+1
  4759  0C9A  083C               	movf	___flmul@prod,w
  4760  0C9B  00A8               	movwf	?___flmul
  4761  0C9C                     l818:
  4762  0C9C  0008               	return
  4763  0C9D                     __end_of___flmul:
  4764                           
  4765                           	psect	text10
  4766  1B60                     __ptext10:	
  4767 ;; *************** function __Umul8_16 *****************
  4768 ;; Defined at:
  4769 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  multiplier      1    wreg     unsigned char 
  4772 ;;  multiplicand    1    2[COMMON] unsigned char 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  multiplier      1   10[COMMON] unsigned char 
  4775 ;;  word_mpld       2    8[COMMON] unsigned int 
  4776 ;;  product         2    6[COMMON] unsigned int 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  2    2[COMMON] unsigned int 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4786 ;;      Params:         2       0       0       0       0
  4787 ;;      Locals:         5       0       0       0       0
  4788 ;;      Temps:          2       0       0       0       0
  4789 ;;      Totals:         9       0       0       0       0
  4790 ;;Total ram usage:        9 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:    1
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		___flmul
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function __Umul8_16
  4802  1B60                     __Umul8_16:
  4803                           
  4804                           ;incstack = 0
  4805                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4806                           ;__Umul8_16@multiplier stored from wreg
  4807  1B60  00FA               	movwf	__Umul8_16@multiplier
  4808  1B61                     l2302:
  4809  1B61  01F6               	clrf	__Umul8_16@product
  4810  1B62  01F7               	clrf	__Umul8_16@product+1
  4811  1B63                     l2304:
  4812  1B63  0872               	movf	__Umul8_16@multiplicand,w
  4813  1B64  00F4               	movwf	??__Umul8_16
  4814  1B65  01F5               	clrf	??__Umul8_16+1
  4815  1B66  0874               	movf	??__Umul8_16,w
  4816  1B67  00F8               	movwf	__Umul8_16@word_mpld
  4817  1B68  0875               	movf	??__Umul8_16+1,w
  4818  1B69  00F9               	movwf	__Umul8_16@word_mpld+1
  4819  1B6A                     l2306:
  4820  1B6A  1C7A               	btfss	__Umul8_16@multiplier,0
  4821  1B6B  2B6D               	goto	u2901
  4822  1B6C  2B6E               	goto	u2900
  4823  1B6D                     u2901:
  4824  1B6D  2B74               	goto	l837
  4825  1B6E                     u2900:
  4826  1B6E                     l2308:
  4827  1B6E  0878               	movf	__Umul8_16@word_mpld,w
  4828  1B6F  07F6               	addwf	__Umul8_16@product,f
  4829  1B70  1803               	skipnc
  4830  1B71  0AF7               	incf	__Umul8_16@product+1,f
  4831  1B72  0879               	movf	__Umul8_16@word_mpld+1,w
  4832  1B73  07F7               	addwf	__Umul8_16@product+1,f
  4833  1B74                     l837:
  4834  1B74  3001               	movlw	1
  4835  1B75                     u2915:
  4836  1B75  1003               	clrc
  4837  1B76  0DF8               	rlf	__Umul8_16@word_mpld,f
  4838  1B77  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  4839  1B78  3EFF               	addlw	-1
  4840  1B79  1D03               	skipz
  4841  1B7A  2B75               	goto	u2915
  4842  1B7B  1003               	clrc
  4843  1B7C  0CFA               	rrf	__Umul8_16@multiplier,f
  4844  1B7D                     l2310:
  4845  1B7D  087A               	movf	__Umul8_16@multiplier,w
  4846  1B7E  1D03               	btfss	3,2
  4847  1B7F  2B81               	goto	u2921
  4848  1B80  2B82               	goto	u2920
  4849  1B81                     u2921:
  4850  1B81  2B6A               	goto	l2306
  4851  1B82                     u2920:
  4852  1B82                     l2312:
  4853  1B82  0877               	movf	__Umul8_16@product+1,w
  4854  1B83  00F3               	movwf	?__Umul8_16+1
  4855  1B84  0876               	movf	__Umul8_16@product,w
  4856  1B85  00F2               	movwf	?__Umul8_16
  4857  1B86                     l839:
  4858  1B86  0008               	return
  4859  1B87                     __end_of__Umul8_16:
  4860                           
  4861                           	psect	text11
  4862  1020                     __ptext11:	
  4863 ;; *************** function __tdiv_to_l_ *****************
  4864 ;; Defined at:
  4865 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  f1              4    2[COMMON] float 
  4868 ;;  f2              4    6[COMMON] float 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  quot            4    4[BANK0 ] unsigned long 
  4871 ;;  exp1            1    9[BANK0 ] unsigned char 
  4872 ;;  cntr            1    8[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  4    2[COMMON] unsigned long 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4882 ;;      Params:         8       0       0       0       0
  4883 ;;      Locals:         0       6       0       0       0
  4884 ;;      Temps:          0       4       0       0       0
  4885 ;;      Totals:         8      10       0       0       0
  4886 ;;Total ram usage:       18 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    1
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_sprintf
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function __tdiv_to_l_
  4898  1020                     __tdiv_to_l_:
  4899  1020                     l2894:	
  4900                           ;incstack = 0
  4901                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4902                           
  4903  1020  0872               	movf	__tdiv_to_l_@f1,w
  4904  1021  1283               	bcf	3,5	;RP0=0, select bank0
  4905  1022  1303               	bcf	3,6	;RP1=0, select bank0
  4906  1023  00A0               	movwf	??__tdiv_to_l_
  4907  1024  0873               	movf	__tdiv_to_l_@f1+1,w
  4908  1025  00A1               	movwf	??__tdiv_to_l_+1
  4909  1026  0874               	movf	__tdiv_to_l_@f1+2,w
  4910  1027  00A2               	movwf	??__tdiv_to_l_+2
  4911  1028  1003               	clrc
  4912  1029  0D21               	rlf	??__tdiv_to_l_+1,w
  4913  102A  0D22               	rlf	??__tdiv_to_l_+2,w
  4914  102B  00A3               	movwf	??__tdiv_to_l_+3
  4915  102C  0823               	movf	??__tdiv_to_l_+3,w
  4916  102D  00A9               	movwf	__tdiv_to_l_@exp1
  4917  102E  0829               	movf	__tdiv_to_l_@exp1,w
  4918  102F  1D03               	btfss	3,2
  4919  1030  2832               	goto	u4461
  4920  1031  2833               	goto	u4460
  4921  1032                     u4461:
  4922  1032  283C               	goto	l2900
  4923  1033                     u4460:
  4924  1033                     l2896:
  4925  1033  3000               	movlw	0
  4926  1034  00F5               	movwf	?__tdiv_to_l_+3
  4927  1035  3000               	movlw	0
  4928  1036  00F4               	movwf	?__tdiv_to_l_+2
  4929  1037  3000               	movlw	0
  4930  1038  00F3               	movwf	?__tdiv_to_l_+1
  4931  1039  3000               	movlw	0
  4932  103A  00F2               	movwf	?__tdiv_to_l_
  4933  103B  28DC               	goto	l612
  4934  103C                     l2900:
  4935  103C  0876               	movf	__tdiv_to_l_@f2,w
  4936  103D  00A0               	movwf	??__tdiv_to_l_
  4937  103E  0877               	movf	__tdiv_to_l_@f2+1,w
  4938  103F  00A1               	movwf	??__tdiv_to_l_+1
  4939  1040  0878               	movf	__tdiv_to_l_@f2+2,w
  4940  1041  00A2               	movwf	??__tdiv_to_l_+2
  4941  1042  1003               	clrc
  4942  1043  0D21               	rlf	??__tdiv_to_l_+1,w
  4943  1044  0D22               	rlf	??__tdiv_to_l_+2,w
  4944  1045  00A3               	movwf	??__tdiv_to_l_+3
  4945  1046  0823               	movf	??__tdiv_to_l_+3,w
  4946  1047  00A8               	movwf	__tdiv_to_l_@cntr
  4947  1048  0828               	movf	__tdiv_to_l_@cntr,w
  4948  1049  1D03               	btfss	3,2
  4949  104A  284C               	goto	u4471
  4950  104B  284D               	goto	u4470
  4951  104C                     u4471:
  4952  104C  284E               	goto	l613
  4953  104D                     u4470:
  4954  104D  2833               	goto	l2896
  4955  104E                     l613:
  4956  104E  17F3               	bsf	__tdiv_to_l_@f1+1,7
  4957  104F                     l2906:
  4958  104F  30FF               	movlw	255
  4959  1050  05F2               	andwf	__tdiv_to_l_@f1,f
  4960  1051  30FF               	movlw	255
  4961  1052  05F3               	andwf	__tdiv_to_l_@f1+1,f
  4962  1053  3000               	movlw	0
  4963  1054  05F4               	andwf	__tdiv_to_l_@f1+2,f
  4964  1055                     l2908:
  4965  1055  17F7               	bsf	__tdiv_to_l_@f2+1,7
  4966  1056  30FF               	movlw	255
  4967  1057  05F6               	andwf	__tdiv_to_l_@f2,f
  4968  1058  30FF               	movlw	255
  4969  1059  05F7               	andwf	__tdiv_to_l_@f2+1,f
  4970  105A  3000               	movlw	0
  4971  105B  05F8               	andwf	__tdiv_to_l_@f2+2,f
  4972  105C  3000               	movlw	0
  4973  105D  00A7               	movwf	__tdiv_to_l_@quot+3
  4974  105E  3000               	movlw	0
  4975  105F  00A6               	movwf	__tdiv_to_l_@quot+2
  4976  1060  3000               	movlw	0
  4977  1061  00A5               	movwf	__tdiv_to_l_@quot+1
  4978  1062  3000               	movlw	0
  4979  1063  00A4               	movwf	__tdiv_to_l_@quot
  4980  1064                     l2910:
  4981  1064  307F               	movlw	127
  4982  1065  02A9               	subwf	__tdiv_to_l_@exp1,f
  4983  1066                     l2912:
  4984  1066  3098               	movlw	152
  4985  1067  0728               	addwf	__tdiv_to_l_@cntr,w
  4986  1068  00A0               	movwf	??__tdiv_to_l_
  4987  1069  0820               	movf	??__tdiv_to_l_,w
  4988  106A  02A9               	subwf	__tdiv_to_l_@exp1,f
  4989  106B  3018               	movlw	24
  4990  106C  00A0               	movwf	??__tdiv_to_l_
  4991  106D  0820               	movf	??__tdiv_to_l_,w
  4992  106E  00A8               	movwf	__tdiv_to_l_@cntr
  4993  106F                     l2914:
  4994  106F  3001               	movlw	1
  4995  1070  00A0               	movwf	??__tdiv_to_l_
  4996  1071                     u4485:
  4997  1071  1003               	clrc
  4998  1072  0DA4               	rlf	__tdiv_to_l_@quot,f
  4999  1073  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5000  1074  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5001  1075  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5002  1076  0BA0               	decfsz	??__tdiv_to_l_,f
  5003  1077  2871               	goto	u4485
  5004  1078                     l2916:
  5005  1078  0878               	movf	__tdiv_to_l_@f2+2,w
  5006  1079  0274               	subwf	__tdiv_to_l_@f1+2,w
  5007  107A  1D03               	skipz
  5008  107B  2882               	goto	u4495
  5009  107C  0877               	movf	__tdiv_to_l_@f2+1,w
  5010  107D  0273               	subwf	__tdiv_to_l_@f1+1,w
  5011  107E  1D03               	skipz
  5012  107F  2882               	goto	u4495
  5013  1080  0876               	movf	__tdiv_to_l_@f2,w
  5014  1081  0272               	subwf	__tdiv_to_l_@f1,w
  5015  1082                     u4495:
  5016  1082  1C03               	skipc
  5017  1083  2885               	goto	u4491
  5018  1084  2886               	goto	u4490
  5019  1085                     u4491:
  5020  1085  2891               	goto	l2922
  5021  1086                     u4490:
  5022  1086                     l2918:
  5023  1086  0876               	movf	__tdiv_to_l_@f2,w
  5024  1087  02F2               	subwf	__tdiv_to_l_@f1,f
  5025  1088  0877               	movf	__tdiv_to_l_@f2+1,w
  5026  1089  1C03               	skipc
  5027  108A  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5028  108B  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5029  108C  0878               	movf	__tdiv_to_l_@f2+2,w
  5030  108D  1C03               	skipc
  5031  108E  0A78               	incf	__tdiv_to_l_@f2+2,w
  5032  108F  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5033  1090                     l2920:
  5034  1090  1424               	bsf	__tdiv_to_l_@quot,0
  5035  1091                     l2922:
  5036  1091  3001               	movlw	1
  5037  1092                     u4505:
  5038  1092  1003               	clrc
  5039  1093  0DF2               	rlf	__tdiv_to_l_@f1,f
  5040  1094  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5041  1095  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5042  1096  3EFF               	addlw	-1
  5043  1097  1D03               	skipz
  5044  1098  2892               	goto	u4505
  5045  1099                     l2924:
  5046  1099  3001               	movlw	1
  5047  109A  02A8               	subwf	__tdiv_to_l_@cntr,f
  5048  109B  1D03               	btfss	3,2
  5049  109C  289E               	goto	u4511
  5050  109D  289F               	goto	u4510
  5051  109E                     u4511:
  5052  109E  286F               	goto	l2914
  5053  109F                     u4510:
  5054  109F                     l616:
  5055  109F  1FA9               	btfss	__tdiv_to_l_@exp1,7
  5056  10A0  28A2               	goto	u4521
  5057  10A1  28A3               	goto	u4520
  5058  10A2                     u4521:
  5059  10A2  28BD               	goto	l2934
  5060  10A3                     u4520:
  5061  10A3                     l2926:
  5062  10A3  0829               	movf	__tdiv_to_l_@exp1,w
  5063  10A4  3A80               	xorlw	128
  5064  10A5  3E97               	addlw	151
  5065  10A6  1803               	skipnc
  5066  10A7  28A9               	goto	u4531
  5067  10A8  28AA               	goto	u4530
  5068  10A9                     u4531:
  5069  10A9  28AB               	goto	l2932
  5070  10AA                     u4530:
  5071  10AA  2833               	goto	l2896
  5072  10AB                     l2932:
  5073  10AB  3001               	movlw	1
  5074  10AC                     u4545:
  5075  10AC  1003               	clrc
  5076  10AD  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  5077  10AE  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  5078  10AF  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  5079  10B0  0CA4               	rrf	__tdiv_to_l_@quot,f
  5080  10B1  3EFF               	addlw	-1
  5081  10B2  1D03               	skipz
  5082  10B3  28AC               	goto	u4545
  5083  10B4  3001               	movlw	1
  5084  10B5  00A0               	movwf	??__tdiv_to_l_
  5085  10B6  0820               	movf	??__tdiv_to_l_,w
  5086  10B7  07A9               	addwf	__tdiv_to_l_@exp1,f
  5087  10B8  1D03               	btfss	3,2
  5088  10B9  28BB               	goto	u4551
  5089  10BA  28BC               	goto	u4550
  5090  10BB                     u4551:
  5091  10BB  28AB               	goto	l2932
  5092  10BC                     u4550:
  5093  10BC  28D4               	goto	l2942
  5094  10BD                     l2934:
  5095  10BD  3018               	movlw	24
  5096  10BE  0229               	subwf	__tdiv_to_l_@exp1,w
  5097  10BF  1C03               	skipc
  5098  10C0  28C2               	goto	u4561
  5099  10C1  28C3               	goto	u4560
  5100  10C2                     u4561:
  5101  10C2  28CF               	goto	l623
  5102  10C3                     u4560:
  5103  10C3  2833               	goto	l2896
  5104  10C4                     l2940:
  5105  10C4  3001               	movlw	1
  5106  10C5  00A0               	movwf	??__tdiv_to_l_
  5107  10C6                     u4575:
  5108  10C6  1003               	clrc
  5109  10C7  0DA4               	rlf	__tdiv_to_l_@quot,f
  5110  10C8  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5111  10C9  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5112  10CA  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5113  10CB  0BA0               	decfsz	??__tdiv_to_l_,f
  5114  10CC  28C6               	goto	u4575
  5115  10CD  3001               	movlw	1
  5116  10CE  02A9               	subwf	__tdiv_to_l_@exp1,f
  5117  10CF                     l623:
  5118  10CF  0829               	movf	__tdiv_to_l_@exp1,w
  5119  10D0  1D03               	btfss	3,2
  5120  10D1  28D3               	goto	u4581
  5121  10D2  28D4               	goto	u4580
  5122  10D3                     u4581:
  5123  10D3  28C4               	goto	l2940
  5124  10D4                     u4580:
  5125  10D4                     l2942:
  5126  10D4  0827               	movf	__tdiv_to_l_@quot+3,w
  5127  10D5  00F5               	movwf	?__tdiv_to_l_+3
  5128  10D6  0826               	movf	__tdiv_to_l_@quot+2,w
  5129  10D7  00F4               	movwf	?__tdiv_to_l_+2
  5130  10D8  0825               	movf	__tdiv_to_l_@quot+1,w
  5131  10D9  00F3               	movwf	?__tdiv_to_l_+1
  5132  10DA  0824               	movf	__tdiv_to_l_@quot,w
  5133  10DB  00F2               	movwf	?__tdiv_to_l_
  5134  10DC                     l612:
  5135  10DC  0008               	return
  5136  10DD                     __end_of__tdiv_to_l_:
  5137                           
  5138                           	psect	text12
  5139  10DD                     __ptext12:	
  5140 ;; *************** function __div_to_l_ *****************
  5141 ;; Defined at:
  5142 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  f1              4    2[COMMON] unsigned long 
  5145 ;;  f2              4    6[COMMON] unsigned long 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  quot            4    0[BANK0 ] unsigned long 
  5148 ;;  exp1            1    5[BANK0 ] unsigned char 
  5149 ;;  cntr            1    4[BANK0 ] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  4    2[COMMON] unsigned long 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5159 ;;      Params:         8       0       0       0       0
  5160 ;;      Locals:         0       6       0       0       0
  5161 ;;      Temps:          1       0       0       0       0
  5162 ;;      Totals:         9       6       0       0       0
  5163 ;;Total ram usage:       15 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    1
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_sprintf
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           
  5174                           ;psect for function __div_to_l_
  5175  10DD                     __div_to_l_:
  5176  10DD                     l2946:	
  5177                           ;incstack = 0
  5178                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5179                           
  5180  10DD  1003               	clrc
  5181  10DE  0D74               	rlf	__div_to_l_@f1+2,w
  5182  10DF  0D75               	rlf	__div_to_l_@f1+3,w
  5183  10E0  00FA               	movwf	??__div_to_l_
  5184  10E1  087A               	movf	??__div_to_l_,w
  5185  10E2  1283               	bcf	3,5	;RP0=0, select bank0
  5186  10E3  1303               	bcf	3,6	;RP1=0, select bank0
  5187  10E4  00A5               	movwf	__div_to_l_@exp1
  5188  10E5  0825               	movf	__div_to_l_@exp1,w
  5189  10E6  1D03               	btfss	3,2
  5190  10E7  28E9               	goto	u4591
  5191  10E8  28EA               	goto	u4590
  5192  10E9                     u4591:
  5193  10E9  28F3               	goto	l2952
  5194  10EA                     u4590:
  5195  10EA                     l2948:
  5196  10EA  3000               	movlw	0
  5197  10EB  00F5               	movwf	?__div_to_l_+3
  5198  10EC  3000               	movlw	0
  5199  10ED  00F4               	movwf	?__div_to_l_+2
  5200  10EE  3000               	movlw	0
  5201  10EF  00F3               	movwf	?__div_to_l_+1
  5202  10F0  3000               	movlw	0
  5203  10F1  00F2               	movwf	?__div_to_l_
  5204  10F2  299A               	goto	l565
  5205  10F3                     l2952:
  5206  10F3  1003               	clrc
  5207  10F4  0D78               	rlf	__div_to_l_@f2+2,w
  5208  10F5  0D79               	rlf	__div_to_l_@f2+3,w
  5209  10F6  00FA               	movwf	??__div_to_l_
  5210  10F7  087A               	movf	??__div_to_l_,w
  5211  10F8  00A4               	movwf	__div_to_l_@cntr
  5212  10F9  0824               	movf	__div_to_l_@cntr,w
  5213  10FA  1D03               	btfss	3,2
  5214  10FB  28FD               	goto	u4601
  5215  10FC  28FE               	goto	u4600
  5216  10FD                     u4601:
  5217  10FD  28FF               	goto	l566
  5218  10FE                     u4600:
  5219  10FE  28EA               	goto	l2948
  5220  10FF                     l566:
  5221  10FF  17F4               	bsf	__div_to_l_@f1+2,7
  5222  1100                     l2958:
  5223  1100  30FF               	movlw	255
  5224  1101  05F2               	andwf	__div_to_l_@f1,f
  5225  1102  30FF               	movlw	255
  5226  1103  05F3               	andwf	__div_to_l_@f1+1,f
  5227  1104  30FF               	movlw	255
  5228  1105  05F4               	andwf	__div_to_l_@f1+2,f
  5229  1106  3000               	movlw	0
  5230  1107  05F5               	andwf	__div_to_l_@f1+3,f
  5231  1108                     l2960:
  5232  1108  17F8               	bsf	__div_to_l_@f2+2,7
  5233  1109  30FF               	movlw	255
  5234  110A  05F6               	andwf	__div_to_l_@f2,f
  5235  110B  30FF               	movlw	255
  5236  110C  05F7               	andwf	__div_to_l_@f2+1,f
  5237  110D  30FF               	movlw	255
  5238  110E  05F8               	andwf	__div_to_l_@f2+2,f
  5239  110F  3000               	movlw	0
  5240  1110  05F9               	andwf	__div_to_l_@f2+3,f
  5241  1111  3000               	movlw	0
  5242  1112  00A3               	movwf	__div_to_l_@quot+3
  5243  1113  3000               	movlw	0
  5244  1114  00A2               	movwf	__div_to_l_@quot+2
  5245  1115  3000               	movlw	0
  5246  1116  00A1               	movwf	__div_to_l_@quot+1
  5247  1117  3000               	movlw	0
  5248  1118  00A0               	movwf	__div_to_l_@quot
  5249  1119                     l2962:
  5250  1119  307F               	movlw	127
  5251  111A  02A5               	subwf	__div_to_l_@exp1,f
  5252  111B                     l2964:
  5253  111B  30A0               	movlw	160
  5254  111C  0724               	addwf	__div_to_l_@cntr,w
  5255  111D  00FA               	movwf	??__div_to_l_
  5256  111E  087A               	movf	??__div_to_l_,w
  5257  111F  02A5               	subwf	__div_to_l_@exp1,f
  5258  1120  3020               	movlw	32
  5259  1121  00FA               	movwf	??__div_to_l_
  5260  1122  087A               	movf	??__div_to_l_,w
  5261  1123  00A4               	movwf	__div_to_l_@cntr
  5262  1124                     l2966:
  5263  1124  3001               	movlw	1
  5264  1125  00FA               	movwf	??__div_to_l_
  5265  1126                     u4615:
  5266  1126  1003               	clrc
  5267  1127  0DA0               	rlf	__div_to_l_@quot,f
  5268  1128  0DA1               	rlf	__div_to_l_@quot+1,f
  5269  1129  0DA2               	rlf	__div_to_l_@quot+2,f
  5270  112A  0DA3               	rlf	__div_to_l_@quot+3,f
  5271  112B  0BFA               	decfsz	??__div_to_l_,f
  5272  112C  2926               	goto	u4615
  5273  112D                     l2968:
  5274  112D  0879               	movf	__div_to_l_@f2+3,w
  5275  112E  0275               	subwf	__div_to_l_@f1+3,w
  5276  112F  1D03               	skipz
  5277  1130  293B               	goto	u4625
  5278  1131  0878               	movf	__div_to_l_@f2+2,w
  5279  1132  0274               	subwf	__div_to_l_@f1+2,w
  5280  1133  1D03               	skipz
  5281  1134  293B               	goto	u4625
  5282  1135  0877               	movf	__div_to_l_@f2+1,w
  5283  1136  0273               	subwf	__div_to_l_@f1+1,w
  5284  1137  1D03               	skipz
  5285  1138  293B               	goto	u4625
  5286  1139  0876               	movf	__div_to_l_@f2,w
  5287  113A  0272               	subwf	__div_to_l_@f1,w
  5288  113B                     u4625:
  5289  113B  1C03               	skipc
  5290  113C  293E               	goto	u4621
  5291  113D  293F               	goto	u4620
  5292  113E                     u4621:
  5293  113E  294E               	goto	l2974
  5294  113F                     u4620:
  5295  113F                     l2970:
  5296  113F  0876               	movf	__div_to_l_@f2,w
  5297  1140  02F2               	subwf	__div_to_l_@f1,f
  5298  1141  0877               	movf	__div_to_l_@f2+1,w
  5299  1142  1C03               	skipc
  5300  1143  0F77               	incfsz	__div_to_l_@f2+1,w
  5301  1144  02F3               	subwf	__div_to_l_@f1+1,f
  5302  1145  0878               	movf	__div_to_l_@f2+2,w
  5303  1146  1C03               	skipc
  5304  1147  0F78               	incfsz	__div_to_l_@f2+2,w
  5305  1148  02F4               	subwf	__div_to_l_@f1+2,f
  5306  1149  0879               	movf	__div_to_l_@f2+3,w
  5307  114A  1C03               	skipc
  5308  114B  0F79               	incfsz	__div_to_l_@f2+3,w
  5309  114C  02F5               	subwf	__div_to_l_@f1+3,f
  5310  114D                     l2972:
  5311  114D  1420               	bsf	__div_to_l_@quot,0
  5312  114E                     l2974:
  5313  114E  3001               	movlw	1
  5314  114F  00FA               	movwf	??__div_to_l_
  5315  1150                     u4635:
  5316  1150  1003               	clrc
  5317  1151  0DF2               	rlf	__div_to_l_@f1,f
  5318  1152  0DF3               	rlf	__div_to_l_@f1+1,f
  5319  1153  0DF4               	rlf	__div_to_l_@f1+2,f
  5320  1154  0DF5               	rlf	__div_to_l_@f1+3,f
  5321  1155  0BFA               	decfsz	??__div_to_l_,f
  5322  1156  2950               	goto	u4635
  5323  1157                     l2976:
  5324  1157  3001               	movlw	1
  5325  1158  02A4               	subwf	__div_to_l_@cntr,f
  5326  1159  1D03               	btfss	3,2
  5327  115A  295C               	goto	u4641
  5328  115B  295D               	goto	u4640
  5329  115C                     u4641:
  5330  115C  2924               	goto	l2966
  5331  115D                     u4640:
  5332  115D                     l569:
  5333  115D  1FA5               	btfss	__div_to_l_@exp1,7
  5334  115E  2960               	goto	u4651
  5335  115F  2961               	goto	u4650
  5336  1160                     u4651:
  5337  1160  297B               	goto	l2986
  5338  1161                     u4650:
  5339  1161                     l2978:
  5340  1161  0825               	movf	__div_to_l_@exp1,w
  5341  1162  3A80               	xorlw	128
  5342  1163  3E9F               	addlw	159
  5343  1164  1803               	skipnc
  5344  1165  2967               	goto	u4661
  5345  1166  2968               	goto	u4660
  5346  1167                     u4661:
  5347  1167  2969               	goto	l2984
  5348  1168                     u4660:
  5349  1168  28EA               	goto	l2948
  5350  1169                     l2984:
  5351  1169  3001               	movlw	1
  5352  116A                     u4675:
  5353  116A  1003               	clrc
  5354  116B  0CA3               	rrf	__div_to_l_@quot+3,f
  5355  116C  0CA2               	rrf	__div_to_l_@quot+2,f
  5356  116D  0CA1               	rrf	__div_to_l_@quot+1,f
  5357  116E  0CA0               	rrf	__div_to_l_@quot,f
  5358  116F  3EFF               	addlw	-1
  5359  1170  1D03               	skipz
  5360  1171  296A               	goto	u4675
  5361  1172  3001               	movlw	1
  5362  1173  00FA               	movwf	??__div_to_l_
  5363  1174  087A               	movf	??__div_to_l_,w
  5364  1175  07A5               	addwf	__div_to_l_@exp1,f
  5365  1176  1D03               	btfss	3,2
  5366  1177  2979               	goto	u4681
  5367  1178  297A               	goto	u4680
  5368  1179                     u4681:
  5369  1179  2969               	goto	l2984
  5370  117A                     u4680:
  5371  117A  2992               	goto	l2994
  5372  117B                     l2986:
  5373  117B  3020               	movlw	32
  5374  117C  0225               	subwf	__div_to_l_@exp1,w
  5375  117D  1C03               	skipc
  5376  117E  2980               	goto	u4691
  5377  117F  2981               	goto	u4690
  5378  1180                     u4691:
  5379  1180  298D               	goto	l576
  5380  1181                     u4690:
  5381  1181  28EA               	goto	l2948
  5382  1182                     l2992:
  5383  1182  3001               	movlw	1
  5384  1183  00FA               	movwf	??__div_to_l_
  5385  1184                     u4705:
  5386  1184  1003               	clrc
  5387  1185  0DA0               	rlf	__div_to_l_@quot,f
  5388  1186  0DA1               	rlf	__div_to_l_@quot+1,f
  5389  1187  0DA2               	rlf	__div_to_l_@quot+2,f
  5390  1188  0DA3               	rlf	__div_to_l_@quot+3,f
  5391  1189  0BFA               	decfsz	??__div_to_l_,f
  5392  118A  2984               	goto	u4705
  5393  118B  3001               	movlw	1
  5394  118C  02A5               	subwf	__div_to_l_@exp1,f
  5395  118D                     l576:
  5396  118D  0825               	movf	__div_to_l_@exp1,w
  5397  118E  1D03               	btfss	3,2
  5398  118F  2991               	goto	u4711
  5399  1190  2992               	goto	u4710
  5400  1191                     u4711:
  5401  1191  2982               	goto	l2992
  5402  1192                     u4710:
  5403  1192                     l2994:
  5404  1192  0823               	movf	__div_to_l_@quot+3,w
  5405  1193  00F5               	movwf	?__div_to_l_+3
  5406  1194  0822               	movf	__div_to_l_@quot+2,w
  5407  1195  00F4               	movwf	?__div_to_l_+2
  5408  1196  0821               	movf	__div_to_l_@quot+1,w
  5409  1197  00F3               	movwf	?__div_to_l_+1
  5410  1198  0820               	movf	__div_to_l_@quot,w
  5411  1199  00F2               	movwf	?__div_to_l_
  5412  119A                     l565:
  5413  119A  0008               	return
  5414  119B                     __end_of__div_to_l_:
  5415                           
  5416                           	psect	text13
  5417  1B3B                     __ptext13:	
  5418 ;; *************** function ___wmul *****************
  5419 ;; Defined at:
  5420 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  multiplier      2    2[COMMON] unsigned int 
  5423 ;;  multiplicand    2    4[COMMON] unsigned int 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  product         2    6[COMMON] unsigned int 
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  2    2[COMMON] unsigned int 
  5428 ;; Registers used:
  5429 ;;		wreg, status,2, status,0
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5435 ;;      Params:         4       0       0       0       0
  5436 ;;      Locals:         2       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0
  5438 ;;      Totals:         6       0       0       0       0
  5439 ;;Total ram usage:        6 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:    1
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_sprintf
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           
  5450                           ;psect for function ___wmul
  5451  1B3B                     ___wmul:
  5452  1B3B                     l2998:	
  5453                           ;incstack = 0
  5454                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5455                           
  5456  1B3B  01F6               	clrf	___wmul@product
  5457  1B3C  01F7               	clrf	___wmul@product+1
  5458  1B3D                     l3000:
  5459  1B3D  1C72               	btfss	___wmul@multiplier,0
  5460  1B3E  2B40               	goto	u4721
  5461  1B3F  2B41               	goto	u4720
  5462  1B40                     u4721:
  5463  1B40  2B47               	goto	l395
  5464  1B41                     u4720:
  5465  1B41                     l3002:
  5466  1B41  0874               	movf	___wmul@multiplicand,w
  5467  1B42  07F6               	addwf	___wmul@product,f
  5468  1B43  1803               	skipnc
  5469  1B44  0AF7               	incf	___wmul@product+1,f
  5470  1B45  0875               	movf	___wmul@multiplicand+1,w
  5471  1B46  07F7               	addwf	___wmul@product+1,f
  5472  1B47                     l395:
  5473  1B47  3001               	movlw	1
  5474  1B48                     u4735:
  5475  1B48  1003               	clrc
  5476  1B49  0DF4               	rlf	___wmul@multiplicand,f
  5477  1B4A  0DF5               	rlf	___wmul@multiplicand+1,f
  5478  1B4B  3EFF               	addlw	-1
  5479  1B4C  1D03               	skipz
  5480  1B4D  2B48               	goto	u4735
  5481  1B4E                     l3004:
  5482  1B4E  3001               	movlw	1
  5483  1B4F                     u4745:
  5484  1B4F  1003               	clrc
  5485  1B50  0CF3               	rrf	___wmul@multiplier+1,f
  5486  1B51  0CF2               	rrf	___wmul@multiplier,f
  5487  1B52  3EFF               	addlw	-1
  5488  1B53  1D03               	skipz
  5489  1B54  2B4F               	goto	u4745
  5490  1B55                     l3006:
  5491  1B55  0872               	movf	___wmul@multiplier,w
  5492  1B56  0473               	iorwf	___wmul@multiplier+1,w
  5493  1B57  1D03               	btfss	3,2
  5494  1B58  2B5A               	goto	u4751
  5495  1B59  2B5B               	goto	u4750
  5496  1B5A                     u4751:
  5497  1B5A  2B3D               	goto	l3000
  5498  1B5B                     u4750:
  5499  1B5B                     l3008:
  5500  1B5B  0877               	movf	___wmul@product+1,w
  5501  1B5C  00F3               	movwf	?___wmul+1
  5502  1B5D  0876               	movf	___wmul@product,w
  5503  1B5E  00F2               	movwf	?___wmul
  5504  1B5F                     l397:
  5505  1B5F  0008               	return
  5506  1B60                     __end_of___wmul:
  5507                           
  5508                           	psect	text14
  5509  1D0D                     __ptext14:	
  5510 ;; *************** function ___llmod *****************
  5511 ;; Defined at:
  5512 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  divisor         4    2[COMMON] unsigned long 
  5515 ;;  dividend        4    6[COMMON] unsigned long 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  counter         1    0[BANK0 ] unsigned char 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  4    2[COMMON] unsigned long 
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, status,0
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5527 ;;      Params:         8       0       0       0       0
  5528 ;;      Locals:         0       1       0       0       0
  5529 ;;      Temps:          1       0       0       0       0
  5530 ;;      Totals:         9       1       0       0       0
  5531 ;;Total ram usage:       10 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:    1
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_sprintf
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           
  5542                           ;psect for function ___llmod
  5543  1D0D                     ___llmod:
  5544  1D0D                     l3682:	
  5545                           ;incstack = 0
  5546                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5547                           
  5548  1D0D  0875               	movf	___llmod@divisor+3,w
  5549  1D0E  0474               	iorwf	___llmod@divisor+2,w
  5550  1D0F  0473               	iorwf	___llmod@divisor+1,w
  5551  1D10  0472               	iorwf	___llmod@divisor,w
  5552  1D11  1903               	skipnz
  5553  1D12  2D14               	goto	u5941
  5554  1D13  2D15               	goto	u5940
  5555  1D14                     u5941:
  5556  1D14  2D5A               	goto	l3698
  5557  1D15                     u5940:
  5558  1D15                     l3684:
  5559  1D15  1283               	bcf	3,5	;RP0=0, select bank0
  5560  1D16  1303               	bcf	3,6	;RP1=0, select bank0
  5561  1D17  01A0               	clrf	___llmod@counter
  5562  1D18  0AA0               	incf	___llmod@counter,f
  5563  1D19  2D27               	goto	l3688
  5564  1D1A                     l3686:
  5565  1D1A  3001               	movlw	1
  5566  1D1B  00FA               	movwf	??___llmod
  5567  1D1C                     u5955:
  5568  1D1C  1003               	clrc
  5569  1D1D  0DF2               	rlf	___llmod@divisor,f
  5570  1D1E  0DF3               	rlf	___llmod@divisor+1,f
  5571  1D1F  0DF4               	rlf	___llmod@divisor+2,f
  5572  1D20  0DF5               	rlf	___llmod@divisor+3,f
  5573  1D21  0BFA               	decfsz	??___llmod,f
  5574  1D22  2D1C               	goto	u5955
  5575  1D23  3001               	movlw	1
  5576  1D24  00FA               	movwf	??___llmod
  5577  1D25  087A               	movf	??___llmod,w
  5578  1D26  07A0               	addwf	___llmod@counter,f
  5579  1D27                     l3688:
  5580  1D27  1FF5               	btfss	___llmod@divisor+3,7
  5581  1D28  2D2A               	goto	u5961
  5582  1D29  2D2B               	goto	u5960
  5583  1D2A                     u5961:
  5584  1D2A  2D1A               	goto	l3686
  5585  1D2B                     u5960:
  5586  1D2B                     l3690:
  5587  1D2B  0875               	movf	___llmod@divisor+3,w
  5588  1D2C  0279               	subwf	___llmod@dividend+3,w
  5589  1D2D  1D03               	skipz
  5590  1D2E  2D39               	goto	u5975
  5591  1D2F  0874               	movf	___llmod@divisor+2,w
  5592  1D30  0278               	subwf	___llmod@dividend+2,w
  5593  1D31  1D03               	skipz
  5594  1D32  2D39               	goto	u5975
  5595  1D33  0873               	movf	___llmod@divisor+1,w
  5596  1D34  0277               	subwf	___llmod@dividend+1,w
  5597  1D35  1D03               	skipz
  5598  1D36  2D39               	goto	u5975
  5599  1D37  0872               	movf	___llmod@divisor,w
  5600  1D38  0276               	subwf	___llmod@dividend,w
  5601  1D39                     u5975:
  5602  1D39  1C03               	skipc
  5603  1D3A  2D3C               	goto	u5971
  5604  1D3B  2D3D               	goto	u5970
  5605  1D3C                     u5971:
  5606  1D3C  2D4B               	goto	l3694
  5607  1D3D                     u5970:
  5608  1D3D                     l3692:
  5609  1D3D  0872               	movf	___llmod@divisor,w
  5610  1D3E  02F6               	subwf	___llmod@dividend,f
  5611  1D3F  0873               	movf	___llmod@divisor+1,w
  5612  1D40  1C03               	skipc
  5613  1D41  0F73               	incfsz	___llmod@divisor+1,w
  5614  1D42  02F7               	subwf	___llmod@dividend+1,f
  5615  1D43  0874               	movf	___llmod@divisor+2,w
  5616  1D44  1C03               	skipc
  5617  1D45  0F74               	incfsz	___llmod@divisor+2,w
  5618  1D46  02F8               	subwf	___llmod@dividend+2,f
  5619  1D47  0875               	movf	___llmod@divisor+3,w
  5620  1D48  1C03               	skipc
  5621  1D49  0F75               	incfsz	___llmod@divisor+3,w
  5622  1D4A  02F9               	subwf	___llmod@dividend+3,f
  5623  1D4B                     l3694:
  5624  1D4B  3001               	movlw	1
  5625  1D4C                     u5985:
  5626  1D4C  1003               	clrc
  5627  1D4D  0CF5               	rrf	___llmod@divisor+3,f
  5628  1D4E  0CF4               	rrf	___llmod@divisor+2,f
  5629  1D4F  0CF3               	rrf	___llmod@divisor+1,f
  5630  1D50  0CF2               	rrf	___llmod@divisor,f
  5631  1D51  3EFF               	addlw	-1
  5632  1D52  1D03               	skipz
  5633  1D53  2D4C               	goto	u5985
  5634  1D54                     l3696:
  5635  1D54  3001               	movlw	1
  5636  1D55  02A0               	subwf	___llmod@counter,f
  5637  1D56  1D03               	btfss	3,2
  5638  1D57  2D59               	goto	u5991
  5639  1D58  2D5A               	goto	u5990
  5640  1D59                     u5991:
  5641  1D59  2D2B               	goto	l3690
  5642  1D5A                     u5990:
  5643  1D5A                     l3698:
  5644  1D5A  0879               	movf	___llmod@dividend+3,w
  5645  1D5B  00F5               	movwf	?___llmod+3
  5646  1D5C  0878               	movf	___llmod@dividend+2,w
  5647  1D5D  00F4               	movwf	?___llmod+2
  5648  1D5E  0877               	movf	___llmod@dividend+1,w
  5649  1D5F  00F3               	movwf	?___llmod+1
  5650  1D60  0876               	movf	___llmod@dividend,w
  5651  1D61  00F2               	movwf	?___llmod
  5652  1D62                     l651:
  5653  1D62  0008               	return
  5654  1D63                     __end_of___llmod:
  5655                           
  5656                           	psect	text15
  5657  1E24                     __ptext15:	
  5658 ;; *************** function ___fltol *****************
  5659 ;; Defined at:
  5660 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  f1              4   53[BANK0 ] unsigned long 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  exp1            1   63[BANK0 ] unsigned char 
  5665 ;;  sign1           1   62[BANK0 ] unsigned char 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  4   53[BANK0 ] long 
  5668 ;; Registers used:
  5669 ;;		wreg, status,2, status,0
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5675 ;;      Params:         0       4       0       0       0
  5676 ;;      Locals:         0       2       0       0       0
  5677 ;;      Temps:          0       5       0       0       0
  5678 ;;      Totals:         0      11       0       0       0
  5679 ;;Total ram usage:       11 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:    1
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_sprintf
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           
  5690                           ;psect for function ___fltol
  5691  1E24                     ___fltol:
  5692  1E24                     l3052:	
  5693                           ;incstack = 0
  5694                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5695                           
  5696  1E24  1003               	clrc
  5697  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  5698  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  5699  1E27  0D57               	rlf	___fltol@f1+2,w
  5700  1E28  0D58               	rlf	___fltol@f1+3,w
  5701  1E29  00D9               	movwf	??___fltol
  5702  1E2A  0859               	movf	??___fltol,w
  5703  1E2B  00DF               	movwf	___fltol@exp1
  5704  1E2C  085F               	movf	___fltol@exp1,w
  5705  1E2D  1D03               	btfss	3,2
  5706  1E2E  2E30               	goto	u4871
  5707  1E2F  2E31               	goto	u4870
  5708  1E30                     u4871:
  5709  1E30  2E3A               	goto	l3058
  5710  1E31                     u4870:
  5711  1E31                     l3054:
  5712  1E31  3000               	movlw	0
  5713  1E32  00D8               	movwf	?___fltol+3
  5714  1E33  3000               	movlw	0
  5715  1E34  00D7               	movwf	?___fltol+2
  5716  1E35  3000               	movlw	0
  5717  1E36  00D6               	movwf	?___fltol+1
  5718  1E37  3000               	movlw	0
  5719  1E38  00D5               	movwf	?___fltol
  5720  1E39  2E9F               	goto	l598
  5721  1E3A                     l3058:
  5722  1E3A  0855               	movf	___fltol@f1,w
  5723  1E3B  00D9               	movwf	??___fltol
  5724  1E3C  0856               	movf	___fltol@f1+1,w
  5725  1E3D  00DA               	movwf	??___fltol+1
  5726  1E3E  0857               	movf	___fltol@f1+2,w
  5727  1E3F  00DB               	movwf	??___fltol+2
  5728  1E40  0858               	movf	___fltol@f1+3,w
  5729  1E41  00DC               	movwf	??___fltol+3
  5730  1E42  301F               	movlw	31
  5731  1E43                     u4885:
  5732  1E43  1003               	clrc
  5733  1E44  0CDC               	rrf	??___fltol+3,f
  5734  1E45  0CDB               	rrf	??___fltol+2,f
  5735  1E46  0CDA               	rrf	??___fltol+1,f
  5736  1E47  0CD9               	rrf	??___fltol,f
  5737  1E48                     u4880:
  5738  1E48  3EFF               	addlw	-1
  5739  1E49  1D03               	skipz
  5740  1E4A  2E43               	goto	u4885
  5741  1E4B  0859               	movf	??___fltol,w
  5742  1E4C  00DD               	movwf	??___fltol+4
  5743  1E4D  085D               	movf	??___fltol+4,w
  5744  1E4E  00DE               	movwf	___fltol@sign1
  5745  1E4F                     l3060:
  5746  1E4F  17D7               	bsf	___fltol@f1+2,7
  5747  1E50                     l3062:
  5748  1E50  30FF               	movlw	255
  5749  1E51  05D5               	andwf	___fltol@f1,f
  5750  1E52  30FF               	movlw	255
  5751  1E53  05D6               	andwf	___fltol@f1+1,f
  5752  1E54  30FF               	movlw	255
  5753  1E55  05D7               	andwf	___fltol@f1+2,f
  5754  1E56  3000               	movlw	0
  5755  1E57  05D8               	andwf	___fltol@f1+3,f
  5756  1E58                     l3064:
  5757  1E58  3096               	movlw	150
  5758  1E59  02DF               	subwf	___fltol@exp1,f
  5759  1E5A                     l3066:
  5760  1E5A  1FDF               	btfss	___fltol@exp1,7
  5761  1E5B  2E5D               	goto	u4891
  5762  1E5C  2E5E               	goto	u4890
  5763  1E5D                     u4891:
  5764  1E5D  2E78               	goto	l3076
  5765  1E5E                     u4890:
  5766  1E5E                     l3068:
  5767  1E5E  085F               	movf	___fltol@exp1,w
  5768  1E5F  3A80               	xorlw	128
  5769  1E60  3E97               	addlw	151
  5770  1E61  1803               	skipnc
  5771  1E62  2E64               	goto	u4901
  5772  1E63  2E65               	goto	u4900
  5773  1E64                     u4901:
  5774  1E64  2E66               	goto	l3074
  5775  1E65                     u4900:
  5776  1E65  2E31               	goto	l3054
  5777  1E66                     l3074:
  5778  1E66  3001               	movlw	1
  5779  1E67                     u4915:
  5780  1E67  1003               	clrc
  5781  1E68  0CD8               	rrf	___fltol@f1+3,f
  5782  1E69  0CD7               	rrf	___fltol@f1+2,f
  5783  1E6A  0CD6               	rrf	___fltol@f1+1,f
  5784  1E6B  0CD5               	rrf	___fltol@f1,f
  5785  1E6C  3EFF               	addlw	-1
  5786  1E6D  1D03               	skipz
  5787  1E6E  2E67               	goto	u4915
  5788  1E6F  3001               	movlw	1
  5789  1E70  00D9               	movwf	??___fltol
  5790  1E71  0859               	movf	??___fltol,w
  5791  1E72  07DF               	addwf	___fltol@exp1,f
  5792  1E73  1D03               	btfss	3,2
  5793  1E74  2E76               	goto	u4921
  5794  1E75  2E77               	goto	u4920
  5795  1E76                     u4921:
  5796  1E76  2E66               	goto	l3074
  5797  1E77                     u4920:
  5798  1E77  2E8F               	goto	l3084
  5799  1E78                     l3076:
  5800  1E78  3020               	movlw	32
  5801  1E79  025F               	subwf	___fltol@exp1,w
  5802  1E7A  1C03               	skipc
  5803  1E7B  2E7D               	goto	u4931
  5804  1E7C  2E7E               	goto	u4930
  5805  1E7D                     u4931:
  5806  1E7D  2E8A               	goto	l605
  5807  1E7E                     u4930:
  5808  1E7E  2E31               	goto	l3054
  5809  1E7F                     l3082:
  5810  1E7F  3001               	movlw	1
  5811  1E80  00D9               	movwf	??___fltol
  5812  1E81                     u4945:
  5813  1E81  1003               	clrc
  5814  1E82  0DD5               	rlf	___fltol@f1,f
  5815  1E83  0DD6               	rlf	___fltol@f1+1,f
  5816  1E84  0DD7               	rlf	___fltol@f1+2,f
  5817  1E85  0DD8               	rlf	___fltol@f1+3,f
  5818  1E86  0BD9               	decfsz	??___fltol,f
  5819  1E87  2E81               	goto	u4945
  5820  1E88  3001               	movlw	1
  5821  1E89  02DF               	subwf	___fltol@exp1,f
  5822  1E8A                     l605:
  5823  1E8A  085F               	movf	___fltol@exp1,w
  5824  1E8B  1D03               	btfss	3,2
  5825  1E8C  2E8E               	goto	u4951
  5826  1E8D  2E8F               	goto	u4950
  5827  1E8E                     u4951:
  5828  1E8E  2E7F               	goto	l3082
  5829  1E8F                     u4950:
  5830  1E8F                     l3084:
  5831  1E8F  085E               	movf	___fltol@sign1,w
  5832  1E90  1903               	btfsc	3,2
  5833  1E91  2E93               	goto	u4961
  5834  1E92  2E94               	goto	u4960
  5835  1E93                     u4961:
  5836  1E93  2E9F               	goto	l608
  5837  1E94                     u4960:
  5838  1E94                     l3086:
  5839  1E94  09D5               	comf	___fltol@f1,f
  5840  1E95  09D6               	comf	___fltol@f1+1,f
  5841  1E96  09D7               	comf	___fltol@f1+2,f
  5842  1E97  09D8               	comf	___fltol@f1+3,f
  5843  1E98  0AD5               	incf	___fltol@f1,f
  5844  1E99  1903               	skipnz
  5845  1E9A  0AD6               	incf	___fltol@f1+1,f
  5846  1E9B  1903               	skipnz
  5847  1E9C  0AD7               	incf	___fltol@f1+2,f
  5848  1E9D  1903               	skipnz
  5849  1E9E  0AD8               	incf	___fltol@f1+3,f
  5850  1E9F                     l608:
  5851  1E9F                     l598:
  5852  1E9F  0008               	return
  5853  1EA0                     __end_of___fltol:
  5854                           
  5855                           	psect	text16
  5856  1CBD                     __ptext16:	
  5857 ;; *************** function ___flsub *****************
  5858 ;; Defined at:
  5859 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  a               4    0[BANK1 ] long 
  5862 ;;  b               4    4[BANK1 ] long 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  4    0[BANK1 ] long 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5874 ;;      Params:         0       0       8       0       0
  5875 ;;      Locals:         0       0       0       0       0
  5876 ;;      Temps:          0       0       0       0       0
  5877 ;;      Totals:         0       0       8       0       0
  5878 ;;Total ram usage:        8 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    2
  5881 ;; This function calls:
  5882 ;;		___fladd
  5883 ;; This function is called by:
  5884 ;;		_sprintf
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           
  5889                           ;psect for function ___flsub
  5890  1CBD                     ___flsub:
  5891  1CBD                     l3108:	
  5892                           ;incstack = 0
  5893                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5894                           
  5895  1CBD  3080               	movlw	128
  5896  1CBE  1683               	bsf	3,5	;RP0=1, select bank1
  5897  1CBF  1303               	bcf	3,6	;RP1=0, select bank1
  5898  1CC0  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5899  1CC1                     l3110:
  5900  1CC1  0827               	movf	(___flsub@b+3)^(0+128),w
  5901  1CC2  1283               	bcf	3,5	;RP0=0, select bank0
  5902  1CC3  1303               	bcf	3,6	;RP1=0, select bank0
  5903  1CC4  00D9               	movwf	___fladd@b+3
  5904  1CC5  1683               	bsf	3,5	;RP0=1, select bank1
  5905  1CC6  1303               	bcf	3,6	;RP1=0, select bank1
  5906  1CC7  0826               	movf	(___flsub@b+2)^(0+128),w
  5907  1CC8  1283               	bcf	3,5	;RP0=0, select bank0
  5908  1CC9  1303               	bcf	3,6	;RP1=0, select bank0
  5909  1CCA  00D8               	movwf	___fladd@b+2
  5910  1CCB  1683               	bsf	3,5	;RP0=1, select bank1
  5911  1CCC  1303               	bcf	3,6	;RP1=0, select bank1
  5912  1CCD  0825               	movf	(___flsub@b+1)^(0+128),w
  5913  1CCE  1283               	bcf	3,5	;RP0=0, select bank0
  5914  1CCF  1303               	bcf	3,6	;RP1=0, select bank0
  5915  1CD0  00D7               	movwf	___fladd@b+1
  5916  1CD1  1683               	bsf	3,5	;RP0=1, select bank1
  5917  1CD2  1303               	bcf	3,6	;RP1=0, select bank1
  5918  1CD3  0824               	movf	___flsub@b^(0+128),w
  5919  1CD4  1283               	bcf	3,5	;RP0=0, select bank0
  5920  1CD5  1303               	bcf	3,6	;RP1=0, select bank0
  5921  1CD6  00D6               	movwf	___fladd@b
  5922  1CD7  1683               	bsf	3,5	;RP0=1, select bank1
  5923  1CD8  1303               	bcf	3,6	;RP1=0, select bank1
  5924  1CD9  0823               	movf	(___flsub@a+3)^(0+128),w
  5925  1CDA  1283               	bcf	3,5	;RP0=0, select bank0
  5926  1CDB  1303               	bcf	3,6	;RP1=0, select bank0
  5927  1CDC  00DD               	movwf	___fladd@a+3
  5928  1CDD  1683               	bsf	3,5	;RP0=1, select bank1
  5929  1CDE  1303               	bcf	3,6	;RP1=0, select bank1
  5930  1CDF  0822               	movf	(___flsub@a+2)^(0+128),w
  5931  1CE0  1283               	bcf	3,5	;RP0=0, select bank0
  5932  1CE1  1303               	bcf	3,6	;RP1=0, select bank0
  5933  1CE2  00DC               	movwf	___fladd@a+2
  5934  1CE3  1683               	bsf	3,5	;RP0=1, select bank1
  5935  1CE4  1303               	bcf	3,6	;RP1=0, select bank1
  5936  1CE5  0821               	movf	(___flsub@a+1)^(0+128),w
  5937  1CE6  1283               	bcf	3,5	;RP0=0, select bank0
  5938  1CE7  1303               	bcf	3,6	;RP1=0, select bank0
  5939  1CE8  00DB               	movwf	___fladd@a+1
  5940  1CE9  1683               	bsf	3,5	;RP0=1, select bank1
  5941  1CEA  1303               	bcf	3,6	;RP1=0, select bank1
  5942  1CEB  0820               	movf	___flsub@a^(0+128),w
  5943  1CEC  1283               	bcf	3,5	;RP0=0, select bank0
  5944  1CED  1303               	bcf	3,6	;RP1=0, select bank0
  5945  1CEE  00DA               	movwf	___fladd@a
  5946  1CEF  160A  118A  229A  160A  158A  	fcall	___fladd
  5947  1CF4  1283               	bcf	3,5	;RP0=0, select bank0
  5948  1CF5  1303               	bcf	3,6	;RP1=0, select bank0
  5949  1CF6  0859               	movf	?___fladd+3,w
  5950  1CF7  1683               	bsf	3,5	;RP0=1, select bank1
  5951  1CF8  1303               	bcf	3,6	;RP1=0, select bank1
  5952  1CF9  00A3               	movwf	(?___flsub+3)^(0+128)
  5953  1CFA  1283               	bcf	3,5	;RP0=0, select bank0
  5954  1CFB  1303               	bcf	3,6	;RP1=0, select bank0
  5955  1CFC  0858               	movf	?___fladd+2,w
  5956  1CFD  1683               	bsf	3,5	;RP0=1, select bank1
  5957  1CFE  1303               	bcf	3,6	;RP1=0, select bank1
  5958  1CFF  00A2               	movwf	(?___flsub+2)^(0+128)
  5959  1D00  1283               	bcf	3,5	;RP0=0, select bank0
  5960  1D01  1303               	bcf	3,6	;RP1=0, select bank0
  5961  1D02  0857               	movf	?___fladd+1,w
  5962  1D03  1683               	bsf	3,5	;RP0=1, select bank1
  5963  1D04  1303               	bcf	3,6	;RP1=0, select bank1
  5964  1D05  00A1               	movwf	(?___flsub+1)^(0+128)
  5965  1D06  1283               	bcf	3,5	;RP0=0, select bank0
  5966  1D07  1303               	bcf	3,6	;RP1=0, select bank0
  5967  1D08  0856               	movf	?___fladd,w
  5968  1D09  1683               	bsf	3,5	;RP0=1, select bank1
  5969  1D0A  1303               	bcf	3,6	;RP1=0, select bank1
  5970  1D0B  00A0               	movwf	?___flsub^(0+128)
  5971  1D0C                     l768:
  5972  1D0C  0008               	return
  5973  1D0D                     __end_of___flsub:
  5974                           
  5975                           	psect	text17
  5976  129A                     __ptext17:	
  5977 ;; *************** function ___fladd *****************
  5978 ;; Defined at:
  5979 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;  b               4   54[BANK0 ] long 
  5982 ;;  a               4   58[BANK0 ] long 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;  grs             1   73[BANK0 ] unsigned char 
  5985 ;;  bexp            1   72[BANK0 ] unsigned char 
  5986 ;;  aexp            1   71[BANK0 ] unsigned char 
  5987 ;;  signs           1   70[BANK0 ] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  4   54[BANK0 ] unsigned char 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0, btemp+1
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5997 ;;      Params:         0       8       0       0       0
  5998 ;;      Locals:         0       4       0       0       0
  5999 ;;      Temps:          0       8       0       0       0
  6000 ;;      Totals:         0      20       0       0       0
  6001 ;;Total ram usage:       20 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    1
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_sprintf
  6008 ;;		___flsub
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           
  6013                           ;psect for function ___fladd
  6014  129A                     ___fladd:
  6015  129A                     l2470:	
  6016                           ;incstack = 0
  6017                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6018                           
  6019  129A  1283               	bcf	3,5	;RP0=0, select bank0
  6020  129B  1303               	bcf	3,6	;RP1=0, select bank0
  6021  129C  0859               	movf	___fladd@b+3,w
  6022  129D  3980               	andlw	128
  6023  129E  00DE               	movwf	??___fladd
  6024  129F  085E               	movf	??___fladd,w
  6025  12A0  00E6               	movwf	___fladd@signs
  6026  12A1                     l2472:
  6027  12A1  0859               	movf	___fladd@b+3,w
  6028  12A2  00DE               	movwf	??___fladd
  6029  12A3  075E               	addwf	??___fladd,w
  6030  12A4  00DF               	movwf	??___fladd+1
  6031  12A5  085F               	movf	??___fladd+1,w
  6032  12A6  00E8               	movwf	___fladd@bexp
  6033  12A7                     l2474:
  6034  12A7  1FD8               	btfss	___fladd@b+2,7
  6035  12A8  2AAA               	goto	u3321
  6036  12A9  2AAB               	goto	u3320
  6037  12AA                     u3321:
  6038  12AA  2AAC               	goto	l2478
  6039  12AB                     u3320:
  6040  12AB                     l2476:
  6041  12AB  1468               	bsf	___fladd@bexp,0
  6042  12AC                     l2478:
  6043  12AC  0868               	movf	___fladd@bexp,w
  6044  12AD  1903               	btfsc	3,2
  6045  12AE  2AB0               	goto	u3331
  6046  12AF  2AB1               	goto	u3330
  6047  12B0                     u3331:
  6048  12B0  2AC1               	goto	l2488
  6049  12B1                     u3330:
  6050  12B1                     l2480:
  6051  12B1  0A68               	incf	___fladd@bexp,w
  6052  12B2  1D03               	btfss	3,2
  6053  12B3  2AB5               	goto	u3341
  6054  12B4  2AB6               	goto	u3340
  6055  12B5                     u3341:
  6056  12B5  2ABE               	goto	l2484
  6057  12B6                     u3340:
  6058  12B6                     l2482:
  6059  12B6  3000               	movlw	0
  6060  12B7  00D9               	movwf	___fladd@b+3
  6061  12B8  3000               	movlw	0
  6062  12B9  00D8               	movwf	___fladd@b+2
  6063  12BA  3000               	movlw	0
  6064  12BB  00D7               	movwf	___fladd@b+1
  6065  12BC  3000               	movlw	0
  6066  12BD  00D6               	movwf	___fladd@b
  6067  12BE                     l2484:
  6068  12BE  17D8               	bsf	___fladd@b+2,7
  6069  12BF                     l2486:
  6070  12BF  01D9               	clrf	___fladd@b+3
  6071  12C0  2AC9               	goto	l2490
  6072  12C1                     l2488:
  6073  12C1  3000               	movlw	0
  6074  12C2  00D9               	movwf	___fladd@b+3
  6075  12C3  3000               	movlw	0
  6076  12C4  00D8               	movwf	___fladd@b+2
  6077  12C5  3000               	movlw	0
  6078  12C6  00D7               	movwf	___fladd@b+1
  6079  12C7  3000               	movlw	0
  6080  12C8  00D6               	movwf	___fladd@b
  6081  12C9                     l2490:
  6082  12C9  085D               	movf	___fladd@a+3,w
  6083  12CA  3980               	andlw	128
  6084  12CB  00DE               	movwf	??___fladd
  6085  12CC  085E               	movf	??___fladd,w
  6086  12CD  00E7               	movwf	___fladd@aexp
  6087  12CE                     l2492:
  6088  12CE  0867               	movf	___fladd@aexp,w
  6089  12CF  0666               	xorwf	___fladd@signs,w
  6090  12D0  1903               	skipnz
  6091  12D1  2AD3               	goto	u3351
  6092  12D2  2AD4               	goto	u3350
  6093  12D3                     u3351:
  6094  12D3  2AD5               	goto	l2496
  6095  12D4                     u3350:
  6096  12D4                     l2494:
  6097  12D4  1766               	bsf	___fladd@signs,6
  6098  12D5                     l2496:
  6099  12D5  085D               	movf	___fladd@a+3,w
  6100  12D6  00DE               	movwf	??___fladd
  6101  12D7  075E               	addwf	??___fladd,w
  6102  12D8  00DF               	movwf	??___fladd+1
  6103  12D9  085F               	movf	??___fladd+1,w
  6104  12DA  00E7               	movwf	___fladd@aexp
  6105  12DB                     l2498:
  6106  12DB  1FDC               	btfss	___fladd@a+2,7
  6107  12DC  2ADE               	goto	u3361
  6108  12DD  2ADF               	goto	u3360
  6109  12DE                     u3361:
  6110  12DE  2AE0               	goto	l2502
  6111  12DF                     u3360:
  6112  12DF                     l2500:
  6113  12DF  1467               	bsf	___fladd@aexp,0
  6114  12E0                     l2502:
  6115  12E0  0867               	movf	___fladd@aexp,w
  6116  12E1  1903               	btfsc	3,2
  6117  12E2  2AE4               	goto	u3371
  6118  12E3  2AE5               	goto	u3370
  6119  12E4                     u3371:
  6120  12E4  2AF5               	goto	l2512
  6121  12E5                     u3370:
  6122  12E5                     l2504:
  6123  12E5  0A67               	incf	___fladd@aexp,w
  6124  12E6  1D03               	btfss	3,2
  6125  12E7  2AE9               	goto	u3381
  6126  12E8  2AEA               	goto	u3380
  6127  12E9                     u3381:
  6128  12E9  2AF2               	goto	l2508
  6129  12EA                     u3380:
  6130  12EA                     l2506:
  6131  12EA  3000               	movlw	0
  6132  12EB  00DD               	movwf	___fladd@a+3
  6133  12EC  3000               	movlw	0
  6134  12ED  00DC               	movwf	___fladd@a+2
  6135  12EE  3000               	movlw	0
  6136  12EF  00DB               	movwf	___fladd@a+1
  6137  12F0  3000               	movlw	0
  6138  12F1  00DA               	movwf	___fladd@a
  6139  12F2                     l2508:
  6140  12F2  17DC               	bsf	___fladd@a+2,7
  6141  12F3                     l2510:
  6142  12F3  01DD               	clrf	___fladd@a+3
  6143  12F4  2AFD               	goto	l722
  6144  12F5                     l2512:
  6145  12F5  3000               	movlw	0
  6146  12F6  00DD               	movwf	___fladd@a+3
  6147  12F7  3000               	movlw	0
  6148  12F8  00DC               	movwf	___fladd@a+2
  6149  12F9  3000               	movlw	0
  6150  12FA  00DB               	movwf	___fladd@a+1
  6151  12FB  3000               	movlw	0
  6152  12FC  00DA               	movwf	___fladd@a
  6153  12FD                     l722:
  6154  12FD  0868               	movf	___fladd@bexp,w
  6155  12FE  0267               	subwf	___fladd@aexp,w
  6156  12FF  1803               	skipnc
  6157  1300  2B02               	goto	u3391
  6158  1301  2B03               	goto	u3390
  6159  1302                     u3391:
  6160  1302  2B47               	goto	l2548
  6161  1303                     u3390:
  6162  1303                     l2514:
  6163  1303  1F66               	btfss	___fladd@signs,6
  6164  1304  2B06               	goto	u3401
  6165  1305  2B07               	goto	u3400
  6166  1306                     u3401:
  6167  1306  2B0B               	goto	l2518
  6168  1307                     u3400:
  6169  1307                     l2516:
  6170  1307  3080               	movlw	128
  6171  1308  00DE               	movwf	??___fladd
  6172  1309  085E               	movf	??___fladd,w
  6173  130A  06E6               	xorwf	___fladd@signs,f
  6174  130B                     l2518:
  6175  130B  0868               	movf	___fladd@bexp,w
  6176  130C  00DE               	movwf	??___fladd
  6177  130D  085E               	movf	??___fladd,w
  6178  130E  00E9               	movwf	___fladd@grs
  6179  130F                     l2520:
  6180  130F  0867               	movf	___fladd@aexp,w
  6181  1310  00DE               	movwf	??___fladd
  6182  1311  085E               	movf	??___fladd,w
  6183  1312  00E8               	movwf	___fladd@bexp
  6184  1313                     l2522:
  6185  1313  0869               	movf	___fladd@grs,w
  6186  1314  00DE               	movwf	??___fladd
  6187  1315  085E               	movf	??___fladd,w
  6188  1316  00E7               	movwf	___fladd@aexp
  6189  1317                     l2524:
  6190  1317  0856               	movf	___fladd@b,w
  6191  1318  00DE               	movwf	??___fladd
  6192  1319  085E               	movf	??___fladd,w
  6193  131A  00E9               	movwf	___fladd@grs
  6194  131B                     l2526:
  6195  131B  085A               	movf	___fladd@a,w
  6196  131C  00DE               	movwf	??___fladd
  6197  131D  085E               	movf	??___fladd,w
  6198  131E  00D6               	movwf	___fladd@b
  6199  131F                     l2528:
  6200  131F  0869               	movf	___fladd@grs,w
  6201  1320  00DE               	movwf	??___fladd
  6202  1321  085E               	movf	??___fladd,w
  6203  1322  00DA               	movwf	___fladd@a
  6204  1323                     l2530:
  6205  1323  0857               	movf	___fladd@b+1,w
  6206  1324  00DE               	movwf	??___fladd
  6207  1325  085E               	movf	??___fladd,w
  6208  1326  00E9               	movwf	___fladd@grs
  6209  1327                     l2532:
  6210  1327  085B               	movf	___fladd@a+1,w
  6211  1328  00DE               	movwf	??___fladd
  6212  1329  085E               	movf	??___fladd,w
  6213  132A  00D7               	movwf	___fladd@b+1
  6214  132B                     l2534:
  6215  132B  0869               	movf	___fladd@grs,w
  6216  132C  00DE               	movwf	??___fladd
  6217  132D  085E               	movf	??___fladd,w
  6218  132E  00DB               	movwf	___fladd@a+1
  6219  132F                     l2536:
  6220  132F  0858               	movf	___fladd@b+2,w
  6221  1330  00DE               	movwf	??___fladd
  6222  1331  085E               	movf	??___fladd,w
  6223  1332  00E9               	movwf	___fladd@grs
  6224  1333                     l2538:
  6225  1333  085C               	movf	___fladd@a+2,w
  6226  1334  00DE               	movwf	??___fladd
  6227  1335  085E               	movf	??___fladd,w
  6228  1336  00D8               	movwf	___fladd@b+2
  6229  1337                     l2540:
  6230  1337  0869               	movf	___fladd@grs,w
  6231  1338  00DE               	movwf	??___fladd
  6232  1339  085E               	movf	??___fladd,w
  6233  133A  00DC               	movwf	___fladd@a+2
  6234  133B                     l2542:
  6235  133B  0859               	movf	___fladd@b+3,w
  6236  133C  00DE               	movwf	??___fladd
  6237  133D  085E               	movf	??___fladd,w
  6238  133E  00E9               	movwf	___fladd@grs
  6239  133F                     l2544:
  6240  133F  085D               	movf	___fladd@a+3,w
  6241  1340  00DE               	movwf	??___fladd
  6242  1341  085E               	movf	??___fladd,w
  6243  1342  00D9               	movwf	___fladd@b+3
  6244  1343                     l2546:
  6245  1343  0869               	movf	___fladd@grs,w
  6246  1344  00DE               	movwf	??___fladd
  6247  1345  085E               	movf	??___fladd,w
  6248  1346  00DD               	movwf	___fladd@a+3
  6249  1347                     l2548:
  6250  1347  01E9               	clrf	___fladd@grs
  6251  1348                     l2550:
  6252  1348  0867               	movf	___fladd@aexp,w
  6253  1349  00DE               	movwf	??___fladd
  6254  134A  01DF               	clrf	??___fladd+1
  6255  134B  085F               	movf	??___fladd+1,w
  6256  134C  00E1               	movwf	??___fladd+3
  6257  134D  0868               	movf	___fladd@bexp,w
  6258  134E  025E               	subwf	??___fladd,w
  6259  134F  00E0               	movwf	??___fladd+2
  6260  1350  1C03               	skipc
  6261  1351  03E1               	decf	??___fladd+3,f
  6262  1352  0861               	movf	??___fladd+3,w
  6263  1353  3A80               	xorlw	128
  6264  1354  00FF               	movwf	btemp+1
  6265  1355  3080               	movlw	128
  6266  1356  027F               	subwf	btemp+1,w
  6267  1357  1D03               	skipz
  6268  1358  2B5B               	goto	u3415
  6269  1359  301A               	movlw	26
  6270  135A  0260               	subwf	??___fladd+2,w
  6271  135B                     u3415:
  6272  135B  1C03               	skipc
  6273  135C  2B5E               	goto	u3411
  6274  135D  2B5F               	goto	u3410
  6275  135E                     u3411:
  6276  135E  2B9C               	goto	l2566
  6277  135F                     u3410:
  6278  135F                     l2552:
  6279  135F  1283               	bcf	3,5	;RP0=0, select bank0
  6280  1360  1303               	bcf	3,6	;RP1=0, select bank0
  6281  1361  0859               	movf	___fladd@b+3,w
  6282  1362  0458               	iorwf	___fladd@b+2,w
  6283  1363  0457               	iorwf	___fladd@b+1,w
  6284  1364  0456               	iorwf	___fladd@b,w
  6285  1365  1D03               	skipz
  6286  1366  2B68               	goto	u3421
  6287  1367  2B6A               	goto	u3420
  6288  1368                     u3421:
  6289  1368  3001               	movlw	1
  6290  1369  2B6B               	goto	u3430
  6291  136A                     u3420:
  6292  136A  3000               	movlw	0
  6293  136B                     u3430:
  6294  136B  00DE               	movwf	??___fladd
  6295  136C  085E               	movf	??___fladd,w
  6296  136D  00E9               	movwf	___fladd@grs
  6297  136E  3000               	movlw	0
  6298  136F  00D9               	movwf	___fladd@b+3
  6299  1370  3000               	movlw	0
  6300  1371  00D8               	movwf	___fladd@b+2
  6301  1372  3000               	movlw	0
  6302  1373  00D7               	movwf	___fladd@b+1
  6303  1374  3000               	movlw	0
  6304  1375  00D6               	movwf	___fladd@b
  6305  1376  0867               	movf	___fladd@aexp,w
  6306  1377  00DE               	movwf	??___fladd
  6307  1378  085E               	movf	??___fladd,w
  6308  1379  00E8               	movwf	___fladd@bexp
  6309  137A  2BA4               	goto	l726
  6310  137B                     l728:
  6311  137B  1C69               	btfss	___fladd@grs,0
  6312  137C  2B7E               	goto	u3441
  6313  137D  2B7F               	goto	u3440
  6314  137E                     u3441:
  6315  137E  2B88               	goto	l2556
  6316  137F                     u3440:
  6317  137F                     l2554:
  6318  137F  0869               	movf	___fladd@grs,w
  6319  1380  00DE               	movwf	??___fladd
  6320  1381  1003               	clrc
  6321  1382  0C5E               	rrf	??___fladd,w
  6322  1383  3801               	iorlw	1
  6323  1384  00DF               	movwf	??___fladd+1
  6324  1385  085F               	movf	??___fladd+1,w
  6325  1386  00E9               	movwf	___fladd@grs
  6326  1387  2B8A               	goto	l2558
  6327  1388                     l2556:
  6328  1388  1003               	clrc
  6329  1389  0CE9               	rrf	___fladd@grs,f
  6330  138A                     l2558:
  6331  138A  1C56               	btfss	___fladd@b,0
  6332  138B  2B8D               	goto	u3451
  6333  138C  2B8E               	goto	u3450
  6334  138D                     u3451:
  6335  138D  2B8F               	goto	l2562
  6336  138E                     u3450:
  6337  138E                     l2560:
  6338  138E  17E9               	bsf	___fladd@grs,7
  6339  138F                     l2562:
  6340  138F  3001               	movlw	1
  6341  1390  00DE               	movwf	??___fladd
  6342  1391                     u3465:
  6343  1391  0D59               	rlf	___fladd@b+3,w
  6344  1392  0CD9               	rrf	___fladd@b+3,f
  6345  1393  0CD8               	rrf	___fladd@b+2,f
  6346  1394  0CD7               	rrf	___fladd@b+1,f
  6347  1395  0CD6               	rrf	___fladd@b,f
  6348  1396  0BDE               	decfsz	??___fladd& (0+127),f
  6349  1397  2B91               	goto	u3465
  6350  1398                     l2564:
  6351  1398  3001               	movlw	1
  6352  1399  00DE               	movwf	??___fladd
  6353  139A  085E               	movf	??___fladd,w
  6354  139B  07E8               	addwf	___fladd@bexp,f
  6355  139C                     l2566:
  6356  139C  1283               	bcf	3,5	;RP0=0, select bank0
  6357  139D  1303               	bcf	3,6	;RP1=0, select bank0
  6358  139E  0867               	movf	___fladd@aexp,w
  6359  139F  0268               	subwf	___fladd@bexp,w
  6360  13A0  1C03               	skipc
  6361  13A1  2BA3               	goto	u3471
  6362  13A2  2BA4               	goto	u3470
  6363  13A3                     u3471:
  6364  13A3  2B7B               	goto	l728
  6365  13A4                     u3470:
  6366  13A4                     l726:
  6367  13A4  1B66               	btfsc	___fladd@signs,6
  6368  13A5  2BA7               	goto	u3481
  6369  13A6  2BA8               	goto	u3480
  6370  13A7                     u3481:
  6371  13A7  2BF3               	goto	l2592
  6372  13A8                     u3480:
  6373  13A8                     l2568:
  6374  13A8  0868               	movf	___fladd@bexp,w
  6375  13A9  1D03               	btfss	3,2
  6376  13AA  2BAC               	goto	u3491
  6377  13AB  2BAD               	goto	u3490
  6378  13AC                     u3491:
  6379  13AC  2BB6               	goto	l2574
  6380  13AD                     u3490:
  6381  13AD                     l2570:
  6382  13AD  3000               	movlw	0
  6383  13AE  00D9               	movwf	?___fladd+3
  6384  13AF  3000               	movlw	0
  6385  13B0  00D8               	movwf	?___fladd+2
  6386  13B1  3000               	movlw	0
  6387  13B2  00D7               	movwf	?___fladd+1
  6388  13B3  3000               	movlw	0
  6389  13B4  00D6               	movwf	?___fladd
  6390  13B5  2D21               	goto	l735
  6391  13B6                     l2574:
  6392  13B6  085A               	movf	___fladd@a,w
  6393  13B7  07D6               	addwf	___fladd@b,f
  6394  13B8  085B               	movf	___fladd@a+1,w
  6395  13B9  1103               	clrz
  6396  13BA  1803               	skipnc
  6397  13BB  3E01               	addlw	1
  6398  13BC  1903               	skipnz
  6399  13BD  2BBF               	goto	u3501
  6400  13BE  07D7               	addwf	___fladd@b+1,f
  6401  13BF                     u3501:
  6402  13BF  085C               	movf	___fladd@a+2,w
  6403  13C0  1103               	clrz
  6404  13C1  1803               	skipnc
  6405  13C2  3E01               	addlw	1
  6406  13C3  1903               	skipnz
  6407  13C4  2BC6               	goto	u3502
  6408  13C5  07D8               	addwf	___fladd@b+2,f
  6409  13C6                     u3502:
  6410  13C6  085D               	movf	___fladd@a+3,w
  6411  13C7  1103               	clrz
  6412  13C8  1803               	skipnc
  6413  13C9  3E01               	addlw	1
  6414  13CA  1903               	skipnz
  6415  13CB  2BCD               	goto	u3503
  6416  13CC  07D9               	addwf	___fladd@b+3,f
  6417  13CD                     u3503:
  6418  13CD                     l2576:
  6419  13CD  1C59               	btfss	___fladd@b+3,0
  6420  13CE  2BD0               	goto	u3511
  6421  13CF  2BD1               	goto	u3510
  6422  13D0                     u3511:
  6423  13D0  2CA7               	goto	l2626
  6424  13D1                     u3510:
  6425  13D1                     l2578:
  6426  13D1  1C69               	btfss	___fladd@grs,0
  6427  13D2  2BD4               	goto	u3521
  6428  13D3  2BD5               	goto	u3520
  6429  13D4                     u3521:
  6430  13D4  2BDE               	goto	l2582
  6431  13D5                     u3520:
  6432  13D5                     l2580:
  6433  13D5  0869               	movf	___fladd@grs,w
  6434  13D6  00DE               	movwf	??___fladd
  6435  13D7  1003               	clrc
  6436  13D8  0C5E               	rrf	??___fladd,w
  6437  13D9  3801               	iorlw	1
  6438  13DA  00DF               	movwf	??___fladd+1
  6439  13DB  085F               	movf	??___fladd+1,w
  6440  13DC  00E9               	movwf	___fladd@grs
  6441  13DD  2BE0               	goto	l2584
  6442  13DE                     l2582:
  6443  13DE  1003               	clrc
  6444  13DF  0CE9               	rrf	___fladd@grs,f
  6445  13E0                     l2584:
  6446  13E0  1C56               	btfss	___fladd@b,0
  6447  13E1  2BE3               	goto	u3531
  6448  13E2  2BE4               	goto	u3530
  6449  13E3                     u3531:
  6450  13E3  2BE5               	goto	l2588
  6451  13E4                     u3530:
  6452  13E4                     l2586:
  6453  13E4  17E9               	bsf	___fladd@grs,7
  6454  13E5                     l2588:
  6455  13E5  3001               	movlw	1
  6456  13E6  00DE               	movwf	??___fladd
  6457  13E7                     u3545:
  6458  13E7  0D59               	rlf	___fladd@b+3,w
  6459  13E8  0CD9               	rrf	___fladd@b+3,f
  6460  13E9  0CD8               	rrf	___fladd@b+2,f
  6461  13EA  0CD7               	rrf	___fladd@b+1,f
  6462  13EB  0CD6               	rrf	___fladd@b,f
  6463  13EC  0BDE               	decfsz	??___fladd& (0+127),f
  6464  13ED  2BE7               	goto	u3545
  6465  13EE                     l2590:
  6466  13EE  3001               	movlw	1
  6467  13EF  00DE               	movwf	??___fladd
  6468  13F0  085E               	movf	??___fladd,w
  6469  13F1  07E8               	addwf	___fladd@bexp,f
  6470  13F2  2CA7               	goto	l2626
  6471  13F3                     l2592:
  6472  13F3  0859               	movf	___fladd@b+3,w
  6473  13F4  3A80               	xorlw	128
  6474  13F5  00FF               	movwf	btemp+1
  6475  13F6  085D               	movf	___fladd@a+3,w
  6476  13F7  3A80               	xorlw	128
  6477  13F8  027F               	subwf	btemp+1,w
  6478  13F9  1D03               	skipz
  6479  13FA  2C05               	goto	u3553
  6480  13FB  085C               	movf	___fladd@a+2,w
  6481  13FC  0258               	subwf	___fladd@b+2,w
  6482  13FD  1D03               	skipz
  6483  13FE  2C05               	goto	u3553
  6484  13FF  085B               	movf	___fladd@a+1,w
  6485  1400  0257               	subwf	___fladd@b+1,w
  6486  1401  1D03               	skipz
  6487  1402  2C05               	goto	u3553
  6488  1403  085A               	movf	___fladd@a,w
  6489  1404  0256               	subwf	___fladd@b,w
  6490  1405                     u3553:
  6491  1405  1803               	skipnc
  6492  1406  2C08               	goto	u3551
  6493  1407  2C09               	goto	u3550
  6494  1408                     u3551:
  6495  1408  2C61               	goto	l2602
  6496  1409                     u3550:
  6497  1409                     l2594:
  6498  1409  30FF               	movlw	255
  6499  140A  00DE               	movwf	??___fladd
  6500  140B  30FF               	movlw	255
  6501  140C  00DF               	movwf	??___fladd+1
  6502  140D  30FF               	movlw	255
  6503  140E  00E0               	movwf	??___fladd+2
  6504  140F  30FF               	movlw	255
  6505  1410  00E1               	movwf	??___fladd+3
  6506  1411  085A               	movf	___fladd@a,w
  6507  1412  00E2               	movwf	??___fladd+4
  6508  1413  085B               	movf	___fladd@a+1,w
  6509  1414  00E3               	movwf	??___fladd+5
  6510  1415  085C               	movf	___fladd@a+2,w
  6511  1416  00E4               	movwf	??___fladd+6
  6512  1417  085D               	movf	___fladd@a+3,w
  6513  1418  00E5               	movwf	??___fladd+7
  6514  1419  0856               	movf	___fladd@b,w
  6515  141A  02E2               	subwf	??___fladd+4,f
  6516  141B  0857               	movf	___fladd@b+1,w
  6517  141C  1C03               	skipc
  6518  141D  0F57               	incfsz	___fladd@b+1,w
  6519  141E  2C20               	goto	u3561
  6520  141F  2C21               	goto	u3562
  6521  1420                     u3561:
  6522  1420  02E3               	subwf	??___fladd+5,f
  6523  1421                     u3562:
  6524  1421  0858               	movf	___fladd@b+2,w
  6525  1422  1C03               	skipc
  6526  1423  0F58               	incfsz	___fladd@b+2,w
  6527  1424  2C26               	goto	u3563
  6528  1425  2C27               	goto	u3564
  6529  1426                     u3563:
  6530  1426  02E4               	subwf	??___fladd+6,f
  6531  1427                     u3564:
  6532  1427  0859               	movf	___fladd@b+3,w
  6533  1428  1C03               	skipc
  6534  1429  0F59               	incfsz	___fladd@b+3,w
  6535  142A  2C2C               	goto	u3565
  6536  142B  2C2D               	goto	u3566
  6537  142C                     u3565:
  6538  142C  02E5               	subwf	??___fladd+7,f
  6539  142D                     u3566:
  6540  142D  0862               	movf	??___fladd+4,w
  6541  142E  07DE               	addwf	??___fladd,f
  6542  142F  0863               	movf	??___fladd+5,w
  6543  1430  1803               	skipnc
  6544  1431  0F63               	incfsz	??___fladd+5,w
  6545  1432  2C34               	goto	u3570
  6546  1433  2C35               	goto	u3571
  6547  1434                     u3570:
  6548  1434  07DF               	addwf	??___fladd+1,f
  6549  1435                     u3571:
  6550  1435  0864               	movf	??___fladd+6,w
  6551  1436  1803               	skipnc
  6552  1437  0F64               	incfsz	??___fladd+6,w
  6553  1438  2C3A               	goto	u3572
  6554  1439  2C3B               	goto	u3573
  6555  143A                     u3572:
  6556  143A  07E0               	addwf	??___fladd+2,f
  6557  143B                     u3573:
  6558  143B  0865               	movf	??___fladd+7,w
  6559  143C  1803               	skipnc
  6560  143D  0A65               	incf	??___fladd+7,w
  6561  143E  07E1               	addwf	??___fladd+3,f
  6562  143F  0861               	movf	??___fladd+3,w
  6563  1440  00D9               	movwf	___fladd@b+3
  6564  1441  0860               	movf	??___fladd+2,w
  6565  1442  00D8               	movwf	___fladd@b+2
  6566  1443  085F               	movf	??___fladd+1,w
  6567  1444  00D7               	movwf	___fladd@b+1
  6568  1445  085E               	movf	??___fladd,w
  6569  1446  00D6               	movwf	___fladd@b
  6570  1447                     l2596:
  6571  1447  3080               	movlw	128
  6572  1448  00DE               	movwf	??___fladd
  6573  1449  085E               	movf	??___fladd,w
  6574  144A  06E6               	xorwf	___fladd@signs,f
  6575  144B  09E9               	comf	___fladd@grs,f
  6576  144C  0AE9               	incf	___fladd@grs,f
  6577  144D                     l2598:
  6578  144D  0869               	movf	___fladd@grs,w
  6579  144E  1D03               	btfss	3,2
  6580  144F  2C51               	goto	u3581
  6581  1450  2C52               	goto	u3580
  6582  1451                     u3581:
  6583  1451  2C6F               	goto	l743
  6584  1452                     u3580:
  6585  1452                     l2600:
  6586  1452  3001               	movlw	1
  6587  1453  07D6               	addwf	___fladd@b,f
  6588  1454  3000               	movlw	0
  6589  1455  1803               	skipnc
  6590  1456  3001               	movlw	1
  6591  1457  07D7               	addwf	___fladd@b+1,f
  6592  1458  3000               	movlw	0
  6593  1459  1803               	skipnc
  6594  145A  3001               	movlw	1
  6595  145B  07D8               	addwf	___fladd@b+2,f
  6596  145C  3000               	movlw	0
  6597  145D  1803               	skipnc
  6598  145E  3001               	movlw	1
  6599  145F  07D9               	addwf	___fladd@b+3,f
  6600  1460  2C6F               	goto	l743
  6601  1461                     l2602:
  6602  1461  085A               	movf	___fladd@a,w
  6603  1462  02D6               	subwf	___fladd@b,f
  6604  1463  085B               	movf	___fladd@a+1,w
  6605  1464  1C03               	skipc
  6606  1465  0F5B               	incfsz	___fladd@a+1,w
  6607  1466  02D7               	subwf	___fladd@b+1,f
  6608  1467  085C               	movf	___fladd@a+2,w
  6609  1468  1C03               	skipc
  6610  1469  0F5C               	incfsz	___fladd@a+2,w
  6611  146A  02D8               	subwf	___fladd@b+2,f
  6612  146B  085D               	movf	___fladd@a+3,w
  6613  146C  1C03               	skipc
  6614  146D  0F5D               	incfsz	___fladd@a+3,w
  6615  146E  02D9               	subwf	___fladd@b+3,f
  6616  146F                     l743:
  6617  146F  0859               	movf	___fladd@b+3,w
  6618  1470  0458               	iorwf	___fladd@b+2,w
  6619  1471  0457               	iorwf	___fladd@b+1,w
  6620  1472  0456               	iorwf	___fladd@b,w
  6621  1473  1D03               	skipz
  6622  1474  2C76               	goto	u3591
  6623  1475  2C77               	goto	u3590
  6624  1476                     u3591:
  6625  1476  2CA3               	goto	l2624
  6626  1477                     u3590:
  6627  1477                     l2604:
  6628  1477  0869               	movf	___fladd@grs,w
  6629  1478  1D03               	btfss	3,2
  6630  1479  2C7B               	goto	u3601
  6631  147A  2C7C               	goto	u3600
  6632  147B                     u3601:
  6633  147B  2CA3               	goto	l2624
  6634  147C                     u3600:
  6635  147C                     l2606:
  6636  147C  3000               	movlw	0
  6637  147D  00D9               	movwf	?___fladd+3
  6638  147E  3000               	movlw	0
  6639  147F  00D8               	movwf	?___fladd+2
  6640  1480  3000               	movlw	0
  6641  1481  00D7               	movwf	?___fladd+1
  6642  1482  3000               	movlw	0
  6643  1483  00D6               	movwf	?___fladd
  6644  1484  2D21               	goto	l735
  6645  1485                     l2610:
  6646  1485  3001               	movlw	1
  6647  1486  00DE               	movwf	??___fladd
  6648  1487                     u3615:
  6649  1487  1003               	clrc
  6650  1488  0DD6               	rlf	___fladd@b,f
  6651  1489  0DD7               	rlf	___fladd@b+1,f
  6652  148A  0DD8               	rlf	___fladd@b+2,f
  6653  148B  0DD9               	rlf	___fladd@b+3,f
  6654  148C  0BDE               	decfsz	??___fladd,f
  6655  148D  2C87               	goto	u3615
  6656  148E                     l2612:
  6657  148E  1FE9               	btfss	___fladd@grs,7
  6658  148F  2C91               	goto	u3621
  6659  1490  2C92               	goto	u3620
  6660  1491                     u3621:
  6661  1491  2C93               	goto	l747
  6662  1492                     u3620:
  6663  1492                     l2614:
  6664  1492  1456               	bsf	___fladd@b,0
  6665  1493                     l747:
  6666  1493  1C69               	btfss	___fladd@grs,0
  6667  1494  2C96               	goto	u3631
  6668  1495  2C97               	goto	u3630
  6669  1496                     u3631:
  6670  1496  2C9A               	goto	l2618
  6671  1497                     u3630:
  6672  1497                     l2616:
  6673  1497  1403               	setc
  6674  1498  0DE9               	rlf	___fladd@grs,f
  6675  1499  2C9C               	goto	l2620
  6676  149A                     l2618:
  6677  149A  1003               	clrc
  6678  149B  0DE9               	rlf	___fladd@grs,f
  6679  149C                     l2620:
  6680  149C  0868               	movf	___fladd@bexp,w
  6681  149D  1903               	btfsc	3,2
  6682  149E  2CA0               	goto	u3641
  6683  149F  2CA1               	goto	u3640
  6684  14A0                     u3641:
  6685  14A0  2CA3               	goto	l2624
  6686  14A1                     u3640:
  6687  14A1                     l2622:
  6688  14A1  3001               	movlw	1
  6689  14A2  02E8               	subwf	___fladd@bexp,f
  6690  14A3                     l2624:
  6691  14A3  1FD8               	btfss	___fladd@b+2,7
  6692  14A4  2CA6               	goto	u3651
  6693  14A5  2CA7               	goto	u3650
  6694  14A6                     u3651:
  6695  14A6  2C85               	goto	l2610
  6696  14A7                     u3650:
  6697  14A7                     l2626:
  6698  14A7  01E7               	clrf	___fladd@aexp
  6699  14A8                     l2628:
  6700  14A8  1FE9               	btfss	___fladd@grs,7
  6701  14A9  2CAB               	goto	u3661
  6702  14AA  2CAC               	goto	u3660
  6703  14AB                     u3661:
  6704  14AB  2CBA               	goto	l2636
  6705  14AC                     u3660:
  6706  14AC                     l2630:
  6707  14AC  0869               	movf	___fladd@grs,w
  6708  14AD  397F               	andlw	127
  6709  14AE  1903               	btfsc	3,2
  6710  14AF  2CB1               	goto	u3671
  6711  14B0  2CB2               	goto	u3670
  6712  14B1                     u3671:
  6713  14B1  2CB5               	goto	l753
  6714  14B2                     u3670:
  6715  14B2                     l2632:
  6716  14B2  01E7               	clrf	___fladd@aexp
  6717  14B3  0AE7               	incf	___fladd@aexp,f
  6718  14B4  2CBA               	goto	l2636
  6719  14B5                     l753:
  6720  14B5  1C56               	btfss	___fladd@b,0
  6721  14B6  2CB8               	goto	u3681
  6722  14B7  2CB9               	goto	u3680
  6723  14B8                     u3681:
  6724  14B8  2CBA               	goto	l2636
  6725  14B9                     u3680:
  6726  14B9  2CB2               	goto	l2632
  6727  14BA                     l2636:
  6728  14BA  0867               	movf	___fladd@aexp,w
  6729  14BB  1903               	btfsc	3,2
  6730  14BC  2CBE               	goto	u3691
  6731  14BD  2CBF               	goto	u3690
  6732  14BE                     u3691:
  6733  14BE  2CF3               	goto	l756
  6734  14BF                     u3690:
  6735  14BF                     l2638:
  6736  14BF  3001               	movlw	1
  6737  14C0  07D6               	addwf	___fladd@b,f
  6738  14C1  3000               	movlw	0
  6739  14C2  1803               	skipnc
  6740  14C3  3001               	movlw	1
  6741  14C4  07D7               	addwf	___fladd@b+1,f
  6742  14C5  3000               	movlw	0
  6743  14C6  1803               	skipnc
  6744  14C7  3001               	movlw	1
  6745  14C8  07D8               	addwf	___fladd@b+2,f
  6746  14C9  3000               	movlw	0
  6747  14CA  1803               	skipnc
  6748  14CB  3001               	movlw	1
  6749  14CC  07D9               	addwf	___fladd@b+3,f
  6750  14CD                     l2640:
  6751  14CD  1C59               	btfss	___fladd@b+3,0
  6752  14CE  2CD0               	goto	u3701
  6753  14CF  2CD1               	goto	u3700
  6754  14D0                     u3701:
  6755  14D0  2CF3               	goto	l756
  6756  14D1                     u3700:
  6757  14D1                     l2642:
  6758  14D1  0856               	movf	___fladd@b,w
  6759  14D2  00DE               	movwf	??___fladd
  6760  14D3  0857               	movf	___fladd@b+1,w
  6761  14D4  00DF               	movwf	??___fladd+1
  6762  14D5  0858               	movf	___fladd@b+2,w
  6763  14D6  00E0               	movwf	??___fladd+2
  6764  14D7  0859               	movf	___fladd@b+3,w
  6765  14D8  00E1               	movwf	??___fladd+3
  6766  14D9  3001               	movlw	1
  6767  14DA  00E2               	movwf	??___fladd+4
  6768  14DB                     u3715:
  6769  14DB  0D61               	rlf	??___fladd+3,w
  6770  14DC  0CE1               	rrf	??___fladd+3,f
  6771  14DD  0CE0               	rrf	??___fladd+2,f
  6772  14DE  0CDF               	rrf	??___fladd+1,f
  6773  14DF  0CDE               	rrf	??___fladd,f
  6774  14E0                     u3710:
  6775  14E0  0BE2               	decfsz	??___fladd+4,f
  6776  14E1  2CDB               	goto	u3715
  6777  14E2  0861               	movf	??___fladd+3,w
  6778  14E3  00D9               	movwf	___fladd@b+3
  6779  14E4  0860               	movf	??___fladd+2,w
  6780  14E5  00D8               	movwf	___fladd@b+2
  6781  14E6  085F               	movf	??___fladd+1,w
  6782  14E7  00D7               	movwf	___fladd@b+1
  6783  14E8  085E               	movf	??___fladd,w
  6784  14E9  00D6               	movwf	___fladd@b
  6785  14EA  0A68               	incf	___fladd@bexp,w
  6786  14EB  1903               	btfsc	3,2
  6787  14EC  2CEE               	goto	u3721
  6788  14ED  2CEF               	goto	u3720
  6789  14EE                     u3721:
  6790  14EE  2CF3               	goto	l756
  6791  14EF                     u3720:
  6792  14EF                     l2644:
  6793  14EF  3001               	movlw	1
  6794  14F0  00DE               	movwf	??___fladd
  6795  14F1  085E               	movf	??___fladd,w
  6796  14F2  07E8               	addwf	___fladd@bexp,f
  6797  14F3                     l756:
  6798  14F3  0A68               	incf	___fladd@bexp,w
  6799  14F4  1903               	btfsc	3,2
  6800  14F5  2CF7               	goto	u3731
  6801  14F6  2CF8               	goto	u3730
  6802  14F7                     u3731:
  6803  14F7  2CFD               	goto	l2648
  6804  14F8                     u3730:
  6805  14F8                     l2646:
  6806  14F8  0868               	movf	___fladd@bexp,w
  6807  14F9  1D03               	btfss	3,2
  6808  14FA  2CFC               	goto	u3741
  6809  14FB  2CFD               	goto	u3740
  6810  14FC                     u3741:
  6811  14FC  2D0B               	goto	l2654
  6812  14FD                     u3740:
  6813  14FD                     l2648:
  6814  14FD  3000               	movlw	0
  6815  14FE  00D9               	movwf	___fladd@b+3
  6816  14FF  3000               	movlw	0
  6817  1500  00D8               	movwf	___fladd@b+2
  6818  1501  3000               	movlw	0
  6819  1502  00D7               	movwf	___fladd@b+1
  6820  1503  3000               	movlw	0
  6821  1504  00D6               	movwf	___fladd@b
  6822  1505                     l2650:
  6823  1505  0868               	movf	___fladd@bexp,w
  6824  1506  1D03               	btfss	3,2
  6825  1507  2D09               	goto	u3751
  6826  1508  2D0A               	goto	u3750
  6827  1509                     u3751:
  6828  1509  2D0B               	goto	l2654
  6829  150A                     u3750:
  6830  150A                     l2652:
  6831  150A  01E6               	clrf	___fladd@signs
  6832  150B                     l2654:
  6833  150B  1C68               	btfss	___fladd@bexp,0
  6834  150C  2D0E               	goto	u3761
  6835  150D  2D0F               	goto	u3760
  6836  150E                     u3761:
  6837  150E  2D11               	goto	l2658
  6838  150F                     u3760:
  6839  150F                     l2656:
  6840  150F  17D8               	bsf	___fladd@b+2,7
  6841  1510  2D15               	goto	l764
  6842  1511                     l2658:
  6843  1511  307F               	movlw	127
  6844  1512  00DE               	movwf	??___fladd
  6845  1513  085E               	movf	??___fladd,w
  6846  1514  05D8               	andwf	___fladd@b+2,f
  6847  1515                     l764:
  6848  1515  0868               	movf	___fladd@bexp,w
  6849  1516  00DE               	movwf	??___fladd
  6850  1517  1003               	clrc
  6851  1518  0C5E               	rrf	??___fladd,w
  6852  1519  00DF               	movwf	??___fladd+1
  6853  151A  085F               	movf	??___fladd+1,w
  6854  151B  00D9               	movwf	___fladd@b+3
  6855  151C                     l2660:
  6856  151C  1FE6               	btfss	___fladd@signs,7
  6857  151D  2D1F               	goto	u3771
  6858  151E  2D20               	goto	u3770
  6859  151F                     u3771:
  6860  151F  2D21               	goto	l765
  6861  1520                     u3770:
  6862  1520                     l2662:
  6863  1520  17D9               	bsf	___fladd@b+3,7
  6864  1521                     l765:
  6865  1521                     l735:
  6866  1521  0008               	return
  6867  1522                     __end_of___fladd:
  6868                           
  6869                           	psect	text18
  6870  1000                     __ptext18:	
  6871 ;; *************** function ___flneg *****************
  6872 ;; Defined at:
  6873 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;  f1              4    2[COMMON] unsigned char 
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  4    2[COMMON] unsigned char 
  6880 ;; Registers used:
  6881 ;;		wreg
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6887 ;;      Params:         4       0       0       0       0
  6888 ;;      Locals:         0       0       0       0       0
  6889 ;;      Temps:          0       0       0       0       0
  6890 ;;      Totals:         4       0       0       0       0
  6891 ;;Total ram usage:        4 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:    1
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		_sprintf
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           
  6902                           ;psect for function ___flneg
  6903  1000                     ___flneg:
  6904  1000                     l3044:	
  6905                           ;incstack = 0
  6906                           ; Regs used in ___flneg: [wreg]
  6907                           
  6908  1000  0875               	movf	___flneg@f1+3,w
  6909  1001  0474               	iorwf	___flneg@f1+2,w
  6910  1002  0473               	iorwf	___flneg@f1+1,w
  6911  1003  0472               	iorwf	___flneg@f1,w
  6912  1004  1903               	skipnz
  6913  1005  2807               	goto	u4861
  6914  1006  2808               	goto	u4860
  6915  1007                     u4861:
  6916  1007  280A               	goto	l3048
  6917  1008                     u4860:
  6918  1008                     l3046:
  6919  1008  3080               	movlw	128
  6920  1009  06F5               	xorwf	___flneg@f1+3,f
  6921  100A                     l3048:
  6922  100A                     l594:
  6923  100A  0008               	return
  6924  100B                     __end_of___flneg:
  6925                           
  6926                           	psect	text19
  6927  1EA0                     __ptext19:	
  6928 ;; *************** function ___flge *****************
  6929 ;; Defined at:
  6930 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;  ff1             4    2[COMMON] unsigned char 
  6933 ;;  ff2             4    6[COMMON] unsigned char 
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;		None
  6936 ;; Return value:  Size  Location     Type
  6937 ;;		None               void
  6938 ;; Registers used:
  6939 ;;		wreg, status,2, status,0
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6945 ;;      Params:         8       0       0       0       0
  6946 ;;      Locals:         0       0       0       0       0
  6947 ;;      Temps:          0       4       0       0       0
  6948 ;;      Totals:         8       4       0       0       0
  6949 ;;Total ram usage:       12 bytes
  6950 ;; Hardware stack levels used:    1
  6951 ;; Hardware stack levels required when called:    1
  6952 ;; This function calls:
  6953 ;;		Nothing
  6954 ;; This function is called by:
  6955 ;;		_sprintf
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           
  6960                           ;psect for function ___flge
  6961  1EA0                     ___flge:
  6962  1EA0                     l3024:	
  6963                           ;incstack = 0
  6964                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6965                           
  6966  1EA0  3000               	movlw	0
  6967  1EA1  0572               	andwf	___flge@ff1,w
  6968  1EA2  1283               	bcf	3,5	;RP0=0, select bank0
  6969  1EA3  1303               	bcf	3,6	;RP1=0, select bank0
  6970  1EA4  00A0               	movwf	??___flge
  6971  1EA5  3000               	movlw	0
  6972  1EA6  0573               	andwf	___flge@ff1+1,w
  6973  1EA7  00A1               	movwf	??___flge+1
  6974  1EA8  3080               	movlw	128
  6975  1EA9  0574               	andwf	___flge@ff1+2,w
  6976  1EAA  00A2               	movwf	??___flge+2
  6977  1EAB  307F               	movlw	127
  6978  1EAC  0575               	andwf	___flge@ff1+3,w
  6979  1EAD  00A3               	movwf	??___flge+3
  6980  1EAE  0823               	movf	??___flge+3,w
  6981  1EAF  0422               	iorwf	??___flge+2,w
  6982  1EB0  0421               	iorwf	??___flge+1,w
  6983  1EB1  0420               	iorwf	??___flge,w
  6984  1EB2  1D03               	skipz
  6985  1EB3  2EB5               	goto	u4791
  6986  1EB4  2EB6               	goto	u4790
  6987  1EB5                     u4791:
  6988  1EB5  2EBE               	goto	l586
  6989  1EB6                     u4790:
  6990  1EB6                     l3026:
  6991  1EB6  3000               	movlw	0
  6992  1EB7  00F5               	movwf	___flge@ff1+3
  6993  1EB8  3000               	movlw	0
  6994  1EB9  00F4               	movwf	___flge@ff1+2
  6995  1EBA  3000               	movlw	0
  6996  1EBB  00F3               	movwf	___flge@ff1+1
  6997  1EBC  3000               	movlw	0
  6998  1EBD  00F2               	movwf	___flge@ff1
  6999  1EBE                     l586:
  7000  1EBE  3000               	movlw	0
  7001  1EBF  0576               	andwf	___flge@ff2,w
  7002  1EC0  00A0               	movwf	??___flge
  7003  1EC1  3000               	movlw	0
  7004  1EC2  0577               	andwf	___flge@ff2+1,w
  7005  1EC3  00A1               	movwf	??___flge+1
  7006  1EC4  3080               	movlw	128
  7007  1EC5  0578               	andwf	___flge@ff2+2,w
  7008  1EC6  00A2               	movwf	??___flge+2
  7009  1EC7  307F               	movlw	127
  7010  1EC8  0579               	andwf	___flge@ff2+3,w
  7011  1EC9  00A3               	movwf	??___flge+3
  7012  1ECA  0823               	movf	??___flge+3,w
  7013  1ECB  0422               	iorwf	??___flge+2,w
  7014  1ECC  0421               	iorwf	??___flge+1,w
  7015  1ECD  0420               	iorwf	??___flge,w
  7016  1ECE  1D03               	skipz
  7017  1ECF  2ED1               	goto	u4801
  7018  1ED0  2ED2               	goto	u4800
  7019  1ED1                     u4801:
  7020  1ED1  2EDA               	goto	l3030
  7021  1ED2                     u4800:
  7022  1ED2                     l3028:
  7023  1ED2  3000               	movlw	0
  7024  1ED3  00F9               	movwf	___flge@ff2+3
  7025  1ED4  3000               	movlw	0
  7026  1ED5  00F8               	movwf	___flge@ff2+2
  7027  1ED6  3000               	movlw	0
  7028  1ED7  00F7               	movwf	___flge@ff2+1
  7029  1ED8  3000               	movlw	0
  7030  1ED9  00F6               	movwf	___flge@ff2
  7031  1EDA                     l3030:
  7032  1EDA  1FF5               	btfss	___flge@ff1+3,7
  7033  1EDB  2EDD               	goto	u4811
  7034  1EDC  2EDE               	goto	u4810
  7035  1EDD                     u4811:
  7036  1EDD  2F02               	goto	l3034
  7037  1EDE                     u4810:
  7038  1EDE                     l3032:
  7039  1EDE  3000               	movlw	0
  7040  1EDF  00A0               	movwf	??___flge
  7041  1EE0  3000               	movlw	0
  7042  1EE1  00A1               	movwf	??___flge+1
  7043  1EE2  3000               	movlw	0
  7044  1EE3  00A2               	movwf	??___flge+2
  7045  1EE4  3080               	movlw	128
  7046  1EE5  00A3               	movwf	??___flge+3
  7047  1EE6  0872               	movf	___flge@ff1,w
  7048  1EE7  02A0               	subwf	??___flge,f
  7049  1EE8  0873               	movf	___flge@ff1+1,w
  7050  1EE9  1C03               	skipc
  7051  1EEA  0F73               	incfsz	___flge@ff1+1,w
  7052  1EEB  2EED               	goto	u4821
  7053  1EEC  2EEE               	goto	u4822
  7054  1EED                     u4821:
  7055  1EED  02A1               	subwf	??___flge+1,f
  7056  1EEE                     u4822:
  7057  1EEE  0874               	movf	___flge@ff1+2,w
  7058  1EEF  1C03               	skipc
  7059  1EF0  0F74               	incfsz	___flge@ff1+2,w
  7060  1EF1  2EF3               	goto	u4823
  7061  1EF2  2EF4               	goto	u4824
  7062  1EF3                     u4823:
  7063  1EF3  02A2               	subwf	??___flge+2,f
  7064  1EF4                     u4824:
  7065  1EF4  0875               	movf	___flge@ff1+3,w
  7066  1EF5  1C03               	skipc
  7067  1EF6  0F75               	incfsz	___flge@ff1+3,w
  7068  1EF7  2EF9               	goto	u4825
  7069  1EF8  2EFA               	goto	u4826
  7070  1EF9                     u4825:
  7071  1EF9  02A3               	subwf	??___flge+3,f
  7072  1EFA                     u4826:
  7073  1EFA  0823               	movf	??___flge+3,w
  7074  1EFB  00F5               	movwf	___flge@ff1+3
  7075  1EFC  0822               	movf	??___flge+2,w
  7076  1EFD  00F4               	movwf	___flge@ff1+2
  7077  1EFE  0821               	movf	??___flge+1,w
  7078  1EFF  00F3               	movwf	___flge@ff1+1
  7079  1F00  0820               	movf	??___flge,w
  7080  1F01  00F2               	movwf	___flge@ff1
  7081  1F02                     l3034:
  7082  1F02  1FF9               	btfss	___flge@ff2+3,7
  7083  1F03  2F05               	goto	u4831
  7084  1F04  2F06               	goto	u4830
  7085  1F05                     u4831:
  7086  1F05  2F2A               	goto	l589
  7087  1F06                     u4830:
  7088  1F06                     l3036:
  7089  1F06  3000               	movlw	0
  7090  1F07  00A0               	movwf	??___flge
  7091  1F08  3000               	movlw	0
  7092  1F09  00A1               	movwf	??___flge+1
  7093  1F0A  3000               	movlw	0
  7094  1F0B  00A2               	movwf	??___flge+2
  7095  1F0C  3080               	movlw	128
  7096  1F0D  00A3               	movwf	??___flge+3
  7097  1F0E  0876               	movf	___flge@ff2,w
  7098  1F0F  02A0               	subwf	??___flge,f
  7099  1F10  0877               	movf	___flge@ff2+1,w
  7100  1F11  1C03               	skipc
  7101  1F12  0F77               	incfsz	___flge@ff2+1,w
  7102  1F13  2F15               	goto	u4841
  7103  1F14  2F16               	goto	u4842
  7104  1F15                     u4841:
  7105  1F15  02A1               	subwf	??___flge+1,f
  7106  1F16                     u4842:
  7107  1F16  0878               	movf	___flge@ff2+2,w
  7108  1F17  1C03               	skipc
  7109  1F18  0F78               	incfsz	___flge@ff2+2,w
  7110  1F19  2F1B               	goto	u4843
  7111  1F1A  2F1C               	goto	u4844
  7112  1F1B                     u4843:
  7113  1F1B  02A2               	subwf	??___flge+2,f
  7114  1F1C                     u4844:
  7115  1F1C  0879               	movf	___flge@ff2+3,w
  7116  1F1D  1C03               	skipc
  7117  1F1E  0F79               	incfsz	___flge@ff2+3,w
  7118  1F1F  2F21               	goto	u4845
  7119  1F20  2F22               	goto	u4846
  7120  1F21                     u4845:
  7121  1F21  02A3               	subwf	??___flge+3,f
  7122  1F22                     u4846:
  7123  1F22  0823               	movf	??___flge+3,w
  7124  1F23  00F9               	movwf	___flge@ff2+3
  7125  1F24  0822               	movf	??___flge+2,w
  7126  1F25  00F8               	movwf	___flge@ff2+2
  7127  1F26  0821               	movf	??___flge+1,w
  7128  1F27  00F7               	movwf	___flge@ff2+1
  7129  1F28  0820               	movf	??___flge,w
  7130  1F29  00F6               	movwf	___flge@ff2
  7131  1F2A                     l589:
  7132  1F2A  3080               	movlw	128
  7133  1F2B  06F5               	xorwf	___flge@ff1+3,f
  7134  1F2C  3080               	movlw	128
  7135  1F2D  06F9               	xorwf	___flge@ff2+3,f
  7136  1F2E  0879               	movf	___flge@ff2+3,w
  7137  1F2F  0275               	subwf	___flge@ff1+3,w
  7138  1F30  1D03               	skipz
  7139  1F31  2F3C               	goto	u4855
  7140  1F32  0878               	movf	___flge@ff2+2,w
  7141  1F33  0274               	subwf	___flge@ff1+2,w
  7142  1F34  1D03               	skipz
  7143  1F35  2F3C               	goto	u4855
  7144  1F36  0877               	movf	___flge@ff2+1,w
  7145  1F37  0273               	subwf	___flge@ff1+1,w
  7146  1F38  1D03               	skipz
  7147  1F39  2F3C               	goto	u4855
  7148  1F3A  0876               	movf	___flge@ff2,w
  7149  1F3B  0272               	subwf	___flge@ff1,w
  7150  1F3C                     u4855:
  7151  1F3C  1803               	skipnc
  7152  1F3D  2F3F               	goto	u4851
  7153  1F3E  2F40               	goto	u4850
  7154  1F3F                     u4851:
  7155  1F3F  2F42               	goto	l3040
  7156  1F40                     u4850:
  7157  1F40                     l3038:
  7158  1F40  1003               	clrc
  7159  1F41  2F43               	goto	l590
  7160  1F42                     l3040:
  7161  1F42  1403               	setc
  7162  1F43                     l590:
  7163  1F43  0008               	return
  7164  1F44                     __end_of___flge:
  7165                           
  7166                           	psect	text20
  7167  1C6D                     __ptext20:	
  7168 ;; *************** function ___fleq *****************
  7169 ;; Defined at:
  7170 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  ff1             4    2[COMMON] unsigned char 
  7173 ;;  ff2             4    6[COMMON] unsigned char 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;		None               void
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7185 ;;      Params:         8       0       0       0       0
  7186 ;;      Locals:         0       0       0       0       0
  7187 ;;      Temps:          0       4       0       0       0
  7188 ;;      Totals:         8       4       0       0       0
  7189 ;;Total ram usage:       12 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:    1
  7192 ;; This function calls:
  7193 ;;		Nothing
  7194 ;; This function is called by:
  7195 ;;		_sprintf
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           
  7200                           ;psect for function ___fleq
  7201  1C6D                     ___fleq:
  7202  1C6D                     l3012:	
  7203                           ;incstack = 0
  7204                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7205                           
  7206  1C6D  3000               	movlw	0
  7207  1C6E  0572               	andwf	___fleq@ff1,w
  7208  1C6F  1283               	bcf	3,5	;RP0=0, select bank0
  7209  1C70  1303               	bcf	3,6	;RP1=0, select bank0
  7210  1C71  00A0               	movwf	??___fleq
  7211  1C72  3000               	movlw	0
  7212  1C73  0573               	andwf	___fleq@ff1+1,w
  7213  1C74  00A1               	movwf	??___fleq+1
  7214  1C75  3080               	movlw	128
  7215  1C76  0574               	andwf	___fleq@ff1+2,w
  7216  1C77  00A2               	movwf	??___fleq+2
  7217  1C78  307F               	movlw	127
  7218  1C79  0575               	andwf	___fleq@ff1+3,w
  7219  1C7A  00A3               	movwf	??___fleq+3
  7220  1C7B  0823               	movf	??___fleq+3,w
  7221  1C7C  0422               	iorwf	??___fleq+2,w
  7222  1C7D  0421               	iorwf	??___fleq+1,w
  7223  1C7E  0420               	iorwf	??___fleq,w
  7224  1C7F  1D03               	skipz
  7225  1C80  2C82               	goto	u4761
  7226  1C81  2C83               	goto	u4760
  7227  1C82                     u4761:
  7228  1C82  2C8B               	goto	l581
  7229  1C83                     u4760:
  7230  1C83                     l3014:
  7231  1C83  3000               	movlw	0
  7232  1C84  00F5               	movwf	___fleq@ff1+3
  7233  1C85  3000               	movlw	0
  7234  1C86  00F4               	movwf	___fleq@ff1+2
  7235  1C87  3000               	movlw	0
  7236  1C88  00F3               	movwf	___fleq@ff1+1
  7237  1C89  3000               	movlw	0
  7238  1C8A  00F2               	movwf	___fleq@ff1
  7239  1C8B                     l581:
  7240  1C8B  3000               	movlw	0
  7241  1C8C  0576               	andwf	___fleq@ff2,w
  7242  1C8D  00A0               	movwf	??___fleq
  7243  1C8E  3000               	movlw	0
  7244  1C8F  0577               	andwf	___fleq@ff2+1,w
  7245  1C90  00A1               	movwf	??___fleq+1
  7246  1C91  3080               	movlw	128
  7247  1C92  0578               	andwf	___fleq@ff2+2,w
  7248  1C93  00A2               	movwf	??___fleq+2
  7249  1C94  307F               	movlw	127
  7250  1C95  0579               	andwf	___fleq@ff2+3,w
  7251  1C96  00A3               	movwf	??___fleq+3
  7252  1C97  0823               	movf	??___fleq+3,w
  7253  1C98  0422               	iorwf	??___fleq+2,w
  7254  1C99  0421               	iorwf	??___fleq+1,w
  7255  1C9A  0420               	iorwf	??___fleq,w
  7256  1C9B  1D03               	skipz
  7257  1C9C  2C9E               	goto	u4771
  7258  1C9D  2C9F               	goto	u4770
  7259  1C9E                     u4771:
  7260  1C9E  2CA7               	goto	l582
  7261  1C9F                     u4770:
  7262  1C9F                     l3016:
  7263  1C9F  3000               	movlw	0
  7264  1CA0  00F9               	movwf	___fleq@ff2+3
  7265  1CA1  3000               	movlw	0
  7266  1CA2  00F8               	movwf	___fleq@ff2+2
  7267  1CA3  3000               	movlw	0
  7268  1CA4  00F7               	movwf	___fleq@ff2+1
  7269  1CA5  3000               	movlw	0
  7270  1CA6  00F6               	movwf	___fleq@ff2
  7271  1CA7                     l582:
  7272  1CA7  0879               	movf	___fleq@ff2+3,w
  7273  1CA8  0675               	xorwf	___fleq@ff1+3,w
  7274  1CA9  1D03               	skipz
  7275  1CAA  2CB5               	goto	u4785
  7276  1CAB  0878               	movf	___fleq@ff2+2,w
  7277  1CAC  0674               	xorwf	___fleq@ff1+2,w
  7278  1CAD  1D03               	skipz
  7279  1CAE  2CB5               	goto	u4785
  7280  1CAF  0877               	movf	___fleq@ff2+1,w
  7281  1CB0  0673               	xorwf	___fleq@ff1+1,w
  7282  1CB1  1D03               	skipz
  7283  1CB2  2CB5               	goto	u4785
  7284  1CB3  0876               	movf	___fleq@ff2,w
  7285  1CB4  0672               	xorwf	___fleq@ff1,w
  7286  1CB5                     u4785:
  7287  1CB5  1903               	skipnz
  7288  1CB6  2CB8               	goto	u4781
  7289  1CB7  2CB9               	goto	u4780
  7290  1CB8                     u4781:
  7291  1CB8  2CBB               	goto	l3020
  7292  1CB9                     u4780:
  7293  1CB9                     l3018:
  7294  1CB9  1003               	clrc
  7295  1CBA  2CBC               	goto	l583
  7296  1CBB                     l3020:
  7297  1CBB  1403               	setc
  7298  1CBC                     l583:
  7299  1CBC  0008               	return
  7300  1CBD                     __end_of___fleq:
  7301                           
  7302                           	psect	text21
  7303  1B1A                     __ptext21:	
  7304 ;; *************** function _setup *****************
  7305 ;; Defined at:
  7306 ;;		line 125 in file "maestro.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;		None
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;		None
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      void 
  7313 ;; Registers used:
  7314 ;;		wreg, status,2, status,0, pclath, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7320 ;;      Params:         0       0       0       0       0
  7321 ;;      Locals:         0       0       0       0       0
  7322 ;;      Temps:          0       0       0       0       0
  7323 ;;      Totals:         0       0       0       0       0
  7324 ;;Total ram usage:        0 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    3
  7327 ;; This function calls:
  7328 ;;		_I2C_Master_Init
  7329 ;; This function is called by:
  7330 ;;		_main
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           
  7335                           ;psect for function _setup
  7336  1B1A                     _setup:
  7337  1B1A                     l3186:	
  7338                           ;incstack = 0
  7339                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  7340                           
  7341                           
  7342                           ;maestro.c: 126:     ANSEL = 0;
  7343  1B1A  1683               	bsf	3,5	;RP0=1, select bank3
  7344  1B1B  1703               	bsf	3,6	;RP1=1, select bank3
  7345  1B1C  0188               	clrf	8	;volatile
  7346                           
  7347                           ;maestro.c: 127:     ANSELH = 0;
  7348  1B1D  0189               	clrf	9	;volatile
  7349                           
  7350                           ;maestro.c: 128:     TRISD = 0;
  7351  1B1E  1683               	bsf	3,5	;RP0=1, select bank1
  7352  1B1F  1303               	bcf	3,6	;RP1=0, select bank1
  7353  1B20  0188               	clrf	8	;volatile
  7354                           
  7355                           ;maestro.c: 129:     TRISA = 0;
  7356  1B21  0185               	clrf	5	;volatile
  7357                           
  7358                           ;maestro.c: 130:     PORTD = 0;
  7359  1B22  1283               	bcf	3,5	;RP0=0, select bank0
  7360  1B23  1303               	bcf	3,6	;RP1=0, select bank0
  7361  1B24  0188               	clrf	8	;volatile
  7362                           
  7363                           ;maestro.c: 131:     PORTA = 0;
  7364  1B25  0185               	clrf	5	;volatile
  7365  1B26                     l3188:
  7366                           
  7367                           ;maestro.c: 132:     INTCONbits.GIE = 1;
  7368  1B26  178B               	bsf	11,7	;volatile
  7369  1B27                     l3190:
  7370                           
  7371                           ;maestro.c: 133:     INTCONbits.PEIE = 1;
  7372  1B27  170B               	bsf	11,6	;volatile
  7373  1B28                     l3192:
  7374                           
  7375                           ;maestro.c: 134:     PIE1bits.RCIE = 1;
  7376  1B28  1683               	bsf	3,5	;RP0=1, select bank1
  7377  1B29  1303               	bcf	3,6	;RP1=0, select bank1
  7378  1B2A  168C               	bsf	12,5	;volatile
  7379  1B2B                     l3194:
  7380                           
  7381                           ;maestro.c: 136:     I2C_Master_Init(100000);
  7382  1B2B  3000               	movlw	0
  7383  1B2C  1283               	bcf	3,5	;RP0=0, select bank0
  7384  1B2D  1303               	bcf	3,6	;RP1=0, select bank0
  7385  1B2E  00A8               	movwf	I2C_Master_Init@c+3
  7386  1B2F  3001               	movlw	1
  7387  1B30  00A7               	movwf	I2C_Master_Init@c+2
  7388  1B31  3086               	movlw	134
  7389  1B32  00A6               	movwf	I2C_Master_Init@c+1
  7390  1B33  30A0               	movlw	160
  7391  1B34  00A5               	movwf	I2C_Master_Init@c
  7392  1B35  160A  158A  23B5  160A  158A  	fcall	_I2C_Master_Init
  7393  1B3A                     l160:
  7394  1B3A  0008               	return
  7395  1B3B                     __end_of_setup:
  7396                           
  7397                           	psect	text22
  7398  1BB5                     __ptext22:	
  7399 ;; *************** function _I2C_Master_Init *****************
  7400 ;; Defined at:
  7401 ;;		line 19 in file "I2C.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  c               4    5[BANK0 ] const unsigned long 
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg, status,2, status,0, pclath, cstack
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7415 ;;      Params:         0       4       0       0       0
  7416 ;;      Locals:         0       0       0       0       0
  7417 ;;      Temps:          0       4       0       0       0
  7418 ;;      Totals:         0       8       0       0       0
  7419 ;;Total ram usage:        8 bytes
  7420 ;; Hardware stack levels used:    1
  7421 ;; Hardware stack levels required when called:    2
  7422 ;; This function calls:
  7423 ;;		___lldiv
  7424 ;; This function is called by:
  7425 ;;		_setup
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           
  7430                           ;psect for function _I2C_Master_Init
  7431  1BB5                     _I2C_Master_Init:
  7432  1BB5                     l2804:	
  7433                           ;incstack = 0
  7434                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  7435                           
  7436                           
  7437                           ;I2C.c: 19: void I2C_Master_Init(const unsigned long c);I2C.c: 20: {;I2C.c: 21:     SSPC
      +                          ON = 0b00101000;
  7438  1BB5  3028               	movlw	40
  7439  1BB6  1283               	bcf	3,5	;RP0=0, select bank0
  7440  1BB7  1303               	bcf	3,6	;RP1=0, select bank0
  7441  1BB8  0094               	movwf	20	;volatile
  7442  1BB9                     l2806:
  7443                           
  7444                           ;I2C.c: 22:     SSPCON2 = 0;
  7445  1BB9  1683               	bsf	3,5	;RP0=1, select bank1
  7446  1BBA  1303               	bcf	3,6	;RP1=0, select bank1
  7447  1BBB  0191               	clrf	17	;volatile
  7448  1BBC                     l2808:
  7449                           
  7450                           ;I2C.c: 23:     SSPADD = (4000000/(4*c))-1;
  7451  1BBC  1283               	bcf	3,5	;RP0=0, select bank0
  7452  1BBD  1303               	bcf	3,6	;RP1=0, select bank0
  7453  1BBE  0825               	movf	I2C_Master_Init@c,w
  7454  1BBF  00A9               	movwf	??_I2C_Master_Init
  7455  1BC0  0826               	movf	I2C_Master_Init@c+1,w
  7456  1BC1  00AA               	movwf	??_I2C_Master_Init+1
  7457  1BC2  0827               	movf	I2C_Master_Init@c+2,w
  7458  1BC3  00AB               	movwf	??_I2C_Master_Init+2
  7459  1BC4  0828               	movf	I2C_Master_Init@c+3,w
  7460  1BC5  00AC               	movwf	??_I2C_Master_Init+3
  7461  1BC6  3002               	movlw	2
  7462  1BC7                     u4155:
  7463  1BC7  1003               	clrc
  7464  1BC8  0DA9               	rlf	??_I2C_Master_Init,f
  7465  1BC9  0DAA               	rlf	??_I2C_Master_Init+1,f
  7466  1BCA  0DAB               	rlf	??_I2C_Master_Init+2,f
  7467  1BCB  0DAC               	rlf	??_I2C_Master_Init+3,f
  7468  1BCC                     u4150:
  7469  1BCC  3EFF               	addlw	-1
  7470  1BCD  1D03               	skipz
  7471  1BCE  2BC7               	goto	u4155
  7472  1BCF  082C               	movf	??_I2C_Master_Init+3,w
  7473  1BD0  00F5               	movwf	___lldiv@divisor+3
  7474  1BD1  082B               	movf	??_I2C_Master_Init+2,w
  7475  1BD2  00F4               	movwf	___lldiv@divisor+2
  7476  1BD3  082A               	movf	??_I2C_Master_Init+1,w
  7477  1BD4  00F3               	movwf	___lldiv@divisor+1
  7478  1BD5  0829               	movf	??_I2C_Master_Init,w
  7479  1BD6  00F2               	movwf	___lldiv@divisor
  7480  1BD7  3000               	movlw	0
  7481  1BD8  00F9               	movwf	___lldiv@dividend+3
  7482  1BD9  303D               	movlw	61
  7483  1BDA  00F8               	movwf	___lldiv@dividend+2
  7484  1BDB  3009               	movlw	9
  7485  1BDC  00F7               	movwf	___lldiv@dividend+1
  7486  1BDD  3000               	movlw	0
  7487  1BDE  00F6               	movwf	___lldiv@dividend
  7488  1BDF  160A  158A  25BC  160A  158A  	fcall	___lldiv
  7489  1BE4  0872               	movf	?___lldiv,w
  7490  1BE5  3EFF               	addlw	255
  7491  1BE6  1683               	bsf	3,5	;RP0=1, select bank1
  7492  1BE7  1303               	bcf	3,6	;RP1=0, select bank1
  7493  1BE8  0093               	movwf	19	;volatile
  7494  1BE9                     l2810:
  7495                           
  7496                           ;I2C.c: 24:     SSPSTAT = 0;
  7497  1BE9  0194               	clrf	20	;volatile
  7498  1BEA                     l2812:
  7499                           
  7500                           ;I2C.c: 25:     TRISCbits.TRISC3 = 1;
  7501  1BEA  1587               	bsf	7,3	;volatile
  7502  1BEB                     l2814:
  7503                           
  7504                           ;I2C.c: 26:     TRISCbits.TRISC4 = 1;
  7505  1BEB  1607               	bsf	7,4	;volatile
  7506  1BEC                     l29:
  7507  1BEC  0008               	return
  7508  1BED                     __end_of_I2C_Master_Init:
  7509                           
  7510                           	psect	text23
  7511  1DBC                     __ptext23:	
  7512 ;; *************** function ___lldiv *****************
  7513 ;; Defined at:
  7514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  divisor         4    2[COMMON] unsigned long 
  7517 ;;  dividend        4    6[COMMON] unsigned long 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  quotient        4    0[BANK0 ] unsigned long 
  7520 ;;  counter         1    4[BANK0 ] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  4    2[COMMON] unsigned long 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7530 ;;      Params:         8       0       0       0       0
  7531 ;;      Locals:         0       5       0       0       0
  7532 ;;      Temps:          1       0       0       0       0
  7533 ;;      Totals:         9       5       0       0       0
  7534 ;;Total ram usage:       14 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    1
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		_I2C_Master_Init
  7541 ;;		_sprintf
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           
  7546                           ;psect for function ___lldiv
  7547  1DBC                     ___lldiv:
  7548  1DBC                     l2316:	
  7549                           ;incstack = 0
  7550                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7551                           
  7552  1DBC  3000               	movlw	0
  7553  1DBD  1283               	bcf	3,5	;RP0=0, select bank0
  7554  1DBE  1303               	bcf	3,6	;RP1=0, select bank0
  7555  1DBF  00A3               	movwf	___lldiv@quotient+3
  7556  1DC0  3000               	movlw	0
  7557  1DC1  00A2               	movwf	___lldiv@quotient+2
  7558  1DC2  3000               	movlw	0
  7559  1DC3  00A1               	movwf	___lldiv@quotient+1
  7560  1DC4  3000               	movlw	0
  7561  1DC5  00A0               	movwf	___lldiv@quotient
  7562  1DC6  0875               	movf	___lldiv@divisor+3,w
  7563  1DC7  0474               	iorwf	___lldiv@divisor+2,w
  7564  1DC8  0473               	iorwf	___lldiv@divisor+1,w
  7565  1DC9  0472               	iorwf	___lldiv@divisor,w
  7566  1DCA  1903               	skipnz
  7567  1DCB  2DCD               	goto	u2931
  7568  1DCC  2DCE               	goto	u2930
  7569  1DCD                     u2931:
  7570  1DCD  2E1B               	goto	l2336
  7571  1DCE                     u2930:
  7572  1DCE                     l2318:
  7573  1DCE  01A4               	clrf	___lldiv@counter
  7574  1DCF  0AA4               	incf	___lldiv@counter,f
  7575  1DD0  2DDE               	goto	l2322
  7576  1DD1                     l2320:
  7577  1DD1  3001               	movlw	1
  7578  1DD2  00FA               	movwf	??___lldiv
  7579  1DD3                     u2945:
  7580  1DD3  1003               	clrc
  7581  1DD4  0DF2               	rlf	___lldiv@divisor,f
  7582  1DD5  0DF3               	rlf	___lldiv@divisor+1,f
  7583  1DD6  0DF4               	rlf	___lldiv@divisor+2,f
  7584  1DD7  0DF5               	rlf	___lldiv@divisor+3,f
  7585  1DD8  0BFA               	decfsz	??___lldiv,f
  7586  1DD9  2DD3               	goto	u2945
  7587  1DDA  3001               	movlw	1
  7588  1DDB  00FA               	movwf	??___lldiv
  7589  1DDC  087A               	movf	??___lldiv,w
  7590  1DDD  07A4               	addwf	___lldiv@counter,f
  7591  1DDE                     l2322:
  7592  1DDE  1FF5               	btfss	___lldiv@divisor+3,7
  7593  1DDF  2DE1               	goto	u2951
  7594  1DE0  2DE2               	goto	u2950
  7595  1DE1                     u2951:
  7596  1DE1  2DD1               	goto	l2320
  7597  1DE2                     u2950:
  7598  1DE2                     l2324:
  7599  1DE2  3001               	movlw	1
  7600  1DE3  00FA               	movwf	??___lldiv
  7601  1DE4                     u2965:
  7602  1DE4  1003               	clrc
  7603  1DE5  0DA0               	rlf	___lldiv@quotient,f
  7604  1DE6  0DA1               	rlf	___lldiv@quotient+1,f
  7605  1DE7  0DA2               	rlf	___lldiv@quotient+2,f
  7606  1DE8  0DA3               	rlf	___lldiv@quotient+3,f
  7607  1DE9  0BFA               	decfsz	??___lldiv,f
  7608  1DEA  2DE4               	goto	u2965
  7609  1DEB                     l2326:
  7610  1DEB  0875               	movf	___lldiv@divisor+3,w
  7611  1DEC  0279               	subwf	___lldiv@dividend+3,w
  7612  1DED  1D03               	skipz
  7613  1DEE  2DF9               	goto	u2975
  7614  1DEF  0874               	movf	___lldiv@divisor+2,w
  7615  1DF0  0278               	subwf	___lldiv@dividend+2,w
  7616  1DF1  1D03               	skipz
  7617  1DF2  2DF9               	goto	u2975
  7618  1DF3  0873               	movf	___lldiv@divisor+1,w
  7619  1DF4  0277               	subwf	___lldiv@dividend+1,w
  7620  1DF5  1D03               	skipz
  7621  1DF6  2DF9               	goto	u2975
  7622  1DF7  0872               	movf	___lldiv@divisor,w
  7623  1DF8  0276               	subwf	___lldiv@dividend,w
  7624  1DF9                     u2975:
  7625  1DF9  1C03               	skipc
  7626  1DFA  2DFC               	goto	u2971
  7627  1DFB  2DFD               	goto	u2970
  7628  1DFC                     u2971:
  7629  1DFC  2E0C               	goto	l2332
  7630  1DFD                     u2970:
  7631  1DFD                     l2328:
  7632  1DFD  0872               	movf	___lldiv@divisor,w
  7633  1DFE  02F6               	subwf	___lldiv@dividend,f
  7634  1DFF  0873               	movf	___lldiv@divisor+1,w
  7635  1E00  1C03               	skipc
  7636  1E01  0F73               	incfsz	___lldiv@divisor+1,w
  7637  1E02  02F7               	subwf	___lldiv@dividend+1,f
  7638  1E03  0874               	movf	___lldiv@divisor+2,w
  7639  1E04  1C03               	skipc
  7640  1E05  0F74               	incfsz	___lldiv@divisor+2,w
  7641  1E06  02F8               	subwf	___lldiv@dividend+2,f
  7642  1E07  0875               	movf	___lldiv@divisor+3,w
  7643  1E08  1C03               	skipc
  7644  1E09  0F75               	incfsz	___lldiv@divisor+3,w
  7645  1E0A  02F9               	subwf	___lldiv@dividend+3,f
  7646  1E0B                     l2330:
  7647  1E0B  1420               	bsf	___lldiv@quotient,0
  7648  1E0C                     l2332:
  7649  1E0C  3001               	movlw	1
  7650  1E0D                     u2985:
  7651  1E0D  1003               	clrc
  7652  1E0E  0CF5               	rrf	___lldiv@divisor+3,f
  7653  1E0F  0CF4               	rrf	___lldiv@divisor+2,f
  7654  1E10  0CF3               	rrf	___lldiv@divisor+1,f
  7655  1E11  0CF2               	rrf	___lldiv@divisor,f
  7656  1E12  3EFF               	addlw	-1
  7657  1E13  1D03               	skipz
  7658  1E14  2E0D               	goto	u2985
  7659  1E15                     l2334:
  7660  1E15  3001               	movlw	1
  7661  1E16  02A4               	subwf	___lldiv@counter,f
  7662  1E17  1D03               	btfss	3,2
  7663  1E18  2E1A               	goto	u2991
  7664  1E19  2E1B               	goto	u2990
  7665  1E1A                     u2991:
  7666  1E1A  2DE2               	goto	l2324
  7667  1E1B                     u2990:
  7668  1E1B                     l2336:
  7669  1E1B  0823               	movf	___lldiv@quotient+3,w
  7670  1E1C  00F5               	movwf	?___lldiv+3
  7671  1E1D  0822               	movf	___lldiv@quotient+2,w
  7672  1E1E  00F4               	movwf	?___lldiv+2
  7673  1E1F  0821               	movf	___lldiv@quotient+1,w
  7674  1E20  00F3               	movwf	?___lldiv+1
  7675  1E21  0820               	movf	___lldiv@quotient,w
  7676  1E22  00F2               	movwf	?___lldiv
  7677  1E23                     l431:
  7678  1E23  0008               	return
  7679  1E24                     __end_of___lldiv:
  7680                           
  7681                           	psect	text24
  7682  1AF9                     __ptext24:	
  7683 ;; *************** function _send_crct *****************
  7684 ;; Defined at:
  7685 ;;		line 165 in file "maestro.c"
  7686 ;; Parameters:    Size  Location     Type
  7687 ;;  st              1    wreg     PTR unsigned char 
  7688 ;;		 -> f1(10), 
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;  st              1    6[COMMON] PTR unsigned char 
  7691 ;;		 -> f1(10), 
  7692 ;;  i               2    4[COMMON] int 
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  1    wreg      void 
  7695 ;; Registers used:
  7696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7702 ;;      Params:         0       0       0       0       0
  7703 ;;      Locals:         3       0       0       0       0
  7704 ;;      Temps:          1       0       0       0       0
  7705 ;;      Totals:         4       0       0       0       0
  7706 ;;Total ram usage:        4 bytes
  7707 ;; Hardware stack levels used:    1
  7708 ;; Hardware stack levels required when called:    2
  7709 ;; This function calls:
  7710 ;;		_send_char
  7711 ;; This function is called by:
  7712 ;;		_main
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           
  7717                           ;psect for function _send_crct
  7718  1AF9                     _send_crct:
  7719                           
  7720                           ;incstack = 0
  7721                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7722                           ;send_crct@st stored from wreg
  7723  1AF9  00F6               	movwf	send_crct@st
  7724  1AFA                     l3526:
  7725                           
  7726                           ;maestro.c: 166:     int i = 0;
  7727  1AFA  01F4               	clrf	send_crct@i
  7728  1AFB  01F5               	clrf	send_crct@i+1
  7729                           
  7730                           ;maestro.c: 167:     while (st[i] != 0){
  7731  1AFC  2B0E               	goto	l3532
  7732  1AFD                     l3528:
  7733                           
  7734                           ;maestro.c: 168:         send_char(st[i]);
  7735  1AFD  0874               	movf	send_crct@i,w
  7736  1AFE  0776               	addwf	send_crct@st,w
  7737  1AFF  00F3               	movwf	??_send_crct
  7738  1B00  0873               	movf	??_send_crct,w
  7739  1B01  0084               	movwf	4
  7740  1B02  0800               	movf	0,w
  7741  1B03  160A  158A  22BC  160A  158A  	fcall	_send_char
  7742  1B08                     l3530:
  7743                           
  7744                           ;maestro.c: 169:         i++;
  7745  1B08  3001               	movlw	1
  7746  1B09  07F4               	addwf	send_crct@i,f
  7747  1B0A  1803               	skipnc
  7748  1B0B  0AF5               	incf	send_crct@i+1,f
  7749  1B0C  3000               	movlw	0
  7750  1B0D  07F5               	addwf	send_crct@i+1,f
  7751  1B0E                     l3532:
  7752                           
  7753                           ;maestro.c: 167:     while (st[i] != 0){
  7754  1B0E  0874               	movf	send_crct@i,w
  7755  1B0F  0776               	addwf	send_crct@st,w
  7756  1B10  00F3               	movwf	??_send_crct
  7757  1B11  0873               	movf	??_send_crct,w
  7758  1B12  0084               	movwf	4
  7759  1B13  1383               	bcf	3,7	;select IRP bank0
  7760  1B14  0800               	movf	0,w
  7761  1B15  1D03               	btfss	3,2
  7762  1B16  2B18               	goto	u5721
  7763  1B17  2B19               	goto	u5720
  7764  1B18                     u5721:
  7765  1B18  2AFD               	goto	l3528
  7766  1B19                     u5720:
  7767  1B19                     l175:
  7768  1B19  0008               	return
  7769  1B1A                     __end_of_send_crct:
  7770                           
  7771                           	psect	text25
  7772  1ABC                     __ptext25:	
  7773 ;; *************** function _send_char *****************
  7774 ;; Defined at:
  7775 ;;		line 172 in file "maestro.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  dato            1    wreg     unsigned char 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  dato            1    2[COMMON] unsigned char 
  7780 ;; Return value:  Size  Location     Type
  7781 ;;                  1    wreg      void 
  7782 ;; Registers used:
  7783 ;;		wreg
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7789 ;;      Params:         0       0       0       0       0
  7790 ;;      Locals:         1       0       0       0       0
  7791 ;;      Temps:          0       0       0       0       0
  7792 ;;      Totals:         1       0       0       0       0
  7793 ;;Total ram usage:        1 bytes
  7794 ;; Hardware stack levels used:    1
  7795 ;; Hardware stack levels required when called:    1
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_send_crct
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           
  7804                           ;psect for function _send_char
  7805  1ABC                     _send_char:
  7806                           
  7807                           ;incstack = 0
  7808                           ; Regs used in _send_char: [wreg]
  7809                           ;send_char@dato stored from wreg
  7810  1ABC  00F2               	movwf	send_char@dato
  7811  1ABD                     l2820:
  7812  1ABD                     l178:	
  7813                           ;maestro.c: 173:     while(!TXIF);
  7814                           
  7815  1ABD  1283               	bcf	3,5	;RP0=0, select bank0
  7816  1ABE  1303               	bcf	3,6	;RP1=0, select bank0
  7817  1ABF  1E0C               	btfss	12,4	;volatile
  7818  1AC0  2AC2               	goto	u4181
  7819  1AC1  2AC3               	goto	u4180
  7820  1AC2                     u4181:
  7821  1AC2  2ABD               	goto	l178
  7822  1AC3                     u4180:
  7823  1AC3                     l2822:
  7824                           
  7825                           ;maestro.c: 174:     TXREG = dato;
  7826  1AC3  0872               	movf	send_char@dato,w
  7827  1AC4  0099               	movwf	25	;volatile
  7828  1AC5                     l181:
  7829  1AC5  0008               	return
  7830  1AC6                     __end_of_send_char:
  7831                           
  7832                           	psect	text26
  7833  0801                     __ptext26:	
  7834 ;; *************** function _conv *****************
  7835 ;; Defined at:
  7836 ;;		line 160 in file "maestro.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;  aa              1    wreg     unsigned char 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  aa              1   18[BANK0 ] unsigned char 
  7841 ;;  result          4   14[BANK0 ] float 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  4    6[BANK0 ] float 
  7844 ;; Registers used:
  7845 ;;		wreg, status,2, status,0, pclath, cstack
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7851 ;;      Params:         0       4       0       0       0
  7852 ;;      Locals:         0       5       0       0       0
  7853 ;;      Temps:          0       4       0       0       0
  7854 ;;      Totals:         0      13       0       0       0
  7855 ;;Total ram usage:       13 bytes
  7856 ;; Hardware stack levels used:    1
  7857 ;; Hardware stack levels required when called:    2
  7858 ;; This function calls:
  7859 ;;		___xxtofl
  7860 ;; This function is called by:
  7861 ;;		_main
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           
  7866                           ;psect for function _conv
  7867  0801                     _conv:
  7868                           
  7869                           ;incstack = 0
  7870                           ; Regs used in _conv: [wreg+status,2+status,0+pclath+cstack]
  7871                           ;conv@aa stored from wreg
  7872  0801  1283               	bcf	3,5	;RP0=0, select bank0
  7873  0802  1303               	bcf	3,6	;RP1=0, select bank0
  7874  0803  00B2               	movwf	conv@aa
  7875  0804                     l3214:
  7876                           
  7877                           ;maestro.c: 161:     float result;;maestro.c: 162:     result = aa*1;
  7878  0804  0832               	movf	conv@aa,w
  7879  0805  00AA               	movwf	??_conv
  7880  0806  01AB               	clrf	??_conv+1
  7881  0807  01AC               	clrf	??_conv+2
  7882  0808  01AD               	clrf	??_conv+3
  7883  0809  082D               	movf	??_conv+3,w
  7884  080A  00F5               	movwf	___xxtofl@val+3
  7885  080B  082C               	movf	??_conv+2,w
  7886  080C  00F4               	movwf	___xxtofl@val+2
  7887  080D  082B               	movf	??_conv+1,w
  7888  080E  00F3               	movwf	___xxtofl@val+1
  7889  080F  082A               	movf	??_conv,w
  7890  0810  00F2               	movwf	___xxtofl@val
  7891  0811  3001               	movlw	1
  7892  0812  160A  158A  2744  120A  158A  	fcall	___xxtofl
  7893  0817  0875               	movf	?___xxtofl+3,w
  7894  0818  1283               	bcf	3,5	;RP0=0, select bank0
  7895  0819  1303               	bcf	3,6	;RP1=0, select bank0
  7896  081A  00B1               	movwf	conv@result+3
  7897  081B  0874               	movf	?___xxtofl+2,w
  7898  081C  00B0               	movwf	conv@result+2
  7899  081D  0873               	movf	?___xxtofl+1,w
  7900  081E  00AF               	movwf	conv@result+1
  7901  081F  0872               	movf	?___xxtofl,w
  7902  0820  00AE               	movwf	conv@result
  7903  0821                     l3216:
  7904                           
  7905                           ;maestro.c: 163:     return result;
  7906  0821  0831               	movf	conv@result+3,w
  7907  0822  00A9               	movwf	?_conv+3
  7908  0823  0830               	movf	conv@result+2,w
  7909  0824  00A8               	movwf	?_conv+2
  7910  0825  082F               	movf	conv@result+1,w
  7911  0826  00A7               	movwf	?_conv+1
  7912  0827  082E               	movf	conv@result,w
  7913  0828  00A6               	movwf	?_conv
  7914  0829                     l169:
  7915  0829  0008               	return
  7916  082A                     __end_of_conv:
  7917                           
  7918                           	psect	text27
  7919  1F44                     __ptext27:	
  7920 ;; *************** function ___xxtofl *****************
  7921 ;; Defined at:
  7922 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  sign            1    wreg     unsigned char 
  7925 ;;  val             4    2[COMMON] long 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;  sign            1    0[BANK0 ] unsigned char 
  7928 ;;  arg             4    2[BANK0 ] unsigned long 
  7929 ;;  exp             1    1[BANK0 ] unsigned char 
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  4    2[COMMON] unsigned char 
  7932 ;; Registers used:
  7933 ;;		wreg, status,2, status,0
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7939 ;;      Params:         4       0       0       0       0
  7940 ;;      Locals:         0       6       0       0       0
  7941 ;;      Temps:          4       0       0       0       0
  7942 ;;      Totals:         8       6       0       0       0
  7943 ;;Total ram usage:       14 bytes
  7944 ;; Hardware stack levels used:    1
  7945 ;; Hardware stack levels required when called:    1
  7946 ;; This function calls:
  7947 ;;		Nothing
  7948 ;; This function is called by:
  7949 ;;		_conv
  7950 ;;		_sprintf
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954                           
  7955                           ;psect for function ___xxtofl
  7956  1F44                     ___xxtofl:
  7957                           
  7958                           ;incstack = 0
  7959                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7960                           ;___xxtofl@sign stored from wreg
  7961  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  7962  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  7963  1F46  00A0               	movwf	___xxtofl@sign
  7964  1F47                     l3114:
  7965  1F47  0820               	movf	___xxtofl@sign,w
  7966  1F48  1903               	btfsc	3,2
  7967  1F49  2F4B               	goto	u5031
  7968  1F4A  2F4C               	goto	u5030
  7969  1F4B                     u5031:
  7970  1F4B  2F60               	goto	l3120
  7971  1F4C                     u5030:
  7972  1F4C                     l3116:
  7973  1F4C  1FF5               	btfss	___xxtofl@val+3,7
  7974  1F4D  2F4F               	goto	u5041
  7975  1F4E  2F50               	goto	u5040
  7976  1F4F                     u5041:
  7977  1F4F  2F60               	goto	l3120
  7978  1F50                     u5040:
  7979  1F50                     l3118:
  7980  1F50  0972               	comf	___xxtofl@val,w
  7981  1F51  00A2               	movwf	___xxtofl@arg
  7982  1F52  0973               	comf	___xxtofl@val+1,w
  7983  1F53  00A3               	movwf	___xxtofl@arg+1
  7984  1F54  0974               	comf	___xxtofl@val+2,w
  7985  1F55  00A4               	movwf	___xxtofl@arg+2
  7986  1F56  0975               	comf	___xxtofl@val+3,w
  7987  1F57  00A5               	movwf	___xxtofl@arg+3
  7988  1F58  0AA2               	incf	___xxtofl@arg,f
  7989  1F59  1903               	skipnz
  7990  1F5A  0AA3               	incf	___xxtofl@arg+1,f
  7991  1F5B  1903               	skipnz
  7992  1F5C  0AA4               	incf	___xxtofl@arg+2,f
  7993  1F5D  1903               	skipnz
  7994  1F5E  0AA5               	incf	___xxtofl@arg+3,f
  7995  1F5F  2F68               	goto	l862
  7996  1F60                     l3120:
  7997  1F60  0875               	movf	___xxtofl@val+3,w
  7998  1F61  00A5               	movwf	___xxtofl@arg+3
  7999  1F62  0874               	movf	___xxtofl@val+2,w
  8000  1F63  00A4               	movwf	___xxtofl@arg+2
  8001  1F64  0873               	movf	___xxtofl@val+1,w
  8002  1F65  00A3               	movwf	___xxtofl@arg+1
  8003  1F66  0872               	movf	___xxtofl@val,w
  8004  1F67  00A2               	movwf	___xxtofl@arg
  8005  1F68                     l862:
  8006  1F68  0875               	movf	___xxtofl@val+3,w
  8007  1F69  0474               	iorwf	___xxtofl@val+2,w
  8008  1F6A  0473               	iorwf	___xxtofl@val+1,w
  8009  1F6B  0472               	iorwf	___xxtofl@val,w
  8010  1F6C  1D03               	skipz
  8011  1F6D  2F6F               	goto	u5051
  8012  1F6E  2F70               	goto	u5050
  8013  1F6F                     u5051:
  8014  1F6F  2F79               	goto	l3126
  8015  1F70                     u5050:
  8016  1F70                     l3122:
  8017  1F70  3000               	movlw	0
  8018  1F71  00F5               	movwf	?___xxtofl+3
  8019  1F72  3000               	movlw	0
  8020  1F73  00F4               	movwf	?___xxtofl+2
  8021  1F74  3000               	movlw	0
  8022  1F75  00F3               	movwf	?___xxtofl+1
  8023  1F76  3000               	movlw	0
  8024  1F77  00F2               	movwf	?___xxtofl
  8025  1F78  2FFF               	goto	l864
  8026  1F79                     l3126:
  8027  1F79  3096               	movlw	150
  8028  1F7A  00F6               	movwf	??___xxtofl
  8029  1F7B  0876               	movf	??___xxtofl,w
  8030  1F7C  00A1               	movwf	___xxtofl@exp
  8031  1F7D  2F8B               	goto	l3130
  8032  1F7E                     l3128:
  8033  1F7E  3001               	movlw	1
  8034  1F7F  00F6               	movwf	??___xxtofl
  8035  1F80  0876               	movf	??___xxtofl,w
  8036  1F81  07A1               	addwf	___xxtofl@exp,f
  8037  1F82  3001               	movlw	1
  8038  1F83                     u5065:
  8039  1F83  1003               	clrc
  8040  1F84  0CA5               	rrf	___xxtofl@arg+3,f
  8041  1F85  0CA4               	rrf	___xxtofl@arg+2,f
  8042  1F86  0CA3               	rrf	___xxtofl@arg+1,f
  8043  1F87  0CA2               	rrf	___xxtofl@arg,f
  8044  1F88  3EFF               	addlw	-1
  8045  1F89  1D03               	skipz
  8046  1F8A  2F83               	goto	u5065
  8047  1F8B                     l3130:
  8048  1F8B  30FE               	movlw	254
  8049  1F8C  0525               	andwf	___xxtofl@arg+3,w
  8050  1F8D  1D03               	btfss	3,2
  8051  1F8E  2F90               	goto	u5071
  8052  1F8F  2F91               	goto	u5070
  8053  1F90                     u5071:
  8054  1F90  2F7E               	goto	l3128
  8055  1F91                     u5070:
  8056  1F91  2FAD               	goto	l868
  8057  1F92                     l3132:
  8058  1F92  3001               	movlw	1
  8059  1F93  00F6               	movwf	??___xxtofl
  8060  1F94  0876               	movf	??___xxtofl,w
  8061  1F95  07A1               	addwf	___xxtofl@exp,f
  8062  1F96                     l3134:
  8063  1F96  3001               	movlw	1
  8064  1F97  07A2               	addwf	___xxtofl@arg,f
  8065  1F98  3000               	movlw	0
  8066  1F99  1803               	skipnc
  8067  1F9A  3001               	movlw	1
  8068  1F9B  07A3               	addwf	___xxtofl@arg+1,f
  8069  1F9C  3000               	movlw	0
  8070  1F9D  1803               	skipnc
  8071  1F9E  3001               	movlw	1
  8072  1F9F  07A4               	addwf	___xxtofl@arg+2,f
  8073  1FA0  3000               	movlw	0
  8074  1FA1  1803               	skipnc
  8075  1FA2  3001               	movlw	1
  8076  1FA3  07A5               	addwf	___xxtofl@arg+3,f
  8077  1FA4                     l3136:
  8078  1FA4  3001               	movlw	1
  8079  1FA5                     u5085:
  8080  1FA5  1003               	clrc
  8081  1FA6  0CA5               	rrf	___xxtofl@arg+3,f
  8082  1FA7  0CA4               	rrf	___xxtofl@arg+2,f
  8083  1FA8  0CA3               	rrf	___xxtofl@arg+1,f
  8084  1FA9  0CA2               	rrf	___xxtofl@arg,f
  8085  1FAA  3EFF               	addlw	-1
  8086  1FAB  1D03               	skipz
  8087  1FAC  2FA5               	goto	u5085
  8088  1FAD                     l868:
  8089  1FAD  30FF               	movlw	255
  8090  1FAE  0525               	andwf	___xxtofl@arg+3,w
  8091  1FAF  1D03               	btfss	3,2
  8092  1FB0  2FB2               	goto	u5091
  8093  1FB1  2FB3               	goto	u5090
  8094  1FB2                     u5091:
  8095  1FB2  2F92               	goto	l3132
  8096  1FB3                     u5090:
  8097  1FB3  2FBF               	goto	l3140
  8098  1FB4                     l3138:
  8099  1FB4  3001               	movlw	1
  8100  1FB5  02A1               	subwf	___xxtofl@exp,f
  8101  1FB6  3001               	movlw	1
  8102  1FB7  00F6               	movwf	??___xxtofl
  8103  1FB8                     u5105:
  8104  1FB8  1003               	clrc
  8105  1FB9  0DA2               	rlf	___xxtofl@arg,f
  8106  1FBA  0DA3               	rlf	___xxtofl@arg+1,f
  8107  1FBB  0DA4               	rlf	___xxtofl@arg+2,f
  8108  1FBC  0DA5               	rlf	___xxtofl@arg+3,f
  8109  1FBD  0BF6               	decfsz	??___xxtofl,f
  8110  1FBE  2FB8               	goto	u5105
  8111  1FBF                     l3140:
  8112  1FBF  1BA4               	btfsc	___xxtofl@arg+2,7
  8113  1FC0  2FC2               	goto	u5111
  8114  1FC1  2FC3               	goto	u5110
  8115  1FC2                     u5111:
  8116  1FC2  2FC9               	goto	l875
  8117  1FC3                     u5110:
  8118  1FC3                     l3142:
  8119  1FC3  3002               	movlw	2
  8120  1FC4  0221               	subwf	___xxtofl@exp,w
  8121  1FC5  1803               	skipnc
  8122  1FC6  2FC8               	goto	u5121
  8123  1FC7  2FC9               	goto	u5120
  8124  1FC8                     u5121:
  8125  1FC8  2FB4               	goto	l3138
  8126  1FC9                     u5120:
  8127  1FC9                     l875:
  8128  1FC9  1821               	btfsc	___xxtofl@exp,0
  8129  1FCA  2FCC               	goto	u5131
  8130  1FCB  2FCD               	goto	u5130
  8131  1FCC                     u5131:
  8132  1FCC  2FD5               	goto	l876
  8133  1FCD                     u5130:
  8134  1FCD                     l3144:
  8135  1FCD  30FF               	movlw	255
  8136  1FCE  05A2               	andwf	___xxtofl@arg,f
  8137  1FCF  30FF               	movlw	255
  8138  1FD0  05A3               	andwf	___xxtofl@arg+1,f
  8139  1FD1  307F               	movlw	127
  8140  1FD2  05A4               	andwf	___xxtofl@arg+2,f
  8141  1FD3  30FF               	movlw	255
  8142  1FD4  05A5               	andwf	___xxtofl@arg+3,f
  8143  1FD5                     l876:
  8144  1FD5  1003               	clrc
  8145  1FD6  0CA1               	rrf	___xxtofl@exp,f
  8146  1FD7                     l3146:
  8147  1FD7  0821               	movf	___xxtofl@exp,w
  8148  1FD8  00F6               	movwf	??___xxtofl
  8149  1FD9  01F7               	clrf	??___xxtofl+1
  8150  1FDA  01F8               	clrf	??___xxtofl+2
  8151  1FDB  01F9               	clrf	??___xxtofl+3
  8152  1FDC  3018               	movlw	24
  8153  1FDD                     u5145:
  8154  1FDD  1003               	clrc
  8155  1FDE  0DF6               	rlf	??___xxtofl,f
  8156  1FDF  0DF7               	rlf	??___xxtofl+1,f
  8157  1FE0  0DF8               	rlf	??___xxtofl+2,f
  8158  1FE1  0DF9               	rlf	??___xxtofl+3,f
  8159  1FE2                     u5140:
  8160  1FE2  3EFF               	addlw	-1
  8161  1FE3  1D03               	skipz
  8162  1FE4  2FDD               	goto	u5145
  8163  1FE5  0876               	movf	??___xxtofl,w
  8164  1FE6  04A2               	iorwf	___xxtofl@arg,f
  8165  1FE7  0877               	movf	??___xxtofl+1,w
  8166  1FE8  04A3               	iorwf	___xxtofl@arg+1,f
  8167  1FE9  0878               	movf	??___xxtofl+2,w
  8168  1FEA  04A4               	iorwf	___xxtofl@arg+2,f
  8169  1FEB  0879               	movf	??___xxtofl+3,w
  8170  1FEC  04A5               	iorwf	___xxtofl@arg+3,f
  8171  1FED                     l3148:
  8172  1FED  0820               	movf	___xxtofl@sign,w
  8173  1FEE  1903               	btfsc	3,2
  8174  1FEF  2FF1               	goto	u5151
  8175  1FF0  2FF2               	goto	u5150
  8176  1FF1                     u5151:
  8177  1FF1  2FF7               	goto	l3154
  8178  1FF2                     u5150:
  8179  1FF2                     l3150:
  8180  1FF2  1FF5               	btfss	___xxtofl@val+3,7
  8181  1FF3  2FF5               	goto	u5161
  8182  1FF4  2FF6               	goto	u5160
  8183  1FF5                     u5161:
  8184  1FF5  2FF7               	goto	l3154
  8185  1FF6                     u5160:
  8186  1FF6                     l3152:
  8187  1FF6  17A5               	bsf	___xxtofl@arg+3,7
  8188  1FF7                     l3154:
  8189  1FF7  0825               	movf	___xxtofl@arg+3,w
  8190  1FF8  00F5               	movwf	?___xxtofl+3
  8191  1FF9  0824               	movf	___xxtofl@arg+2,w
  8192  1FFA  00F4               	movwf	?___xxtofl+2
  8193  1FFB  0823               	movf	___xxtofl@arg+1,w
  8194  1FFC  00F3               	movwf	?___xxtofl+1
  8195  1FFD  0822               	movf	___xxtofl@arg,w
  8196  1FFE  00F2               	movwf	?___xxtofl
  8197  1FFF                     l864:
  8198  1FFF  0008               	return
  8199  2000                     __end_of___xxtofl:
  8200                           
  8201                           	psect	text28
  8202  100B                     __ptext28:	
  8203 ;; *************** function _cfg_usart *****************
  8204 ;; Defined at:
  8205 ;;		line 142 in file "maestro.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;		None
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;		None
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  1    wreg      void 
  8212 ;; Registers used:
  8213 ;;		wreg, status,2
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8219 ;;      Params:         0       0       0       0       0
  8220 ;;      Locals:         0       0       0       0       0
  8221 ;;      Temps:          0       0       0       0       0
  8222 ;;      Totals:         0       0       0       0       0
  8223 ;;Total ram usage:        0 bytes
  8224 ;; Hardware stack levels used:    1
  8225 ;; Hardware stack levels required when called:    1
  8226 ;; This function calls:
  8227 ;;		Nothing
  8228 ;; This function is called by:
  8229 ;;		_main
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           
  8234                           ;psect for function _cfg_usart
  8235  100B                     _cfg_usart:
  8236  100B                     l3200:	
  8237                           ;incstack = 0
  8238                           ; Regs used in _cfg_usart: [wreg+status,2]
  8239                           
  8240                           
  8241                           ;maestro.c: 143:     TXSTAbits.SYNC = 0;
  8242  100B  1683               	bsf	3,5	;RP0=1, select bank1
  8243  100C  1303               	bcf	3,6	;RP1=0, select bank1
  8244  100D  1218               	bcf	24,4	;volatile
  8245                           
  8246                           ;maestro.c: 144:     TXSTAbits.BRGH = 1;
  8247  100E  1518               	bsf	24,2	;volatile
  8248                           
  8249                           ;maestro.c: 146:     BAUDCTLbits.BRG16 = 1;
  8250  100F  1683               	bsf	3,5	;RP0=1, select bank3
  8251  1010  1703               	bsf	3,6	;RP1=1, select bank3
  8252  1011  1587               	bsf	7,3	;volatile
  8253  1012                     l3202:
  8254                           
  8255                           ;maestro.c: 148:     SPBRG = 103;
  8256  1012  3067               	movlw	103
  8257  1013  1683               	bsf	3,5	;RP0=1, select bank1
  8258  1014  1303               	bcf	3,6	;RP1=0, select bank1
  8259  1015  0099               	movwf	25	;volatile
  8260  1016                     l3204:
  8261                           
  8262                           ;maestro.c: 149:     SPBRGH = 0;
  8263  1016  019A               	clrf	26	;volatile
  8264  1017                     l3206:
  8265                           
  8266                           ;maestro.c: 151:     RCSTAbits.SPEN = 1;
  8267  1017  1283               	bcf	3,5	;RP0=0, select bank0
  8268  1018  1303               	bcf	3,6	;RP1=0, select bank0
  8269  1019  1798               	bsf	24,7	;volatile
  8270  101A                     l3208:
  8271                           
  8272                           ;maestro.c: 152:     RCSTAbits.RX9 = 0;
  8273  101A  1318               	bcf	24,6	;volatile
  8274  101B                     l3210:
  8275                           
  8276                           ;maestro.c: 153:     RCSTAbits.CREN = 1;
  8277  101B  1618               	bsf	24,4	;volatile
  8278  101C                     l3212:
  8279                           
  8280                           ;maestro.c: 155:     TXSTAbits.TXEN = 1;
  8281  101C  1683               	bsf	3,5	;RP0=1, select bank1
  8282  101D  1303               	bcf	3,6	;RP1=0, select bank1
  8283  101E  1698               	bsf	24,5	;volatile
  8284  101F                     l166:
  8285  101F  0008               	return
  8286  1020                     __end_of_cfg_usart:
  8287                           
  8288                           	psect	text29
  8289  1A90                     __ptext29:	
  8290 ;; *************** function _cfg_clk *****************
  8291 ;; Defined at:
  8292 ;;		line 138 in file "maestro.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;		None
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;		None
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1    wreg      void 
  8299 ;; Registers used:
  8300 ;;		wreg, status,2, status,0
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8306 ;;      Params:         0       0       0       0       0
  8307 ;;      Locals:         0       0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0
  8309 ;;      Totals:         0       0       0       0       0
  8310 ;;Total ram usage:        0 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:    1
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_main
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           
  8321                           ;psect for function _cfg_clk
  8322  1A90                     _cfg_clk:
  8323  1A90                     l3196:	
  8324                           ;incstack = 0
  8325                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  8326                           
  8327                           
  8328                           ;maestro.c: 139:     OSCCONbits.IRCF = 0b110;
  8329  1A90  1683               	bsf	3,5	;RP0=1, select bank1
  8330  1A91  1303               	bcf	3,6	;RP1=0, select bank1
  8331  1A92  080F               	movf	15,w	;volatile
  8332  1A93  398F               	andlw	-113
  8333  1A94  3860               	iorlw	96
  8334  1A95  008F               	movwf	15	;volatile
  8335  1A96                     l3198:
  8336                           
  8337                           ;maestro.c: 140:     OSCCONbits.SCS = 1;
  8338  1A96  140F               	bsf	15,0	;volatile
  8339  1A97                     l163:
  8340  1A97  0008               	return
  8341  1A98                     __end_of_cfg_clk:
  8342                           
  8343                           	psect	text30
  8344  1AB2                     __ptext30:	
  8345 ;; *************** function _I2C_Master_Write *****************
  8346 ;; Defined at:
  8347 ;;		line 68 in file "I2C.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  d               2    2[COMMON] unsigned int 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg, status,2, status,0, pclath, cstack
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8361 ;;      Params:         2       0       0       0       0
  8362 ;;      Locals:         0       0       0       0       0
  8363 ;;      Temps:          0       0       0       0       0
  8364 ;;      Totals:         2       0       0       0       0
  8365 ;;Total ram usage:        2 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:    2
  8368 ;; This function calls:
  8369 ;;		_I2C_Master_Wait
  8370 ;; This function is called by:
  8371 ;;		_main
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           
  8376                           ;psect for function _I2C_Master_Write
  8377  1AB2                     _I2C_Master_Write:
  8378  1AB2                     l3166:	
  8379                           ;incstack = 0
  8380                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8381                           
  8382                           
  8383                           ;I2C.c: 68: void I2C_Master_Write(unsigned d);I2C.c: 69: {;I2C.c: 70:     I2C_Master_Wai
      +                          t();
  8384  1AB2  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8385  1AB7                     l3168:
  8386                           
  8387                           ;I2C.c: 71:     SSPBUF = d;
  8388  1AB7  0872               	movf	I2C_Master_Write@d,w
  8389  1AB8  1283               	bcf	3,5	;RP0=0, select bank0
  8390  1AB9  1303               	bcf	3,6	;RP1=0, select bank0
  8391  1ABA  0093               	movwf	19	;volatile
  8392  1ABB                     l47:
  8393  1ABB  0008               	return
  8394  1ABC                     __end_of_I2C_Master_Write:
  8395                           
  8396                           	psect	text31
  8397  1AA9                     __ptext31:	
  8398 ;; *************** function _I2C_Master_Stop *****************
  8399 ;; Defined at:
  8400 ;;		line 58 in file "I2C.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;		None
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;		None
  8405 ;; Return value:  Size  Location     Type
  8406 ;;                  1    wreg      void 
  8407 ;; Registers used:
  8408 ;;		wreg, status,2, status,0, pclath, cstack
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8414 ;;      Params:         0       0       0       0       0
  8415 ;;      Locals:         0       0       0       0       0
  8416 ;;      Temps:          0       0       0       0       0
  8417 ;;      Totals:         0       0       0       0       0
  8418 ;;Total ram usage:        0 bytes
  8419 ;; Hardware stack levels used:    1
  8420 ;; Hardware stack levels required when called:    2
  8421 ;; This function calls:
  8422 ;;		_I2C_Master_Wait
  8423 ;; This function is called by:
  8424 ;;		_main
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           
  8429                           ;psect for function _I2C_Master_Stop
  8430  1AA9                     _I2C_Master_Stop:
  8431  1AA9                     l3162:	
  8432                           ;incstack = 0
  8433                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8434                           
  8435                           
  8436                           ;I2C.c: 60:     I2C_Master_Wait();
  8437  1AA9  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8438  1AAE                     l3164:
  8439                           
  8440                           ;I2C.c: 61:     SSPCON2bits.PEN = 1;
  8441  1AAE  1683               	bsf	3,5	;RP0=1, select bank1
  8442  1AAF  1303               	bcf	3,6	;RP1=0, select bank1
  8443  1AB0  1511               	bsf	17,2	;volatile
  8444  1AB1                     l44:
  8445  1AB1  0008               	return
  8446  1AB2                     __end_of_I2C_Master_Stop:
  8447                           
  8448                           	psect	text32
  8449  1AA0                     __ptext32:	
  8450 ;; *************** function _I2C_Master_Start *****************
  8451 ;; Defined at:
  8452 ;;		line 42 in file "I2C.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1    wreg      void 
  8459 ;; Registers used:
  8460 ;;		wreg, status,2, status,0, pclath, cstack
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8466 ;;      Params:         0       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0
  8468 ;;      Temps:          0       0       0       0       0
  8469 ;;      Totals:         0       0       0       0       0
  8470 ;;Total ram usage:        0 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; Hardware stack levels required when called:    2
  8473 ;; This function calls:
  8474 ;;		_I2C_Master_Wait
  8475 ;; This function is called by:
  8476 ;;		_main
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           
  8481                           ;psect for function _I2C_Master_Start
  8482  1AA0                     _I2C_Master_Start:
  8483  1AA0                     l3158:	
  8484                           ;incstack = 0
  8485                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8486                           
  8487                           
  8488                           ;I2C.c: 44:     I2C_Master_Wait();
  8489  1AA0  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8490  1AA5                     l3160:
  8491                           
  8492                           ;I2C.c: 45:     SSPCON2bits.SEN = 1;
  8493  1AA5  1683               	bsf	3,5	;RP0=1, select bank1
  8494  1AA6  1303               	bcf	3,6	;RP1=0, select bank1
  8495  1AA7  1411               	bsf	17,0	;volatile
  8496  1AA8                     l38:
  8497  1AA8  0008               	return
  8498  1AA9                     __end_of_I2C_Master_Start:
  8499                           
  8500                           	psect	text33
  8501  1B87                     __ptext33:	
  8502 ;; *************** function _I2C_Master_Read *****************
  8503 ;; Defined at:
  8504 ;;		line 77 in file "I2C.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  a               2    2[COMMON] unsigned short 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;  temp            2    6[COMMON] unsigned short 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  2    2[COMMON] unsigned short 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2, status,0, pclath, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8518 ;;      Params:         2       0       0       0       0
  8519 ;;      Locals:         2       0       0       0       0
  8520 ;;      Temps:          2       0       0       0       0
  8521 ;;      Totals:         6       0       0       0       0
  8522 ;;Total ram usage:        6 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    2
  8525 ;; This function calls:
  8526 ;;		_I2C_Master_Wait
  8527 ;; This function is called by:
  8528 ;;		_main
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           
  8533                           ;psect for function _I2C_Master_Read
  8534  1B87                     _I2C_Master_Read:
  8535  1B87                     l3170:	
  8536                           ;incstack = 0
  8537                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  8538                           
  8539                           
  8540                           ;I2C.c: 77: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 78: {;I2C.c: 79:    
      +                           unsigned short temp;;I2C.c: 80:     I2C_Master_Wait();
  8541  1B87  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8542  1B8C                     l3172:
  8543                           
  8544                           ;I2C.c: 81:     SSPCON2bits.RCEN = 1;
  8545  1B8C  1683               	bsf	3,5	;RP0=1, select bank1
  8546  1B8D  1303               	bcf	3,6	;RP1=0, select bank1
  8547  1B8E  1591               	bsf	17,3	;volatile
  8548                           
  8549                           ;I2C.c: 82:     I2C_Master_Wait();
  8550  1B8F  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8551  1B94                     l3174:
  8552                           
  8553                           ;I2C.c: 83:     temp = SSPBUF;
  8554  1B94  1283               	bcf	3,5	;RP0=0, select bank0
  8555  1B95  1303               	bcf	3,6	;RP1=0, select bank0
  8556  1B96  0813               	movf	19,w	;volatile
  8557  1B97  00F4               	movwf	??_I2C_Master_Read
  8558  1B98  01F5               	clrf	??_I2C_Master_Read+1
  8559  1B99  0874               	movf	??_I2C_Master_Read,w
  8560  1B9A  00F6               	movwf	I2C_Master_Read@temp
  8561  1B9B  0875               	movf	??_I2C_Master_Read+1,w
  8562  1B9C  00F7               	movwf	I2C_Master_Read@temp+1
  8563  1B9D                     l3176:
  8564                           
  8565                           ;I2C.c: 84:     I2C_Master_Wait();
  8566  1B9D  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8567  1BA2                     l3178:
  8568                           
  8569                           ;I2C.c: 85:     if(a == 1){
  8570  1BA2  0372               	decf	I2C_Master_Read@a,w
  8571  1BA3  0473               	iorwf	I2C_Master_Read@a+1,w
  8572  1BA4  1D03               	btfss	3,2
  8573  1BA5  2BA7               	goto	u5171
  8574  1BA6  2BA8               	goto	u5170
  8575  1BA7                     u5171:
  8576  1BA7  2BAC               	goto	l50
  8577  1BA8                     u5170:
  8578  1BA8                     l3180:
  8579                           
  8580                           ;I2C.c: 86:         SSPCON2bits.ACKDT = 0;
  8581  1BA8  1683               	bsf	3,5	;RP0=1, select bank1
  8582  1BA9  1303               	bcf	3,6	;RP1=0, select bank1
  8583  1BAA  1291               	bcf	17,5	;volatile
  8584                           
  8585                           ;I2C.c: 87:     }else{
  8586  1BAB  2BAF               	goto	l51
  8587  1BAC                     l50:
  8588                           
  8589                           ;I2C.c: 88:         SSPCON2bits.ACKDT = 1;
  8590  1BAC  1683               	bsf	3,5	;RP0=1, select bank1
  8591  1BAD  1303               	bcf	3,6	;RP1=0, select bank1
  8592  1BAE  1691               	bsf	17,5	;volatile
  8593  1BAF                     l51:	
  8594                           ;I2C.c: 89:     }
  8595                           
  8596                           
  8597                           ;I2C.c: 90:     SSPCON2bits.ACKEN = 1;
  8598  1BAF  1611               	bsf	17,4	;volatile
  8599  1BB0                     l3182:
  8600                           
  8601                           ;I2C.c: 91:     return temp;
  8602  1BB0  0877               	movf	I2C_Master_Read@temp+1,w
  8603  1BB1  00F3               	movwf	?_I2C_Master_Read+1
  8604  1BB2  0876               	movf	I2C_Master_Read@temp,w
  8605  1BB3  00F2               	movwf	?_I2C_Master_Read
  8606  1BB4                     l52:
  8607  1BB4  0008               	return
  8608  1BB5                     __end_of_I2C_Master_Read:
  8609                           
  8610                           	psect	text34
  8611  07F0                     __ptext34:	
  8612 ;; *************** function _I2C_Master_Wait *****************
  8613 ;; Defined at:
  8614 ;;		line 35 in file "I2C.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;		None
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1    wreg      void 
  8621 ;; Registers used:
  8622 ;;		wreg, status,2
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8628 ;;      Params:         0       0       0       0       0
  8629 ;;      Locals:         0       0       0       0       0
  8630 ;;      Temps:          0       0       0       0       0
  8631 ;;      Totals:         0       0       0       0       0
  8632 ;;Total ram usage:        0 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:    1
  8635 ;; This function calls:
  8636 ;;		Nothing
  8637 ;; This function is called by:
  8638 ;;		_I2C_Master_Start
  8639 ;;		_I2C_Master_Stop
  8640 ;;		_I2C_Master_Write
  8641 ;;		_I2C_Master_Read
  8642 ;;		_I2C_Master_RepeatedStart
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           
  8647                           ;psect for function _I2C_Master_Wait
  8648  07F0                     _I2C_Master_Wait:
  8649  07F0                     l2816:	
  8650                           ;incstack = 0
  8651                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8652                           
  8653  07F0                     l32:	
  8654                           ;I2C.c: 37:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8655                           
  8656  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  8657  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  8658  07F2  1914               	btfsc	20,2	;volatile
  8659  07F3  2FF5               	goto	u4161
  8660  07F4  2FF6               	goto	u4160
  8661  07F5                     u4161:
  8662  07F5  2FF0               	goto	l32
  8663  07F6                     u4160:
  8664  07F6                     l2818:
  8665  07F6  0811               	movf	17,w	;volatile
  8666  07F7  391F               	andlw	31
  8667  07F8  1D03               	btfss	3,2
  8668  07F9  2FFB               	goto	u4171
  8669  07FA  2FFC               	goto	u4170
  8670  07FB                     u4171:
  8671  07FB  2FF0               	goto	l32
  8672  07FC                     u4170:
  8673  07FC                     l35:
  8674  07FC  0008               	return
  8675  07FD                     __end_of_I2C_Master_Wait:
  8676                           
  8677                           	psect	text35
  8678  1AD8                     __ptext35:	
  8679 ;; *************** function _isr *****************
  8680 ;; Defined at:
  8681 ;;		line 67 in file "maestro.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;		None
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;		None
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		wreg, status,2, status,0
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8695 ;;      Params:         0       0       0       0       0
  8696 ;;      Locals:         0       0       0       0       0
  8697 ;;      Temps:          2       0       0       0       0
  8698 ;;      Totals:         2       0       0       0       0
  8699 ;;Total ram usage:        2 bytes
  8700 ;; Hardware stack levels used:    1
  8701 ;; This function calls:
  8702 ;;		Nothing
  8703 ;; This function is called by:
  8704 ;;		Interrupt level 1
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           
  8709                           ;psect for function _isr
  8710  1AD8                     _isr:
  8711  1AD8                     i1l3538:
  8712                           
  8713                           ;maestro.c: 69:     if(PIR1bits.RCIF){
  8714  1AD8  1283               	bcf	3,5	;RP0=0, select bank0
  8715  1AD9  1303               	bcf	3,6	;RP1=0, select bank0
  8716  1ADA  1E8C               	btfss	12,5	;volatile
  8717  1ADB  2ADD               	goto	u573_21
  8718  1ADC  2ADE               	goto	u573_20
  8719  1ADD                     u573_21:
  8720  1ADD  2AF2               	goto	i1l147
  8721  1ADE                     u573_20:
  8722  1ADE                     i1l3540:
  8723                           
  8724                           ;maestro.c: 70:         if(RCREG == '1'){
  8725  1ADE  3031               	movlw	49
  8726  1ADF  061A               	xorwf	26,w	;volatile
  8727  1AE0  1D03               	btfss	3,2
  8728  1AE1  2AE3               	goto	u574_21
  8729  1AE2  2AE4               	goto	u574_20
  8730  1AE3                     u574_21:
  8731  1AE3  2AE8               	goto	i1l3544
  8732  1AE4                     u574_20:
  8733  1AE4                     i1l3542:
  8734                           
  8735                           ;maestro.c: 71:             light = 1;
  8736  1AE4  1683               	bsf	3,5	;RP0=1, select bank1
  8737  1AE5  1303               	bcf	3,6	;RP1=0, select bank1
  8738  1AE6  01DF               	clrf	_light^(0+128)
  8739  1AE7  0ADF               	incf	_light^(0+128),f
  8740  1AE8                     i1l3544:
  8741                           
  8742                           ;maestro.c: 73:         if(RCREG == '0'){
  8743  1AE8  3030               	movlw	48
  8744  1AE9  1283               	bcf	3,5	;RP0=0, select bank0
  8745  1AEA  061A               	xorwf	26,w	;volatile
  8746  1AEB  1D03               	btfss	3,2
  8747  1AEC  2AEE               	goto	u575_21
  8748  1AED  2AEF               	goto	u575_20
  8749  1AEE                     u575_21:
  8750  1AEE  2AF2               	goto	i1l147
  8751  1AEF                     u575_20:
  8752  1AEF                     i1l3546:
  8753                           
  8754                           ;maestro.c: 74:             light = 0;
  8755  1AEF  1683               	bsf	3,5	;RP0=1, select bank1
  8756  1AF0  1303               	bcf	3,6	;RP1=0, select bank1
  8757  1AF1  01DF               	clrf	_light^(0+128)
  8758  1AF2                     i1l147:
  8759  1AF2  0871               	movf	??_isr+1,w
  8760  1AF3  008A               	movwf	10
  8761  1AF4  0E70               	swapf	??_isr,w
  8762  1AF5  0083               	movwf	3
  8763  1AF6  0EFE               	swapf	btemp,f
  8764  1AF7  0E7E               	swapf	btemp,w
  8765  1AF8  0009               	retfie
  8766  1AF9                     __end_of_isr:
  8767  007E                     btemp	set	126	;btemp
  8768  007E                     wtemp0	set	126
  8769                           
  8770                           	psect	intentry
  8771  0004                     __pintentry:	
  8772                           ;incstack = 0
  8773                           ; Regs used in _isr: [wreg+status,2+status,0]
  8774                           
  8775  0004                     interrupt_function:
  8776  007E                     saved_w	set	btemp
  8777  0004  00FE               	movwf	btemp
  8778  0005  0E03               	swapf	3,w
  8779  0006  00F0               	movwf	??_isr
  8780  0007  080A               	movf	10,w
  8781  0008  00F1               	movwf	??_isr+1
  8782  0009  160A  158A  2AD8   	ljmp	_isr
  8783                           
  8784                           	psect	config
  8785                           
  8786                           ;Config register CONFIG1 @ 0x2007
  8787                           ;	Oscillator Selection bits
  8788                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8789                           ;	Watchdog Timer Enable bit
  8790                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8791                           ;	Power-up Timer Enable bit
  8792                           ;	PWRTE = OFF, PWRT disabled
  8793                           ;	RE3/MCLR pin function select bit
  8794                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8795                           ;	Code Protection bit
  8796                           ;	CP = OFF, Program memory code protection is disabled
  8797                           ;	Data Code Protection bit
  8798                           ;	CPD = OFF, Data memory code protection is disabled
  8799                           ;	Brown Out Reset Selection bits
  8800                           ;	BOREN = OFF, BOR disabled
  8801                           ;	Internal External Switchover bit
  8802                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8803                           ;	Fail-Safe Clock Monitor Enabled bit
  8804                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8805                           ;	Low Voltage Programming Enable bit
  8806                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8807                           ;	In-Circuit Debugger Mode bit
  8808                           ;	DEBUG = 0x1, unprogrammed default
  8809  2007                     	org	8199
  8810  2007  20D4               	dw	8404
  8811                           
  8812                           ;Config register CONFIG2 @ 0x2008
  8813                           ;	Brown-out Reset Selection bit
  8814                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8815                           ;	Flash Program Memory Self Write Enable bits
  8816                           ;	WRT = OFF, Write protection off
  8817  2008                     	org	8200
  8818  2008  3FFF               	dw	16383
  8819                           
  8820                           	psect	text1_split_1
  8821  1522                     l3746:
  8822                           
  8823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  8824  1522  01CC               	clrf	sprintf@prec^(0+128)
  8825  1523  01CD               	clrf	(sprintf@prec+1)^(0+128)
  8826  1524                     l3748:
  8827                           
  8828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  8829  1524  1645               	bsf	(sprintf@flag^(0+128)+1),4
  8830  1525  2D2A               	goto	l3752
  8831  1526                     l318:	
  8832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  8833                           
  8834                           
  8835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  8836  1526  1683               	bsf	3,5	;RP0=1, select bank1
  8837  1527  1303               	bcf	3,6	;RP1=0, select bank1
  8838  1528  1545               	bsf	(sprintf@flag^(0+128)+1),2
  8839                           
  8840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  8841  1529  2D4A               	goto	l3754
  8842  152A                     l3752:
  8843  152A  3001               	movlw	1
  8844  152B  1683               	bsf	3,5	;RP0=1, select bank1
  8845  152C  1303               	bcf	3,6	;RP1=0, select bank1
  8846  152D  07A8               	addwf	sprintf@f^(0+128),f
  8847  152E  30FF               	movlw	-1
  8848  152F  0728               	addwf	sprintf@f^(0+128),w
  8849  1530  0084               	movwf	4
  8850  1531  160A  158A  2000  160A  118A  	fcall	stringdir
  8851  1536  00CF               	movwf	sprintf@c^(0+128)
  8852  1537  1283               	bcf	3,5	;RP0=0, select bank0
  8853  1538  1303               	bcf	3,6	;RP1=0, select bank0
  8854  1539  00EA               	movwf	??_sprintf
  8855  153A  01EB               	clrf	??_sprintf+1
  8856                           
  8857                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8858                           ; Switch size 1, requested type "simple"
  8859                           ; Number of cases is 1, Range of values is 0 to 0
  8860                           ; switch strategies available:
  8861                           ; Name         Instructions Cycles
  8862                           ; simple_byte            4     3 (average)
  8863                           ; direct_byte           11     8 (fixed)
  8864                           ; jumptable            260     6 (fixed)
  8865                           ;	Chosen strategy is simple_byte
  8866  153B  086B               	movf	??_sprintf+1,w
  8867  153C  3A00               	xorlw	0	; case 0
  8868  153D  1903               	skipnz
  8869  153E  2D42               	goto	l4100
  8870  153F                     L4:
  8871  153F  120A  118A  2D59   	goto	l3990
  8872  1542                     l4100:
  8873                           
  8874                           ; Switch size 1, requested type "simple"
  8875                           ; Number of cases is 2, Range of values is 0 to 102
  8876                           ; switch strategies available:
  8877                           ; Name         Instructions Cycles
  8878                           ; simple_byte            7     4 (average)
  8879                           ; jumptable            260     6 (fixed)
  8880                           ;	Chosen strategy is simple_byte
  8881  1542  086A               	movf	??_sprintf,w
  8882  1543  3A00               	xorlw	0	; case 0
  8883  1544  1903               	skipnz
  8884  1545  2FFD               	goto	L3
  8885  1546  3A66               	xorlw	102	; case 102
  8886  1547  1903               	skipnz
  8887  1548  2D26               	goto	l318
  8888  1549  2D3F               	goto	L4
  8889  154A                     l3754:
  8890                           
  8891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  8892  154A  3000               	movlw	0
  8893  154B  0544               	andwf	sprintf@flag^(0+128),w
  8894  154C  1283               	bcf	3,5	;RP0=0, select bank0
  8895  154D  1303               	bcf	3,6	;RP1=0, select bank0
  8896  154E  00EA               	movwf	??_sprintf
  8897  154F  3007               	movlw	7
  8898  1550  1683               	bsf	3,5	;RP0=1, select bank1
  8899  1551  1303               	bcf	3,6	;RP1=0, select bank1
  8900  1552  0545               	andwf	(sprintf@flag+1)^(0+128),w
  8901  1553  1283               	bcf	3,5	;RP0=0, select bank0
  8902  1554  1303               	bcf	3,6	;RP1=0, select bank0
  8903  1555  00EB               	movwf	??_sprintf+1
  8904  1556  086A               	movf	??_sprintf,w
  8905  1557  046B               	iorwf	??_sprintf+1,w
  8906  1558  1903               	btfsc	3,2
  8907  1559  2D5B               	goto	u6051
  8908  155A  2D5E               	goto	u6050
  8909  155B                     u6051:
  8910  155B  120A  118A  2C07   	goto	l3928
  8911  155E                     u6050:
  8912  155E                     l3756:
  8913                           
  8914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  8915  155E  1683               	bsf	3,5	;RP0=1, select bank1
  8916  155F  1303               	bcf	3,6	;RP1=0, select bank1
  8917  1560  1E45               	btfss	(sprintf@flag+1)^(0+128),4
  8918  1561  2D63               	goto	u6061
  8919  1562  2D64               	goto	u6060
  8920  1563                     u6061:
  8921  1563  2D68               	goto	l3760
  8922  1564                     u6060:
  8923  1564                     l3758:
  8924                           
  8925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  8926  1564  3006               	movlw	6
  8927  1565  00CC               	movwf	sprintf@prec^(0+128)
  8928  1566  3000               	movlw	0
  8929  1567  00CD               	movwf	(sprintf@prec^(0+128)+1)
  8930  1568                     l3760:
  8931                           
  8932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  8933  1568  0839               	movf	sprintf@ap^(0+128),w
  8934  1569  0084               	movwf	4
  8935  156A  1383               	bcf	3,7	;select IRP bank0
  8936  156B  0800               	movf	0,w
  8937  156C  00C8               	movwf	sprintf@fval^(0+128)
  8938  156D  0A84               	incf	4,f
  8939  156E  0800               	movf	0,w
  8940  156F  00C9               	movwf	(sprintf@fval+1)^(0+128)
  8941  1570  0A84               	incf	4,f
  8942  1571  0800               	movf	0,w
  8943  1572  00CA               	movwf	(sprintf@fval+2)^(0+128)
  8944  1573  0A84               	incf	4,f
  8945  1574  0800               	movf	0,w
  8946  1575  00CB               	movwf	(sprintf@fval+3)^(0+128)
  8947  1576                     l3762:
  8948  1576  3004               	movlw	4
  8949  1577  1283               	bcf	3,5	;RP0=0, select bank0
  8950  1578  1303               	bcf	3,6	;RP1=0, select bank0
  8951  1579  00EA               	movwf	??_sprintf
  8952  157A  086A               	movf	??_sprintf,w
  8953  157B  1683               	bsf	3,5	;RP0=1, select bank1
  8954  157C  1303               	bcf	3,6	;RP1=0, select bank1
  8955  157D  07B9               	addwf	sprintf@ap^(0+128),f
  8956  157E                     l3764:
  8957                           
  8958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  8959  157E  084B               	movf	(sprintf@fval+3)^(0+128),w
  8960  157F  00F5               	movwf	___flge@ff1+3
  8961  1580  084A               	movf	(sprintf@fval+2)^(0+128),w
  8962  1581  00F4               	movwf	___flge@ff1+2
  8963  1582  0849               	movf	(sprintf@fval+1)^(0+128),w
  8964  1583  00F3               	movwf	___flge@ff1+1
  8965  1584  0848               	movf	sprintf@fval^(0+128),w
  8966  1585  00F2               	movwf	___flge@ff1
  8967  1586  3000               	movlw	0
  8968  1587  00F9               	movwf	___flge@ff2+3
  8969  1588  3000               	movlw	0
  8970  1589  00F8               	movwf	___flge@ff2+2
  8971  158A  3000               	movlw	0
  8972  158B  00F7               	movwf	___flge@ff2+1
  8973  158C  3000               	movlw	0
  8974  158D  00F6               	movwf	___flge@ff2
  8975  158E  160A  158A  26A0  160A  118A  	fcall	___flge
  8976  1593  1803               	btfsc	3,0
  8977  1594  2D96               	goto	u6071
  8978  1595  2D97               	goto	u6070
  8979  1596                     u6071:
  8980  1596  2DB4               	goto	l3770
  8981  1597                     u6070:
  8982  1597                     l3766:
  8983                           
  8984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  8985  1597  1683               	bsf	3,5	;RP0=1, select bank1
  8986  1598  1303               	bcf	3,6	;RP1=0, select bank1
  8987  1599  084B               	movf	(sprintf@fval+3)^(0+128),w
  8988  159A  00F5               	movwf	___flneg@f1+3
  8989  159B  084A               	movf	(sprintf@fval+2)^(0+128),w
  8990  159C  00F4               	movwf	___flneg@f1+2
  8991  159D  0849               	movf	(sprintf@fval+1)^(0+128),w
  8992  159E  00F3               	movwf	___flneg@f1+1
  8993  159F  0848               	movf	sprintf@fval^(0+128),w
  8994  15A0  00F2               	movwf	___flneg@f1
  8995  15A1  160A  118A  2000  160A  118A  	fcall	___flneg
  8996  15A6  0875               	movf	?___flneg+3,w
  8997  15A7  1683               	bsf	3,5	;RP0=1, select bank1
  8998  15A8  1303               	bcf	3,6	;RP1=0, select bank1
  8999  15A9  00CB               	movwf	(sprintf@fval+3)^(0+128)
  9000  15AA  0874               	movf	?___flneg+2,w
  9001  15AB  00CA               	movwf	(sprintf@fval+2)^(0+128)
  9002  15AC  0873               	movf	?___flneg+1,w
  9003  15AD  00C9               	movwf	(sprintf@fval+1)^(0+128)
  9004  15AE  0872               	movf	?___flneg,w
  9005  15AF  00C8               	movwf	sprintf@fval^(0+128)
  9006  15B0                     l3768:
  9007                           
  9008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  9009  15B0  3003               	movlw	3
  9010  15B1  04C4               	iorwf	sprintf@flag^(0+128),f
  9011  15B2  3000               	movlw	0
  9012  15B3  04C5               	iorwf	(sprintf@flag+1)^(0+128),f
  9013  15B4                     l3770:
  9014                           
  9015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  9016  15B4  1683               	bsf	3,5	;RP0=1, select bank1
  9017  15B5  1303               	bcf	3,6	;RP1=0, select bank1
  9018  15B6  01C2               	clrf	sprintf@eexp^(0+128)
  9019  15B7  01C3               	clrf	(sprintf@eexp+1)^(0+128)
  9020  15B8                     l3772:
  9021                           
  9022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  9023  15B8  084B               	movf	(sprintf@fval+3)^(0+128),w
  9024  15B9  00F5               	movwf	___fleq@ff1+3
  9025  15BA  084A               	movf	(sprintf@fval+2)^(0+128),w
  9026  15BB  00F4               	movwf	___fleq@ff1+2
  9027  15BC  0849               	movf	(sprintf@fval+1)^(0+128),w
  9028  15BD  00F3               	movwf	___fleq@ff1+1
  9029  15BE  0848               	movf	sprintf@fval^(0+128),w
  9030  15BF  00F2               	movwf	___fleq@ff1
  9031  15C0  3000               	movlw	0
  9032  15C1  00F9               	movwf	___fleq@ff2+3
  9033  15C2  3000               	movlw	0
  9034  15C3  00F8               	movwf	___fleq@ff2+2
  9035  15C4  3000               	movlw	0
  9036  15C5  00F7               	movwf	___fleq@ff2+1
  9037  15C6  3000               	movlw	0
  9038  15C7  00F6               	movwf	___fleq@ff2
  9039  15C8  160A  158A  246D  160A  118A  	fcall	___fleq
  9040  15CD  1803               	btfsc	3,0
  9041  15CE  2DD0               	goto	u6081
  9042  15CF  2DD1               	goto	u6080
  9043  15D0                     u6081:
  9044  15D0  2ED1               	goto	l3798
  9045  15D1                     u6080:
  9046  15D1                     l3774:
  9047                           
  9048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  9049  15D1  1003               	clrc
  9050  15D2  1683               	bsf	3,5	;RP0=1, select bank1
  9051  15D3  1303               	bcf	3,6	;RP1=0, select bank1
  9052  15D4  0D4A               	rlf	(sprintf@fval+2)^(0+128),w
  9053  15D5  0D4B               	rlf	(sprintf@fval+3)^(0+128),w
  9054  15D6  3E82               	addlw	130
  9055  15D7  00C2               	movwf	sprintf@eexp^(0+128)
  9056  15D8  30FF               	movlw	255
  9057  15D9  1803               	skipnc
  9058  15DA  3000               	movlw	0
  9059  15DB  00C3               	movwf	(sprintf@eexp^(0+128)+1)
  9060  15DC                     l3776:
  9061                           
  9062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  9063  15DC  30FF               	movlw	255
  9064  15DD  07C2               	addwf	sprintf@eexp^(0+128),f
  9065  15DE  1803               	skipnc
  9066  15DF  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9067  15E0  30FF               	movlw	255
  9068  15E1  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9069  15E2                     l3778:
  9070                           
  9071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  9072  15E2  3003               	movlw	3
  9073  15E3  00F2               	movwf	___wmul@multiplier
  9074  15E4  3000               	movlw	0
  9075  15E5  00F3               	movwf	___wmul@multiplier+1
  9076  15E6  0843               	movf	(sprintf@eexp+1)^(0+128),w
  9077  15E7  00F5               	movwf	___wmul@multiplicand+1
  9078  15E8  0842               	movf	sprintf@eexp^(0+128),w
  9079  15E9  00F4               	movwf	___wmul@multiplicand
  9080  15EA  160A  158A  233B  160A  118A  	fcall	___wmul
  9081  15EF  0873               	movf	?___wmul+1,w
  9082  15F0  1683               	bsf	3,5	;RP0=1, select bank1
  9083  15F1  1303               	bcf	3,6	;RP1=0, select bank1
  9084  15F2  00C3               	movwf	(sprintf@eexp+1)^(0+128)
  9085  15F3  0872               	movf	?___wmul,w
  9086  15F4  00C2               	movwf	sprintf@eexp^(0+128)
  9087  15F5                     l3780:
  9088                           
  9089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  9090  15F5  300A               	movlw	10
  9091  15F6  1283               	bcf	3,5	;RP0=0, select bank0
  9092  15F7  1303               	bcf	3,6	;RP1=0, select bank0
  9093  15F8  00A0               	movwf	___awdiv@divisor
  9094  15F9  3000               	movlw	0
  9095  15FA  00A1               	movwf	___awdiv@divisor+1
  9096  15FB  1683               	bsf	3,5	;RP0=1, select bank1
  9097  15FC  1303               	bcf	3,6	;RP1=0, select bank1
  9098  15FD  0843               	movf	(sprintf@eexp+1)^(0+128),w
  9099  15FE  1283               	bcf	3,5	;RP0=0, select bank0
  9100  15FF  1303               	bcf	3,6	;RP1=0, select bank0
  9101  1600  00A3               	movwf	___awdiv@dividend+1
  9102  1601  1683               	bsf	3,5	;RP0=1, select bank1
  9103  1602  1303               	bcf	3,6	;RP1=0, select bank1
  9104  1603  0842               	movf	sprintf@eexp^(0+128),w
  9105  1604  1283               	bcf	3,5	;RP0=0, select bank0
  9106  1605  1303               	bcf	3,6	;RP1=0, select bank0
  9107  1606  00A2               	movwf	___awdiv@dividend
  9108  1607  120A  118A  2787  160A  118A  	fcall	___awdiv
  9109  160C  1283               	bcf	3,5	;RP0=0, select bank0
  9110  160D  1303               	bcf	3,6	;RP1=0, select bank0
  9111  160E  0821               	movf	?___awdiv+1,w
  9112  160F  1683               	bsf	3,5	;RP0=1, select bank1
  9113  1610  1303               	bcf	3,6	;RP1=0, select bank1
  9114  1611  00C3               	movwf	(sprintf@eexp+1)^(0+128)
  9115  1612  1283               	bcf	3,5	;RP0=0, select bank0
  9116  1613  1303               	bcf	3,6	;RP1=0, select bank0
  9117  1614  0820               	movf	?___awdiv,w
  9118  1615  1683               	bsf	3,5	;RP0=1, select bank1
  9119  1616  1303               	bcf	3,6	;RP1=0, select bank1
  9120  1617  00C2               	movwf	sprintf@eexp^(0+128)
  9121  1618                     l3782:
  9122                           
  9123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  9124  1618  1FC3               	btfss	(sprintf@eexp+1)^(0+128),7
  9125  1619  2E1B               	goto	u6091
  9126  161A  2E1C               	goto	u6090
  9127  161B                     u6091:
  9128  161B  2E22               	goto	l3786
  9129  161C                     u6090:
  9130  161C                     l3784:
  9131                           
  9132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  9133  161C  30FF               	movlw	255
  9134  161D  07C2               	addwf	sprintf@eexp^(0+128),f
  9135  161E  1803               	skipnc
  9136  161F  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9137  1620  30FF               	movlw	255
  9138  1621  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9139  1622                     l3786:
  9140                           
  9141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  9142  1622  0342               	decf	sprintf@eexp^(0+128),w
  9143  1623  3AFF               	xorlw	255
  9144  1624  120A  158A  249D  160A  118A  	fcall	_scale
  9145  1629  1283               	bcf	3,5	;RP0=0, select bank0
  9146  162A  1303               	bcf	3,6	;RP1=0, select bank0
  9147  162B  0845               	movf	?_scale+3,w
  9148  162C  1683               	bsf	3,5	;RP0=1, select bank1
  9149  162D  1303               	bcf	3,6	;RP1=0, select bank1
  9150  162E  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
  9151  162F  1283               	bcf	3,5	;RP0=0, select bank0
  9152  1630  1303               	bcf	3,6	;RP1=0, select bank0
  9153  1631  0844               	movf	?_scale+2,w
  9154  1632  1683               	bsf	3,5	;RP0=1, select bank1
  9155  1633  1303               	bcf	3,6	;RP1=0, select bank1
  9156  1634  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
  9157  1635  1283               	bcf	3,5	;RP0=0, select bank0
  9158  1636  1303               	bcf	3,6	;RP1=0, select bank0
  9159  1637  0843               	movf	?_scale+1,w
  9160  1638  1683               	bsf	3,5	;RP0=1, select bank1
  9161  1639  1303               	bcf	3,6	;RP1=0, select bank1
  9162  163A  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
  9163  163B  1283               	bcf	3,5	;RP0=0, select bank0
  9164  163C  1303               	bcf	3,6	;RP1=0, select bank0
  9165  163D  0842               	movf	?_scale,w
  9166  163E  1683               	bsf	3,5	;RP0=1, select bank1
  9167  163F  1303               	bcf	3,6	;RP1=0, select bank1
  9168  1640  00BE               	movwf	sprintf@tmpval^(0+128)
  9169  1641                     l3788:
  9170                           
  9171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  9172  1641  084B               	movf	(sprintf@fval+3)^(0+128),w
  9173  1642  1283               	bcf	3,5	;RP0=0, select bank0
  9174  1643  1303               	bcf	3,6	;RP1=0, select bank0
  9175  1644  00AB               	movwf	___flmul@b+3
  9176  1645  1683               	bsf	3,5	;RP0=1, select bank1
  9177  1646  1303               	bcf	3,6	;RP1=0, select bank1
  9178  1647  084A               	movf	(sprintf@fval+2)^(0+128),w
  9179  1648  1283               	bcf	3,5	;RP0=0, select bank0
  9180  1649  1303               	bcf	3,6	;RP1=0, select bank0
  9181  164A  00AA               	movwf	___flmul@b+2
  9182  164B  1683               	bsf	3,5	;RP0=1, select bank1
  9183  164C  1303               	bcf	3,6	;RP1=0, select bank1
  9184  164D  0849               	movf	(sprintf@fval+1)^(0+128),w
  9185  164E  1283               	bcf	3,5	;RP0=0, select bank0
  9186  164F  1303               	bcf	3,6	;RP1=0, select bank0
  9187  1650  00A9               	movwf	___flmul@b+1
  9188  1651  1683               	bsf	3,5	;RP0=1, select bank1
  9189  1652  1303               	bcf	3,6	;RP1=0, select bank1
  9190  1653  0848               	movf	sprintf@fval^(0+128),w
  9191  1654  1283               	bcf	3,5	;RP0=0, select bank0
  9192  1655  1303               	bcf	3,6	;RP1=0, select bank0
  9193  1656  00A8               	movwf	___flmul@b
  9194  1657  1683               	bsf	3,5	;RP0=1, select bank1
  9195  1658  1303               	bcf	3,6	;RP1=0, select bank1
  9196  1659  0841               	movf	(sprintf@tmpval+3)^(0+128),w
  9197  165A  1283               	bcf	3,5	;RP0=0, select bank0
  9198  165B  1303               	bcf	3,6	;RP1=0, select bank0
  9199  165C  00AF               	movwf	___flmul@a+3
  9200  165D  1683               	bsf	3,5	;RP0=1, select bank1
  9201  165E  1303               	bcf	3,6	;RP1=0, select bank1
  9202  165F  0840               	movf	(sprintf@tmpval+2)^(0+128),w
  9203  1660  1283               	bcf	3,5	;RP0=0, select bank0
  9204  1661  1303               	bcf	3,6	;RP1=0, select bank0
  9205  1662  00AE               	movwf	___flmul@a+2
  9206  1663  1683               	bsf	3,5	;RP0=1, select bank1
  9207  1664  1303               	bcf	3,6	;RP1=0, select bank1
  9208  1665  083F               	movf	(sprintf@tmpval+1)^(0+128),w
  9209  1666  1283               	bcf	3,5	;RP0=0, select bank0
  9210  1667  1303               	bcf	3,6	;RP1=0, select bank0
  9211  1668  00AD               	movwf	___flmul@a+1
  9212  1669  1683               	bsf	3,5	;RP0=1, select bank1
  9213  166A  1303               	bcf	3,6	;RP1=0, select bank1
  9214  166B  083E               	movf	sprintf@tmpval^(0+128),w
  9215  166C  1283               	bcf	3,5	;RP0=0, select bank0
  9216  166D  1303               	bcf	3,6	;RP1=0, select bank0
  9217  166E  00AC               	movwf	___flmul@a
  9218  166F  120A  158A  213C  160A  118A  	fcall	___flmul
  9219  1674  1283               	bcf	3,5	;RP0=0, select bank0
  9220  1675  1303               	bcf	3,6	;RP1=0, select bank0
  9221  1676  082B               	movf	?___flmul+3,w
  9222  1677  1683               	bsf	3,5	;RP0=1, select bank1
  9223  1678  1303               	bcf	3,6	;RP1=0, select bank1
  9224  1679  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
  9225  167A  1283               	bcf	3,5	;RP0=0, select bank0
  9226  167B  1303               	bcf	3,6	;RP1=0, select bank0
  9227  167C  082A               	movf	?___flmul+2,w
  9228  167D  1683               	bsf	3,5	;RP0=1, select bank1
  9229  167E  1303               	bcf	3,6	;RP1=0, select bank1
  9230  167F  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
  9231  1680  1283               	bcf	3,5	;RP0=0, select bank0
  9232  1681  1303               	bcf	3,6	;RP1=0, select bank0
  9233  1682  0829               	movf	?___flmul+1,w
  9234  1683  1683               	bsf	3,5	;RP0=1, select bank1
  9235  1684  1303               	bcf	3,6	;RP1=0, select bank1
  9236  1685  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
  9237  1686  1283               	bcf	3,5	;RP0=0, select bank0
  9238  1687  1303               	bcf	3,6	;RP1=0, select bank0
  9239  1688  0828               	movf	?___flmul,w
  9240  1689  1683               	bsf	3,5	;RP0=1, select bank1
  9241  168A  1303               	bcf	3,6	;RP1=0, select bank1
  9242  168B  00BE               	movwf	sprintf@tmpval^(0+128)
  9243  168C                     l3790:
  9244                           
  9245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  9246  168C  0841               	movf	(sprintf@tmpval+3)^(0+128),w
  9247  168D  00F5               	movwf	___flge@ff1+3
  9248  168E  0840               	movf	(sprintf@tmpval+2)^(0+128),w
  9249  168F  00F4               	movwf	___flge@ff1+2
  9250  1690  083F               	movf	(sprintf@tmpval+1)^(0+128),w
  9251  1691  00F3               	movwf	___flge@ff1+1
  9252  1692  083E               	movf	sprintf@tmpval^(0+128),w
  9253  1693  00F2               	movwf	___flge@ff1
  9254  1694  303F               	movlw	63
  9255  1695  00F9               	movwf	___flge@ff2+3
  9256  1696  3080               	movlw	128
  9257  1697  00F8               	movwf	___flge@ff2+2
  9258  1698  3000               	movlw	0
  9259  1699  00F7               	movwf	___flge@ff2+1
  9260  169A  3000               	movlw	0
  9261  169B  00F6               	movwf	___flge@ff2
  9262  169C  160A  158A  26A0  160A  118A  	fcall	___flge
  9263  16A1  1803               	btfsc	3,0
  9264  16A2  2EA4               	goto	u6101
  9265  16A3  2EA5               	goto	u6100
  9266  16A4                     u6101:
  9267  16A4  2EAE               	goto	l3794
  9268  16A5                     u6100:
  9269  16A5                     l3792:
  9270                           
  9271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  9272  16A5  30FF               	movlw	255
  9273  16A6  1683               	bsf	3,5	;RP0=1, select bank1
  9274  16A7  1303               	bcf	3,6	;RP1=0, select bank1
  9275  16A8  07C2               	addwf	sprintf@eexp^(0+128),f
  9276  16A9  1803               	skipnc
  9277  16AA  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9278  16AB  30FF               	movlw	255
  9279  16AC  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9280  16AD  2ED1               	goto	l3798
  9281  16AE                     l3794:
  9282  16AE  1683               	bsf	3,5	;RP0=1, select bank1
  9283  16AF  1303               	bcf	3,6	;RP1=0, select bank1
  9284  16B0  0841               	movf	(sprintf@tmpval+3)^(0+128),w
  9285  16B1  00F5               	movwf	___flge@ff1+3
  9286  16B2  0840               	movf	(sprintf@tmpval+2)^(0+128),w
  9287  16B3  00F4               	movwf	___flge@ff1+2
  9288  16B4  083F               	movf	(sprintf@tmpval+1)^(0+128),w
  9289  16B5  00F3               	movwf	___flge@ff1+1
  9290  16B6  083E               	movf	sprintf@tmpval^(0+128),w
  9291  16B7  00F2               	movwf	___flge@ff1
  9292  16B8  3041               	movlw	65
  9293  16B9  00F9               	movwf	___flge@ff2+3
  9294  16BA  3020               	movlw	32
  9295  16BB  00F8               	movwf	___flge@ff2+2
  9296  16BC  3000               	movlw	0
  9297  16BD  00F7               	movwf	___flge@ff2+1
  9298  16BE  3000               	movlw	0
  9299  16BF  00F6               	movwf	___flge@ff2
  9300  16C0  160A  158A  26A0  160A  118A  	fcall	___flge
  9301  16C5  1C03               	btfss	3,0
  9302  16C6  2EC8               	goto	u6111
  9303  16C7  2EC9               	goto	u6110
  9304  16C8                     u6111:
  9305  16C8  2ED1               	goto	l3798
  9306  16C9                     u6110:
  9307  16C9                     l3796:
  9308                           
  9309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  9310  16C9  3001               	movlw	1
  9311  16CA  1683               	bsf	3,5	;RP0=1, select bank1
  9312  16CB  1303               	bcf	3,6	;RP1=0, select bank1
  9313  16CC  07C2               	addwf	sprintf@eexp^(0+128),f
  9314  16CD  1803               	skipnc
  9315  16CE  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9316  16CF  3000               	movlw	0
  9317  16D0  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9318  16D1                     l3798:
  9319                           
  9320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  9321  16D1  1683               	bsf	3,5	;RP0=1, select bank1
  9322  16D2  1303               	bcf	3,6	;RP1=0, select bank1
  9323  16D3  084D               	movf	(sprintf@prec+1)^(0+128),w
  9324  16D4  3A80               	xorlw	128
  9325  16D5  00FF               	movwf	btemp+1
  9326  16D6  3080               	movlw	128
  9327  16D7  027F               	subwf	btemp+1,w
  9328  16D8  1D03               	skipz
  9329  16D9  2EDC               	goto	u6125
  9330  16DA  300D               	movlw	13
  9331  16DB  024C               	subwf	sprintf@prec^(0+128),w
  9332  16DC                     u6125:
  9333  16DC  1803               	skipnc
  9334  16DD  2EDF               	goto	u6121
  9335  16DE  2EE0               	goto	u6120
  9336  16DF                     u6121:
  9337  16DF  2F27               	goto	l3802
  9338  16E0                     u6120:
  9339  16E0                     l3800:
  9340                           
  9341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  9342  16E0  1683               	bsf	3,5	;RP0=1, select bank1
  9343  16E1  1303               	bcf	3,6	;RP1=0, select bank1
  9344  16E2  084C               	movf	sprintf@prec^(0+128),w
  9345  16E3  120A  118A  257A  160A  118A  	fcall	_fround
  9346  16E8  1283               	bcf	3,5	;RP0=0, select bank0
  9347  16E9  1303               	bcf	3,6	;RP1=0, select bank0
  9348  16EA  0845               	movf	?_fround+3,w
  9349  16EB  00D9               	movwf	___fladd@b+3
  9350  16EC  0844               	movf	?_fround+2,w
  9351  16ED  00D8               	movwf	___fladd@b+2
  9352  16EE  0843               	movf	?_fround+1,w
  9353  16EF  00D7               	movwf	___fladd@b+1
  9354  16F0  0842               	movf	?_fround,w
  9355  16F1  00D6               	movwf	___fladd@b
  9356  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  9357  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  9358  16F4  084B               	movf	(sprintf@fval+3)^(0+128),w
  9359  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  9360  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  9361  16F7  00DD               	movwf	___fladd@a+3
  9362  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  9363  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  9364  16FA  084A               	movf	(sprintf@fval+2)^(0+128),w
  9365  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  9366  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  9367  16FD  00DC               	movwf	___fladd@a+2
  9368  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  9369  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  9370  1700  0849               	movf	(sprintf@fval+1)^(0+128),w
  9371  1701  1283               	bcf	3,5	;RP0=0, select bank0
  9372  1702  1303               	bcf	3,6	;RP1=0, select bank0
  9373  1703  00DB               	movwf	___fladd@a+1
  9374  1704  1683               	bsf	3,5	;RP0=1, select bank1
  9375  1705  1303               	bcf	3,6	;RP1=0, select bank1
  9376  1706  0848               	movf	sprintf@fval^(0+128),w
  9377  1707  1283               	bcf	3,5	;RP0=0, select bank0
  9378  1708  1303               	bcf	3,6	;RP1=0, select bank0
  9379  1709  00DA               	movwf	___fladd@a
  9380  170A  160A  118A  229A  160A  118A  	fcall	___fladd
  9381  170F  1283               	bcf	3,5	;RP0=0, select bank0
  9382  1710  1303               	bcf	3,6	;RP1=0, select bank0
  9383  1711  0859               	movf	?___fladd+3,w
  9384  1712  1683               	bsf	3,5	;RP0=1, select bank1
  9385  1713  1303               	bcf	3,6	;RP1=0, select bank1
  9386  1714  00CB               	movwf	(sprintf@fval+3)^(0+128)
  9387  1715  1283               	bcf	3,5	;RP0=0, select bank0
  9388  1716  1303               	bcf	3,6	;RP1=0, select bank0
  9389  1717  0858               	movf	?___fladd+2,w
  9390  1718  1683               	bsf	3,5	;RP0=1, select bank1
  9391  1719  1303               	bcf	3,6	;RP1=0, select bank1
  9392  171A  00CA               	movwf	(sprintf@fval+2)^(0+128)
  9393  171B  1283               	bcf	3,5	;RP0=0, select bank0
  9394  171C  1303               	bcf	3,6	;RP1=0, select bank0
  9395  171D  0857               	movf	?___fladd+1,w
  9396  171E  1683               	bsf	3,5	;RP0=1, select bank1
  9397  171F  1303               	bcf	3,6	;RP1=0, select bank1
  9398  1720  00C9               	movwf	(sprintf@fval+1)^(0+128)
  9399  1721  1283               	bcf	3,5	;RP0=0, select bank0
  9400  1722  1303               	bcf	3,6	;RP1=0, select bank0
  9401  1723  0856               	movf	?___fladd,w
  9402  1724  1683               	bsf	3,5	;RP0=1, select bank1
  9403  1725  1303               	bcf	3,6	;RP1=0, select bank1
  9404  1726  00C8               	movwf	sprintf@fval^(0+128)
  9405  1727                     l3802:
  9406                           
  9407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  9408  1727  1683               	bsf	3,5	;RP0=1, select bank1
  9409  1728  1303               	bcf	3,6	;RP1=0, select bank1
  9410  1729  0843               	movf	(sprintf@eexp+1)^(0+128),w
  9411  172A  3A80               	xorlw	128
  9412  172B  00FF               	movwf	btemp+1
  9413  172C  3080               	movlw	128
  9414  172D  027F               	subwf	btemp+1,w
  9415  172E  1D03               	skipz
  9416  172F  2F32               	goto	u6135
  9417  1730  300A               	movlw	10
  9418  1731  0242               	subwf	sprintf@eexp^(0+128),w
  9419  1732                     u6135:
  9420  1732  1803               	skipnc
  9421  1733  2F35               	goto	u6131
  9422  1734  2F36               	goto	u6130
  9423  1735                     u6131:
  9424  1735  2F89               	goto	l3810
  9425  1736                     u6130:
  9426  1736                     l3804:
  9427  1736  1683               	bsf	3,5	;RP0=1, select bank1
  9428  1737  1303               	bcf	3,6	;RP1=0, select bank1
  9429  1738  084B               	movf	(sprintf@fval+3)^(0+128),w
  9430  1739  00F5               	movwf	___fleq@ff1+3
  9431  173A  084A               	movf	(sprintf@fval+2)^(0+128),w
  9432  173B  00F4               	movwf	___fleq@ff1+2
  9433  173C  0849               	movf	(sprintf@fval+1)^(0+128),w
  9434  173D  00F3               	movwf	___fleq@ff1+1
  9435  173E  0848               	movf	sprintf@fval^(0+128),w
  9436  173F  00F2               	movwf	___fleq@ff1
  9437  1740  3000               	movlw	0
  9438  1741  00F9               	movwf	___fleq@ff2+3
  9439  1742  3000               	movlw	0
  9440  1743  00F8               	movwf	___fleq@ff2+2
  9441  1744  3000               	movlw	0
  9442  1745  00F7               	movwf	___fleq@ff2+1
  9443  1746  3000               	movlw	0
  9444  1747  00F6               	movwf	___fleq@ff2
  9445  1748  160A  158A  246D  160A  118A  	fcall	___fleq
  9446  174D  1803               	btfsc	3,0
  9447  174E  2F50               	goto	u6141
  9448  174F  2F53               	goto	u6140
  9449  1750                     u6141:
  9450  1750  120A  118A  281D   	goto	l3824
  9451  1753                     u6140:
  9452  1753                     l3806:
  9453  1753  1683               	bsf	3,5	;RP0=1, select bank1
  9454  1754  1303               	bcf	3,6	;RP1=0, select bank1
  9455  1755  084B               	movf	(sprintf@fval+3)^(0+128),w
  9456  1756  1283               	bcf	3,5	;RP0=0, select bank0
  9457  1757  1303               	bcf	3,6	;RP1=0, select bank0
  9458  1758  00D8               	movwf	___fltol@f1+3
  9459  1759  1683               	bsf	3,5	;RP0=1, select bank1
  9460  175A  1303               	bcf	3,6	;RP1=0, select bank1
  9461  175B  084A               	movf	(sprintf@fval+2)^(0+128),w
  9462  175C  1283               	bcf	3,5	;RP0=0, select bank0
  9463  175D  1303               	bcf	3,6	;RP1=0, select bank0
  9464  175E  00D7               	movwf	___fltol@f1+2
  9465  175F  1683               	bsf	3,5	;RP0=1, select bank1
  9466  1760  1303               	bcf	3,6	;RP1=0, select bank1
  9467  1761  0849               	movf	(sprintf@fval+1)^(0+128),w
  9468  1762  1283               	bcf	3,5	;RP0=0, select bank0
  9469  1763  1303               	bcf	3,6	;RP1=0, select bank0
  9470  1764  00D6               	movwf	___fltol@f1+1
  9471  1765  1683               	bsf	3,5	;RP0=1, select bank1
  9472  1766  1303               	bcf	3,6	;RP1=0, select bank1
  9473  1767  0848               	movf	sprintf@fval^(0+128),w
  9474  1768  1283               	bcf	3,5	;RP0=0, select bank0
  9475  1769  1303               	bcf	3,6	;RP1=0, select bank0
  9476  176A  00D5               	movwf	___fltol@f1
  9477  176B  160A  158A  2624  160A  118A  	fcall	___fltol
  9478  1770  1283               	bcf	3,5	;RP0=0, select bank0
  9479  1771  1303               	bcf	3,6	;RP1=0, select bank0
  9480  1772  0858               	movf	?___fltol+3,w
  9481  1773  0457               	iorwf	?___fltol+2,w
  9482  1774  0456               	iorwf	?___fltol+1,w
  9483  1775  0455               	iorwf	?___fltol,w
  9484  1776  1D03               	skipz
  9485  1777  2F79               	goto	u6151
  9486  1778  2F7A               	goto	u6150
  9487  1779                     u6151:
  9488  1779  2F50               	goto	u6141
  9489  177A                     u6150:
  9490  177A                     l3808:
  9491  177A  1683               	bsf	3,5	;RP0=1, select bank1
  9492  177B  1303               	bcf	3,6	;RP1=0, select bank1
  9493  177C  0843               	movf	(sprintf@eexp+1)^(0+128),w
  9494  177D  3A80               	xorlw	128
  9495  177E  00FF               	movwf	btemp+1
  9496  177F  3080               	movlw	128
  9497  1780  027F               	subwf	btemp+1,w
  9498  1781  1D03               	skipz
  9499  1782  2F85               	goto	u6165
  9500  1783  3002               	movlw	2
  9501  1784  0242               	subwf	sprintf@eexp^(0+128),w
  9502  1785                     u6165:
  9503  1785  1C03               	skipc
  9504  1786  2F88               	goto	u6161
  9505  1787  2F89               	goto	u6160
  9506  1788                     u6161:
  9507  1788  2F50               	goto	u6141
  9508  1789                     u6160:
  9509  1789                     l3810:
  9510                           
  9511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9512  1789  1683               	bsf	3,5	;RP0=1, select bank1
  9513  178A  1303               	bcf	3,6	;RP1=0, select bank1
  9514  178B  0841               	movf	(sprintf@tmpval+3)^(0+128),w
  9515  178C  00F5               	movwf	___flge@ff1+3
  9516  178D  0840               	movf	(sprintf@tmpval+2)^(0+128),w
  9517  178E  00F4               	movwf	___flge@ff1+2
  9518  178F  083F               	movf	(sprintf@tmpval+1)^(0+128),w
  9519  1790  00F3               	movwf	___flge@ff1+1
  9520  1791  083E               	movf	sprintf@tmpval^(0+128),w
  9521  1792  00F2               	movwf	___flge@ff1
  9522  1793  3040               	movlw	64
  9523  1794  00F9               	movwf	___flge@ff2+3
  9524  1795  3089               	movlw	137
  9525  1796  00F8               	movwf	___flge@ff2+2
  9526  1797  3070               	movlw	112
  9527  1798  00F7               	movwf	___flge@ff2+1
  9528  1799  305F               	movlw	95
  9529  179A  00F6               	movwf	___flge@ff2
  9530  179B  160A  158A  26A0  160A  118A  	fcall	___flge
  9531  17A0  1803               	btfsc	3,0
  9532  17A1  2FA3               	goto	u6171
  9533  17A2  2FA4               	goto	u6170
  9534  17A3                     u6171:
  9535  17A3  2FAD               	goto	l3814
  9536  17A4                     u6170:
  9537  17A4                     l3812:
  9538                           
  9539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9540  17A4  30F7               	movlw	247
  9541  17A5  1683               	bsf	3,5	;RP0=1, select bank1
  9542  17A6  1303               	bcf	3,6	;RP1=0, select bank1
  9543  17A7  07C2               	addwf	sprintf@eexp^(0+128),f
  9544  17A8  1803               	skipnc
  9545  17A9  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9546  17AA  30FF               	movlw	255
  9547  17AB  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9548                           
  9549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9550  17AC  2FB5               	goto	l3816
  9551  17AD                     l3814:
  9552                           
  9553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9554  17AD  30F8               	movlw	248
  9555  17AE  1683               	bsf	3,5	;RP0=1, select bank1
  9556  17AF  1303               	bcf	3,6	;RP1=0, select bank1
  9557  17B0  07C2               	addwf	sprintf@eexp^(0+128),f
  9558  17B1  1803               	skipnc
  9559  17B2  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9560  17B3  30FF               	movlw	255
  9561  17B4  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9562  17B5                     l3816:
  9563                           
  9564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9565  17B5  0842               	movf	sprintf@eexp^(0+128),w
  9566  17B6  120A  158A  249D  160A  118A  	fcall	_scale
  9567  17BB  1283               	bcf	3,5	;RP0=0, select bank0
  9568  17BC  1303               	bcf	3,6	;RP1=0, select bank0
  9569  17BD  0845               	movf	?_scale+3,w
  9570  17BE  1683               	bsf	3,5	;RP0=1, select bank1
  9571  17BF  1303               	bcf	3,6	;RP1=0, select bank1
  9572  17C0  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
  9573  17C1  1283               	bcf	3,5	;RP0=0, select bank0
  9574  17C2  1303               	bcf	3,6	;RP1=0, select bank0
  9575  17C3  0844               	movf	?_scale+2,w
  9576  17C4  1683               	bsf	3,5	;RP0=1, select bank1
  9577  17C5  1303               	bcf	3,6	;RP1=0, select bank1
  9578  17C6  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
  9579  17C7  1283               	bcf	3,5	;RP0=0, select bank0
  9580  17C8  1303               	bcf	3,6	;RP1=0, select bank0
  9581  17C9  0843               	movf	?_scale+1,w
  9582  17CA  1683               	bsf	3,5	;RP0=1, select bank1
  9583  17CB  1303               	bcf	3,6	;RP1=0, select bank1
  9584  17CC  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
  9585  17CD  1283               	bcf	3,5	;RP0=0, select bank0
  9586  17CE  1303               	bcf	3,6	;RP1=0, select bank0
  9587  17CF  0842               	movf	?_scale,w
  9588  17D0  1683               	bsf	3,5	;RP0=1, select bank1
  9589  17D1  1303               	bcf	3,6	;RP1=0, select bank1
  9590  17D2  00BE               	movwf	sprintf@tmpval^(0+128)
  9591  17D3                     l3818:
  9592  17D3  084B               	movf	(sprintf@fval+3)^(0+128),w
  9593  17D4  00F5               	movwf	__div_to_l_@f1+3
  9594  17D5  084A               	movf	(sprintf@fval+2)^(0+128),w
  9595  17D6  00F4               	movwf	__div_to_l_@f1+2
  9596  17D7  0849               	movf	(sprintf@fval+1)^(0+128),w
  9597  17D8  00F3               	movwf	__div_to_l_@f1+1
  9598  17D9  0848               	movf	sprintf@fval^(0+128),w
  9599  17DA  00F2               	movwf	__div_to_l_@f1
  9600  17DB  0841               	movf	(sprintf@tmpval+3)^(0+128),w
  9601  17DC  00F9               	movwf	__div_to_l_@f2+3
  9602  17DD  0840               	movf	(sprintf@tmpval+2)^(0+128),w
  9603  17DE  00F8               	movwf	__div_to_l_@f2+2
  9604  17DF  083F               	movf	(sprintf@tmpval+1)^(0+128),w
  9605  17E0  00F7               	movwf	__div_to_l_@f2+1
  9606  17E1  083E               	movf	sprintf@tmpval^(0+128),w
  9607  17E2  00F6               	movwf	__div_to_l_@f2
  9608  17E3  160A  118A  20DD  160A  118A  	fcall	__div_to_l_
  9609  17E8  0875               	movf	?__div_to_l_+3,w
  9610  17E9  1683               	bsf	3,5	;RP0=1, select bank1
  9611  17EA  1303               	bcf	3,6	;RP1=0, select bank1
  9612  17EB  00BD               	movwf	(sprintf@val+3)^(0+128)
  9613  17EC  0874               	movf	?__div_to_l_+2,w
  9614  17ED  00BC               	movwf	(sprintf@val+2)^(0+128)
  9615  17EE  0873               	movf	?__div_to_l_+1,w
  9616  17EF  00BB               	movwf	(sprintf@val+1)^(0+128)
  9617  17F0  0872               	movf	?__div_to_l_,w
  9618  17F1  00BA               	movwf	sprintf@val^(0+128)
  9619  17F2                     l3822:
  9620                           
  9621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9622  17F2  3000               	movlw	0
  9623  17F3  00CB               	movwf	(sprintf@fval+3)^(0+128)
  9624  17F4  3000               	movlw	0
  9625  17F5  00CA               	movwf	(sprintf@fval+2)^(0+128)
  9626  17F6  3000               	movlw	0
  9627  17F7  00C9               	movwf	(sprintf@fval+1)^(0+128)
  9628  17F8  3000               	movlw	0
  9629  17F9  00C8               	movwf	sprintf@fval^(0+128)
  9630                           
  9631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9632  17FA  120A  118A  2883   	goto	l3830
  9633  17FD                     L3:
  9634  17FD                     L2:
  9635  17FD  120A  118A  2D73   	ljmp	l3992
  9636                           
  9637                           	psect	text1_split_2
  9638  001D                     l3824:
  9639                           
  9640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9641  001D  1683               	bsf	3,5	;RP0=1, select bank1
  9642  001E  1303               	bcf	3,6	;RP1=0, select bank1
  9643  001F  084B               	movf	(sprintf@fval+3)^(0+128),w
  9644  0020  1283               	bcf	3,5	;RP0=0, select bank0
  9645  0021  1303               	bcf	3,6	;RP1=0, select bank0
  9646  0022  00D8               	movwf	___fltol@f1+3
  9647  0023  1683               	bsf	3,5	;RP0=1, select bank1
  9648  0024  1303               	bcf	3,6	;RP1=0, select bank1
  9649  0025  084A               	movf	(sprintf@fval+2)^(0+128),w
  9650  0026  1283               	bcf	3,5	;RP0=0, select bank0
  9651  0027  1303               	bcf	3,6	;RP1=0, select bank0
  9652  0028  00D7               	movwf	___fltol@f1+2
  9653  0029  1683               	bsf	3,5	;RP0=1, select bank1
  9654  002A  1303               	bcf	3,6	;RP1=0, select bank1
  9655  002B  0849               	movf	(sprintf@fval+1)^(0+128),w
  9656  002C  1283               	bcf	3,5	;RP0=0, select bank0
  9657  002D  1303               	bcf	3,6	;RP1=0, select bank0
  9658  002E  00D6               	movwf	___fltol@f1+1
  9659  002F  1683               	bsf	3,5	;RP0=1, select bank1
  9660  0030  1303               	bcf	3,6	;RP1=0, select bank1
  9661  0031  0848               	movf	sprintf@fval^(0+128),w
  9662  0032  1283               	bcf	3,5	;RP0=0, select bank0
  9663  0033  1303               	bcf	3,6	;RP1=0, select bank0
  9664  0034  00D5               	movwf	___fltol@f1
  9665  0035  160A  158A  2624  120A  118A  	fcall	___fltol
  9666  003A  1283               	bcf	3,5	;RP0=0, select bank0
  9667  003B  1303               	bcf	3,6	;RP1=0, select bank0
  9668  003C  0858               	movf	?___fltol+3,w
  9669  003D  1683               	bsf	3,5	;RP0=1, select bank1
  9670  003E  1303               	bcf	3,6	;RP1=0, select bank1
  9671  003F  00BD               	movwf	(sprintf@val+3)^(0+128)
  9672  0040  1283               	bcf	3,5	;RP0=0, select bank0
  9673  0041  1303               	bcf	3,6	;RP1=0, select bank0
  9674  0042  0857               	movf	?___fltol+2,w
  9675  0043  1683               	bsf	3,5	;RP0=1, select bank1
  9676  0044  1303               	bcf	3,6	;RP1=0, select bank1
  9677  0045  00BC               	movwf	(sprintf@val+2)^(0+128)
  9678  0046  1283               	bcf	3,5	;RP0=0, select bank0
  9679  0047  1303               	bcf	3,6	;RP1=0, select bank0
  9680  0048  0856               	movf	?___fltol+1,w
  9681  0049  1683               	bsf	3,5	;RP0=1, select bank1
  9682  004A  1303               	bcf	3,6	;RP1=0, select bank1
  9683  004B  00BB               	movwf	(sprintf@val+1)^(0+128)
  9684  004C  1283               	bcf	3,5	;RP0=0, select bank0
  9685  004D  1303               	bcf	3,6	;RP1=0, select bank0
  9686  004E  0855               	movf	?___fltol,w
  9687  004F  1683               	bsf	3,5	;RP0=1, select bank1
  9688  0050  1303               	bcf	3,6	;RP1=0, select bank1
  9689  0051  00BA               	movwf	sprintf@val^(0+128)
  9690  0052                     l3826:
  9691                           
  9692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9693  0052  083D               	movf	(sprintf@val+3)^(0+128),w
  9694  0053  00F5               	movwf	___xxtofl@val+3
  9695  0054  083C               	movf	(sprintf@val+2)^(0+128),w
  9696  0055  00F4               	movwf	___xxtofl@val+2
  9697  0056  083B               	movf	(sprintf@val+1)^(0+128),w
  9698  0057  00F3               	movwf	___xxtofl@val+1
  9699  0058  083A               	movf	sprintf@val^(0+128),w
  9700  0059  00F2               	movwf	___xxtofl@val
  9701  005A  3000               	movlw	0
  9702  005B  160A  158A  2744  120A  118A  	fcall	___xxtofl
  9703  0060  0875               	movf	?___xxtofl+3,w
  9704  0061  1683               	bsf	3,5	;RP0=1, select bank1
  9705  0062  1303               	bcf	3,6	;RP1=0, select bank1
  9706  0063  00A3               	movwf	(___flsub@a+3)^(0+128)
  9707  0064  0874               	movf	?___xxtofl+2,w
  9708  0065  00A2               	movwf	(___flsub@a+2)^(0+128)
  9709  0066  0873               	movf	?___xxtofl+1,w
  9710  0067  00A1               	movwf	(___flsub@a+1)^(0+128)
  9711  0068  0872               	movf	?___xxtofl,w
  9712  0069  00A0               	movwf	___flsub@a^(0+128)
  9713  006A  084B               	movf	(sprintf@fval+3)^(0+128),w
  9714  006B  00A7               	movwf	(___flsub@b+3)^(0+128)
  9715  006C  084A               	movf	(sprintf@fval+2)^(0+128),w
  9716  006D  00A6               	movwf	(___flsub@b+2)^(0+128)
  9717  006E  0849               	movf	(sprintf@fval+1)^(0+128),w
  9718  006F  00A5               	movwf	(___flsub@b+1)^(0+128)
  9719  0070  0848               	movf	sprintf@fval^(0+128),w
  9720  0071  00A4               	movwf	___flsub@b^(0+128)
  9721  0072  160A  158A  24BD  120A  118A  	fcall	___flsub
  9722  0077  1683               	bsf	3,5	;RP0=1, select bank1
  9723  0078  1303               	bcf	3,6	;RP1=0, select bank1
  9724  0079  0823               	movf	(?___flsub+3)^(0+128),w
  9725  007A  00CB               	movwf	(sprintf@fval+3)^(0+128)
  9726  007B  0822               	movf	(?___flsub+2)^(0+128),w
  9727  007C  00CA               	movwf	(sprintf@fval+2)^(0+128)
  9728  007D  0821               	movf	(?___flsub+1)^(0+128),w
  9729  007E  00C9               	movwf	(sprintf@fval+1)^(0+128)
  9730  007F  0820               	movf	?___flsub^(0+128),w
  9731  0080  00C8               	movwf	sprintf@fval^(0+128)
  9732  0081                     l3828:
  9733                           
  9734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9735  0081  01C2               	clrf	sprintf@eexp^(0+128)
  9736  0082  01C3               	clrf	(sprintf@eexp+1)^(0+128)
  9737  0083                     l3830:
  9738                           
  9739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9740  0083  01CF               	clrf	sprintf@c^(0+128)
  9741  0084  0ACF               	incf	sprintf@c^(0+128),f
  9742  0085                     l3836:
  9743                           
  9744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9745  0085  084F               	movf	sprintf@c^(0+128),w
  9746  0086  1283               	bcf	3,5	;RP0=0, select bank0
  9747  0087  1303               	bcf	3,6	;RP1=0, select bank0
  9748  0088  00EA               	movwf	??_sprintf
  9749  0089  3001               	movlw	1
  9750  008A                     u6185:
  9751  008A  1003               	clrc
  9752  008B  0DEA               	rlf	??_sprintf,f
  9753  008C  3EFF               	addlw	-1
  9754  008D  1D03               	skipz
  9755  008E  288A               	goto	u6185
  9756  008F  1003               	clrc
  9757  0090  0D6A               	rlf	??_sprintf,w
  9758  0091  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9759  0092  0084               	movwf	4
  9760  0093  160A  158A  2000  120A  118A  	fcall	stringdir
  9761  0098  00EB               	movwf	??_sprintf+1
  9762  0099  160A  158A  2000  120A  118A  	fcall	stringdir
  9763  009E  00EC               	movwf	??_sprintf+2
  9764  009F  160A  158A  2000  120A  118A  	fcall	stringdir
  9765  00A4  00ED               	movwf	??_sprintf+3
  9766  00A5  160A  158A  2000  120A  118A  	fcall	stringdir
  9767  00AA  00EE               	movwf	??_sprintf+4
  9768  00AB  086E               	movf	??_sprintf+4,w
  9769  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  9770  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  9771  00AE  023D               	subwf	(sprintf@val+3)^(0+128),w
  9772  00AF  1D03               	skipz
  9773  00B0  28C7               	goto	u6195
  9774  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  9775  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  9776  00B3  086D               	movf	??_sprintf+3,w
  9777  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  9778  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  9779  00B6  023C               	subwf	(sprintf@val+2)^(0+128),w
  9780  00B7  1D03               	skipz
  9781  00B8  28C7               	goto	u6195
  9782  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  9783  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  9784  00BB  086C               	movf	??_sprintf+2,w
  9785  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  9786  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  9787  00BE  023B               	subwf	(sprintf@val+1)^(0+128),w
  9788  00BF  1D03               	skipz
  9789  00C0  28C7               	goto	u6195
  9790  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  9791  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  9792  00C3  086B               	movf	??_sprintf+1,w
  9793  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  9794  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  9795  00C6  023A               	subwf	sprintf@val^(0+128),w
  9796  00C7                     u6195:
  9797  00C7  1803               	skipnc
  9798  00C8  28CA               	goto	u6191
  9799  00C9  28CB               	goto	u6190
  9800  00CA                     u6191:
  9801  00CA  28CC               	goto	l3840
  9802  00CB                     u6190:
  9803  00CB  28DA               	goto	l3842
  9804  00CC                     l3840:
  9805  00CC  3001               	movlw	1
  9806  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  9807  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  9808  00CF  00EA               	movwf	??_sprintf
  9809  00D0  086A               	movf	??_sprintf,w
  9810  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  9811  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  9812  00D3  07CF               	addwf	sprintf@c^(0+128),f
  9813  00D4  300A               	movlw	10
  9814  00D5  064F               	xorwf	sprintf@c^(0+128),w
  9815  00D6  1D03               	btfss	3,2
  9816  00D7  28D9               	goto	u6201
  9817  00D8  28DA               	goto	u6200
  9818  00D9                     u6201:
  9819  00D9  2885               	goto	l3836
  9820  00DA                     u6200:
  9821  00DA                     l3842:
  9822                           
  9823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9824  00DA  084F               	movf	sprintf@c^(0+128),w
  9825  00DB  074C               	addwf	sprintf@prec^(0+128),w
  9826  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  9827  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  9828  00DE  00EA               	movwf	??_sprintf
  9829  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  9830  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  9831  00E1  084D               	movf	(sprintf@prec+1)^(0+128),w
  9832  00E2  1803               	skipnc
  9833  00E3  0A4D               	incf	(sprintf@prec+1)^(0+128),w
  9834  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  9835  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  9836  00E6  00EB               	movwf	??_sprintf+1
  9837  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  9838  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  9839  00E9  0842               	movf	sprintf@eexp^(0+128),w
  9840  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  9841  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  9842  00EC  076A               	addwf	??_sprintf,w
  9843  00ED  00EC               	movwf	??_sprintf+2
  9844  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  9845  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  9846  00F0  0843               	movf	(sprintf@eexp+1)^(0+128),w
  9847  00F1  1803               	skipnc
  9848  00F2  0A43               	incf	(sprintf@eexp+1)^(0+128),w
  9849  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  9850  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  9851  00F5  076B               	addwf	??_sprintf+1,w
  9852  00F6  00ED               	movwf	??_sprintf+3
  9853  00F7  086C               	movf	??_sprintf+2,w
  9854  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  9855  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  9856  00FA  02C6               	subwf	sprintf@width^(0+128),f
  9857  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  9858  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  9859  00FD  086D               	movf	??_sprintf+3,w
  9860  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  9861  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  9862  0100  1C03               	skipc
  9863  0101  03C7               	decf	(sprintf@width+1)^(0+128),f
  9864  0102  02C7               	subwf	(sprintf@width+1)^(0+128),f
  9865                           
  9866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9867  0103  084C               	movf	sprintf@prec^(0+128),w
  9868  0104  044D               	iorwf	(sprintf@prec+1)^(0+128),w
  9869  0105  1903               	btfsc	3,2
  9870  0106  2908               	goto	u6211
  9871  0107  2909               	goto	u6210
  9872  0108                     u6211:
  9873  0108  290F               	goto	l3846
  9874  0109                     u6210:
  9875  0109                     l3844:
  9876                           
  9877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9878  0109  30FF               	movlw	255
  9879  010A  07C6               	addwf	sprintf@width^(0+128),f
  9880  010B  1803               	skipnc
  9881  010C  0AC7               	incf	(sprintf@width+1)^(0+128),f
  9882  010D  30FF               	movlw	255
  9883  010E  07C7               	addwf	(sprintf@width+1)^(0+128),f
  9884  010F                     l3846:
  9885                           
  9886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9887  010F  3003               	movlw	3
  9888  0110  0544               	andwf	sprintf@flag^(0+128),w
  9889  0111  1283               	bcf	3,5	;RP0=0, select bank0
  9890  0112  1303               	bcf	3,6	;RP1=0, select bank0
  9891  0113  00EA               	movwf	??_sprintf
  9892  0114  3000               	movlw	0
  9893  0115  1683               	bsf	3,5	;RP0=1, select bank1
  9894  0116  1303               	bcf	3,6	;RP1=0, select bank1
  9895  0117  0545               	andwf	(sprintf@flag+1)^(0+128),w
  9896  0118  1283               	bcf	3,5	;RP0=0, select bank0
  9897  0119  1303               	bcf	3,6	;RP1=0, select bank0
  9898  011A  00EB               	movwf	??_sprintf+1
  9899  011B  086A               	movf	??_sprintf,w
  9900  011C  046B               	iorwf	??_sprintf+1,w
  9901  011D  1903               	btfsc	3,2
  9902  011E  2920               	goto	u6221
  9903  011F  2921               	goto	u6220
  9904  0120                     u6221:
  9905  0120  2929               	goto	l3850
  9906  0121                     u6220:
  9907  0121                     l3848:
  9908                           
  9909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9910  0121  30FF               	movlw	255
  9911  0122  1683               	bsf	3,5	;RP0=1, select bank1
  9912  0123  1303               	bcf	3,6	;RP1=0, select bank1
  9913  0124  07C6               	addwf	sprintf@width^(0+128),f
  9914  0125  1803               	skipnc
  9915  0126  0AC7               	incf	(sprintf@width+1)^(0+128),f
  9916  0127  30FF               	movlw	255
  9917  0128  07C7               	addwf	(sprintf@width+1)^(0+128),f
  9918  0129                     l3850:
  9919                           
  9920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
  9921  0129  1683               	bsf	3,5	;RP0=1, select bank1
  9922  012A  1303               	bcf	3,6	;RP1=0, select bank1
  9923  012B  1D44               	btfss	sprintf@flag^(0+128),2
  9924  012C  292E               	goto	u6231
  9925  012D  292F               	goto	u6230
  9926  012E                     u6231:
  9927  012E  2995               	goto	l3872
  9928  012F                     u6230:
  9929  012F                     l3852:
  9930                           
  9931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
  9932  012F  3003               	movlw	3
  9933  0130  0544               	andwf	sprintf@flag^(0+128),w
  9934  0131  1283               	bcf	3,5	;RP0=0, select bank0
  9935  0132  1303               	bcf	3,6	;RP1=0, select bank0
  9936  0133  00EA               	movwf	??_sprintf
  9937  0134  3000               	movlw	0
  9938  0135  1683               	bsf	3,5	;RP0=1, select bank1
  9939  0136  1303               	bcf	3,6	;RP1=0, select bank1
  9940  0137  0545               	andwf	(sprintf@flag+1)^(0+128),w
  9941  0138  1283               	bcf	3,5	;RP0=0, select bank0
  9942  0139  1303               	bcf	3,6	;RP1=0, select bank0
  9943  013A  00EB               	movwf	??_sprintf+1
  9944  013B  086A               	movf	??_sprintf,w
  9945  013C  046B               	iorwf	??_sprintf+1,w
  9946  013D  1903               	btfsc	3,2
  9947  013E  2940               	goto	u6241
  9948  013F  2941               	goto	u6240
  9949  0140                     u6241:
  9950  0140  296C               	goto	l3864
  9951  0141                     u6240:
  9952  0141                     l3854:
  9953                           
  9954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
  9955  0141  302D               	movlw	45
  9956  0142  00EA               	movwf	??_sprintf
  9957  0143  1683               	bsf	3,5	;RP0=1, select bank1
  9958  0144  1303               	bcf	3,6	;RP1=0, select bank1
  9959  0145  084E               	movf	sprintf@sp^(0+128),w
  9960  0146  0084               	movwf	4
  9961  0147  1283               	bcf	3,5	;RP0=0, select bank0
  9962  0148  1303               	bcf	3,6	;RP1=0, select bank0
  9963  0149  086A               	movf	??_sprintf,w
  9964  014A  1383               	bcf	3,7	;select IRP bank0
  9965  014B  0080               	movwf	0
  9966  014C                     l3856:
  9967  014C  3001               	movlw	1
  9968  014D  00EA               	movwf	??_sprintf
  9969  014E  086A               	movf	??_sprintf,w
  9970  014F  1683               	bsf	3,5	;RP0=1, select bank1
  9971  0150  1303               	bcf	3,6	;RP1=0, select bank1
  9972  0151  07CE               	addwf	sprintf@sp^(0+128),f
  9973  0152  296C               	goto	l3864
  9974  0153                     l3858:
  9975                           
  9976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
  9977  0153  3030               	movlw	48
  9978  0154  1283               	bcf	3,5	;RP0=0, select bank0
  9979  0155  1303               	bcf	3,6	;RP1=0, select bank0
  9980  0156  00EA               	movwf	??_sprintf
  9981  0157  1683               	bsf	3,5	;RP0=1, select bank1
  9982  0158  1303               	bcf	3,6	;RP1=0, select bank1
  9983  0159  084E               	movf	sprintf@sp^(0+128),w
  9984  015A  0084               	movwf	4
  9985  015B  1283               	bcf	3,5	;RP0=0, select bank0
  9986  015C  1303               	bcf	3,6	;RP1=0, select bank0
  9987  015D  086A               	movf	??_sprintf,w
  9988  015E  1383               	bcf	3,7	;select IRP bank0
  9989  015F  0080               	movwf	0
  9990  0160                     l3860:
  9991  0160  3001               	movlw	1
  9992  0161  00EA               	movwf	??_sprintf
  9993  0162  086A               	movf	??_sprintf,w
  9994  0163  1683               	bsf	3,5	;RP0=1, select bank1
  9995  0164  1303               	bcf	3,6	;RP1=0, select bank1
  9996  0165  07CE               	addwf	sprintf@sp^(0+128),f
  9997  0166                     l3862:
  9998                           
  9999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
 10000  0166  30FF               	movlw	255
 10001  0167  07C6               	addwf	sprintf@width^(0+128),f
 10002  0168  1803               	skipnc
 10003  0169  0AC7               	incf	(sprintf@width+1)^(0+128),f
 10004  016A  30FF               	movlw	255
 10005  016B  07C7               	addwf	(sprintf@width+1)^(0+128),f
 10006  016C                     l3864:
 10007                           
 10008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
 10009  016C  1683               	bsf	3,5	;RP0=1, select bank1
 10010  016D  1303               	bcf	3,6	;RP1=0, select bank1
 10011  016E  0847               	movf	(sprintf@width+1)^(0+128),w
 10012  016F  3A80               	xorlw	128
 10013  0170  00FF               	movwf	btemp+1
 10014  0171  3080               	movlw	128
 10015  0172  027F               	subwf	btemp+1,w
 10016  0173  1D03               	skipz
 10017  0174  2977               	goto	u6255
 10018  0175  3001               	movlw	1
 10019  0176  0246               	subwf	sprintf@width^(0+128),w
 10020  0177                     u6255:
 10021  0177  1803               	skipnc
 10022  0178  297A               	goto	u6251
 10023  0179  297B               	goto	u6250
 10024  017A                     u6251:
 10025  017A  2953               	goto	l3858
 10026  017B                     u6250:
 10027  017B  2A3A               	goto	l355
 10028  017C                     l3866:
 10029                           
 10030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10031  017C  3020               	movlw	32
 10032  017D  1283               	bcf	3,5	;RP0=0, select bank0
 10033  017E  1303               	bcf	3,6	;RP1=0, select bank0
 10034  017F  00EA               	movwf	??_sprintf
 10035  0180  1683               	bsf	3,5	;RP0=1, select bank1
 10036  0181  1303               	bcf	3,6	;RP1=0, select bank1
 10037  0182  084E               	movf	sprintf@sp^(0+128),w
 10038  0183  0084               	movwf	4
 10039  0184  1283               	bcf	3,5	;RP0=0, select bank0
 10040  0185  1303               	bcf	3,6	;RP1=0, select bank0
 10041  0186  086A               	movf	??_sprintf,w
 10042  0187  1383               	bcf	3,7	;select IRP bank0
 10043  0188  0080               	movwf	0
 10044  0189                     l3868:
 10045  0189  3001               	movlw	1
 10046  018A  00EA               	movwf	??_sprintf
 10047  018B  086A               	movf	??_sprintf,w
 10048  018C  1683               	bsf	3,5	;RP0=1, select bank1
 10049  018D  1303               	bcf	3,6	;RP1=0, select bank1
 10050  018E  07CE               	addwf	sprintf@sp^(0+128),f
 10051  018F                     l3870:
 10052                           
 10053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
 10054  018F  30FF               	movlw	255
 10055  0190  07C6               	addwf	sprintf@width^(0+128),f
 10056  0191  1803               	skipnc
 10057  0192  0AC7               	incf	(sprintf@width+1)^(0+128),f
 10058  0193  30FF               	movlw	255
 10059  0194  07C7               	addwf	(sprintf@width+1)^(0+128),f
 10060  0195                     l3872:
 10061                           
 10062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10063  0195  0847               	movf	(sprintf@width+1)^(0+128),w
 10064  0196  3A80               	xorlw	128
 10065  0197  00FF               	movwf	btemp+1
 10066  0198  3080               	movlw	128
 10067  0199  027F               	subwf	btemp+1,w
 10068  019A  1D03               	skipz
 10069  019B  299E               	goto	u6265
 10070  019C  3001               	movlw	1
 10071  019D  0246               	subwf	sprintf@width^(0+128),w
 10072  019E                     u6265:
 10073  019E  1803               	skipnc
 10074  019F  29A1               	goto	u6261
 10075  01A0  29A2               	goto	u6260
 10076  01A1                     u6261:
 10077  01A1  297C               	goto	l3866
 10078  01A2                     u6260:
 10079  01A2                     l3874:
 10080                           
 10081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10082  01A2  3003               	movlw	3
 10083  01A3  1683               	bsf	3,5	;RP0=1, select bank1
 10084  01A4  1303               	bcf	3,6	;RP1=0, select bank1
 10085  01A5  0544               	andwf	sprintf@flag^(0+128),w
 10086  01A6  1283               	bcf	3,5	;RP0=0, select bank0
 10087  01A7  1303               	bcf	3,6	;RP1=0, select bank0
 10088  01A8  00EA               	movwf	??_sprintf
 10089  01A9  3000               	movlw	0
 10090  01AA  1683               	bsf	3,5	;RP0=1, select bank1
 10091  01AB  1303               	bcf	3,6	;RP1=0, select bank1
 10092  01AC  0545               	andwf	(sprintf@flag+1)^(0+128),w
 10093  01AD  1283               	bcf	3,5	;RP0=0, select bank0
 10094  01AE  1303               	bcf	3,6	;RP1=0, select bank0
 10095  01AF  00EB               	movwf	??_sprintf+1
 10096  01B0  086A               	movf	??_sprintf,w
 10097  01B1  046B               	iorwf	??_sprintf+1,w
 10098  01B2  1903               	btfsc	3,2
 10099  01B3  29B5               	goto	u6271
 10100  01B4  29B6               	goto	u6270
 10101  01B5                     u6271:
 10102  01B5  2A3A               	goto	l355
 10103  01B6                     u6270:
 10104  01B6                     l3876:
 10105                           
 10106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10107  01B6  302D               	movlw	45
 10108  01B7  00EA               	movwf	??_sprintf
 10109  01B8  1683               	bsf	3,5	;RP0=1, select bank1
 10110  01B9  1303               	bcf	3,6	;RP1=0, select bank1
 10111  01BA  084E               	movf	sprintf@sp^(0+128),w
 10112  01BB  0084               	movwf	4
 10113  01BC  1283               	bcf	3,5	;RP0=0, select bank0
 10114  01BD  1303               	bcf	3,6	;RP1=0, select bank0
 10115  01BE  086A               	movf	??_sprintf,w
 10116  01BF  1383               	bcf	3,7	;select IRP bank0
 10117  01C0  0080               	movwf	0
 10118  01C1                     l3878:
 10119  01C1  3001               	movlw	1
 10120  01C2  00EA               	movwf	??_sprintf
 10121  01C3  086A               	movf	??_sprintf,w
 10122  01C4  1683               	bsf	3,5	;RP0=1, select bank1
 10123  01C5  1303               	bcf	3,6	;RP1=0, select bank1
 10124  01C6  07CE               	addwf	sprintf@sp^(0+128),f
 10125  01C7  2A3A               	goto	l355
 10126  01C8                     l3880:
 10127                           
 10128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10129  01C8  084F               	movf	sprintf@c^(0+128),w
 10130  01C9  1283               	bcf	3,5	;RP0=0, select bank0
 10131  01CA  1303               	bcf	3,6	;RP1=0, select bank0
 10132  01CB  00EA               	movwf	??_sprintf
 10133  01CC  3001               	movlw	1
 10134  01CD                     u6285:
 10135  01CD  1003               	clrc
 10136  01CE  0DEA               	rlf	??_sprintf,f
 10137  01CF  3EFF               	addlw	-1
 10138  01D0  1D03               	skipz
 10139  01D1  29CD               	goto	u6285
 10140  01D2  1003               	clrc
 10141  01D3  0D6A               	rlf	??_sprintf,w
 10142  01D4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10143  01D5  0084               	movwf	4
 10144  01D6  160A  158A  2000  120A  118A  	fcall	stringdir
 10145  01DB  00F2               	movwf	___lldiv@divisor
 10146  01DC  160A  158A  2000  120A  118A  	fcall	stringdir
 10147  01E1  00F3               	movwf	___lldiv@divisor+1
 10148  01E2  160A  158A  2000  120A  118A  	fcall	stringdir
 10149  01E7  00F4               	movwf	___lldiv@divisor+2
 10150  01E8  160A  158A  2000  120A  118A  	fcall	stringdir
 10151  01ED  00F5               	movwf	___lldiv@divisor+3
 10152  01EE  1683               	bsf	3,5	;RP0=1, select bank1
 10153  01EF  1303               	bcf	3,6	;RP1=0, select bank1
 10154  01F0  083D               	movf	(sprintf@val+3)^(0+128),w
 10155  01F1  00F9               	movwf	___lldiv@dividend+3
 10156  01F2  083C               	movf	(sprintf@val+2)^(0+128),w
 10157  01F3  00F8               	movwf	___lldiv@dividend+2
 10158  01F4  083B               	movf	(sprintf@val+1)^(0+128),w
 10159  01F5  00F7               	movwf	___lldiv@dividend+1
 10160  01F6  083A               	movf	sprintf@val^(0+128),w
 10161  01F7  00F6               	movwf	___lldiv@dividend
 10162  01F8  160A  158A  25BC  120A  118A  	fcall	___lldiv
 10163  01FD  0875               	movf	?___lldiv+3,w
 10164  01FE  1683               	bsf	3,5	;RP0=1, select bank1
 10165  01FF  1303               	bcf	3,6	;RP1=0, select bank1
 10166  0200  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
 10167  0201  0874               	movf	?___lldiv+2,w
 10168  0202  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
 10169  0203  0873               	movf	?___lldiv+1,w
 10170  0204  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
 10171  0205  0872               	movf	?___lldiv,w
 10172  0206  00BE               	movwf	sprintf@tmpval^(0+128)
 10173  0207                     l3882:
 10174                           
 10175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10176  0207  3000               	movlw	0
 10177  0208  00F5               	movwf	___llmod@divisor+3
 10178  0209  3000               	movlw	0
 10179  020A  00F4               	movwf	___llmod@divisor+2
 10180  020B  3000               	movlw	0
 10181  020C  00F3               	movwf	___llmod@divisor+1
 10182  020D  300A               	movlw	10
 10183  020E  00F2               	movwf	___llmod@divisor
 10184  020F  0841               	movf	(sprintf@tmpval+3)^(0+128),w
 10185  0210  00F9               	movwf	___llmod@dividend+3
 10186  0211  0840               	movf	(sprintf@tmpval+2)^(0+128),w
 10187  0212  00F8               	movwf	___llmod@dividend+2
 10188  0213  083F               	movf	(sprintf@tmpval+1)^(0+128),w
 10189  0214  00F7               	movwf	___llmod@dividend+1
 10190  0215  083E               	movf	sprintf@tmpval^(0+128),w
 10191  0216  00F6               	movwf	___llmod@dividend
 10192  0217  160A  158A  250D  120A  118A  	fcall	___llmod
 10193  021C  0875               	movf	?___llmod+3,w
 10194  021D  1683               	bsf	3,5	;RP0=1, select bank1
 10195  021E  1303               	bcf	3,6	;RP1=0, select bank1
 10196  021F  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
 10197  0220  0874               	movf	?___llmod+2,w
 10198  0221  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
 10199  0222  0873               	movf	?___llmod+1,w
 10200  0223  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
 10201  0224  0872               	movf	?___llmod,w
 10202  0225  00BE               	movwf	sprintf@tmpval^(0+128)
 10203  0226                     l3884:
 10204                           
 10205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10206  0226  083E               	movf	sprintf@tmpval^(0+128),w
 10207  0227  3E30               	addlw	48
 10208  0228  1283               	bcf	3,5	;RP0=0, select bank0
 10209  0229  1303               	bcf	3,6	;RP1=0, select bank0
 10210  022A  00EA               	movwf	??_sprintf
 10211  022B  1683               	bsf	3,5	;RP0=1, select bank1
 10212  022C  1303               	bcf	3,6	;RP1=0, select bank1
 10213  022D  084E               	movf	sprintf@sp^(0+128),w
 10214  022E  0084               	movwf	4
 10215  022F  1283               	bcf	3,5	;RP0=0, select bank0
 10216  0230  1303               	bcf	3,6	;RP1=0, select bank0
 10217  0231  086A               	movf	??_sprintf,w
 10218  0232  1383               	bcf	3,7	;select IRP bank0
 10219  0233  0080               	movwf	0
 10220  0234  3001               	movlw	1
 10221  0235  00EA               	movwf	??_sprintf
 10222  0236  086A               	movf	??_sprintf,w
 10223  0237  1683               	bsf	3,5	;RP0=1, select bank1
 10224  0238  1303               	bcf	3,6	;RP1=0, select bank1
 10225  0239  07CE               	addwf	sprintf@sp^(0+128),f
 10226  023A                     l355:	
 10227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10228                           
 10229                           
 10230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10231  023A  3001               	movlw	1
 10232  023B  1683               	bsf	3,5	;RP0=1, select bank1
 10233  023C  1303               	bcf	3,6	;RP1=0, select bank1
 10234  023D  02CF               	subwf	sprintf@c^(0+128),f
 10235  023E  0A4F               	incf	sprintf@c^(0+128),w
 10236  023F  1D03               	btfss	3,2
 10237  0240  2A42               	goto	u6291
 10238  0241  2A43               	goto	u6290
 10239  0242                     u6291:
 10240  0242  29C8               	goto	l3880
 10241  0243                     u6290:
 10242  0243  2A5D               	goto	l3892
 10243  0244                     l3886:
 10244                           
 10245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10246  0244  3030               	movlw	48
 10247  0245  1283               	bcf	3,5	;RP0=0, select bank0
 10248  0246  1303               	bcf	3,6	;RP1=0, select bank0
 10249  0247  00EA               	movwf	??_sprintf
 10250  0248  1683               	bsf	3,5	;RP0=1, select bank1
 10251  0249  1303               	bcf	3,6	;RP1=0, select bank1
 10252  024A  084E               	movf	sprintf@sp^(0+128),w
 10253  024B  0084               	movwf	4
 10254  024C  1283               	bcf	3,5	;RP0=0, select bank0
 10255  024D  1303               	bcf	3,6	;RP1=0, select bank0
 10256  024E  086A               	movf	??_sprintf,w
 10257  024F  1383               	bcf	3,7	;select IRP bank0
 10258  0250  0080               	movwf	0
 10259  0251                     l3888:
 10260  0251  3001               	movlw	1
 10261  0252  00EA               	movwf	??_sprintf
 10262  0253  086A               	movf	??_sprintf,w
 10263  0254  1683               	bsf	3,5	;RP0=1, select bank1
 10264  0255  1303               	bcf	3,6	;RP1=0, select bank1
 10265  0256  07CE               	addwf	sprintf@sp^(0+128),f
 10266  0257                     l3890:
 10267                           
 10268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10269  0257  30FF               	movlw	255
 10270  0258  07C2               	addwf	sprintf@eexp^(0+128),f
 10271  0259  1803               	skipnc
 10272  025A  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
 10273  025B  30FF               	movlw	255
 10274  025C  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
 10275  025D                     l3892:
 10276                           
 10277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10278  025D  0843               	movf	(sprintf@eexp+1)^(0+128),w
 10279  025E  3A80               	xorlw	128
 10280  025F  00FF               	movwf	btemp+1
 10281  0260  3080               	movlw	128
 10282  0261  027F               	subwf	btemp+1,w
 10283  0262  1D03               	skipz
 10284  0263  2A66               	goto	u6305
 10285  0264  3001               	movlw	1
 10286  0265  0242               	subwf	sprintf@eexp^(0+128),w
 10287  0266                     u6305:
 10288  0266  1803               	skipnc
 10289  0267  2A69               	goto	u6301
 10290  0268  2A6A               	goto	u6300
 10291  0269                     u6301:
 10292  0269  2A44               	goto	l3886
 10293  026A                     u6300:
 10294  026A                     l3894:
 10295                           
 10296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10297  026A  1683               	bsf	3,5	;RP0=1, select bank1
 10298  026B  1303               	bcf	3,6	;RP1=0, select bank1
 10299  026C  084D               	movf	(sprintf@prec+1)^(0+128),w
 10300  026D  3A80               	xorlw	128
 10301  026E  00FF               	movwf	btemp+1
 10302  026F  3080               	movlw	128
 10303  0270  027F               	subwf	btemp+1,w
 10304  0271  1D03               	skipz
 10305  0272  2A75               	goto	u6315
 10306  0273  3009               	movlw	9
 10307  0274  024C               	subwf	sprintf@prec^(0+128),w
 10308  0275                     u6315:
 10309  0275  1C03               	skipc
 10310  0276  2A78               	goto	u6311
 10311  0277  2A79               	goto	u6310
 10312  0278                     u6311:
 10313  0278  2A82               	goto	l3898
 10314  0279                     u6310:
 10315  0279                     l3896:
 10316                           
 10317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10318  0279  3008               	movlw	8
 10319  027A  1283               	bcf	3,5	;RP0=0, select bank0
 10320  027B  1303               	bcf	3,6	;RP1=0, select bank0
 10321  027C  00EA               	movwf	??_sprintf
 10322  027D  086A               	movf	??_sprintf,w
 10323  027E  1683               	bsf	3,5	;RP0=1, select bank1
 10324  027F  1303               	bcf	3,6	;RP1=0, select bank1
 10325  0280  00CF               	movwf	sprintf@c^(0+128)
 10326  0281  2A8C               	goto	l362
 10327  0282                     l3898:
 10328                           
 10329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10330  0282  1683               	bsf	3,5	;RP0=1, select bank1
 10331  0283  1303               	bcf	3,6	;RP1=0, select bank1
 10332  0284  084C               	movf	sprintf@prec^(0+128),w
 10333  0285  1283               	bcf	3,5	;RP0=0, select bank0
 10334  0286  1303               	bcf	3,6	;RP1=0, select bank0
 10335  0287  00EA               	movwf	??_sprintf
 10336  0288  086A               	movf	??_sprintf,w
 10337  0289  1683               	bsf	3,5	;RP0=1, select bank1
 10338  028A  1303               	bcf	3,6	;RP1=0, select bank1
 10339  028B  00CF               	movwf	sprintf@c^(0+128)
 10340  028C                     l362:
 10341                           
 10342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10343  028C  084F               	movf	sprintf@c^(0+128),w
 10344  028D  1283               	bcf	3,5	;RP0=0, select bank0
 10345  028E  1303               	bcf	3,6	;RP1=0, select bank0
 10346  028F  00EA               	movwf	??_sprintf
 10347  0290  01EB               	clrf	??_sprintf+1
 10348  0291  086A               	movf	??_sprintf,w
 10349  0292  1683               	bsf	3,5	;RP0=1, select bank1
 10350  0293  1303               	bcf	3,6	;RP1=0, select bank1
 10351  0294  02CC               	subwf	sprintf@prec^(0+128),f
 10352  0295  1283               	bcf	3,5	;RP0=0, select bank0
 10353  0296  1303               	bcf	3,6	;RP1=0, select bank0
 10354  0297  086B               	movf	??_sprintf+1,w
 10355  0298  1683               	bsf	3,5	;RP0=1, select bank1
 10356  0299  1303               	bcf	3,6	;RP1=0, select bank1
 10357  029A  1C03               	skipc
 10358  029B  03CD               	decf	(sprintf@prec+1)^(0+128),f
 10359  029C  02CD               	subwf	(sprintf@prec+1)^(0+128),f
 10360  029D                     l3900:
 10361                           
 10362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10363  029D  084F               	movf	sprintf@c^(0+128),w
 10364  029E  1903               	btfsc	3,2
 10365  029F  2AA1               	goto	u6321
 10366  02A0  2AA2               	goto	u6320
 10367  02A1                     u6321:
 10368  02A1  2AB5               	goto	l3906
 10369  02A2                     u6320:
 10370  02A2                     l3902:
 10371                           
 10372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10373  02A2  302E               	movlw	46
 10374  02A3  1283               	bcf	3,5	;RP0=0, select bank0
 10375  02A4  1303               	bcf	3,6	;RP1=0, select bank0
 10376  02A5  00EA               	movwf	??_sprintf
 10377  02A6  1683               	bsf	3,5	;RP0=1, select bank1
 10378  02A7  1303               	bcf	3,6	;RP1=0, select bank1
 10379  02A8  084E               	movf	sprintf@sp^(0+128),w
 10380  02A9  0084               	movwf	4
 10381  02AA  1283               	bcf	3,5	;RP0=0, select bank0
 10382  02AB  1303               	bcf	3,6	;RP1=0, select bank0
 10383  02AC  086A               	movf	??_sprintf,w
 10384  02AD  1383               	bcf	3,7	;select IRP bank0
 10385  02AE  0080               	movwf	0
 10386  02AF                     l3904:
 10387  02AF  3001               	movlw	1
 10388  02B0  00EA               	movwf	??_sprintf
 10389  02B1  086A               	movf	??_sprintf,w
 10390  02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10391  02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10392  02B4  07CE               	addwf	sprintf@sp^(0+128),f
 10393  02B5                     l3906:
 10394                           
 10395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10396  02B5  084F               	movf	sprintf@c^(0+128),w
 10397  02B6  120A  158A  249D  120A  118A  	fcall	_scale
 10398  02BB  1283               	bcf	3,5	;RP0=0, select bank0
 10399  02BC  1303               	bcf	3,6	;RP1=0, select bank0
 10400  02BD  0845               	movf	?_scale+3,w
 10401  02BE  1683               	bsf	3,5	;RP0=1, select bank1
 10402  02BF  1303               	bcf	3,6	;RP1=0, select bank1
 10403  02C0  00B8               	movwf	(_sprintf$1181+3)^(0+128)
 10404  02C1  1283               	bcf	3,5	;RP0=0, select bank0
 10405  02C2  1303               	bcf	3,6	;RP1=0, select bank0
 10406  02C3  0844               	movf	?_scale+2,w
 10407  02C4  1683               	bsf	3,5	;RP0=1, select bank1
 10408  02C5  1303               	bcf	3,6	;RP1=0, select bank1
 10409  02C6  00B7               	movwf	(_sprintf$1181+2)^(0+128)
 10410  02C7  1283               	bcf	3,5	;RP0=0, select bank0
 10411  02C8  1303               	bcf	3,6	;RP1=0, select bank0
 10412  02C9  0843               	movf	?_scale+1,w
 10413  02CA  1683               	bsf	3,5	;RP0=1, select bank1
 10414  02CB  1303               	bcf	3,6	;RP1=0, select bank1
 10415  02CC  00B6               	movwf	(_sprintf$1181+1)^(0+128)
 10416  02CD  1283               	bcf	3,5	;RP0=0, select bank0
 10417  02CE  1303               	bcf	3,6	;RP1=0, select bank0
 10418  02CF  0842               	movf	?_scale,w
 10419  02D0  1683               	bsf	3,5	;RP0=1, select bank1
 10420  02D1  1303               	bcf	3,6	;RP1=0, select bank1
 10421  02D2  00B5               	movwf	_sprintf$1181^(0+128)
 10422  02D3                     l3908:
 10423                           
 10424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10425  02D3  0838               	movf	(_sprintf$1181+3)^(0+128),w
 10426  02D4  1283               	bcf	3,5	;RP0=0, select bank0
 10427  02D5  1303               	bcf	3,6	;RP1=0, select bank0
 10428  02D6  00AF               	movwf	___flmul@a+3
 10429  02D7  1683               	bsf	3,5	;RP0=1, select bank1
 10430  02D8  1303               	bcf	3,6	;RP1=0, select bank1
 10431  02D9  0837               	movf	(_sprintf$1181+2)^(0+128),w
 10432  02DA  1283               	bcf	3,5	;RP0=0, select bank0
 10433  02DB  1303               	bcf	3,6	;RP1=0, select bank0
 10434  02DC  00AE               	movwf	___flmul@a+2
 10435  02DD  1683               	bsf	3,5	;RP0=1, select bank1
 10436  02DE  1303               	bcf	3,6	;RP1=0, select bank1
 10437  02DF  0836               	movf	(_sprintf$1181+1)^(0+128),w
 10438  02E0  1283               	bcf	3,5	;RP0=0, select bank0
 10439  02E1  1303               	bcf	3,6	;RP1=0, select bank0
 10440  02E2  00AD               	movwf	___flmul@a+1
 10441  02E3  1683               	bsf	3,5	;RP0=1, select bank1
 10442  02E4  1303               	bcf	3,6	;RP1=0, select bank1
 10443  02E5  0835               	movf	_sprintf$1181^(0+128),w
 10444  02E6  1283               	bcf	3,5	;RP0=0, select bank0
 10445  02E7  1303               	bcf	3,6	;RP1=0, select bank0
 10446  02E8  00AC               	movwf	___flmul@a
 10447  02E9  1683               	bsf	3,5	;RP0=1, select bank1
 10448  02EA  1303               	bcf	3,6	;RP1=0, select bank1
 10449  02EB  084B               	movf	(sprintf@fval+3)^(0+128),w
 10450  02EC  1283               	bcf	3,5	;RP0=0, select bank0
 10451  02ED  1303               	bcf	3,6	;RP1=0, select bank0
 10452  02EE  00AB               	movwf	___flmul@b+3
 10453  02EF  1683               	bsf	3,5	;RP0=1, select bank1
 10454  02F0  1303               	bcf	3,6	;RP1=0, select bank1
 10455  02F1  084A               	movf	(sprintf@fval+2)^(0+128),w
 10456  02F2  1283               	bcf	3,5	;RP0=0, select bank0
 10457  02F3  1303               	bcf	3,6	;RP1=0, select bank0
 10458  02F4  00AA               	movwf	___flmul@b+2
 10459  02F5  1683               	bsf	3,5	;RP0=1, select bank1
 10460  02F6  1303               	bcf	3,6	;RP1=0, select bank1
 10461  02F7  0849               	movf	(sprintf@fval+1)^(0+128),w
 10462  02F8  1283               	bcf	3,5	;RP0=0, select bank0
 10463  02F9  1303               	bcf	3,6	;RP1=0, select bank0
 10464  02FA  00A9               	movwf	___flmul@b+1
 10465  02FB  1683               	bsf	3,5	;RP0=1, select bank1
 10466  02FC  1303               	bcf	3,6	;RP1=0, select bank1
 10467  02FD  0848               	movf	sprintf@fval^(0+128),w
 10468  02FE  1283               	bcf	3,5	;RP0=0, select bank0
 10469  02FF  1303               	bcf	3,6	;RP1=0, select bank0
 10470  0300  00A8               	movwf	___flmul@b
 10471  0301  120A  158A  213C  120A  118A  	fcall	___flmul
 10472  0306  1283               	bcf	3,5	;RP0=0, select bank0
 10473  0307  1303               	bcf	3,6	;RP1=0, select bank0
 10474  0308  082B               	movf	?___flmul+3,w
 10475  0309  00D8               	movwf	___fltol@f1+3
 10476  030A  082A               	movf	?___flmul+2,w
 10477  030B  00D7               	movwf	___fltol@f1+2
 10478  030C  0829               	movf	?___flmul+1,w
 10479  030D  00D6               	movwf	___fltol@f1+1
 10480  030E  0828               	movf	?___flmul,w
 10481  030F  00D5               	movwf	___fltol@f1
 10482  0310  160A  158A  2624  120A  118A  	fcall	___fltol
 10483  0315  1283               	bcf	3,5	;RP0=0, select bank0
 10484  0316  1303               	bcf	3,6	;RP1=0, select bank0
 10485  0317  0858               	movf	?___fltol+3,w
 10486  0318  1683               	bsf	3,5	;RP0=1, select bank1
 10487  0319  1303               	bcf	3,6	;RP1=0, select bank1
 10488  031A  00BD               	movwf	(sprintf@val+3)^(0+128)
 10489  031B  1283               	bcf	3,5	;RP0=0, select bank0
 10490  031C  1303               	bcf	3,6	;RP1=0, select bank0
 10491  031D  0857               	movf	?___fltol+2,w
 10492  031E  1683               	bsf	3,5	;RP0=1, select bank1
 10493  031F  1303               	bcf	3,6	;RP1=0, select bank1
 10494  0320  00BC               	movwf	(sprintf@val+2)^(0+128)
 10495  0321  1283               	bcf	3,5	;RP0=0, select bank0
 10496  0322  1303               	bcf	3,6	;RP1=0, select bank0
 10497  0323  0856               	movf	?___fltol+1,w
 10498  0324  1683               	bsf	3,5	;RP0=1, select bank1
 10499  0325  1303               	bcf	3,6	;RP1=0, select bank1
 10500  0326  00BB               	movwf	(sprintf@val+1)^(0+128)
 10501  0327  1283               	bcf	3,5	;RP0=0, select bank0
 10502  0328  1303               	bcf	3,6	;RP1=0, select bank0
 10503  0329  0855               	movf	?___fltol,w
 10504  032A  1683               	bsf	3,5	;RP0=1, select bank1
 10505  032B  1303               	bcf	3,6	;RP1=0, select bank1
 10506  032C  00BA               	movwf	sprintf@val^(0+128)
 10507                           
 10508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10509  032D  2BDF               	goto	l3918
 10510  032E                     l3910:
 10511                           
 10512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10513  032E  084F               	movf	sprintf@c^(0+128),w
 10514  032F  1283               	bcf	3,5	;RP0=0, select bank0
 10515  0330  1303               	bcf	3,6	;RP1=0, select bank0
 10516  0331  00EA               	movwf	??_sprintf
 10517  0332  3001               	movlw	1
 10518  0333                     u6335:
 10519  0333  1003               	clrc
 10520  0334  0DEA               	rlf	??_sprintf,f
 10521  0335  3EFF               	addlw	-1
 10522  0336  1D03               	skipz
 10523  0337  2B33               	goto	u6335
 10524  0338  1003               	clrc
 10525  0339  0D6A               	rlf	??_sprintf,w
 10526  033A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10527  033B  0084               	movwf	4
 10528  033C  160A  158A  2000  120A  118A  	fcall	stringdir
 10529  0341  00F2               	movwf	___lldiv@divisor
 10530  0342  160A  158A  2000  120A  118A  	fcall	stringdir
 10531  0347  00F3               	movwf	___lldiv@divisor+1
 10532  0348  160A  158A  2000  120A  118A  	fcall	stringdir
 10533  034D  00F4               	movwf	___lldiv@divisor+2
 10534  034E  160A  158A  2000  120A  118A  	fcall	stringdir
 10535  0353  00F5               	movwf	___lldiv@divisor+3
 10536  0354  1683               	bsf	3,5	;RP0=1, select bank1
 10537  0355  1303               	bcf	3,6	;RP1=0, select bank1
 10538  0356  083D               	movf	(sprintf@val+3)^(0+128),w
 10539  0357  00F9               	movwf	___lldiv@dividend+3
 10540  0358  083C               	movf	(sprintf@val+2)^(0+128),w
 10541  0359  00F8               	movwf	___lldiv@dividend+2
 10542  035A  083B               	movf	(sprintf@val+1)^(0+128),w
 10543  035B  00F7               	movwf	___lldiv@dividend+1
 10544  035C  083A               	movf	sprintf@val^(0+128),w
 10545  035D  00F6               	movwf	___lldiv@dividend
 10546  035E  160A  158A  25BC  120A  118A  	fcall	___lldiv
 10547  0363  0875               	movf	?___lldiv+3,w
 10548  0364  1683               	bsf	3,5	;RP0=1, select bank1
 10549  0365  1303               	bcf	3,6	;RP1=0, select bank1
 10550  0366  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
 10551  0367  0874               	movf	?___lldiv+2,w
 10552  0368  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
 10553  0369  0873               	movf	?___lldiv+1,w
 10554  036A  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
 10555  036B  0872               	movf	?___lldiv,w
 10556  036C  00BE               	movwf	sprintf@tmpval^(0+128)
 10557  036D                     l3912:
 10558                           
 10559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10560  036D  3000               	movlw	0
 10561  036E  00F5               	movwf	___llmod@divisor+3
 10562  036F  3000               	movlw	0
 10563  0370  00F4               	movwf	___llmod@divisor+2
 10564  0371  3000               	movlw	0
 10565  0372  00F3               	movwf	___llmod@divisor+1
 10566  0373  300A               	movlw	10
 10567  0374  00F2               	movwf	___llmod@divisor
 10568  0375  0841               	movf	(sprintf@tmpval+3)^(0+128),w
 10569  0376  00F9               	movwf	___llmod@dividend+3
 10570  0377  0840               	movf	(sprintf@tmpval+2)^(0+128),w
 10571  0378  00F8               	movwf	___llmod@dividend+2
 10572  0379  083F               	movf	(sprintf@tmpval+1)^(0+128),w
 10573  037A  00F7               	movwf	___llmod@dividend+1
 10574  037B  083E               	movf	sprintf@tmpval^(0+128),w
 10575  037C  00F6               	movwf	___llmod@dividend
 10576  037D  160A  158A  250D  120A  118A  	fcall	___llmod
 10577  0382  0875               	movf	?___llmod+3,w
 10578  0383  1683               	bsf	3,5	;RP0=1, select bank1
 10579  0384  1303               	bcf	3,6	;RP1=0, select bank1
 10580  0385  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
 10581  0386  0874               	movf	?___llmod+2,w
 10582  0387  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
 10583  0388  0873               	movf	?___llmod+1,w
 10584  0389  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
 10585  038A  0872               	movf	?___llmod,w
 10586  038B  00BE               	movwf	sprintf@tmpval^(0+128)
 10587  038C                     l3914:
 10588                           
 10589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10590  038C  083E               	movf	sprintf@tmpval^(0+128),w
 10591  038D  3E30               	addlw	48
 10592  038E  1283               	bcf	3,5	;RP0=0, select bank0
 10593  038F  1303               	bcf	3,6	;RP1=0, select bank0
 10594  0390  00EA               	movwf	??_sprintf
 10595  0391  1683               	bsf	3,5	;RP0=1, select bank1
 10596  0392  1303               	bcf	3,6	;RP1=0, select bank1
 10597  0393  084E               	movf	sprintf@sp^(0+128),w
 10598  0394  0084               	movwf	4
 10599  0395  1283               	bcf	3,5	;RP0=0, select bank0
 10600  0396  1303               	bcf	3,6	;RP1=0, select bank0
 10601  0397  086A               	movf	??_sprintf,w
 10602  0398  1383               	bcf	3,7	;select IRP bank0
 10603  0399  0080               	movwf	0
 10604  039A  3001               	movlw	1
 10605  039B  00EA               	movwf	??_sprintf
 10606  039C  086A               	movf	??_sprintf,w
 10607  039D  1683               	bsf	3,5	;RP0=1, select bank1
 10608  039E  1303               	bcf	3,6	;RP1=0, select bank1
 10609  039F  07CE               	addwf	sprintf@sp^(0+128),f
 10610  03A0                     l3916:
 10611                           
 10612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10613  03A0  084F               	movf	sprintf@c^(0+128),w
 10614  03A1  1283               	bcf	3,5	;RP0=0, select bank0
 10615  03A2  1303               	bcf	3,6	;RP1=0, select bank0
 10616  03A3  00EA               	movwf	??_sprintf
 10617  03A4  3001               	movlw	1
 10618  03A5                     u6345:
 10619  03A5  1003               	clrc
 10620  03A6  0DEA               	rlf	??_sprintf,f
 10621  03A7  3EFF               	addlw	-1
 10622  03A8  1D03               	skipz
 10623  03A9  2BA5               	goto	u6345
 10624  03AA  1003               	clrc
 10625  03AB  0D6A               	rlf	??_sprintf,w
 10626  03AC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10627  03AD  0084               	movwf	4
 10628  03AE  160A  158A  2000  120A  118A  	fcall	stringdir
 10629  03B3  00F2               	movwf	___llmod@divisor
 10630  03B4  160A  158A  2000  120A  118A  	fcall	stringdir
 10631  03B9  00F3               	movwf	___llmod@divisor+1
 10632  03BA  160A  158A  2000  120A  118A  	fcall	stringdir
 10633  03BF  00F4               	movwf	___llmod@divisor+2
 10634  03C0  160A  158A  2000  120A  118A  	fcall	stringdir
 10635  03C5  00F5               	movwf	___llmod@divisor+3
 10636  03C6  1683               	bsf	3,5	;RP0=1, select bank1
 10637  03C7  1303               	bcf	3,6	;RP1=0, select bank1
 10638  03C8  083D               	movf	(sprintf@val+3)^(0+128),w
 10639  03C9  00F9               	movwf	___llmod@dividend+3
 10640  03CA  083C               	movf	(sprintf@val+2)^(0+128),w
 10641  03CB  00F8               	movwf	___llmod@dividend+2
 10642  03CC  083B               	movf	(sprintf@val+1)^(0+128),w
 10643  03CD  00F7               	movwf	___llmod@dividend+1
 10644  03CE  083A               	movf	sprintf@val^(0+128),w
 10645  03CF  00F6               	movwf	___llmod@dividend
 10646  03D0  160A  158A  250D  120A  118A  	fcall	___llmod
 10647  03D5  0875               	movf	?___llmod+3,w
 10648  03D6  1683               	bsf	3,5	;RP0=1, select bank1
 10649  03D7  1303               	bcf	3,6	;RP1=0, select bank1
 10650  03D8  00BD               	movwf	(sprintf@val+3)^(0+128)
 10651  03D9  0874               	movf	?___llmod+2,w
 10652  03DA  00BC               	movwf	(sprintf@val+2)^(0+128)
 10653  03DB  0873               	movf	?___llmod+1,w
 10654  03DC  00BB               	movwf	(sprintf@val+1)^(0+128)
 10655  03DD  0872               	movf	?___llmod,w
 10656  03DE  00BA               	movwf	sprintf@val^(0+128)
 10657  03DF                     l3918:
 10658                           
 10659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10660  03DF  3001               	movlw	1
 10661  03E0  02CF               	subwf	sprintf@c^(0+128),f
 10662  03E1  0A4F               	incf	sprintf@c^(0+128),w
 10663  03E2  1D03               	btfss	3,2
 10664  03E3  2BE5               	goto	u6351
 10665  03E4  2BE6               	goto	u6350
 10666  03E5                     u6351:
 10667  03E5  2B2E               	goto	l3910
 10668  03E6                     u6350:
 10669  03E6  2C00               	goto	l3926
 10670  03E7                     l3920:
 10671                           
 10672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10673  03E7  3030               	movlw	48
 10674  03E8  1283               	bcf	3,5	;RP0=0, select bank0
 10675  03E9  1303               	bcf	3,6	;RP1=0, select bank0
 10676  03EA  00EA               	movwf	??_sprintf
 10677  03EB  1683               	bsf	3,5	;RP0=1, select bank1
 10678  03EC  1303               	bcf	3,6	;RP1=0, select bank1
 10679  03ED  084E               	movf	sprintf@sp^(0+128),w
 10680  03EE  0084               	movwf	4
 10681  03EF  1283               	bcf	3,5	;RP0=0, select bank0
 10682  03F0  1303               	bcf	3,6	;RP1=0, select bank0
 10683  03F1  086A               	movf	??_sprintf,w
 10684  03F2  1383               	bcf	3,7	;select IRP bank0
 10685  03F3  0080               	movwf	0
 10686  03F4                     l3922:
 10687  03F4  3001               	movlw	1
 10688  03F5  00EA               	movwf	??_sprintf
 10689  03F6  086A               	movf	??_sprintf,w
 10690  03F7  1683               	bsf	3,5	;RP0=1, select bank1
 10691  03F8  1303               	bcf	3,6	;RP1=0, select bank1
 10692  03F9  07CE               	addwf	sprintf@sp^(0+128),f
 10693  03FA                     l3924:
 10694                           
 10695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10696  03FA  30FF               	movlw	255
 10697  03FB  07CC               	addwf	sprintf@prec^(0+128),f
 10698  03FC  1803               	skipnc
 10699  03FD  0ACD               	incf	(sprintf@prec+1)^(0+128),f
 10700  03FE  30FF               	movlw	255
 10701  03FF  07CD               	addwf	(sprintf@prec+1)^(0+128),f
 10702  0400                     l3926:
 10703                           
 10704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10705  0400  084C               	movf	sprintf@prec^(0+128),w
 10706  0401  044D               	iorwf	(sprintf@prec+1)^(0+128),w
 10707  0402  1D03               	btfss	3,2
 10708  0403  2C05               	goto	u6361
 10709  0404  2C06               	goto	u6360
 10710  0405                     u6361:
 10711  0405  2BE7               	goto	l3920
 10712  0406                     u6360:
 10713  0406  2D59               	goto	l3990
 10714  0407                     l3928:
 10715                           
 10716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10717  0407  1683               	bsf	3,5	;RP0=1, select bank1
 10718  0408  1303               	bcf	3,6	;RP1=0, select bank1
 10719  0409  084C               	movf	sprintf@prec^(0+128),w
 10720  040A  044D               	iorwf	(sprintf@prec+1)^(0+128),w
 10721  040B  1D03               	btfss	3,2
 10722  040C  2C0E               	goto	u6371
 10723  040D  2C0F               	goto	u6370
 10724  040E                     u6371:
 10725  040E  2C1D               	goto	l370
 10726  040F                     u6370:
 10727  040F                     l3930:
 10728  040F  083D               	movf	(sprintf@val+3)^(0+128),w
 10729  0410  043C               	iorwf	(sprintf@val+2)^(0+128),w
 10730  0411  043B               	iorwf	(sprintf@val+1)^(0+128),w
 10731  0412  043A               	iorwf	sprintf@val^(0+128),w
 10732  0413  1D03               	skipz
 10733  0414  2C16               	goto	u6381
 10734  0415  2C17               	goto	u6380
 10735  0416                     u6381:
 10736  0416  2C1D               	goto	l370
 10737  0417                     u6380:
 10738  0417                     l3932:
 10739                           
 10740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10741  0417  3001               	movlw	1
 10742  0418  07CC               	addwf	sprintf@prec^(0+128),f
 10743  0419  1803               	skipnc
 10744  041A  0ACD               	incf	(sprintf@prec+1)^(0+128),f
 10745  041B  3000               	movlw	0
 10746  041C  07CD               	addwf	(sprintf@prec+1)^(0+128),f
 10747  041D                     l370:
 10748                           
 10749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10750  041D  084D               	movf	(sprintf@prec+1)^(0+128),w
 10751  041E  3A80               	xorlw	128
 10752  041F  3C80               	sublw	128
 10753  0420  1D03               	skipz
 10754  0421  2C24               	goto	u6395
 10755  0422  084C               	movf	sprintf@prec^(0+128),w
 10756  0423  024F               	subwf	sprintf@c^(0+128),w
 10757  0424                     u6395:
 10758  0424  1803               	skipnc
 10759  0425  2C27               	goto	u6391
 10760  0426  2C28               	goto	u6390
 10761  0427                     u6391:
 10762  0427  2C33               	goto	l3936
 10763  0428                     u6390:
 10764  0428                     l3934:
 10765                           
 10766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10767  0428  1683               	bsf	3,5	;RP0=1, select bank1
 10768  0429  1303               	bcf	3,6	;RP1=0, select bank1
 10769  042A  084C               	movf	sprintf@prec^(0+128),w
 10770  042B  1283               	bcf	3,5	;RP0=0, select bank0
 10771  042C  1303               	bcf	3,6	;RP1=0, select bank0
 10772  042D  00EA               	movwf	??_sprintf
 10773  042E  086A               	movf	??_sprintf,w
 10774  042F  1683               	bsf	3,5	;RP0=1, select bank1
 10775  0430  1303               	bcf	3,6	;RP1=0, select bank1
 10776  0431  00CF               	movwf	sprintf@c^(0+128)
 10777  0432  2C57               	goto	l3940
 10778  0433                     l3936:
 10779  0433  1683               	bsf	3,5	;RP0=1, select bank1
 10780  0434  1303               	bcf	3,6	;RP1=0, select bank1
 10781  0435  084D               	movf	(sprintf@prec+1)^(0+128),w
 10782  0436  3A80               	xorlw	128
 10783  0437  1283               	bcf	3,5	;RP0=0, select bank0
 10784  0438  1303               	bcf	3,6	;RP1=0, select bank0
 10785  0439  00EA               	movwf	??_sprintf
 10786  043A  3080               	movlw	128
 10787  043B  026A               	subwf	??_sprintf,w
 10788  043C  1D03               	skipz
 10789  043D  2C42               	goto	u6405
 10790  043E  1683               	bsf	3,5	;RP0=1, select bank1
 10791  043F  1303               	bcf	3,6	;RP1=0, select bank1
 10792  0440  084F               	movf	sprintf@c^(0+128),w
 10793  0441  024C               	subwf	sprintf@prec^(0+128),w
 10794  0442                     u6405:
 10795  0442  1803               	skipnc
 10796  0443  2C45               	goto	u6401
 10797  0444  2C46               	goto	u6400
 10798  0445                     u6401:
 10799  0445  2C57               	goto	l3940
 10800  0446                     u6400:
 10801  0446                     l3938:
 10802                           
 10803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10804  0446  1683               	bsf	3,5	;RP0=1, select bank1
 10805  0447  1303               	bcf	3,6	;RP1=0, select bank1
 10806  0448  084F               	movf	sprintf@c^(0+128),w
 10807  0449  1283               	bcf	3,5	;RP0=0, select bank0
 10808  044A  1303               	bcf	3,6	;RP1=0, select bank0
 10809  044B  00EA               	movwf	??_sprintf
 10810  044C  01EB               	clrf	??_sprintf+1
 10811  044D  086A               	movf	??_sprintf,w
 10812  044E  1683               	bsf	3,5	;RP0=1, select bank1
 10813  044F  1303               	bcf	3,6	;RP1=0, select bank1
 10814  0450  00CC               	movwf	sprintf@prec^(0+128)
 10815  0451  1283               	bcf	3,5	;RP0=0, select bank0
 10816  0452  1303               	bcf	3,6	;RP1=0, select bank0
 10817  0453  086B               	movf	??_sprintf+1,w
 10818  0454  1683               	bsf	3,5	;RP0=1, select bank1
 10819  0455  1303               	bcf	3,6	;RP1=0, select bank1
 10820  0456  00CD               	movwf	(sprintf@prec+1)^(0+128)
 10821  0457                     l3940:
 10822                           
 10823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10824  0457  1683               	bsf	3,5	;RP0=1, select bank1
 10825  0458  1303               	bcf	3,6	;RP1=0, select bank1
 10826  0459  0846               	movf	sprintf@width^(0+128),w
 10827  045A  0447               	iorwf	(sprintf@width+1)^(0+128),w
 10828  045B  1903               	btfsc	3,2
 10829  045C  2C5E               	goto	u6411
 10830  045D  2C5F               	goto	u6410
 10831  045E                     u6411:
 10832  045E  2C79               	goto	l3946
 10833  045F                     u6410:
 10834  045F                     l3942:
 10835  045F  3003               	movlw	3
 10836  0460  0544               	andwf	sprintf@flag^(0+128),w
 10837  0461  1283               	bcf	3,5	;RP0=0, select bank0
 10838  0462  1303               	bcf	3,6	;RP1=0, select bank0
 10839  0463  00EA               	movwf	??_sprintf
 10840  0464  3000               	movlw	0
 10841  0465  1683               	bsf	3,5	;RP0=1, select bank1
 10842  0466  1303               	bcf	3,6	;RP1=0, select bank1
 10843  0467  0545               	andwf	(sprintf@flag+1)^(0+128),w
 10844  0468  1283               	bcf	3,5	;RP0=0, select bank0
 10845  0469  1303               	bcf	3,6	;RP1=0, select bank0
 10846  046A  00EB               	movwf	??_sprintf+1
 10847  046B  086A               	movf	??_sprintf,w
 10848  046C  046B               	iorwf	??_sprintf+1,w
 10849  046D  1903               	btfsc	3,2
 10850  046E  2C70               	goto	u6421
 10851  046F  2C71               	goto	u6420
 10852  0470                     u6421:
 10853  0470  2C79               	goto	l3946
 10854  0471                     u6420:
 10855  0471                     l3944:
 10856                           
 10857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10858  0471  30FF               	movlw	255
 10859  0472  1683               	bsf	3,5	;RP0=1, select bank1
 10860  0473  1303               	bcf	3,6	;RP1=0, select bank1
 10861  0474  07C6               	addwf	sprintf@width^(0+128),f
 10862  0475  1803               	skipnc
 10863  0476  0AC7               	incf	(sprintf@width+1)^(0+128),f
 10864  0477  30FF               	movlw	255
 10865  0478  07C7               	addwf	(sprintf@width+1)^(0+128),f
 10866  0479                     l3946:
 10867                           
 10868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10869  0479  1683               	bsf	3,5	;RP0=1, select bank1
 10870  047A  1303               	bcf	3,6	;RP1=0, select bank1
 10871  047B  1F45               	btfss	(sprintf@flag+1)^(0+128),6
 10872  047C  2C7E               	goto	u6431
 10873  047D  2C7F               	goto	u6430
 10874  047E                     u6431:
 10875  047E  2CA2               	goto	l3954
 10876  047F                     u6430:
 10877  047F                     l3948:
 10878                           
 10879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10880  047F  084D               	movf	(sprintf@prec+1)^(0+128),w
 10881  0480  3A80               	xorlw	128
 10882  0481  1283               	bcf	3,5	;RP0=0, select bank0
 10883  0482  1303               	bcf	3,6	;RP1=0, select bank0
 10884  0483  00EA               	movwf	??_sprintf
 10885  0484  1683               	bsf	3,5	;RP0=1, select bank1
 10886  0485  1303               	bcf	3,6	;RP1=0, select bank1
 10887  0486  0847               	movf	(sprintf@width+1)^(0+128),w
 10888  0487  3A80               	xorlw	128
 10889  0488  1283               	bcf	3,5	;RP0=0, select bank0
 10890  0489  1303               	bcf	3,6	;RP1=0, select bank0
 10891  048A  026A               	subwf	??_sprintf,w
 10892  048B  1D03               	skipz
 10893  048C  2C91               	goto	u6445
 10894  048D  1683               	bsf	3,5	;RP0=1, select bank1
 10895  048E  1303               	bcf	3,6	;RP1=0, select bank1
 10896  048F  0846               	movf	sprintf@width^(0+128),w
 10897  0490  024C               	subwf	sprintf@prec^(0+128),w
 10898  0491                     u6445:
 10899  0491  1803               	skipnc
 10900  0492  2C94               	goto	u6441
 10901  0493  2C95               	goto	u6440
 10902  0494                     u6441:
 10903  0494  2C9E               	goto	l3952
 10904  0495                     u6440:
 10905  0495                     l3950:
 10906                           
 10907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10908  0495  1683               	bsf	3,5	;RP0=1, select bank1
 10909  0496  1303               	bcf	3,6	;RP1=0, select bank1
 10910  0497  084C               	movf	sprintf@prec^(0+128),w
 10911  0498  02C6               	subwf	sprintf@width^(0+128),f
 10912  0499  084D               	movf	(sprintf@prec+1)^(0+128),w
 10913  049A  1C03               	skipc
 10914  049B  03C7               	decf	(sprintf@width+1)^(0+128),f
 10915  049C  02C7               	subwf	(sprintf@width+1)^(0+128),f
 10916  049D  2CA2               	goto	l3954
 10917  049E                     l3952:
 10918                           
 10919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10920  049E  1683               	bsf	3,5	;RP0=1, select bank1
 10921  049F  1303               	bcf	3,6	;RP1=0, select bank1
 10922  04A0  01C6               	clrf	sprintf@width^(0+128)
 10923  04A1  01C7               	clrf	(sprintf@width+1)^(0+128)
 10924  04A2                     l3954:
 10925                           
 10926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10927  04A2  0847               	movf	(sprintf@width+1)^(0+128),w
 10928  04A3  3A80               	xorlw	128
 10929  04A4  3C80               	sublw	128
 10930  04A5  1D03               	skipz
 10931  04A6  2CA9               	goto	u6455
 10932  04A7  0846               	movf	sprintf@width^(0+128),w
 10933  04A8  024F               	subwf	sprintf@c^(0+128),w
 10934  04A9                     u6455:
 10935  04A9  1803               	skipnc
 10936  04AA  2CAC               	goto	u6451
 10937  04AB  2CAD               	goto	u6450
 10938  04AC                     u6451:
 10939  04AC  2CC1               	goto	l3958
 10940  04AD                     u6450:
 10941  04AD                     l3956:
 10942                           
 10943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10944  04AD  1683               	bsf	3,5	;RP0=1, select bank1
 10945  04AE  1303               	bcf	3,6	;RP1=0, select bank1
 10946  04AF  084F               	movf	sprintf@c^(0+128),w
 10947  04B0  1283               	bcf	3,5	;RP0=0, select bank0
 10948  04B1  1303               	bcf	3,6	;RP1=0, select bank0
 10949  04B2  00EA               	movwf	??_sprintf
 10950  04B3  01EB               	clrf	??_sprintf+1
 10951  04B4  086A               	movf	??_sprintf,w
 10952  04B5  1683               	bsf	3,5	;RP0=1, select bank1
 10953  04B6  1303               	bcf	3,6	;RP1=0, select bank1
 10954  04B7  02C6               	subwf	sprintf@width^(0+128),f
 10955  04B8  1283               	bcf	3,5	;RP0=0, select bank0
 10956  04B9  1303               	bcf	3,6	;RP1=0, select bank0
 10957  04BA  086B               	movf	??_sprintf+1,w
 10958  04BB  1683               	bsf	3,5	;RP0=1, select bank1
 10959  04BC  1303               	bcf	3,6	;RP1=0, select bank1
 10960  04BD  1C03               	skipc
 10961  04BE  03C7               	decf	(sprintf@width+1)^(0+128),f
 10962  04BF  02C7               	subwf	(sprintf@width+1)^(0+128),f
 10963  04C0  2CC5               	goto	l3960
 10964  04C1                     l3958:
 10965                           
 10966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10967  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 10968  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 10969  04C3  01C6               	clrf	sprintf@width^(0+128)
 10970  04C4  01C7               	clrf	(sprintf@width+1)^(0+128)
 10971  04C5                     l3960:
 10972                           
 10973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
 10974  04C5  1D44               	btfss	sprintf@flag^(0+128),2
 10975  04C6  2CC8               	goto	u6461
 10976  04C7  2CC9               	goto	u6460
 10977  04C8                     u6461:
 10978  04C8  2D14               	goto	l3976
 10979  04C9                     u6460:
 10980  04C9                     l3962:
 10981                           
 10982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
 10983  04C9  3003               	movlw	3
 10984  04CA  0544               	andwf	sprintf@flag^(0+128),w
 10985  04CB  1283               	bcf	3,5	;RP0=0, select bank0
 10986  04CC  1303               	bcf	3,6	;RP1=0, select bank0
 10987  04CD  00EA               	movwf	??_sprintf
 10988  04CE  3000               	movlw	0
 10989  04CF  1683               	bsf	3,5	;RP0=1, select bank1
 10990  04D0  1303               	bcf	3,6	;RP1=0, select bank1
 10991  04D1  0545               	andwf	(sprintf@flag+1)^(0+128),w
 10992  04D2  1283               	bcf	3,5	;RP0=0, select bank0
 10993  04D3  1303               	bcf	3,6	;RP1=0, select bank0
 10994  04D4  00EB               	movwf	??_sprintf+1
 10995  04D5  086A               	movf	??_sprintf,w
 10996  04D6  046B               	iorwf	??_sprintf+1,w
 10997  04D7  1903               	btfsc	3,2
 10998  04D8  2CDA               	goto	u6471
 10999  04D9  2CDB               	goto	u6470
 11000  04DA                     u6471:
 11001  04DA  2CEC               	goto	l3968
 11002  04DB                     u6470:
 11003  04DB                     l3964:
 11004                           
 11005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
 11006  04DB  302D               	movlw	45
 11007  04DC  00EA               	movwf	??_sprintf
 11008  04DD  1683               	bsf	3,5	;RP0=1, select bank1
 11009  04DE  1303               	bcf	3,6	;RP1=0, select bank1
 11010  04DF  084E               	movf	sprintf@sp^(0+128),w
 11011  04E0  0084               	movwf	4
 11012  04E1  1283               	bcf	3,5	;RP0=0, select bank0
 11013  04E2  1303               	bcf	3,6	;RP1=0, select bank0
 11014  04E3  086A               	movf	??_sprintf,w
 11015  04E4  1383               	bcf	3,7	;select IRP bank0
 11016  04E5  0080               	movwf	0
 11017  04E6                     l3966:
 11018  04E6  3001               	movlw	1
 11019  04E7  00EA               	movwf	??_sprintf
 11020  04E8  086A               	movf	??_sprintf,w
 11021  04E9  1683               	bsf	3,5	;RP0=1, select bank1
 11022  04EA  1303               	bcf	3,6	;RP1=0, select bank1
 11023  04EB  07CE               	addwf	sprintf@sp^(0+128),f
 11024  04EC                     l3968:
 11025                           
 11026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
 11027  04EC  1683               	bsf	3,5	;RP0=1, select bank1
 11028  04ED  1303               	bcf	3,6	;RP1=0, select bank1
 11029  04EE  0846               	movf	sprintf@width^(0+128),w
 11030  04EF  0447               	iorwf	(sprintf@width+1)^(0+128),w
 11031  04F0  1903               	btfsc	3,2
 11032  04F1  2CF3               	goto	u6481
 11033  04F2  2CF4               	goto	u6480
 11034  04F3                     u6481:
 11035  04F3  2D59               	goto	l3990
 11036  04F4                     u6480:
 11037  04F4                     l3970:
 11038                           
 11039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
 11040  04F4  3030               	movlw	48
 11041  04F5  1283               	bcf	3,5	;RP0=0, select bank0
 11042  04F6  1303               	bcf	3,6	;RP1=0, select bank0
 11043  04F7  00EA               	movwf	??_sprintf
 11044  04F8  1683               	bsf	3,5	;RP0=1, select bank1
 11045  04F9  1303               	bcf	3,6	;RP1=0, select bank1
 11046  04FA  084E               	movf	sprintf@sp^(0+128),w
 11047  04FB  0084               	movwf	4
 11048  04FC  1283               	bcf	3,5	;RP0=0, select bank0
 11049  04FD  1303               	bcf	3,6	;RP1=0, select bank0
 11050  04FE  086A               	movf	??_sprintf,w
 11051  04FF  1383               	bcf	3,7	;select IRP bank0
 11052  0500  0080               	movwf	0
 11053  0501                     l3972:
 11054  0501  3001               	movlw	1
 11055  0502  00EA               	movwf	??_sprintf
 11056  0503  086A               	movf	??_sprintf,w
 11057  0504  1683               	bsf	3,5	;RP0=1, select bank1
 11058  0505  1303               	bcf	3,6	;RP1=0, select bank1
 11059  0506  07CE               	addwf	sprintf@sp^(0+128),f
 11060  0507                     l3974:
 11061  0507  30FF               	movlw	255
 11062  0508  07C6               	addwf	sprintf@width^(0+128),f
 11063  0509  1803               	skipnc
 11064  050A  0AC7               	incf	(sprintf@width+1)^(0+128),f
 11065  050B  30FF               	movlw	255
 11066  050C  07C7               	addwf	(sprintf@width+1)^(0+128),f
 11067  050D  0846               	movf	sprintf@width^(0+128),w
 11068  050E  0447               	iorwf	(sprintf@width+1)^(0+128),w
 11069  050F  1D03               	btfss	3,2
 11070  0510  2D12               	goto	u6491
 11071  0511  2D13               	goto	u6490
 11072  0512                     u6491:
 11073  0512  2CF4               	goto	l3970
 11074  0513                     u6490:
 11075  0513  2D59               	goto	l3990
 11076  0514                     l3976:
 11077                           
 11078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11079  0514  0846               	movf	sprintf@width^(0+128),w
 11080  0515  0447               	iorwf	(sprintf@width+1)^(0+128),w
 11081  0516  1903               	btfsc	3,2
 11082  0517  2D19               	goto	u6501
 11083  0518  2D1A               	goto	u6500
 11084  0519                     u6501:
 11085  0519  2D39               	goto	l3984
 11086  051A                     u6500:
 11087  051A                     l3978:
 11088                           
 11089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11090  051A  3020               	movlw	32
 11091  051B  1283               	bcf	3,5	;RP0=0, select bank0
 11092  051C  1303               	bcf	3,6	;RP1=0, select bank0
 11093  051D  00EA               	movwf	??_sprintf
 11094  051E  1683               	bsf	3,5	;RP0=1, select bank1
 11095  051F  1303               	bcf	3,6	;RP1=0, select bank1
 11096  0520  084E               	movf	sprintf@sp^(0+128),w
 11097  0521  0084               	movwf	4
 11098  0522  1283               	bcf	3,5	;RP0=0, select bank0
 11099  0523  1303               	bcf	3,6	;RP1=0, select bank0
 11100  0524  086A               	movf	??_sprintf,w
 11101  0525  1383               	bcf	3,7	;select IRP bank0
 11102  0526  0080               	movwf	0
 11103  0527                     l3980:
 11104  0527  3001               	movlw	1
 11105  0528  00EA               	movwf	??_sprintf
 11106  0529  086A               	movf	??_sprintf,w
 11107  052A  1683               	bsf	3,5	;RP0=1, select bank1
 11108  052B  1303               	bcf	3,6	;RP1=0, select bank1
 11109  052C  07CE               	addwf	sprintf@sp^(0+128),f
 11110  052D                     l3982:
 11111  052D  30FF               	movlw	255
 11112  052E  07C6               	addwf	sprintf@width^(0+128),f
 11113  052F  1803               	skipnc
 11114  0530  0AC7               	incf	(sprintf@width+1)^(0+128),f
 11115  0531  30FF               	movlw	255
 11116  0532  07C7               	addwf	(sprintf@width+1)^(0+128),f
 11117  0533  0846               	movf	sprintf@width^(0+128),w
 11118  0534  0447               	iorwf	(sprintf@width+1)^(0+128),w
 11119  0535  1D03               	btfss	3,2
 11120  0536  2D38               	goto	u6511
 11121  0537  2D39               	goto	u6510
 11122  0538                     u6511:
 11123  0538  2D1A               	goto	l3978
 11124  0539                     u6510:
 11125  0539                     l3984:
 11126                           
 11127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11128  0539  3003               	movlw	3
 11129  053A  0544               	andwf	sprintf@flag^(0+128),w
 11130  053B  1283               	bcf	3,5	;RP0=0, select bank0
 11131  053C  1303               	bcf	3,6	;RP1=0, select bank0
 11132  053D  00EA               	movwf	??_sprintf
 11133  053E  3000               	movlw	0
 11134  053F  1683               	bsf	3,5	;RP0=1, select bank1
 11135  0540  1303               	bcf	3,6	;RP1=0, select bank1
 11136  0541  0545               	andwf	(sprintf@flag+1)^(0+128),w
 11137  0542  1283               	bcf	3,5	;RP0=0, select bank0
 11138  0543  1303               	bcf	3,6	;RP1=0, select bank0
 11139  0544  00EB               	movwf	??_sprintf+1
 11140  0545  086A               	movf	??_sprintf,w
 11141  0546  046B               	iorwf	??_sprintf+1,w
 11142  0547  1903               	btfsc	3,2
 11143  0548  2D4A               	goto	u6521
 11144  0549  2D4B               	goto	u6520
 11145  054A                     u6521:
 11146  054A  2D59               	goto	l3990
 11147  054B                     u6520:
 11148  054B                     l3986:
 11149                           
 11150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11151  054B  302D               	movlw	45
 11152  054C  00EA               	movwf	??_sprintf
 11153  054D  1683               	bsf	3,5	;RP0=1, select bank1
 11154  054E  1303               	bcf	3,6	;RP1=0, select bank1
 11155  054F  084E               	movf	sprintf@sp^(0+128),w
 11156  0550  0084               	movwf	4
 11157  0551  1283               	bcf	3,5	;RP0=0, select bank0
 11158  0552  1303               	bcf	3,6	;RP1=0, select bank0
 11159  0553  086A               	movf	??_sprintf,w
 11160  0554  1383               	bcf	3,7	;select IRP bank0
 11161  0555  0080               	movwf	0
 11162  0556  120A  158A  284B   	goto	l3708
 11163  0559                     l3990:
 11164                           
 11165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11166  0559  3001               	movlw	1
 11167  055A  1683               	bsf	3,5	;RP0=1, select bank1
 11168  055B  1303               	bcf	3,6	;RP1=0, select bank1
 11169  055C  07A8               	addwf	sprintf@f^(0+128),f
 11170  055D  30FF               	movlw	-1
 11171  055E  0728               	addwf	sprintf@f^(0+128),w
 11172  055F  0084               	movwf	4
 11173  0560  160A  158A  2000  120A  118A  	fcall	stringdir
 11174  0565  1283               	bcf	3,5	;RP0=0, select bank0
 11175  0566  1303               	bcf	3,6	;RP1=0, select bank0
 11176  0567  00EA               	movwf	??_sprintf
 11177  0568  086A               	movf	??_sprintf,w
 11178  0569  1683               	bsf	3,5	;RP0=1, select bank1
 11179  056A  1303               	bcf	3,6	;RP1=0, select bank1
 11180  056B  00CF               	movwf	sprintf@c^(0+128)
 11181  056C  084F               	movf	sprintf@c^(0+128),w
 11182  056D  1D03               	btfss	3,2
 11183  056E  2D70               	goto	u6531
 11184  056F  2D73               	goto	u6530
 11185  0570                     u6531:
 11186  0570  120A  158A  2838   	goto	l3704
 11187  0573                     u6530:
 11188  0573                     l3992:
 11189                           
 11190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11191  0573  1683               	bsf	3,5	;RP0=1, select bank1
 11192  0574  1303               	bcf	3,6	;RP1=0, select bank1
 11193  0575  084E               	movf	sprintf@sp^(0+128),w
 11194  0576  0084               	movwf	4
 11195  0577  1383               	bcf	3,7	;select IRP bank0
 11196  0578  0180               	clrf	0
 11197  0579                     l391:
 11198  0579  0008               	return
 11199  057A                     __end_of_sprintf:

Data Sizes:
    Strings     20
    Constant    144
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     79      79
    BANK1            80     51      77
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[20]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    _I2C_Master_Init->___lldiv
    _send_crct->_send_char
    _conv->___xxtofl

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _conv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34870
                                             48 BANK1      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _cfg_clk
                          _cfg_usart
                               _conv
                          _send_crct
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    37     13   33271
                                             74 BANK0      5     5      0
                                              8 BANK1     40    27     13
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6139
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              3 COMMON     4     4      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4     519
                                              6 BANK0     13     9      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _cfg_clk
   _cfg_usart
   _conv
     ___xxtofl
   _send_crct
     _send_char
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     33      4D       7       96.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Sep 01 19:29:12 2021

                        pc 0002                         l32 07F0                         l50 1BAC  
                       l35 07FC                         l51 1BAF                         l52 1BB4  
                       l44 1AB1                         l29 1BEC                         l38 1AA8  
                       l47 1ABB                         _f1 00E2               ___awdiv@sign 0025  
                       _v0 00DB                         _v1 00D7                         _v2 00D3  
                       _pd 00EC                         fsr 0004        ___wmul@multiplicand 0074  
      __Umul8_16@word_mpld 0078                        l303 0857                        l160 1B3A  
                      l152 11AA                        l163 1A97                        l181 1AC5  
                      l166 101F                        l318 1526                        l175 1B19  
                      l431 1E23                        l169 0829                        l178 1ABD  
                      l290 0FFF                        l370 041D                        l362 028C  
                      l283 0786                        l355 023A                        l612 10DC  
                      l605 1E8A                        l613 104E                        l701 1C6C  
                      l623 10CF                        l711 1C26                        l391 0579  
                      l608 1E9F                        l616 109F                        l561 1DBB  
                      l722 12FD                        l651 1D62                        l395 1B47  
                      l548 07EF                        l581 1C8B                        l397 1B5F  
                      l565 119A                        l582 1CA7                        l590 1F43  
                      l726 13A4                        l566 10FF                        l830 0C90  
                      l583 1CBC                        l743 146F                        l735 1521  
                      l728 137B                        l576 118D                        l824 0C08  
                      l753 14B5                        l569 115D                        l586 1EBE  
                      l594 100A                        l818 0C9C                        l747 1493  
                      l764 1515                        l756 14F3                        l589 1F2A  
                      l765 1521                        l837 1B74                        l862 1F68  
                      l598 1E9F                        l839 1B86                        l864 1FFF  
                      l768 1D0C                        l882 1AD7                        l875 1FC9  
                      l876 1FD5                        l868 1FAD                        _GIE 005F  
                      _isr 1AD8                        _val 007B                        fsr0 0004  
                      indf 0000               ___awmod@sign 0078               ___flmul@aexp 003A  
             ___flmul@bexp 003B               ___flmul@sign 0035               ___flmul@temp 0040  
             ___flmul@prod 003C               ___fltol@exp1 005F                       l3000 1B3D  
                     l3002 1B41                       l3020 1CBB                       l3012 1C6D  
                     l3004 1B4E                       l3014 1C83                       l3030 1EDA  
                     l3110 1CC1                       l3006 1B55                       l2310 1B7D  
                     l2302 1B61                       l3200 100B                       l3120 1F60  
                     l2320 1DD1                       l3016 1C9F                       l3040 1F42  
                     l3032 1EDE                       l3024 1EA0                       l3008 1B5B  
                     l2312 1B82                       l2304 1B63                       l2400 1D81  
                     l3210 101B                       l3202 1012                       l3130 1F8B  
                     l3122 1F70                       l3114 1F47                       l2330 1E0B  
                     l2322 1DDE                       l3018 1CB9                       l3034 1F02  
                     l3026 1EB6                       l2306 1B6A                       l2410 1DA0  
                     l2402 1D88                       l4010 11CB                       l3212 101C  
                     l3204 1016                       l3140 1FBF                       l3132 1F92  
                     l3116 1F4C                       l2332 1E0C                       l2324 1DE2  
                     l2316 1DBC                       l3036 1F06                       l3028 1ED2  
                     l3044 1000                       l2500 12DF                       l3108 1CBD  
                     l3060 1E4F                       l3052 1E24                       l2308 1B6E  
                     l2340 0787                       l2412 1DA7                       l2404 1D8C  
                     l4100 1542                       l4020 122A                       l4012 11DA  
                     l3206 1017                       l3150 1FF2                       l3142 1FC3  
                     l3134 1F96                       l3126 1F79                       l3118 1F50  
                     l3214 0804                       l2334 1E15                       l2326 1DEB  
                     l2318 1DCE                       l3038 1F40                       l3046 1008  
                     l2510 12F3                       l2502 12E0                       l3062 1E50  
                     l3054 1E31                       l2350 0799                       l2342 078A  
                     l2406 1D90                       l2414 1DAD                       l4030 1282  
                     l4022 1248                       l4014 11E1                       l3160 1AA5  
                     l3208 101A                       l3152 1FF6                       l3144 1FCD  
                     l3136 1FA4                       l3128 1F7E                       l3216 0821  
                     l2328 1DFD                       l2336 1E1B                       l3048 100A  
                     l2600 1452                       l2520 130F                       l2504 12E5  
                     l2512 12F5                       l3064 1E58                       l2360 07AD  
                     l2352 079E                       l2344 078E                       l2416 1DB2  
                     l2408 1D9A                       l4032 1289                       l4024 126A  
                     l4016 11EE                       l4008 119B                       l3170 1B87  
                     l3162 1AA9                       l3154 1FF7                       l3146 1FD7  
                     l3138 1FB4                       l2610 1485                       l2602 1461  
                     l2530 1323                       l2522 1313                       l2514 1303  
                     l2506 12EA                       l3082 1E7F                       l3074 1E66  
                     l3066 1E5A                       l3058 1E3A                       l2450 1BF3  
                     l2370 07D3                       l2362 07B4                       l2354 07A2  
                     l2346 0793                       l2418 1DB7                       l4034 128C  
                     l4026 1270                       l4018 120C                       l3180 1BA8  
                     l3172 1B8C                       l3164 1AAE                       l3148 1FED  
                     l2620 149C                       l2612 148E                       l2604 1477  
                     l2540 1337                       l2532 1327                       l2524 1317  
                     l2516 1307                       l2508 12F2                       l3084 1E8F  
                     l3068 1E5E                       l3076 1E78                       l2700 0996  
                     l2460 1C0F                       l2452 1BF6                       l2380 07EB  
                     l2372 07D4                       l2364 07B8                       l2356 07A4  
                     l2348 0795                       l4036 1293                       l4028 1279  
                     l3182 1BB0                       l3174 1B94                       l3158 1AA0  
                     l3166 1AB2                       l3190 1B27                       l2630 14AC  
                     l2622 14A1                       l2614 1492                       l2606 147C  
                     l2550 1348                       l2542 133B                       l2534 132B  
                     l2526 131B                       l2518 130B                       l2470 129A  
                     l3086 1E94                       l2710 09B9                       l2702 099B  
                     l2462 1C15                       l2454 1BFD                       l2374 07DB  
                     l2366 07BC                       l2358 07AA                       l2390 1D6D  
                     l3176 1B9D                       l3168 1AB7                       l3192 1B28  
                     l2640 14CD                       l2632 14B2                       l2616 1497  
                     l2624 14A3                       l2560 138E                       l2552 135F  
                     l2544 133F                       l2536 132F                       l2528 131F  
                     l2480 12B1                       l2472 12A1                       l2800 0C94  
                     l2720 0A47                       l2712 09C6                       l2704 09A0  
                     l2464 1C1C                       l2456 1C01                       l2448 1BED  
                     l2368 07CD                       l2376 07E1                       l2392 1D6F  
                     l2384 1D63                       l3178 1BA2                       l3530 1B08  
                     l2810 1BE9                       l3194 1B2B                       l3186 1B1A  
                     l2650 1505                       l2642 14D1                       l2618 149A  
                     l2626 14A7                       l2570 13AD                       l2562 138F  
                     l2554 137F                       l2546 1343                       l2538 1333  
                     l2490 12C9                       l2482 12B6                       l2474 12A7  
                     l2730 0AA9                       l2722 0A63                       l2714 09E3  
                     l2458 1C05                       l2466 1C22                       l2378 07E6  
                     l2394 1D73                       l2386 1D64                       l3196 1A90  
                     l2820 1ABD                       l3532 1B0E                       l2812 1BEA  
                     l2804 1BB5                       l3188 1B26                       l2660 151C  
                     l2652 150A                       l2644 14EF                       l2636 14BA  
                     l2628 14A8                       l2580 13D5                       l2564 1398  
                     l2556 1388                       l2548 1347                       l2492 12CE  
                     l2484 12BE                       l2476 12AB                       l2900 103C  
                     l2740 0B39                       l2732 0AC6                       l2724 0A6C  
                     l2716 09FF                       l2708 09A9                       l2396 1D78  
                     l2388 1D68                       l3198 1A96                       l2822 1AC3  
                     l3526 1AFA                       l2814 1BEB                       l2806 1BB9  
                     l2662 1520                       l2654 150B                       l2646 14F8  
                     l2638 14BF                       l2590 13EE                       l2582 13DE  
                     l2574 13B6                       l2558 138A                       l2566 139C  
                     l2494 12D4                       l2486 12BF                       l2478 12AC  
                     l2910 1064                       l2750 0BCB                       l2742 0B66  
                     l2734 0ADF                       l2726 0A7C                       l2718 0A2B  
                     l2670 094D                       l2398 1D7E                       l3710 0852  
                     l3702 082D                       l2816 07F0                       l3528 1AFD  
                     l2808 1BBC                       l2656 150F                       l2648 14FD  
                     l2584 13E0                       l2576 13CD                       l2568 13A8  
                     l2592 13F3                       l2496 12D5                       l2488 12C1  
                     l2920 1090                       l2912 1066                       l2752 0BD4  
                     l2760 0BE8                       l2744 0B8C                       l2736 0AFC  
                     l2728 0A99                       l2680 0962                       l2672 094E  
                     l2664 093C                       l3640 1C2B                       l3800 16E0  
                     l3720 0889                       l3712 085A                       l3704 0838  
                     l2818 07F6                       l2658 1511                       l2594 1409  
                     l2586 13E4                       l2578 13D1                       l2498 12DB  
                     l2922 1091                       l2914 106F                       l2906 104F  
                     l2762 0BEC                       l2754 0BD8                       l2746 0BB4  
                     l2738 0B29                       l2690 097A                       l2682 096A  
                     l2674 0953                       l2666 0943                       l3650 1C43  
                     l3642 1C31                       l2842 0CA0                       l3810 1789  
                     l3802 1727                       l3722 088D                       l3730 08D5  
                     l4098 0872                       l3706 083E                       l2596 1447  
                     l2588 13E5                       l2940 10C4                       l2932 10AB  
                     l2924 1099                       l2916 1078                       l2908 1055  
                     l2780 0C3D                       l2772 0C0D                       l2764 0BED  
                     l2756 0BD9                       l2748 0BBD                       l2692 097F  
                     l2684 096F                       l2676 0958                       l2668 0949  
                     l3652 1C54                       l3644 1C34                       l3660 1C68  
                     l2860 0E26                       l2844 0CA4                       l3900 029D  
                     l3812 17A4                       l3804 1736                       l3740 0906  
                     l3732 08E5                       l3724 08A2                       l3716 0862  
                     l3708 084B                       l2598 144D                       l2942 10D4  
                     l2926 10A3                       l2934 10BD                       l2918 1086  
                     l2790 0C74                       l2774 0C12                       l2782 0C43  
                     l2766 0BF1                       l2758 0BE2                       l2694 0984  
                     l2686 0975                       l2678 0960                       l3654 1C5A  
                     l3646 1C3B                       l3638 1C27                       l2854 0D97  
                     l2846 0CA6                       l3910 032E                       l3902 02A2  
                     l3830 0083                       l3822 17F2                       l3814 17AD  
                     l3806 1753                       l3742 0921                       l3734 08E6  
                     l3726 08BD                       l3718 0877                       l2960 1108  
                     l2952 10F3                       l2792 0C76                       l2784 0C50  
                     l2776 0C20                       l2768 0C05                       l2696 098C  
                     l2688 0979                       l3656 1C5B                       l3648 1C3F  
                     l3672 0692                       l3664 057D                       l2872 0F44  
                     l2856 0D9E                       l2848 0CAD                       l2864 0E53  
                     l3920 03E7                       l3912 036D                       l3904 02AF  
                     l3840 00CC                       l3816 17B5                       l3808 177A  
                     l3824 001D                       l3760 1568                       l3752 152A  
                     l3744 0929                       l3736 08EE                       l3728 08C5  
                     l3690 1D2B                       l3682 1D0D                       l2970 113F  
                     l2962 1119                       l2946 10DD                       l2794 0C84  
                     l2786 0C5B                       l2778 0C24                       l2698 098E  
                     l3658 1C62                       l3674 0698                       l3666 0583  
                     l2890 1AD6                       l2882 1AC7                       l2874 0F4B  
                     l2866 0E5A                       l3930 040F                       l3922 03F4  
                     l3914 038C                       l3906 02B5                       l3850 0129  
                     l3842 00DA                       l3826 0052                       l3818 17D3  
                     l3770 15B4                       l3762 1576                       l3754 154A  
                     l3738 08F1                       l3746 1522                       l3692 1D3D  
                     l3684 1D15                       l2972 114D                       l2964 111B  
                     l2948 10EA                       l2796 0C88                       l2788 0C6A  
                     l2884 1AC8                       l3940 0457                       l3932 0417  
                     l3924 03FA                       l3916 03A0                       l3908 02D3  
                     l3860 0160                       l3852 012F                       l3844 0109  
                     l3836 0085                       l3828 0081                       l3780 15F5  
                     l3772 15B8                       l3764 157E                       l3756 155E  
                     l3748 1524                       l3694 1D4B                       l3686 1D1A  
                     l2974 114E                       l2966 1124                       l2958 1100  
                     l2894 1020                       l2798 0C89                       l3678 0743  
                     l2886 1ACE                       l2878 0FD3                       l3950 0495  
                     l3942 045F                       l3934 0428                       l3926 0400  
                     l3918 03DF                       l3870 018F                       l3862 0166  
                     l3854 0141                       l3846 010F                       l3790 168C  
                     l3782 1618                       l3774 15D1                       l3766 1597  
                     l3758 1564                       l3696 1D54                       l3688 1D27  
                     l2992 1182                       l2984 1169                       l2976 1157  
                     l2968 112D                       l2896 1033                       l2888 1AD4  
                     l3960 04C5                       l3952 049E                       l3944 0471  
                     l3936 0433                       l3880 01C8                       l3856 014C  
                     l3864 016C                       l3872 0195                       l3848 0121  
                     l3792 16A5                       l3784 161C                       l3776 15DC  
                     l3768 15B0                       l3928 0407                       l3698 1D5A  
                     l2994 1192                       l2978 1161                       l2986 117B  
                     l3970 04F4                       l3962 04C9                       l3954 04A2  
                     l3946 0479                       l3938 0446                       l3890 0257  
                     l3882 0207                       l3874 01A2                       l3866 017C  
                     l3858 0153                       l3794 16AE                       l3786 1622  
                     l3778 15E2                       l3980 0527                       l3972 0501  
                     l3964 04DB                       l3956 04AD                       l3948 047F  
                     l3892 025D                       l3884 0226                       l3876 01B6  
                     l3868 0189                       l3796 16C9                       l3788 1641  
                     l2998 1B3B                       l3982 052D                       l3974 0507  
                     l3966 04E6                       l3958 04C1                       l3894 026A  
                     l3886 0244                       l3878 01C1                       l3798 16D1  
                     l3990 0559                       l3984 0539                       l3968 04EC  
                     l3976 0514                       l3896 0279                       l3888 0251  
                     l3992 0573                       l3986 054B                       l3978 051A  
                     l3898 0282                       ?_isr 0070                       STR_1 1896  
                     u3000 078E                       u3001 078D                       u3010 0799  
                     u3011 0798                       u3020 07AA                       u3100 1D68  
                     u3021 07A9                       u3101 1D67                       u3110 1D73  
                     u3111 1D72                       u3040 07BC                       u3120 1D7E  
                     u4001 0BA6                       u3041 07BB                       u3121 1D7D  
                     u4002 0BAD                       u4003 0BB4                       u3035 07AE  
                     u4100 0C24                       u3060 07CD                       u3140 1D90  
                     u4101 0C23                       u3061 07CC                       u3141 1D8F  
                     u4110 0C33                       u4030 0BD8                       u3310 1C22  
                     u3150 1D9A                       u4031 0BD7                       u4015 0BB6  
                     u3311 1C21                       u3055 07BD                       u3151 1D99  
                     u3135 1D82                       u3400 1307                       u3320 12AB  
                     u4120 0C50                       u3080 07E1                       u3401 1306  
                     u3321 12AA                       u4121 0C4F                       u4025 0BCD  
                     u3305 1C16                       u3081 07E0                       u3065 07C9  
                     u3410 135F                       u3330 12B1                       u4130 0C6A  
                     u4050 0BEC                       u3090 07E6                       u3170 1DAD  
                     u3411 135E                       u3331 12B0                       u4131 0C69  
                     u4115 0C2E                       u4051 0BEB                       u3091 07E5  
                     u3075 07D5                       u3171 1DAC                       u3155 1D96  
                     u3420 136A                       u3340 12B6                       u4140 0C88  
                     u4060 0BF1                       u3260 1BF3                       u3180 1DB2  
                     u3501 13BF                       u3421 1368                       u3341 12B5  
                     u4141 0C87                       u4125 0C4C                       u4061 0BF0  
                     u4045 0BDB                       u3261 1BF2                       u3181 1DB1  
                     u3165 1DA1                       u5110 1FC3                       u5030 1F4C  
                     u4150 1BCC                       u3510 13D1                       u3502 13C6  
                     u3430 136B                       u3350 12D4                       u4070 0C05  
                     u5111 1FC2                       u5031 1F4B                       u3511 13D0  
                     u3503 13CD                       u3415 135B                       u3351 12D3  
                     u4135 0C66                       u4071 0C04                       u4160 07F6  
                     u5120 1FC9                       u5040 1F50                       u3600 147C  
                     u3520 13D5                       u3440 137F                       u3360 12DF  
                     u4080 0C0C                       u3280 1C05                       u4400 0F4B  
                     u4320 0D9E                       u6000 083E                       u4161 07F5  
                     u5121 1FC8                       u5105 1FB8                       u5041 1F4F  
                     u3601 147B                       u3521 13D4                       u3441 137E  
                     u3361 12DE                       u4081 0C0B                       u3281 1C04  
                     u4401 0F4A                       u4321 0D9D                       u4305 0D0B  
                     u6001 083D                       u4170 07FC                       u5130 1FCD  
                     u5050 1F70                       u3530 13E4                       u3450 138E  
                     u3370 12E5                       u4090 0C12                       u3290 1C0F  
                     u6010 0889                       u4171 07FB                       u5131 1FCC  
                     u5051 1F6F                       u4155 1BC7                       u3531 13E3  
                     u3451 138D                       u3371 12E4                       u4091 0C11  
                     u3291 1C0E                       u3275 1BF7                       u4315 0D56  
                     u6011 0888                       u5140 1FE2                       u4180 1AC3  
                     u3700 14D1                       u3620 1492                       u3380 12EA  
                     u2900 1B6E                       u6100 16A5                       u6020 08D5  
                     u4181 1AC2                       u3701 14D0                       u3621 1491  
                     u3381 12E9                       u2901 1B6D                       u6101 16A4  
                     u6021 08D4                       u5150 1FF2                       u5070 1F91  
                     u3710 14E0                       u3630 1497                       u3550 1409  
                     u3470 13A4                       u3390 1303                       u4510 109F  
                     u4270 0CA4                       u6110 16C9                       u6030 08E5  
                     u5151 1FF1                       u5071 1F90                       u3631 1496  
                     u3615 1487                       u3551 1408                       u3471 13A3  
                     u3391 1302                       u4511 109E                       u3295 1C0B  
                     u4415 0F5E                       u4335 0DB1                       u4271 0CA3  
                     u6111 16C8                       u6031 08E2                       u5160 1FF6  
                     u3720 14EF                       u3640 14A1                       u3480 13A8  
                     u4600 10FE                       u4520 10A3                       u2920 1B82  
                     u3800 0958                       u4440 1ACE                       u4360 0E5A  
                     u4280 0CAD                       u6200 00DA                       u6120 16E0  
                     u6040 0939                       u5161 1FF5                       u5145 1FDD  
                     u5065 1F83                       u3721 14EE                       u3641 14A0  
                     u3561 1420                       u3553 1405                       u3545 13E7  
                     u3481 13A7                       u3465 1391                       u4601 10FD  
                     u4521 10A2                       u4505 1092                       u2921 1B81  
                     u3801 0957                       u4441 1ACD                       u4425 0F9A  
                     u4361 0E59                       u4345 0DED                       u4281 0CAC  
                     u6201 00D9                       u6121 16DF                       u6041 0938  
                     u5170 1BA8                       u5090 1FB3                       u2930 1DCE  
                     u3730 14F8                       u3650 14A7                       u3570 1434  
                     u3562 1421                       u3490 13AD                       u4530 10AA  
                     u3810 0979                       u4450 1AD4                       u6210 0109  
                     u6130 1736                       u6050 155E                       u5171 1BA7  
                     u5091 1FB2                       u2931 1DCD                       u3731 14F7  
                     u3715 14DB                       u3651 14A6                       u3571 1435  
                     u3563 1426                       u3491 13AC                       u4531 10A9  
                     u2915 1B75                       u3811 0978                       u4451 1AD3  
                     u4435 0FD6                       u4355 0E29                       u6211 0108  
                     u6131 1735                       u6051 155B                       _PEIE 005E  
                     u3740 14FD                       u3660 14AC                       u3580 1452  
                     u3572 143A                       u3564 1427                       u4620 113F  
                     u4460 1033                       u3820 097F                       u6300 026A  
                     u6220 0121                       u6140 1753                       u6060 1564  
                     u5085 1FA5                       u3741 14FC                       u3661 14AB  
                     u3581 1451                       u3573 143B                       u3565 142C  
                     u4621 113E                       u4461 1032                       u3821 097E  
                     u6301 0269                       u6221 0120                       u6141 1750  
                     u6125 16DC                       u6061 1563                       u2950 1DE2  
                     u3750 150A                       u3670 14B2                       u3590 1477  
                     u3566 142D                       u4710 1192                       u4550 10BC  
                     u4470 104D                       u3830 0984                       u6310 0279  
                     u6230 012F                       u6150 177A                       u6070 1597  
                     u2951 1DE1                       u3751 1509                       u3671 14B1  
                     u3591 1476                       u4711 1191                       u4615 1126  
                     u4551 10BB                       u4471 104C                       u3911 0A8B  
                     u3831 0983                       u4375 0E7C                       u4295 0CCF  
                     u6311 0278                       u6231 012E                       u6151 1779  
                     u6135 1732                       u6071 1596                       u4800 1ED2  
                     u3760 150F                       u3680 14B9                       u4720 1B41  
                     u4640 115D                       u4560 10C3                       u3912 0A92  
                     u3840 099B                       u6400 0446                       u6320 02A2  
                     u6240 0141                       u6160 1789                       u6080 15D1  
                     u2945 1DD3                       u4801 1ED1                       u3761 150E  
                     u3681 14B8                       u4721 1B40                       u4705 1184  
                     u4641 115C                       u4625 113B                       u4561 10C2  
                     u4545 10AC                       u3921 0AB8                       u3913 0A99  
                     u3905 0A65                       u3841 099A                       u4385 0EB8  
                     u6401 0445                       u6321 02A1                       u6305 0266  
                     u6241 0140                       u6161 1788                       u6081 15D0  
                     u2970 1DFD                       u4810 1EDE                       u3770 1520  
                     u3690 14BF                       u4650 1161                       u4490 1086  
                     u3922 0ABF                       u3850 09A0                       u6410 045F  
                     u6250 017B                       u6170 17A4                       u6090 161C  
                     u2971 1DFC                       u4811 1EDD                       u3771 151F  
                     u3691 14BE                       u4651 1160                       u4635 1150  
                     u4491 1085                       u3923 0AC6                       u3851 099F  
                     u4395 0F03                       u6411 045E                       u6315 0275  
                     u6251 017A                       u6171 17A3                       u6091 161B  
                     u4900 1E65                       u4660 1168                       u4580 10D4  
                     u3780 094D                       u6500 051A                       u6420 0471  
                     u6260 01A2                       u2965 1DE4                       u4821 1EED  
                     u4901 1E64                       u4661 1167                       u4581 10D3  
                     u4485 1071                       u3941 0AEE                       u3861 09F1  
                     u3781 094C                       u6501 0519                       u6421 0470  
                     u6405 0442                       u6261 01A1                       u6165 1785  
                     u2990 1E1B                       u4830 1F06                       u4822 1EEE  
                     u4750 1B5B                       u4590 10EA                       u3942 0AF5  
                     u3862 09F8                       u3790 0953                       u6510 0539  
                     u6430 047F                       u6350 03E6                       u6270 01B6  
                     u6190 00CB                       u2991 1E1A                       u2975 1DF9  
                     u4831 1F05                       u4823 1EF3                       u4751 1B5A  
                     u4735 1B48                       u4591 10E9                       u4575 10C6  
                     u4495 1082                       u3951 0B1B                       u3943 0AFC  
                     u3935 0AC8                       u3871 0A0D                       u3863 09FF  
                     u3791 0952                       u6511 0538                       u6431 047E  
                     u6351 03E5                       u6335 0333                       u6271 01B5  
                     u6255 0177                       u6191 00CA                       u5720 1B19  
                     u4760 1C83                       u4824 1EF4                       u4920 1E77  
                     u4680 117A                       u3952 0B22                       u3872 0A14  
                     u6520 054B                       u6440 0495                       u6360 0406  
                     u5721 1B18                       u2985 1E0D                       u4761 1C82  
                     u4841 1F15                       u4825 1EF9                       u4921 1E76  
                     u4745 1B4F                       u4681 1179                       u3961 0B48  
                     u3953 0B29                       u3881 0A39                       u3873 0A1B  
                     u6521 054A                       u6441 0494                       u6361 0405  
                     u6345 03A5                       u6265 019E                       u6185 008A  
                     u4770 1C9F                       u4850 1F40                       u4842 1F16  
                     u4826 1EFA                       u4930 1E7E                       u4690 1181  
                     u3970 0B72                       u3962 0B4F                       u3882 0A40  
                     u5810 1C43                       u6530 0573                       u6450 04AD  
                     u6370 040F                       u6290 0243                       u4771 1C9E  
                     u4851 1F3F                       u4843 1F1B                       u4931 1E7D  
                     u4915 1E67                       u4691 1180                       u4675 116A  
                     u3963 0B56                       u3891 0A55                       u3883 0A47  
                     u5811 1C42                       u6531 0570                       u6451 04AC  
                     u6371 040E                       u6291 0242                       u6195 00C7  
                     u4780 1CB9                       u4844 1F1C                       u4860 1008  
                     u3892 0A5C                       u5900 0698                       u6460 04C9  
                     u6380 0417                       u4781 1CB8                       u4845 1F21  
                     u4861 1007                       u3981 0B7E                       u3893 0A63  
                     u5805 1C35                       u5901 0697                       u6461 04C8  
                     u6445 0491                       u6381 0416                       u6285 01CD  
                     u4846 1F22                       u4790 1EB6                       u4950 1E8F  
                     u4870 1E31                       u3990 0B9A                       u3982 0B85  
                     u5830 1C54                       u6470 04DB                       u6390 0428  
                     u6550 1289                       u4855 1F3C                       u4791 1EB5  
                     u4951 1E8E                       u4871 1E30                       u3983 0B8C  
                     u3975 0B6D                       u5831 1C53                       u6471 04DA  
                     u6455 04A9                       u6391 0427                       u6551 1288  
                     u4960 1E94                       u4880 1E48                       u6480 04F4  
                     u6560 1293                       u4785 1CB5                       u4961 1E93  
                     u4945 1E81                       u5825 1C44                       u6481 04F3  
                     u6561 1292                       u6545 11E4                       u4890 1E5E  
                     u5850 1C68                       u6490 0513                       u4891 1E5D  
                     u3995 0B95                       u5851 1C67                       u5835 1C50  
                     u5915 06B5                       u6491 0512                       u6395 0424  
                     u5940 1D15                       u5860 0583                       u4885 1E43  
                     u5941 1D14                       u5845 1C5C                       u5925 0702  
                     u5861 0582                       u5790 1C31                       u5791 1C30  
                     u5935 074E                       u5960 1D2B                       u5961 1D2A  
                     u6577 11D3                       u5970 1D3D                       u5971 1D3C  
                     u5955 1D1C                       u5875 05A0                       u5885 05FC  
                     u5990 1D5A                       u5991 1D59                       u5975 1D39  
                     u5895 0651                       u5985 1D4C                       _TXIF 0064  
                     _conv 0801                       _door 00E0                       _main 119B  
                     _lock 00E1                       btemp 007E                       start 000C  
             _sprintf$1181 00B5                      ??_isr 0070           ?_I2C_Master_Init 0025  
         ?_I2C_Master_Read 0072           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
            ___fltol@sign1 005E                      ?_conv 0026            __end_of___fladd 1522  
                    ?_main 0070            __end_of___awdiv 07F0            __end_of___flneg 100B  
          __end_of___awmod 1DBC            __end_of___flmul 0C9D            __end_of___flsub 1D0D  
          __end_of___fltol 1EA0                      _ANSEL 0188            __end_of___lldiv 1E24  
          ___awdiv@divisor 0020            __end_of___llmod 1D63            __end_of___lwdiv 1C6D  
                    i1l147 1AF2            __end_of___lwmod 1C27            ___awdiv@counter 0024  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTD 0008            __end_of_cfg_clk 1A98                      _TRISA 0085  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
                    _TXREG 0019            __end_of_dpowers 1896                      _light 00DF  
                    _scale 0C9D            __end_of_isdigit 1AD8                      _setup 1B1A  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 057A            __initialization 000F               __end_of_conv 082A  
             __end_of_main 129A                     ??_conv 002A                     ??_main 00D0  
     __size_of__tdiv_to_l_ 00BD          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072  
       ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0074           ___llmod@dividend 0076  
                   ?_scale 0042           ___awdiv@dividend 0022                     ?_setup 0070  
                   _ANSELH 0189                     i1l3540 1ADE                     i1l3542 1AE4  
                   i1l3544 1AE8                     i1l3546 1AEF                     i1l3538 1AD8  
                   u573_20 1ADE                     u573_21 1ADD                     u574_20 1AE4  
                   u574_21 1AE3                     u575_20 1AEF                     u575_21 1AEE  
                   _SPBRGH 009A                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 2000           __end_of__powers_ 183A                     ___flge 1EA0  
                   ___fleq 1C6D                  ??___fladd 005E                     ___wmul 1B3B  
                ??___awdiv 0079                  ??___flneg 0076                  ??___awmod 0076  
                ??___flmul 0030                  ??___flsub 007B                  ??___fltol 0059  
                ??___lldiv 007A                  ??___llmod 007A                  ??___lwdiv 0078  
                ??___lwmod 0076                  ??_cfg_clk 0072                     _fround 057A  
         ___awdiv@quotient 0026            ___awmod@divisor 0072            ___awmod@counter 0077  
                   conv@aa 0032                  ??_isdigit 0072         __size_of__Umul8_16 0027  
                   saved_w 007E                  ??_sprintf 006A                 ___flge@ff1 0072  
               ___flge@ff2 0076               ___xxtofl@arg 0022               ___xxtofl@exp 0021  
             ___xxtofl@val 0072                 ___fleq@ff1 0072                 ___fleq@ff2 0076  
  __end_of__initialization 0019                 ___flneg@f1 0072                 ___fltol@f1 0055  
           __pcstackCOMMON 0070         __size_of_cfg_usart 0015              __end_of_scale 1000  
            __end_of_setup 1B3B                 __div_to_l_ 10DD            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 0046            __div_to_l_@quot 0020  
             sprintf@width 00C6                    ??_setup 007B                 __pbssBANK1 00D3  
            __div_to_l_@f1 0072              __div_to_l_@f2 0076          __end_of__Umul8_16 1B87  
               __pmaintext 119B                    ?___flge 0072                    ?___fleq 0072  
                  ?___wmul 0072                 __pintentry 0004         __size_of_send_char 000A  
       __size_of_send_crct 0021                    ?_fround 0042                  ?___xxtofl 0072  
                  _SSPCON2 0091                    _SSPSTAT 0094                send_crct@st 0076  
               __stringtab 1800          __end_of_cfg_usart 1020          __end_of__npowers_ 186E  
               _scale$1180 0050            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 129A                    ___awdiv 0787                    ___flneg 1000  
                  ___awmod 1D63                    ___flmul 093C                    ___flsub 1CBD  
                  ___fltol 1E24                    ___lldiv 1DBC            __size_of___wmul 0025  
                  ___llmod 1D0D                    ___lwdiv 1C27                    ___lwmod 1BED  
                  _cfg_clk 1A90            __size_of_fround 020D                    __ptext1 082A  
                  __ptext2 0C9D                    __ptext3 1D63                    __ptext4 0787  
                  __ptext5 1AC6                    __ptext6 057A                    __ptext7 1BED  
                  __ptext8 1C27                    __ptext9 093C                ?__div_to_l_ 0072  
                  _dpowers 186E                    _isdigit 1AC6               __size_of_isr 0021  
               ??___xxtofl 0076           ___awmod@dividend 0074   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 082A                    clrloop0 1A99       end_of_initialization 0019  
        __end_of_send_char 1AC6          __end_of_send_crct 1B1A  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072            ___lldiv@counter 0024  
                _RCSTAbits 0018           I2C_Master_Init@c 0025           I2C_Master_Read@a 0072  
                  psplit$0 B0030                    psplit$1 300031             __tdiv_to_l_@f1 0072  
           __tdiv_to_l_@f2 0076              send_char@dato 0072              ??__tdiv_to_l_ 0020  
                _PORTAbits 0005                  _PORTDbits 0008                ___fladd@grs 0069  
            ___xxtofl@sign 0020                  _TRISCbits 0087                 conv@result 002E  
              ___flmul@grs 0036                  _TXSTAbits 0098        __size_of__div_to_l_ 00BE  
           __end_of___flge 1F44             __end_of___fleq 1CBD             __end_of___wmul 1B60  
        pnum$text1_split_1 0030          pnum$text1_split_2 0031                _BAUDCTLbits 0187  
           __end_of_fround 0787        start_initialization 000F        __end_of__tdiv_to_l_ 10DD  
              __end_of_isr 1AF9          ??_I2C_Master_Init 0029          ??_I2C_Master_Read 0074  
        ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072            ___llmod@divisor 0072  
          ___llmod@counter 0020                   ??___flge 0020                   ??___fleq 0020  
                 ??___wmul 0076                  __Umul8_16 1B60                   ??_fround 0046  
            sprintf@tmpval 00BE                  ___fladd@a 005A                  ___fladd@b 0056  
               fround@prec 0055                  ___flmul@a 002C                  ___flmul@b 0028  
              __pbssCOMMON 007B                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC                sprintf@flag 00C4                sprintf@eexp 00C2  
              sprintf@fval 00C8                sprintf@prec 00CC                  _cfg_usart 100B  
         _I2C_Master_Start 1AA0           _I2C_Master_Write 1AB2           ___lwdiv@dividend 0022  
                 ?___fladd 0056                   ?___awdiv 0020                   ?___flneg 0072  
                 ?___awmod 0072                   ?___flmul 0028                   ?___flsub 00A0  
                 ?___fltol 0055                   ?___lldiv 0072                   ?___llmod 0072  
                __npowers_ 183A                 ?__Umul8_16 0072                   ?___lwdiv 0020  
                 ?___lwmod 0072                   ?_cfg_clk 0070                  __pstrings 1800  
              __tdiv_to_l_ 1020                 send_crct@i 0074               ??__div_to_l_ 007A  
                 ?_isdigit 0070           ___lwdiv@quotient 0025                   ?_sprintf 00A8  
           __size_of_scale 0363             __size_of_setup 0021          interrupt_function 0004  
           ___wmul@product 0076                  clear_ram0 1A98                 ?_cfg_usart 0070  
                 _PIE1bits 008C                  _send_char 1ABC                  _send_crct 1AF9  
                 _PIR1bits 000C         __end_of__div_to_l_ 119B                __stringbase 1805  
        ___wmul@multiplier 0072        I2C_Master_Read@temp 0076                 ?_send_char 0070  
               ?_send_crct 0070                ??__Umul8_16 0074           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003A           __size_of_cfg_clk 0008                _fround$1178 0051  
              _fround$1179 004D         __end_of__stringtab 1806                _isdigit$991 0072  
               sprintf@val 00BA            _I2C_Master_Init 1BB5            _I2C_Master_Read 1B87  
                 ___xxtofl 1F44            _I2C_Master_Wait 07F0            _I2C_Master_Stop 1AA9  
         __size_of_isdigit 0012            ___lwdiv@divisor 0020            ___lwdiv@counter 0024  
                 __ptext10 1B60                   __ptext11 1020                   __ptext20 1C6D  
                 __ptext12 10DD                   __ptext21 1B1A                   __ptext13 1B3B  
                 __ptext30 1AB2                   __ptext22 1BB5                   __ptext14 1D0D  
                 __ptext31 1AA9                   __ptext23 1DBC                   __ptext15 1E24  
                 __ptext32 1AA0                   __ptext24 1AF9                   __ptext16 1CBD  
                 __ptext33 1B87                   __ptext25 1ABC                   __ptext17 129A  
                 __ptext34 07F0                   __ptext26 0801                   __ptext18 1000  
                 __ptext35 1AD8                   __ptext27 1F44                   __ptext19 1EA0  
                 __ptext28 100B                   __ptext29 1A90                   __powers_ 1806  
         __size_of_sprintf FD50              __size_of_conv 0029              __size_of_main 00FF  
                pnum$text1 000B                ??_cfg_usart 0072   __end_of_I2C_Master_Start 1AA9  
 __end_of_I2C_Master_Write 1ABC                 _INTCONbits 000B                   isdigit@c 0073  
                 scale@scl 0054                   intlevel1 0000                  sprintf@ap 00B9  
         __tdiv_to_l_@exp1 0029           __tdiv_to_l_@cntr 0028                  sprintf@sp 00CE  
         __tdiv_to_l_@quot 0024           ___lwmod@dividend 0074           ___lldiv@dividend 0076  
              ??_send_char 0072                ??_send_crct 0073                  stringcode 1800  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 1BED    __end_of_I2C_Master_Read 1BB5  
  __end_of_I2C_Master_Wait 07FD    __end_of_I2C_Master_Stop 1AB2               ?__tdiv_to_l_ 0072  
   __Umul8_16@multiplicand 0072                   sprintf@c 00CF                   sprintf@f 00A8  
         ___lldiv@quotient 0020          I2C_Master_Write@d 0072            ___lwmod@divisor 0072  
          ___lwmod@counter 0077                   stringdir 1800                   stringtab 1800  
              _SSPCON2bits 0091              ___fladd@signs 0066               ___fladd@aexp 0067  
             ___fladd@bexp 0068       __Umul8_16@multiplier 007A          __Umul8_16@product 0076  



Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 29 16:00:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0008                     _PORTDbits	set	8
   290  0013                     _SSPBUF	set	19
   291  0014                     _SSPCON	set	20
   292  0063                     _SSPIF	set	99
   293  005E                     _PEIE	set	94
   294  005F                     _GIE	set	95
   295  008F                     _OSCCONbits	set	143
   296  0088                     _TRISDbits	set	136
   297  0091                     _SSPCON2bits	set	145
   298  0087                     _TRISCbits	set	135
   299  0094                     _SSPSTAT	set	148
   300  0093                     _SSPADD	set	147
   301  0091                     _SSPCON2	set	145
   302  0463                     _SSPIE	set	1123
   303  043C                     _TRISC4	set	1084
   304  043B                     _TRISC3	set	1083
   305  0189                     _ANSELH	set	393
   306  0188                     _ANSEL	set	392
   307                           
   308                           	psect	cinit
   309  07F6                     start_initialization:	
   310                           ; #config settings
   311                           
   312  07F6                     __initialization:
   313                           
   314                           ; Clear objects allocated to BANK0
   315  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   316  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   317  07F8  01AB               	clrf	__pbssBANK0& (0+127)
   318  07F9  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   319  07FA  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   320  07FB  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   321  07FC                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324  07FC                     __end_of__initialization:
   325  07FC  0183               	clrf	3
   326  07FD  120A  118A  2F70   	ljmp	_main	;jump to C main() function
   327                           
   328                           	psect	bssBANK0
   329  002B                     __pbssBANK0:
   330  002B                     _val:
   331  002B                     	ds	1
   332  002C                     _d1:
   333  002C                     	ds	1
   334  002D                     _d0:
   335  002D                     	ds	1
   336  002E                     _pd:
   337  002E                     	ds	1
   338                           
   339                           	psect	cstackCOMMON
   340  0070                     __pcstackCOMMON:
   341  0070                     ?_setup:
   342  0070                     ?_cfg_clk:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ??_cfg_clk:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_I2C_Master_Wait:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ??_I2C_Master_Wait:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_I2C_Master_Start:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ??_I2C_Master_Start:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_I2C_Master_Stop:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ??_I2C_Master_Stop:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_I2C_Master_Write:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_main:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_I2C_Master_Read:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?___lldiv:	
   376                           ; 2 bytes @ 0x0
   377                           
   378  0070                     I2C_Master_Write@d:	
   379                           ; 4 bytes @ 0x0
   380                           
   381  0070                     I2C_Master_Read@a:	
   382                           ; 2 bytes @ 0x0
   383                           
   384  0070                     ___lldiv@divisor:	
   385                           ; 2 bytes @ 0x0
   386                           
   387                           
   388                           ; 4 bytes @ 0x0
   389  0070                     	ds	2
   390  0072                     ??_I2C_Master_Write:
   391  0072                     ??_I2C_Master_Read:	
   392                           ; 1 bytes @ 0x2
   393                           
   394                           
   395                           ; 1 bytes @ 0x2
   396  0072                     	ds	2
   397  0074                     I2C_Master_Read@temp:
   398  0074                     ___lldiv@dividend:	
   399                           ; 2 bytes @ 0x4
   400                           
   401                           
   402                           ; 4 bytes @ 0x4
   403  0074                     	ds	4
   404  0078                     ??___lldiv:
   405                           
   406                           ; 1 bytes @ 0x8
   407  0078                     	ds	1
   408  0079                     ___lldiv@quotient:
   409                           
   410                           ; 4 bytes @ 0x9
   411  0079                     	ds	4
   412  007D                     ___lldiv@counter:
   413                           
   414                           ; 1 bytes @ 0xD
   415  007D                     	ds	1
   416  007E                     ??_setup:
   417                           
   418                           	psect	cstackBANK0
   419  0020                     __pcstackBANK0:	
   420                           ; 1 bytes @ 0xE
   421                           
   422  0020                     ?_I2C_Master_Init:
   423  0020                     I2C_Master_Init@c:	
   424                           ; 1 bytes @ 0x0
   425                           
   426                           
   427                           ; 4 bytes @ 0x0
   428  0020                     	ds	4
   429  0024                     ??_I2C_Master_Init:
   430                           
   431                           ; 1 bytes @ 0x4
   432  0024                     	ds	4
   433  0028                     ??_main:
   434                           
   435                           ; 1 bytes @ 0x8
   436  0028                     	ds	3
   437                           
   438                           	psect	maintext
   439  0770                     __pmaintext:	
   440 ;;
   441 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   442 ;;
   443 ;; *************** function _main *****************
   444 ;; Defined at:
   445 ;;		line 57 in file "maestro.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0, pclath, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : B00/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   459 ;;      Params:         0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0
   461 ;;      Temps:          0       3       0       0       0
   462 ;;      Totals:         0       3       0       0       0
   463 ;;Total ram usage:        3 bytes
   464 ;; Hardware stack levels required when called:    3
   465 ;; This function calls:
   466 ;;		_I2C_Master_Read
   467 ;;		_I2C_Master_Start
   468 ;;		_I2C_Master_Stop
   469 ;;		_I2C_Master_Write
   470 ;;		_cfg_clk
   471 ;;		_setup
   472 ;; This function is called by:
   473 ;;		Startup code after reset
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           
   478                           ;psect for function _main
   479  0770                     _main:
   480  0770                     l899:	
   481                           ;incstack = 0
   482                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   483                           
   484                           
   485                           ;maestro.c: 58:     setup();
   486  0770  120A  118A  268C  120A  118A  	fcall	_setup
   487                           
   488                           ;maestro.c: 59:     cfg_clk();
   489  0775  120A  118A  265B  120A  118A  	fcall	_cfg_clk
   490  077A                     l94:	
   491                           ;maestro.c: 60:     while(1){
   492                           
   493                           
   494                           ;maestro.c: 61:         I2C_Master_Start();
   495  077A  120A  118A  2663  120A  118A  	fcall	_I2C_Master_Start
   496                           
   497                           ;maestro.c: 62:         I2C_Master_Write(0x50);
   498  077F  3050               	movlw	80
   499  0780  00F0               	movwf	I2C_Master_Write@d
   500  0781  3000               	movlw	0
   501  0782  00F1               	movwf	I2C_Master_Write@d+1
   502  0783  120A  118A  2675  120A  118A  	fcall	_I2C_Master_Write
   503                           
   504                           ;maestro.c: 63:         I2C_Master_Write(val);
   505  0788  3000               	movlw	0
   506  0789  00F0               	movwf	I2C_Master_Write@d
   507  078A  00F1               	movwf	I2C_Master_Write@d+1
   508  078B  120A  118A  2675  120A  118A  	fcall	_I2C_Master_Write
   509                           
   510                           ;maestro.c: 64:         I2C_Master_Stop();
   511  0790  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Stop
   512  0795                     l901:
   513                           
   514                           ;maestro.c: 65:         _delay((unsigned long)((200)*(4000000/4000.0)));
   515  0795  3002               	movlw	2
   516  0796  1283               	bcf	3,5	;RP0=0, select bank0
   517  0797  1303               	bcf	3,6	;RP1=0, select bank0
   518  0798  00AA               	movwf	??_main+2
   519  0799  3004               	movlw	4
   520  079A  00A9               	movwf	??_main+1
   521  079B  30B9               	movlw	185
   522  079C  00A8               	movwf	??_main
   523  079D                     u257:
   524  079D  0BA8               	decfsz	??_main,f
   525  079E  2F9D               	goto	u257
   526  079F  0BA9               	decfsz	??_main+1,f
   527  07A0  2F9D               	goto	u257
   528  07A1  0BAA               	decfsz	??_main+2,f
   529  07A2  2F9D               	goto	u257
   530  07A3  2FA4               	nop2
   531  07A4                     l903:
   532                           
   533                           ;maestro.c: 67:         I2C_Master_Start();
   534  07A4  120A  118A  2663  120A  118A  	fcall	_I2C_Master_Start
   535  07A9                     l905:
   536                           
   537                           ;maestro.c: 68:         I2C_Master_Write(0x51);
   538  07A9  3051               	movlw	81
   539  07AA  00F0               	movwf	I2C_Master_Write@d
   540  07AB  3000               	movlw	0
   541  07AC  00F1               	movwf	I2C_Master_Write@d+1
   542  07AD  120A  118A  2675  120A  118A  	fcall	_I2C_Master_Write
   543  07B2                     l907:
   544                           
   545                           ;maestro.c: 69:         pd = I2C_Master_Read(0);
   546  07B2  3000               	movlw	0
   547  07B3  00F0               	movwf	I2C_Master_Read@a
   548  07B4  00F1               	movwf	I2C_Master_Read@a+1
   549  07B5  120A  118A  26A4  120A  118A  	fcall	_I2C_Master_Read
   550  07BA  0870               	movf	?_I2C_Master_Read,w
   551  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   552  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   553  07BD  00A8               	movwf	??_main
   554  07BE  0828               	movf	??_main,w
   555  07BF  00AE               	movwf	_pd
   556  07C0                     l909:
   557                           
   558                           ;maestro.c: 70:         I2C_Master_Stop();
   559  07C0  120A  118A  266C  120A  118A  	fcall	_I2C_Master_Stop
   560  07C5                     l911:
   561                           
   562                           ;maestro.c: 71:         _delay((unsigned long)((200)*(4000000/4000.0)));
   563  07C5  3002               	movlw	2
   564  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   565  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   566  07C8  00AA               	movwf	??_main+2
   567  07C9  3004               	movlw	4
   568  07CA  00A9               	movwf	??_main+1
   569  07CB  30B9               	movlw	185
   570  07CC  00A8               	movwf	??_main
   571  07CD                     u267:
   572  07CD  0BA8               	decfsz	??_main,f
   573  07CE  2FCD               	goto	u267
   574  07CF  0BA9               	decfsz	??_main+1,f
   575  07D0  2FCD               	goto	u267
   576  07D1  0BAA               	decfsz	??_main+2,f
   577  07D2  2FCD               	goto	u267
   578  07D3  2FD4               	nop2
   579  07D4                     l913:
   580                           
   581                           ;maestro.c: 73:         d0 = (0x0F & pd);
   582  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   583  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   584  07D6  082E               	movf	_pd,w
   585  07D7  390F               	andlw	15
   586  07D8  00A8               	movwf	??_main
   587  07D9  0828               	movf	??_main,w
   588  07DA  00AD               	movwf	_d0
   589  07DB                     l915:
   590                           
   591                           ;maestro.c: 74:         d1 = (0x0F & (pd>>4));
   592  07DB  082E               	movf	_pd,w
   593  07DC  00A8               	movwf	??_main
   594  07DD  3004               	movlw	4
   595  07DE                     u245:
   596  07DE  1003               	clrc
   597  07DF  0CA8               	rrf	??_main,f
   598  07E0  3EFF               	addlw	-1
   599  07E1  1D03               	skipz
   600  07E2  2FDE               	goto	u245
   601  07E3  0828               	movf	??_main,w
   602  07E4  390F               	andlw	15
   603  07E5  00A9               	movwf	??_main+1
   604  07E6  0829               	movf	??_main+1,w
   605  07E7  00AC               	movwf	_d1
   606  07E8                     l917:
   607                           
   608                           ;maestro.c: 76:         PORTDbits.RD0 = d0;
   609  07E8  0C2D               	rrf	_d0,w
   610  07E9  1C03               	skipc
   611  07EA  1008               	bcf	8,0	;volatile
   612  07EB  1803               	skipnc
   613  07EC  1408               	bsf	8,0	;volatile
   614  07ED                     l919:
   615                           
   616                           ;maestro.c: 77:         PORTDbits.RD1 = d1;
   617  07ED  0C2C               	rrf	_d1,w
   618  07EE  1C03               	skipc
   619  07EF  1088               	bcf	8,1	;volatile
   620  07F0  1803               	skipnc
   621  07F1  1488               	bsf	8,1	;volatile
   622  07F2  2F7A               	goto	l94
   623  07F3  120A  118A  2800   	ljmp	start
   624  07F6                     __end_of_main:
   625                           
   626                           	psect	text1
   627  068C                     __ptext1:	
   628 ;; *************** function _setup *****************
   629 ;; Defined at:
   630 ;;		line 84 in file "maestro.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    2
   651 ;; This function calls:
   652 ;;		_I2C_Master_Init
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           
   659                           ;psect for function _setup
   660  068C                     _setup:
   661  068C                     l883:	
   662                           ;incstack = 0
   663                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   664                           
   665                           
   666                           ;maestro.c: 85:     ANSEL = 0;
   667  068C  1683               	bsf	3,5	;RP0=1, select bank3
   668  068D  1703               	bsf	3,6	;RP1=1, select bank3
   669  068E  0188               	clrf	8	;volatile
   670                           
   671                           ;maestro.c: 86:     ANSELH = 0;
   672  068F  0189               	clrf	9	;volatile
   673  0690                     l885:
   674                           
   675                           ;maestro.c: 87:     TRISDbits.TRISD0 = 0;
   676  0690  1683               	bsf	3,5	;RP0=1, select bank1
   677  0691  1303               	bcf	3,6	;RP1=0, select bank1
   678  0692  1008               	bcf	8,0	;volatile
   679  0693                     l887:
   680                           
   681                           ;maestro.c: 88:     TRISDbits.TRISD1 = 0;
   682  0693  1088               	bcf	8,1	;volatile
   683  0694                     l889:
   684                           
   685                           ;maestro.c: 89:     I2C_Master_Init(100000);
   686  0694  3000               	movlw	0
   687  0695  1283               	bcf	3,5	;RP0=0, select bank0
   688  0696  1303               	bcf	3,6	;RP1=0, select bank0
   689  0697  00A3               	movwf	I2C_Master_Init@c+3
   690  0698  3001               	movlw	1
   691  0699  00A2               	movwf	I2C_Master_Init@c+2
   692  069A  3086               	movlw	134
   693  069B  00A1               	movwf	I2C_Master_Init@c+1
   694  069C  30A0               	movlw	160
   695  069D  00A0               	movwf	I2C_Master_Init@c
   696  069E  120A  118A  26D2  120A  118A  	fcall	_I2C_Master_Init
   697  06A3                     l100:
   698  06A3  0008               	return
   699  06A4                     __end_of_setup:
   700                           
   701                           	psect	text2
   702  06D2                     __ptext2:	
   703 ;; *************** function _I2C_Master_Init *****************
   704 ;; Defined at:
   705 ;;		line 16 in file "I2C.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;  c               4    0[BANK0 ] const unsigned long 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, status,2, status,0, pclath, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   719 ;;      Params:         0       4       0       0       0
   720 ;;      Locals:         0       0       0       0       0
   721 ;;      Temps:          0       4       0       0       0
   722 ;;      Totals:         0       8       0       0       0
   723 ;;Total ram usage:        8 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:    1
   726 ;; This function calls:
   727 ;;		___lldiv
   728 ;; This function is called by:
   729 ;;		_setup
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _I2C_Master_Init
   735  06D2                     _I2C_Master_Init:
   736  06D2                     l839:	
   737                           ;incstack = 0
   738                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
   739                           
   740                           
   741                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
   742  06D2  3028               	movlw	40
   743  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   744  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   745  06D5  0094               	movwf	20	;volatile
   746  06D6                     l841:
   747                           
   748                           ;I2C.c: 19:     SSPCON2 = 0;
   749  06D6  1683               	bsf	3,5	;RP0=1, select bank1
   750  06D7  1303               	bcf	3,6	;RP1=0, select bank1
   751  06D8  0191               	clrf	17	;volatile
   752  06D9                     l843:
   753                           
   754                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
   755  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   756  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   757  06DB  0820               	movf	I2C_Master_Init@c,w
   758  06DC  00A4               	movwf	??_I2C_Master_Init
   759  06DD  0821               	movf	I2C_Master_Init@c+1,w
   760  06DE  00A5               	movwf	??_I2C_Master_Init+1
   761  06DF  0822               	movf	I2C_Master_Init@c+2,w
   762  06E0  00A6               	movwf	??_I2C_Master_Init+2
   763  06E1  0823               	movf	I2C_Master_Init@c+3,w
   764  06E2  00A7               	movwf	??_I2C_Master_Init+3
   765  06E3  3002               	movlw	2
   766  06E4                     u205:
   767  06E4  1003               	clrc
   768  06E5  0DA4               	rlf	??_I2C_Master_Init,f
   769  06E6  0DA5               	rlf	??_I2C_Master_Init+1,f
   770  06E7  0DA6               	rlf	??_I2C_Master_Init+2,f
   771  06E8  0DA7               	rlf	??_I2C_Master_Init+3,f
   772  06E9                     u200:
   773  06E9  3EFF               	addlw	-1
   774  06EA  1D03               	skipz
   775  06EB  2EE4               	goto	u205
   776  06EC  0827               	movf	??_I2C_Master_Init+3,w
   777  06ED  00F3               	movwf	___lldiv@divisor+3
   778  06EE  0826               	movf	??_I2C_Master_Init+2,w
   779  06EF  00F2               	movwf	___lldiv@divisor+2
   780  06F0  0825               	movf	??_I2C_Master_Init+1,w
   781  06F1  00F1               	movwf	___lldiv@divisor+1
   782  06F2  0824               	movf	??_I2C_Master_Init,w
   783  06F3  00F0               	movwf	___lldiv@divisor
   784  06F4  3000               	movlw	0
   785  06F5  00F7               	movwf	___lldiv@dividend+3
   786  06F6  303D               	movlw	61
   787  06F7  00F6               	movwf	___lldiv@dividend+2
   788  06F8  3009               	movlw	9
   789  06F9  00F5               	movwf	___lldiv@dividend+1
   790  06FA  3000               	movlw	0
   791  06FB  00F4               	movwf	___lldiv@dividend
   792  06FC  120A  118A  270A  120A  118A  	fcall	___lldiv
   793  0701  0870               	movf	?___lldiv,w
   794  0702  3EFF               	addlw	255
   795  0703  1683               	bsf	3,5	;RP0=1, select bank1
   796  0704  1303               	bcf	3,6	;RP1=0, select bank1
   797  0705  0093               	movwf	19	;volatile
   798  0706                     l845:
   799                           
   800                           ;I2C.c: 21:     SSPSTAT = 0;
   801  0706  0194               	clrf	20	;volatile
   802  0707                     l847:
   803                           
   804                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
   805  0707  1587               	bsf	7,3	;volatile
   806  0708                     l849:
   807                           
   808                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
   809  0708  1607               	bsf	7,4	;volatile
   810  0709                     l29:
   811  0709  0008               	return
   812  070A                     __end_of_I2C_Master_Init:
   813                           
   814                           	psect	text3
   815  070A                     __ptext3:	
   816 ;; *************** function ___lldiv *****************
   817 ;; Defined at:
   818 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  divisor         4    0[COMMON] unsigned long 
   821 ;;  dividend        4    4[COMMON] unsigned long 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  quotient        4    9[COMMON] unsigned long 
   824 ;;  counter         1   13[COMMON] unsigned char 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  4    0[COMMON] unsigned long 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         8       0       0       0       0
   835 ;;      Locals:         5       0       0       0       0
   836 ;;      Temps:          1       0       0       0       0
   837 ;;      Totals:        14       0       0       0       0
   838 ;;Total ram usage:       14 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_I2C_Master_Init
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           
   848                           ;psect for function ___lldiv
   849  070A                     ___lldiv:
   850  070A                     l815:	
   851                           ;incstack = 0
   852                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   853                           
   854  070A  3000               	movlw	0
   855  070B  00FC               	movwf	___lldiv@quotient+3
   856  070C  3000               	movlw	0
   857  070D  00FB               	movwf	___lldiv@quotient+2
   858  070E  3000               	movlw	0
   859  070F  00FA               	movwf	___lldiv@quotient+1
   860  0710  3000               	movlw	0
   861  0711  00F9               	movwf	___lldiv@quotient
   862  0712  0873               	movf	___lldiv@divisor+3,w
   863  0713  0472               	iorwf	___lldiv@divisor+2,w
   864  0714  0471               	iorwf	___lldiv@divisor+1,w
   865  0715  0470               	iorwf	___lldiv@divisor,w
   866  0716  1903               	skipnz
   867  0717  2F19               	goto	u131
   868  0718  2F1A               	goto	u130
   869  0719                     u131:
   870  0719  2F67               	goto	l835
   871  071A                     u130:
   872  071A                     l817:
   873  071A  01FD               	clrf	___lldiv@counter
   874  071B  0AFD               	incf	___lldiv@counter,f
   875  071C  2F2A               	goto	l821
   876  071D                     l819:
   877  071D  3001               	movlw	1
   878  071E  00F8               	movwf	??___lldiv
   879  071F                     u145:
   880  071F  1003               	clrc
   881  0720  0DF0               	rlf	___lldiv@divisor,f
   882  0721  0DF1               	rlf	___lldiv@divisor+1,f
   883  0722  0DF2               	rlf	___lldiv@divisor+2,f
   884  0723  0DF3               	rlf	___lldiv@divisor+3,f
   885  0724  0BF8               	decfsz	??___lldiv,f
   886  0725  2F1F               	goto	u145
   887  0726  3001               	movlw	1
   888  0727  00F8               	movwf	??___lldiv
   889  0728  0878               	movf	??___lldiv,w
   890  0729  07FD               	addwf	___lldiv@counter,f
   891  072A                     l821:
   892  072A  1FF3               	btfss	___lldiv@divisor+3,7
   893  072B  2F2D               	goto	u151
   894  072C  2F2E               	goto	u150
   895  072D                     u151:
   896  072D  2F1D               	goto	l819
   897  072E                     u150:
   898  072E                     l823:
   899  072E  3001               	movlw	1
   900  072F  00F8               	movwf	??___lldiv
   901  0730                     u165:
   902  0730  1003               	clrc
   903  0731  0DF9               	rlf	___lldiv@quotient,f
   904  0732  0DFA               	rlf	___lldiv@quotient+1,f
   905  0733  0DFB               	rlf	___lldiv@quotient+2,f
   906  0734  0DFC               	rlf	___lldiv@quotient+3,f
   907  0735  0BF8               	decfsz	??___lldiv,f
   908  0736  2F30               	goto	u165
   909  0737                     l825:
   910  0737  0873               	movf	___lldiv@divisor+3,w
   911  0738  0277               	subwf	___lldiv@dividend+3,w
   912  0739  1D03               	skipz
   913  073A  2F45               	goto	u175
   914  073B  0872               	movf	___lldiv@divisor+2,w
   915  073C  0276               	subwf	___lldiv@dividend+2,w
   916  073D  1D03               	skipz
   917  073E  2F45               	goto	u175
   918  073F  0871               	movf	___lldiv@divisor+1,w
   919  0740  0275               	subwf	___lldiv@dividend+1,w
   920  0741  1D03               	skipz
   921  0742  2F45               	goto	u175
   922  0743  0870               	movf	___lldiv@divisor,w
   923  0744  0274               	subwf	___lldiv@dividend,w
   924  0745                     u175:
   925  0745  1C03               	skipc
   926  0746  2F48               	goto	u171
   927  0747  2F49               	goto	u170
   928  0748                     u171:
   929  0748  2F58               	goto	l831
   930  0749                     u170:
   931  0749                     l827:
   932  0749  0870               	movf	___lldiv@divisor,w
   933  074A  02F4               	subwf	___lldiv@dividend,f
   934  074B  0871               	movf	___lldiv@divisor+1,w
   935  074C  1C03               	skipc
   936  074D  0F71               	incfsz	___lldiv@divisor+1,w
   937  074E  02F5               	subwf	___lldiv@dividend+1,f
   938  074F  0872               	movf	___lldiv@divisor+2,w
   939  0750  1C03               	skipc
   940  0751  0F72               	incfsz	___lldiv@divisor+2,w
   941  0752  02F6               	subwf	___lldiv@dividend+2,f
   942  0753  0873               	movf	___lldiv@divisor+3,w
   943  0754  1C03               	skipc
   944  0755  0F73               	incfsz	___lldiv@divisor+3,w
   945  0756  02F7               	subwf	___lldiv@dividend+3,f
   946  0757                     l829:
   947  0757  1479               	bsf	___lldiv@quotient,0
   948  0758                     l831:
   949  0758  3001               	movlw	1
   950  0759                     u185:
   951  0759  1003               	clrc
   952  075A  0CF3               	rrf	___lldiv@divisor+3,f
   953  075B  0CF2               	rrf	___lldiv@divisor+2,f
   954  075C  0CF1               	rrf	___lldiv@divisor+1,f
   955  075D  0CF0               	rrf	___lldiv@divisor,f
   956  075E  3EFF               	addlw	-1
   957  075F  1D03               	skipz
   958  0760  2F59               	goto	u185
   959  0761                     l833:
   960  0761  3001               	movlw	1
   961  0762  02FD               	subwf	___lldiv@counter,f
   962  0763  1D03               	btfss	3,2
   963  0764  2F66               	goto	u191
   964  0765  2F67               	goto	u190
   965  0766                     u191:
   966  0766  2F2E               	goto	l823
   967  0767                     u190:
   968  0767                     l835:
   969  0767  087C               	movf	___lldiv@quotient+3,w
   970  0768  00F3               	movwf	?___lldiv+3
   971  0769  087B               	movf	___lldiv@quotient+2,w
   972  076A  00F2               	movwf	?___lldiv+2
   973  076B  087A               	movf	___lldiv@quotient+1,w
   974  076C  00F1               	movwf	?___lldiv+1
   975  076D  0879               	movf	___lldiv@quotient,w
   976  076E  00F0               	movwf	?___lldiv
   977  076F                     l225:
   978  076F  0008               	return
   979  0770                     __end_of___lldiv:
   980                           
   981                           	psect	text4
   982  065B                     __ptext4:	
   983 ;; *************** function _cfg_clk *****************
   984 ;; Defined at:
   985 ;;		line 91 in file "maestro.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0
  1002 ;;      Totals:         0       0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function _cfg_clk
  1014  065B                     _cfg_clk:
  1015  065B                     l891:	
  1016                           ;incstack = 0
  1017                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  1018                           
  1019                           
  1020                           ;maestro.c: 92:     OSCCONbits.IRCF = 0b110;
  1021  065B  1683               	bsf	3,5	;RP0=1, select bank1
  1022  065C  1303               	bcf	3,6	;RP1=0, select bank1
  1023  065D  080F               	movf	15,w	;volatile
  1024  065E  398F               	andlw	-113
  1025  065F  3860               	iorlw	96
  1026  0660  008F               	movwf	15	;volatile
  1027  0661                     l893:
  1028                           
  1029                           ;maestro.c: 93:     OSCCONbits.SCS = 1;
  1030  0661  140F               	bsf	15,0	;volatile
  1031  0662                     l103:
  1032  0662  0008               	return
  1033  0663                     __end_of_cfg_clk:
  1034                           
  1035                           	psect	text5
  1036  0675                     __ptext5:	
  1037 ;; *************** function _I2C_Master_Write *****************
  1038 ;; Defined at:
  1039 ;;		line 65 in file "I2C.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  d               2    0[COMMON] unsigned int 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         2       0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0
  1056 ;;      Totals:         2       0       0       0       0
  1057 ;;Total ram usage:        2 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    1
  1060 ;; This function calls:
  1061 ;;		_I2C_Master_Wait
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _I2C_Master_Write
  1069  0675                     _I2C_Master_Write:
  1070  0675                     l863:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1073                           
  1074                           
  1075                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1076  0675  120A  118A  267F  120A  118A  	fcall	_I2C_Master_Wait
  1077  067A                     l865:
  1078                           
  1079                           ;I2C.c: 68:     SSPBUF = d;
  1080  067A  0870               	movf	I2C_Master_Write@d,w
  1081  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1082  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1083  067D  0093               	movwf	19	;volatile
  1084  067E                     l47:
  1085  067E  0008               	return
  1086  067F                     __end_of_I2C_Master_Write:
  1087                           
  1088                           	psect	text6
  1089  066C                     __ptext6:	
  1090 ;; *************** function _I2C_Master_Stop *****************
  1091 ;; Defined at:
  1092 ;;		line 55 in file "I2C.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, status,2, status,0, pclath, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0
  1109 ;;      Totals:         0       0       0       0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    1
  1113 ;; This function calls:
  1114 ;;		_I2C_Master_Wait
  1115 ;; This function is called by:
  1116 ;;		_main
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           
  1121                           ;psect for function _I2C_Master_Stop
  1122  066C                     _I2C_Master_Stop:
  1123  066C                     l859:	
  1124                           ;incstack = 0
  1125                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1126                           
  1127                           
  1128                           ;I2C.c: 57:     I2C_Master_Wait();
  1129  066C  120A  118A  267F  120A  118A  	fcall	_I2C_Master_Wait
  1130  0671                     l861:
  1131                           
  1132                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1133  0671  1683               	bsf	3,5	;RP0=1, select bank1
  1134  0672  1303               	bcf	3,6	;RP1=0, select bank1
  1135  0673  1511               	bsf	17,2	;volatile
  1136  0674                     l44:
  1137  0674  0008               	return
  1138  0675                     __end_of_I2C_Master_Stop:
  1139                           
  1140                           	psect	text7
  1141  0663                     __ptext7:	
  1142 ;; *************** function _I2C_Master_Start *****************
  1143 ;; Defined at:
  1144 ;;		line 39 in file "I2C.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0, pclath, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    1
  1165 ;; This function calls:
  1166 ;;		_I2C_Master_Wait
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _I2C_Master_Start
  1174  0663                     _I2C_Master_Start:
  1175  0663                     l855:	
  1176                           ;incstack = 0
  1177                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1178                           
  1179                           
  1180                           ;I2C.c: 41:     I2C_Master_Wait();
  1181  0663  120A  118A  267F  120A  118A  	fcall	_I2C_Master_Wait
  1182  0668                     l857:
  1183                           
  1184                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1185  0668  1683               	bsf	3,5	;RP0=1, select bank1
  1186  0669  1303               	bcf	3,6	;RP1=0, select bank1
  1187  066A  1411               	bsf	17,0	;volatile
  1188  066B                     l38:
  1189  066B  0008               	return
  1190  066C                     __end_of_I2C_Master_Start:
  1191                           
  1192                           	psect	text8
  1193  06A4                     __ptext8:	
  1194 ;; *************** function _I2C_Master_Read *****************
  1195 ;; Defined at:
  1196 ;;		line 74 in file "I2C.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  a               2    0[COMMON] unsigned short 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  temp            2    4[COMMON] unsigned short 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  2    0[COMMON] unsigned short 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2, status,0, pclath, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         2       0       0       0       0
  1211 ;;      Locals:         2       0       0       0       0
  1212 ;;      Temps:          2       0       0       0       0
  1213 ;;      Totals:         6       0       0       0       0
  1214 ;;Total ram usage:        6 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    1
  1217 ;; This function calls:
  1218 ;;		_I2C_Master_Wait
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           
  1225                           ;psect for function _I2C_Master_Read
  1226  06A4                     _I2C_Master_Read:
  1227  06A4                     l867:	
  1228                           ;incstack = 0
  1229                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1230                           
  1231                           
  1232                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  1233  06A4  120A  118A  267F  120A  118A  	fcall	_I2C_Master_Wait
  1234  06A9                     l869:
  1235                           
  1236                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  1237  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  1238  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  1239  06AB  1591               	bsf	17,3	;volatile
  1240                           
  1241                           ;I2C.c: 79:     I2C_Master_Wait();
  1242  06AC  120A  118A  267F  120A  118A  	fcall	_I2C_Master_Wait
  1243  06B1                     l871:
  1244                           
  1245                           ;I2C.c: 80:     temp = SSPBUF;
  1246  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1247  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1248  06B3  0813               	movf	19,w	;volatile
  1249  06B4  00F2               	movwf	??_I2C_Master_Read
  1250  06B5  01F3               	clrf	??_I2C_Master_Read+1
  1251  06B6  0872               	movf	??_I2C_Master_Read,w
  1252  06B7  00F4               	movwf	I2C_Master_Read@temp
  1253  06B8  0873               	movf	??_I2C_Master_Read+1,w
  1254  06B9  00F5               	movwf	I2C_Master_Read@temp+1
  1255  06BA                     l873:
  1256                           
  1257                           ;I2C.c: 81:     I2C_Master_Wait();
  1258  06BA  120A  118A  267F  120A  118A  	fcall	_I2C_Master_Wait
  1259  06BF                     l875:
  1260                           
  1261                           ;I2C.c: 82:     if(a == 1){
  1262  06BF  0370               	decf	I2C_Master_Read@a,w
  1263  06C0  0471               	iorwf	I2C_Master_Read@a+1,w
  1264  06C1  1D03               	btfss	3,2
  1265  06C2  2EC4               	goto	u231
  1266  06C3  2EC5               	goto	u230
  1267  06C4                     u231:
  1268  06C4  2EC9               	goto	l50
  1269  06C5                     u230:
  1270  06C5                     l877:
  1271                           
  1272                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  1273  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  1274  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  1275  06C7  1291               	bcf	17,5	;volatile
  1276                           
  1277                           ;I2C.c: 84:     }else{
  1278  06C8  2ECC               	goto	l51
  1279  06C9                     l50:
  1280                           
  1281                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  1282  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  1283  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  1284  06CB  1691               	bsf	17,5	;volatile
  1285  06CC                     l51:	
  1286                           ;I2C.c: 86:     }
  1287                           
  1288                           
  1289                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  1290  06CC  1611               	bsf	17,4	;volatile
  1291  06CD                     l879:
  1292                           
  1293                           ;I2C.c: 88:     return temp;
  1294  06CD  0875               	movf	I2C_Master_Read@temp+1,w
  1295  06CE  00F1               	movwf	?_I2C_Master_Read+1
  1296  06CF  0874               	movf	I2C_Master_Read@temp,w
  1297  06D0  00F0               	movwf	?_I2C_Master_Read
  1298  06D1                     l52:
  1299  06D1  0008               	return
  1300  06D2                     __end_of_I2C_Master_Read:
  1301                           
  1302                           	psect	text9
  1303  067F                     __ptext9:	
  1304 ;; *************** function _I2C_Master_Wait *****************
  1305 ;; Defined at:
  1306 ;;		line 32 in file "I2C.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         0       0       0       0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_I2C_Master_Start
  1330 ;;		_I2C_Master_Stop
  1331 ;;		_I2C_Master_Write
  1332 ;;		_I2C_Master_Read
  1333 ;;		_I2C_Master_RepeatedStart
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function _I2C_Master_Wait
  1339  067F                     _I2C_Master_Wait:
  1340  067F                     l851:	
  1341                           ;incstack = 0
  1342                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1343                           
  1344  067F                     l32:	
  1345                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1346                           
  1347  067F  1683               	bsf	3,5	;RP0=1, select bank1
  1348  0680  1303               	bcf	3,6	;RP1=0, select bank1
  1349  0681  1914               	btfsc	20,2	;volatile
  1350  0682  2E84               	goto	u211
  1351  0683  2E85               	goto	u210
  1352  0684                     u211:
  1353  0684  2E7F               	goto	l32
  1354  0685                     u210:
  1355  0685                     l853:
  1356  0685  0811               	movf	17,w	;volatile
  1357  0686  391F               	andlw	31
  1358  0687  1D03               	btfss	3,2
  1359  0688  2E8A               	goto	u221
  1360  0689  2E8B               	goto	u220
  1361  068A                     u221:
  1362  068A  2E7F               	goto	l32
  1363  068B                     u220:
  1364  068B                     l35:
  1365  068B  0008               	return
  1366  068C                     __end_of_I2C_Master_Wait:
  1367  007E                     btemp	set	126	;btemp
  1368  007E                     wtemp0	set	126
  1369                           
  1370                           	psect	config
  1371                           
  1372                           ;Config register CONFIG1 @ 0x2007
  1373                           ;	Oscillator Selection bits
  1374                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1375                           ;	Watchdog Timer Enable bit
  1376                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1377                           ;	Power-up Timer Enable bit
  1378                           ;	PWRTE = OFF, PWRT disabled
  1379                           ;	RE3/MCLR pin function select bit
  1380                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1381                           ;	Code Protection bit
  1382                           ;	CP = OFF, Program memory code protection is disabled
  1383                           ;	Data Code Protection bit
  1384                           ;	CPD = OFF, Data memory code protection is disabled
  1385                           ;	Brown Out Reset Selection bits
  1386                           ;	BOREN = OFF, BOR disabled
  1387                           ;	Internal External Switchover bit
  1388                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1389                           ;	Fail-Safe Clock Monitor Enabled bit
  1390                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1391                           ;	Low Voltage Programming Enable bit
  1392                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1393                           ;	In-Circuit Debugger Mode bit
  1394                           ;	DEBUG = 0x1, unprogrammed default
  1395  2007                     	org	8199
  1396  2007  20D4               	dw	8404
  1397                           
  1398                           ;Config register CONFIG2 @ 0x2008
  1399                           ;	Brown-out Reset Selection bit
  1400                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1401                           ;	Flash Program Memory Self Write Enable bits
  1402                           ;	WRT = OFF, Write protection off
  1403  2008                     	org	8200
  1404  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     783
                                              8 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _cfg_clk
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _cfg_clk
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       F       5       18.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 29 16:00:18 2021

                       l32 067F                         l50 06C9                         l35 068B  
                       l51 06CC                         l52 06D1                         l44 0674  
                       l29 0709                         l38 066B                         l47 067E  
                       l94 077A                         _d0 002D                         _d1 002C  
                       _pd 002E                        l100 06A3                        l103 0662  
                      l225 076F                        l821 072A                        l901 0795  
                      l831 0758                        l823 072E                        l815 070A  
                      l911 07C5                        l903 07A4                        l833 0761  
                      l825 0737                        l817 071A                        l841 06D6  
                      l913 07D4                        l905 07A9                        l851 067F  
                      l827 0749                        l819 071D                        l835 0767  
                      l843 06D9                        l915 07DB                        l907 07B2  
                      l853 0685                        l861 0671                        l829 0757  
                      l845 0706                        l917 07E8                        l909 07C0  
                      l871 06B1                        l855 0663                        l863 0675  
                      l847 0707                        l839 06D2                        l919 07ED  
                      l873 06BA                        l857 0668                        l865 067A  
                      l849 0708                        l875 06BF                        l867 06A4  
                      l859 066C                        l891 065B                        l883 068C  
                      l877 06C5                        l869 06A9                        l893 0661  
                      l885 0690                        l879 06CD                        l887 0693  
                      l889 0694                        l899 0770                        _GIE 005F  
                      u200 06E9                        u210 0685                        u130 071A  
                      u211 0684                        u131 0719                        u220 068B  
                      u221 068A                        u205 06E4                        u230 06C5  
                      u150 072E                        u231 06C4                        u151 072D  
                      u145 071F                        u170 0749                        u171 0748  
                      u165 0730                        u245 07DE                        u190 0767  
                      u191 0766                        u175 0745                        u185 0759  
                      u257 079D                        u267 07CD                        _val 002B  
                     _PEIE 005E                       _main 0770                       btemp 007E  
                     start 0000           ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _ANSEL 0188            __end_of___lldiv 0770            __end_of_cfg_clk 0663  
                    _SSPIE 0463                      _SSPIF 0063                      _setup 068C  
                    status 0003                      wtemp0 007E            __initialization 07F6  
             __end_of_main 07F6                     ??_main 0028          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   ?_setup 0070                     _ANSELH 0189                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                  ??___lldiv 0078                  ??_cfg_clk 0070  
  __end_of__initialization 07FC             __pcstackCOMMON 0070              __end_of_setup 06A4  
                  ??_setup 007E                 __pbssBANK0 002B                 __pmaintext 0770  
                  _SSPCON2 0091                    _SSPSTAT 0094                    ___lldiv 070A  
                  _cfg_clk 065B                    __ptext1 068C                    __ptext2 06D2  
                  __ptext3 070A                    __ptext4 065B                    __ptext5 0675  
                  __ptext6 066C                    __ptext7 0663                    __ptext8 06A4  
                  __ptext9 067F   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009       end_of_initialization 07FC  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
                _PORTDbits 0008                  _TRISCbits 0087                  _TRISDbits 0088  
      start_initialization 07F6          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070                  ___latbits 0002  
            __pcstackBANK0 0020           _I2C_Master_Start 0663           _I2C_Master_Write 0675  
                 ?___lldiv 0070                   ?_cfg_clk 0070             __size_of_setup 0018  
      I2C_Master_Read@temp 0074           __size_of___lldiv 0066           __size_of_cfg_clk 0008  
          _I2C_Master_Init 06D2            _I2C_Master_Read 06A4            _I2C_Master_Wait 067F  
          _I2C_Master_Stop 066C              __size_of_main 0086   __end_of_I2C_Master_Start 066C  
 __end_of_I2C_Master_Write 067F           ___lldiv@dividend 0074                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 070A    __end_of_I2C_Master_Read 06D2    __end_of_I2C_Master_Wait 068C  
  __end_of_I2C_Master_Stop 0675           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
              _SSPCON2bits 0091  

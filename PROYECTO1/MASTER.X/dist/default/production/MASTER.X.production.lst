

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Sep 01 18:21:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    51                           	psect	text1_split_2,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0185                     	;# 
   161  0187                     	;# 
   162  0188                     	;# 
   163  0189                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  008F                     	;# 
   211  0090                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  0105                     	;# 
   230  0107                     	;# 
   231  0108                     	;# 
   232  0109                     	;# 
   233  010C                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  0185                     	;# 
   239  0187                     	;# 
   240  0188                     	;# 
   241  0189                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  008F                     	;# 
   289  0090                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0095                     	;# 
   297  0096                     	;# 
   298  0097                     	;# 
   299  0098                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  0105                     	;# 
   308  0107                     	;# 
   309  0108                     	;# 
   310  0109                     	;# 
   311  010C                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  0185                     	;# 
   317  0187                     	;# 
   318  0188                     	;# 
   319  0189                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322                           
   323                           	psect	strings
   324  1800                     __pstrings:
   325  1800                     stringtab:
   326  1800                     __stringtab:
   327  1800                     stringcode:	
   328                           ;	String table - string pointers are 1 byte each
   329                           
   330  1800                     stringdir:
   331  1800  3018               	movlw	high stringdir
   332  1801  008A               	movwf	10
   333  1802  0804               	movf	4,w
   334  1803  0A84               	incf	4,f
   335  1804  0782               	addwf	2,f
   336  1805                     __stringbase:
   337  1805  3400               	retlw	0
   338  1806                     __end_of__stringtab:
   339  1806                     __powers_:
   340  1806  3400               	retlw	0
   341  1807  3400               	retlw	0
   342  1808  3480               	retlw	128
   343  1809  343F               	retlw	63
   344  180A  3400               	retlw	0
   345  180B  3400               	retlw	0
   346  180C  3420               	retlw	32
   347  180D  3441               	retlw	65
   348  180E  3400               	retlw	0
   349  180F  3400               	retlw	0
   350  1810  34C8               	retlw	200
   351  1811  3442               	retlw	66
   352  1812  3400               	retlw	0
   353  1813  3400               	retlw	0
   354  1814  347A               	retlw	122
   355  1815  3444               	retlw	68
   356  1816  3400               	retlw	0
   357  1817  3440               	retlw	64
   358  1818  341C               	retlw	28
   359  1819  3446               	retlw	70
   360  181A  3400               	retlw	0
   361  181B  3450               	retlw	80
   362  181C  34C3               	retlw	195
   363  181D  3447               	retlw	71
   364  181E  3400               	retlw	0
   365  181F  3424               	retlw	36
   366  1820  3474               	retlw	116
   367  1821  3449               	retlw	73
   368  1822  3480               	retlw	128
   369  1823  3496               	retlw	150
   370  1824  3418               	retlw	24
   371  1825  344B               	retlw	75
   372  1826  3420               	retlw	32
   373  1827  34BC               	retlw	188
   374  1828  34BE               	retlw	190
   375  1829  344C               	retlw	76
   376  182A  3428               	retlw	40
   377  182B  346B               	retlw	107
   378  182C  346E               	retlw	110
   379  182D  344E               	retlw	78
   380  182E  34F9               	retlw	249
   381  182F  3402               	retlw	2
   382  1830  3415               	retlw	21
   383  1831  3450               	retlw	80
   384  1832  34EC               	retlw	236
   385  1833  3478               	retlw	120
   386  1834  34AD               	retlw	173
   387  1835  3460               	retlw	96
   388  1836  34CA               	retlw	202
   389  1837  34F2               	retlw	242
   390  1838  3449               	retlw	73
   391  1839  3471               	retlw	113
   392  183A                     __end_of__powers_:
   393  183A                     __npowers_:
   394  183A  3400               	retlw	0
   395  183B  3400               	retlw	0
   396  183C  3480               	retlw	128
   397  183D  343F               	retlw	63
   398  183E  34CD               	retlw	205
   399  183F  34CC               	retlw	204
   400  1840  34CC               	retlw	204
   401  1841  343D               	retlw	61
   402  1842  340A               	retlw	10
   403  1843  34D7               	retlw	215
   404  1844  3423               	retlw	35
   405  1845  343C               	retlw	60
   406  1846  346F               	retlw	111
   407  1847  3412               	retlw	18
   408  1848  3483               	retlw	131
   409  1849  343A               	retlw	58
   410  184A  3417               	retlw	23
   411  184B  34B7               	retlw	183
   412  184C  34D1               	retlw	209
   413  184D  3438               	retlw	56
   414  184E  34AC               	retlw	172
   415  184F  34C5               	retlw	197
   416  1850  3427               	retlw	39
   417  1851  3437               	retlw	55
   418  1852  34BD               	retlw	189
   419  1853  3437               	retlw	55
   420  1854  3486               	retlw	134
   421  1855  3435               	retlw	53
   422  1856  3495               	retlw	149
   423  1857  34BF               	retlw	191
   424  1858  34D6               	retlw	214
   425  1859  3433               	retlw	51
   426  185A  3477               	retlw	119
   427  185B  34CC               	retlw	204
   428  185C  342B               	retlw	43
   429  185D  3432               	retlw	50
   430  185E  345F               	retlw	95
   431  185F  3470               	retlw	112
   432  1860  3489               	retlw	137
   433  1861  3430               	retlw	48
   434  1862  34FF               	retlw	255
   435  1863  34E6               	retlw	230
   436  1864  34DB               	retlw	219
   437  1865  342E               	retlw	46
   438  1866  3408               	retlw	8
   439  1867  34E5               	retlw	229
   440  1868  343C               	retlw	60
   441  1869  341E               	retlw	30
   442  186A  3460               	retlw	96
   443  186B  3442               	retlw	66
   444  186C  34A2               	retlw	162
   445  186D  340D               	retlw	13
   446  186E                     __end_of__npowers_:
   447  186E                     _dpowers:
   448  186E  3401               	retlw	1
   449  186F  3400               	retlw	0
   450  1870  3400               	retlw	0
   451  1871  3400               	retlw	0
   452  1872  340A               	retlw	10
   453  1873  3400               	retlw	0
   454  1874  3400               	retlw	0
   455  1875  3400               	retlw	0
   456  1876  3464               	retlw	100
   457  1877  3400               	retlw	0
   458  1878  3400               	retlw	0
   459  1879  3400               	retlw	0
   460  187A  34E8               	retlw	232
   461  187B  3403               	retlw	3
   462  187C  3400               	retlw	0
   463  187D  3400               	retlw	0
   464  187E  3410               	retlw	16
   465  187F  3427               	retlw	39
   466  1880  3400               	retlw	0
   467  1881  3400               	retlw	0
   468  1882  34A0               	retlw	160
   469  1883  3486               	retlw	134
   470  1884  3401               	retlw	1
   471  1885  3400               	retlw	0
   472  1886  3440               	retlw	64
   473  1887  3442               	retlw	66
   474  1888  340F               	retlw	15
   475  1889  3400               	retlw	0
   476  188A  3480               	retlw	128
   477  188B  3496               	retlw	150
   478  188C  3498               	retlw	152
   479  188D  3400               	retlw	0
   480  188E  3400               	retlw	0
   481  188F  34E1               	retlw	225
   482  1890  34F5               	retlw	245
   483  1891  3405               	retlw	5
   484  1892  3400               	retlw	0
   485  1893  34CA               	retlw	202
   486  1894  349A               	retlw	154
   487  1895  343B               	retlw	59
   488  1896                     __end_of_dpowers:
   489  0019                     _TXREG	set	25
   490  0018                     _RCSTAbits	set	24
   491  000B                     _INTCONbits	set	11
   492  0005                     _PORTA	set	5
   493  0008                     _PORTD	set	8
   494  0005                     _PORTAbits	set	5
   495  0008                     _PORTDbits	set	8
   496  001A                     _RCREG	set	26
   497  000C                     _PIR1bits	set	12
   498  0013                     _SSPBUF	set	19
   499  0014                     _SSPCON	set	20
   500  0064                     _TXIF	set	100
   501  0063                     _SSPIF	set	99
   502  005E                     _PEIE	set	94
   503  005F                     _GIE	set	95
   504  009A                     _SPBRGH	set	154
   505  0099                     _SPBRG	set	153
   506  0098                     _TXSTAbits	set	152
   507  008F                     _OSCCONbits	set	143
   508  008C                     _PIE1bits	set	140
   509  0085                     _TRISA	set	133
   510  0088                     _TRISD	set	136
   511  0091                     _SSPCON2bits	set	145
   512  0087                     _TRISCbits	set	135
   513  0094                     _SSPSTAT	set	148
   514  0093                     _SSPADD	set	147
   515  0091                     _SSPCON2	set	145
   516  0463                     _SSPIE	set	1123
   517  043C                     _TRISC4	set	1084
   518  043B                     _TRISC3	set	1083
   519  0187                     _BAUDCTLbits	set	391
   520  0189                     _ANSELH	set	393
   521  0188                     _ANSEL	set	392
   522  1896                     STR_1:
   523  1896  3425               	retlw	37	;'%'
   524  1897  3430               	retlw	48	;'0'
   525  1898  342E               	retlw	46	;'.'
   526  1899  3430               	retlw	48	;'0'
   527  189A  3466               	retlw	102	;'f'
   528  189B  342C               	retlw	44	;','
   529  189C  3425               	retlw	37	;'%'
   530  189D  3430               	retlw	48	;'0'
   531  189E  342E               	retlw	46	;'.'
   532  189F  3430               	retlw	48	;'0'
   533  18A0  3466               	retlw	102	;'f'
   534  18A1  342C               	retlw	44	;','
   535  18A2  3425               	retlw	37	;'%'
   536  18A3  3430               	retlw	48	;'0'
   537  18A4  342E               	retlw	46	;'.'
   538  18A5  3430               	retlw	48	;'0'
   539  18A6  3466               	retlw	102	;'f'
   540  18A7  342C               	retlw	44	;','
   541  18A8  3400               	retlw	0
   542                           
   543                           	psect	cinit
   544  000F                     start_initialization:	
   545                           ; #config settings
   546                           
   547  000F                     __initialization:
   548                           
   549                           ; Clear objects allocated to COMMON
   550  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   551                           
   552                           ; Clear objects allocated to BANK1
   553  0010  1383               	bcf	3,7	;select IRP bank0
   554  0011  30D3               	movlw	low __pbssBANK1
   555  0012  0084               	movwf	4
   556  0013  30ED               	movlw	low (__pbssBANK1+26)
   557  0014  160A  158A  2298  120A  118A  	fcall	clear_ram0
   558  0019                     end_of_initialization:	
   559                           ;End of C runtime variable initialization code
   560                           
   561  0019                     __end_of__initialization:
   562  0019  0183               	clrf	3
   563  001A  160A  118A  299B   	ljmp	_main	;jump to C main() function
   564                           
   565                           	psect	bssCOMMON
   566  007B                     __pbssCOMMON:
   567  007B                     _val:
   568  007B                     	ds	1
   569                           
   570                           	psect	bssBANK1
   571  00D3                     __pbssBANK1:
   572  00D3                     _v2:
   573  00D3                     	ds	4
   574  00D7                     _v1:
   575  00D7                     	ds	4
   576  00DB                     _v0:
   577  00DB                     	ds	4
   578  00DF                     _light:
   579  00DF                     	ds	1
   580  00E0                     _door:
   581  00E0                     	ds	1
   582  00E1                     _lock:
   583  00E1                     	ds	1
   584  00E2                     _f1:
   585  00E2                     	ds	10
   586  00EC                     _pd:
   587  00EC                     	ds	1
   588                           
   589                           	psect	clrtext
   590  1A98                     clear_ram0:	
   591                           ;	Called with FSR containing the base address, and
   592                           ;	W with the last address+1
   593                           
   594  1A98  0064               	clrwdt	;clear the watchdog before getting into this loop
   595  1A99                     clrloop0:
   596  1A99  0180               	clrf	0	;clear RAM location pointed to by FSR
   597  1A9A  0A84               	incf	4,f	;increment pointer
   598  1A9B  0604               	xorwf	4,w	;XOR with final address
   599  1A9C  1903               	btfsc	3,2	;have we reached the end yet?
   600  1A9D  3400               	retlw	0	;all done for this memory range, return
   601  1A9E  0604               	xorwf	4,w	;XOR again to restore value
   602  1A9F  2A99               	goto	clrloop0	;do the next byte
   603                           
   604                           	psect	cstackBANK1
   605  00A0                     __pcstackBANK1:
   606  00A0                     ?___flsub:
   607  00A0                     ___flsub@a:	
   608                           ; 4 bytes @ 0x0
   609                           
   610                           
   611                           ; 4 bytes @ 0x0
   612  00A0                     	ds	4
   613  00A4                     ___flsub@b:
   614                           
   615                           ; 4 bytes @ 0x4
   616  00A4                     	ds	4
   617  00A8                     ?_sprintf:
   618  00A8                     sprintf@f:	
   619                           ; 2 bytes @ 0x8
   620                           
   621                           
   622                           ; 1 bytes @ 0x8
   623  00A8                     	ds	13
   624  00B5                     _sprintf$1181:
   625                           
   626                           ; 4 bytes @ 0x15
   627  00B5                     	ds	4
   628  00B9                     sprintf@ap:
   629                           
   630                           ; 1 bytes @ 0x19
   631  00B9                     	ds	1
   632  00BA                     sprintf@val:
   633                           
   634                           ; 4 bytes @ 0x1A
   635  00BA                     	ds	4
   636  00BE                     sprintf@tmpval:
   637                           
   638                           ; 4 bytes @ 0x1E
   639  00BE                     	ds	4
   640  00C2                     sprintf@eexp:
   641                           
   642                           ; 2 bytes @ 0x22
   643  00C2                     	ds	2
   644  00C4                     sprintf@flag:
   645                           
   646                           ; 2 bytes @ 0x24
   647  00C4                     	ds	2
   648  00C6                     sprintf@width:
   649                           
   650                           ; 2 bytes @ 0x26
   651  00C6                     	ds	2
   652  00C8                     sprintf@fval:
   653                           
   654                           ; 4 bytes @ 0x28
   655  00C8                     	ds	4
   656  00CC                     sprintf@prec:
   657                           
   658                           ; 2 bytes @ 0x2C
   659  00CC                     	ds	2
   660  00CE                     sprintf@sp:
   661                           
   662                           ; 1 bytes @ 0x2E
   663  00CE                     	ds	1
   664  00CF                     sprintf@c:
   665                           
   666                           ; 1 bytes @ 0x2F
   667  00CF                     	ds	1
   668  00D0                     ??_main:
   669                           
   670                           ; 1 bytes @ 0x30
   671  00D0                     	ds	3
   672                           
   673                           	psect	cstackCOMMON
   674  0070                     __pcstackCOMMON:
   675  0070                     ?_isdigit:
   676  0070                     ?_setup:	
   677                           ; 1 bit 
   678                           
   679  0070                     ?_cfg_clk:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_cfg_usart:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_send_crct:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_send_char:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_I2C_Master_Wait:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_I2C_Master_Start:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_I2C_Master_Stop:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_isr:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ??_isr:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_main:	
   707                           ; 1 bytes @ 0x0
   708                           
   709                           
   710                           ; 1 bytes @ 0x0
   711  0070                     	ds	2
   712  0072                     ?___fleq:
   713  0072                     ?___flge:	
   714                           ; 1 bit 
   715                           
   716  0072                     ??_cfg_clk:	
   717                           ; 1 bit 
   718                           
   719  0072                     ??_cfg_usart:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     ??_send_char:	
   723                           ; 1 bytes @ 0x2
   724                           
   725  0072                     ??_isdigit:	
   726                           ; 1 bytes @ 0x2
   727                           
   728  0072                     ??_I2C_Master_Wait:	
   729                           ; 1 bytes @ 0x2
   730                           
   731  0072                     ??_I2C_Master_Start:	
   732                           ; 1 bytes @ 0x2
   733                           
   734  0072                     ??_I2C_Master_Stop:	
   735                           ; 1 bytes @ 0x2
   736                           
   737  0072                     ?_I2C_Master_Write:	
   738                           ; 1 bytes @ 0x2
   739                           
   740  0072                     ?__Umul8_16:	
   741                           ; 1 bytes @ 0x2
   742                           
   743  0072                     ?_I2C_Master_Read:	
   744                           ; 2 bytes @ 0x2
   745                           
   746  0072                     ?___wmul:	
   747                           ; 2 bytes @ 0x2
   748                           
   749  0072                     ?___awmod:	
   750                           ; 2 bytes @ 0x2
   751                           
   752  0072                     ?___lwmod:	
   753                           ; 2 bytes @ 0x2
   754                           
   755  0072                     ?__tdiv_to_l_:	
   756                           ; 2 bytes @ 0x2
   757                           
   758  0072                     ?__div_to_l_:	
   759                           ; 4 bytes @ 0x2
   760                           
   761  0072                     ?___lldiv:	
   762                           ; 4 bytes @ 0x2
   763                           
   764  0072                     ?___flneg:	
   765                           ; 4 bytes @ 0x2
   766                           
   767  0072                     ?___llmod:	
   768                           ; 4 bytes @ 0x2
   769                           
   770  0072                     ?___xxtofl:	
   771                           ; 4 bytes @ 0x2
   772                           
   773  0072                     send_char@dato:	
   774                           ; 4 bytes @ 0x2
   775                           
   776  0072                     __Umul8_16@multiplicand:	
   777                           ; 1 bytes @ 0x2
   778                           
   779  0072                     _isdigit$991:	
   780                           ; 1 bytes @ 0x2
   781                           
   782  0072                     I2C_Master_Write@d:	
   783                           ; 1 bytes @ 0x2
   784                           
   785  0072                     I2C_Master_Read@a:	
   786                           ; 2 bytes @ 0x2
   787                           
   788  0072                     ___wmul@multiplier:	
   789                           ; 2 bytes @ 0x2
   790                           
   791  0072                     ___awmod@divisor:	
   792                           ; 2 bytes @ 0x2
   793                           
   794  0072                     ___lwmod@divisor:	
   795                           ; 2 bytes @ 0x2
   796                           
   797  0072                     ___lldiv@divisor:	
   798                           ; 2 bytes @ 0x2
   799                           
   800  0072                     __div_to_l_@f1:	
   801                           ; 4 bytes @ 0x2
   802                           
   803  0072                     ___fleq@ff1:	
   804                           ; 4 bytes @ 0x2
   805                           
   806  0072                     ___flge@ff1:	
   807                           ; 4 bytes @ 0x2
   808                           
   809  0072                     ___flneg@f1:	
   810                           ; 4 bytes @ 0x2
   811                           
   812  0072                     __tdiv_to_l_@f1:	
   813                           ; 4 bytes @ 0x2
   814                           
   815  0072                     ___llmod@divisor:	
   816                           ; 4 bytes @ 0x2
   817                           
   818  0072                     ___xxtofl@val:	
   819                           ; 4 bytes @ 0x2
   820                           
   821                           
   822                           ; 4 bytes @ 0x2
   823  0072                     	ds	1
   824  0073                     ??_send_crct:
   825  0073                     isdigit@c:	
   826                           ; 1 bytes @ 0x3
   827                           
   828                           
   829                           ; 1 bytes @ 0x3
   830  0073                     	ds	1
   831  0074                     ??__Umul8_16:
   832  0074                     ??_I2C_Master_Write:	
   833                           ; 1 bytes @ 0x4
   834                           
   835  0074                     ??_I2C_Master_Read:	
   836                           ; 1 bytes @ 0x4
   837                           
   838  0074                     send_crct@i:	
   839                           ; 1 bytes @ 0x4
   840                           
   841  0074                     ___wmul@multiplicand:	
   842                           ; 2 bytes @ 0x4
   843                           
   844  0074                     ___awmod@dividend:	
   845                           ; 2 bytes @ 0x4
   846                           
   847  0074                     ___lwmod@dividend:	
   848                           ; 2 bytes @ 0x4
   849                           
   850                           
   851                           ; 2 bytes @ 0x4
   852  0074                     	ds	2
   853  0076                     ??___wmul:
   854  0076                     ??___awmod:	
   855                           ; 1 bytes @ 0x6
   856                           
   857  0076                     ??___flneg:	
   858                           ; 1 bytes @ 0x6
   859                           
   860  0076                     ??___lwmod:	
   861                           ; 1 bytes @ 0x6
   862                           
   863  0076                     ??___xxtofl:	
   864                           ; 1 bytes @ 0x6
   865                           
   866  0076                     send_crct@st:	
   867                           ; 1 bytes @ 0x6
   868                           
   869  0076                     I2C_Master_Read@temp:	
   870                           ; 1 bytes @ 0x6
   871                           
   872  0076                     ___wmul@product:	
   873                           ; 2 bytes @ 0x6
   874                           
   875  0076                     __Umul8_16@product:	
   876                           ; 2 bytes @ 0x6
   877                           
   878  0076                     ___lldiv@dividend:	
   879                           ; 2 bytes @ 0x6
   880                           
   881  0076                     __div_to_l_@f2:	
   882                           ; 4 bytes @ 0x6
   883                           
   884  0076                     ___fleq@ff2:	
   885                           ; 4 bytes @ 0x6
   886                           
   887  0076                     ___flge@ff2:	
   888                           ; 4 bytes @ 0x6
   889                           
   890  0076                     __tdiv_to_l_@f2:	
   891                           ; 4 bytes @ 0x6
   892                           
   893  0076                     ___llmod@dividend:	
   894                           ; 4 bytes @ 0x6
   895                           
   896                           
   897                           ; 4 bytes @ 0x6
   898  0076                     	ds	1
   899  0077                     ___awmod@counter:
   900  0077                     ___lwmod@counter:	
   901                           ; 1 bytes @ 0x7
   902                           
   903                           
   904                           ; 1 bytes @ 0x7
   905  0077                     	ds	1
   906  0078                     ??___lwdiv:
   907  0078                     ___awmod@sign:	
   908                           ; 1 bytes @ 0x8
   909                           
   910  0078                     __Umul8_16@word_mpld:	
   911                           ; 1 bytes @ 0x8
   912                           
   913                           
   914                           ; 2 bytes @ 0x8
   915  0078                     	ds	1
   916  0079                     ??___awdiv:
   917                           
   918                           ; 1 bytes @ 0x9
   919  0079                     	ds	1
   920  007A                     ??__div_to_l_:
   921  007A                     ??___lldiv:	
   922                           ; 1 bytes @ 0xA
   923                           
   924  007A                     ??___llmod:	
   925                           ; 1 bytes @ 0xA
   926                           
   927  007A                     __Umul8_16@multiplier:	
   928                           ; 1 bytes @ 0xA
   929                           
   930                           
   931                           ; 1 bytes @ 0xA
   932  007A                     	ds	1
   933  007B                     ??_setup:
   934  007B                     ??___flsub:	
   935                           ; 1 bytes @ 0xB
   936                           
   937                           
   938                           	psect	cstackBANK0
   939  0020                     __pcstackBANK0:	
   940                           ; 1 bytes @ 0xB
   941                           
   942  0020                     ??__tdiv_to_l_:
   943  0020                     ??___fleq:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0020                     ??___flge:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0020                     ?___awdiv:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0020                     ?___lwdiv:	
   953                           ; 2 bytes @ 0x0
   954                           
   955  0020                     ___llmod@counter:	
   956                           ; 2 bytes @ 0x0
   957                           
   958  0020                     ___xxtofl@sign:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0020                     ___awdiv@divisor:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0020                     ___lwdiv@divisor:	
   965                           ; 2 bytes @ 0x0
   966                           
   967  0020                     ___lldiv@quotient:	
   968                           ; 2 bytes @ 0x0
   969                           
   970  0020                     __div_to_l_@quot:	
   971                           ; 4 bytes @ 0x0
   972                           
   973                           
   974                           ; 4 bytes @ 0x0
   975  0020                     	ds	1
   976  0021                     ___xxtofl@exp:
   977                           
   978                           ; 1 bytes @ 0x1
   979  0021                     	ds	1
   980  0022                     ___awdiv@dividend:
   981  0022                     ___lwdiv@dividend:	
   982                           ; 2 bytes @ 0x2
   983                           
   984  0022                     ___xxtofl@arg:	
   985                           ; 2 bytes @ 0x2
   986                           
   987                           
   988                           ; 4 bytes @ 0x2
   989  0022                     	ds	2
   990  0024                     ___lldiv@counter:
   991  0024                     ___awdiv@counter:	
   992                           ; 1 bytes @ 0x4
   993                           
   994  0024                     __div_to_l_@cntr:	
   995                           ; 1 bytes @ 0x4
   996                           
   997  0024                     ___lwdiv@counter:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000  0024                     __tdiv_to_l_@quot:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0x4
  1005  0024                     	ds	1
  1006  0025                     ?_I2C_Master_Init:
  1007  0025                     ___awdiv@sign:	
  1008                           ; 1 bytes @ 0x5
  1009                           
  1010  0025                     __div_to_l_@exp1:	
  1011                           ; 1 bytes @ 0x5
  1012                           
  1013  0025                     ___lwdiv@quotient:	
  1014                           ; 1 bytes @ 0x5
  1015                           
  1016  0025                     I2C_Master_Init@c:	
  1017                           ; 2 bytes @ 0x5
  1018                           
  1019                           
  1020                           ; 4 bytes @ 0x5
  1021  0025                     	ds	1
  1022  0026                     ?_conv:
  1023  0026                     ___awdiv@quotient:	
  1024                           ; 4 bytes @ 0x6
  1025                           
  1026                           
  1027                           ; 2 bytes @ 0x6
  1028  0026                     	ds	2
  1029  0028                     ?___flmul:
  1030  0028                     __tdiv_to_l_@cntr:	
  1031                           ; 4 bytes @ 0x8
  1032                           
  1033  0028                     ___flmul@b:	
  1034                           ; 1 bytes @ 0x8
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0x8
  1038  0028                     	ds	1
  1039  0029                     ??_I2C_Master_Init:
  1040  0029                     __tdiv_to_l_@exp1:	
  1041                           ; 1 bytes @ 0x9
  1042                           
  1043                           
  1044                           ; 1 bytes @ 0x9
  1045  0029                     	ds	1
  1046  002A                     ??_conv:
  1047                           
  1048                           ; 1 bytes @ 0xA
  1049  002A                     	ds	2
  1050  002C                     ___flmul@a:
  1051                           
  1052                           ; 4 bytes @ 0xC
  1053  002C                     	ds	2
  1054  002E                     conv@result:
  1055                           
  1056                           ; 4 bytes @ 0xE
  1057  002E                     	ds	2
  1058  0030                     ??___flmul:
  1059                           
  1060                           ; 1 bytes @ 0x10
  1061  0030                     	ds	2
  1062  0032                     conv@aa:
  1063                           
  1064                           ; 1 bytes @ 0x12
  1065  0032                     	ds	3
  1066  0035                     ___flmul@sign:
  1067                           
  1068                           ; 1 bytes @ 0x15
  1069  0035                     	ds	1
  1070  0036                     ___flmul@grs:
  1071                           
  1072                           ; 4 bytes @ 0x16
  1073  0036                     	ds	4
  1074  003A                     ___flmul@aexp:
  1075                           
  1076                           ; 1 bytes @ 0x1A
  1077  003A                     	ds	1
  1078  003B                     ___flmul@bexp:
  1079                           
  1080                           ; 1 bytes @ 0x1B
  1081  003B                     	ds	1
  1082  003C                     ___flmul@prod:
  1083                           
  1084                           ; 4 bytes @ 0x1C
  1085  003C                     	ds	4
  1086  0040                     ___flmul@temp:
  1087                           
  1088                           ; 2 bytes @ 0x20
  1089  0040                     	ds	2
  1090  0042                     ?_fround:
  1091  0042                     ?_scale:	
  1092                           ; 4 bytes @ 0x22
  1093                           
  1094                           
  1095                           ; 4 bytes @ 0x22
  1096  0042                     	ds	4
  1097  0046                     ??_fround:
  1098  0046                     ??_scale:	
  1099                           ; 1 bytes @ 0x26
  1100                           
  1101                           
  1102                           ; 1 bytes @ 0x26
  1103  0046                     	ds	7
  1104  004D                     _fround$1179:
  1105                           
  1106                           ; 4 bytes @ 0x2D
  1107  004D                     	ds	3
  1108  0050                     _scale$1180:
  1109                           
  1110                           ; 4 bytes @ 0x30
  1111  0050                     	ds	1
  1112  0051                     _fround$1178:
  1113                           
  1114                           ; 4 bytes @ 0x31
  1115  0051                     	ds	3
  1116  0054                     scale@scl:
  1117                           
  1118                           ; 1 bytes @ 0x34
  1119  0054                     	ds	1
  1120  0055                     ?___fltol:
  1121  0055                     fround@prec:	
  1122                           ; 4 bytes @ 0x35
  1123                           
  1124  0055                     ___fltol@f1:	
  1125                           ; 1 bytes @ 0x35
  1126                           
  1127                           
  1128                           ; 4 bytes @ 0x35
  1129  0055                     	ds	1
  1130  0056                     ?___fladd:
  1131  0056                     ___fladd@b:	
  1132                           ; 4 bytes @ 0x36
  1133                           
  1134                           
  1135                           ; 4 bytes @ 0x36
  1136  0056                     	ds	3
  1137  0059                     ??___fltol:
  1138                           
  1139                           ; 1 bytes @ 0x39
  1140  0059                     	ds	1
  1141  005A                     ___fladd@a:
  1142                           
  1143                           ; 4 bytes @ 0x3A
  1144  005A                     	ds	4
  1145  005E                     ??___fladd:
  1146  005E                     ___fltol@sign1:	
  1147                           ; 1 bytes @ 0x3E
  1148                           
  1149                           
  1150                           ; 1 bytes @ 0x3E
  1151  005E                     	ds	1
  1152  005F                     ___fltol@exp1:
  1153                           
  1154                           ; 1 bytes @ 0x3F
  1155  005F                     	ds	7
  1156  0066                     ___fladd@signs:
  1157                           
  1158                           ; 1 bytes @ 0x46
  1159  0066                     	ds	1
  1160  0067                     ___fladd@aexp:
  1161                           
  1162                           ; 1 bytes @ 0x47
  1163  0067                     	ds	1
  1164  0068                     ___fladd@bexp:
  1165                           
  1166                           ; 1 bytes @ 0x48
  1167  0068                     	ds	1
  1168  0069                     ___fladd@grs:
  1169                           
  1170                           ; 1 bytes @ 0x49
  1171  0069                     	ds	1
  1172  006A                     ??_sprintf:
  1173                           
  1174                           ; 1 bytes @ 0x4A
  1175  006A                     	ds	5
  1176                           
  1177                           	psect	maintext
  1178  119B                     __pmaintext:	
  1179 ;;
  1180 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1181 ;;
  1182 ;; *************** function _main *****************
  1183 ;; Defined at:
  1184 ;;		line 83 in file "maestro.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : B00/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0
  1200 ;;      Temps:          0       0       3       0       0
  1201 ;;      Totals:         0       0       3       0       0
  1202 ;;Total ram usage:        3 bytes
  1203 ;; Hardware stack levels required when called:    5
  1204 ;; This function calls:
  1205 ;;		_I2C_Master_Read
  1206 ;;		_I2C_Master_Start
  1207 ;;		_I2C_Master_Stop
  1208 ;;		_I2C_Master_Write
  1209 ;;		_cfg_clk
  1210 ;;		_cfg_usart
  1211 ;;		_conv
  1212 ;;		_send_crct
  1213 ;;		_setup
  1214 ;;		_sprintf
  1215 ;; This function is called by:
  1216 ;;		Startup code after reset
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function _main
  1222  119B                     _main:
  1223  119B                     l4008:	
  1224                           ;incstack = 0
  1225                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1226                           
  1227                           
  1228                           ;maestro.c: 84:     setup();
  1229  119B  160A  158A  231A  160A  118A  	fcall	_setup
  1230                           
  1231                           ;maestro.c: 85:     cfg_clk();
  1232  11A0  160A  158A  2290  160A  118A  	fcall	_cfg_clk
  1233                           
  1234                           ;maestro.c: 86:     cfg_usart();
  1235  11A5  160A  118A  200B  160A  118A  	fcall	_cfg_usart
  1236  11AA                     l152:	
  1237                           ;maestro.c: 87:     while(1){
  1238                           
  1239                           
  1240                           ;maestro.c: 94:         I2C_Master_Start();
  1241  11AA  160A  158A  22A0  160A  118A  	fcall	_I2C_Master_Start
  1242                           
  1243                           ;maestro.c: 95:         I2C_Master_Write(0x51);
  1244  11AF  3051               	movlw	81
  1245  11B0  00F2               	movwf	I2C_Master_Write@d
  1246  11B1  3000               	movlw	0
  1247  11B2  00F3               	movwf	I2C_Master_Write@d+1
  1248  11B3  160A  158A  22B2  160A  118A  	fcall	_I2C_Master_Write
  1249                           
  1250                           ;maestro.c: 96:         pd = I2C_Master_Read(0);
  1251  11B8  3000               	movlw	0
  1252  11B9  00F2               	movwf	I2C_Master_Read@a
  1253  11BA  00F3               	movwf	I2C_Master_Read@a+1
  1254  11BB  160A  158A  2387  160A  118A  	fcall	_I2C_Master_Read
  1255  11C0  0872               	movf	?_I2C_Master_Read,w
  1256  11C1  1683               	bsf	3,5	;RP0=1, select bank1
  1257  11C2  1303               	bcf	3,6	;RP1=0, select bank1
  1258  11C3  00D0               	movwf	??_main^(0+128)
  1259  11C4  0850               	movf	??_main^(0+128),w
  1260  11C5  00EC               	movwf	_pd^(0+128)
  1261                           
  1262                           ;maestro.c: 97:         I2C_Master_Stop();
  1263  11C6  160A  158A  22A9  160A  118A  	fcall	_I2C_Master_Stop
  1264  11CB                     l4010:
  1265                           
  1266                           ;maestro.c: 98:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1267  11CB  3002               	movlw	2
  1268  11CC  1683               	bsf	3,5	;RP0=1, select bank1
  1269  11CD  1303               	bcf	3,6	;RP1=0, select bank1
  1270  11CE  00D2               	movwf	(??_main^(0+128)+2)
  1271  11CF  3004               	movlw	4
  1272  11D0  00D1               	movwf	(??_main^(0+128)+1)
  1273  11D1  30B9               	movlw	185
  1274  11D2  00D0               	movwf	??_main^(0+128)
  1275  11D3                     u6577:
  1276  11D3  0BD0               	decfsz	??_main^(0+128),f
  1277  11D4  29D3               	goto	u6577
  1278  11D5  0BD1               	decfsz	(??_main^(0+128)+1),f
  1279  11D6  29D3               	goto	u6577
  1280  11D7  0BD2               	decfsz	(??_main^(0+128)+2),f
  1281  11D8  29D3               	goto	u6577
  1282  11D9  29DA               	nop2
  1283  11DA                     l4012:
  1284                           
  1285                           ;maestro.c: 100:         lock = (0x0F & pd);
  1286  11DA  1683               	bsf	3,5	;RP0=1, select bank1
  1287  11DB  1303               	bcf	3,6	;RP1=0, select bank1
  1288  11DC  086C               	movf	_pd^(0+128),w
  1289  11DD  390F               	andlw	15
  1290  11DE  00D0               	movwf	??_main^(0+128)
  1291  11DF  0850               	movf	??_main^(0+128),w
  1292  11E0  00E1               	movwf	_lock^(0+128)
  1293  11E1                     l4014:
  1294                           
  1295                           ;maestro.c: 101:         door = (0x0F & (pd>>4));
  1296  11E1  086C               	movf	_pd^(0+128),w
  1297  11E2  00D0               	movwf	??_main^(0+128)
  1298  11E3  3004               	movlw	4
  1299  11E4                     u6545:
  1300  11E4  1003               	clrc
  1301  11E5  0CD0               	rrf	??_main^(0+128),f
  1302  11E6  3EFF               	addlw	-1
  1303  11E7  1D03               	skipz
  1304  11E8  29E4               	goto	u6545
  1305  11E9  0850               	movf	??_main^(0+128),w
  1306  11EA  390F               	andlw	15
  1307  11EB  00D1               	movwf	(??_main+1)^(0+128)
  1308  11EC  0851               	movf	(??_main+1)^(0+128),w
  1309  11ED  00E0               	movwf	_door^(0+128)
  1310  11EE                     l4016:
  1311                           
  1312                           ;maestro.c: 103:         v0 = conv(lock);
  1313  11EE  0861               	movf	_lock^(0+128),w
  1314  11EF  120A  158A  2001  160A  118A  	fcall	_conv
  1315  11F4  1283               	bcf	3,5	;RP0=0, select bank0
  1316  11F5  1303               	bcf	3,6	;RP1=0, select bank0
  1317  11F6  0829               	movf	?_conv+3,w
  1318  11F7  1683               	bsf	3,5	;RP0=1, select bank1
  1319  11F8  1303               	bcf	3,6	;RP1=0, select bank1
  1320  11F9  00DE               	movwf	(_v0+3)^(0+128)
  1321  11FA  1283               	bcf	3,5	;RP0=0, select bank0
  1322  11FB  1303               	bcf	3,6	;RP1=0, select bank0
  1323  11FC  0828               	movf	?_conv+2,w
  1324  11FD  1683               	bsf	3,5	;RP0=1, select bank1
  1325  11FE  1303               	bcf	3,6	;RP1=0, select bank1
  1326  11FF  00DD               	movwf	(_v0+2)^(0+128)
  1327  1200  1283               	bcf	3,5	;RP0=0, select bank0
  1328  1201  1303               	bcf	3,6	;RP1=0, select bank0
  1329  1202  0827               	movf	?_conv+1,w
  1330  1203  1683               	bsf	3,5	;RP0=1, select bank1
  1331  1204  1303               	bcf	3,6	;RP1=0, select bank1
  1332  1205  00DC               	movwf	(_v0+1)^(0+128)
  1333  1206  1283               	bcf	3,5	;RP0=0, select bank0
  1334  1207  1303               	bcf	3,6	;RP1=0, select bank0
  1335  1208  0826               	movf	?_conv,w
  1336  1209  1683               	bsf	3,5	;RP0=1, select bank1
  1337  120A  1303               	bcf	3,6	;RP1=0, select bank1
  1338  120B  00DB               	movwf	_v0^(0+128)
  1339  120C                     l4018:
  1340                           
  1341                           ;maestro.c: 104:         v1 = conv(door);
  1342  120C  0860               	movf	_door^(0+128),w
  1343  120D  120A  158A  2001  160A  118A  	fcall	_conv
  1344  1212  1283               	bcf	3,5	;RP0=0, select bank0
  1345  1213  1303               	bcf	3,6	;RP1=0, select bank0
  1346  1214  0829               	movf	?_conv+3,w
  1347  1215  1683               	bsf	3,5	;RP0=1, select bank1
  1348  1216  1303               	bcf	3,6	;RP1=0, select bank1
  1349  1217  00DA               	movwf	(_v1+3)^(0+128)
  1350  1218  1283               	bcf	3,5	;RP0=0, select bank0
  1351  1219  1303               	bcf	3,6	;RP1=0, select bank0
  1352  121A  0828               	movf	?_conv+2,w
  1353  121B  1683               	bsf	3,5	;RP0=1, select bank1
  1354  121C  1303               	bcf	3,6	;RP1=0, select bank1
  1355  121D  00D9               	movwf	(_v1+2)^(0+128)
  1356  121E  1283               	bcf	3,5	;RP0=0, select bank0
  1357  121F  1303               	bcf	3,6	;RP1=0, select bank0
  1358  1220  0827               	movf	?_conv+1,w
  1359  1221  1683               	bsf	3,5	;RP0=1, select bank1
  1360  1222  1303               	bcf	3,6	;RP1=0, select bank1
  1361  1223  00D8               	movwf	(_v1+1)^(0+128)
  1362  1224  1283               	bcf	3,5	;RP0=0, select bank0
  1363  1225  1303               	bcf	3,6	;RP1=0, select bank0
  1364  1226  0826               	movf	?_conv,w
  1365  1227  1683               	bsf	3,5	;RP0=1, select bank1
  1366  1228  1303               	bcf	3,6	;RP1=0, select bank1
  1367  1229  00D7               	movwf	_v1^(0+128)
  1368  122A                     l4020:
  1369                           
  1370                           ;maestro.c: 105:         v2 = conv(light);
  1371  122A  085F               	movf	_light^(0+128),w
  1372  122B  120A  158A  2001  160A  118A  	fcall	_conv
  1373  1230  1283               	bcf	3,5	;RP0=0, select bank0
  1374  1231  1303               	bcf	3,6	;RP1=0, select bank0
  1375  1232  0829               	movf	?_conv+3,w
  1376  1233  1683               	bsf	3,5	;RP0=1, select bank1
  1377  1234  1303               	bcf	3,6	;RP1=0, select bank1
  1378  1235  00D6               	movwf	(_v2+3)^(0+128)
  1379  1236  1283               	bcf	3,5	;RP0=0, select bank0
  1380  1237  1303               	bcf	3,6	;RP1=0, select bank0
  1381  1238  0828               	movf	?_conv+2,w
  1382  1239  1683               	bsf	3,5	;RP0=1, select bank1
  1383  123A  1303               	bcf	3,6	;RP1=0, select bank1
  1384  123B  00D5               	movwf	(_v2+2)^(0+128)
  1385  123C  1283               	bcf	3,5	;RP0=0, select bank0
  1386  123D  1303               	bcf	3,6	;RP1=0, select bank0
  1387  123E  0827               	movf	?_conv+1,w
  1388  123F  1683               	bsf	3,5	;RP0=1, select bank1
  1389  1240  1303               	bcf	3,6	;RP1=0, select bank1
  1390  1241  00D4               	movwf	(_v2+1)^(0+128)
  1391  1242  1283               	bcf	3,5	;RP0=0, select bank0
  1392  1243  1303               	bcf	3,6	;RP1=0, select bank0
  1393  1244  0826               	movf	?_conv,w
  1394  1245  1683               	bsf	3,5	;RP0=1, select bank1
  1395  1246  1303               	bcf	3,6	;RP1=0, select bank1
  1396  1247  00D3               	movwf	_v2^(0+128)
  1397  1248                     l4022:
  1398                           
  1399                           ;maestro.c: 107:         sprintf(f1, "%0.0f,%0.0f,%0.0f,",v0,v1,v2);
  1400  1248  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1401  1249  00D0               	movwf	??_main^(0+128)
  1402  124A  0850               	movf	??_main^(0+128),w
  1403  124B  00A8               	movwf	sprintf@f^(0+128)
  1404  124C  085E               	movf	(_v0+3)^(0+128),w
  1405  124D  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1406  124E  085D               	movf	(_v0+2)^(0+128),w
  1407  124F  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1408  1250  085C               	movf	(_v0+1)^(0+128),w
  1409  1251  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1410  1252  085B               	movf	_v0^(0+128),w
  1411  1253  00A9               	movwf	(?_sprintf^(0+128)+1)
  1412  1254  085A               	movf	(_v1+3)^(0+128),w
  1413  1255  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1414  1256  0859               	movf	(_v1+2)^(0+128),w
  1415  1257  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1416  1258  0858               	movf	(_v1+1)^(0+128),w
  1417  1259  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1418  125A  0857               	movf	_v1^(0+128),w
  1419  125B  00AD               	movwf	(?_sprintf^(0+128)+5)
  1420  125C  0856               	movf	(_v2+3)^(0+128),w
  1421  125D  00B4               	movwf	((?_sprintf+3)^(0+128)+9)
  1422  125E  0855               	movf	(_v2+2)^(0+128),w
  1423  125F  00B3               	movwf	((?_sprintf+2)^(0+128)+9)
  1424  1260  0854               	movf	(_v2+1)^(0+128),w
  1425  1261  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1426  1262  0853               	movf	_v2^(0+128),w
  1427  1263  00B1               	movwf	(?_sprintf^(0+128)+9)
  1428  1264  30E2               	movlw	(low (_f1| 0))& (0+255)
  1429  1265  120A  158A  202A  160A  118A  	fcall	_sprintf
  1430  126A                     l4024:
  1431                           
  1432                           ;maestro.c: 109:         send_crct(f1);
  1433  126A  30E2               	movlw	(low (_f1| 0))& (0+255)
  1434  126B  160A  158A  22F9  160A  118A  	fcall	_send_crct
  1435  1270                     l4026:
  1436                           
  1437                           ;maestro.c: 110:         PORTDbits.RD0 = lock;
  1438  1270  1683               	bsf	3,5	;RP0=1, select bank1
  1439  1271  1303               	bcf	3,6	;RP1=0, select bank1
  1440  1272  0C61               	rrf	_lock^(0+128),w
  1441  1273  1283               	bcf	3,5	;RP0=0, select bank0
  1442  1274  1303               	bcf	3,6	;RP1=0, select bank0
  1443  1275  1C03               	skipc
  1444  1276  1008               	bcf	8,0	;volatile
  1445  1277  1803               	skipnc
  1446  1278  1408               	bsf	8,0	;volatile
  1447  1279                     l4028:
  1448                           
  1449                           ;maestro.c: 111:         PORTDbits.RD1 = door;
  1450  1279  1683               	bsf	3,5	;RP0=1, select bank1
  1451  127A  1303               	bcf	3,6	;RP1=0, select bank1
  1452  127B  0C60               	rrf	_door^(0+128),w
  1453  127C  1283               	bcf	3,5	;RP0=0, select bank0
  1454  127D  1303               	bcf	3,6	;RP1=0, select bank0
  1455  127E  1C03               	skipc
  1456  127F  1088               	bcf	8,1	;volatile
  1457  1280  1803               	skipnc
  1458  1281  1488               	bsf	8,1	;volatile
  1459  1282                     l4030:
  1460                           
  1461                           ;maestro.c: 113:         if(light == 1){
  1462  1282  1683               	bsf	3,5	;RP0=1, select bank1
  1463  1283  1303               	bcf	3,6	;RP1=0, select bank1
  1464  1284  035F               	decf	_light^(0+128),w
  1465  1285  1D03               	btfss	3,2
  1466  1286  2A88               	goto	u6551
  1467  1287  2A89               	goto	u6550
  1468  1288                     u6551:
  1469  1288  2A8C               	goto	l4034
  1470  1289                     u6550:
  1471  1289                     l4032:
  1472                           
  1473                           ;maestro.c: 114:             PORTAbits.RA0 = 1;
  1474  1289  1283               	bcf	3,5	;RP0=0, select bank0
  1475  128A  1303               	bcf	3,6	;RP1=0, select bank0
  1476  128B  1405               	bsf	5,0	;volatile
  1477  128C                     l4034:
  1478                           
  1479                           ;maestro.c: 116:         if(light == 0){
  1480  128C  1683               	bsf	3,5	;RP0=1, select bank1
  1481  128D  1303               	bcf	3,6	;RP1=0, select bank1
  1482  128E  085F               	movf	_light^(0+128),w
  1483  128F  1D03               	btfss	3,2
  1484  1290  2A92               	goto	u6561
  1485  1291  2A93               	goto	u6560
  1486  1292                     u6561:
  1487  1292  29AA               	goto	l152
  1488  1293                     u6560:
  1489  1293                     l4036:
  1490                           
  1491                           ;maestro.c: 117:             PORTAbits.RA0 = 0;
  1492  1293  1283               	bcf	3,5	;RP0=0, select bank0
  1493  1294  1303               	bcf	3,6	;RP1=0, select bank0
  1494  1295  1005               	bcf	5,0	;volatile
  1495  1296  29AA               	goto	l152
  1496  1297  120A  118A  280C   	ljmp	start
  1497  129A                     __end_of_main:
  1498                           
  1499                           	psect	text1
  1500  082A                     __ptext1:	
  1501 ;; *************** function _sprintf *****************
  1502 ;; Defined at:
  1503 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  sp              1    wreg     PTR unsigned char 
  1506 ;;		 -> f1(10), 
  1507 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1508 ;;		 -> STR_1(19), 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  sp              1   46[BANK1 ] PTR unsigned char 
  1511 ;;		 -> f1(10), 
  1512 ;;  fval            4   40[BANK1 ] PTR unsigned char 
  1513 ;;  tmpval          4   30[BANK1 ] struct .
  1514 ;;  val             4   26[BANK1 ] unsigned long 
  1515 ;;  prec            2   44[BANK1 ] int 
  1516 ;;  width           2   38[BANK1 ] int 
  1517 ;;  flag            2   36[BANK1 ] unsigned short 
  1518 ;;  eexp            2   34[BANK1 ] int 
  1519 ;;  cp              2    0        PTR const unsigned char 
  1520 ;;  len             2    0        unsigned int 
  1521 ;;  c               1   47[BANK1 ] unsigned char 
  1522 ;;  ap              1   25[BANK1 ] PTR void [1]
  1523 ;;		 -> ?_sprintf(2), 
  1524 ;;  d               1    0        unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  2    8[BANK1 ] int 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1534 ;;      Params:         0       0      13       0       0
  1535 ;;      Locals:         0       0      27       0       0
  1536 ;;      Temps:          0       5       0       0       0
  1537 ;;      Totals:         0       5      40       0       0
  1538 ;;Total ram usage:       45 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    4
  1541 ;; This function calls:
  1542 ;;		___awdiv
  1543 ;;		___fladd
  1544 ;;		___fleq
  1545 ;;		___flge
  1546 ;;		___flmul
  1547 ;;		___flneg
  1548 ;;		___flsub
  1549 ;;		___fltol
  1550 ;;		___lldiv
  1551 ;;		___llmod
  1552 ;;		___wmul
  1553 ;;		___xxtofl
  1554 ;;		__div_to_l_
  1555 ;;		__tdiv_to_l_
  1556 ;;		_fround
  1557 ;;		_isdigit
  1558 ;;		_scale
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function _sprintf
  1566  082A                     _sprintf:
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1570                           ;sprintf@sp stored from wreg
  1571  082A  1683               	bsf	3,5	;RP0=1, select bank1
  1572  082B  1303               	bcf	3,6	;RP1=0, select bank1
  1573  082C  00CE               	movwf	sprintf@sp^(0+128)
  1574  082D                     l3702:
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1577  082D  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1578  082E  1283               	bcf	3,5	;RP0=0, select bank0
  1579  082F  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0830  00EA               	movwf	??_sprintf
  1581  0831  086A               	movf	??_sprintf,w
  1582  0832  1683               	bsf	3,5	;RP0=1, select bank1
  1583  0833  1303               	bcf	3,6	;RP1=0, select bank1
  1584  0834  00B9               	movwf	sprintf@ap^(0+128)
  1585  0835                     L1:
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1588  0835  120A  118A  2D59   	goto	l3990
  1589  0838                     l3704:
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1592  0838  3025               	movlw	37
  1593  0839  064F               	xorwf	sprintf@c^(0+128),w
  1594  083A  1903               	btfsc	3,2
  1595  083B  283D               	goto	u6001
  1596  083C  283E               	goto	u6000
  1597  083D                     u6001:
  1598  083D  2852               	goto	l3710
  1599  083E                     u6000:
  1600  083E                     l3706:
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1603  083E  084F               	movf	sprintf@c^(0+128),w
  1604  083F  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0840  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0841  00EA               	movwf	??_sprintf
  1607  0842  1683               	bsf	3,5	;RP0=1, select bank1
  1608  0843  1303               	bcf	3,6	;RP1=0, select bank1
  1609  0844  084E               	movf	sprintf@sp^(0+128),w
  1610  0845  0084               	movwf	4
  1611  0846  1283               	bcf	3,5	;RP0=0, select bank0
  1612  0847  1303               	bcf	3,6	;RP1=0, select bank0
  1613  0848  086A               	movf	??_sprintf,w
  1614  0849  1383               	bcf	3,7	;select IRP bank0
  1615  084A  0080               	movwf	0
  1616  084B                     l3708:
  1617  084B  3001               	movlw	1
  1618  084C  00EA               	movwf	??_sprintf
  1619  084D  086A               	movf	??_sprintf,w
  1620  084E  1683               	bsf	3,5	;RP0=1, select bank1
  1621  084F  1303               	bcf	3,6	;RP1=0, select bank1
  1622  0850  07CE               	addwf	sprintf@sp^(0+128),f
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1625  0851  2835               	goto	L1
  1626  0852                     l3710:
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1629  0852  01C6               	clrf	sprintf@width^(0+128)
  1630  0853  01C7               	clrf	(sprintf@width+1)^(0+128)
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1633  0854  01C4               	clrf	sprintf@flag^(0+128)
  1634  0855  01C5               	clrf	(sprintf@flag+1)^(0+128)
  1635  0856  2862               	goto	l3716
  1636  0857                     l303:	
  1637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1638                           
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1641  0857  1683               	bsf	3,5	;RP0=1, select bank1
  1642  0858  1303               	bcf	3,6	;RP1=0, select bank1
  1643  0859  1544               	bsf	sprintf@flag^(0+128),2
  1644  085A                     l3712:
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  1647  085A  3001               	movlw	1
  1648  085B  1283               	bcf	3,5	;RP0=0, select bank0
  1649  085C  1303               	bcf	3,6	;RP1=0, select bank0
  1650  085D  00EA               	movwf	??_sprintf
  1651  085E  086A               	movf	??_sprintf,w
  1652  085F  1683               	bsf	3,5	;RP0=1, select bank1
  1653  0860  1303               	bcf	3,6	;RP1=0, select bank1
  1654  0861  07A8               	addwf	sprintf@f^(0+128),f
  1655  0862                     l3716:	
  1656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1657                           
  1658  0862  0828               	movf	sprintf@f^(0+128),w
  1659  0863  0084               	movwf	4
  1660  0864  160A  158A  2000  120A  158A  	fcall	stringdir
  1661  0869  1283               	bcf	3,5	;RP0=0, select bank0
  1662  086A  1303               	bcf	3,6	;RP1=0, select bank0
  1663  086B  00EA               	movwf	??_sprintf
  1664  086C  01EB               	clrf	??_sprintf+1
  1665                           
  1666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1667                           ; Switch size 1, requested type "simple"
  1668                           ; Number of cases is 1, Range of values is 0 to 0
  1669                           ; switch strategies available:
  1670                           ; Name         Instructions Cycles
  1671                           ; simple_byte            4     3 (average)
  1672                           ; direct_byte           11     8 (fixed)
  1673                           ; jumptable            260     6 (fixed)
  1674                           ;	Chosen strategy is simple_byte
  1675  086D  086B               	movf	??_sprintf+1,w
  1676  086E  3A00               	xorlw	0	; case 0
  1677  086F  1903               	skipnz
  1678  0870  2872               	goto	l4098
  1679  0871  2877               	goto	l3718
  1680  0872                     l4098:
  1681                           
  1682                           ; Switch size 1, requested type "simple"
  1683                           ; Number of cases is 1, Range of values is 48 to 48
  1684                           ; switch strategies available:
  1685                           ; Name         Instructions Cycles
  1686                           ; simple_byte            4     3 (average)
  1687                           ; direct_byte           14    11 (fixed)
  1688                           ; jumptable            263     9 (fixed)
  1689                           ;	Chosen strategy is simple_byte
  1690  0872  086A               	movf	??_sprintf,w
  1691  0873  3A30               	xorlw	48	; case 48
  1692  0874  1903               	skipnz
  1693  0875  2857               	goto	l303
  1694  0876  2877               	goto	l3718
  1695  0877                     l3718:
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1698  0877  1683               	bsf	3,5	;RP0=1, select bank1
  1699  0878  1303               	bcf	3,6	;RP1=0, select bank1
  1700  0879  0828               	movf	sprintf@f^(0+128),w
  1701  087A  0084               	movwf	4
  1702  087B  160A  158A  2000  120A  158A  	fcall	stringdir
  1703  0880  160A  158A  22C6  120A  158A  	fcall	_isdigit
  1704  0885  1C03               	btfss	3,0
  1705  0886  2888               	goto	u6011
  1706  0887  2889               	goto	u6010
  1707  0888                     u6011:
  1708  0888  28D5               	goto	l3730
  1709  0889                     u6010:
  1710  0889                     l3720:
  1711                           
  1712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1713  0889  1683               	bsf	3,5	;RP0=1, select bank1
  1714  088A  1303               	bcf	3,6	;RP1=0, select bank1
  1715  088B  01C6               	clrf	sprintf@width^(0+128)
  1716  088C  01C7               	clrf	(sprintf@width+1)^(0+128)
  1717  088D                     l3722:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1720  088D  300A               	movlw	10
  1721  088E  00F2               	movwf	___wmul@multiplier
  1722  088F  3000               	movlw	0
  1723  0890  00F3               	movwf	___wmul@multiplier+1
  1724  0891  1683               	bsf	3,5	;RP0=1, select bank1
  1725  0892  1303               	bcf	3,6	;RP1=0, select bank1
  1726  0893  0847               	movf	(sprintf@width+1)^(0+128),w
  1727  0894  00F5               	movwf	___wmul@multiplicand+1
  1728  0895  0846               	movf	sprintf@width^(0+128),w
  1729  0896  00F4               	movwf	___wmul@multiplicand
  1730  0897  160A  158A  233B  120A  158A  	fcall	___wmul
  1731  089C  0873               	movf	?___wmul+1,w
  1732  089D  1683               	bsf	3,5	;RP0=1, select bank1
  1733  089E  1303               	bcf	3,6	;RP1=0, select bank1
  1734  089F  00C7               	movwf	(sprintf@width+1)^(0+128)
  1735  08A0  0872               	movf	?___wmul,w
  1736  08A1  00C6               	movwf	sprintf@width^(0+128)
  1737  08A2                     l3724:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1740  08A2  0828               	movf	sprintf@f^(0+128),w
  1741  08A3  0084               	movwf	4
  1742  08A4  160A  158A  2000  120A  158A  	fcall	stringdir
  1743  08A9  3ED0               	addlw	208
  1744  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  1745  08AB  1303               	bcf	3,6	;RP1=0, select bank0
  1746  08AC  00EA               	movwf	??_sprintf
  1747  08AD  30FF               	movlw	255
  1748  08AE  1803               	skipnc
  1749  08AF  3000               	movlw	0
  1750  08B0  00EB               	movwf	??_sprintf+1
  1751  08B1  086A               	movf	??_sprintf,w
  1752  08B2  1683               	bsf	3,5	;RP0=1, select bank1
  1753  08B3  1303               	bcf	3,6	;RP1=0, select bank1
  1754  08B4  07C6               	addwf	sprintf@width^(0+128),f
  1755  08B5  1803               	skipnc
  1756  08B6  0AC7               	incf	(sprintf@width+1)^(0+128),f
  1757  08B7  1283               	bcf	3,5	;RP0=0, select bank0
  1758  08B8  1303               	bcf	3,6	;RP1=0, select bank0
  1759  08B9  086B               	movf	??_sprintf+1,w
  1760  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  1761  08BB  1303               	bcf	3,6	;RP1=0, select bank1
  1762  08BC  07C7               	addwf	(sprintf@width+1)^(0+128),f
  1763  08BD                     l3726:
  1764  08BD  3001               	movlw	1
  1765  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  1766  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  1767  08C0  00EA               	movwf	??_sprintf
  1768  08C1  086A               	movf	??_sprintf,w
  1769  08C2  1683               	bsf	3,5	;RP0=1, select bank1
  1770  08C3  1303               	bcf	3,6	;RP1=0, select bank1
  1771  08C4  07A8               	addwf	sprintf@f^(0+128),f
  1772  08C5                     l3728:
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1775  08C5  0828               	movf	sprintf@f^(0+128),w
  1776  08C6  0084               	movwf	4
  1777  08C7  160A  158A  2000  120A  158A  	fcall	stringdir
  1778  08CC  160A  158A  22C6  120A  158A  	fcall	_isdigit
  1779  08D1  1803               	btfsc	3,0
  1780  08D2  28D4               	goto	u6021
  1781  08D3  28D5               	goto	u6020
  1782  08D4                     u6021:
  1783  08D4  288D               	goto	l3722
  1784  08D5                     u6020:
  1785  08D5                     l3730:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1788  08D5  1683               	bsf	3,5	;RP0=1, select bank1
  1789  08D6  1303               	bcf	3,6	;RP1=0, select bank1
  1790  08D7  0828               	movf	sprintf@f^(0+128),w
  1791  08D8  0084               	movwf	4
  1792  08D9  160A  158A  2000  120A  158A  	fcall	stringdir
  1793  08DE  3A2E               	xorlw	46
  1794  08DF  1D03               	skipz
  1795  08E0  28E2               	goto	u6031
  1796  08E1  28E5               	goto	u6030
  1797  08E2                     u6031:
  1798  08E2  160A  118A  2D22   	goto	l3746
  1799  08E5                     u6030:
  1800  08E5                     l3732:
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1803  08E5  1745               	bsf	(sprintf@flag^(0+128)+1),6
  1804  08E6                     l3734:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1807  08E6  3001               	movlw	1
  1808  08E7  1283               	bcf	3,5	;RP0=0, select bank0
  1809  08E8  1303               	bcf	3,6	;RP1=0, select bank0
  1810  08E9  00EA               	movwf	??_sprintf
  1811  08EA  086A               	movf	??_sprintf,w
  1812  08EB  1683               	bsf	3,5	;RP0=1, select bank1
  1813  08EC  1303               	bcf	3,6	;RP1=0, select bank1
  1814  08ED  07A8               	addwf	sprintf@f^(0+128),f
  1815  08EE                     l3736:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1818  08EE  01CC               	clrf	sprintf@prec^(0+128)
  1819  08EF  01CD               	clrf	(sprintf@prec+1)^(0+128)
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1822  08F0  2929               	goto	l3744
  1823  08F1                     l3738:
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1826  08F1  300A               	movlw	10
  1827  08F2  00F2               	movwf	___wmul@multiplier
  1828  08F3  3000               	movlw	0
  1829  08F4  00F3               	movwf	___wmul@multiplier+1
  1830  08F5  1683               	bsf	3,5	;RP0=1, select bank1
  1831  08F6  1303               	bcf	3,6	;RP1=0, select bank1
  1832  08F7  084D               	movf	(sprintf@prec+1)^(0+128),w
  1833  08F8  00F5               	movwf	___wmul@multiplicand+1
  1834  08F9  084C               	movf	sprintf@prec^(0+128),w
  1835  08FA  00F4               	movwf	___wmul@multiplicand
  1836  08FB  160A  158A  233B  120A  158A  	fcall	___wmul
  1837  0900  0873               	movf	?___wmul+1,w
  1838  0901  1683               	bsf	3,5	;RP0=1, select bank1
  1839  0902  1303               	bcf	3,6	;RP1=0, select bank1
  1840  0903  00CD               	movwf	(sprintf@prec+1)^(0+128)
  1841  0904  0872               	movf	?___wmul,w
  1842  0905  00CC               	movwf	sprintf@prec^(0+128)
  1843  0906                     l3740:
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1846  0906  0828               	movf	sprintf@f^(0+128),w
  1847  0907  0084               	movwf	4
  1848  0908  160A  158A  2000  120A  158A  	fcall	stringdir
  1849  090D  3ED0               	addlw	208
  1850  090E  1283               	bcf	3,5	;RP0=0, select bank0
  1851  090F  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0910  00EA               	movwf	??_sprintf
  1853  0911  30FF               	movlw	255
  1854  0912  1803               	skipnc
  1855  0913  3000               	movlw	0
  1856  0914  00EB               	movwf	??_sprintf+1
  1857  0915  086A               	movf	??_sprintf,w
  1858  0916  1683               	bsf	3,5	;RP0=1, select bank1
  1859  0917  1303               	bcf	3,6	;RP1=0, select bank1
  1860  0918  07CC               	addwf	sprintf@prec^(0+128),f
  1861  0919  1803               	skipnc
  1862  091A  0ACD               	incf	(sprintf@prec+1)^(0+128),f
  1863  091B  1283               	bcf	3,5	;RP0=0, select bank0
  1864  091C  1303               	bcf	3,6	;RP1=0, select bank0
  1865  091D  086B               	movf	??_sprintf+1,w
  1866  091E  1683               	bsf	3,5	;RP0=1, select bank1
  1867  091F  1303               	bcf	3,6	;RP1=0, select bank1
  1868  0920  07CD               	addwf	(sprintf@prec+1)^(0+128),f
  1869  0921                     l3742:
  1870  0921  3001               	movlw	1
  1871  0922  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0923  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0924  00EA               	movwf	??_sprintf
  1874  0925  086A               	movf	??_sprintf,w
  1875  0926  1683               	bsf	3,5	;RP0=1, select bank1
  1876  0927  1303               	bcf	3,6	;RP1=0, select bank1
  1877  0928  07A8               	addwf	sprintf@f^(0+128),f
  1878  0929                     l3744:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1881  0929  0828               	movf	sprintf@f^(0+128),w
  1882  092A  0084               	movwf	4
  1883  092B  160A  158A  2000  120A  158A  	fcall	stringdir
  1884  0930  160A  158A  22C6  120A  158A  	fcall	_isdigit
  1885  0935  1803               	btfsc	3,0
  1886  0936  2938               	goto	u6041
  1887  0937  2939               	goto	u6040
  1888  0938                     u6041:
  1889  0938  28F1               	goto	l3738
  1890  0939                     u6040:
  1891  0939  160A  118A  2D2A   	goto	l3752
  1892                           
  1893                           	psect	text2
  1894  0C9D                     __ptext2:	
  1895 ;; *************** function _scale *****************
  1896 ;; Defined at:
  1897 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  scl             1    wreg     char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  scl             1   52[BANK0 ] char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  4   34[BANK0 ] char 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1911 ;;      Params:         0       4       0       0       0
  1912 ;;      Locals:         0       5       0       0       0
  1913 ;;      Temps:          0      10       0       0       0
  1914 ;;      Totals:         0      19       0       0       0
  1915 ;;Total ram usage:       19 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    3
  1918 ;; This function calls:
  1919 ;;		___awdiv
  1920 ;;		___awmod
  1921 ;;		___flmul
  1922 ;; This function is called by:
  1923 ;;		_sprintf
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function _scale
  1929  0C9D                     _scale:
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1933                           ;scale@scl stored from wreg
  1934  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  1936  0C9F  00D4               	movwf	scale@scl
  1937  0CA0                     l2842:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  1940  0CA0  1FD4               	btfss	scale@scl,7
  1941  0CA1  2CA3               	goto	u4271
  1942  0CA2  2CA4               	goto	u4270
  1943  0CA3                     u4271:
  1944  0CA3  2E53               	goto	l2864
  1945  0CA4                     u4270:
  1946  0CA4                     l2844:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  1949  0CA4  09D4               	comf	scale@scl,f
  1950  0CA5  0AD4               	incf	scale@scl,f
  1951  0CA6                     l2846:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  1954  0CA6  0854               	movf	scale@scl,w
  1955  0CA7  3A80               	xorlw	128
  1956  0CA8  3E12               	addlw	-238
  1957  0CA9  1C03               	skipc
  1958  0CAA  2CAC               	goto	u4281
  1959  0CAB  2CAD               	goto	u4280
  1960  0CAC                     u4281:
  1961  0CAC  2D97               	goto	l2854
  1962  0CAD                     u4280:
  1963  0CAD                     l2848:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  1966  0CAD  300A               	movlw	10
  1967  0CAE  00A0               	movwf	___awdiv@divisor
  1968  0CAF  3000               	movlw	0
  1969  0CB0  00A1               	movwf	___awdiv@divisor+1
  1970  0CB1  0854               	movf	scale@scl,w
  1971  0CB2  00F4               	movwf	___awmod@dividend
  1972  0CB3  01F5               	clrf	___awmod@dividend+1
  1973  0CB4  1BF4               	btfsc	___awmod@dividend,7
  1974  0CB5  03F5               	decf	___awmod@dividend+1,f
  1975  0CB6  3064               	movlw	100
  1976  0CB7  00F2               	movwf	___awmod@divisor
  1977  0CB8  3000               	movlw	0
  1978  0CB9  00F3               	movwf	___awmod@divisor+1
  1979  0CBA  160A  158A  2563  120A  158A  	fcall	___awmod
  1980  0CBF  0873               	movf	?___awmod+1,w
  1981  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0CC2  00A3               	movwf	___awdiv@dividend+1
  1984  0CC3  0872               	movf	?___awmod,w
  1985  0CC4  00A2               	movwf	___awdiv@dividend
  1986  0CC5  120A  118A  2787  120A  158A  	fcall	___awdiv
  1987  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  1989  0CCC  0820               	movf	?___awdiv,w
  1990  0CCD  00C6               	movwf	??_scale
  1991  0CCE  3001               	movlw	1
  1992  0CCF                     u4295:
  1993  0CCF  1003               	clrc
  1994  0CD0  0DC6               	rlf	??_scale,f
  1995  0CD1  3EFF               	addlw	-1
  1996  0CD2  1D03               	skipz
  1997  0CD3  2CCF               	goto	u4295
  1998  0CD4  1003               	clrc
  1999  0CD5  0D46               	rlf	??_scale,w
  2000  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2001  0CD7  0084               	movwf	4
  2002  0CD8  160A  158A  2000  120A  158A  	fcall	stringdir
  2003  0CDD  00C7               	movwf	??_scale+1
  2004  0CDE  160A  158A  2000  120A  158A  	fcall	stringdir
  2005  0CE3  00C8               	movwf	??_scale+2
  2006  0CE4  160A  158A  2000  120A  158A  	fcall	stringdir
  2007  0CE9  00C9               	movwf	??_scale+3
  2008  0CEA  160A  158A  2000  120A  158A  	fcall	stringdir
  2009  0CEF  00CA               	movwf	??_scale+4
  2010  0CF0  084A               	movf	??_scale+4,w
  2011  0CF1  00AB               	movwf	___flmul@b+3
  2012  0CF2  0849               	movf	??_scale+3,w
  2013  0CF3  00AA               	movwf	___flmul@b+2
  2014  0CF4  0848               	movf	??_scale+2,w
  2015  0CF5  00A9               	movwf	___flmul@b+1
  2016  0CF6  0847               	movf	??_scale+1,w
  2017  0CF7  00A8               	movwf	___flmul@b
  2018  0CF8  3064               	movlw	100
  2019  0CF9  00A0               	movwf	___awdiv@divisor
  2020  0CFA  3000               	movlw	0
  2021  0CFB  00A1               	movwf	___awdiv@divisor+1
  2022  0CFC  0854               	movf	scale@scl,w
  2023  0CFD  00A2               	movwf	___awdiv@dividend
  2024  0CFE  01A3               	clrf	___awdiv@dividend+1
  2025  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2026  0D00  03A3               	decf	___awdiv@dividend+1,f
  2027  0D01  120A  118A  2787  120A  158A  	fcall	___awdiv
  2028  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0D08  0820               	movf	?___awdiv,w
  2031  0D09  00CB               	movwf	??_scale+5
  2032  0D0A  3001               	movlw	1
  2033  0D0B                     u4305:
  2034  0D0B  1003               	clrc
  2035  0D0C  0DCB               	rlf	??_scale+5,f
  2036  0D0D  3EFF               	addlw	-1
  2037  0D0E  1D03               	skipz
  2038  0D0F  2D0B               	goto	u4305
  2039  0D10  1003               	clrc
  2040  0D11  0D4B               	rlf	??_scale+5,w
  2041  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2042  0D13  0084               	movwf	4
  2043  0D14  160A  158A  2000  120A  158A  	fcall	stringdir
  2044  0D19  00CC               	movwf	??_scale+6
  2045  0D1A  160A  158A  2000  120A  158A  	fcall	stringdir
  2046  0D1F  00CD               	movwf	??_scale+7
  2047  0D20  160A  158A  2000  120A  158A  	fcall	stringdir
  2048  0D25  00CE               	movwf	??_scale+8
  2049  0D26  160A  158A  2000  120A  158A  	fcall	stringdir
  2050  0D2B  00CF               	movwf	??_scale+9
  2051  0D2C  084F               	movf	??_scale+9,w
  2052  0D2D  00AF               	movwf	___flmul@a+3
  2053  0D2E  084E               	movf	??_scale+8,w
  2054  0D2F  00AE               	movwf	___flmul@a+2
  2055  0D30  084D               	movf	??_scale+7,w
  2056  0D31  00AD               	movwf	___flmul@a+1
  2057  0D32  084C               	movf	??_scale+6,w
  2058  0D33  00AC               	movwf	___flmul@a
  2059  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2060  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0D3B  082B               	movf	?___flmul+3,w
  2063  0D3C  00D3               	movwf	_scale$1180+3
  2064  0D3D  082A               	movf	?___flmul+2,w
  2065  0D3E  00D2               	movwf	_scale$1180+2
  2066  0D3F  0829               	movf	?___flmul+1,w
  2067  0D40  00D1               	movwf	_scale$1180+1
  2068  0D41  0828               	movf	?___flmul,w
  2069  0D42  00D0               	movwf	_scale$1180
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2072  0D43  300A               	movlw	10
  2073  0D44  00F2               	movwf	___awmod@divisor
  2074  0D45  3000               	movlw	0
  2075  0D46  00F3               	movwf	___awmod@divisor+1
  2076  0D47  0854               	movf	scale@scl,w
  2077  0D48  00F4               	movwf	___awmod@dividend
  2078  0D49  01F5               	clrf	___awmod@dividend+1
  2079  0D4A  1BF4               	btfsc	___awmod@dividend,7
  2080  0D4B  03F5               	decf	___awmod@dividend+1,f
  2081  0D4C  160A  158A  2563  120A  158A  	fcall	___awmod
  2082  0D51  0872               	movf	?___awmod,w
  2083  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0D54  00C6               	movwf	??_scale
  2086  0D55  3001               	movlw	1
  2087  0D56                     u4315:
  2088  0D56  1003               	clrc
  2089  0D57  0DC6               	rlf	??_scale,f
  2090  0D58  3EFF               	addlw	-1
  2091  0D59  1D03               	skipz
  2092  0D5A  2D56               	goto	u4315
  2093  0D5B  1003               	clrc
  2094  0D5C  0D46               	rlf	??_scale,w
  2095  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2096  0D5E  0084               	movwf	4
  2097  0D5F  160A  158A  2000  120A  158A  	fcall	stringdir
  2098  0D64  00C7               	movwf	??_scale+1
  2099  0D65  160A  158A  2000  120A  158A  	fcall	stringdir
  2100  0D6A  00C8               	movwf	??_scale+2
  2101  0D6B  160A  158A  2000  120A  158A  	fcall	stringdir
  2102  0D70  00C9               	movwf	??_scale+3
  2103  0D71  160A  158A  2000  120A  158A  	fcall	stringdir
  2104  0D76  00CA               	movwf	??_scale+4
  2105  0D77  084A               	movf	??_scale+4,w
  2106  0D78  00AB               	movwf	___flmul@b+3
  2107  0D79  0849               	movf	??_scale+3,w
  2108  0D7A  00AA               	movwf	___flmul@b+2
  2109  0D7B  0848               	movf	??_scale+2,w
  2110  0D7C  00A9               	movwf	___flmul@b+1
  2111  0D7D  0847               	movf	??_scale+1,w
  2112  0D7E  00A8               	movwf	___flmul@b
  2113  0D7F  0853               	movf	_scale$1180+3,w
  2114  0D80  00AF               	movwf	___flmul@a+3
  2115  0D81  0852               	movf	_scale$1180+2,w
  2116  0D82  00AE               	movwf	___flmul@a+2
  2117  0D83  0851               	movf	_scale$1180+1,w
  2118  0D84  00AD               	movwf	___flmul@a+1
  2119  0D85  0850               	movf	_scale$1180,w
  2120  0D86  00AC               	movwf	___flmul@a
  2121  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2122  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0D8E  082B               	movf	?___flmul+3,w
  2125  0D8F  00C5               	movwf	?_scale+3
  2126  0D90  082A               	movf	?___flmul+2,w
  2127  0D91  00C4               	movwf	?_scale+2
  2128  0D92  0829               	movf	?___flmul+1,w
  2129  0D93  00C3               	movwf	?_scale+1
  2130  0D94  0828               	movf	?___flmul,w
  2131  0D95  00C2               	movwf	?_scale
  2132  0D96  2FFF               	goto	l290
  2133  0D97                     l2854:
  2134  0D97  0854               	movf	scale@scl,w
  2135  0D98  3A80               	xorlw	128
  2136  0D99  3E75               	addlw	-139
  2137  0D9A  1C03               	skipc
  2138  0D9B  2D9D               	goto	u4321
  2139  0D9C  2D9E               	goto	u4320
  2140  0D9D                     u4321:
  2141  0D9D  2E26               	goto	l2860
  2142  0D9E                     u4320:
  2143  0D9E                     l2856:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2146  0D9E  300A               	movlw	10
  2147  0D9F  00F2               	movwf	___awmod@divisor
  2148  0DA0  3000               	movlw	0
  2149  0DA1  00F3               	movwf	___awmod@divisor+1
  2150  0DA2  0854               	movf	scale@scl,w
  2151  0DA3  00F4               	movwf	___awmod@dividend
  2152  0DA4  01F5               	clrf	___awmod@dividend+1
  2153  0DA5  1BF4               	btfsc	___awmod@dividend,7
  2154  0DA6  03F5               	decf	___awmod@dividend+1,f
  2155  0DA7  160A  158A  2563  120A  158A  	fcall	___awmod
  2156  0DAC  0872               	movf	?___awmod,w
  2157  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2158  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2159  0DAF  00C6               	movwf	??_scale
  2160  0DB0  3001               	movlw	1
  2161  0DB1                     u4335:
  2162  0DB1  1003               	clrc
  2163  0DB2  0DC6               	rlf	??_scale,f
  2164  0DB3  3EFF               	addlw	-1
  2165  0DB4  1D03               	skipz
  2166  0DB5  2DB1               	goto	u4335
  2167  0DB6  1003               	clrc
  2168  0DB7  0D46               	rlf	??_scale,w
  2169  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2170  0DB9  0084               	movwf	4
  2171  0DBA  160A  158A  2000  120A  158A  	fcall	stringdir
  2172  0DBF  00C7               	movwf	??_scale+1
  2173  0DC0  160A  158A  2000  120A  158A  	fcall	stringdir
  2174  0DC5  00C8               	movwf	??_scale+2
  2175  0DC6  160A  158A  2000  120A  158A  	fcall	stringdir
  2176  0DCB  00C9               	movwf	??_scale+3
  2177  0DCC  160A  158A  2000  120A  158A  	fcall	stringdir
  2178  0DD1  00CA               	movwf	??_scale+4
  2179  0DD2  084A               	movf	??_scale+4,w
  2180  0DD3  00AB               	movwf	___flmul@b+3
  2181  0DD4  0849               	movf	??_scale+3,w
  2182  0DD5  00AA               	movwf	___flmul@b+2
  2183  0DD6  0848               	movf	??_scale+2,w
  2184  0DD7  00A9               	movwf	___flmul@b+1
  2185  0DD8  0847               	movf	??_scale+1,w
  2186  0DD9  00A8               	movwf	___flmul@b
  2187  0DDA  300A               	movlw	10
  2188  0DDB  00A0               	movwf	___awdiv@divisor
  2189  0DDC  3000               	movlw	0
  2190  0DDD  00A1               	movwf	___awdiv@divisor+1
  2191  0DDE  0854               	movf	scale@scl,w
  2192  0DDF  00A2               	movwf	___awdiv@dividend
  2193  0DE0  01A3               	clrf	___awdiv@dividend+1
  2194  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2195  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2196  0DE3  120A  118A  2787  120A  158A  	fcall	___awdiv
  2197  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0DEA  0820               	movf	?___awdiv,w
  2200  0DEB  00CB               	movwf	??_scale+5
  2201  0DEC  3001               	movlw	1
  2202  0DED                     u4345:
  2203  0DED  1003               	clrc
  2204  0DEE  0DCB               	rlf	??_scale+5,f
  2205  0DEF  3EFF               	addlw	-1
  2206  0DF0  1D03               	skipz
  2207  0DF1  2DED               	goto	u4345
  2208  0DF2  1003               	clrc
  2209  0DF3  0D4B               	rlf	??_scale+5,w
  2210  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2211  0DF5  0084               	movwf	4
  2212  0DF6  160A  158A  2000  120A  158A  	fcall	stringdir
  2213  0DFB  00CC               	movwf	??_scale+6
  2214  0DFC  160A  158A  2000  120A  158A  	fcall	stringdir
  2215  0E01  00CD               	movwf	??_scale+7
  2216  0E02  160A  158A  2000  120A  158A  	fcall	stringdir
  2217  0E07  00CE               	movwf	??_scale+8
  2218  0E08  160A  158A  2000  120A  158A  	fcall	stringdir
  2219  0E0D  00CF               	movwf	??_scale+9
  2220  0E0E  084F               	movf	??_scale+9,w
  2221  0E0F  00AF               	movwf	___flmul@a+3
  2222  0E10  084E               	movf	??_scale+8,w
  2223  0E11  00AE               	movwf	___flmul@a+2
  2224  0E12  084D               	movf	??_scale+7,w
  2225  0E13  00AD               	movwf	___flmul@a+1
  2226  0E14  084C               	movf	??_scale+6,w
  2227  0E15  00AC               	movwf	___flmul@a
  2228  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2229  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0E1D  082B               	movf	?___flmul+3,w
  2232  0E1E  00C5               	movwf	?_scale+3
  2233  0E1F  082A               	movf	?___flmul+2,w
  2234  0E20  00C4               	movwf	?_scale+2
  2235  0E21  0829               	movf	?___flmul+1,w
  2236  0E22  00C3               	movwf	?_scale+1
  2237  0E23  0828               	movf	?___flmul,w
  2238  0E24  00C2               	movwf	?_scale
  2239  0E25  2FFF               	goto	l290
  2240  0E26                     l2860:
  2241                           
  2242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2243  0E26  0854               	movf	scale@scl,w
  2244  0E27  00C6               	movwf	??_scale
  2245  0E28  3001               	movlw	1
  2246  0E29                     u4355:
  2247  0E29  1003               	clrc
  2248  0E2A  0DC6               	rlf	??_scale,f
  2249  0E2B  3EFF               	addlw	-1
  2250  0E2C  1D03               	skipz
  2251  0E2D  2E29               	goto	u4355
  2252  0E2E  1003               	clrc
  2253  0E2F  0D46               	rlf	??_scale,w
  2254  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2255  0E31  0084               	movwf	4
  2256  0E32  160A  158A  2000  120A  158A  	fcall	stringdir
  2257  0E37  00C7               	movwf	??_scale+1
  2258  0E38  160A  158A  2000  120A  158A  	fcall	stringdir
  2259  0E3D  00C8               	movwf	??_scale+2
  2260  0E3E  160A  158A  2000  120A  158A  	fcall	stringdir
  2261  0E43  00C9               	movwf	??_scale+3
  2262  0E44  160A  158A  2000  120A  158A  	fcall	stringdir
  2263  0E49  00CA               	movwf	??_scale+4
  2264  0E4A  084A               	movf	??_scale+4,w
  2265  0E4B  00C5               	movwf	?_scale+3
  2266  0E4C  0849               	movf	??_scale+3,w
  2267  0E4D  00C4               	movwf	?_scale+2
  2268  0E4E  0848               	movf	??_scale+2,w
  2269  0E4F  00C3               	movwf	?_scale+1
  2270  0E50  0847               	movf	??_scale+1,w
  2271  0E51  00C2               	movwf	?_scale
  2272  0E52  2FFF               	goto	l290
  2273  0E53                     l2864:
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2276  0E53  0854               	movf	scale@scl,w
  2277  0E54  3A80               	xorlw	128
  2278  0E55  3E12               	addlw	-238
  2279  0E56  1C03               	skipc
  2280  0E57  2E59               	goto	u4361
  2281  0E58  2E5A               	goto	u4360
  2282  0E59                     u4361:
  2283  0E59  2F44               	goto	l2872
  2284  0E5A                     u4360:
  2285  0E5A                     l2866:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2288  0E5A  300A               	movlw	10
  2289  0E5B  00A0               	movwf	___awdiv@divisor
  2290  0E5C  3000               	movlw	0
  2291  0E5D  00A1               	movwf	___awdiv@divisor+1
  2292  0E5E  0854               	movf	scale@scl,w
  2293  0E5F  00F4               	movwf	___awmod@dividend
  2294  0E60  01F5               	clrf	___awmod@dividend+1
  2295  0E61  1BF4               	btfsc	___awmod@dividend,7
  2296  0E62  03F5               	decf	___awmod@dividend+1,f
  2297  0E63  3064               	movlw	100
  2298  0E64  00F2               	movwf	___awmod@divisor
  2299  0E65  3000               	movlw	0
  2300  0E66  00F3               	movwf	___awmod@divisor+1
  2301  0E67  160A  158A  2563  120A  158A  	fcall	___awmod
  2302  0E6C  0873               	movf	?___awmod+1,w
  2303  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0E6F  00A3               	movwf	___awdiv@dividend+1
  2306  0E70  0872               	movf	?___awmod,w
  2307  0E71  00A2               	movwf	___awdiv@dividend
  2308  0E72  120A  118A  2787  120A  158A  	fcall	___awdiv
  2309  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0E79  0820               	movf	?___awdiv,w
  2312  0E7A  00C6               	movwf	??_scale
  2313  0E7B  3001               	movlw	1
  2314  0E7C                     u4375:
  2315  0E7C  1003               	clrc
  2316  0E7D  0DC6               	rlf	??_scale,f
  2317  0E7E  3EFF               	addlw	-1
  2318  0E7F  1D03               	skipz
  2319  0E80  2E7C               	goto	u4375
  2320  0E81  1003               	clrc
  2321  0E82  0D46               	rlf	??_scale,w
  2322  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2323  0E84  0084               	movwf	4
  2324  0E85  160A  158A  2000  120A  158A  	fcall	stringdir
  2325  0E8A  00C7               	movwf	??_scale+1
  2326  0E8B  160A  158A  2000  120A  158A  	fcall	stringdir
  2327  0E90  00C8               	movwf	??_scale+2
  2328  0E91  160A  158A  2000  120A  158A  	fcall	stringdir
  2329  0E96  00C9               	movwf	??_scale+3
  2330  0E97  160A  158A  2000  120A  158A  	fcall	stringdir
  2331  0E9C  00CA               	movwf	??_scale+4
  2332  0E9D  084A               	movf	??_scale+4,w
  2333  0E9E  00AB               	movwf	___flmul@b+3
  2334  0E9F  0849               	movf	??_scale+3,w
  2335  0EA0  00AA               	movwf	___flmul@b+2
  2336  0EA1  0848               	movf	??_scale+2,w
  2337  0EA2  00A9               	movwf	___flmul@b+1
  2338  0EA3  0847               	movf	??_scale+1,w
  2339  0EA4  00A8               	movwf	___flmul@b
  2340  0EA5  3064               	movlw	100
  2341  0EA6  00A0               	movwf	___awdiv@divisor
  2342  0EA7  3000               	movlw	0
  2343  0EA8  00A1               	movwf	___awdiv@divisor+1
  2344  0EA9  0854               	movf	scale@scl,w
  2345  0EAA  00A2               	movwf	___awdiv@dividend
  2346  0EAB  01A3               	clrf	___awdiv@dividend+1
  2347  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2348  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2349  0EAE  120A  118A  2787  120A  158A  	fcall	___awdiv
  2350  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0EB5  0820               	movf	?___awdiv,w
  2353  0EB6  00CB               	movwf	??_scale+5
  2354  0EB7  3001               	movlw	1
  2355  0EB8                     u4385:
  2356  0EB8  1003               	clrc
  2357  0EB9  0DCB               	rlf	??_scale+5,f
  2358  0EBA  3EFF               	addlw	-1
  2359  0EBB  1D03               	skipz
  2360  0EBC  2EB8               	goto	u4385
  2361  0EBD  1003               	clrc
  2362  0EBE  0D4B               	rlf	??_scale+5,w
  2363  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2364  0EC0  0084               	movwf	4
  2365  0EC1  160A  158A  2000  120A  158A  	fcall	stringdir
  2366  0EC6  00CC               	movwf	??_scale+6
  2367  0EC7  160A  158A  2000  120A  158A  	fcall	stringdir
  2368  0ECC  00CD               	movwf	??_scale+7
  2369  0ECD  160A  158A  2000  120A  158A  	fcall	stringdir
  2370  0ED2  00CE               	movwf	??_scale+8
  2371  0ED3  160A  158A  2000  120A  158A  	fcall	stringdir
  2372  0ED8  00CF               	movwf	??_scale+9
  2373  0ED9  084F               	movf	??_scale+9,w
  2374  0EDA  00AF               	movwf	___flmul@a+3
  2375  0EDB  084E               	movf	??_scale+8,w
  2376  0EDC  00AE               	movwf	___flmul@a+2
  2377  0EDD  084D               	movf	??_scale+7,w
  2378  0EDE  00AD               	movwf	___flmul@a+1
  2379  0EDF  084C               	movf	??_scale+6,w
  2380  0EE0  00AC               	movwf	___flmul@a
  2381  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2382  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0EE8  082B               	movf	?___flmul+3,w
  2385  0EE9  00D3               	movwf	_scale$1180+3
  2386  0EEA  082A               	movf	?___flmul+2,w
  2387  0EEB  00D2               	movwf	_scale$1180+2
  2388  0EEC  0829               	movf	?___flmul+1,w
  2389  0EED  00D1               	movwf	_scale$1180+1
  2390  0EEE  0828               	movf	?___flmul,w
  2391  0EEF  00D0               	movwf	_scale$1180
  2392                           
  2393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2394  0EF0  300A               	movlw	10
  2395  0EF1  00F2               	movwf	___awmod@divisor
  2396  0EF2  3000               	movlw	0
  2397  0EF3  00F3               	movwf	___awmod@divisor+1
  2398  0EF4  0854               	movf	scale@scl,w
  2399  0EF5  00F4               	movwf	___awmod@dividend
  2400  0EF6  01F5               	clrf	___awmod@dividend+1
  2401  0EF7  1BF4               	btfsc	___awmod@dividend,7
  2402  0EF8  03F5               	decf	___awmod@dividend+1,f
  2403  0EF9  160A  158A  2563  120A  158A  	fcall	___awmod
  2404  0EFE  0872               	movf	?___awmod,w
  2405  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2407  0F01  00C6               	movwf	??_scale
  2408  0F02  3001               	movlw	1
  2409  0F03                     u4395:
  2410  0F03  1003               	clrc
  2411  0F04  0DC6               	rlf	??_scale,f
  2412  0F05  3EFF               	addlw	-1
  2413  0F06  1D03               	skipz
  2414  0F07  2F03               	goto	u4395
  2415  0F08  1003               	clrc
  2416  0F09  0D46               	rlf	??_scale,w
  2417  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2418  0F0B  0084               	movwf	4
  2419  0F0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2420  0F11  00C7               	movwf	??_scale+1
  2421  0F12  160A  158A  2000  120A  158A  	fcall	stringdir
  2422  0F17  00C8               	movwf	??_scale+2
  2423  0F18  160A  158A  2000  120A  158A  	fcall	stringdir
  2424  0F1D  00C9               	movwf	??_scale+3
  2425  0F1E  160A  158A  2000  120A  158A  	fcall	stringdir
  2426  0F23  00CA               	movwf	??_scale+4
  2427  0F24  084A               	movf	??_scale+4,w
  2428  0F25  00AB               	movwf	___flmul@b+3
  2429  0F26  0849               	movf	??_scale+3,w
  2430  0F27  00AA               	movwf	___flmul@b+2
  2431  0F28  0848               	movf	??_scale+2,w
  2432  0F29  00A9               	movwf	___flmul@b+1
  2433  0F2A  0847               	movf	??_scale+1,w
  2434  0F2B  00A8               	movwf	___flmul@b
  2435  0F2C  0853               	movf	_scale$1180+3,w
  2436  0F2D  00AF               	movwf	___flmul@a+3
  2437  0F2E  0852               	movf	_scale$1180+2,w
  2438  0F2F  00AE               	movwf	___flmul@a+2
  2439  0F30  0851               	movf	_scale$1180+1,w
  2440  0F31  00AD               	movwf	___flmul@a+1
  2441  0F32  0850               	movf	_scale$1180,w
  2442  0F33  00AC               	movwf	___flmul@a
  2443  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2444  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0F3B  082B               	movf	?___flmul+3,w
  2447  0F3C  00C5               	movwf	?_scale+3
  2448  0F3D  082A               	movf	?___flmul+2,w
  2449  0F3E  00C4               	movwf	?_scale+2
  2450  0F3F  0829               	movf	?___flmul+1,w
  2451  0F40  00C3               	movwf	?_scale+1
  2452  0F41  0828               	movf	?___flmul,w
  2453  0F42  00C2               	movwf	?_scale
  2454  0F43  2FFF               	goto	l290
  2455  0F44                     l2872:
  2456  0F44  0854               	movf	scale@scl,w
  2457  0F45  3A80               	xorlw	128
  2458  0F46  3E75               	addlw	-139
  2459  0F47  1C03               	skipc
  2460  0F48  2F4A               	goto	u4401
  2461  0F49  2F4B               	goto	u4400
  2462  0F4A                     u4401:
  2463  0F4A  2FD3               	goto	l2878
  2464  0F4B                     u4400:
  2465  0F4B                     l2874:
  2466                           
  2467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2468  0F4B  300A               	movlw	10
  2469  0F4C  00F2               	movwf	___awmod@divisor
  2470  0F4D  3000               	movlw	0
  2471  0F4E  00F3               	movwf	___awmod@divisor+1
  2472  0F4F  0854               	movf	scale@scl,w
  2473  0F50  00F4               	movwf	___awmod@dividend
  2474  0F51  01F5               	clrf	___awmod@dividend+1
  2475  0F52  1BF4               	btfsc	___awmod@dividend,7
  2476  0F53  03F5               	decf	___awmod@dividend+1,f
  2477  0F54  160A  158A  2563  120A  158A  	fcall	___awmod
  2478  0F59  0872               	movf	?___awmod,w
  2479  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2480  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2481  0F5C  00C6               	movwf	??_scale
  2482  0F5D  3001               	movlw	1
  2483  0F5E                     u4415:
  2484  0F5E  1003               	clrc
  2485  0F5F  0DC6               	rlf	??_scale,f
  2486  0F60  3EFF               	addlw	-1
  2487  0F61  1D03               	skipz
  2488  0F62  2F5E               	goto	u4415
  2489  0F63  1003               	clrc
  2490  0F64  0D46               	rlf	??_scale,w
  2491  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2492  0F66  0084               	movwf	4
  2493  0F67  160A  158A  2000  120A  158A  	fcall	stringdir
  2494  0F6C  00C7               	movwf	??_scale+1
  2495  0F6D  160A  158A  2000  120A  158A  	fcall	stringdir
  2496  0F72  00C8               	movwf	??_scale+2
  2497  0F73  160A  158A  2000  120A  158A  	fcall	stringdir
  2498  0F78  00C9               	movwf	??_scale+3
  2499  0F79  160A  158A  2000  120A  158A  	fcall	stringdir
  2500  0F7E  00CA               	movwf	??_scale+4
  2501  0F7F  084A               	movf	??_scale+4,w
  2502  0F80  00AB               	movwf	___flmul@b+3
  2503  0F81  0849               	movf	??_scale+3,w
  2504  0F82  00AA               	movwf	___flmul@b+2
  2505  0F83  0848               	movf	??_scale+2,w
  2506  0F84  00A9               	movwf	___flmul@b+1
  2507  0F85  0847               	movf	??_scale+1,w
  2508  0F86  00A8               	movwf	___flmul@b
  2509  0F87  300A               	movlw	10
  2510  0F88  00A0               	movwf	___awdiv@divisor
  2511  0F89  3000               	movlw	0
  2512  0F8A  00A1               	movwf	___awdiv@divisor+1
  2513  0F8B  0854               	movf	scale@scl,w
  2514  0F8C  00A2               	movwf	___awdiv@dividend
  2515  0F8D  01A3               	clrf	___awdiv@dividend+1
  2516  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  2517  0F8F  03A3               	decf	___awdiv@dividend+1,f
  2518  0F90  120A  118A  2787  120A  158A  	fcall	___awdiv
  2519  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0F97  0820               	movf	?___awdiv,w
  2522  0F98  00CB               	movwf	??_scale+5
  2523  0F99  3001               	movlw	1
  2524  0F9A                     u4425:
  2525  0F9A  1003               	clrc
  2526  0F9B  0DCB               	rlf	??_scale+5,f
  2527  0F9C  3EFF               	addlw	-1
  2528  0F9D  1D03               	skipz
  2529  0F9E  2F9A               	goto	u4425
  2530  0F9F  1003               	clrc
  2531  0FA0  0D4B               	rlf	??_scale+5,w
  2532  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2533  0FA2  0084               	movwf	4
  2534  0FA3  160A  158A  2000  120A  158A  	fcall	stringdir
  2535  0FA8  00CC               	movwf	??_scale+6
  2536  0FA9  160A  158A  2000  120A  158A  	fcall	stringdir
  2537  0FAE  00CD               	movwf	??_scale+7
  2538  0FAF  160A  158A  2000  120A  158A  	fcall	stringdir
  2539  0FB4  00CE               	movwf	??_scale+8
  2540  0FB5  160A  158A  2000  120A  158A  	fcall	stringdir
  2541  0FBA  00CF               	movwf	??_scale+9
  2542  0FBB  084F               	movf	??_scale+9,w
  2543  0FBC  00AF               	movwf	___flmul@a+3
  2544  0FBD  084E               	movf	??_scale+8,w
  2545  0FBE  00AE               	movwf	___flmul@a+2
  2546  0FBF  084D               	movf	??_scale+7,w
  2547  0FC0  00AD               	movwf	___flmul@a+1
  2548  0FC1  084C               	movf	??_scale+6,w
  2549  0FC2  00AC               	movwf	___flmul@a
  2550  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  2551  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0FCA  082B               	movf	?___flmul+3,w
  2554  0FCB  00C5               	movwf	?_scale+3
  2555  0FCC  082A               	movf	?___flmul+2,w
  2556  0FCD  00C4               	movwf	?_scale+2
  2557  0FCE  0829               	movf	?___flmul+1,w
  2558  0FCF  00C3               	movwf	?_scale+1
  2559  0FD0  0828               	movf	?___flmul,w
  2560  0FD1  00C2               	movwf	?_scale
  2561  0FD2  2FFF               	goto	l290
  2562  0FD3                     l2878:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  2565  0FD3  0854               	movf	scale@scl,w
  2566  0FD4  00C6               	movwf	??_scale
  2567  0FD5  3001               	movlw	1
  2568  0FD6                     u4435:
  2569  0FD6  1003               	clrc
  2570  0FD7  0DC6               	rlf	??_scale,f
  2571  0FD8  3EFF               	addlw	-1
  2572  0FD9  1D03               	skipz
  2573  0FDA  2FD6               	goto	u4435
  2574  0FDB  1003               	clrc
  2575  0FDC  0D46               	rlf	??_scale,w
  2576  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2577  0FDE  0084               	movwf	4
  2578  0FDF  160A  158A  2000  120A  158A  	fcall	stringdir
  2579  0FE4  00C7               	movwf	??_scale+1
  2580  0FE5  160A  158A  2000  120A  158A  	fcall	stringdir
  2581  0FEA  00C8               	movwf	??_scale+2
  2582  0FEB  160A  158A  2000  120A  158A  	fcall	stringdir
  2583  0FF0  00C9               	movwf	??_scale+3
  2584  0FF1  160A  158A  2000  120A  158A  	fcall	stringdir
  2585  0FF6  00CA               	movwf	??_scale+4
  2586  0FF7  084A               	movf	??_scale+4,w
  2587  0FF8  00C5               	movwf	?_scale+3
  2588  0FF9  0849               	movf	??_scale+3,w
  2589  0FFA  00C4               	movwf	?_scale+2
  2590  0FFB  0848               	movf	??_scale+2,w
  2591  0FFC  00C3               	movwf	?_scale+1
  2592  0FFD  0847               	movf	??_scale+1,w
  2593  0FFE  00C2               	movwf	?_scale
  2594  0FFF                     l290:
  2595  0FFF  0008               	return
  2596  1000                     __end_of_scale:
  2597                           
  2598                           	psect	text3
  2599  1D63                     __ptext3:	
  2600 ;; *************** function ___awmod *****************
  2601 ;; Defined at:
  2602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  divisor         2    2[COMMON] int 
  2605 ;;  dividend        2    4[COMMON] int 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  sign            1    8[COMMON] unsigned char 
  2608 ;;  counter         1    7[COMMON] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  2    2[COMMON] int 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         4       0       0       0       0
  2619 ;;      Locals:         2       0       0       0       0
  2620 ;;      Temps:          1       0       0       0       0
  2621 ;;      Totals:         7       0       0       0       0
  2622 ;;Total ram usage:        7 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_scale
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function ___awmod
  2634  1D63                     ___awmod:
  2635  1D63                     l2384:	
  2636                           ;incstack = 0
  2637                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2638                           
  2639  1D63  01F8               	clrf	___awmod@sign
  2640  1D64                     l2386:
  2641  1D64  1FF5               	btfss	___awmod@dividend+1,7
  2642  1D65  2D67               	goto	u3101
  2643  1D66  2D68               	goto	u3100
  2644  1D67                     u3101:
  2645  1D67  2D6F               	goto	l2392
  2646  1D68                     u3100:
  2647  1D68                     l2388:
  2648  1D68  09F4               	comf	___awmod@dividend,f
  2649  1D69  09F5               	comf	___awmod@dividend+1,f
  2650  1D6A  0AF4               	incf	___awmod@dividend,f
  2651  1D6B  1903               	skipnz
  2652  1D6C  0AF5               	incf	___awmod@dividend+1,f
  2653  1D6D                     l2390:
  2654  1D6D  01F8               	clrf	___awmod@sign
  2655  1D6E  0AF8               	incf	___awmod@sign,f
  2656  1D6F                     l2392:
  2657  1D6F  1FF3               	btfss	___awmod@divisor+1,7
  2658  1D70  2D72               	goto	u3111
  2659  1D71  2D73               	goto	u3110
  2660  1D72                     u3111:
  2661  1D72  2D78               	goto	l2396
  2662  1D73                     u3110:
  2663  1D73                     l2394:
  2664  1D73  09F2               	comf	___awmod@divisor,f
  2665  1D74  09F3               	comf	___awmod@divisor+1,f
  2666  1D75  0AF2               	incf	___awmod@divisor,f
  2667  1D76  1903               	skipnz
  2668  1D77  0AF3               	incf	___awmod@divisor+1,f
  2669  1D78                     l2396:
  2670  1D78  0872               	movf	___awmod@divisor,w
  2671  1D79  0473               	iorwf	___awmod@divisor+1,w
  2672  1D7A  1903               	btfsc	3,2
  2673  1D7B  2D7D               	goto	u3121
  2674  1D7C  2D7E               	goto	u3120
  2675  1D7D                     u3121:
  2676  1D7D  2DAD               	goto	l2414
  2677  1D7E                     u3120:
  2678  1D7E                     l2398:
  2679  1D7E  01F7               	clrf	___awmod@counter
  2680  1D7F  0AF7               	incf	___awmod@counter,f
  2681  1D80  2D8C               	goto	l2404
  2682  1D81                     l2400:
  2683  1D81  3001               	movlw	1
  2684  1D82                     u3135:
  2685  1D82  1003               	clrc
  2686  1D83  0DF2               	rlf	___awmod@divisor,f
  2687  1D84  0DF3               	rlf	___awmod@divisor+1,f
  2688  1D85  3EFF               	addlw	-1
  2689  1D86  1D03               	skipz
  2690  1D87  2D82               	goto	u3135
  2691  1D88                     l2402:
  2692  1D88  3001               	movlw	1
  2693  1D89  00F6               	movwf	??___awmod
  2694  1D8A  0876               	movf	??___awmod,w
  2695  1D8B  07F7               	addwf	___awmod@counter,f
  2696  1D8C                     l2404:
  2697  1D8C  1FF3               	btfss	___awmod@divisor+1,7
  2698  1D8D  2D8F               	goto	u3141
  2699  1D8E  2D90               	goto	u3140
  2700  1D8F                     u3141:
  2701  1D8F  2D81               	goto	l2400
  2702  1D90                     u3140:
  2703  1D90                     l2406:
  2704  1D90  0873               	movf	___awmod@divisor+1,w
  2705  1D91  0275               	subwf	___awmod@dividend+1,w
  2706  1D92  1D03               	skipz
  2707  1D93  2D96               	goto	u3155
  2708  1D94  0872               	movf	___awmod@divisor,w
  2709  1D95  0274               	subwf	___awmod@dividend,w
  2710  1D96                     u3155:
  2711  1D96  1C03               	skipc
  2712  1D97  2D99               	goto	u3151
  2713  1D98  2D9A               	goto	u3150
  2714  1D99                     u3151:
  2715  1D99  2DA0               	goto	l2410
  2716  1D9A                     u3150:
  2717  1D9A                     l2408:
  2718  1D9A  0872               	movf	___awmod@divisor,w
  2719  1D9B  02F4               	subwf	___awmod@dividend,f
  2720  1D9C  0873               	movf	___awmod@divisor+1,w
  2721  1D9D  1C03               	skipc
  2722  1D9E  03F5               	decf	___awmod@dividend+1,f
  2723  1D9F  02F5               	subwf	___awmod@dividend+1,f
  2724  1DA0                     l2410:
  2725  1DA0  3001               	movlw	1
  2726  1DA1                     u3165:
  2727  1DA1  1003               	clrc
  2728  1DA2  0CF3               	rrf	___awmod@divisor+1,f
  2729  1DA3  0CF2               	rrf	___awmod@divisor,f
  2730  1DA4  3EFF               	addlw	-1
  2731  1DA5  1D03               	skipz
  2732  1DA6  2DA1               	goto	u3165
  2733  1DA7                     l2412:
  2734  1DA7  3001               	movlw	1
  2735  1DA8  02F7               	subwf	___awmod@counter,f
  2736  1DA9  1D03               	btfss	3,2
  2737  1DAA  2DAC               	goto	u3171
  2738  1DAB  2DAD               	goto	u3170
  2739  1DAC                     u3171:
  2740  1DAC  2D90               	goto	l2406
  2741  1DAD                     u3170:
  2742  1DAD                     l2414:
  2743  1DAD  0878               	movf	___awmod@sign,w
  2744  1DAE  1903               	btfsc	3,2
  2745  1DAF  2DB1               	goto	u3181
  2746  1DB0  2DB2               	goto	u3180
  2747  1DB1                     u3181:
  2748  1DB1  2DB7               	goto	l2418
  2749  1DB2                     u3180:
  2750  1DB2                     l2416:
  2751  1DB2  09F4               	comf	___awmod@dividend,f
  2752  1DB3  09F5               	comf	___awmod@dividend+1,f
  2753  1DB4  0AF4               	incf	___awmod@dividend,f
  2754  1DB5  1903               	skipnz
  2755  1DB6  0AF5               	incf	___awmod@dividend+1,f
  2756  1DB7                     l2418:
  2757  1DB7  0875               	movf	___awmod@dividend+1,w
  2758  1DB8  00F3               	movwf	?___awmod+1
  2759  1DB9  0874               	movf	___awmod@dividend,w
  2760  1DBA  00F2               	movwf	?___awmod
  2761  1DBB                     l561:
  2762  1DBB  0008               	return
  2763  1DBC                     __end_of___awmod:
  2764                           
  2765                           	psect	text4
  2766  0787                     __ptext4:	
  2767 ;; *************** function ___awdiv *****************
  2768 ;; Defined at:
  2769 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  divisor         2    0[BANK0 ] int 
  2772 ;;  dividend        2    2[BANK0 ] int 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  quotient        2    6[BANK0 ] int 
  2775 ;;  sign            1    5[BANK0 ] unsigned char 
  2776 ;;  counter         1    4[BANK0 ] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  2    0[BANK0 ] int 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2786 ;;      Params:         0       4       0       0       0
  2787 ;;      Locals:         0       4       0       0       0
  2788 ;;      Temps:          1       0       0       0       0
  2789 ;;      Totals:         1       8       0       0       0
  2790 ;;Total ram usage:        9 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    1
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_scale
  2797 ;;		_sprintf
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function ___awdiv
  2803  0787                     ___awdiv:
  2804  0787                     l2340:	
  2805                           ;incstack = 0
  2806                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2807                           
  2808  0787  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0788  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0789  01A5               	clrf	___awdiv@sign
  2811  078A                     l2342:
  2812  078A  1FA1               	btfss	___awdiv@divisor+1,7
  2813  078B  2F8D               	goto	u3001
  2814  078C  2F8E               	goto	u3000
  2815  078D                     u3001:
  2816  078D  2F95               	goto	l2348
  2817  078E                     u3000:
  2818  078E                     l2344:
  2819  078E  09A0               	comf	___awdiv@divisor,f
  2820  078F  09A1               	comf	___awdiv@divisor+1,f
  2821  0790  0AA0               	incf	___awdiv@divisor,f
  2822  0791  1903               	skipnz
  2823  0792  0AA1               	incf	___awdiv@divisor+1,f
  2824  0793                     l2346:
  2825  0793  01A5               	clrf	___awdiv@sign
  2826  0794  0AA5               	incf	___awdiv@sign,f
  2827  0795                     l2348:
  2828  0795  1FA3               	btfss	___awdiv@dividend+1,7
  2829  0796  2F98               	goto	u3011
  2830  0797  2F99               	goto	u3010
  2831  0798                     u3011:
  2832  0798  2FA2               	goto	l2354
  2833  0799                     u3010:
  2834  0799                     l2350:
  2835  0799  09A2               	comf	___awdiv@dividend,f
  2836  079A  09A3               	comf	___awdiv@dividend+1,f
  2837  079B  0AA2               	incf	___awdiv@dividend,f
  2838  079C  1903               	skipnz
  2839  079D  0AA3               	incf	___awdiv@dividend+1,f
  2840  079E                     l2352:
  2841  079E  3001               	movlw	1
  2842  079F  00F9               	movwf	??___awdiv
  2843  07A0  0879               	movf	??___awdiv,w
  2844  07A1  06A5               	xorwf	___awdiv@sign,f
  2845  07A2                     l2354:
  2846  07A2  01A6               	clrf	___awdiv@quotient
  2847  07A3  01A7               	clrf	___awdiv@quotient+1
  2848  07A4                     l2356:
  2849  07A4  0820               	movf	___awdiv@divisor,w
  2850  07A5  0421               	iorwf	___awdiv@divisor+1,w
  2851  07A6  1903               	btfsc	3,2
  2852  07A7  2FA9               	goto	u3021
  2853  07A8  2FAA               	goto	u3020
  2854  07A9                     u3021:
  2855  07A9  2FE1               	goto	l2376
  2856  07AA                     u3020:
  2857  07AA                     l2358:
  2858  07AA  01A4               	clrf	___awdiv@counter
  2859  07AB  0AA4               	incf	___awdiv@counter,f
  2860  07AC  2FB8               	goto	l2364
  2861  07AD                     l2360:
  2862  07AD  3001               	movlw	1
  2863  07AE                     u3035:
  2864  07AE  1003               	clrc
  2865  07AF  0DA0               	rlf	___awdiv@divisor,f
  2866  07B0  0DA1               	rlf	___awdiv@divisor+1,f
  2867  07B1  3EFF               	addlw	-1
  2868  07B2  1D03               	skipz
  2869  07B3  2FAE               	goto	u3035
  2870  07B4                     l2362:
  2871  07B4  3001               	movlw	1
  2872  07B5  00F9               	movwf	??___awdiv
  2873  07B6  0879               	movf	??___awdiv,w
  2874  07B7  07A4               	addwf	___awdiv@counter,f
  2875  07B8                     l2364:
  2876  07B8  1FA1               	btfss	___awdiv@divisor+1,7
  2877  07B9  2FBB               	goto	u3041
  2878  07BA  2FBC               	goto	u3040
  2879  07BB                     u3041:
  2880  07BB  2FAD               	goto	l2360
  2881  07BC                     u3040:
  2882  07BC                     l2366:
  2883  07BC  3001               	movlw	1
  2884  07BD                     u3055:
  2885  07BD  1003               	clrc
  2886  07BE  0DA6               	rlf	___awdiv@quotient,f
  2887  07BF  0DA7               	rlf	___awdiv@quotient+1,f
  2888  07C0  3EFF               	addlw	-1
  2889  07C1  1D03               	skipz
  2890  07C2  2FBD               	goto	u3055
  2891  07C3  0821               	movf	___awdiv@divisor+1,w
  2892  07C4  0223               	subwf	___awdiv@dividend+1,w
  2893  07C5  1D03               	skipz
  2894  07C6  2FC9               	goto	u3065
  2895  07C7  0820               	movf	___awdiv@divisor,w
  2896  07C8  0222               	subwf	___awdiv@dividend,w
  2897  07C9                     u3065:
  2898  07C9  1C03               	skipc
  2899  07CA  2FCC               	goto	u3061
  2900  07CB  2FCD               	goto	u3060
  2901  07CC                     u3061:
  2902  07CC  2FD4               	goto	l2372
  2903  07CD                     u3060:
  2904  07CD                     l2368:
  2905  07CD  0820               	movf	___awdiv@divisor,w
  2906  07CE  02A2               	subwf	___awdiv@dividend,f
  2907  07CF  0821               	movf	___awdiv@divisor+1,w
  2908  07D0  1C03               	skipc
  2909  07D1  03A3               	decf	___awdiv@dividend+1,f
  2910  07D2  02A3               	subwf	___awdiv@dividend+1,f
  2911  07D3                     l2370:
  2912  07D3  1426               	bsf	___awdiv@quotient,0
  2913  07D4                     l2372:
  2914  07D4  3001               	movlw	1
  2915  07D5                     u3075:
  2916  07D5  1003               	clrc
  2917  07D6  0CA1               	rrf	___awdiv@divisor+1,f
  2918  07D7  0CA0               	rrf	___awdiv@divisor,f
  2919  07D8  3EFF               	addlw	-1
  2920  07D9  1D03               	skipz
  2921  07DA  2FD5               	goto	u3075
  2922  07DB                     l2374:
  2923  07DB  3001               	movlw	1
  2924  07DC  02A4               	subwf	___awdiv@counter,f
  2925  07DD  1D03               	btfss	3,2
  2926  07DE  2FE0               	goto	u3081
  2927  07DF  2FE1               	goto	u3080
  2928  07E0                     u3081:
  2929  07E0  2FBC               	goto	l2366
  2930  07E1                     u3080:
  2931  07E1                     l2376:
  2932  07E1  0825               	movf	___awdiv@sign,w
  2933  07E2  1903               	btfsc	3,2
  2934  07E3  2FE5               	goto	u3091
  2935  07E4  2FE6               	goto	u3090
  2936  07E5                     u3091:
  2937  07E5  2FEB               	goto	l2380
  2938  07E6                     u3090:
  2939  07E6                     l2378:
  2940  07E6  09A6               	comf	___awdiv@quotient,f
  2941  07E7  09A7               	comf	___awdiv@quotient+1,f
  2942  07E8  0AA6               	incf	___awdiv@quotient,f
  2943  07E9  1903               	skipnz
  2944  07EA  0AA7               	incf	___awdiv@quotient+1,f
  2945  07EB                     l2380:
  2946  07EB  0827               	movf	___awdiv@quotient+1,w
  2947  07EC  00A1               	movwf	?___awdiv+1
  2948  07ED  0826               	movf	___awdiv@quotient,w
  2949  07EE  00A0               	movwf	?___awdiv
  2950  07EF                     l548:
  2951  07EF  0008               	return
  2952  07F0                     __end_of___awdiv:
  2953                           
  2954                           	psect	text5
  2955  1AC6                     __ptext5:	
  2956 ;; *************** function _isdigit *****************
  2957 ;; Defined at:
  2958 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  c               1    wreg     unsigned char 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  c               1    3[COMMON] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;		None               void
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         0       0       0       0       0
  2973 ;;      Locals:         2       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0
  2975 ;;      Totals:         2       0       0       0       0
  2976 ;;Total ram usage:        2 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_sprintf
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           
  2987                           ;psect for function _isdigit
  2988  1AC6                     _isdigit:
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2992                           ;isdigit@c stored from wreg
  2993  1AC6  00F3               	movwf	isdigit@c
  2994  1AC7                     l2882:
  2995  1AC7  01F2               	clrf	_isdigit$991
  2996  1AC8                     l2884:
  2997  1AC8  303A               	movlw	58
  2998  1AC9  0273               	subwf	isdigit@c,w
  2999  1ACA  1803               	skipnc
  3000  1ACB  2ACD               	goto	u4441
  3001  1ACC  2ACE               	goto	u4440
  3002  1ACD                     u4441:
  3003  1ACD  2AD6               	goto	l2890
  3004  1ACE                     u4440:
  3005  1ACE                     l2886:
  3006  1ACE  3030               	movlw	48
  3007  1ACF  0273               	subwf	isdigit@c,w
  3008  1AD0  1C03               	skipc
  3009  1AD1  2AD3               	goto	u4451
  3010  1AD2  2AD4               	goto	u4450
  3011  1AD3                     u4451:
  3012  1AD3  2AD6               	goto	l2890
  3013  1AD4                     u4450:
  3014  1AD4                     l2888:
  3015  1AD4  01F2               	clrf	_isdigit$991
  3016  1AD5  0AF2               	incf	_isdigit$991,f
  3017  1AD6                     l2890:
  3018  1AD6  0C72               	rrf	_isdigit$991,w
  3019  1AD7                     l882:
  3020  1AD7  0008               	return
  3021  1AD8                     __end_of_isdigit:
  3022                           
  3023                           	psect	text6
  3024  057A                     __ptext6:	
  3025 ;; *************** function _fround *****************
  3026 ;; Defined at:
  3027 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  prec            1    wreg     unsigned char 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  prec            1   53[BANK0 ] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  4   34[BANK0 ] unsigned char 
  3034 ;; Registers used:
  3035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3041 ;;      Params:         0       4       0       0       0
  3042 ;;      Locals:         0       9       0       0       0
  3043 ;;      Temps:          0       7       0       0       0
  3044 ;;      Totals:         0      20       0       0       0
  3045 ;;Total ram usage:       20 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    3
  3048 ;; This function calls:
  3049 ;;		___flmul
  3050 ;;		___lwdiv
  3051 ;;		___lwmod
  3052 ;; This function is called by:
  3053 ;;		_sprintf
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function _fround
  3059  057A                     _fround:
  3060                           
  3061                           ;incstack = 0
  3062                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3063                           ;fround@prec stored from wreg
  3064  057A  1283               	bcf	3,5	;RP0=0, select bank0
  3065  057B  1303               	bcf	3,6	;RP1=0, select bank0
  3066  057C  00D5               	movwf	fround@prec
  3067  057D                     l3664:
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3070  057D  306E               	movlw	110
  3071  057E  0255               	subwf	fround@prec,w
  3072  057F  1C03               	skipc
  3073  0580  2D82               	goto	u5861
  3074  0581  2D83               	goto	u5860
  3075  0582                     u5861:
  3076  0582  2E92               	goto	l3672
  3077  0583                     u5860:
  3078  0583                     l3666:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3081  0583  303F               	movlw	63
  3082  0584  00AB               	movwf	___flmul@b+3
  3083  0585  3000               	movlw	0
  3084  0586  00AA               	movwf	___flmul@b+2
  3085  0587  3000               	movlw	0
  3086  0588  00A9               	movwf	___flmul@b+1
  3087  0589  3000               	movlw	0
  3088  058A  00A8               	movwf	___flmul@b
  3089  058B  3064               	movlw	100
  3090  058C  00A0               	movwf	___lwdiv@divisor
  3091  058D  3000               	movlw	0
  3092  058E  00A1               	movwf	___lwdiv@divisor+1
  3093  058F  0855               	movf	fround@prec,w
  3094  0590  00C6               	movwf	??_fround
  3095  0591  01C7               	clrf	??_fround+1
  3096  0592  0846               	movf	??_fround,w
  3097  0593  00A2               	movwf	___lwdiv@dividend
  3098  0594  0847               	movf	??_fround+1,w
  3099  0595  00A3               	movwf	___lwdiv@dividend+1
  3100  0596  160A  158A  2427  120A  118A  	fcall	___lwdiv
  3101  059B  1283               	bcf	3,5	;RP0=0, select bank0
  3102  059C  1303               	bcf	3,6	;RP1=0, select bank0
  3103  059D  0820               	movf	?___lwdiv,w
  3104  059E  00C8               	movwf	??_fround+2
  3105  059F  3001               	movlw	1
  3106  05A0                     u5875:
  3107  05A0  1003               	clrc
  3108  05A1  0DC8               	rlf	??_fround+2,f
  3109  05A2  3EFF               	addlw	-1
  3110  05A3  1D03               	skipz
  3111  05A4  2DA0               	goto	u5875
  3112  05A5  1003               	clrc
  3113  05A6  0D48               	rlf	??_fround+2,w
  3114  05A7  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3115  05A8  0084               	movwf	4
  3116  05A9  160A  158A  2000  120A  118A  	fcall	stringdir
  3117  05AE  00C9               	movwf	??_fround+3
  3118  05AF  160A  158A  2000  120A  118A  	fcall	stringdir
  3119  05B4  00CA               	movwf	??_fround+4
  3120  05B5  160A  158A  2000  120A  118A  	fcall	stringdir
  3121  05BA  00CB               	movwf	??_fround+5
  3122  05BB  160A  158A  2000  120A  118A  	fcall	stringdir
  3123  05C0  00CC               	movwf	??_fround+6
  3124  05C1  084C               	movf	??_fround+6,w
  3125  05C2  00AF               	movwf	___flmul@a+3
  3126  05C3  084B               	movf	??_fround+5,w
  3127  05C4  00AE               	movwf	___flmul@a+2
  3128  05C5  084A               	movf	??_fround+4,w
  3129  05C6  00AD               	movwf	___flmul@a+1
  3130  05C7  0849               	movf	??_fround+3,w
  3131  05C8  00AC               	movwf	___flmul@a
  3132  05C9  120A  158A  213C  120A  118A  	fcall	___flmul
  3133  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3134  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3135  05D0  082B               	movf	?___flmul+3,w
  3136  05D1  00D4               	movwf	_fround$1178+3
  3137  05D2  082A               	movf	?___flmul+2,w
  3138  05D3  00D3               	movwf	_fround$1178+2
  3139  05D4  0829               	movf	?___flmul+1,w
  3140  05D5  00D2               	movwf	_fround$1178+1
  3141  05D6  0828               	movf	?___flmul,w
  3142  05D7  00D1               	movwf	_fround$1178
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3145  05D8  300A               	movlw	10
  3146  05D9  00A0               	movwf	___lwdiv@divisor
  3147  05DA  3000               	movlw	0
  3148  05DB  00A1               	movwf	___lwdiv@divisor+1
  3149  05DC  0855               	movf	fround@prec,w
  3150  05DD  00C6               	movwf	??_fround
  3151  05DE  01C7               	clrf	??_fround+1
  3152  05DF  0846               	movf	??_fround,w
  3153  05E0  00F4               	movwf	___lwmod@dividend
  3154  05E1  0847               	movf	??_fround+1,w
  3155  05E2  00F5               	movwf	___lwmod@dividend+1
  3156  05E3  3064               	movlw	100
  3157  05E4  00F2               	movwf	___lwmod@divisor
  3158  05E5  3000               	movlw	0
  3159  05E6  00F3               	movwf	___lwmod@divisor+1
  3160  05E7  160A  158A  23ED  120A  118A  	fcall	___lwmod
  3161  05EC  0873               	movf	?___lwmod+1,w
  3162  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  3163  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  3164  05EF  00A3               	movwf	___lwdiv@dividend+1
  3165  05F0  0872               	movf	?___lwmod,w
  3166  05F1  00A2               	movwf	___lwdiv@dividend
  3167  05F2  160A  158A  2427  120A  118A  	fcall	___lwdiv
  3168  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3169  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3170  05F9  0820               	movf	?___lwdiv,w
  3171  05FA  00C8               	movwf	??_fround+2
  3172  05FB  3001               	movlw	1
  3173  05FC                     u5885:
  3174  05FC  1003               	clrc
  3175  05FD  0DC8               	rlf	??_fround+2,f
  3176  05FE  3EFF               	addlw	-1
  3177  05FF  1D03               	skipz
  3178  0600  2DFC               	goto	u5885
  3179  0601  1003               	clrc
  3180  0602  0D48               	rlf	??_fround+2,w
  3181  0603  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3182  0604  0084               	movwf	4
  3183  0605  160A  158A  2000  120A  118A  	fcall	stringdir
  3184  060A  00C9               	movwf	??_fround+3
  3185  060B  160A  158A  2000  120A  118A  	fcall	stringdir
  3186  0610  00CA               	movwf	??_fround+4
  3187  0611  160A  158A  2000  120A  118A  	fcall	stringdir
  3188  0616  00CB               	movwf	??_fround+5
  3189  0617  160A  158A  2000  120A  118A  	fcall	stringdir
  3190  061C  00CC               	movwf	??_fround+6
  3191  061D  084C               	movf	??_fround+6,w
  3192  061E  00AB               	movwf	___flmul@b+3
  3193  061F  084B               	movf	??_fround+5,w
  3194  0620  00AA               	movwf	___flmul@b+2
  3195  0621  084A               	movf	??_fround+4,w
  3196  0622  00A9               	movwf	___flmul@b+1
  3197  0623  0849               	movf	??_fround+3,w
  3198  0624  00A8               	movwf	___flmul@b
  3199  0625  0854               	movf	_fround$1178+3,w
  3200  0626  00AF               	movwf	___flmul@a+3
  3201  0627  0853               	movf	_fround$1178+2,w
  3202  0628  00AE               	movwf	___flmul@a+2
  3203  0629  0852               	movf	_fround$1178+1,w
  3204  062A  00AD               	movwf	___flmul@a+1
  3205  062B  0851               	movf	_fround$1178,w
  3206  062C  00AC               	movwf	___flmul@a
  3207  062D  120A  158A  213C  120A  118A  	fcall	___flmul
  3208  0632  1283               	bcf	3,5	;RP0=0, select bank0
  3209  0633  1303               	bcf	3,6	;RP1=0, select bank0
  3210  0634  082B               	movf	?___flmul+3,w
  3211  0635  00D0               	movwf	_fround$1179+3
  3212  0636  082A               	movf	?___flmul+2,w
  3213  0637  00CF               	movwf	_fround$1179+2
  3214  0638  0829               	movf	?___flmul+1,w
  3215  0639  00CE               	movwf	_fround$1179+1
  3216  063A  0828               	movf	?___flmul,w
  3217  063B  00CD               	movwf	_fround$1179
  3218                           
  3219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3220  063C  300A               	movlw	10
  3221  063D  00F2               	movwf	___lwmod@divisor
  3222  063E  3000               	movlw	0
  3223  063F  00F3               	movwf	___lwmod@divisor+1
  3224  0640  0855               	movf	fround@prec,w
  3225  0641  00C6               	movwf	??_fround
  3226  0642  01C7               	clrf	??_fround+1
  3227  0643  0846               	movf	??_fround,w
  3228  0644  00F4               	movwf	___lwmod@dividend
  3229  0645  0847               	movf	??_fround+1,w
  3230  0646  00F5               	movwf	___lwmod@dividend+1
  3231  0647  160A  158A  23ED  120A  118A  	fcall	___lwmod
  3232  064C  0872               	movf	?___lwmod,w
  3233  064D  1283               	bcf	3,5	;RP0=0, select bank0
  3234  064E  1303               	bcf	3,6	;RP1=0, select bank0
  3235  064F  00C8               	movwf	??_fround+2
  3236  0650  3001               	movlw	1
  3237  0651                     u5895:
  3238  0651  1003               	clrc
  3239  0652  0DC8               	rlf	??_fround+2,f
  3240  0653  3EFF               	addlw	-1
  3241  0654  1D03               	skipz
  3242  0655  2E51               	goto	u5895
  3243  0656  1003               	clrc
  3244  0657  0D48               	rlf	??_fround+2,w
  3245  0658  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3246  0659  0084               	movwf	4
  3247  065A  160A  158A  2000  120A  118A  	fcall	stringdir
  3248  065F  00C9               	movwf	??_fround+3
  3249  0660  160A  158A  2000  120A  118A  	fcall	stringdir
  3250  0665  00CA               	movwf	??_fround+4
  3251  0666  160A  158A  2000  120A  118A  	fcall	stringdir
  3252  066B  00CB               	movwf	??_fround+5
  3253  066C  160A  158A  2000  120A  118A  	fcall	stringdir
  3254  0671  00CC               	movwf	??_fround+6
  3255  0672  084C               	movf	??_fround+6,w
  3256  0673  00AB               	movwf	___flmul@b+3
  3257  0674  084B               	movf	??_fround+5,w
  3258  0675  00AA               	movwf	___flmul@b+2
  3259  0676  084A               	movf	??_fround+4,w
  3260  0677  00A9               	movwf	___flmul@b+1
  3261  0678  0849               	movf	??_fround+3,w
  3262  0679  00A8               	movwf	___flmul@b
  3263  067A  0850               	movf	_fround$1179+3,w
  3264  067B  00AF               	movwf	___flmul@a+3
  3265  067C  084F               	movf	_fround$1179+2,w
  3266  067D  00AE               	movwf	___flmul@a+2
  3267  067E  084E               	movf	_fround$1179+1,w
  3268  067F  00AD               	movwf	___flmul@a+1
  3269  0680  084D               	movf	_fround$1179,w
  3270  0681  00AC               	movwf	___flmul@a
  3271  0682  120A  158A  213C  120A  118A  	fcall	___flmul
  3272  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3273  0688  1303               	bcf	3,6	;RP1=0, select bank0
  3274  0689  082B               	movf	?___flmul+3,w
  3275  068A  00C5               	movwf	?_fround+3
  3276  068B  082A               	movf	?___flmul+2,w
  3277  068C  00C4               	movwf	?_fround+2
  3278  068D  0829               	movf	?___flmul+1,w
  3279  068E  00C3               	movwf	?_fround+1
  3280  068F  0828               	movf	?___flmul,w
  3281  0690  00C2               	movwf	?_fround
  3282  0691  2F86               	goto	l283
  3283  0692                     l3672:
  3284  0692  300B               	movlw	11
  3285  0693  0255               	subwf	fround@prec,w
  3286  0694  1C03               	skipc
  3287  0695  2E97               	goto	u5901
  3288  0696  2E98               	goto	u5900
  3289  0697                     u5901:
  3290  0697  2F43               	goto	l3678
  3291  0698                     u5900:
  3292  0698                     l3674:
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3295  0698  303F               	movlw	63
  3296  0699  00AB               	movwf	___flmul@b+3
  3297  069A  3000               	movlw	0
  3298  069B  00AA               	movwf	___flmul@b+2
  3299  069C  3000               	movlw	0
  3300  069D  00A9               	movwf	___flmul@b+1
  3301  069E  3000               	movlw	0
  3302  069F  00A8               	movwf	___flmul@b
  3303  06A0  300A               	movlw	10
  3304  06A1  00A0               	movwf	___lwdiv@divisor
  3305  06A2  3000               	movlw	0
  3306  06A3  00A1               	movwf	___lwdiv@divisor+1
  3307  06A4  0855               	movf	fround@prec,w
  3308  06A5  00C6               	movwf	??_fround
  3309  06A6  01C7               	clrf	??_fround+1
  3310  06A7  0846               	movf	??_fround,w
  3311  06A8  00A2               	movwf	___lwdiv@dividend
  3312  06A9  0847               	movf	??_fround+1,w
  3313  06AA  00A3               	movwf	___lwdiv@dividend+1
  3314  06AB  160A  158A  2427  120A  118A  	fcall	___lwdiv
  3315  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  3316  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  3317  06B2  0820               	movf	?___lwdiv,w
  3318  06B3  00C8               	movwf	??_fround+2
  3319  06B4  3001               	movlw	1
  3320  06B5                     u5915:
  3321  06B5  1003               	clrc
  3322  06B6  0DC8               	rlf	??_fround+2,f
  3323  06B7  3EFF               	addlw	-1
  3324  06B8  1D03               	skipz
  3325  06B9  2EB5               	goto	u5915
  3326  06BA  1003               	clrc
  3327  06BB  0D48               	rlf	??_fround+2,w
  3328  06BC  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3329  06BD  0084               	movwf	4
  3330  06BE  160A  158A  2000  120A  118A  	fcall	stringdir
  3331  06C3  00C9               	movwf	??_fround+3
  3332  06C4  160A  158A  2000  120A  118A  	fcall	stringdir
  3333  06C9  00CA               	movwf	??_fround+4
  3334  06CA  160A  158A  2000  120A  118A  	fcall	stringdir
  3335  06CF  00CB               	movwf	??_fround+5
  3336  06D0  160A  158A  2000  120A  118A  	fcall	stringdir
  3337  06D5  00CC               	movwf	??_fround+6
  3338  06D6  084C               	movf	??_fround+6,w
  3339  06D7  00AF               	movwf	___flmul@a+3
  3340  06D8  084B               	movf	??_fround+5,w
  3341  06D9  00AE               	movwf	___flmul@a+2
  3342  06DA  084A               	movf	??_fround+4,w
  3343  06DB  00AD               	movwf	___flmul@a+1
  3344  06DC  0849               	movf	??_fround+3,w
  3345  06DD  00AC               	movwf	___flmul@a
  3346  06DE  120A  158A  213C  120A  118A  	fcall	___flmul
  3347  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  3348  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  3349  06E5  082B               	movf	?___flmul+3,w
  3350  06E6  00D4               	movwf	_fround$1178+3
  3351  06E7  082A               	movf	?___flmul+2,w
  3352  06E8  00D3               	movwf	_fround$1178+2
  3353  06E9  0829               	movf	?___flmul+1,w
  3354  06EA  00D2               	movwf	_fround$1178+1
  3355  06EB  0828               	movf	?___flmul,w
  3356  06EC  00D1               	movwf	_fround$1178
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3359  06ED  300A               	movlw	10
  3360  06EE  00F2               	movwf	___lwmod@divisor
  3361  06EF  3000               	movlw	0
  3362  06F0  00F3               	movwf	___lwmod@divisor+1
  3363  06F1  0855               	movf	fround@prec,w
  3364  06F2  00C6               	movwf	??_fround
  3365  06F3  01C7               	clrf	??_fround+1
  3366  06F4  0846               	movf	??_fround,w
  3367  06F5  00F4               	movwf	___lwmod@dividend
  3368  06F6  0847               	movf	??_fround+1,w
  3369  06F7  00F5               	movwf	___lwmod@dividend+1
  3370  06F8  160A  158A  23ED  120A  118A  	fcall	___lwmod
  3371  06FD  0872               	movf	?___lwmod,w
  3372  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3373  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3374  0700  00C8               	movwf	??_fround+2
  3375  0701  3001               	movlw	1
  3376  0702                     u5925:
  3377  0702  1003               	clrc
  3378  0703  0DC8               	rlf	??_fround+2,f
  3379  0704  3EFF               	addlw	-1
  3380  0705  1D03               	skipz
  3381  0706  2F02               	goto	u5925
  3382  0707  1003               	clrc
  3383  0708  0D48               	rlf	??_fround+2,w
  3384  0709  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3385  070A  0084               	movwf	4
  3386  070B  160A  158A  2000  120A  118A  	fcall	stringdir
  3387  0710  00C9               	movwf	??_fround+3
  3388  0711  160A  158A  2000  120A  118A  	fcall	stringdir
  3389  0716  00CA               	movwf	??_fround+4
  3390  0717  160A  158A  2000  120A  118A  	fcall	stringdir
  3391  071C  00CB               	movwf	??_fround+5
  3392  071D  160A  158A  2000  120A  118A  	fcall	stringdir
  3393  0722  00CC               	movwf	??_fround+6
  3394  0723  084C               	movf	??_fround+6,w
  3395  0724  00AB               	movwf	___flmul@b+3
  3396  0725  084B               	movf	??_fround+5,w
  3397  0726  00AA               	movwf	___flmul@b+2
  3398  0727  084A               	movf	??_fround+4,w
  3399  0728  00A9               	movwf	___flmul@b+1
  3400  0729  0849               	movf	??_fround+3,w
  3401  072A  00A8               	movwf	___flmul@b
  3402  072B  0854               	movf	_fround$1178+3,w
  3403  072C  00AF               	movwf	___flmul@a+3
  3404  072D  0853               	movf	_fround$1178+2,w
  3405  072E  00AE               	movwf	___flmul@a+2
  3406  072F  0852               	movf	_fround$1178+1,w
  3407  0730  00AD               	movwf	___flmul@a+1
  3408  0731  0851               	movf	_fround$1178,w
  3409  0732  00AC               	movwf	___flmul@a
  3410  0733  120A  158A  213C  120A  118A  	fcall	___flmul
  3411  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0739  1303               	bcf	3,6	;RP1=0, select bank0
  3413  073A  082B               	movf	?___flmul+3,w
  3414  073B  00C5               	movwf	?_fround+3
  3415  073C  082A               	movf	?___flmul+2,w
  3416  073D  00C4               	movwf	?_fround+2
  3417  073E  0829               	movf	?___flmul+1,w
  3418  073F  00C3               	movwf	?_fround+1
  3419  0740  0828               	movf	?___flmul,w
  3420  0741  00C2               	movwf	?_fround
  3421  0742  2F86               	goto	l283
  3422  0743                     l3678:
  3423                           
  3424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3425  0743  303F               	movlw	63
  3426  0744  00AB               	movwf	___flmul@b+3
  3427  0745  3000               	movlw	0
  3428  0746  00AA               	movwf	___flmul@b+2
  3429  0747  3000               	movlw	0
  3430  0748  00A9               	movwf	___flmul@b+1
  3431  0749  3000               	movlw	0
  3432  074A  00A8               	movwf	___flmul@b
  3433  074B  0855               	movf	fround@prec,w
  3434  074C  00C6               	movwf	??_fround
  3435  074D  3001               	movlw	1
  3436  074E                     u5935:
  3437  074E  1003               	clrc
  3438  074F  0DC6               	rlf	??_fround,f
  3439  0750  3EFF               	addlw	-1
  3440  0751  1D03               	skipz
  3441  0752  2F4E               	goto	u5935
  3442  0753  1003               	clrc
  3443  0754  0D46               	rlf	??_fround,w
  3444  0755  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3445  0756  0084               	movwf	4
  3446  0757  160A  158A  2000  120A  118A  	fcall	stringdir
  3447  075C  00C7               	movwf	??_fround+1
  3448  075D  160A  158A  2000  120A  118A  	fcall	stringdir
  3449  0762  00C8               	movwf	??_fround+2
  3450  0763  160A  158A  2000  120A  118A  	fcall	stringdir
  3451  0768  00C9               	movwf	??_fround+3
  3452  0769  160A  158A  2000  120A  118A  	fcall	stringdir
  3453  076E  00CA               	movwf	??_fround+4
  3454  076F  084A               	movf	??_fround+4,w
  3455  0770  00AF               	movwf	___flmul@a+3
  3456  0771  0849               	movf	??_fround+3,w
  3457  0772  00AE               	movwf	___flmul@a+2
  3458  0773  0848               	movf	??_fround+2,w
  3459  0774  00AD               	movwf	___flmul@a+1
  3460  0775  0847               	movf	??_fround+1,w
  3461  0776  00AC               	movwf	___flmul@a
  3462  0777  120A  158A  213C  120A  118A  	fcall	___flmul
  3463  077C  1283               	bcf	3,5	;RP0=0, select bank0
  3464  077D  1303               	bcf	3,6	;RP1=0, select bank0
  3465  077E  082B               	movf	?___flmul+3,w
  3466  077F  00C5               	movwf	?_fround+3
  3467  0780  082A               	movf	?___flmul+2,w
  3468  0781  00C4               	movwf	?_fround+2
  3469  0782  0829               	movf	?___flmul+1,w
  3470  0783  00C3               	movwf	?_fround+1
  3471  0784  0828               	movf	?___flmul,w
  3472  0785  00C2               	movwf	?_fround
  3473  0786                     l283:
  3474  0786  0008               	return
  3475  0787                     __end_of_fround:
  3476                           
  3477                           	psect	text7
  3478  1BED                     __ptext7:	
  3479 ;; *************** function ___lwmod *****************
  3480 ;; Defined at:
  3481 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  divisor         2    2[COMMON] unsigned int 
  3484 ;;  dividend        2    4[COMMON] unsigned int 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  counter         1    7[COMMON] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  2    2[COMMON] unsigned int 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3496 ;;      Params:         4       0       0       0       0
  3497 ;;      Locals:         1       0       0       0       0
  3498 ;;      Temps:          1       0       0       0       0
  3499 ;;      Totals:         6       0       0       0       0
  3500 ;;Total ram usage:        6 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    1
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_fround
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function ___lwmod
  3512  1BED                     ___lwmod:
  3513  1BED                     l2448:	
  3514                           ;incstack = 0
  3515                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3516                           
  3517  1BED  0872               	movf	___lwmod@divisor,w
  3518  1BEE  0473               	iorwf	___lwmod@divisor+1,w
  3519  1BEF  1903               	btfsc	3,2
  3520  1BF0  2BF2               	goto	u3261
  3521  1BF1  2BF3               	goto	u3260
  3522  1BF2                     u3261:
  3523  1BF2  2C22               	goto	l2466
  3524  1BF3                     u3260:
  3525  1BF3                     l2450:
  3526  1BF3  01F7               	clrf	___lwmod@counter
  3527  1BF4  0AF7               	incf	___lwmod@counter,f
  3528  1BF5  2C01               	goto	l2456
  3529  1BF6                     l2452:
  3530  1BF6  3001               	movlw	1
  3531  1BF7                     u3275:
  3532  1BF7  1003               	clrc
  3533  1BF8  0DF2               	rlf	___lwmod@divisor,f
  3534  1BF9  0DF3               	rlf	___lwmod@divisor+1,f
  3535  1BFA  3EFF               	addlw	-1
  3536  1BFB  1D03               	skipz
  3537  1BFC  2BF7               	goto	u3275
  3538  1BFD                     l2454:
  3539  1BFD  3001               	movlw	1
  3540  1BFE  00F6               	movwf	??___lwmod
  3541  1BFF  0876               	movf	??___lwmod,w
  3542  1C00  07F7               	addwf	___lwmod@counter,f
  3543  1C01                     l2456:
  3544  1C01  1FF3               	btfss	___lwmod@divisor+1,7
  3545  1C02  2C04               	goto	u3281
  3546  1C03  2C05               	goto	u3280
  3547  1C04                     u3281:
  3548  1C04  2BF6               	goto	l2452
  3549  1C05                     u3280:
  3550  1C05                     l2458:
  3551  1C05  0873               	movf	___lwmod@divisor+1,w
  3552  1C06  0275               	subwf	___lwmod@dividend+1,w
  3553  1C07  1D03               	skipz
  3554  1C08  2C0B               	goto	u3295
  3555  1C09  0872               	movf	___lwmod@divisor,w
  3556  1C0A  0274               	subwf	___lwmod@dividend,w
  3557  1C0B                     u3295:
  3558  1C0B  1C03               	skipc
  3559  1C0C  2C0E               	goto	u3291
  3560  1C0D  2C0F               	goto	u3290
  3561  1C0E                     u3291:
  3562  1C0E  2C15               	goto	l2462
  3563  1C0F                     u3290:
  3564  1C0F                     l2460:
  3565  1C0F  0872               	movf	___lwmod@divisor,w
  3566  1C10  02F4               	subwf	___lwmod@dividend,f
  3567  1C11  0873               	movf	___lwmod@divisor+1,w
  3568  1C12  1C03               	skipc
  3569  1C13  03F5               	decf	___lwmod@dividend+1,f
  3570  1C14  02F5               	subwf	___lwmod@dividend+1,f
  3571  1C15                     l2462:
  3572  1C15  3001               	movlw	1
  3573  1C16                     u3305:
  3574  1C16  1003               	clrc
  3575  1C17  0CF3               	rrf	___lwmod@divisor+1,f
  3576  1C18  0CF2               	rrf	___lwmod@divisor,f
  3577  1C19  3EFF               	addlw	-1
  3578  1C1A  1D03               	skipz
  3579  1C1B  2C16               	goto	u3305
  3580  1C1C                     l2464:
  3581  1C1C  3001               	movlw	1
  3582  1C1D  02F7               	subwf	___lwmod@counter,f
  3583  1C1E  1D03               	btfss	3,2
  3584  1C1F  2C21               	goto	u3311
  3585  1C20  2C22               	goto	u3310
  3586  1C21                     u3311:
  3587  1C21  2C05               	goto	l2458
  3588  1C22                     u3310:
  3589  1C22                     l2466:
  3590  1C22  0875               	movf	___lwmod@dividend+1,w
  3591  1C23  00F3               	movwf	?___lwmod+1
  3592  1C24  0874               	movf	___lwmod@dividend,w
  3593  1C25  00F2               	movwf	?___lwmod
  3594  1C26                     l711:
  3595  1C26  0008               	return
  3596  1C27                     __end_of___lwmod:
  3597                           
  3598                           	psect	text8
  3599  1C27                     __ptext8:	
  3600 ;; *************** function ___lwdiv *****************
  3601 ;; Defined at:
  3602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  divisor         2    0[BANK0 ] unsigned int 
  3605 ;;  dividend        2    2[BANK0 ] unsigned int 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  quotient        2    5[BANK0 ] unsigned int 
  3608 ;;  counter         1    4[BANK0 ] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  2    0[BANK0 ] unsigned int 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         0       4       0       0       0
  3619 ;;      Locals:         0       3       0       0       0
  3620 ;;      Temps:          1       0       0       0       0
  3621 ;;      Totals:         1       7       0       0       0
  3622 ;;Total ram usage:        8 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_fround
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           
  3633                           ;psect for function ___lwdiv
  3634  1C27                     ___lwdiv:
  3635  1C27                     l3638:	
  3636                           ;incstack = 0
  3637                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3638                           
  3639  1C27  1283               	bcf	3,5	;RP0=0, select bank0
  3640  1C28  1303               	bcf	3,6	;RP1=0, select bank0
  3641  1C29  01A5               	clrf	___lwdiv@quotient
  3642  1C2A  01A6               	clrf	___lwdiv@quotient+1
  3643  1C2B                     l3640:
  3644  1C2B  0820               	movf	___lwdiv@divisor,w
  3645  1C2C  0421               	iorwf	___lwdiv@divisor+1,w
  3646  1C2D  1903               	btfsc	3,2
  3647  1C2E  2C30               	goto	u5791
  3648  1C2F  2C31               	goto	u5790
  3649  1C30                     u5791:
  3650  1C30  2C68               	goto	l3660
  3651  1C31                     u5790:
  3652  1C31                     l3642:
  3653  1C31  01A4               	clrf	___lwdiv@counter
  3654  1C32  0AA4               	incf	___lwdiv@counter,f
  3655  1C33  2C3F               	goto	l3648
  3656  1C34                     l3644:
  3657  1C34  3001               	movlw	1
  3658  1C35                     u5805:
  3659  1C35  1003               	clrc
  3660  1C36  0DA0               	rlf	___lwdiv@divisor,f
  3661  1C37  0DA1               	rlf	___lwdiv@divisor+1,f
  3662  1C38  3EFF               	addlw	-1
  3663  1C39  1D03               	skipz
  3664  1C3A  2C35               	goto	u5805
  3665  1C3B                     l3646:
  3666  1C3B  3001               	movlw	1
  3667  1C3C  00F8               	movwf	??___lwdiv
  3668  1C3D  0878               	movf	??___lwdiv,w
  3669  1C3E  07A4               	addwf	___lwdiv@counter,f
  3670  1C3F                     l3648:
  3671  1C3F  1FA1               	btfss	___lwdiv@divisor+1,7
  3672  1C40  2C42               	goto	u5811
  3673  1C41  2C43               	goto	u5810
  3674  1C42                     u5811:
  3675  1C42  2C34               	goto	l3644
  3676  1C43                     u5810:
  3677  1C43                     l3650:
  3678  1C43  3001               	movlw	1
  3679  1C44                     u5825:
  3680  1C44  1003               	clrc
  3681  1C45  0DA5               	rlf	___lwdiv@quotient,f
  3682  1C46  0DA6               	rlf	___lwdiv@quotient+1,f
  3683  1C47  3EFF               	addlw	-1
  3684  1C48  1D03               	skipz
  3685  1C49  2C44               	goto	u5825
  3686  1C4A  0821               	movf	___lwdiv@divisor+1,w
  3687  1C4B  0223               	subwf	___lwdiv@dividend+1,w
  3688  1C4C  1D03               	skipz
  3689  1C4D  2C50               	goto	u5835
  3690  1C4E  0820               	movf	___lwdiv@divisor,w
  3691  1C4F  0222               	subwf	___lwdiv@dividend,w
  3692  1C50                     u5835:
  3693  1C50  1C03               	skipc
  3694  1C51  2C53               	goto	u5831
  3695  1C52  2C54               	goto	u5830
  3696  1C53                     u5831:
  3697  1C53  2C5B               	goto	l3656
  3698  1C54                     u5830:
  3699  1C54                     l3652:
  3700  1C54  0820               	movf	___lwdiv@divisor,w
  3701  1C55  02A2               	subwf	___lwdiv@dividend,f
  3702  1C56  0821               	movf	___lwdiv@divisor+1,w
  3703  1C57  1C03               	skipc
  3704  1C58  03A3               	decf	___lwdiv@dividend+1,f
  3705  1C59  02A3               	subwf	___lwdiv@dividend+1,f
  3706  1C5A                     l3654:
  3707  1C5A  1425               	bsf	___lwdiv@quotient,0
  3708  1C5B                     l3656:
  3709  1C5B  3001               	movlw	1
  3710  1C5C                     u5845:
  3711  1C5C  1003               	clrc
  3712  1C5D  0CA1               	rrf	___lwdiv@divisor+1,f
  3713  1C5E  0CA0               	rrf	___lwdiv@divisor,f
  3714  1C5F  3EFF               	addlw	-1
  3715  1C60  1D03               	skipz
  3716  1C61  2C5C               	goto	u5845
  3717  1C62                     l3658:
  3718  1C62  3001               	movlw	1
  3719  1C63  02A4               	subwf	___lwdiv@counter,f
  3720  1C64  1D03               	btfss	3,2
  3721  1C65  2C67               	goto	u5851
  3722  1C66  2C68               	goto	u5850
  3723  1C67                     u5851:
  3724  1C67  2C43               	goto	l3650
  3725  1C68                     u5850:
  3726  1C68                     l3660:
  3727  1C68  0826               	movf	___lwdiv@quotient+1,w
  3728  1C69  00A1               	movwf	?___lwdiv+1
  3729  1C6A  0825               	movf	___lwdiv@quotient,w
  3730  1C6B  00A0               	movwf	?___lwdiv
  3731  1C6C                     l701:
  3732  1C6C  0008               	return
  3733  1C6D                     __end_of___lwdiv:
  3734                           
  3735                           	psect	text9
  3736  093C                     __ptext9:	
  3737 ;; *************** function ___flmul *****************
  3738 ;; Defined at:
  3739 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  b               4    8[BANK0 ] unsigned int 
  3742 ;;  a               4   12[BANK0 ] unsigned int 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  prod            4   28[BANK0 ] struct .
  3745 ;;  grs             4   22[BANK0 ] unsigned long 
  3746 ;;  temp            2   32[BANK0 ] struct .
  3747 ;;  bexp            1   27[BANK0 ] unsigned char 
  3748 ;;  aexp            1   26[BANK0 ] unsigned char 
  3749 ;;  sign            1   21[BANK0 ] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  4    8[BANK0 ] unsigned char 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3759 ;;      Params:         0       8       0       0       0
  3760 ;;      Locals:         0      13       0       0       0
  3761 ;;      Temps:          0       5       0       0       0
  3762 ;;      Totals:         0      26       0       0       0
  3763 ;;Total ram usage:       26 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    2
  3766 ;; This function calls:
  3767 ;;		__Umul8_16
  3768 ;; This function is called by:
  3769 ;;		_fround
  3770 ;;		_scale
  3771 ;;		_sprintf
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function ___flmul
  3777  093C                     ___flmul:
  3778  093C                     l2664:	
  3779                           ;incstack = 0
  3780                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3781                           
  3782  093C  1283               	bcf	3,5	;RP0=0, select bank0
  3783  093D  1303               	bcf	3,6	;RP1=0, select bank0
  3784  093E  082B               	movf	___flmul@b+3,w
  3785  093F  3980               	andlw	128
  3786  0940  00B0               	movwf	??___flmul
  3787  0941  0830               	movf	??___flmul,w
  3788  0942  00B5               	movwf	___flmul@sign
  3789  0943                     l2666:
  3790  0943  082B               	movf	___flmul@b+3,w
  3791  0944  00B0               	movwf	??___flmul
  3792  0945  0730               	addwf	??___flmul,w
  3793  0946  00B1               	movwf	??___flmul+1
  3794  0947  0831               	movf	??___flmul+1,w
  3795  0948  00BB               	movwf	___flmul@bexp
  3796  0949                     l2668:
  3797  0949  1FAA               	btfss	___flmul@b+2,7
  3798  094A  294C               	goto	u3781
  3799  094B  294D               	goto	u3780
  3800  094C                     u3781:
  3801  094C  294E               	goto	l2672
  3802  094D                     u3780:
  3803  094D                     l2670:
  3804  094D  143B               	bsf	___flmul@bexp,0
  3805  094E                     l2672:
  3806  094E  083B               	movf	___flmul@bexp,w
  3807  094F  1903               	btfsc	3,2
  3808  0950  2952               	goto	u3791
  3809  0951  2953               	goto	u3790
  3810  0952                     u3791:
  3811  0952  2962               	goto	l2680
  3812  0953                     u3790:
  3813  0953                     l2674:
  3814  0953  0A3B               	incf	___flmul@bexp,w
  3815  0954  1D03               	btfss	3,2
  3816  0955  2957               	goto	u3801
  3817  0956  2958               	goto	u3800
  3818  0957                     u3801:
  3819  0957  2960               	goto	l2678
  3820  0958                     u3800:
  3821  0958                     l2676:
  3822  0958  3000               	movlw	0
  3823  0959  00AB               	movwf	___flmul@b+3
  3824  095A  3000               	movlw	0
  3825  095B  00AA               	movwf	___flmul@b+2
  3826  095C  3000               	movlw	0
  3827  095D  00A9               	movwf	___flmul@b+1
  3828  095E  3000               	movlw	0
  3829  095F  00A8               	movwf	___flmul@b
  3830  0960                     l2678:
  3831  0960  17AA               	bsf	___flmul@b+2,7
  3832  0961  296A               	goto	l2682
  3833  0962                     l2680:
  3834  0962  3000               	movlw	0
  3835  0963  00AB               	movwf	___flmul@b+3
  3836  0964  3000               	movlw	0
  3837  0965  00AA               	movwf	___flmul@b+2
  3838  0966  3000               	movlw	0
  3839  0967  00A9               	movwf	___flmul@b+1
  3840  0968  3000               	movlw	0
  3841  0969  00A8               	movwf	___flmul@b
  3842  096A                     l2682:
  3843  096A  082F               	movf	___flmul@a+3,w
  3844  096B  3980               	andlw	128
  3845  096C  00B0               	movwf	??___flmul
  3846  096D  0830               	movf	??___flmul,w
  3847  096E  06B5               	xorwf	___flmul@sign,f
  3848  096F                     l2684:
  3849  096F  082F               	movf	___flmul@a+3,w
  3850  0970  00B0               	movwf	??___flmul
  3851  0971  0730               	addwf	??___flmul,w
  3852  0972  00B1               	movwf	??___flmul+1
  3853  0973  0831               	movf	??___flmul+1,w
  3854  0974  00BA               	movwf	___flmul@aexp
  3855  0975                     l2686:
  3856  0975  1FAE               	btfss	___flmul@a+2,7
  3857  0976  2978               	goto	u3811
  3858  0977  2979               	goto	u3810
  3859  0978                     u3811:
  3860  0978  297A               	goto	l2690
  3861  0979                     u3810:
  3862  0979                     l2688:
  3863  0979  143A               	bsf	___flmul@aexp,0
  3864  097A                     l2690:
  3865  097A  083A               	movf	___flmul@aexp,w
  3866  097B  1903               	btfsc	3,2
  3867  097C  297E               	goto	u3821
  3868  097D  297F               	goto	u3820
  3869  097E                     u3821:
  3870  097E  298E               	goto	l2698
  3871  097F                     u3820:
  3872  097F                     l2692:
  3873  097F  0A3A               	incf	___flmul@aexp,w
  3874  0980  1D03               	btfss	3,2
  3875  0981  2983               	goto	u3831
  3876  0982  2984               	goto	u3830
  3877  0983                     u3831:
  3878  0983  298C               	goto	l2696
  3879  0984                     u3830:
  3880  0984                     l2694:
  3881  0984  3000               	movlw	0
  3882  0985  00AF               	movwf	___flmul@a+3
  3883  0986  3000               	movlw	0
  3884  0987  00AE               	movwf	___flmul@a+2
  3885  0988  3000               	movlw	0
  3886  0989  00AD               	movwf	___flmul@a+1
  3887  098A  3000               	movlw	0
  3888  098B  00AC               	movwf	___flmul@a
  3889  098C                     l2696:
  3890  098C  17AE               	bsf	___flmul@a+2,7
  3891  098D  2996               	goto	l2700
  3892  098E                     l2698:
  3893  098E  3000               	movlw	0
  3894  098F  00AF               	movwf	___flmul@a+3
  3895  0990  3000               	movlw	0
  3896  0991  00AE               	movwf	___flmul@a+2
  3897  0992  3000               	movlw	0
  3898  0993  00AD               	movwf	___flmul@a+1
  3899  0994  3000               	movlw	0
  3900  0995  00AC               	movwf	___flmul@a
  3901  0996                     l2700:
  3902  0996  083A               	movf	___flmul@aexp,w
  3903  0997  1903               	btfsc	3,2
  3904  0998  299A               	goto	u3841
  3905  0999  299B               	goto	u3840
  3906  099A                     u3841:
  3907  099A  29A0               	goto	l2704
  3908  099B                     u3840:
  3909  099B                     l2702:
  3910  099B  083B               	movf	___flmul@bexp,w
  3911  099C  1D03               	btfss	3,2
  3912  099D  299F               	goto	u3851
  3913  099E  29A0               	goto	u3850
  3914  099F                     u3851:
  3915  099F  29A9               	goto	l2708
  3916  09A0                     u3850:
  3917  09A0                     l2704:
  3918  09A0  3000               	movlw	0
  3919  09A1  00AB               	movwf	?___flmul+3
  3920  09A2  3000               	movlw	0
  3921  09A3  00AA               	movwf	?___flmul+2
  3922  09A4  3000               	movlw	0
  3923  09A5  00A9               	movwf	?___flmul+1
  3924  09A6  3000               	movlw	0
  3925  09A7  00A8               	movwf	?___flmul
  3926  09A8  2C9C               	goto	l818
  3927  09A9                     l2708:
  3928  09A9  0828               	movf	___flmul@b,w
  3929  09AA  00B0               	movwf	??___flmul
  3930  09AB  0830               	movf	??___flmul,w
  3931  09AC  00F2               	movwf	__Umul8_16@multiplicand
  3932  09AD  082E               	movf	___flmul@a+2,w
  3933  09AE  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  3934  09B3  0873               	movf	?__Umul8_16+1,w
  3935  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  3936  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  3937  09B6  00C1               	movwf	___flmul@temp+1
  3938  09B7  0872               	movf	?__Umul8_16,w
  3939  09B8  00C0               	movwf	___flmul@temp
  3940  09B9                     l2710:
  3941  09B9  0840               	movf	___flmul@temp,w
  3942  09BA  00B0               	movwf	??___flmul
  3943  09BB  01B1               	clrf	??___flmul+1
  3944  09BC  01B2               	clrf	??___flmul+2
  3945  09BD  01B3               	clrf	??___flmul+3
  3946  09BE  0833               	movf	??___flmul+3,w
  3947  09BF  00B9               	movwf	___flmul@grs+3
  3948  09C0  0832               	movf	??___flmul+2,w
  3949  09C1  00B8               	movwf	___flmul@grs+2
  3950  09C2  0831               	movf	??___flmul+1,w
  3951  09C3  00B7               	movwf	___flmul@grs+1
  3952  09C4  0830               	movf	??___flmul,w
  3953  09C5  00B6               	movwf	___flmul@grs
  3954  09C6                     l2712:
  3955  09C6  0841               	movf	___flmul@temp+1,w
  3956  09C7  00B0               	movwf	??___flmul
  3957  09C8  01B1               	clrf	??___flmul+1
  3958  09C9  01B2               	clrf	??___flmul+2
  3959  09CA  01B3               	clrf	??___flmul+3
  3960  09CB  0833               	movf	??___flmul+3,w
  3961  09CC  00BF               	movwf	___flmul@prod+3
  3962  09CD  0832               	movf	??___flmul+2,w
  3963  09CE  00BE               	movwf	___flmul@prod+2
  3964  09CF  0831               	movf	??___flmul+1,w
  3965  09D0  00BD               	movwf	___flmul@prod+1
  3966  09D1  0830               	movf	??___flmul,w
  3967  09D2  00BC               	movwf	___flmul@prod
  3968  09D3  0829               	movf	___flmul@b+1,w
  3969  09D4  00B0               	movwf	??___flmul
  3970  09D5  0830               	movf	??___flmul,w
  3971  09D6  00F2               	movwf	__Umul8_16@multiplicand
  3972  09D7  082D               	movf	___flmul@a+1,w
  3973  09D8  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  3974  09DD  0873               	movf	?__Umul8_16+1,w
  3975  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  3976  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  3977  09E0  00C1               	movwf	___flmul@temp+1
  3978  09E1  0872               	movf	?__Umul8_16,w
  3979  09E2  00C0               	movwf	___flmul@temp
  3980  09E3                     l2714:
  3981  09E3  0840               	movf	___flmul@temp,w
  3982  09E4  00B0               	movwf	??___flmul
  3983  09E5  01B1               	clrf	??___flmul+1
  3984  09E6  01B2               	clrf	??___flmul+2
  3985  09E7  01B3               	clrf	??___flmul+3
  3986  09E8  0830               	movf	??___flmul,w
  3987  09E9  07B6               	addwf	___flmul@grs,f
  3988  09EA  0831               	movf	??___flmul+1,w
  3989  09EB  1103               	clrz
  3990  09EC  1803               	skipnc
  3991  09ED  3E01               	addlw	1
  3992  09EE  1903               	skipnz
  3993  09EF  29F1               	goto	u3861
  3994  09F0  07B7               	addwf	___flmul@grs+1,f
  3995  09F1                     u3861:
  3996  09F1  0832               	movf	??___flmul+2,w
  3997  09F2  1103               	clrz
  3998  09F3  1803               	skipnc
  3999  09F4  3E01               	addlw	1
  4000  09F5  1903               	skipnz
  4001  09F6  29F8               	goto	u3862
  4002  09F7  07B8               	addwf	___flmul@grs+2,f
  4003  09F8                     u3862:
  4004  09F8  0833               	movf	??___flmul+3,w
  4005  09F9  1103               	clrz
  4006  09FA  1803               	skipnc
  4007  09FB  3E01               	addlw	1
  4008  09FC  1903               	skipnz
  4009  09FD  29FF               	goto	u3863
  4010  09FE  07B9               	addwf	___flmul@grs+3,f
  4011  09FF                     u3863:
  4012  09FF                     l2716:
  4013  09FF  0841               	movf	___flmul@temp+1,w
  4014  0A00  00B0               	movwf	??___flmul
  4015  0A01  01B1               	clrf	??___flmul+1
  4016  0A02  01B2               	clrf	??___flmul+2
  4017  0A03  01B3               	clrf	??___flmul+3
  4018  0A04  0830               	movf	??___flmul,w
  4019  0A05  07BC               	addwf	___flmul@prod,f
  4020  0A06  0831               	movf	??___flmul+1,w
  4021  0A07  1103               	clrz
  4022  0A08  1803               	skipnc
  4023  0A09  3E01               	addlw	1
  4024  0A0A  1903               	skipnz
  4025  0A0B  2A0D               	goto	u3871
  4026  0A0C  07BD               	addwf	___flmul@prod+1,f
  4027  0A0D                     u3871:
  4028  0A0D  0832               	movf	??___flmul+2,w
  4029  0A0E  1103               	clrz
  4030  0A0F  1803               	skipnc
  4031  0A10  3E01               	addlw	1
  4032  0A11  1903               	skipnz
  4033  0A12  2A14               	goto	u3872
  4034  0A13  07BE               	addwf	___flmul@prod+2,f
  4035  0A14                     u3872:
  4036  0A14  0833               	movf	??___flmul+3,w
  4037  0A15  1103               	clrz
  4038  0A16  1803               	skipnc
  4039  0A17  3E01               	addlw	1
  4040  0A18  1903               	skipnz
  4041  0A19  2A1B               	goto	u3873
  4042  0A1A  07BF               	addwf	___flmul@prod+3,f
  4043  0A1B                     u3873:
  4044  0A1B  082A               	movf	___flmul@b+2,w
  4045  0A1C  00B0               	movwf	??___flmul
  4046  0A1D  0830               	movf	??___flmul,w
  4047  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  4048  0A1F  082C               	movf	___flmul@a,w
  4049  0A20  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4050  0A25  0873               	movf	?__Umul8_16+1,w
  4051  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4052  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4053  0A28  00C1               	movwf	___flmul@temp+1
  4054  0A29  0872               	movf	?__Umul8_16,w
  4055  0A2A  00C0               	movwf	___flmul@temp
  4056  0A2B                     l2718:
  4057  0A2B  0840               	movf	___flmul@temp,w
  4058  0A2C  00B0               	movwf	??___flmul
  4059  0A2D  01B1               	clrf	??___flmul+1
  4060  0A2E  01B2               	clrf	??___flmul+2
  4061  0A2F  01B3               	clrf	??___flmul+3
  4062  0A30  0830               	movf	??___flmul,w
  4063  0A31  07B6               	addwf	___flmul@grs,f
  4064  0A32  0831               	movf	??___flmul+1,w
  4065  0A33  1103               	clrz
  4066  0A34  1803               	skipnc
  4067  0A35  3E01               	addlw	1
  4068  0A36  1903               	skipnz
  4069  0A37  2A39               	goto	u3881
  4070  0A38  07B7               	addwf	___flmul@grs+1,f
  4071  0A39                     u3881:
  4072  0A39  0832               	movf	??___flmul+2,w
  4073  0A3A  1103               	clrz
  4074  0A3B  1803               	skipnc
  4075  0A3C  3E01               	addlw	1
  4076  0A3D  1903               	skipnz
  4077  0A3E  2A40               	goto	u3882
  4078  0A3F  07B8               	addwf	___flmul@grs+2,f
  4079  0A40                     u3882:
  4080  0A40  0833               	movf	??___flmul+3,w
  4081  0A41  1103               	clrz
  4082  0A42  1803               	skipnc
  4083  0A43  3E01               	addlw	1
  4084  0A44  1903               	skipnz
  4085  0A45  2A47               	goto	u3883
  4086  0A46  07B9               	addwf	___flmul@grs+3,f
  4087  0A47                     u3883:
  4088  0A47                     l2720:
  4089  0A47  0841               	movf	___flmul@temp+1,w
  4090  0A48  00B0               	movwf	??___flmul
  4091  0A49  01B1               	clrf	??___flmul+1
  4092  0A4A  01B2               	clrf	??___flmul+2
  4093  0A4B  01B3               	clrf	??___flmul+3
  4094  0A4C  0830               	movf	??___flmul,w
  4095  0A4D  07BC               	addwf	___flmul@prod,f
  4096  0A4E  0831               	movf	??___flmul+1,w
  4097  0A4F  1103               	clrz
  4098  0A50  1803               	skipnc
  4099  0A51  3E01               	addlw	1
  4100  0A52  1903               	skipnz
  4101  0A53  2A55               	goto	u3891
  4102  0A54  07BD               	addwf	___flmul@prod+1,f
  4103  0A55                     u3891:
  4104  0A55  0832               	movf	??___flmul+2,w
  4105  0A56  1103               	clrz
  4106  0A57  1803               	skipnc
  4107  0A58  3E01               	addlw	1
  4108  0A59  1903               	skipnz
  4109  0A5A  2A5C               	goto	u3892
  4110  0A5B  07BE               	addwf	___flmul@prod+2,f
  4111  0A5C                     u3892:
  4112  0A5C  0833               	movf	??___flmul+3,w
  4113  0A5D  1103               	clrz
  4114  0A5E  1803               	skipnc
  4115  0A5F  3E01               	addlw	1
  4116  0A60  1903               	skipnz
  4117  0A61  2A63               	goto	u3893
  4118  0A62  07BF               	addwf	___flmul@prod+3,f
  4119  0A63                     u3893:
  4120  0A63                     l2722:
  4121  0A63  3008               	movlw	8
  4122  0A64  00B0               	movwf	??___flmul
  4123  0A65                     u3905:
  4124  0A65  1003               	clrc
  4125  0A66  0DB6               	rlf	___flmul@grs,f
  4126  0A67  0DB7               	rlf	___flmul@grs+1,f
  4127  0A68  0DB8               	rlf	___flmul@grs+2,f
  4128  0A69  0DB9               	rlf	___flmul@grs+3,f
  4129  0A6A  0BB0               	decfsz	??___flmul,f
  4130  0A6B  2A65               	goto	u3905
  4131  0A6C                     l2724:
  4132  0A6C  0829               	movf	___flmul@b+1,w
  4133  0A6D  00B0               	movwf	??___flmul
  4134  0A6E  0830               	movf	??___flmul,w
  4135  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  4136  0A70  082C               	movf	___flmul@a,w
  4137  0A71  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4138  0A76  0873               	movf	?__Umul8_16+1,w
  4139  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4140  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4141  0A79  00C1               	movwf	___flmul@temp+1
  4142  0A7A  0872               	movf	?__Umul8_16,w
  4143  0A7B  00C0               	movwf	___flmul@temp
  4144  0A7C                     l2726:
  4145  0A7C  0840               	movf	___flmul@temp,w
  4146  0A7D  00B0               	movwf	??___flmul
  4147  0A7E  0841               	movf	___flmul@temp+1,w
  4148  0A7F  00B1               	movwf	??___flmul+1
  4149  0A80  01B2               	clrf	??___flmul+2
  4150  0A81  01B3               	clrf	??___flmul+3
  4151  0A82  0830               	movf	??___flmul,w
  4152  0A83  07B6               	addwf	___flmul@grs,f
  4153  0A84  0831               	movf	??___flmul+1,w
  4154  0A85  1103               	clrz
  4155  0A86  1803               	skipnc
  4156  0A87  3E01               	addlw	1
  4157  0A88  1903               	skipnz
  4158  0A89  2A8B               	goto	u3911
  4159  0A8A  07B7               	addwf	___flmul@grs+1,f
  4160  0A8B                     u3911:
  4161  0A8B  0832               	movf	??___flmul+2,w
  4162  0A8C  1103               	clrz
  4163  0A8D  1803               	skipnc
  4164  0A8E  3E01               	addlw	1
  4165  0A8F  1903               	skipnz
  4166  0A90  2A92               	goto	u3912
  4167  0A91  07B8               	addwf	___flmul@grs+2,f
  4168  0A92                     u3912:
  4169  0A92  0833               	movf	??___flmul+3,w
  4170  0A93  1103               	clrz
  4171  0A94  1803               	skipnc
  4172  0A95  3E01               	addlw	1
  4173  0A96  1903               	skipnz
  4174  0A97  2A99               	goto	u3913
  4175  0A98  07B9               	addwf	___flmul@grs+3,f
  4176  0A99                     u3913:
  4177  0A99                     l2728:
  4178  0A99  0828               	movf	___flmul@b,w
  4179  0A9A  00B0               	movwf	??___flmul
  4180  0A9B  0830               	movf	??___flmul,w
  4181  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  4182  0A9D  082D               	movf	___flmul@a+1,w
  4183  0A9E  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4184  0AA3  0873               	movf	?__Umul8_16+1,w
  4185  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4186  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4187  0AA6  00C1               	movwf	___flmul@temp+1
  4188  0AA7  0872               	movf	?__Umul8_16,w
  4189  0AA8  00C0               	movwf	___flmul@temp
  4190  0AA9                     l2730:
  4191  0AA9  0840               	movf	___flmul@temp,w
  4192  0AAA  00B0               	movwf	??___flmul
  4193  0AAB  0841               	movf	___flmul@temp+1,w
  4194  0AAC  00B1               	movwf	??___flmul+1
  4195  0AAD  01B2               	clrf	??___flmul+2
  4196  0AAE  01B3               	clrf	??___flmul+3
  4197  0AAF  0830               	movf	??___flmul,w
  4198  0AB0  07B6               	addwf	___flmul@grs,f
  4199  0AB1  0831               	movf	??___flmul+1,w
  4200  0AB2  1103               	clrz
  4201  0AB3  1803               	skipnc
  4202  0AB4  3E01               	addlw	1
  4203  0AB5  1903               	skipnz
  4204  0AB6  2AB8               	goto	u3921
  4205  0AB7  07B7               	addwf	___flmul@grs+1,f
  4206  0AB8                     u3921:
  4207  0AB8  0832               	movf	??___flmul+2,w
  4208  0AB9  1103               	clrz
  4209  0ABA  1803               	skipnc
  4210  0ABB  3E01               	addlw	1
  4211  0ABC  1903               	skipnz
  4212  0ABD  2ABF               	goto	u3922
  4213  0ABE  07B8               	addwf	___flmul@grs+2,f
  4214  0ABF                     u3922:
  4215  0ABF  0833               	movf	??___flmul+3,w
  4216  0AC0  1103               	clrz
  4217  0AC1  1803               	skipnc
  4218  0AC2  3E01               	addlw	1
  4219  0AC3  1903               	skipnz
  4220  0AC4  2AC6               	goto	u3923
  4221  0AC5  07B9               	addwf	___flmul@grs+3,f
  4222  0AC6                     u3923:
  4223  0AC6                     l2732:
  4224  0AC6  3008               	movlw	8
  4225  0AC7  00B0               	movwf	??___flmul
  4226  0AC8                     u3935:
  4227  0AC8  1003               	clrc
  4228  0AC9  0DB6               	rlf	___flmul@grs,f
  4229  0ACA  0DB7               	rlf	___flmul@grs+1,f
  4230  0ACB  0DB8               	rlf	___flmul@grs+2,f
  4231  0ACC  0DB9               	rlf	___flmul@grs+3,f
  4232  0ACD  0BB0               	decfsz	??___flmul,f
  4233  0ACE  2AC8               	goto	u3935
  4234  0ACF  0828               	movf	___flmul@b,w
  4235  0AD0  00B0               	movwf	??___flmul
  4236  0AD1  0830               	movf	??___flmul,w
  4237  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  4238  0AD3  082C               	movf	___flmul@a,w
  4239  0AD4  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4240  0AD9  0873               	movf	?__Umul8_16+1,w
  4241  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4242  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4243  0ADC  00C1               	movwf	___flmul@temp+1
  4244  0ADD  0872               	movf	?__Umul8_16,w
  4245  0ADE  00C0               	movwf	___flmul@temp
  4246  0ADF                     l2734:
  4247  0ADF  0840               	movf	___flmul@temp,w
  4248  0AE0  00B0               	movwf	??___flmul
  4249  0AE1  0841               	movf	___flmul@temp+1,w
  4250  0AE2  00B1               	movwf	??___flmul+1
  4251  0AE3  01B2               	clrf	??___flmul+2
  4252  0AE4  01B3               	clrf	??___flmul+3
  4253  0AE5  0830               	movf	??___flmul,w
  4254  0AE6  07B6               	addwf	___flmul@grs,f
  4255  0AE7  0831               	movf	??___flmul+1,w
  4256  0AE8  1103               	clrz
  4257  0AE9  1803               	skipnc
  4258  0AEA  3E01               	addlw	1
  4259  0AEB  1903               	skipnz
  4260  0AEC  2AEE               	goto	u3941
  4261  0AED  07B7               	addwf	___flmul@grs+1,f
  4262  0AEE                     u3941:
  4263  0AEE  0832               	movf	??___flmul+2,w
  4264  0AEF  1103               	clrz
  4265  0AF0  1803               	skipnc
  4266  0AF1  3E01               	addlw	1
  4267  0AF2  1903               	skipnz
  4268  0AF3  2AF5               	goto	u3942
  4269  0AF4  07B8               	addwf	___flmul@grs+2,f
  4270  0AF5                     u3942:
  4271  0AF5  0833               	movf	??___flmul+3,w
  4272  0AF6  1103               	clrz
  4273  0AF7  1803               	skipnc
  4274  0AF8  3E01               	addlw	1
  4275  0AF9  1903               	skipnz
  4276  0AFA  2AFC               	goto	u3943
  4277  0AFB  07B9               	addwf	___flmul@grs+3,f
  4278  0AFC                     u3943:
  4279  0AFC                     l2736:
  4280  0AFC  0829               	movf	___flmul@b+1,w
  4281  0AFD  00B0               	movwf	??___flmul
  4282  0AFE  0830               	movf	??___flmul,w
  4283  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  4284  0B00  082E               	movf	___flmul@a+2,w
  4285  0B01  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4286  0B06  0873               	movf	?__Umul8_16+1,w
  4287  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0B09  00C1               	movwf	___flmul@temp+1
  4290  0B0A  0872               	movf	?__Umul8_16,w
  4291  0B0B  00C0               	movwf	___flmul@temp
  4292  0B0C  0840               	movf	___flmul@temp,w
  4293  0B0D  00B0               	movwf	??___flmul
  4294  0B0E  0841               	movf	___flmul@temp+1,w
  4295  0B0F  00B1               	movwf	??___flmul+1
  4296  0B10  01B2               	clrf	??___flmul+2
  4297  0B11  01B3               	clrf	??___flmul+3
  4298  0B12  0830               	movf	??___flmul,w
  4299  0B13  07BC               	addwf	___flmul@prod,f
  4300  0B14  0831               	movf	??___flmul+1,w
  4301  0B15  1103               	clrz
  4302  0B16  1803               	skipnc
  4303  0B17  3E01               	addlw	1
  4304  0B18  1903               	skipnz
  4305  0B19  2B1B               	goto	u3951
  4306  0B1A  07BD               	addwf	___flmul@prod+1,f
  4307  0B1B                     u3951:
  4308  0B1B  0832               	movf	??___flmul+2,w
  4309  0B1C  1103               	clrz
  4310  0B1D  1803               	skipnc
  4311  0B1E  3E01               	addlw	1
  4312  0B1F  1903               	skipnz
  4313  0B20  2B22               	goto	u3952
  4314  0B21  07BE               	addwf	___flmul@prod+2,f
  4315  0B22                     u3952:
  4316  0B22  0833               	movf	??___flmul+3,w
  4317  0B23  1103               	clrz
  4318  0B24  1803               	skipnc
  4319  0B25  3E01               	addlw	1
  4320  0B26  1903               	skipnz
  4321  0B27  2B29               	goto	u3953
  4322  0B28  07BF               	addwf	___flmul@prod+3,f
  4323  0B29                     u3953:
  4324  0B29                     l2738:
  4325  0B29  082A               	movf	___flmul@b+2,w
  4326  0B2A  00B0               	movwf	??___flmul
  4327  0B2B  0830               	movf	??___flmul,w
  4328  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  4329  0B2D  082D               	movf	___flmul@a+1,w
  4330  0B2E  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4331  0B33  0873               	movf	?__Umul8_16+1,w
  4332  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4333  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4334  0B36  00C1               	movwf	___flmul@temp+1
  4335  0B37  0872               	movf	?__Umul8_16,w
  4336  0B38  00C0               	movwf	___flmul@temp
  4337  0B39                     l2740:
  4338  0B39  0840               	movf	___flmul@temp,w
  4339  0B3A  00B0               	movwf	??___flmul
  4340  0B3B  0841               	movf	___flmul@temp+1,w
  4341  0B3C  00B1               	movwf	??___flmul+1
  4342  0B3D  01B2               	clrf	??___flmul+2
  4343  0B3E  01B3               	clrf	??___flmul+3
  4344  0B3F  0830               	movf	??___flmul,w
  4345  0B40  07BC               	addwf	___flmul@prod,f
  4346  0B41  0831               	movf	??___flmul+1,w
  4347  0B42  1103               	clrz
  4348  0B43  1803               	skipnc
  4349  0B44  3E01               	addlw	1
  4350  0B45  1903               	skipnz
  4351  0B46  2B48               	goto	u3961
  4352  0B47  07BD               	addwf	___flmul@prod+1,f
  4353  0B48                     u3961:
  4354  0B48  0832               	movf	??___flmul+2,w
  4355  0B49  1103               	clrz
  4356  0B4A  1803               	skipnc
  4357  0B4B  3E01               	addlw	1
  4358  0B4C  1903               	skipnz
  4359  0B4D  2B4F               	goto	u3962
  4360  0B4E  07BE               	addwf	___flmul@prod+2,f
  4361  0B4F                     u3962:
  4362  0B4F  0833               	movf	??___flmul+3,w
  4363  0B50  1103               	clrz
  4364  0B51  1803               	skipnc
  4365  0B52  3E01               	addlw	1
  4366  0B53  1903               	skipnz
  4367  0B54  2B56               	goto	u3963
  4368  0B55  07BF               	addwf	___flmul@prod+3,f
  4369  0B56                     u3963:
  4370  0B56  082A               	movf	___flmul@b+2,w
  4371  0B57  00B0               	movwf	??___flmul
  4372  0B58  0830               	movf	??___flmul,w
  4373  0B59  00F2               	movwf	__Umul8_16@multiplicand
  4374  0B5A  082E               	movf	___flmul@a+2,w
  4375  0B5B  160A  158A  2360  120A  158A  	fcall	__Umul8_16
  4376  0B60  0873               	movf	?__Umul8_16+1,w
  4377  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4378  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4379  0B63  00C1               	movwf	___flmul@temp+1
  4380  0B64  0872               	movf	?__Umul8_16,w
  4381  0B65  00C0               	movwf	___flmul@temp
  4382  0B66                     l2742:
  4383  0B66  0840               	movf	___flmul@temp,w
  4384  0B67  00B0               	movwf	??___flmul
  4385  0B68  0841               	movf	___flmul@temp+1,w
  4386  0B69  00B1               	movwf	??___flmul+1
  4387  0B6A  01B2               	clrf	??___flmul+2
  4388  0B6B  01B3               	clrf	??___flmul+3
  4389  0B6C  3008               	movlw	8
  4390  0B6D                     u3975:
  4391  0B6D  1003               	clrc
  4392  0B6E  0DB0               	rlf	??___flmul,f
  4393  0B6F  0DB1               	rlf	??___flmul+1,f
  4394  0B70  0DB2               	rlf	??___flmul+2,f
  4395  0B71  0DB3               	rlf	??___flmul+3,f
  4396  0B72                     u3970:
  4397  0B72  3EFF               	addlw	-1
  4398  0B73  1D03               	skipz
  4399  0B74  2B6D               	goto	u3975
  4400  0B75  0830               	movf	??___flmul,w
  4401  0B76  07BC               	addwf	___flmul@prod,f
  4402  0B77  0831               	movf	??___flmul+1,w
  4403  0B78  1103               	clrz
  4404  0B79  1803               	skipnc
  4405  0B7A  3E01               	addlw	1
  4406  0B7B  1903               	skipnz
  4407  0B7C  2B7E               	goto	u3981
  4408  0B7D  07BD               	addwf	___flmul@prod+1,f
  4409  0B7E                     u3981:
  4410  0B7E  0832               	movf	??___flmul+2,w
  4411  0B7F  1103               	clrz
  4412  0B80  1803               	skipnc
  4413  0B81  3E01               	addlw	1
  4414  0B82  1903               	skipnz
  4415  0B83  2B85               	goto	u3982
  4416  0B84  07BE               	addwf	___flmul@prod+2,f
  4417  0B85                     u3982:
  4418  0B85  0833               	movf	??___flmul+3,w
  4419  0B86  1103               	clrz
  4420  0B87  1803               	skipnc
  4421  0B88  3E01               	addlw	1
  4422  0B89  1903               	skipnz
  4423  0B8A  2B8C               	goto	u3983
  4424  0B8B  07BF               	addwf	___flmul@prod+3,f
  4425  0B8C                     u3983:
  4426  0B8C                     l2744:
  4427  0B8C  0836               	movf	___flmul@grs,w
  4428  0B8D  00B0               	movwf	??___flmul
  4429  0B8E  0837               	movf	___flmul@grs+1,w
  4430  0B8F  00B1               	movwf	??___flmul+1
  4431  0B90  0838               	movf	___flmul@grs+2,w
  4432  0B91  00B2               	movwf	??___flmul+2
  4433  0B92  0839               	movf	___flmul@grs+3,w
  4434  0B93  00B3               	movwf	??___flmul+3
  4435  0B94  3018               	movlw	24
  4436  0B95                     u3995:
  4437  0B95  1003               	clrc
  4438  0B96  0CB3               	rrf	??___flmul+3,f
  4439  0B97  0CB2               	rrf	??___flmul+2,f
  4440  0B98  0CB1               	rrf	??___flmul+1,f
  4441  0B99  0CB0               	rrf	??___flmul,f
  4442  0B9A                     u3990:
  4443  0B9A  3EFF               	addlw	-1
  4444  0B9B  1D03               	skipz
  4445  0B9C  2B95               	goto	u3995
  4446  0B9D  0830               	movf	??___flmul,w
  4447  0B9E  07BC               	addwf	___flmul@prod,f
  4448  0B9F  0831               	movf	??___flmul+1,w
  4449  0BA0  1103               	clrz
  4450  0BA1  1803               	skipnc
  4451  0BA2  3E01               	addlw	1
  4452  0BA3  1903               	skipnz
  4453  0BA4  2BA6               	goto	u4001
  4454  0BA5  07BD               	addwf	___flmul@prod+1,f
  4455  0BA6                     u4001:
  4456  0BA6  0832               	movf	??___flmul+2,w
  4457  0BA7  1103               	clrz
  4458  0BA8  1803               	skipnc
  4459  0BA9  3E01               	addlw	1
  4460  0BAA  1903               	skipnz
  4461  0BAB  2BAD               	goto	u4002
  4462  0BAC  07BE               	addwf	___flmul@prod+2,f
  4463  0BAD                     u4002:
  4464  0BAD  0833               	movf	??___flmul+3,w
  4465  0BAE  1103               	clrz
  4466  0BAF  1803               	skipnc
  4467  0BB0  3E01               	addlw	1
  4468  0BB1  1903               	skipnz
  4469  0BB2  2BB4               	goto	u4003
  4470  0BB3  07BF               	addwf	___flmul@prod+3,f
  4471  0BB4                     u4003:
  4472  0BB4                     l2746:
  4473  0BB4  3008               	movlw	8
  4474  0BB5  00B0               	movwf	??___flmul
  4475  0BB6                     u4015:
  4476  0BB6  1003               	clrc
  4477  0BB7  0DB6               	rlf	___flmul@grs,f
  4478  0BB8  0DB7               	rlf	___flmul@grs+1,f
  4479  0BB9  0DB8               	rlf	___flmul@grs+2,f
  4480  0BBA  0DB9               	rlf	___flmul@grs+3,f
  4481  0BBB  0BB0               	decfsz	??___flmul,f
  4482  0BBC  2BB6               	goto	u4015
  4483  0BBD                     l2748:
  4484  0BBD  083B               	movf	___flmul@bexp,w
  4485  0BBE  073A               	addwf	___flmul@aexp,w
  4486  0BBF  00B0               	movwf	??___flmul
  4487  0BC0  01B1               	clrf	??___flmul+1
  4488  0BC1  0DB1               	rlf	??___flmul+1,f
  4489  0BC2  0830               	movf	??___flmul,w
  4490  0BC3  3E82               	addlw	130
  4491  0BC4  00C0               	movwf	___flmul@temp
  4492  0BC5  0831               	movf	??___flmul+1,w
  4493  0BC6  1803               	skipnc
  4494  0BC7  3E01               	addlw	1
  4495  0BC8  3EFF               	addlw	255
  4496  0BC9  00C1               	movwf	___flmul@temp+1
  4497  0BCA  2BE8               	goto	l2760
  4498  0BCB                     l2750:
  4499  0BCB  3001               	movlw	1
  4500  0BCC  00B0               	movwf	??___flmul
  4501  0BCD                     u4025:
  4502  0BCD  1003               	clrc
  4503  0BCE  0DBC               	rlf	___flmul@prod,f
  4504  0BCF  0DBD               	rlf	___flmul@prod+1,f
  4505  0BD0  0DBE               	rlf	___flmul@prod+2,f
  4506  0BD1  0DBF               	rlf	___flmul@prod+3,f
  4507  0BD2  0BB0               	decfsz	??___flmul,f
  4508  0BD3  2BCD               	goto	u4025
  4509  0BD4                     l2752:
  4510  0BD4  1FB9               	btfss	___flmul@grs+3,7
  4511  0BD5  2BD7               	goto	u4031
  4512  0BD6  2BD8               	goto	u4030
  4513  0BD7                     u4031:
  4514  0BD7  2BD9               	goto	l2756
  4515  0BD8                     u4030:
  4516  0BD8                     l2754:
  4517  0BD8  143C               	bsf	___flmul@prod,0
  4518  0BD9                     l2756:
  4519  0BD9  3001               	movlw	1
  4520  0BDA  00B0               	movwf	??___flmul
  4521  0BDB                     u4045:
  4522  0BDB  1003               	clrc
  4523  0BDC  0DB6               	rlf	___flmul@grs,f
  4524  0BDD  0DB7               	rlf	___flmul@grs+1,f
  4525  0BDE  0DB8               	rlf	___flmul@grs+2,f
  4526  0BDF  0DB9               	rlf	___flmul@grs+3,f
  4527  0BE0  0BB0               	decfsz	??___flmul,f
  4528  0BE1  2BDB               	goto	u4045
  4529  0BE2                     l2758:
  4530  0BE2  30FF               	movlw	255
  4531  0BE3  07C0               	addwf	___flmul@temp,f
  4532  0BE4  1803               	skipnc
  4533  0BE5  0AC1               	incf	___flmul@temp+1,f
  4534  0BE6  30FF               	movlw	255
  4535  0BE7  07C1               	addwf	___flmul@temp+1,f
  4536  0BE8                     l2760:
  4537  0BE8  1FBE               	btfss	___flmul@prod+2,7
  4538  0BE9  2BEB               	goto	u4051
  4539  0BEA  2BEC               	goto	u4050
  4540  0BEB                     u4051:
  4541  0BEB  2BCB               	goto	l2750
  4542  0BEC                     u4050:
  4543  0BEC                     l2762:
  4544  0BEC  01BA               	clrf	___flmul@aexp
  4545  0BED                     l2764:
  4546  0BED  1FB9               	btfss	___flmul@grs+3,7
  4547  0BEE  2BF0               	goto	u4061
  4548  0BEF  2BF1               	goto	u4060
  4549  0BF0                     u4061:
  4550  0BF0  2C0D               	goto	l2772
  4551  0BF1                     u4060:
  4552  0BF1                     l2766:
  4553  0BF1  30FF               	movlw	255
  4554  0BF2  0536               	andwf	___flmul@grs,w
  4555  0BF3  00B0               	movwf	??___flmul
  4556  0BF4  30FF               	movlw	255
  4557  0BF5  0537               	andwf	___flmul@grs+1,w
  4558  0BF6  00B1               	movwf	??___flmul+1
  4559  0BF7  30FF               	movlw	255
  4560  0BF8  0538               	andwf	___flmul@grs+2,w
  4561  0BF9  00B2               	movwf	??___flmul+2
  4562  0BFA  307F               	movlw	127
  4563  0BFB  0539               	andwf	___flmul@grs+3,w
  4564  0BFC  00B3               	movwf	??___flmul+3
  4565  0BFD  0833               	movf	??___flmul+3,w
  4566  0BFE  0432               	iorwf	??___flmul+2,w
  4567  0BFF  0431               	iorwf	??___flmul+1,w
  4568  0C00  0430               	iorwf	??___flmul,w
  4569  0C01  1903               	skipnz
  4570  0C02  2C04               	goto	u4071
  4571  0C03  2C05               	goto	u4070
  4572  0C04                     u4071:
  4573  0C04  2C08               	goto	l824
  4574  0C05                     u4070:
  4575  0C05                     l2768:
  4576  0C05  01BA               	clrf	___flmul@aexp
  4577  0C06  0ABA               	incf	___flmul@aexp,f
  4578  0C07  2C0D               	goto	l2772
  4579  0C08                     l824:
  4580  0C08  1C3C               	btfss	___flmul@prod,0
  4581  0C09  2C0B               	goto	u4081
  4582  0C0A  2C0C               	goto	u4080
  4583  0C0B                     u4081:
  4584  0C0B  2C0D               	goto	l2772
  4585  0C0C                     u4080:
  4586  0C0C  2C05               	goto	l2768
  4587  0C0D                     l2772:
  4588  0C0D  083A               	movf	___flmul@aexp,w
  4589  0C0E  1903               	btfsc	3,2
  4590  0C0F  2C11               	goto	u4091
  4591  0C10  2C12               	goto	u4090
  4592  0C11                     u4091:
  4593  0C11  2C43               	goto	l2782
  4594  0C12                     u4090:
  4595  0C12                     l2774:
  4596  0C12  3001               	movlw	1
  4597  0C13  07BC               	addwf	___flmul@prod,f
  4598  0C14  3000               	movlw	0
  4599  0C15  1803               	skipnc
  4600  0C16  3001               	movlw	1
  4601  0C17  07BD               	addwf	___flmul@prod+1,f
  4602  0C18  3000               	movlw	0
  4603  0C19  1803               	skipnc
  4604  0C1A  3001               	movlw	1
  4605  0C1B  07BE               	addwf	___flmul@prod+2,f
  4606  0C1C  3000               	movlw	0
  4607  0C1D  1803               	skipnc
  4608  0C1E  3001               	movlw	1
  4609  0C1F  07BF               	addwf	___flmul@prod+3,f
  4610  0C20                     l2776:
  4611  0C20  1C3F               	btfss	___flmul@prod+3,0
  4612  0C21  2C23               	goto	u4101
  4613  0C22  2C24               	goto	u4100
  4614  0C23                     u4101:
  4615  0C23  2C43               	goto	l2782
  4616  0C24                     u4100:
  4617  0C24                     l2778:
  4618  0C24  083C               	movf	___flmul@prod,w
  4619  0C25  00B0               	movwf	??___flmul
  4620  0C26  083D               	movf	___flmul@prod+1,w
  4621  0C27  00B1               	movwf	??___flmul+1
  4622  0C28  083E               	movf	___flmul@prod+2,w
  4623  0C29  00B2               	movwf	??___flmul+2
  4624  0C2A  083F               	movf	___flmul@prod+3,w
  4625  0C2B  00B3               	movwf	??___flmul+3
  4626  0C2C  3001               	movlw	1
  4627  0C2D  00B4               	movwf	??___flmul+4
  4628  0C2E                     u4115:
  4629  0C2E  0D33               	rlf	??___flmul+3,w
  4630  0C2F  0CB3               	rrf	??___flmul+3,f
  4631  0C30  0CB2               	rrf	??___flmul+2,f
  4632  0C31  0CB1               	rrf	??___flmul+1,f
  4633  0C32  0CB0               	rrf	??___flmul,f
  4634  0C33                     u4110:
  4635  0C33  0BB4               	decfsz	??___flmul+4,f
  4636  0C34  2C2E               	goto	u4115
  4637  0C35  0833               	movf	??___flmul+3,w
  4638  0C36  00BF               	movwf	___flmul@prod+3
  4639  0C37  0832               	movf	??___flmul+2,w
  4640  0C38  00BE               	movwf	___flmul@prod+2
  4641  0C39  0831               	movf	??___flmul+1,w
  4642  0C3A  00BD               	movwf	___flmul@prod+1
  4643  0C3B  0830               	movf	??___flmul,w
  4644  0C3C  00BC               	movwf	___flmul@prod
  4645  0C3D                     l2780:
  4646  0C3D  3001               	movlw	1
  4647  0C3E  07C0               	addwf	___flmul@temp,f
  4648  0C3F  1803               	skipnc
  4649  0C40  0AC1               	incf	___flmul@temp+1,f
  4650  0C41  3000               	movlw	0
  4651  0C42  07C1               	addwf	___flmul@temp+1,f
  4652  0C43                     l2782:
  4653  0C43  0841               	movf	___flmul@temp+1,w
  4654  0C44  3A80               	xorlw	128
  4655  0C45  00FF               	movwf	btemp+1
  4656  0C46  3080               	movlw	128
  4657  0C47  027F               	subwf	btemp+1,w
  4658  0C48  1D03               	skipz
  4659  0C49  2C4C               	goto	u4125
  4660  0C4A  30FF               	movlw	255
  4661  0C4B  0240               	subwf	___flmul@temp,w
  4662  0C4C                     u4125:
  4663  0C4C  1C03               	skipc
  4664  0C4D  2C4F               	goto	u4121
  4665  0C4E  2C50               	goto	u4120
  4666  0C4F                     u4121:
  4667  0C4F  2C5B               	goto	l2786
  4668  0C50                     u4120:
  4669  0C50                     l2784:
  4670  0C50  307F               	movlw	127
  4671  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  4672  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  4673  0C53  00BF               	movwf	___flmul@prod+3
  4674  0C54  3080               	movlw	128
  4675  0C55  00BE               	movwf	___flmul@prod+2
  4676  0C56  3000               	movlw	0
  4677  0C57  00BD               	movwf	___flmul@prod+1
  4678  0C58  3000               	movlw	0
  4679  0C59  00BC               	movwf	___flmul@prod
  4680  0C5A  2C90               	goto	l830
  4681  0C5B                     l2786:
  4682  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  4683  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  4684  0C5D  0841               	movf	___flmul@temp+1,w
  4685  0C5E  3A80               	xorlw	128
  4686  0C5F  00FF               	movwf	btemp+1
  4687  0C60  3080               	movlw	128
  4688  0C61  027F               	subwf	btemp+1,w
  4689  0C62  1D03               	skipz
  4690  0C63  2C66               	goto	u4135
  4691  0C64  3001               	movlw	1
  4692  0C65  0240               	subwf	___flmul@temp,w
  4693  0C66                     u4135:
  4694  0C66  1803               	skipnc
  4695  0C67  2C69               	goto	u4131
  4696  0C68  2C6A               	goto	u4130
  4697  0C69                     u4131:
  4698  0C69  2C76               	goto	l2792
  4699  0C6A                     u4130:
  4700  0C6A                     l2788:
  4701  0C6A  3000               	movlw	0
  4702  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  4703  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  4704  0C6D  00BF               	movwf	___flmul@prod+3
  4705  0C6E  3000               	movlw	0
  4706  0C6F  00BE               	movwf	___flmul@prod+2
  4707  0C70  3000               	movlw	0
  4708  0C71  00BD               	movwf	___flmul@prod+1
  4709  0C72  3000               	movlw	0
  4710  0C73  00BC               	movwf	___flmul@prod
  4711  0C74                     l2790:
  4712  0C74  01B5               	clrf	___flmul@sign
  4713  0C75  2C90               	goto	l830
  4714  0C76                     l2792:
  4715  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  4716  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  4717  0C78  0840               	movf	___flmul@temp,w
  4718  0C79  00B0               	movwf	??___flmul
  4719  0C7A  0830               	movf	??___flmul,w
  4720  0C7B  00BB               	movwf	___flmul@bexp
  4721  0C7C  30FF               	movlw	255
  4722  0C7D  05BC               	andwf	___flmul@prod,f
  4723  0C7E  30FF               	movlw	255
  4724  0C7F  05BD               	andwf	___flmul@prod+1,f
  4725  0C80  307F               	movlw	127
  4726  0C81  05BE               	andwf	___flmul@prod+2,f
  4727  0C82  3000               	movlw	0
  4728  0C83  05BF               	andwf	___flmul@prod+3,f
  4729  0C84                     l2794:
  4730  0C84  1C3B               	btfss	___flmul@bexp,0
  4731  0C85  2C87               	goto	u4141
  4732  0C86  2C88               	goto	u4140
  4733  0C87                     u4141:
  4734  0C87  2C89               	goto	l2798
  4735  0C88                     u4140:
  4736  0C88                     l2796:
  4737  0C88  17BE               	bsf	___flmul@prod+2,7
  4738  0C89                     l2798:
  4739  0C89  083B               	movf	___flmul@bexp,w
  4740  0C8A  00B0               	movwf	??___flmul
  4741  0C8B  1003               	clrc
  4742  0C8C  0C30               	rrf	??___flmul,w
  4743  0C8D  00B1               	movwf	??___flmul+1
  4744  0C8E  0831               	movf	??___flmul+1,w
  4745  0C8F  00BF               	movwf	___flmul@prod+3
  4746  0C90                     l830:
  4747  0C90  0835               	movf	___flmul@sign,w
  4748  0C91  00B0               	movwf	??___flmul
  4749  0C92  0830               	movf	??___flmul,w
  4750  0C93  04BF               	iorwf	___flmul@prod+3,f
  4751  0C94                     l2800:
  4752  0C94  083F               	movf	___flmul@prod+3,w
  4753  0C95  00AB               	movwf	?___flmul+3
  4754  0C96  083E               	movf	___flmul@prod+2,w
  4755  0C97  00AA               	movwf	?___flmul+2
  4756  0C98  083D               	movf	___flmul@prod+1,w
  4757  0C99  00A9               	movwf	?___flmul+1
  4758  0C9A  083C               	movf	___flmul@prod,w
  4759  0C9B  00A8               	movwf	?___flmul
  4760  0C9C                     l818:
  4761  0C9C  0008               	return
  4762  0C9D                     __end_of___flmul:
  4763                           
  4764                           	psect	text10
  4765  1B60                     __ptext10:	
  4766 ;; *************** function __Umul8_16 *****************
  4767 ;; Defined at:
  4768 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  multiplier      1    wreg     unsigned char 
  4771 ;;  multiplicand    1    2[COMMON] unsigned char 
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;  multiplier      1   10[COMMON] unsigned char 
  4774 ;;  word_mpld       2    8[COMMON] unsigned int 
  4775 ;;  product         2    6[COMMON] unsigned int 
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  2    2[COMMON] unsigned int 
  4778 ;; Registers used:
  4779 ;;		wreg, status,2, status,0
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4785 ;;      Params:         2       0       0       0       0
  4786 ;;      Locals:         5       0       0       0       0
  4787 ;;      Temps:          2       0       0       0       0
  4788 ;;      Totals:         9       0       0       0       0
  4789 ;;Total ram usage:        9 bytes
  4790 ;; Hardware stack levels used:    1
  4791 ;; Hardware stack levels required when called:    1
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		___flmul
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           
  4800                           ;psect for function __Umul8_16
  4801  1B60                     __Umul8_16:
  4802                           
  4803                           ;incstack = 0
  4804                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4805                           ;__Umul8_16@multiplier stored from wreg
  4806  1B60  00FA               	movwf	__Umul8_16@multiplier
  4807  1B61                     l2302:
  4808  1B61  01F6               	clrf	__Umul8_16@product
  4809  1B62  01F7               	clrf	__Umul8_16@product+1
  4810  1B63                     l2304:
  4811  1B63  0872               	movf	__Umul8_16@multiplicand,w
  4812  1B64  00F4               	movwf	??__Umul8_16
  4813  1B65  01F5               	clrf	??__Umul8_16+1
  4814  1B66  0874               	movf	??__Umul8_16,w
  4815  1B67  00F8               	movwf	__Umul8_16@word_mpld
  4816  1B68  0875               	movf	??__Umul8_16+1,w
  4817  1B69  00F9               	movwf	__Umul8_16@word_mpld+1
  4818  1B6A                     l2306:
  4819  1B6A  1C7A               	btfss	__Umul8_16@multiplier,0
  4820  1B6B  2B6D               	goto	u2901
  4821  1B6C  2B6E               	goto	u2900
  4822  1B6D                     u2901:
  4823  1B6D  2B74               	goto	l837
  4824  1B6E                     u2900:
  4825  1B6E                     l2308:
  4826  1B6E  0878               	movf	__Umul8_16@word_mpld,w
  4827  1B6F  07F6               	addwf	__Umul8_16@product,f
  4828  1B70  1803               	skipnc
  4829  1B71  0AF7               	incf	__Umul8_16@product+1,f
  4830  1B72  0879               	movf	__Umul8_16@word_mpld+1,w
  4831  1B73  07F7               	addwf	__Umul8_16@product+1,f
  4832  1B74                     l837:
  4833  1B74  3001               	movlw	1
  4834  1B75                     u2915:
  4835  1B75  1003               	clrc
  4836  1B76  0DF8               	rlf	__Umul8_16@word_mpld,f
  4837  1B77  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  4838  1B78  3EFF               	addlw	-1
  4839  1B79  1D03               	skipz
  4840  1B7A  2B75               	goto	u2915
  4841  1B7B  1003               	clrc
  4842  1B7C  0CFA               	rrf	__Umul8_16@multiplier,f
  4843  1B7D                     l2310:
  4844  1B7D  087A               	movf	__Umul8_16@multiplier,w
  4845  1B7E  1D03               	btfss	3,2
  4846  1B7F  2B81               	goto	u2921
  4847  1B80  2B82               	goto	u2920
  4848  1B81                     u2921:
  4849  1B81  2B6A               	goto	l2306
  4850  1B82                     u2920:
  4851  1B82                     l2312:
  4852  1B82  0877               	movf	__Umul8_16@product+1,w
  4853  1B83  00F3               	movwf	?__Umul8_16+1
  4854  1B84  0876               	movf	__Umul8_16@product,w
  4855  1B85  00F2               	movwf	?__Umul8_16
  4856  1B86                     l839:
  4857  1B86  0008               	return
  4858  1B87                     __end_of__Umul8_16:
  4859                           
  4860                           	psect	text11
  4861  1020                     __ptext11:	
  4862 ;; *************** function __tdiv_to_l_ *****************
  4863 ;; Defined at:
  4864 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  f1              4    2[COMMON] float 
  4867 ;;  f2              4    6[COMMON] float 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  quot            4    4[BANK0 ] unsigned long 
  4870 ;;  exp1            1    9[BANK0 ] unsigned char 
  4871 ;;  cntr            1    8[BANK0 ] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  4    2[COMMON] unsigned long 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4881 ;;      Params:         8       0       0       0       0
  4882 ;;      Locals:         0       6       0       0       0
  4883 ;;      Temps:          0       4       0       0       0
  4884 ;;      Totals:         8      10       0       0       0
  4885 ;;Total ram usage:       18 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    1
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_sprintf
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           
  4896                           ;psect for function __tdiv_to_l_
  4897  1020                     __tdiv_to_l_:
  4898  1020                     l2894:	
  4899                           ;incstack = 0
  4900                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4901                           
  4902  1020  0872               	movf	__tdiv_to_l_@f1,w
  4903  1021  1283               	bcf	3,5	;RP0=0, select bank0
  4904  1022  1303               	bcf	3,6	;RP1=0, select bank0
  4905  1023  00A0               	movwf	??__tdiv_to_l_
  4906  1024  0873               	movf	__tdiv_to_l_@f1+1,w
  4907  1025  00A1               	movwf	??__tdiv_to_l_+1
  4908  1026  0874               	movf	__tdiv_to_l_@f1+2,w
  4909  1027  00A2               	movwf	??__tdiv_to_l_+2
  4910  1028  1003               	clrc
  4911  1029  0D21               	rlf	??__tdiv_to_l_+1,w
  4912  102A  0D22               	rlf	??__tdiv_to_l_+2,w
  4913  102B  00A3               	movwf	??__tdiv_to_l_+3
  4914  102C  0823               	movf	??__tdiv_to_l_+3,w
  4915  102D  00A9               	movwf	__tdiv_to_l_@exp1
  4916  102E  0829               	movf	__tdiv_to_l_@exp1,w
  4917  102F  1D03               	btfss	3,2
  4918  1030  2832               	goto	u4461
  4919  1031  2833               	goto	u4460
  4920  1032                     u4461:
  4921  1032  283C               	goto	l2900
  4922  1033                     u4460:
  4923  1033                     l2896:
  4924  1033  3000               	movlw	0
  4925  1034  00F5               	movwf	?__tdiv_to_l_+3
  4926  1035  3000               	movlw	0
  4927  1036  00F4               	movwf	?__tdiv_to_l_+2
  4928  1037  3000               	movlw	0
  4929  1038  00F3               	movwf	?__tdiv_to_l_+1
  4930  1039  3000               	movlw	0
  4931  103A  00F2               	movwf	?__tdiv_to_l_
  4932  103B  28DC               	goto	l612
  4933  103C                     l2900:
  4934  103C  0876               	movf	__tdiv_to_l_@f2,w
  4935  103D  00A0               	movwf	??__tdiv_to_l_
  4936  103E  0877               	movf	__tdiv_to_l_@f2+1,w
  4937  103F  00A1               	movwf	??__tdiv_to_l_+1
  4938  1040  0878               	movf	__tdiv_to_l_@f2+2,w
  4939  1041  00A2               	movwf	??__tdiv_to_l_+2
  4940  1042  1003               	clrc
  4941  1043  0D21               	rlf	??__tdiv_to_l_+1,w
  4942  1044  0D22               	rlf	??__tdiv_to_l_+2,w
  4943  1045  00A3               	movwf	??__tdiv_to_l_+3
  4944  1046  0823               	movf	??__tdiv_to_l_+3,w
  4945  1047  00A8               	movwf	__tdiv_to_l_@cntr
  4946  1048  0828               	movf	__tdiv_to_l_@cntr,w
  4947  1049  1D03               	btfss	3,2
  4948  104A  284C               	goto	u4471
  4949  104B  284D               	goto	u4470
  4950  104C                     u4471:
  4951  104C  284E               	goto	l613
  4952  104D                     u4470:
  4953  104D  2833               	goto	l2896
  4954  104E                     l613:
  4955  104E  17F3               	bsf	__tdiv_to_l_@f1+1,7
  4956  104F                     l2906:
  4957  104F  30FF               	movlw	255
  4958  1050  05F2               	andwf	__tdiv_to_l_@f1,f
  4959  1051  30FF               	movlw	255
  4960  1052  05F3               	andwf	__tdiv_to_l_@f1+1,f
  4961  1053  3000               	movlw	0
  4962  1054  05F4               	andwf	__tdiv_to_l_@f1+2,f
  4963  1055                     l2908:
  4964  1055  17F7               	bsf	__tdiv_to_l_@f2+1,7
  4965  1056  30FF               	movlw	255
  4966  1057  05F6               	andwf	__tdiv_to_l_@f2,f
  4967  1058  30FF               	movlw	255
  4968  1059  05F7               	andwf	__tdiv_to_l_@f2+1,f
  4969  105A  3000               	movlw	0
  4970  105B  05F8               	andwf	__tdiv_to_l_@f2+2,f
  4971  105C  3000               	movlw	0
  4972  105D  00A7               	movwf	__tdiv_to_l_@quot+3
  4973  105E  3000               	movlw	0
  4974  105F  00A6               	movwf	__tdiv_to_l_@quot+2
  4975  1060  3000               	movlw	0
  4976  1061  00A5               	movwf	__tdiv_to_l_@quot+1
  4977  1062  3000               	movlw	0
  4978  1063  00A4               	movwf	__tdiv_to_l_@quot
  4979  1064                     l2910:
  4980  1064  307F               	movlw	127
  4981  1065  02A9               	subwf	__tdiv_to_l_@exp1,f
  4982  1066                     l2912:
  4983  1066  3098               	movlw	152
  4984  1067  0728               	addwf	__tdiv_to_l_@cntr,w
  4985  1068  00A0               	movwf	??__tdiv_to_l_
  4986  1069  0820               	movf	??__tdiv_to_l_,w
  4987  106A  02A9               	subwf	__tdiv_to_l_@exp1,f
  4988  106B  3018               	movlw	24
  4989  106C  00A0               	movwf	??__tdiv_to_l_
  4990  106D  0820               	movf	??__tdiv_to_l_,w
  4991  106E  00A8               	movwf	__tdiv_to_l_@cntr
  4992  106F                     l2914:
  4993  106F  3001               	movlw	1
  4994  1070  00A0               	movwf	??__tdiv_to_l_
  4995  1071                     u4485:
  4996  1071  1003               	clrc
  4997  1072  0DA4               	rlf	__tdiv_to_l_@quot,f
  4998  1073  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4999  1074  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5000  1075  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5001  1076  0BA0               	decfsz	??__tdiv_to_l_,f
  5002  1077  2871               	goto	u4485
  5003  1078                     l2916:
  5004  1078  0878               	movf	__tdiv_to_l_@f2+2,w
  5005  1079  0274               	subwf	__tdiv_to_l_@f1+2,w
  5006  107A  1D03               	skipz
  5007  107B  2882               	goto	u4495
  5008  107C  0877               	movf	__tdiv_to_l_@f2+1,w
  5009  107D  0273               	subwf	__tdiv_to_l_@f1+1,w
  5010  107E  1D03               	skipz
  5011  107F  2882               	goto	u4495
  5012  1080  0876               	movf	__tdiv_to_l_@f2,w
  5013  1081  0272               	subwf	__tdiv_to_l_@f1,w
  5014  1082                     u4495:
  5015  1082  1C03               	skipc
  5016  1083  2885               	goto	u4491
  5017  1084  2886               	goto	u4490
  5018  1085                     u4491:
  5019  1085  2891               	goto	l2922
  5020  1086                     u4490:
  5021  1086                     l2918:
  5022  1086  0876               	movf	__tdiv_to_l_@f2,w
  5023  1087  02F2               	subwf	__tdiv_to_l_@f1,f
  5024  1088  0877               	movf	__tdiv_to_l_@f2+1,w
  5025  1089  1C03               	skipc
  5026  108A  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5027  108B  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5028  108C  0878               	movf	__tdiv_to_l_@f2+2,w
  5029  108D  1C03               	skipc
  5030  108E  0A78               	incf	__tdiv_to_l_@f2+2,w
  5031  108F  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5032  1090                     l2920:
  5033  1090  1424               	bsf	__tdiv_to_l_@quot,0
  5034  1091                     l2922:
  5035  1091  3001               	movlw	1
  5036  1092                     u4505:
  5037  1092  1003               	clrc
  5038  1093  0DF2               	rlf	__tdiv_to_l_@f1,f
  5039  1094  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5040  1095  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5041  1096  3EFF               	addlw	-1
  5042  1097  1D03               	skipz
  5043  1098  2892               	goto	u4505
  5044  1099                     l2924:
  5045  1099  3001               	movlw	1
  5046  109A  02A8               	subwf	__tdiv_to_l_@cntr,f
  5047  109B  1D03               	btfss	3,2
  5048  109C  289E               	goto	u4511
  5049  109D  289F               	goto	u4510
  5050  109E                     u4511:
  5051  109E  286F               	goto	l2914
  5052  109F                     u4510:
  5053  109F                     l616:
  5054  109F  1FA9               	btfss	__tdiv_to_l_@exp1,7
  5055  10A0  28A2               	goto	u4521
  5056  10A1  28A3               	goto	u4520
  5057  10A2                     u4521:
  5058  10A2  28BD               	goto	l2934
  5059  10A3                     u4520:
  5060  10A3                     l2926:
  5061  10A3  0829               	movf	__tdiv_to_l_@exp1,w
  5062  10A4  3A80               	xorlw	128
  5063  10A5  3E97               	addlw	151
  5064  10A6  1803               	skipnc
  5065  10A7  28A9               	goto	u4531
  5066  10A8  28AA               	goto	u4530
  5067  10A9                     u4531:
  5068  10A9  28AB               	goto	l2932
  5069  10AA                     u4530:
  5070  10AA  2833               	goto	l2896
  5071  10AB                     l2932:
  5072  10AB  3001               	movlw	1
  5073  10AC                     u4545:
  5074  10AC  1003               	clrc
  5075  10AD  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  5076  10AE  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  5077  10AF  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  5078  10B0  0CA4               	rrf	__tdiv_to_l_@quot,f
  5079  10B1  3EFF               	addlw	-1
  5080  10B2  1D03               	skipz
  5081  10B3  28AC               	goto	u4545
  5082  10B4  3001               	movlw	1
  5083  10B5  00A0               	movwf	??__tdiv_to_l_
  5084  10B6  0820               	movf	??__tdiv_to_l_,w
  5085  10B7  07A9               	addwf	__tdiv_to_l_@exp1,f
  5086  10B8  1D03               	btfss	3,2
  5087  10B9  28BB               	goto	u4551
  5088  10BA  28BC               	goto	u4550
  5089  10BB                     u4551:
  5090  10BB  28AB               	goto	l2932
  5091  10BC                     u4550:
  5092  10BC  28D4               	goto	l2942
  5093  10BD                     l2934:
  5094  10BD  3018               	movlw	24
  5095  10BE  0229               	subwf	__tdiv_to_l_@exp1,w
  5096  10BF  1C03               	skipc
  5097  10C0  28C2               	goto	u4561
  5098  10C1  28C3               	goto	u4560
  5099  10C2                     u4561:
  5100  10C2  28CF               	goto	l623
  5101  10C3                     u4560:
  5102  10C3  2833               	goto	l2896
  5103  10C4                     l2940:
  5104  10C4  3001               	movlw	1
  5105  10C5  00A0               	movwf	??__tdiv_to_l_
  5106  10C6                     u4575:
  5107  10C6  1003               	clrc
  5108  10C7  0DA4               	rlf	__tdiv_to_l_@quot,f
  5109  10C8  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5110  10C9  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5111  10CA  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5112  10CB  0BA0               	decfsz	??__tdiv_to_l_,f
  5113  10CC  28C6               	goto	u4575
  5114  10CD  3001               	movlw	1
  5115  10CE  02A9               	subwf	__tdiv_to_l_@exp1,f
  5116  10CF                     l623:
  5117  10CF  0829               	movf	__tdiv_to_l_@exp1,w
  5118  10D0  1D03               	btfss	3,2
  5119  10D1  28D3               	goto	u4581
  5120  10D2  28D4               	goto	u4580
  5121  10D3                     u4581:
  5122  10D3  28C4               	goto	l2940
  5123  10D4                     u4580:
  5124  10D4                     l2942:
  5125  10D4  0827               	movf	__tdiv_to_l_@quot+3,w
  5126  10D5  00F5               	movwf	?__tdiv_to_l_+3
  5127  10D6  0826               	movf	__tdiv_to_l_@quot+2,w
  5128  10D7  00F4               	movwf	?__tdiv_to_l_+2
  5129  10D8  0825               	movf	__tdiv_to_l_@quot+1,w
  5130  10D9  00F3               	movwf	?__tdiv_to_l_+1
  5131  10DA  0824               	movf	__tdiv_to_l_@quot,w
  5132  10DB  00F2               	movwf	?__tdiv_to_l_
  5133  10DC                     l612:
  5134  10DC  0008               	return
  5135  10DD                     __end_of__tdiv_to_l_:
  5136                           
  5137                           	psect	text12
  5138  10DD                     __ptext12:	
  5139 ;; *************** function __div_to_l_ *****************
  5140 ;; Defined at:
  5141 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  f1              4    2[COMMON] unsigned long 
  5144 ;;  f2              4    6[COMMON] unsigned long 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  quot            4    0[BANK0 ] unsigned long 
  5147 ;;  exp1            1    5[BANK0 ] unsigned char 
  5148 ;;  cntr            1    4[BANK0 ] unsigned char 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  4    2[COMMON] unsigned long 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5158 ;;      Params:         8       0       0       0       0
  5159 ;;      Locals:         0       6       0       0       0
  5160 ;;      Temps:          1       0       0       0       0
  5161 ;;      Totals:         9       6       0       0       0
  5162 ;;Total ram usage:       15 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    1
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_sprintf
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           
  5173                           ;psect for function __div_to_l_
  5174  10DD                     __div_to_l_:
  5175  10DD                     l2946:	
  5176                           ;incstack = 0
  5177                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5178                           
  5179  10DD  1003               	clrc
  5180  10DE  0D74               	rlf	__div_to_l_@f1+2,w
  5181  10DF  0D75               	rlf	__div_to_l_@f1+3,w
  5182  10E0  00FA               	movwf	??__div_to_l_
  5183  10E1  087A               	movf	??__div_to_l_,w
  5184  10E2  1283               	bcf	3,5	;RP0=0, select bank0
  5185  10E3  1303               	bcf	3,6	;RP1=0, select bank0
  5186  10E4  00A5               	movwf	__div_to_l_@exp1
  5187  10E5  0825               	movf	__div_to_l_@exp1,w
  5188  10E6  1D03               	btfss	3,2
  5189  10E7  28E9               	goto	u4591
  5190  10E8  28EA               	goto	u4590
  5191  10E9                     u4591:
  5192  10E9  28F3               	goto	l2952
  5193  10EA                     u4590:
  5194  10EA                     l2948:
  5195  10EA  3000               	movlw	0
  5196  10EB  00F5               	movwf	?__div_to_l_+3
  5197  10EC  3000               	movlw	0
  5198  10ED  00F4               	movwf	?__div_to_l_+2
  5199  10EE  3000               	movlw	0
  5200  10EF  00F3               	movwf	?__div_to_l_+1
  5201  10F0  3000               	movlw	0
  5202  10F1  00F2               	movwf	?__div_to_l_
  5203  10F2  299A               	goto	l565
  5204  10F3                     l2952:
  5205  10F3  1003               	clrc
  5206  10F4  0D78               	rlf	__div_to_l_@f2+2,w
  5207  10F5  0D79               	rlf	__div_to_l_@f2+3,w
  5208  10F6  00FA               	movwf	??__div_to_l_
  5209  10F7  087A               	movf	??__div_to_l_,w
  5210  10F8  00A4               	movwf	__div_to_l_@cntr
  5211  10F9  0824               	movf	__div_to_l_@cntr,w
  5212  10FA  1D03               	btfss	3,2
  5213  10FB  28FD               	goto	u4601
  5214  10FC  28FE               	goto	u4600
  5215  10FD                     u4601:
  5216  10FD  28FF               	goto	l566
  5217  10FE                     u4600:
  5218  10FE  28EA               	goto	l2948
  5219  10FF                     l566:
  5220  10FF  17F4               	bsf	__div_to_l_@f1+2,7
  5221  1100                     l2958:
  5222  1100  30FF               	movlw	255
  5223  1101  05F2               	andwf	__div_to_l_@f1,f
  5224  1102  30FF               	movlw	255
  5225  1103  05F3               	andwf	__div_to_l_@f1+1,f
  5226  1104  30FF               	movlw	255
  5227  1105  05F4               	andwf	__div_to_l_@f1+2,f
  5228  1106  3000               	movlw	0
  5229  1107  05F5               	andwf	__div_to_l_@f1+3,f
  5230  1108                     l2960:
  5231  1108  17F8               	bsf	__div_to_l_@f2+2,7
  5232  1109  30FF               	movlw	255
  5233  110A  05F6               	andwf	__div_to_l_@f2,f
  5234  110B  30FF               	movlw	255
  5235  110C  05F7               	andwf	__div_to_l_@f2+1,f
  5236  110D  30FF               	movlw	255
  5237  110E  05F8               	andwf	__div_to_l_@f2+2,f
  5238  110F  3000               	movlw	0
  5239  1110  05F9               	andwf	__div_to_l_@f2+3,f
  5240  1111  3000               	movlw	0
  5241  1112  00A3               	movwf	__div_to_l_@quot+3
  5242  1113  3000               	movlw	0
  5243  1114  00A2               	movwf	__div_to_l_@quot+2
  5244  1115  3000               	movlw	0
  5245  1116  00A1               	movwf	__div_to_l_@quot+1
  5246  1117  3000               	movlw	0
  5247  1118  00A0               	movwf	__div_to_l_@quot
  5248  1119                     l2962:
  5249  1119  307F               	movlw	127
  5250  111A  02A5               	subwf	__div_to_l_@exp1,f
  5251  111B                     l2964:
  5252  111B  30A0               	movlw	160
  5253  111C  0724               	addwf	__div_to_l_@cntr,w
  5254  111D  00FA               	movwf	??__div_to_l_
  5255  111E  087A               	movf	??__div_to_l_,w
  5256  111F  02A5               	subwf	__div_to_l_@exp1,f
  5257  1120  3020               	movlw	32
  5258  1121  00FA               	movwf	??__div_to_l_
  5259  1122  087A               	movf	??__div_to_l_,w
  5260  1123  00A4               	movwf	__div_to_l_@cntr
  5261  1124                     l2966:
  5262  1124  3001               	movlw	1
  5263  1125  00FA               	movwf	??__div_to_l_
  5264  1126                     u4615:
  5265  1126  1003               	clrc
  5266  1127  0DA0               	rlf	__div_to_l_@quot,f
  5267  1128  0DA1               	rlf	__div_to_l_@quot+1,f
  5268  1129  0DA2               	rlf	__div_to_l_@quot+2,f
  5269  112A  0DA3               	rlf	__div_to_l_@quot+3,f
  5270  112B  0BFA               	decfsz	??__div_to_l_,f
  5271  112C  2926               	goto	u4615
  5272  112D                     l2968:
  5273  112D  0879               	movf	__div_to_l_@f2+3,w
  5274  112E  0275               	subwf	__div_to_l_@f1+3,w
  5275  112F  1D03               	skipz
  5276  1130  293B               	goto	u4625
  5277  1131  0878               	movf	__div_to_l_@f2+2,w
  5278  1132  0274               	subwf	__div_to_l_@f1+2,w
  5279  1133  1D03               	skipz
  5280  1134  293B               	goto	u4625
  5281  1135  0877               	movf	__div_to_l_@f2+1,w
  5282  1136  0273               	subwf	__div_to_l_@f1+1,w
  5283  1137  1D03               	skipz
  5284  1138  293B               	goto	u4625
  5285  1139  0876               	movf	__div_to_l_@f2,w
  5286  113A  0272               	subwf	__div_to_l_@f1,w
  5287  113B                     u4625:
  5288  113B  1C03               	skipc
  5289  113C  293E               	goto	u4621
  5290  113D  293F               	goto	u4620
  5291  113E                     u4621:
  5292  113E  294E               	goto	l2974
  5293  113F                     u4620:
  5294  113F                     l2970:
  5295  113F  0876               	movf	__div_to_l_@f2,w
  5296  1140  02F2               	subwf	__div_to_l_@f1,f
  5297  1141  0877               	movf	__div_to_l_@f2+1,w
  5298  1142  1C03               	skipc
  5299  1143  0F77               	incfsz	__div_to_l_@f2+1,w
  5300  1144  02F3               	subwf	__div_to_l_@f1+1,f
  5301  1145  0878               	movf	__div_to_l_@f2+2,w
  5302  1146  1C03               	skipc
  5303  1147  0F78               	incfsz	__div_to_l_@f2+2,w
  5304  1148  02F4               	subwf	__div_to_l_@f1+2,f
  5305  1149  0879               	movf	__div_to_l_@f2+3,w
  5306  114A  1C03               	skipc
  5307  114B  0F79               	incfsz	__div_to_l_@f2+3,w
  5308  114C  02F5               	subwf	__div_to_l_@f1+3,f
  5309  114D                     l2972:
  5310  114D  1420               	bsf	__div_to_l_@quot,0
  5311  114E                     l2974:
  5312  114E  3001               	movlw	1
  5313  114F  00FA               	movwf	??__div_to_l_
  5314  1150                     u4635:
  5315  1150  1003               	clrc
  5316  1151  0DF2               	rlf	__div_to_l_@f1,f
  5317  1152  0DF3               	rlf	__div_to_l_@f1+1,f
  5318  1153  0DF4               	rlf	__div_to_l_@f1+2,f
  5319  1154  0DF5               	rlf	__div_to_l_@f1+3,f
  5320  1155  0BFA               	decfsz	??__div_to_l_,f
  5321  1156  2950               	goto	u4635
  5322  1157                     l2976:
  5323  1157  3001               	movlw	1
  5324  1158  02A4               	subwf	__div_to_l_@cntr,f
  5325  1159  1D03               	btfss	3,2
  5326  115A  295C               	goto	u4641
  5327  115B  295D               	goto	u4640
  5328  115C                     u4641:
  5329  115C  2924               	goto	l2966
  5330  115D                     u4640:
  5331  115D                     l569:
  5332  115D  1FA5               	btfss	__div_to_l_@exp1,7
  5333  115E  2960               	goto	u4651
  5334  115F  2961               	goto	u4650
  5335  1160                     u4651:
  5336  1160  297B               	goto	l2986
  5337  1161                     u4650:
  5338  1161                     l2978:
  5339  1161  0825               	movf	__div_to_l_@exp1,w
  5340  1162  3A80               	xorlw	128
  5341  1163  3E9F               	addlw	159
  5342  1164  1803               	skipnc
  5343  1165  2967               	goto	u4661
  5344  1166  2968               	goto	u4660
  5345  1167                     u4661:
  5346  1167  2969               	goto	l2984
  5347  1168                     u4660:
  5348  1168  28EA               	goto	l2948
  5349  1169                     l2984:
  5350  1169  3001               	movlw	1
  5351  116A                     u4675:
  5352  116A  1003               	clrc
  5353  116B  0CA3               	rrf	__div_to_l_@quot+3,f
  5354  116C  0CA2               	rrf	__div_to_l_@quot+2,f
  5355  116D  0CA1               	rrf	__div_to_l_@quot+1,f
  5356  116E  0CA0               	rrf	__div_to_l_@quot,f
  5357  116F  3EFF               	addlw	-1
  5358  1170  1D03               	skipz
  5359  1171  296A               	goto	u4675
  5360  1172  3001               	movlw	1
  5361  1173  00FA               	movwf	??__div_to_l_
  5362  1174  087A               	movf	??__div_to_l_,w
  5363  1175  07A5               	addwf	__div_to_l_@exp1,f
  5364  1176  1D03               	btfss	3,2
  5365  1177  2979               	goto	u4681
  5366  1178  297A               	goto	u4680
  5367  1179                     u4681:
  5368  1179  2969               	goto	l2984
  5369  117A                     u4680:
  5370  117A  2992               	goto	l2994
  5371  117B                     l2986:
  5372  117B  3020               	movlw	32
  5373  117C  0225               	subwf	__div_to_l_@exp1,w
  5374  117D  1C03               	skipc
  5375  117E  2980               	goto	u4691
  5376  117F  2981               	goto	u4690
  5377  1180                     u4691:
  5378  1180  298D               	goto	l576
  5379  1181                     u4690:
  5380  1181  28EA               	goto	l2948
  5381  1182                     l2992:
  5382  1182  3001               	movlw	1
  5383  1183  00FA               	movwf	??__div_to_l_
  5384  1184                     u4705:
  5385  1184  1003               	clrc
  5386  1185  0DA0               	rlf	__div_to_l_@quot,f
  5387  1186  0DA1               	rlf	__div_to_l_@quot+1,f
  5388  1187  0DA2               	rlf	__div_to_l_@quot+2,f
  5389  1188  0DA3               	rlf	__div_to_l_@quot+3,f
  5390  1189  0BFA               	decfsz	??__div_to_l_,f
  5391  118A  2984               	goto	u4705
  5392  118B  3001               	movlw	1
  5393  118C  02A5               	subwf	__div_to_l_@exp1,f
  5394  118D                     l576:
  5395  118D  0825               	movf	__div_to_l_@exp1,w
  5396  118E  1D03               	btfss	3,2
  5397  118F  2991               	goto	u4711
  5398  1190  2992               	goto	u4710
  5399  1191                     u4711:
  5400  1191  2982               	goto	l2992
  5401  1192                     u4710:
  5402  1192                     l2994:
  5403  1192  0823               	movf	__div_to_l_@quot+3,w
  5404  1193  00F5               	movwf	?__div_to_l_+3
  5405  1194  0822               	movf	__div_to_l_@quot+2,w
  5406  1195  00F4               	movwf	?__div_to_l_+2
  5407  1196  0821               	movf	__div_to_l_@quot+1,w
  5408  1197  00F3               	movwf	?__div_to_l_+1
  5409  1198  0820               	movf	__div_to_l_@quot,w
  5410  1199  00F2               	movwf	?__div_to_l_
  5411  119A                     l565:
  5412  119A  0008               	return
  5413  119B                     __end_of__div_to_l_:
  5414                           
  5415                           	psect	text13
  5416  1B3B                     __ptext13:	
  5417 ;; *************** function ___wmul *****************
  5418 ;; Defined at:
  5419 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  multiplier      2    2[COMMON] unsigned int 
  5422 ;;  multiplicand    2    4[COMMON] unsigned int 
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  product         2    6[COMMON] unsigned int 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  2    2[COMMON] unsigned int 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5434 ;;      Params:         4       0       0       0       0
  5435 ;;      Locals:         2       0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0
  5437 ;;      Totals:         6       0       0       0       0
  5438 ;;Total ram usage:        6 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    1
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_sprintf
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           
  5449                           ;psect for function ___wmul
  5450  1B3B                     ___wmul:
  5451  1B3B                     l2998:	
  5452                           ;incstack = 0
  5453                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5454                           
  5455  1B3B  01F6               	clrf	___wmul@product
  5456  1B3C  01F7               	clrf	___wmul@product+1
  5457  1B3D                     l3000:
  5458  1B3D  1C72               	btfss	___wmul@multiplier,0
  5459  1B3E  2B40               	goto	u4721
  5460  1B3F  2B41               	goto	u4720
  5461  1B40                     u4721:
  5462  1B40  2B47               	goto	l395
  5463  1B41                     u4720:
  5464  1B41                     l3002:
  5465  1B41  0874               	movf	___wmul@multiplicand,w
  5466  1B42  07F6               	addwf	___wmul@product,f
  5467  1B43  1803               	skipnc
  5468  1B44  0AF7               	incf	___wmul@product+1,f
  5469  1B45  0875               	movf	___wmul@multiplicand+1,w
  5470  1B46  07F7               	addwf	___wmul@product+1,f
  5471  1B47                     l395:
  5472  1B47  3001               	movlw	1
  5473  1B48                     u4735:
  5474  1B48  1003               	clrc
  5475  1B49  0DF4               	rlf	___wmul@multiplicand,f
  5476  1B4A  0DF5               	rlf	___wmul@multiplicand+1,f
  5477  1B4B  3EFF               	addlw	-1
  5478  1B4C  1D03               	skipz
  5479  1B4D  2B48               	goto	u4735
  5480  1B4E                     l3004:
  5481  1B4E  3001               	movlw	1
  5482  1B4F                     u4745:
  5483  1B4F  1003               	clrc
  5484  1B50  0CF3               	rrf	___wmul@multiplier+1,f
  5485  1B51  0CF2               	rrf	___wmul@multiplier,f
  5486  1B52  3EFF               	addlw	-1
  5487  1B53  1D03               	skipz
  5488  1B54  2B4F               	goto	u4745
  5489  1B55                     l3006:
  5490  1B55  0872               	movf	___wmul@multiplier,w
  5491  1B56  0473               	iorwf	___wmul@multiplier+1,w
  5492  1B57  1D03               	btfss	3,2
  5493  1B58  2B5A               	goto	u4751
  5494  1B59  2B5B               	goto	u4750
  5495  1B5A                     u4751:
  5496  1B5A  2B3D               	goto	l3000
  5497  1B5B                     u4750:
  5498  1B5B                     l3008:
  5499  1B5B  0877               	movf	___wmul@product+1,w
  5500  1B5C  00F3               	movwf	?___wmul+1
  5501  1B5D  0876               	movf	___wmul@product,w
  5502  1B5E  00F2               	movwf	?___wmul
  5503  1B5F                     l397:
  5504  1B5F  0008               	return
  5505  1B60                     __end_of___wmul:
  5506                           
  5507                           	psect	text14
  5508  1D0D                     __ptext14:	
  5509 ;; *************** function ___llmod *****************
  5510 ;; Defined at:
  5511 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  divisor         4    2[COMMON] unsigned long 
  5514 ;;  dividend        4    6[COMMON] unsigned long 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  counter         1    0[BANK0 ] unsigned char 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  4    2[COMMON] unsigned long 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5526 ;;      Params:         8       0       0       0       0
  5527 ;;      Locals:         0       1       0       0       0
  5528 ;;      Temps:          1       0       0       0       0
  5529 ;;      Totals:         9       1       0       0       0
  5530 ;;Total ram usage:       10 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; Hardware stack levels required when called:    1
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		_sprintf
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           
  5541                           ;psect for function ___llmod
  5542  1D0D                     ___llmod:
  5543  1D0D                     l3682:	
  5544                           ;incstack = 0
  5545                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5546                           
  5547  1D0D  0875               	movf	___llmod@divisor+3,w
  5548  1D0E  0474               	iorwf	___llmod@divisor+2,w
  5549  1D0F  0473               	iorwf	___llmod@divisor+1,w
  5550  1D10  0472               	iorwf	___llmod@divisor,w
  5551  1D11  1903               	skipnz
  5552  1D12  2D14               	goto	u5941
  5553  1D13  2D15               	goto	u5940
  5554  1D14                     u5941:
  5555  1D14  2D5A               	goto	l3698
  5556  1D15                     u5940:
  5557  1D15                     l3684:
  5558  1D15  1283               	bcf	3,5	;RP0=0, select bank0
  5559  1D16  1303               	bcf	3,6	;RP1=0, select bank0
  5560  1D17  01A0               	clrf	___llmod@counter
  5561  1D18  0AA0               	incf	___llmod@counter,f
  5562  1D19  2D27               	goto	l3688
  5563  1D1A                     l3686:
  5564  1D1A  3001               	movlw	1
  5565  1D1B  00FA               	movwf	??___llmod
  5566  1D1C                     u5955:
  5567  1D1C  1003               	clrc
  5568  1D1D  0DF2               	rlf	___llmod@divisor,f
  5569  1D1E  0DF3               	rlf	___llmod@divisor+1,f
  5570  1D1F  0DF4               	rlf	___llmod@divisor+2,f
  5571  1D20  0DF5               	rlf	___llmod@divisor+3,f
  5572  1D21  0BFA               	decfsz	??___llmod,f
  5573  1D22  2D1C               	goto	u5955
  5574  1D23  3001               	movlw	1
  5575  1D24  00FA               	movwf	??___llmod
  5576  1D25  087A               	movf	??___llmod,w
  5577  1D26  07A0               	addwf	___llmod@counter,f
  5578  1D27                     l3688:
  5579  1D27  1FF5               	btfss	___llmod@divisor+3,7
  5580  1D28  2D2A               	goto	u5961
  5581  1D29  2D2B               	goto	u5960
  5582  1D2A                     u5961:
  5583  1D2A  2D1A               	goto	l3686
  5584  1D2B                     u5960:
  5585  1D2B                     l3690:
  5586  1D2B  0875               	movf	___llmod@divisor+3,w
  5587  1D2C  0279               	subwf	___llmod@dividend+3,w
  5588  1D2D  1D03               	skipz
  5589  1D2E  2D39               	goto	u5975
  5590  1D2F  0874               	movf	___llmod@divisor+2,w
  5591  1D30  0278               	subwf	___llmod@dividend+2,w
  5592  1D31  1D03               	skipz
  5593  1D32  2D39               	goto	u5975
  5594  1D33  0873               	movf	___llmod@divisor+1,w
  5595  1D34  0277               	subwf	___llmod@dividend+1,w
  5596  1D35  1D03               	skipz
  5597  1D36  2D39               	goto	u5975
  5598  1D37  0872               	movf	___llmod@divisor,w
  5599  1D38  0276               	subwf	___llmod@dividend,w
  5600  1D39                     u5975:
  5601  1D39  1C03               	skipc
  5602  1D3A  2D3C               	goto	u5971
  5603  1D3B  2D3D               	goto	u5970
  5604  1D3C                     u5971:
  5605  1D3C  2D4B               	goto	l3694
  5606  1D3D                     u5970:
  5607  1D3D                     l3692:
  5608  1D3D  0872               	movf	___llmod@divisor,w
  5609  1D3E  02F6               	subwf	___llmod@dividend,f
  5610  1D3F  0873               	movf	___llmod@divisor+1,w
  5611  1D40  1C03               	skipc
  5612  1D41  0F73               	incfsz	___llmod@divisor+1,w
  5613  1D42  02F7               	subwf	___llmod@dividend+1,f
  5614  1D43  0874               	movf	___llmod@divisor+2,w
  5615  1D44  1C03               	skipc
  5616  1D45  0F74               	incfsz	___llmod@divisor+2,w
  5617  1D46  02F8               	subwf	___llmod@dividend+2,f
  5618  1D47  0875               	movf	___llmod@divisor+3,w
  5619  1D48  1C03               	skipc
  5620  1D49  0F75               	incfsz	___llmod@divisor+3,w
  5621  1D4A  02F9               	subwf	___llmod@dividend+3,f
  5622  1D4B                     l3694:
  5623  1D4B  3001               	movlw	1
  5624  1D4C                     u5985:
  5625  1D4C  1003               	clrc
  5626  1D4D  0CF5               	rrf	___llmod@divisor+3,f
  5627  1D4E  0CF4               	rrf	___llmod@divisor+2,f
  5628  1D4F  0CF3               	rrf	___llmod@divisor+1,f
  5629  1D50  0CF2               	rrf	___llmod@divisor,f
  5630  1D51  3EFF               	addlw	-1
  5631  1D52  1D03               	skipz
  5632  1D53  2D4C               	goto	u5985
  5633  1D54                     l3696:
  5634  1D54  3001               	movlw	1
  5635  1D55  02A0               	subwf	___llmod@counter,f
  5636  1D56  1D03               	btfss	3,2
  5637  1D57  2D59               	goto	u5991
  5638  1D58  2D5A               	goto	u5990
  5639  1D59                     u5991:
  5640  1D59  2D2B               	goto	l3690
  5641  1D5A                     u5990:
  5642  1D5A                     l3698:
  5643  1D5A  0879               	movf	___llmod@dividend+3,w
  5644  1D5B  00F5               	movwf	?___llmod+3
  5645  1D5C  0878               	movf	___llmod@dividend+2,w
  5646  1D5D  00F4               	movwf	?___llmod+2
  5647  1D5E  0877               	movf	___llmod@dividend+1,w
  5648  1D5F  00F3               	movwf	?___llmod+1
  5649  1D60  0876               	movf	___llmod@dividend,w
  5650  1D61  00F2               	movwf	?___llmod
  5651  1D62                     l651:
  5652  1D62  0008               	return
  5653  1D63                     __end_of___llmod:
  5654                           
  5655                           	psect	text15
  5656  1E24                     __ptext15:	
  5657 ;; *************** function ___fltol *****************
  5658 ;; Defined at:
  5659 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  f1              4   53[BANK0 ] unsigned long 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  exp1            1   63[BANK0 ] unsigned char 
  5664 ;;  sign1           1   62[BANK0 ] unsigned char 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  4   53[BANK0 ] long 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2, status,0
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5674 ;;      Params:         0       4       0       0       0
  5675 ;;      Locals:         0       2       0       0       0
  5676 ;;      Temps:          0       5       0       0       0
  5677 ;;      Totals:         0      11       0       0       0
  5678 ;;Total ram usage:       11 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    1
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_sprintf
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           
  5689                           ;psect for function ___fltol
  5690  1E24                     ___fltol:
  5691  1E24                     l3052:	
  5692                           ;incstack = 0
  5693                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5694                           
  5695  1E24  1003               	clrc
  5696  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  5697  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  5698  1E27  0D57               	rlf	___fltol@f1+2,w
  5699  1E28  0D58               	rlf	___fltol@f1+3,w
  5700  1E29  00D9               	movwf	??___fltol
  5701  1E2A  0859               	movf	??___fltol,w
  5702  1E2B  00DF               	movwf	___fltol@exp1
  5703  1E2C  085F               	movf	___fltol@exp1,w
  5704  1E2D  1D03               	btfss	3,2
  5705  1E2E  2E30               	goto	u4871
  5706  1E2F  2E31               	goto	u4870
  5707  1E30                     u4871:
  5708  1E30  2E3A               	goto	l3058
  5709  1E31                     u4870:
  5710  1E31                     l3054:
  5711  1E31  3000               	movlw	0
  5712  1E32  00D8               	movwf	?___fltol+3
  5713  1E33  3000               	movlw	0
  5714  1E34  00D7               	movwf	?___fltol+2
  5715  1E35  3000               	movlw	0
  5716  1E36  00D6               	movwf	?___fltol+1
  5717  1E37  3000               	movlw	0
  5718  1E38  00D5               	movwf	?___fltol
  5719  1E39  2E9F               	goto	l598
  5720  1E3A                     l3058:
  5721  1E3A  0855               	movf	___fltol@f1,w
  5722  1E3B  00D9               	movwf	??___fltol
  5723  1E3C  0856               	movf	___fltol@f1+1,w
  5724  1E3D  00DA               	movwf	??___fltol+1
  5725  1E3E  0857               	movf	___fltol@f1+2,w
  5726  1E3F  00DB               	movwf	??___fltol+2
  5727  1E40  0858               	movf	___fltol@f1+3,w
  5728  1E41  00DC               	movwf	??___fltol+3
  5729  1E42  301F               	movlw	31
  5730  1E43                     u4885:
  5731  1E43  1003               	clrc
  5732  1E44  0CDC               	rrf	??___fltol+3,f
  5733  1E45  0CDB               	rrf	??___fltol+2,f
  5734  1E46  0CDA               	rrf	??___fltol+1,f
  5735  1E47  0CD9               	rrf	??___fltol,f
  5736  1E48                     u4880:
  5737  1E48  3EFF               	addlw	-1
  5738  1E49  1D03               	skipz
  5739  1E4A  2E43               	goto	u4885
  5740  1E4B  0859               	movf	??___fltol,w
  5741  1E4C  00DD               	movwf	??___fltol+4
  5742  1E4D  085D               	movf	??___fltol+4,w
  5743  1E4E  00DE               	movwf	___fltol@sign1
  5744  1E4F                     l3060:
  5745  1E4F  17D7               	bsf	___fltol@f1+2,7
  5746  1E50                     l3062:
  5747  1E50  30FF               	movlw	255
  5748  1E51  05D5               	andwf	___fltol@f1,f
  5749  1E52  30FF               	movlw	255
  5750  1E53  05D6               	andwf	___fltol@f1+1,f
  5751  1E54  30FF               	movlw	255
  5752  1E55  05D7               	andwf	___fltol@f1+2,f
  5753  1E56  3000               	movlw	0
  5754  1E57  05D8               	andwf	___fltol@f1+3,f
  5755  1E58                     l3064:
  5756  1E58  3096               	movlw	150
  5757  1E59  02DF               	subwf	___fltol@exp1,f
  5758  1E5A                     l3066:
  5759  1E5A  1FDF               	btfss	___fltol@exp1,7
  5760  1E5B  2E5D               	goto	u4891
  5761  1E5C  2E5E               	goto	u4890
  5762  1E5D                     u4891:
  5763  1E5D  2E78               	goto	l3076
  5764  1E5E                     u4890:
  5765  1E5E                     l3068:
  5766  1E5E  085F               	movf	___fltol@exp1,w
  5767  1E5F  3A80               	xorlw	128
  5768  1E60  3E97               	addlw	151
  5769  1E61  1803               	skipnc
  5770  1E62  2E64               	goto	u4901
  5771  1E63  2E65               	goto	u4900
  5772  1E64                     u4901:
  5773  1E64  2E66               	goto	l3074
  5774  1E65                     u4900:
  5775  1E65  2E31               	goto	l3054
  5776  1E66                     l3074:
  5777  1E66  3001               	movlw	1
  5778  1E67                     u4915:
  5779  1E67  1003               	clrc
  5780  1E68  0CD8               	rrf	___fltol@f1+3,f
  5781  1E69  0CD7               	rrf	___fltol@f1+2,f
  5782  1E6A  0CD6               	rrf	___fltol@f1+1,f
  5783  1E6B  0CD5               	rrf	___fltol@f1,f
  5784  1E6C  3EFF               	addlw	-1
  5785  1E6D  1D03               	skipz
  5786  1E6E  2E67               	goto	u4915
  5787  1E6F  3001               	movlw	1
  5788  1E70  00D9               	movwf	??___fltol
  5789  1E71  0859               	movf	??___fltol,w
  5790  1E72  07DF               	addwf	___fltol@exp1,f
  5791  1E73  1D03               	btfss	3,2
  5792  1E74  2E76               	goto	u4921
  5793  1E75  2E77               	goto	u4920
  5794  1E76                     u4921:
  5795  1E76  2E66               	goto	l3074
  5796  1E77                     u4920:
  5797  1E77  2E8F               	goto	l3084
  5798  1E78                     l3076:
  5799  1E78  3020               	movlw	32
  5800  1E79  025F               	subwf	___fltol@exp1,w
  5801  1E7A  1C03               	skipc
  5802  1E7B  2E7D               	goto	u4931
  5803  1E7C  2E7E               	goto	u4930
  5804  1E7D                     u4931:
  5805  1E7D  2E8A               	goto	l605
  5806  1E7E                     u4930:
  5807  1E7E  2E31               	goto	l3054
  5808  1E7F                     l3082:
  5809  1E7F  3001               	movlw	1
  5810  1E80  00D9               	movwf	??___fltol
  5811  1E81                     u4945:
  5812  1E81  1003               	clrc
  5813  1E82  0DD5               	rlf	___fltol@f1,f
  5814  1E83  0DD6               	rlf	___fltol@f1+1,f
  5815  1E84  0DD7               	rlf	___fltol@f1+2,f
  5816  1E85  0DD8               	rlf	___fltol@f1+3,f
  5817  1E86  0BD9               	decfsz	??___fltol,f
  5818  1E87  2E81               	goto	u4945
  5819  1E88  3001               	movlw	1
  5820  1E89  02DF               	subwf	___fltol@exp1,f
  5821  1E8A                     l605:
  5822  1E8A  085F               	movf	___fltol@exp1,w
  5823  1E8B  1D03               	btfss	3,2
  5824  1E8C  2E8E               	goto	u4951
  5825  1E8D  2E8F               	goto	u4950
  5826  1E8E                     u4951:
  5827  1E8E  2E7F               	goto	l3082
  5828  1E8F                     u4950:
  5829  1E8F                     l3084:
  5830  1E8F  085E               	movf	___fltol@sign1,w
  5831  1E90  1903               	btfsc	3,2
  5832  1E91  2E93               	goto	u4961
  5833  1E92  2E94               	goto	u4960
  5834  1E93                     u4961:
  5835  1E93  2E9F               	goto	l608
  5836  1E94                     u4960:
  5837  1E94                     l3086:
  5838  1E94  09D5               	comf	___fltol@f1,f
  5839  1E95  09D6               	comf	___fltol@f1+1,f
  5840  1E96  09D7               	comf	___fltol@f1+2,f
  5841  1E97  09D8               	comf	___fltol@f1+3,f
  5842  1E98  0AD5               	incf	___fltol@f1,f
  5843  1E99  1903               	skipnz
  5844  1E9A  0AD6               	incf	___fltol@f1+1,f
  5845  1E9B  1903               	skipnz
  5846  1E9C  0AD7               	incf	___fltol@f1+2,f
  5847  1E9D  1903               	skipnz
  5848  1E9E  0AD8               	incf	___fltol@f1+3,f
  5849  1E9F                     l608:
  5850  1E9F                     l598:
  5851  1E9F  0008               	return
  5852  1EA0                     __end_of___fltol:
  5853                           
  5854                           	psect	text16
  5855  1CBD                     __ptext16:	
  5856 ;; *************** function ___flsub *****************
  5857 ;; Defined at:
  5858 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  a               4    0[BANK1 ] long 
  5861 ;;  b               4    4[BANK1 ] long 
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;		None
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  4    0[BANK1 ] long 
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5873 ;;      Params:         0       0       8       0       0
  5874 ;;      Locals:         0       0       0       0       0
  5875 ;;      Temps:          0       0       0       0       0
  5876 ;;      Totals:         0       0       8       0       0
  5877 ;;Total ram usage:        8 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    2
  5880 ;; This function calls:
  5881 ;;		___fladd
  5882 ;; This function is called by:
  5883 ;;		_sprintf
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           
  5888                           ;psect for function ___flsub
  5889  1CBD                     ___flsub:
  5890  1CBD                     l3108:	
  5891                           ;incstack = 0
  5892                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5893                           
  5894  1CBD  3080               	movlw	128
  5895  1CBE  1683               	bsf	3,5	;RP0=1, select bank1
  5896  1CBF  1303               	bcf	3,6	;RP1=0, select bank1
  5897  1CC0  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5898  1CC1                     l3110:
  5899  1CC1  0827               	movf	(___flsub@b+3)^(0+128),w
  5900  1CC2  1283               	bcf	3,5	;RP0=0, select bank0
  5901  1CC3  1303               	bcf	3,6	;RP1=0, select bank0
  5902  1CC4  00D9               	movwf	___fladd@b+3
  5903  1CC5  1683               	bsf	3,5	;RP0=1, select bank1
  5904  1CC6  1303               	bcf	3,6	;RP1=0, select bank1
  5905  1CC7  0826               	movf	(___flsub@b+2)^(0+128),w
  5906  1CC8  1283               	bcf	3,5	;RP0=0, select bank0
  5907  1CC9  1303               	bcf	3,6	;RP1=0, select bank0
  5908  1CCA  00D8               	movwf	___fladd@b+2
  5909  1CCB  1683               	bsf	3,5	;RP0=1, select bank1
  5910  1CCC  1303               	bcf	3,6	;RP1=0, select bank1
  5911  1CCD  0825               	movf	(___flsub@b+1)^(0+128),w
  5912  1CCE  1283               	bcf	3,5	;RP0=0, select bank0
  5913  1CCF  1303               	bcf	3,6	;RP1=0, select bank0
  5914  1CD0  00D7               	movwf	___fladd@b+1
  5915  1CD1  1683               	bsf	3,5	;RP0=1, select bank1
  5916  1CD2  1303               	bcf	3,6	;RP1=0, select bank1
  5917  1CD3  0824               	movf	___flsub@b^(0+128),w
  5918  1CD4  1283               	bcf	3,5	;RP0=0, select bank0
  5919  1CD5  1303               	bcf	3,6	;RP1=0, select bank0
  5920  1CD6  00D6               	movwf	___fladd@b
  5921  1CD7  1683               	bsf	3,5	;RP0=1, select bank1
  5922  1CD8  1303               	bcf	3,6	;RP1=0, select bank1
  5923  1CD9  0823               	movf	(___flsub@a+3)^(0+128),w
  5924  1CDA  1283               	bcf	3,5	;RP0=0, select bank0
  5925  1CDB  1303               	bcf	3,6	;RP1=0, select bank0
  5926  1CDC  00DD               	movwf	___fladd@a+3
  5927  1CDD  1683               	bsf	3,5	;RP0=1, select bank1
  5928  1CDE  1303               	bcf	3,6	;RP1=0, select bank1
  5929  1CDF  0822               	movf	(___flsub@a+2)^(0+128),w
  5930  1CE0  1283               	bcf	3,5	;RP0=0, select bank0
  5931  1CE1  1303               	bcf	3,6	;RP1=0, select bank0
  5932  1CE2  00DC               	movwf	___fladd@a+2
  5933  1CE3  1683               	bsf	3,5	;RP0=1, select bank1
  5934  1CE4  1303               	bcf	3,6	;RP1=0, select bank1
  5935  1CE5  0821               	movf	(___flsub@a+1)^(0+128),w
  5936  1CE6  1283               	bcf	3,5	;RP0=0, select bank0
  5937  1CE7  1303               	bcf	3,6	;RP1=0, select bank0
  5938  1CE8  00DB               	movwf	___fladd@a+1
  5939  1CE9  1683               	bsf	3,5	;RP0=1, select bank1
  5940  1CEA  1303               	bcf	3,6	;RP1=0, select bank1
  5941  1CEB  0820               	movf	___flsub@a^(0+128),w
  5942  1CEC  1283               	bcf	3,5	;RP0=0, select bank0
  5943  1CED  1303               	bcf	3,6	;RP1=0, select bank0
  5944  1CEE  00DA               	movwf	___fladd@a
  5945  1CEF  160A  118A  229A  160A  158A  	fcall	___fladd
  5946  1CF4  1283               	bcf	3,5	;RP0=0, select bank0
  5947  1CF5  1303               	bcf	3,6	;RP1=0, select bank0
  5948  1CF6  0859               	movf	?___fladd+3,w
  5949  1CF7  1683               	bsf	3,5	;RP0=1, select bank1
  5950  1CF8  1303               	bcf	3,6	;RP1=0, select bank1
  5951  1CF9  00A3               	movwf	(?___flsub+3)^(0+128)
  5952  1CFA  1283               	bcf	3,5	;RP0=0, select bank0
  5953  1CFB  1303               	bcf	3,6	;RP1=0, select bank0
  5954  1CFC  0858               	movf	?___fladd+2,w
  5955  1CFD  1683               	bsf	3,5	;RP0=1, select bank1
  5956  1CFE  1303               	bcf	3,6	;RP1=0, select bank1
  5957  1CFF  00A2               	movwf	(?___flsub+2)^(0+128)
  5958  1D00  1283               	bcf	3,5	;RP0=0, select bank0
  5959  1D01  1303               	bcf	3,6	;RP1=0, select bank0
  5960  1D02  0857               	movf	?___fladd+1,w
  5961  1D03  1683               	bsf	3,5	;RP0=1, select bank1
  5962  1D04  1303               	bcf	3,6	;RP1=0, select bank1
  5963  1D05  00A1               	movwf	(?___flsub+1)^(0+128)
  5964  1D06  1283               	bcf	3,5	;RP0=0, select bank0
  5965  1D07  1303               	bcf	3,6	;RP1=0, select bank0
  5966  1D08  0856               	movf	?___fladd,w
  5967  1D09  1683               	bsf	3,5	;RP0=1, select bank1
  5968  1D0A  1303               	bcf	3,6	;RP1=0, select bank1
  5969  1D0B  00A0               	movwf	?___flsub^(0+128)
  5970  1D0C                     l768:
  5971  1D0C  0008               	return
  5972  1D0D                     __end_of___flsub:
  5973                           
  5974                           	psect	text17
  5975  129A                     __ptext17:	
  5976 ;; *************** function ___fladd *****************
  5977 ;; Defined at:
  5978 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  b               4   54[BANK0 ] long 
  5981 ;;  a               4   58[BANK0 ] long 
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;  grs             1   73[BANK0 ] unsigned char 
  5984 ;;  bexp            1   72[BANK0 ] unsigned char 
  5985 ;;  aexp            1   71[BANK0 ] unsigned char 
  5986 ;;  signs           1   70[BANK0 ] unsigned char 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  4   54[BANK0 ] unsigned char 
  5989 ;; Registers used:
  5990 ;;		wreg, status,2, status,0, btemp+1
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5996 ;;      Params:         0       8       0       0       0
  5997 ;;      Locals:         0       4       0       0       0
  5998 ;;      Temps:          0       8       0       0       0
  5999 ;;      Totals:         0      20       0       0       0
  6000 ;;Total ram usage:       20 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    1
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_sprintf
  6007 ;;		___flsub
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           
  6012                           ;psect for function ___fladd
  6013  129A                     ___fladd:
  6014  129A                     l2470:	
  6015                           ;incstack = 0
  6016                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6017                           
  6018  129A  1283               	bcf	3,5	;RP0=0, select bank0
  6019  129B  1303               	bcf	3,6	;RP1=0, select bank0
  6020  129C  0859               	movf	___fladd@b+3,w
  6021  129D  3980               	andlw	128
  6022  129E  00DE               	movwf	??___fladd
  6023  129F  085E               	movf	??___fladd,w
  6024  12A0  00E6               	movwf	___fladd@signs
  6025  12A1                     l2472:
  6026  12A1  0859               	movf	___fladd@b+3,w
  6027  12A2  00DE               	movwf	??___fladd
  6028  12A3  075E               	addwf	??___fladd,w
  6029  12A4  00DF               	movwf	??___fladd+1
  6030  12A5  085F               	movf	??___fladd+1,w
  6031  12A6  00E8               	movwf	___fladd@bexp
  6032  12A7                     l2474:
  6033  12A7  1FD8               	btfss	___fladd@b+2,7
  6034  12A8  2AAA               	goto	u3321
  6035  12A9  2AAB               	goto	u3320
  6036  12AA                     u3321:
  6037  12AA  2AAC               	goto	l2478
  6038  12AB                     u3320:
  6039  12AB                     l2476:
  6040  12AB  1468               	bsf	___fladd@bexp,0
  6041  12AC                     l2478:
  6042  12AC  0868               	movf	___fladd@bexp,w
  6043  12AD  1903               	btfsc	3,2
  6044  12AE  2AB0               	goto	u3331
  6045  12AF  2AB1               	goto	u3330
  6046  12B0                     u3331:
  6047  12B0  2AC1               	goto	l2488
  6048  12B1                     u3330:
  6049  12B1                     l2480:
  6050  12B1  0A68               	incf	___fladd@bexp,w
  6051  12B2  1D03               	btfss	3,2
  6052  12B3  2AB5               	goto	u3341
  6053  12B4  2AB6               	goto	u3340
  6054  12B5                     u3341:
  6055  12B5  2ABE               	goto	l2484
  6056  12B6                     u3340:
  6057  12B6                     l2482:
  6058  12B6  3000               	movlw	0
  6059  12B7  00D9               	movwf	___fladd@b+3
  6060  12B8  3000               	movlw	0
  6061  12B9  00D8               	movwf	___fladd@b+2
  6062  12BA  3000               	movlw	0
  6063  12BB  00D7               	movwf	___fladd@b+1
  6064  12BC  3000               	movlw	0
  6065  12BD  00D6               	movwf	___fladd@b
  6066  12BE                     l2484:
  6067  12BE  17D8               	bsf	___fladd@b+2,7
  6068  12BF                     l2486:
  6069  12BF  01D9               	clrf	___fladd@b+3
  6070  12C0  2AC9               	goto	l2490
  6071  12C1                     l2488:
  6072  12C1  3000               	movlw	0
  6073  12C2  00D9               	movwf	___fladd@b+3
  6074  12C3  3000               	movlw	0
  6075  12C4  00D8               	movwf	___fladd@b+2
  6076  12C5  3000               	movlw	0
  6077  12C6  00D7               	movwf	___fladd@b+1
  6078  12C7  3000               	movlw	0
  6079  12C8  00D6               	movwf	___fladd@b
  6080  12C9                     l2490:
  6081  12C9  085D               	movf	___fladd@a+3,w
  6082  12CA  3980               	andlw	128
  6083  12CB  00DE               	movwf	??___fladd
  6084  12CC  085E               	movf	??___fladd,w
  6085  12CD  00E7               	movwf	___fladd@aexp
  6086  12CE                     l2492:
  6087  12CE  0867               	movf	___fladd@aexp,w
  6088  12CF  0666               	xorwf	___fladd@signs,w
  6089  12D0  1903               	skipnz
  6090  12D1  2AD3               	goto	u3351
  6091  12D2  2AD4               	goto	u3350
  6092  12D3                     u3351:
  6093  12D3  2AD5               	goto	l2496
  6094  12D4                     u3350:
  6095  12D4                     l2494:
  6096  12D4  1766               	bsf	___fladd@signs,6
  6097  12D5                     l2496:
  6098  12D5  085D               	movf	___fladd@a+3,w
  6099  12D6  00DE               	movwf	??___fladd
  6100  12D7  075E               	addwf	??___fladd,w
  6101  12D8  00DF               	movwf	??___fladd+1
  6102  12D9  085F               	movf	??___fladd+1,w
  6103  12DA  00E7               	movwf	___fladd@aexp
  6104  12DB                     l2498:
  6105  12DB  1FDC               	btfss	___fladd@a+2,7
  6106  12DC  2ADE               	goto	u3361
  6107  12DD  2ADF               	goto	u3360
  6108  12DE                     u3361:
  6109  12DE  2AE0               	goto	l2502
  6110  12DF                     u3360:
  6111  12DF                     l2500:
  6112  12DF  1467               	bsf	___fladd@aexp,0
  6113  12E0                     l2502:
  6114  12E0  0867               	movf	___fladd@aexp,w
  6115  12E1  1903               	btfsc	3,2
  6116  12E2  2AE4               	goto	u3371
  6117  12E3  2AE5               	goto	u3370
  6118  12E4                     u3371:
  6119  12E4  2AF5               	goto	l2512
  6120  12E5                     u3370:
  6121  12E5                     l2504:
  6122  12E5  0A67               	incf	___fladd@aexp,w
  6123  12E6  1D03               	btfss	3,2
  6124  12E7  2AE9               	goto	u3381
  6125  12E8  2AEA               	goto	u3380
  6126  12E9                     u3381:
  6127  12E9  2AF2               	goto	l2508
  6128  12EA                     u3380:
  6129  12EA                     l2506:
  6130  12EA  3000               	movlw	0
  6131  12EB  00DD               	movwf	___fladd@a+3
  6132  12EC  3000               	movlw	0
  6133  12ED  00DC               	movwf	___fladd@a+2
  6134  12EE  3000               	movlw	0
  6135  12EF  00DB               	movwf	___fladd@a+1
  6136  12F0  3000               	movlw	0
  6137  12F1  00DA               	movwf	___fladd@a
  6138  12F2                     l2508:
  6139  12F2  17DC               	bsf	___fladd@a+2,7
  6140  12F3                     l2510:
  6141  12F3  01DD               	clrf	___fladd@a+3
  6142  12F4  2AFD               	goto	l722
  6143  12F5                     l2512:
  6144  12F5  3000               	movlw	0
  6145  12F6  00DD               	movwf	___fladd@a+3
  6146  12F7  3000               	movlw	0
  6147  12F8  00DC               	movwf	___fladd@a+2
  6148  12F9  3000               	movlw	0
  6149  12FA  00DB               	movwf	___fladd@a+1
  6150  12FB  3000               	movlw	0
  6151  12FC  00DA               	movwf	___fladd@a
  6152  12FD                     l722:
  6153  12FD  0868               	movf	___fladd@bexp,w
  6154  12FE  0267               	subwf	___fladd@aexp,w
  6155  12FF  1803               	skipnc
  6156  1300  2B02               	goto	u3391
  6157  1301  2B03               	goto	u3390
  6158  1302                     u3391:
  6159  1302  2B47               	goto	l2548
  6160  1303                     u3390:
  6161  1303                     l2514:
  6162  1303  1F66               	btfss	___fladd@signs,6
  6163  1304  2B06               	goto	u3401
  6164  1305  2B07               	goto	u3400
  6165  1306                     u3401:
  6166  1306  2B0B               	goto	l2518
  6167  1307                     u3400:
  6168  1307                     l2516:
  6169  1307  3080               	movlw	128
  6170  1308  00DE               	movwf	??___fladd
  6171  1309  085E               	movf	??___fladd,w
  6172  130A  06E6               	xorwf	___fladd@signs,f
  6173  130B                     l2518:
  6174  130B  0868               	movf	___fladd@bexp,w
  6175  130C  00DE               	movwf	??___fladd
  6176  130D  085E               	movf	??___fladd,w
  6177  130E  00E9               	movwf	___fladd@grs
  6178  130F                     l2520:
  6179  130F  0867               	movf	___fladd@aexp,w
  6180  1310  00DE               	movwf	??___fladd
  6181  1311  085E               	movf	??___fladd,w
  6182  1312  00E8               	movwf	___fladd@bexp
  6183  1313                     l2522:
  6184  1313  0869               	movf	___fladd@grs,w
  6185  1314  00DE               	movwf	??___fladd
  6186  1315  085E               	movf	??___fladd,w
  6187  1316  00E7               	movwf	___fladd@aexp
  6188  1317                     l2524:
  6189  1317  0856               	movf	___fladd@b,w
  6190  1318  00DE               	movwf	??___fladd
  6191  1319  085E               	movf	??___fladd,w
  6192  131A  00E9               	movwf	___fladd@grs
  6193  131B                     l2526:
  6194  131B  085A               	movf	___fladd@a,w
  6195  131C  00DE               	movwf	??___fladd
  6196  131D  085E               	movf	??___fladd,w
  6197  131E  00D6               	movwf	___fladd@b
  6198  131F                     l2528:
  6199  131F  0869               	movf	___fladd@grs,w
  6200  1320  00DE               	movwf	??___fladd
  6201  1321  085E               	movf	??___fladd,w
  6202  1322  00DA               	movwf	___fladd@a
  6203  1323                     l2530:
  6204  1323  0857               	movf	___fladd@b+1,w
  6205  1324  00DE               	movwf	??___fladd
  6206  1325  085E               	movf	??___fladd,w
  6207  1326  00E9               	movwf	___fladd@grs
  6208  1327                     l2532:
  6209  1327  085B               	movf	___fladd@a+1,w
  6210  1328  00DE               	movwf	??___fladd
  6211  1329  085E               	movf	??___fladd,w
  6212  132A  00D7               	movwf	___fladd@b+1
  6213  132B                     l2534:
  6214  132B  0869               	movf	___fladd@grs,w
  6215  132C  00DE               	movwf	??___fladd
  6216  132D  085E               	movf	??___fladd,w
  6217  132E  00DB               	movwf	___fladd@a+1
  6218  132F                     l2536:
  6219  132F  0858               	movf	___fladd@b+2,w
  6220  1330  00DE               	movwf	??___fladd
  6221  1331  085E               	movf	??___fladd,w
  6222  1332  00E9               	movwf	___fladd@grs
  6223  1333                     l2538:
  6224  1333  085C               	movf	___fladd@a+2,w
  6225  1334  00DE               	movwf	??___fladd
  6226  1335  085E               	movf	??___fladd,w
  6227  1336  00D8               	movwf	___fladd@b+2
  6228  1337                     l2540:
  6229  1337  0869               	movf	___fladd@grs,w
  6230  1338  00DE               	movwf	??___fladd
  6231  1339  085E               	movf	??___fladd,w
  6232  133A  00DC               	movwf	___fladd@a+2
  6233  133B                     l2542:
  6234  133B  0859               	movf	___fladd@b+3,w
  6235  133C  00DE               	movwf	??___fladd
  6236  133D  085E               	movf	??___fladd,w
  6237  133E  00E9               	movwf	___fladd@grs
  6238  133F                     l2544:
  6239  133F  085D               	movf	___fladd@a+3,w
  6240  1340  00DE               	movwf	??___fladd
  6241  1341  085E               	movf	??___fladd,w
  6242  1342  00D9               	movwf	___fladd@b+3
  6243  1343                     l2546:
  6244  1343  0869               	movf	___fladd@grs,w
  6245  1344  00DE               	movwf	??___fladd
  6246  1345  085E               	movf	??___fladd,w
  6247  1346  00DD               	movwf	___fladd@a+3
  6248  1347                     l2548:
  6249  1347  01E9               	clrf	___fladd@grs
  6250  1348                     l2550:
  6251  1348  0867               	movf	___fladd@aexp,w
  6252  1349  00DE               	movwf	??___fladd
  6253  134A  01DF               	clrf	??___fladd+1
  6254  134B  085F               	movf	??___fladd+1,w
  6255  134C  00E1               	movwf	??___fladd+3
  6256  134D  0868               	movf	___fladd@bexp,w
  6257  134E  025E               	subwf	??___fladd,w
  6258  134F  00E0               	movwf	??___fladd+2
  6259  1350  1C03               	skipc
  6260  1351  03E1               	decf	??___fladd+3,f
  6261  1352  0861               	movf	??___fladd+3,w
  6262  1353  3A80               	xorlw	128
  6263  1354  00FF               	movwf	btemp+1
  6264  1355  3080               	movlw	128
  6265  1356  027F               	subwf	btemp+1,w
  6266  1357  1D03               	skipz
  6267  1358  2B5B               	goto	u3415
  6268  1359  301A               	movlw	26
  6269  135A  0260               	subwf	??___fladd+2,w
  6270  135B                     u3415:
  6271  135B  1C03               	skipc
  6272  135C  2B5E               	goto	u3411
  6273  135D  2B5F               	goto	u3410
  6274  135E                     u3411:
  6275  135E  2B9C               	goto	l2566
  6276  135F                     u3410:
  6277  135F                     l2552:
  6278  135F  1283               	bcf	3,5	;RP0=0, select bank0
  6279  1360  1303               	bcf	3,6	;RP1=0, select bank0
  6280  1361  0859               	movf	___fladd@b+3,w
  6281  1362  0458               	iorwf	___fladd@b+2,w
  6282  1363  0457               	iorwf	___fladd@b+1,w
  6283  1364  0456               	iorwf	___fladd@b,w
  6284  1365  1D03               	skipz
  6285  1366  2B68               	goto	u3421
  6286  1367  2B6A               	goto	u3420
  6287  1368                     u3421:
  6288  1368  3001               	movlw	1
  6289  1369  2B6B               	goto	u3430
  6290  136A                     u3420:
  6291  136A  3000               	movlw	0
  6292  136B                     u3430:
  6293  136B  00DE               	movwf	??___fladd
  6294  136C  085E               	movf	??___fladd,w
  6295  136D  00E9               	movwf	___fladd@grs
  6296  136E  3000               	movlw	0
  6297  136F  00D9               	movwf	___fladd@b+3
  6298  1370  3000               	movlw	0
  6299  1371  00D8               	movwf	___fladd@b+2
  6300  1372  3000               	movlw	0
  6301  1373  00D7               	movwf	___fladd@b+1
  6302  1374  3000               	movlw	0
  6303  1375  00D6               	movwf	___fladd@b
  6304  1376  0867               	movf	___fladd@aexp,w
  6305  1377  00DE               	movwf	??___fladd
  6306  1378  085E               	movf	??___fladd,w
  6307  1379  00E8               	movwf	___fladd@bexp
  6308  137A  2BA4               	goto	l726
  6309  137B                     l728:
  6310  137B  1C69               	btfss	___fladd@grs,0
  6311  137C  2B7E               	goto	u3441
  6312  137D  2B7F               	goto	u3440
  6313  137E                     u3441:
  6314  137E  2B88               	goto	l2556
  6315  137F                     u3440:
  6316  137F                     l2554:
  6317  137F  0869               	movf	___fladd@grs,w
  6318  1380  00DE               	movwf	??___fladd
  6319  1381  1003               	clrc
  6320  1382  0C5E               	rrf	??___fladd,w
  6321  1383  3801               	iorlw	1
  6322  1384  00DF               	movwf	??___fladd+1
  6323  1385  085F               	movf	??___fladd+1,w
  6324  1386  00E9               	movwf	___fladd@grs
  6325  1387  2B8A               	goto	l2558
  6326  1388                     l2556:
  6327  1388  1003               	clrc
  6328  1389  0CE9               	rrf	___fladd@grs,f
  6329  138A                     l2558:
  6330  138A  1C56               	btfss	___fladd@b,0
  6331  138B  2B8D               	goto	u3451
  6332  138C  2B8E               	goto	u3450
  6333  138D                     u3451:
  6334  138D  2B8F               	goto	l2562
  6335  138E                     u3450:
  6336  138E                     l2560:
  6337  138E  17E9               	bsf	___fladd@grs,7
  6338  138F                     l2562:
  6339  138F  3001               	movlw	1
  6340  1390  00DE               	movwf	??___fladd
  6341  1391                     u3465:
  6342  1391  0D59               	rlf	___fladd@b+3,w
  6343  1392  0CD9               	rrf	___fladd@b+3,f
  6344  1393  0CD8               	rrf	___fladd@b+2,f
  6345  1394  0CD7               	rrf	___fladd@b+1,f
  6346  1395  0CD6               	rrf	___fladd@b,f
  6347  1396  0BDE               	decfsz	??___fladd& (0+127),f
  6348  1397  2B91               	goto	u3465
  6349  1398                     l2564:
  6350  1398  3001               	movlw	1
  6351  1399  00DE               	movwf	??___fladd
  6352  139A  085E               	movf	??___fladd,w
  6353  139B  07E8               	addwf	___fladd@bexp,f
  6354  139C                     l2566:
  6355  139C  1283               	bcf	3,5	;RP0=0, select bank0
  6356  139D  1303               	bcf	3,6	;RP1=0, select bank0
  6357  139E  0867               	movf	___fladd@aexp,w
  6358  139F  0268               	subwf	___fladd@bexp,w
  6359  13A0  1C03               	skipc
  6360  13A1  2BA3               	goto	u3471
  6361  13A2  2BA4               	goto	u3470
  6362  13A3                     u3471:
  6363  13A3  2B7B               	goto	l728
  6364  13A4                     u3470:
  6365  13A4                     l726:
  6366  13A4  1B66               	btfsc	___fladd@signs,6
  6367  13A5  2BA7               	goto	u3481
  6368  13A6  2BA8               	goto	u3480
  6369  13A7                     u3481:
  6370  13A7  2BF3               	goto	l2592
  6371  13A8                     u3480:
  6372  13A8                     l2568:
  6373  13A8  0868               	movf	___fladd@bexp,w
  6374  13A9  1D03               	btfss	3,2
  6375  13AA  2BAC               	goto	u3491
  6376  13AB  2BAD               	goto	u3490
  6377  13AC                     u3491:
  6378  13AC  2BB6               	goto	l2574
  6379  13AD                     u3490:
  6380  13AD                     l2570:
  6381  13AD  3000               	movlw	0
  6382  13AE  00D9               	movwf	?___fladd+3
  6383  13AF  3000               	movlw	0
  6384  13B0  00D8               	movwf	?___fladd+2
  6385  13B1  3000               	movlw	0
  6386  13B2  00D7               	movwf	?___fladd+1
  6387  13B3  3000               	movlw	0
  6388  13B4  00D6               	movwf	?___fladd
  6389  13B5  2D21               	goto	l735
  6390  13B6                     l2574:
  6391  13B6  085A               	movf	___fladd@a,w
  6392  13B7  07D6               	addwf	___fladd@b,f
  6393  13B8  085B               	movf	___fladd@a+1,w
  6394  13B9  1103               	clrz
  6395  13BA  1803               	skipnc
  6396  13BB  3E01               	addlw	1
  6397  13BC  1903               	skipnz
  6398  13BD  2BBF               	goto	u3501
  6399  13BE  07D7               	addwf	___fladd@b+1,f
  6400  13BF                     u3501:
  6401  13BF  085C               	movf	___fladd@a+2,w
  6402  13C0  1103               	clrz
  6403  13C1  1803               	skipnc
  6404  13C2  3E01               	addlw	1
  6405  13C3  1903               	skipnz
  6406  13C4  2BC6               	goto	u3502
  6407  13C5  07D8               	addwf	___fladd@b+2,f
  6408  13C6                     u3502:
  6409  13C6  085D               	movf	___fladd@a+3,w
  6410  13C7  1103               	clrz
  6411  13C8  1803               	skipnc
  6412  13C9  3E01               	addlw	1
  6413  13CA  1903               	skipnz
  6414  13CB  2BCD               	goto	u3503
  6415  13CC  07D9               	addwf	___fladd@b+3,f
  6416  13CD                     u3503:
  6417  13CD                     l2576:
  6418  13CD  1C59               	btfss	___fladd@b+3,0
  6419  13CE  2BD0               	goto	u3511
  6420  13CF  2BD1               	goto	u3510
  6421  13D0                     u3511:
  6422  13D0  2CA7               	goto	l2626
  6423  13D1                     u3510:
  6424  13D1                     l2578:
  6425  13D1  1C69               	btfss	___fladd@grs,0
  6426  13D2  2BD4               	goto	u3521
  6427  13D3  2BD5               	goto	u3520
  6428  13D4                     u3521:
  6429  13D4  2BDE               	goto	l2582
  6430  13D5                     u3520:
  6431  13D5                     l2580:
  6432  13D5  0869               	movf	___fladd@grs,w
  6433  13D6  00DE               	movwf	??___fladd
  6434  13D7  1003               	clrc
  6435  13D8  0C5E               	rrf	??___fladd,w
  6436  13D9  3801               	iorlw	1
  6437  13DA  00DF               	movwf	??___fladd+1
  6438  13DB  085F               	movf	??___fladd+1,w
  6439  13DC  00E9               	movwf	___fladd@grs
  6440  13DD  2BE0               	goto	l2584
  6441  13DE                     l2582:
  6442  13DE  1003               	clrc
  6443  13DF  0CE9               	rrf	___fladd@grs,f
  6444  13E0                     l2584:
  6445  13E0  1C56               	btfss	___fladd@b,0
  6446  13E1  2BE3               	goto	u3531
  6447  13E2  2BE4               	goto	u3530
  6448  13E3                     u3531:
  6449  13E3  2BE5               	goto	l2588
  6450  13E4                     u3530:
  6451  13E4                     l2586:
  6452  13E4  17E9               	bsf	___fladd@grs,7
  6453  13E5                     l2588:
  6454  13E5  3001               	movlw	1
  6455  13E6  00DE               	movwf	??___fladd
  6456  13E7                     u3545:
  6457  13E7  0D59               	rlf	___fladd@b+3,w
  6458  13E8  0CD9               	rrf	___fladd@b+3,f
  6459  13E9  0CD8               	rrf	___fladd@b+2,f
  6460  13EA  0CD7               	rrf	___fladd@b+1,f
  6461  13EB  0CD6               	rrf	___fladd@b,f
  6462  13EC  0BDE               	decfsz	??___fladd& (0+127),f
  6463  13ED  2BE7               	goto	u3545
  6464  13EE                     l2590:
  6465  13EE  3001               	movlw	1
  6466  13EF  00DE               	movwf	??___fladd
  6467  13F0  085E               	movf	??___fladd,w
  6468  13F1  07E8               	addwf	___fladd@bexp,f
  6469  13F2  2CA7               	goto	l2626
  6470  13F3                     l2592:
  6471  13F3  0859               	movf	___fladd@b+3,w
  6472  13F4  3A80               	xorlw	128
  6473  13F5  00FF               	movwf	btemp+1
  6474  13F6  085D               	movf	___fladd@a+3,w
  6475  13F7  3A80               	xorlw	128
  6476  13F8  027F               	subwf	btemp+1,w
  6477  13F9  1D03               	skipz
  6478  13FA  2C05               	goto	u3553
  6479  13FB  085C               	movf	___fladd@a+2,w
  6480  13FC  0258               	subwf	___fladd@b+2,w
  6481  13FD  1D03               	skipz
  6482  13FE  2C05               	goto	u3553
  6483  13FF  085B               	movf	___fladd@a+1,w
  6484  1400  0257               	subwf	___fladd@b+1,w
  6485  1401  1D03               	skipz
  6486  1402  2C05               	goto	u3553
  6487  1403  085A               	movf	___fladd@a,w
  6488  1404  0256               	subwf	___fladd@b,w
  6489  1405                     u3553:
  6490  1405  1803               	skipnc
  6491  1406  2C08               	goto	u3551
  6492  1407  2C09               	goto	u3550
  6493  1408                     u3551:
  6494  1408  2C61               	goto	l2602
  6495  1409                     u3550:
  6496  1409                     l2594:
  6497  1409  30FF               	movlw	255
  6498  140A  00DE               	movwf	??___fladd
  6499  140B  30FF               	movlw	255
  6500  140C  00DF               	movwf	??___fladd+1
  6501  140D  30FF               	movlw	255
  6502  140E  00E0               	movwf	??___fladd+2
  6503  140F  30FF               	movlw	255
  6504  1410  00E1               	movwf	??___fladd+3
  6505  1411  085A               	movf	___fladd@a,w
  6506  1412  00E2               	movwf	??___fladd+4
  6507  1413  085B               	movf	___fladd@a+1,w
  6508  1414  00E3               	movwf	??___fladd+5
  6509  1415  085C               	movf	___fladd@a+2,w
  6510  1416  00E4               	movwf	??___fladd+6
  6511  1417  085D               	movf	___fladd@a+3,w
  6512  1418  00E5               	movwf	??___fladd+7
  6513  1419  0856               	movf	___fladd@b,w
  6514  141A  02E2               	subwf	??___fladd+4,f
  6515  141B  0857               	movf	___fladd@b+1,w
  6516  141C  1C03               	skipc
  6517  141D  0F57               	incfsz	___fladd@b+1,w
  6518  141E  2C20               	goto	u3561
  6519  141F  2C21               	goto	u3562
  6520  1420                     u3561:
  6521  1420  02E3               	subwf	??___fladd+5,f
  6522  1421                     u3562:
  6523  1421  0858               	movf	___fladd@b+2,w
  6524  1422  1C03               	skipc
  6525  1423  0F58               	incfsz	___fladd@b+2,w
  6526  1424  2C26               	goto	u3563
  6527  1425  2C27               	goto	u3564
  6528  1426                     u3563:
  6529  1426  02E4               	subwf	??___fladd+6,f
  6530  1427                     u3564:
  6531  1427  0859               	movf	___fladd@b+3,w
  6532  1428  1C03               	skipc
  6533  1429  0F59               	incfsz	___fladd@b+3,w
  6534  142A  2C2C               	goto	u3565
  6535  142B  2C2D               	goto	u3566
  6536  142C                     u3565:
  6537  142C  02E5               	subwf	??___fladd+7,f
  6538  142D                     u3566:
  6539  142D  0862               	movf	??___fladd+4,w
  6540  142E  07DE               	addwf	??___fladd,f
  6541  142F  0863               	movf	??___fladd+5,w
  6542  1430  1803               	skipnc
  6543  1431  0F63               	incfsz	??___fladd+5,w
  6544  1432  2C34               	goto	u3570
  6545  1433  2C35               	goto	u3571
  6546  1434                     u3570:
  6547  1434  07DF               	addwf	??___fladd+1,f
  6548  1435                     u3571:
  6549  1435  0864               	movf	??___fladd+6,w
  6550  1436  1803               	skipnc
  6551  1437  0F64               	incfsz	??___fladd+6,w
  6552  1438  2C3A               	goto	u3572
  6553  1439  2C3B               	goto	u3573
  6554  143A                     u3572:
  6555  143A  07E0               	addwf	??___fladd+2,f
  6556  143B                     u3573:
  6557  143B  0865               	movf	??___fladd+7,w
  6558  143C  1803               	skipnc
  6559  143D  0A65               	incf	??___fladd+7,w
  6560  143E  07E1               	addwf	??___fladd+3,f
  6561  143F  0861               	movf	??___fladd+3,w
  6562  1440  00D9               	movwf	___fladd@b+3
  6563  1441  0860               	movf	??___fladd+2,w
  6564  1442  00D8               	movwf	___fladd@b+2
  6565  1443  085F               	movf	??___fladd+1,w
  6566  1444  00D7               	movwf	___fladd@b+1
  6567  1445  085E               	movf	??___fladd,w
  6568  1446  00D6               	movwf	___fladd@b
  6569  1447                     l2596:
  6570  1447  3080               	movlw	128
  6571  1448  00DE               	movwf	??___fladd
  6572  1449  085E               	movf	??___fladd,w
  6573  144A  06E6               	xorwf	___fladd@signs,f
  6574  144B  09E9               	comf	___fladd@grs,f
  6575  144C  0AE9               	incf	___fladd@grs,f
  6576  144D                     l2598:
  6577  144D  0869               	movf	___fladd@grs,w
  6578  144E  1D03               	btfss	3,2
  6579  144F  2C51               	goto	u3581
  6580  1450  2C52               	goto	u3580
  6581  1451                     u3581:
  6582  1451  2C6F               	goto	l743
  6583  1452                     u3580:
  6584  1452                     l2600:
  6585  1452  3001               	movlw	1
  6586  1453  07D6               	addwf	___fladd@b,f
  6587  1454  3000               	movlw	0
  6588  1455  1803               	skipnc
  6589  1456  3001               	movlw	1
  6590  1457  07D7               	addwf	___fladd@b+1,f
  6591  1458  3000               	movlw	0
  6592  1459  1803               	skipnc
  6593  145A  3001               	movlw	1
  6594  145B  07D8               	addwf	___fladd@b+2,f
  6595  145C  3000               	movlw	0
  6596  145D  1803               	skipnc
  6597  145E  3001               	movlw	1
  6598  145F  07D9               	addwf	___fladd@b+3,f
  6599  1460  2C6F               	goto	l743
  6600  1461                     l2602:
  6601  1461  085A               	movf	___fladd@a,w
  6602  1462  02D6               	subwf	___fladd@b,f
  6603  1463  085B               	movf	___fladd@a+1,w
  6604  1464  1C03               	skipc
  6605  1465  0F5B               	incfsz	___fladd@a+1,w
  6606  1466  02D7               	subwf	___fladd@b+1,f
  6607  1467  085C               	movf	___fladd@a+2,w
  6608  1468  1C03               	skipc
  6609  1469  0F5C               	incfsz	___fladd@a+2,w
  6610  146A  02D8               	subwf	___fladd@b+2,f
  6611  146B  085D               	movf	___fladd@a+3,w
  6612  146C  1C03               	skipc
  6613  146D  0F5D               	incfsz	___fladd@a+3,w
  6614  146E  02D9               	subwf	___fladd@b+3,f
  6615  146F                     l743:
  6616  146F  0859               	movf	___fladd@b+3,w
  6617  1470  0458               	iorwf	___fladd@b+2,w
  6618  1471  0457               	iorwf	___fladd@b+1,w
  6619  1472  0456               	iorwf	___fladd@b,w
  6620  1473  1D03               	skipz
  6621  1474  2C76               	goto	u3591
  6622  1475  2C77               	goto	u3590
  6623  1476                     u3591:
  6624  1476  2CA3               	goto	l2624
  6625  1477                     u3590:
  6626  1477                     l2604:
  6627  1477  0869               	movf	___fladd@grs,w
  6628  1478  1D03               	btfss	3,2
  6629  1479  2C7B               	goto	u3601
  6630  147A  2C7C               	goto	u3600
  6631  147B                     u3601:
  6632  147B  2CA3               	goto	l2624
  6633  147C                     u3600:
  6634  147C                     l2606:
  6635  147C  3000               	movlw	0
  6636  147D  00D9               	movwf	?___fladd+3
  6637  147E  3000               	movlw	0
  6638  147F  00D8               	movwf	?___fladd+2
  6639  1480  3000               	movlw	0
  6640  1481  00D7               	movwf	?___fladd+1
  6641  1482  3000               	movlw	0
  6642  1483  00D6               	movwf	?___fladd
  6643  1484  2D21               	goto	l735
  6644  1485                     l2610:
  6645  1485  3001               	movlw	1
  6646  1486  00DE               	movwf	??___fladd
  6647  1487                     u3615:
  6648  1487  1003               	clrc
  6649  1488  0DD6               	rlf	___fladd@b,f
  6650  1489  0DD7               	rlf	___fladd@b+1,f
  6651  148A  0DD8               	rlf	___fladd@b+2,f
  6652  148B  0DD9               	rlf	___fladd@b+3,f
  6653  148C  0BDE               	decfsz	??___fladd,f
  6654  148D  2C87               	goto	u3615
  6655  148E                     l2612:
  6656  148E  1FE9               	btfss	___fladd@grs,7
  6657  148F  2C91               	goto	u3621
  6658  1490  2C92               	goto	u3620
  6659  1491                     u3621:
  6660  1491  2C93               	goto	l747
  6661  1492                     u3620:
  6662  1492                     l2614:
  6663  1492  1456               	bsf	___fladd@b,0
  6664  1493                     l747:
  6665  1493  1C69               	btfss	___fladd@grs,0
  6666  1494  2C96               	goto	u3631
  6667  1495  2C97               	goto	u3630
  6668  1496                     u3631:
  6669  1496  2C9A               	goto	l2618
  6670  1497                     u3630:
  6671  1497                     l2616:
  6672  1497  1403               	setc
  6673  1498  0DE9               	rlf	___fladd@grs,f
  6674  1499  2C9C               	goto	l2620
  6675  149A                     l2618:
  6676  149A  1003               	clrc
  6677  149B  0DE9               	rlf	___fladd@grs,f
  6678  149C                     l2620:
  6679  149C  0868               	movf	___fladd@bexp,w
  6680  149D  1903               	btfsc	3,2
  6681  149E  2CA0               	goto	u3641
  6682  149F  2CA1               	goto	u3640
  6683  14A0                     u3641:
  6684  14A0  2CA3               	goto	l2624
  6685  14A1                     u3640:
  6686  14A1                     l2622:
  6687  14A1  3001               	movlw	1
  6688  14A2  02E8               	subwf	___fladd@bexp,f
  6689  14A3                     l2624:
  6690  14A3  1FD8               	btfss	___fladd@b+2,7
  6691  14A4  2CA6               	goto	u3651
  6692  14A5  2CA7               	goto	u3650
  6693  14A6                     u3651:
  6694  14A6  2C85               	goto	l2610
  6695  14A7                     u3650:
  6696  14A7                     l2626:
  6697  14A7  01E7               	clrf	___fladd@aexp
  6698  14A8                     l2628:
  6699  14A8  1FE9               	btfss	___fladd@grs,7
  6700  14A9  2CAB               	goto	u3661
  6701  14AA  2CAC               	goto	u3660
  6702  14AB                     u3661:
  6703  14AB  2CBA               	goto	l2636
  6704  14AC                     u3660:
  6705  14AC                     l2630:
  6706  14AC  0869               	movf	___fladd@grs,w
  6707  14AD  397F               	andlw	127
  6708  14AE  1903               	btfsc	3,2
  6709  14AF  2CB1               	goto	u3671
  6710  14B0  2CB2               	goto	u3670
  6711  14B1                     u3671:
  6712  14B1  2CB5               	goto	l753
  6713  14B2                     u3670:
  6714  14B2                     l2632:
  6715  14B2  01E7               	clrf	___fladd@aexp
  6716  14B3  0AE7               	incf	___fladd@aexp,f
  6717  14B4  2CBA               	goto	l2636
  6718  14B5                     l753:
  6719  14B5  1C56               	btfss	___fladd@b,0
  6720  14B6  2CB8               	goto	u3681
  6721  14B7  2CB9               	goto	u3680
  6722  14B8                     u3681:
  6723  14B8  2CBA               	goto	l2636
  6724  14B9                     u3680:
  6725  14B9  2CB2               	goto	l2632
  6726  14BA                     l2636:
  6727  14BA  0867               	movf	___fladd@aexp,w
  6728  14BB  1903               	btfsc	3,2
  6729  14BC  2CBE               	goto	u3691
  6730  14BD  2CBF               	goto	u3690
  6731  14BE                     u3691:
  6732  14BE  2CF3               	goto	l756
  6733  14BF                     u3690:
  6734  14BF                     l2638:
  6735  14BF  3001               	movlw	1
  6736  14C0  07D6               	addwf	___fladd@b,f
  6737  14C1  3000               	movlw	0
  6738  14C2  1803               	skipnc
  6739  14C3  3001               	movlw	1
  6740  14C4  07D7               	addwf	___fladd@b+1,f
  6741  14C5  3000               	movlw	0
  6742  14C6  1803               	skipnc
  6743  14C7  3001               	movlw	1
  6744  14C8  07D8               	addwf	___fladd@b+2,f
  6745  14C9  3000               	movlw	0
  6746  14CA  1803               	skipnc
  6747  14CB  3001               	movlw	1
  6748  14CC  07D9               	addwf	___fladd@b+3,f
  6749  14CD                     l2640:
  6750  14CD  1C59               	btfss	___fladd@b+3,0
  6751  14CE  2CD0               	goto	u3701
  6752  14CF  2CD1               	goto	u3700
  6753  14D0                     u3701:
  6754  14D0  2CF3               	goto	l756
  6755  14D1                     u3700:
  6756  14D1                     l2642:
  6757  14D1  0856               	movf	___fladd@b,w
  6758  14D2  00DE               	movwf	??___fladd
  6759  14D3  0857               	movf	___fladd@b+1,w
  6760  14D4  00DF               	movwf	??___fladd+1
  6761  14D5  0858               	movf	___fladd@b+2,w
  6762  14D6  00E0               	movwf	??___fladd+2
  6763  14D7  0859               	movf	___fladd@b+3,w
  6764  14D8  00E1               	movwf	??___fladd+3
  6765  14D9  3001               	movlw	1
  6766  14DA  00E2               	movwf	??___fladd+4
  6767  14DB                     u3715:
  6768  14DB  0D61               	rlf	??___fladd+3,w
  6769  14DC  0CE1               	rrf	??___fladd+3,f
  6770  14DD  0CE0               	rrf	??___fladd+2,f
  6771  14DE  0CDF               	rrf	??___fladd+1,f
  6772  14DF  0CDE               	rrf	??___fladd,f
  6773  14E0                     u3710:
  6774  14E0  0BE2               	decfsz	??___fladd+4,f
  6775  14E1  2CDB               	goto	u3715
  6776  14E2  0861               	movf	??___fladd+3,w
  6777  14E3  00D9               	movwf	___fladd@b+3
  6778  14E4  0860               	movf	??___fladd+2,w
  6779  14E5  00D8               	movwf	___fladd@b+2
  6780  14E6  085F               	movf	??___fladd+1,w
  6781  14E7  00D7               	movwf	___fladd@b+1
  6782  14E8  085E               	movf	??___fladd,w
  6783  14E9  00D6               	movwf	___fladd@b
  6784  14EA  0A68               	incf	___fladd@bexp,w
  6785  14EB  1903               	btfsc	3,2
  6786  14EC  2CEE               	goto	u3721
  6787  14ED  2CEF               	goto	u3720
  6788  14EE                     u3721:
  6789  14EE  2CF3               	goto	l756
  6790  14EF                     u3720:
  6791  14EF                     l2644:
  6792  14EF  3001               	movlw	1
  6793  14F0  00DE               	movwf	??___fladd
  6794  14F1  085E               	movf	??___fladd,w
  6795  14F2  07E8               	addwf	___fladd@bexp,f
  6796  14F3                     l756:
  6797  14F3  0A68               	incf	___fladd@bexp,w
  6798  14F4  1903               	btfsc	3,2
  6799  14F5  2CF7               	goto	u3731
  6800  14F6  2CF8               	goto	u3730
  6801  14F7                     u3731:
  6802  14F7  2CFD               	goto	l2648
  6803  14F8                     u3730:
  6804  14F8                     l2646:
  6805  14F8  0868               	movf	___fladd@bexp,w
  6806  14F9  1D03               	btfss	3,2
  6807  14FA  2CFC               	goto	u3741
  6808  14FB  2CFD               	goto	u3740
  6809  14FC                     u3741:
  6810  14FC  2D0B               	goto	l2654
  6811  14FD                     u3740:
  6812  14FD                     l2648:
  6813  14FD  3000               	movlw	0
  6814  14FE  00D9               	movwf	___fladd@b+3
  6815  14FF  3000               	movlw	0
  6816  1500  00D8               	movwf	___fladd@b+2
  6817  1501  3000               	movlw	0
  6818  1502  00D7               	movwf	___fladd@b+1
  6819  1503  3000               	movlw	0
  6820  1504  00D6               	movwf	___fladd@b
  6821  1505                     l2650:
  6822  1505  0868               	movf	___fladd@bexp,w
  6823  1506  1D03               	btfss	3,2
  6824  1507  2D09               	goto	u3751
  6825  1508  2D0A               	goto	u3750
  6826  1509                     u3751:
  6827  1509  2D0B               	goto	l2654
  6828  150A                     u3750:
  6829  150A                     l2652:
  6830  150A  01E6               	clrf	___fladd@signs
  6831  150B                     l2654:
  6832  150B  1C68               	btfss	___fladd@bexp,0
  6833  150C  2D0E               	goto	u3761
  6834  150D  2D0F               	goto	u3760
  6835  150E                     u3761:
  6836  150E  2D11               	goto	l2658
  6837  150F                     u3760:
  6838  150F                     l2656:
  6839  150F  17D8               	bsf	___fladd@b+2,7
  6840  1510  2D15               	goto	l764
  6841  1511                     l2658:
  6842  1511  307F               	movlw	127
  6843  1512  00DE               	movwf	??___fladd
  6844  1513  085E               	movf	??___fladd,w
  6845  1514  05D8               	andwf	___fladd@b+2,f
  6846  1515                     l764:
  6847  1515  0868               	movf	___fladd@bexp,w
  6848  1516  00DE               	movwf	??___fladd
  6849  1517  1003               	clrc
  6850  1518  0C5E               	rrf	??___fladd,w
  6851  1519  00DF               	movwf	??___fladd+1
  6852  151A  085F               	movf	??___fladd+1,w
  6853  151B  00D9               	movwf	___fladd@b+3
  6854  151C                     l2660:
  6855  151C  1FE6               	btfss	___fladd@signs,7
  6856  151D  2D1F               	goto	u3771
  6857  151E  2D20               	goto	u3770
  6858  151F                     u3771:
  6859  151F  2D21               	goto	l765
  6860  1520                     u3770:
  6861  1520                     l2662:
  6862  1520  17D9               	bsf	___fladd@b+3,7
  6863  1521                     l765:
  6864  1521                     l735:
  6865  1521  0008               	return
  6866  1522                     __end_of___fladd:
  6867                           
  6868                           	psect	text18
  6869  1000                     __ptext18:	
  6870 ;; *************** function ___flneg *****************
  6871 ;; Defined at:
  6872 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;  f1              4    2[COMMON] unsigned char 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;		None
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  4    2[COMMON] unsigned char 
  6879 ;; Registers used:
  6880 ;;		wreg
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6886 ;;      Params:         4       0       0       0       0
  6887 ;;      Locals:         0       0       0       0       0
  6888 ;;      Temps:          0       0       0       0       0
  6889 ;;      Totals:         4       0       0       0       0
  6890 ;;Total ram usage:        4 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:    1
  6893 ;; This function calls:
  6894 ;;		Nothing
  6895 ;; This function is called by:
  6896 ;;		_sprintf
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           
  6901                           ;psect for function ___flneg
  6902  1000                     ___flneg:
  6903  1000                     l3044:	
  6904                           ;incstack = 0
  6905                           ; Regs used in ___flneg: [wreg]
  6906                           
  6907  1000  0875               	movf	___flneg@f1+3,w
  6908  1001  0474               	iorwf	___flneg@f1+2,w
  6909  1002  0473               	iorwf	___flneg@f1+1,w
  6910  1003  0472               	iorwf	___flneg@f1,w
  6911  1004  1903               	skipnz
  6912  1005  2807               	goto	u4861
  6913  1006  2808               	goto	u4860
  6914  1007                     u4861:
  6915  1007  280A               	goto	l3048
  6916  1008                     u4860:
  6917  1008                     l3046:
  6918  1008  3080               	movlw	128
  6919  1009  06F5               	xorwf	___flneg@f1+3,f
  6920  100A                     l3048:
  6921  100A                     l594:
  6922  100A  0008               	return
  6923  100B                     __end_of___flneg:
  6924                           
  6925                           	psect	text19
  6926  1EA0                     __ptext19:	
  6927 ;; *************** function ___flge *****************
  6928 ;; Defined at:
  6929 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  ff1             4    2[COMMON] unsigned char 
  6932 ;;  ff2             4    6[COMMON] unsigned char 
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;		None               void
  6937 ;; Registers used:
  6938 ;;		wreg, status,2, status,0
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6944 ;;      Params:         8       0       0       0       0
  6945 ;;      Locals:         0       0       0       0       0
  6946 ;;      Temps:          0       4       0       0       0
  6947 ;;      Totals:         8       4       0       0       0
  6948 ;;Total ram usage:       12 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:    1
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_sprintf
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           
  6959                           ;psect for function ___flge
  6960  1EA0                     ___flge:
  6961  1EA0                     l3024:	
  6962                           ;incstack = 0
  6963                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6964                           
  6965  1EA0  3000               	movlw	0
  6966  1EA1  0572               	andwf	___flge@ff1,w
  6967  1EA2  1283               	bcf	3,5	;RP0=0, select bank0
  6968  1EA3  1303               	bcf	3,6	;RP1=0, select bank0
  6969  1EA4  00A0               	movwf	??___flge
  6970  1EA5  3000               	movlw	0
  6971  1EA6  0573               	andwf	___flge@ff1+1,w
  6972  1EA7  00A1               	movwf	??___flge+1
  6973  1EA8  3080               	movlw	128
  6974  1EA9  0574               	andwf	___flge@ff1+2,w
  6975  1EAA  00A2               	movwf	??___flge+2
  6976  1EAB  307F               	movlw	127
  6977  1EAC  0575               	andwf	___flge@ff1+3,w
  6978  1EAD  00A3               	movwf	??___flge+3
  6979  1EAE  0823               	movf	??___flge+3,w
  6980  1EAF  0422               	iorwf	??___flge+2,w
  6981  1EB0  0421               	iorwf	??___flge+1,w
  6982  1EB1  0420               	iorwf	??___flge,w
  6983  1EB2  1D03               	skipz
  6984  1EB3  2EB5               	goto	u4791
  6985  1EB4  2EB6               	goto	u4790
  6986  1EB5                     u4791:
  6987  1EB5  2EBE               	goto	l586
  6988  1EB6                     u4790:
  6989  1EB6                     l3026:
  6990  1EB6  3000               	movlw	0
  6991  1EB7  00F5               	movwf	___flge@ff1+3
  6992  1EB8  3000               	movlw	0
  6993  1EB9  00F4               	movwf	___flge@ff1+2
  6994  1EBA  3000               	movlw	0
  6995  1EBB  00F3               	movwf	___flge@ff1+1
  6996  1EBC  3000               	movlw	0
  6997  1EBD  00F2               	movwf	___flge@ff1
  6998  1EBE                     l586:
  6999  1EBE  3000               	movlw	0
  7000  1EBF  0576               	andwf	___flge@ff2,w
  7001  1EC0  00A0               	movwf	??___flge
  7002  1EC1  3000               	movlw	0
  7003  1EC2  0577               	andwf	___flge@ff2+1,w
  7004  1EC3  00A1               	movwf	??___flge+1
  7005  1EC4  3080               	movlw	128
  7006  1EC5  0578               	andwf	___flge@ff2+2,w
  7007  1EC6  00A2               	movwf	??___flge+2
  7008  1EC7  307F               	movlw	127
  7009  1EC8  0579               	andwf	___flge@ff2+3,w
  7010  1EC9  00A3               	movwf	??___flge+3
  7011  1ECA  0823               	movf	??___flge+3,w
  7012  1ECB  0422               	iorwf	??___flge+2,w
  7013  1ECC  0421               	iorwf	??___flge+1,w
  7014  1ECD  0420               	iorwf	??___flge,w
  7015  1ECE  1D03               	skipz
  7016  1ECF  2ED1               	goto	u4801
  7017  1ED0  2ED2               	goto	u4800
  7018  1ED1                     u4801:
  7019  1ED1  2EDA               	goto	l3030
  7020  1ED2                     u4800:
  7021  1ED2                     l3028:
  7022  1ED2  3000               	movlw	0
  7023  1ED3  00F9               	movwf	___flge@ff2+3
  7024  1ED4  3000               	movlw	0
  7025  1ED5  00F8               	movwf	___flge@ff2+2
  7026  1ED6  3000               	movlw	0
  7027  1ED7  00F7               	movwf	___flge@ff2+1
  7028  1ED8  3000               	movlw	0
  7029  1ED9  00F6               	movwf	___flge@ff2
  7030  1EDA                     l3030:
  7031  1EDA  1FF5               	btfss	___flge@ff1+3,7
  7032  1EDB  2EDD               	goto	u4811
  7033  1EDC  2EDE               	goto	u4810
  7034  1EDD                     u4811:
  7035  1EDD  2F02               	goto	l3034
  7036  1EDE                     u4810:
  7037  1EDE                     l3032:
  7038  1EDE  3000               	movlw	0
  7039  1EDF  00A0               	movwf	??___flge
  7040  1EE0  3000               	movlw	0
  7041  1EE1  00A1               	movwf	??___flge+1
  7042  1EE2  3000               	movlw	0
  7043  1EE3  00A2               	movwf	??___flge+2
  7044  1EE4  3080               	movlw	128
  7045  1EE5  00A3               	movwf	??___flge+3
  7046  1EE6  0872               	movf	___flge@ff1,w
  7047  1EE7  02A0               	subwf	??___flge,f
  7048  1EE8  0873               	movf	___flge@ff1+1,w
  7049  1EE9  1C03               	skipc
  7050  1EEA  0F73               	incfsz	___flge@ff1+1,w
  7051  1EEB  2EED               	goto	u4821
  7052  1EEC  2EEE               	goto	u4822
  7053  1EED                     u4821:
  7054  1EED  02A1               	subwf	??___flge+1,f
  7055  1EEE                     u4822:
  7056  1EEE  0874               	movf	___flge@ff1+2,w
  7057  1EEF  1C03               	skipc
  7058  1EF0  0F74               	incfsz	___flge@ff1+2,w
  7059  1EF1  2EF3               	goto	u4823
  7060  1EF2  2EF4               	goto	u4824
  7061  1EF3                     u4823:
  7062  1EF3  02A2               	subwf	??___flge+2,f
  7063  1EF4                     u4824:
  7064  1EF4  0875               	movf	___flge@ff1+3,w
  7065  1EF5  1C03               	skipc
  7066  1EF6  0F75               	incfsz	___flge@ff1+3,w
  7067  1EF7  2EF9               	goto	u4825
  7068  1EF8  2EFA               	goto	u4826
  7069  1EF9                     u4825:
  7070  1EF9  02A3               	subwf	??___flge+3,f
  7071  1EFA                     u4826:
  7072  1EFA  0823               	movf	??___flge+3,w
  7073  1EFB  00F5               	movwf	___flge@ff1+3
  7074  1EFC  0822               	movf	??___flge+2,w
  7075  1EFD  00F4               	movwf	___flge@ff1+2
  7076  1EFE  0821               	movf	??___flge+1,w
  7077  1EFF  00F3               	movwf	___flge@ff1+1
  7078  1F00  0820               	movf	??___flge,w
  7079  1F01  00F2               	movwf	___flge@ff1
  7080  1F02                     l3034:
  7081  1F02  1FF9               	btfss	___flge@ff2+3,7
  7082  1F03  2F05               	goto	u4831
  7083  1F04  2F06               	goto	u4830
  7084  1F05                     u4831:
  7085  1F05  2F2A               	goto	l589
  7086  1F06                     u4830:
  7087  1F06                     l3036:
  7088  1F06  3000               	movlw	0
  7089  1F07  00A0               	movwf	??___flge
  7090  1F08  3000               	movlw	0
  7091  1F09  00A1               	movwf	??___flge+1
  7092  1F0A  3000               	movlw	0
  7093  1F0B  00A2               	movwf	??___flge+2
  7094  1F0C  3080               	movlw	128
  7095  1F0D  00A3               	movwf	??___flge+3
  7096  1F0E  0876               	movf	___flge@ff2,w
  7097  1F0F  02A0               	subwf	??___flge,f
  7098  1F10  0877               	movf	___flge@ff2+1,w
  7099  1F11  1C03               	skipc
  7100  1F12  0F77               	incfsz	___flge@ff2+1,w
  7101  1F13  2F15               	goto	u4841
  7102  1F14  2F16               	goto	u4842
  7103  1F15                     u4841:
  7104  1F15  02A1               	subwf	??___flge+1,f
  7105  1F16                     u4842:
  7106  1F16  0878               	movf	___flge@ff2+2,w
  7107  1F17  1C03               	skipc
  7108  1F18  0F78               	incfsz	___flge@ff2+2,w
  7109  1F19  2F1B               	goto	u4843
  7110  1F1A  2F1C               	goto	u4844
  7111  1F1B                     u4843:
  7112  1F1B  02A2               	subwf	??___flge+2,f
  7113  1F1C                     u4844:
  7114  1F1C  0879               	movf	___flge@ff2+3,w
  7115  1F1D  1C03               	skipc
  7116  1F1E  0F79               	incfsz	___flge@ff2+3,w
  7117  1F1F  2F21               	goto	u4845
  7118  1F20  2F22               	goto	u4846
  7119  1F21                     u4845:
  7120  1F21  02A3               	subwf	??___flge+3,f
  7121  1F22                     u4846:
  7122  1F22  0823               	movf	??___flge+3,w
  7123  1F23  00F9               	movwf	___flge@ff2+3
  7124  1F24  0822               	movf	??___flge+2,w
  7125  1F25  00F8               	movwf	___flge@ff2+2
  7126  1F26  0821               	movf	??___flge+1,w
  7127  1F27  00F7               	movwf	___flge@ff2+1
  7128  1F28  0820               	movf	??___flge,w
  7129  1F29  00F6               	movwf	___flge@ff2
  7130  1F2A                     l589:
  7131  1F2A  3080               	movlw	128
  7132  1F2B  06F5               	xorwf	___flge@ff1+3,f
  7133  1F2C  3080               	movlw	128
  7134  1F2D  06F9               	xorwf	___flge@ff2+3,f
  7135  1F2E  0879               	movf	___flge@ff2+3,w
  7136  1F2F  0275               	subwf	___flge@ff1+3,w
  7137  1F30  1D03               	skipz
  7138  1F31  2F3C               	goto	u4855
  7139  1F32  0878               	movf	___flge@ff2+2,w
  7140  1F33  0274               	subwf	___flge@ff1+2,w
  7141  1F34  1D03               	skipz
  7142  1F35  2F3C               	goto	u4855
  7143  1F36  0877               	movf	___flge@ff2+1,w
  7144  1F37  0273               	subwf	___flge@ff1+1,w
  7145  1F38  1D03               	skipz
  7146  1F39  2F3C               	goto	u4855
  7147  1F3A  0876               	movf	___flge@ff2,w
  7148  1F3B  0272               	subwf	___flge@ff1,w
  7149  1F3C                     u4855:
  7150  1F3C  1803               	skipnc
  7151  1F3D  2F3F               	goto	u4851
  7152  1F3E  2F40               	goto	u4850
  7153  1F3F                     u4851:
  7154  1F3F  2F42               	goto	l3040
  7155  1F40                     u4850:
  7156  1F40                     l3038:
  7157  1F40  1003               	clrc
  7158  1F41  2F43               	goto	l590
  7159  1F42                     l3040:
  7160  1F42  1403               	setc
  7161  1F43                     l590:
  7162  1F43  0008               	return
  7163  1F44                     __end_of___flge:
  7164                           
  7165                           	psect	text20
  7166  1C6D                     __ptext20:	
  7167 ;; *************** function ___fleq *****************
  7168 ;; Defined at:
  7169 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;  ff1             4    2[COMMON] unsigned char 
  7172 ;;  ff2             4    6[COMMON] unsigned char 
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;		None               void
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7184 ;;      Params:         8       0       0       0       0
  7185 ;;      Locals:         0       0       0       0       0
  7186 ;;      Temps:          0       4       0       0       0
  7187 ;;      Totals:         8       4       0       0       0
  7188 ;;Total ram usage:       12 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    1
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		_sprintf
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           
  7199                           ;psect for function ___fleq
  7200  1C6D                     ___fleq:
  7201  1C6D                     l3012:	
  7202                           ;incstack = 0
  7203                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7204                           
  7205  1C6D  3000               	movlw	0
  7206  1C6E  0572               	andwf	___fleq@ff1,w
  7207  1C6F  1283               	bcf	3,5	;RP0=0, select bank0
  7208  1C70  1303               	bcf	3,6	;RP1=0, select bank0
  7209  1C71  00A0               	movwf	??___fleq
  7210  1C72  3000               	movlw	0
  7211  1C73  0573               	andwf	___fleq@ff1+1,w
  7212  1C74  00A1               	movwf	??___fleq+1
  7213  1C75  3080               	movlw	128
  7214  1C76  0574               	andwf	___fleq@ff1+2,w
  7215  1C77  00A2               	movwf	??___fleq+2
  7216  1C78  307F               	movlw	127
  7217  1C79  0575               	andwf	___fleq@ff1+3,w
  7218  1C7A  00A3               	movwf	??___fleq+3
  7219  1C7B  0823               	movf	??___fleq+3,w
  7220  1C7C  0422               	iorwf	??___fleq+2,w
  7221  1C7D  0421               	iorwf	??___fleq+1,w
  7222  1C7E  0420               	iorwf	??___fleq,w
  7223  1C7F  1D03               	skipz
  7224  1C80  2C82               	goto	u4761
  7225  1C81  2C83               	goto	u4760
  7226  1C82                     u4761:
  7227  1C82  2C8B               	goto	l581
  7228  1C83                     u4760:
  7229  1C83                     l3014:
  7230  1C83  3000               	movlw	0
  7231  1C84  00F5               	movwf	___fleq@ff1+3
  7232  1C85  3000               	movlw	0
  7233  1C86  00F4               	movwf	___fleq@ff1+2
  7234  1C87  3000               	movlw	0
  7235  1C88  00F3               	movwf	___fleq@ff1+1
  7236  1C89  3000               	movlw	0
  7237  1C8A  00F2               	movwf	___fleq@ff1
  7238  1C8B                     l581:
  7239  1C8B  3000               	movlw	0
  7240  1C8C  0576               	andwf	___fleq@ff2,w
  7241  1C8D  00A0               	movwf	??___fleq
  7242  1C8E  3000               	movlw	0
  7243  1C8F  0577               	andwf	___fleq@ff2+1,w
  7244  1C90  00A1               	movwf	??___fleq+1
  7245  1C91  3080               	movlw	128
  7246  1C92  0578               	andwf	___fleq@ff2+2,w
  7247  1C93  00A2               	movwf	??___fleq+2
  7248  1C94  307F               	movlw	127
  7249  1C95  0579               	andwf	___fleq@ff2+3,w
  7250  1C96  00A3               	movwf	??___fleq+3
  7251  1C97  0823               	movf	??___fleq+3,w
  7252  1C98  0422               	iorwf	??___fleq+2,w
  7253  1C99  0421               	iorwf	??___fleq+1,w
  7254  1C9A  0420               	iorwf	??___fleq,w
  7255  1C9B  1D03               	skipz
  7256  1C9C  2C9E               	goto	u4771
  7257  1C9D  2C9F               	goto	u4770
  7258  1C9E                     u4771:
  7259  1C9E  2CA7               	goto	l582
  7260  1C9F                     u4770:
  7261  1C9F                     l3016:
  7262  1C9F  3000               	movlw	0
  7263  1CA0  00F9               	movwf	___fleq@ff2+3
  7264  1CA1  3000               	movlw	0
  7265  1CA2  00F8               	movwf	___fleq@ff2+2
  7266  1CA3  3000               	movlw	0
  7267  1CA4  00F7               	movwf	___fleq@ff2+1
  7268  1CA5  3000               	movlw	0
  7269  1CA6  00F6               	movwf	___fleq@ff2
  7270  1CA7                     l582:
  7271  1CA7  0879               	movf	___fleq@ff2+3,w
  7272  1CA8  0675               	xorwf	___fleq@ff1+3,w
  7273  1CA9  1D03               	skipz
  7274  1CAA  2CB5               	goto	u4785
  7275  1CAB  0878               	movf	___fleq@ff2+2,w
  7276  1CAC  0674               	xorwf	___fleq@ff1+2,w
  7277  1CAD  1D03               	skipz
  7278  1CAE  2CB5               	goto	u4785
  7279  1CAF  0877               	movf	___fleq@ff2+1,w
  7280  1CB0  0673               	xorwf	___fleq@ff1+1,w
  7281  1CB1  1D03               	skipz
  7282  1CB2  2CB5               	goto	u4785
  7283  1CB3  0876               	movf	___fleq@ff2,w
  7284  1CB4  0672               	xorwf	___fleq@ff1,w
  7285  1CB5                     u4785:
  7286  1CB5  1903               	skipnz
  7287  1CB6  2CB8               	goto	u4781
  7288  1CB7  2CB9               	goto	u4780
  7289  1CB8                     u4781:
  7290  1CB8  2CBB               	goto	l3020
  7291  1CB9                     u4780:
  7292  1CB9                     l3018:
  7293  1CB9  1003               	clrc
  7294  1CBA  2CBC               	goto	l583
  7295  1CBB                     l3020:
  7296  1CBB  1403               	setc
  7297  1CBC                     l583:
  7298  1CBC  0008               	return
  7299  1CBD                     __end_of___fleq:
  7300                           
  7301                           	psect	text21
  7302  1B1A                     __ptext21:	
  7303 ;; *************** function _setup *****************
  7304 ;; Defined at:
  7305 ;;		line 125 in file "maestro.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;		None
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;		None
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  1    wreg      void 
  7312 ;; Registers used:
  7313 ;;		wreg, status,2, status,0, pclath, cstack
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7319 ;;      Params:         0       0       0       0       0
  7320 ;;      Locals:         0       0       0       0       0
  7321 ;;      Temps:          0       0       0       0       0
  7322 ;;      Totals:         0       0       0       0       0
  7323 ;;Total ram usage:        0 bytes
  7324 ;; Hardware stack levels used:    1
  7325 ;; Hardware stack levels required when called:    3
  7326 ;; This function calls:
  7327 ;;		_I2C_Master_Init
  7328 ;; This function is called by:
  7329 ;;		_main
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           
  7334                           ;psect for function _setup
  7335  1B1A                     _setup:
  7336  1B1A                     l3186:	
  7337                           ;incstack = 0
  7338                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  7339                           
  7340                           
  7341                           ;maestro.c: 126:     ANSEL = 0;
  7342  1B1A  1683               	bsf	3,5	;RP0=1, select bank3
  7343  1B1B  1703               	bsf	3,6	;RP1=1, select bank3
  7344  1B1C  0188               	clrf	8	;volatile
  7345                           
  7346                           ;maestro.c: 127:     ANSELH = 0;
  7347  1B1D  0189               	clrf	9	;volatile
  7348                           
  7349                           ;maestro.c: 128:     TRISD = 0;
  7350  1B1E  1683               	bsf	3,5	;RP0=1, select bank1
  7351  1B1F  1303               	bcf	3,6	;RP1=0, select bank1
  7352  1B20  0188               	clrf	8	;volatile
  7353                           
  7354                           ;maestro.c: 129:     TRISA = 0;
  7355  1B21  0185               	clrf	5	;volatile
  7356                           
  7357                           ;maestro.c: 130:     PORTD = 0;
  7358  1B22  1283               	bcf	3,5	;RP0=0, select bank0
  7359  1B23  1303               	bcf	3,6	;RP1=0, select bank0
  7360  1B24  0188               	clrf	8	;volatile
  7361                           
  7362                           ;maestro.c: 131:     PORTA = 0;
  7363  1B25  0185               	clrf	5	;volatile
  7364  1B26                     l3188:
  7365                           
  7366                           ;maestro.c: 132:     INTCONbits.GIE = 1;
  7367  1B26  178B               	bsf	11,7	;volatile
  7368  1B27                     l3190:
  7369                           
  7370                           ;maestro.c: 133:     INTCONbits.PEIE = 1;
  7371  1B27  170B               	bsf	11,6	;volatile
  7372  1B28                     l3192:
  7373                           
  7374                           ;maestro.c: 134:     PIE1bits.RCIE = 1;
  7375  1B28  1683               	bsf	3,5	;RP0=1, select bank1
  7376  1B29  1303               	bcf	3,6	;RP1=0, select bank1
  7377  1B2A  168C               	bsf	12,5	;volatile
  7378  1B2B                     l3194:
  7379                           
  7380                           ;maestro.c: 136:     I2C_Master_Init(100000);
  7381  1B2B  3000               	movlw	0
  7382  1B2C  1283               	bcf	3,5	;RP0=0, select bank0
  7383  1B2D  1303               	bcf	3,6	;RP1=0, select bank0
  7384  1B2E  00A8               	movwf	I2C_Master_Init@c+3
  7385  1B2F  3001               	movlw	1
  7386  1B30  00A7               	movwf	I2C_Master_Init@c+2
  7387  1B31  3086               	movlw	134
  7388  1B32  00A6               	movwf	I2C_Master_Init@c+1
  7389  1B33  30A0               	movlw	160
  7390  1B34  00A5               	movwf	I2C_Master_Init@c
  7391  1B35  160A  158A  23B5  160A  158A  	fcall	_I2C_Master_Init
  7392  1B3A                     l160:
  7393  1B3A  0008               	return
  7394  1B3B                     __end_of_setup:
  7395                           
  7396                           	psect	text22
  7397  1BB5                     __ptext22:	
  7398 ;; *************** function _I2C_Master_Init *****************
  7399 ;; Defined at:
  7400 ;;		line 19 in file "I2C.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  c               4    5[BANK0 ] const unsigned long 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg, status,2, status,0, pclath, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7414 ;;      Params:         0       4       0       0       0
  7415 ;;      Locals:         0       0       0       0       0
  7416 ;;      Temps:          0       4       0       0       0
  7417 ;;      Totals:         0       8       0       0       0
  7418 ;;Total ram usage:        8 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    2
  7421 ;; This function calls:
  7422 ;;		___lldiv
  7423 ;; This function is called by:
  7424 ;;		_setup
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           
  7429                           ;psect for function _I2C_Master_Init
  7430  1BB5                     _I2C_Master_Init:
  7431  1BB5                     l2804:	
  7432                           ;incstack = 0
  7433                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  7434                           
  7435                           
  7436                           ;I2C.c: 19: void I2C_Master_Init(const unsigned long c);I2C.c: 20: {;I2C.c: 21:     SSPC
      +                          ON = 0b00101000;
  7437  1BB5  3028               	movlw	40
  7438  1BB6  1283               	bcf	3,5	;RP0=0, select bank0
  7439  1BB7  1303               	bcf	3,6	;RP1=0, select bank0
  7440  1BB8  0094               	movwf	20	;volatile
  7441  1BB9                     l2806:
  7442                           
  7443                           ;I2C.c: 22:     SSPCON2 = 0;
  7444  1BB9  1683               	bsf	3,5	;RP0=1, select bank1
  7445  1BBA  1303               	bcf	3,6	;RP1=0, select bank1
  7446  1BBB  0191               	clrf	17	;volatile
  7447  1BBC                     l2808:
  7448                           
  7449                           ;I2C.c: 23:     SSPADD = (4000000/(4*c))-1;
  7450  1BBC  1283               	bcf	3,5	;RP0=0, select bank0
  7451  1BBD  1303               	bcf	3,6	;RP1=0, select bank0
  7452  1BBE  0825               	movf	I2C_Master_Init@c,w
  7453  1BBF  00A9               	movwf	??_I2C_Master_Init
  7454  1BC0  0826               	movf	I2C_Master_Init@c+1,w
  7455  1BC1  00AA               	movwf	??_I2C_Master_Init+1
  7456  1BC2  0827               	movf	I2C_Master_Init@c+2,w
  7457  1BC3  00AB               	movwf	??_I2C_Master_Init+2
  7458  1BC4  0828               	movf	I2C_Master_Init@c+3,w
  7459  1BC5  00AC               	movwf	??_I2C_Master_Init+3
  7460  1BC6  3002               	movlw	2
  7461  1BC7                     u4155:
  7462  1BC7  1003               	clrc
  7463  1BC8  0DA9               	rlf	??_I2C_Master_Init,f
  7464  1BC9  0DAA               	rlf	??_I2C_Master_Init+1,f
  7465  1BCA  0DAB               	rlf	??_I2C_Master_Init+2,f
  7466  1BCB  0DAC               	rlf	??_I2C_Master_Init+3,f
  7467  1BCC                     u4150:
  7468  1BCC  3EFF               	addlw	-1
  7469  1BCD  1D03               	skipz
  7470  1BCE  2BC7               	goto	u4155
  7471  1BCF  082C               	movf	??_I2C_Master_Init+3,w
  7472  1BD0  00F5               	movwf	___lldiv@divisor+3
  7473  1BD1  082B               	movf	??_I2C_Master_Init+2,w
  7474  1BD2  00F4               	movwf	___lldiv@divisor+2
  7475  1BD3  082A               	movf	??_I2C_Master_Init+1,w
  7476  1BD4  00F3               	movwf	___lldiv@divisor+1
  7477  1BD5  0829               	movf	??_I2C_Master_Init,w
  7478  1BD6  00F2               	movwf	___lldiv@divisor
  7479  1BD7  3000               	movlw	0
  7480  1BD8  00F9               	movwf	___lldiv@dividend+3
  7481  1BD9  303D               	movlw	61
  7482  1BDA  00F8               	movwf	___lldiv@dividend+2
  7483  1BDB  3009               	movlw	9
  7484  1BDC  00F7               	movwf	___lldiv@dividend+1
  7485  1BDD  3000               	movlw	0
  7486  1BDE  00F6               	movwf	___lldiv@dividend
  7487  1BDF  160A  158A  25BC  160A  158A  	fcall	___lldiv
  7488  1BE4  0872               	movf	?___lldiv,w
  7489  1BE5  3EFF               	addlw	255
  7490  1BE6  1683               	bsf	3,5	;RP0=1, select bank1
  7491  1BE7  1303               	bcf	3,6	;RP1=0, select bank1
  7492  1BE8  0093               	movwf	19	;volatile
  7493  1BE9                     l2810:
  7494                           
  7495                           ;I2C.c: 24:     SSPSTAT = 0;
  7496  1BE9  0194               	clrf	20	;volatile
  7497  1BEA                     l2812:
  7498                           
  7499                           ;I2C.c: 25:     TRISCbits.TRISC3 = 1;
  7500  1BEA  1587               	bsf	7,3	;volatile
  7501  1BEB                     l2814:
  7502                           
  7503                           ;I2C.c: 26:     TRISCbits.TRISC4 = 1;
  7504  1BEB  1607               	bsf	7,4	;volatile
  7505  1BEC                     l29:
  7506  1BEC  0008               	return
  7507  1BED                     __end_of_I2C_Master_Init:
  7508                           
  7509                           	psect	text23
  7510  1DBC                     __ptext23:	
  7511 ;; *************** function ___lldiv *****************
  7512 ;; Defined at:
  7513 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  divisor         4    2[COMMON] unsigned long 
  7516 ;;  dividend        4    6[COMMON] unsigned long 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;  quotient        4    0[BANK0 ] unsigned long 
  7519 ;;  counter         1    4[BANK0 ] unsigned char 
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  4    2[COMMON] unsigned long 
  7522 ;; Registers used:
  7523 ;;		wreg, status,2, status,0
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7529 ;;      Params:         8       0       0       0       0
  7530 ;;      Locals:         0       5       0       0       0
  7531 ;;      Temps:          1       0       0       0       0
  7532 ;;      Totals:         9       5       0       0       0
  7533 ;;Total ram usage:       14 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; Hardware stack levels required when called:    1
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_I2C_Master_Init
  7540 ;;		_sprintf
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           
  7545                           ;psect for function ___lldiv
  7546  1DBC                     ___lldiv:
  7547  1DBC                     l2316:	
  7548                           ;incstack = 0
  7549                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7550                           
  7551  1DBC  3000               	movlw	0
  7552  1DBD  1283               	bcf	3,5	;RP0=0, select bank0
  7553  1DBE  1303               	bcf	3,6	;RP1=0, select bank0
  7554  1DBF  00A3               	movwf	___lldiv@quotient+3
  7555  1DC0  3000               	movlw	0
  7556  1DC1  00A2               	movwf	___lldiv@quotient+2
  7557  1DC2  3000               	movlw	0
  7558  1DC3  00A1               	movwf	___lldiv@quotient+1
  7559  1DC4  3000               	movlw	0
  7560  1DC5  00A0               	movwf	___lldiv@quotient
  7561  1DC6  0875               	movf	___lldiv@divisor+3,w
  7562  1DC7  0474               	iorwf	___lldiv@divisor+2,w
  7563  1DC8  0473               	iorwf	___lldiv@divisor+1,w
  7564  1DC9  0472               	iorwf	___lldiv@divisor,w
  7565  1DCA  1903               	skipnz
  7566  1DCB  2DCD               	goto	u2931
  7567  1DCC  2DCE               	goto	u2930
  7568  1DCD                     u2931:
  7569  1DCD  2E1B               	goto	l2336
  7570  1DCE                     u2930:
  7571  1DCE                     l2318:
  7572  1DCE  01A4               	clrf	___lldiv@counter
  7573  1DCF  0AA4               	incf	___lldiv@counter,f
  7574  1DD0  2DDE               	goto	l2322
  7575  1DD1                     l2320:
  7576  1DD1  3001               	movlw	1
  7577  1DD2  00FA               	movwf	??___lldiv
  7578  1DD3                     u2945:
  7579  1DD3  1003               	clrc
  7580  1DD4  0DF2               	rlf	___lldiv@divisor,f
  7581  1DD5  0DF3               	rlf	___lldiv@divisor+1,f
  7582  1DD6  0DF4               	rlf	___lldiv@divisor+2,f
  7583  1DD7  0DF5               	rlf	___lldiv@divisor+3,f
  7584  1DD8  0BFA               	decfsz	??___lldiv,f
  7585  1DD9  2DD3               	goto	u2945
  7586  1DDA  3001               	movlw	1
  7587  1DDB  00FA               	movwf	??___lldiv
  7588  1DDC  087A               	movf	??___lldiv,w
  7589  1DDD  07A4               	addwf	___lldiv@counter,f
  7590  1DDE                     l2322:
  7591  1DDE  1FF5               	btfss	___lldiv@divisor+3,7
  7592  1DDF  2DE1               	goto	u2951
  7593  1DE0  2DE2               	goto	u2950
  7594  1DE1                     u2951:
  7595  1DE1  2DD1               	goto	l2320
  7596  1DE2                     u2950:
  7597  1DE2                     l2324:
  7598  1DE2  3001               	movlw	1
  7599  1DE3  00FA               	movwf	??___lldiv
  7600  1DE4                     u2965:
  7601  1DE4  1003               	clrc
  7602  1DE5  0DA0               	rlf	___lldiv@quotient,f
  7603  1DE6  0DA1               	rlf	___lldiv@quotient+1,f
  7604  1DE7  0DA2               	rlf	___lldiv@quotient+2,f
  7605  1DE8  0DA3               	rlf	___lldiv@quotient+3,f
  7606  1DE9  0BFA               	decfsz	??___lldiv,f
  7607  1DEA  2DE4               	goto	u2965
  7608  1DEB                     l2326:
  7609  1DEB  0875               	movf	___lldiv@divisor+3,w
  7610  1DEC  0279               	subwf	___lldiv@dividend+3,w
  7611  1DED  1D03               	skipz
  7612  1DEE  2DF9               	goto	u2975
  7613  1DEF  0874               	movf	___lldiv@divisor+2,w
  7614  1DF0  0278               	subwf	___lldiv@dividend+2,w
  7615  1DF1  1D03               	skipz
  7616  1DF2  2DF9               	goto	u2975
  7617  1DF3  0873               	movf	___lldiv@divisor+1,w
  7618  1DF4  0277               	subwf	___lldiv@dividend+1,w
  7619  1DF5  1D03               	skipz
  7620  1DF6  2DF9               	goto	u2975
  7621  1DF7  0872               	movf	___lldiv@divisor,w
  7622  1DF8  0276               	subwf	___lldiv@dividend,w
  7623  1DF9                     u2975:
  7624  1DF9  1C03               	skipc
  7625  1DFA  2DFC               	goto	u2971
  7626  1DFB  2DFD               	goto	u2970
  7627  1DFC                     u2971:
  7628  1DFC  2E0C               	goto	l2332
  7629  1DFD                     u2970:
  7630  1DFD                     l2328:
  7631  1DFD  0872               	movf	___lldiv@divisor,w
  7632  1DFE  02F6               	subwf	___lldiv@dividend,f
  7633  1DFF  0873               	movf	___lldiv@divisor+1,w
  7634  1E00  1C03               	skipc
  7635  1E01  0F73               	incfsz	___lldiv@divisor+1,w
  7636  1E02  02F7               	subwf	___lldiv@dividend+1,f
  7637  1E03  0874               	movf	___lldiv@divisor+2,w
  7638  1E04  1C03               	skipc
  7639  1E05  0F74               	incfsz	___lldiv@divisor+2,w
  7640  1E06  02F8               	subwf	___lldiv@dividend+2,f
  7641  1E07  0875               	movf	___lldiv@divisor+3,w
  7642  1E08  1C03               	skipc
  7643  1E09  0F75               	incfsz	___lldiv@divisor+3,w
  7644  1E0A  02F9               	subwf	___lldiv@dividend+3,f
  7645  1E0B                     l2330:
  7646  1E0B  1420               	bsf	___lldiv@quotient,0
  7647  1E0C                     l2332:
  7648  1E0C  3001               	movlw	1
  7649  1E0D                     u2985:
  7650  1E0D  1003               	clrc
  7651  1E0E  0CF5               	rrf	___lldiv@divisor+3,f
  7652  1E0F  0CF4               	rrf	___lldiv@divisor+2,f
  7653  1E10  0CF3               	rrf	___lldiv@divisor+1,f
  7654  1E11  0CF2               	rrf	___lldiv@divisor,f
  7655  1E12  3EFF               	addlw	-1
  7656  1E13  1D03               	skipz
  7657  1E14  2E0D               	goto	u2985
  7658  1E15                     l2334:
  7659  1E15  3001               	movlw	1
  7660  1E16  02A4               	subwf	___lldiv@counter,f
  7661  1E17  1D03               	btfss	3,2
  7662  1E18  2E1A               	goto	u2991
  7663  1E19  2E1B               	goto	u2990
  7664  1E1A                     u2991:
  7665  1E1A  2DE2               	goto	l2324
  7666  1E1B                     u2990:
  7667  1E1B                     l2336:
  7668  1E1B  0823               	movf	___lldiv@quotient+3,w
  7669  1E1C  00F5               	movwf	?___lldiv+3
  7670  1E1D  0822               	movf	___lldiv@quotient+2,w
  7671  1E1E  00F4               	movwf	?___lldiv+2
  7672  1E1F  0821               	movf	___lldiv@quotient+1,w
  7673  1E20  00F3               	movwf	?___lldiv+1
  7674  1E21  0820               	movf	___lldiv@quotient,w
  7675  1E22  00F2               	movwf	?___lldiv
  7676  1E23                     l431:
  7677  1E23  0008               	return
  7678  1E24                     __end_of___lldiv:
  7679                           
  7680                           	psect	text24
  7681  1AF9                     __ptext24:	
  7682 ;; *************** function _send_crct *****************
  7683 ;; Defined at:
  7684 ;;		line 165 in file "maestro.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  st              1    wreg     PTR unsigned char 
  7687 ;;		 -> f1(10), 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;  st              1    6[COMMON] PTR unsigned char 
  7690 ;;		 -> f1(10), 
  7691 ;;  i               2    4[COMMON] int 
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7701 ;;      Params:         0       0       0       0       0
  7702 ;;      Locals:         3       0       0       0       0
  7703 ;;      Temps:          1       0       0       0       0
  7704 ;;      Totals:         4       0       0       0       0
  7705 ;;Total ram usage:        4 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    2
  7708 ;; This function calls:
  7709 ;;		_send_char
  7710 ;; This function is called by:
  7711 ;;		_main
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           
  7716                           ;psect for function _send_crct
  7717  1AF9                     _send_crct:
  7718                           
  7719                           ;incstack = 0
  7720                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7721                           ;send_crct@st stored from wreg
  7722  1AF9  00F6               	movwf	send_crct@st
  7723  1AFA                     l3526:
  7724                           
  7725                           ;maestro.c: 166:     int i = 0;
  7726  1AFA  01F4               	clrf	send_crct@i
  7727  1AFB  01F5               	clrf	send_crct@i+1
  7728                           
  7729                           ;maestro.c: 167:     while (st[i] != 0){
  7730  1AFC  2B0E               	goto	l3532
  7731  1AFD                     l3528:
  7732                           
  7733                           ;maestro.c: 168:         send_char(st[i]);
  7734  1AFD  0874               	movf	send_crct@i,w
  7735  1AFE  0776               	addwf	send_crct@st,w
  7736  1AFF  00F3               	movwf	??_send_crct
  7737  1B00  0873               	movf	??_send_crct,w
  7738  1B01  0084               	movwf	4
  7739  1B02  0800               	movf	0,w
  7740  1B03  160A  158A  22BC  160A  158A  	fcall	_send_char
  7741  1B08                     l3530:
  7742                           
  7743                           ;maestro.c: 169:         i++;
  7744  1B08  3001               	movlw	1
  7745  1B09  07F4               	addwf	send_crct@i,f
  7746  1B0A  1803               	skipnc
  7747  1B0B  0AF5               	incf	send_crct@i+1,f
  7748  1B0C  3000               	movlw	0
  7749  1B0D  07F5               	addwf	send_crct@i+1,f
  7750  1B0E                     l3532:
  7751                           
  7752                           ;maestro.c: 167:     while (st[i] != 0){
  7753  1B0E  0874               	movf	send_crct@i,w
  7754  1B0F  0776               	addwf	send_crct@st,w
  7755  1B10  00F3               	movwf	??_send_crct
  7756  1B11  0873               	movf	??_send_crct,w
  7757  1B12  0084               	movwf	4
  7758  1B13  1383               	bcf	3,7	;select IRP bank0
  7759  1B14  0800               	movf	0,w
  7760  1B15  1D03               	btfss	3,2
  7761  1B16  2B18               	goto	u5721
  7762  1B17  2B19               	goto	u5720
  7763  1B18                     u5721:
  7764  1B18  2AFD               	goto	l3528
  7765  1B19                     u5720:
  7766  1B19                     l175:
  7767  1B19  0008               	return
  7768  1B1A                     __end_of_send_crct:
  7769                           
  7770                           	psect	text25
  7771  1ABC                     __ptext25:	
  7772 ;; *************** function _send_char *****************
  7773 ;; Defined at:
  7774 ;;		line 172 in file "maestro.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  dato            1    wreg     unsigned char 
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;  dato            1    2[COMMON] unsigned char 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      void 
  7781 ;; Registers used:
  7782 ;;		wreg
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7788 ;;      Params:         0       0       0       0       0
  7789 ;;      Locals:         1       0       0       0       0
  7790 ;;      Temps:          0       0       0       0       0
  7791 ;;      Totals:         1       0       0       0       0
  7792 ;;Total ram usage:        1 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    1
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_send_crct
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           
  7803                           ;psect for function _send_char
  7804  1ABC                     _send_char:
  7805                           
  7806                           ;incstack = 0
  7807                           ; Regs used in _send_char: [wreg]
  7808                           ;send_char@dato stored from wreg
  7809  1ABC  00F2               	movwf	send_char@dato
  7810  1ABD                     l2820:
  7811  1ABD                     l178:	
  7812                           ;maestro.c: 173:     while(!TXIF);
  7813                           
  7814  1ABD  1283               	bcf	3,5	;RP0=0, select bank0
  7815  1ABE  1303               	bcf	3,6	;RP1=0, select bank0
  7816  1ABF  1E0C               	btfss	12,4	;volatile
  7817  1AC0  2AC2               	goto	u4181
  7818  1AC1  2AC3               	goto	u4180
  7819  1AC2                     u4181:
  7820  1AC2  2ABD               	goto	l178
  7821  1AC3                     u4180:
  7822  1AC3                     l2822:
  7823                           
  7824                           ;maestro.c: 174:     TXREG = dato;
  7825  1AC3  0872               	movf	send_char@dato,w
  7826  1AC4  0099               	movwf	25	;volatile
  7827  1AC5                     l181:
  7828  1AC5  0008               	return
  7829  1AC6                     __end_of_send_char:
  7830                           
  7831                           	psect	text26
  7832  0801                     __ptext26:	
  7833 ;; *************** function _conv *****************
  7834 ;; Defined at:
  7835 ;;		line 160 in file "maestro.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  aa              1    wreg     unsigned char 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  aa              1   18[BANK0 ] unsigned char 
  7840 ;;  result          4   14[BANK0 ] float 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  4    6[BANK0 ] float 
  7843 ;; Registers used:
  7844 ;;		wreg, status,2, status,0, pclath, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7850 ;;      Params:         0       4       0       0       0
  7851 ;;      Locals:         0       5       0       0       0
  7852 ;;      Temps:          0       4       0       0       0
  7853 ;;      Totals:         0      13       0       0       0
  7854 ;;Total ram usage:       13 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    2
  7857 ;; This function calls:
  7858 ;;		___xxtofl
  7859 ;; This function is called by:
  7860 ;;		_main
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           
  7865                           ;psect for function _conv
  7866  0801                     _conv:
  7867                           
  7868                           ;incstack = 0
  7869                           ; Regs used in _conv: [wreg+status,2+status,0+pclath+cstack]
  7870                           ;conv@aa stored from wreg
  7871  0801  1283               	bcf	3,5	;RP0=0, select bank0
  7872  0802  1303               	bcf	3,6	;RP1=0, select bank0
  7873  0803  00B2               	movwf	conv@aa
  7874  0804                     l3214:
  7875                           
  7876                           ;maestro.c: 161:     float result;;maestro.c: 162:     result = aa*1;
  7877  0804  0832               	movf	conv@aa,w
  7878  0805  00AA               	movwf	??_conv
  7879  0806  01AB               	clrf	??_conv+1
  7880  0807  01AC               	clrf	??_conv+2
  7881  0808  01AD               	clrf	??_conv+3
  7882  0809  082D               	movf	??_conv+3,w
  7883  080A  00F5               	movwf	___xxtofl@val+3
  7884  080B  082C               	movf	??_conv+2,w
  7885  080C  00F4               	movwf	___xxtofl@val+2
  7886  080D  082B               	movf	??_conv+1,w
  7887  080E  00F3               	movwf	___xxtofl@val+1
  7888  080F  082A               	movf	??_conv,w
  7889  0810  00F2               	movwf	___xxtofl@val
  7890  0811  3001               	movlw	1
  7891  0812  160A  158A  2744  120A  158A  	fcall	___xxtofl
  7892  0817  0875               	movf	?___xxtofl+3,w
  7893  0818  1283               	bcf	3,5	;RP0=0, select bank0
  7894  0819  1303               	bcf	3,6	;RP1=0, select bank0
  7895  081A  00B1               	movwf	conv@result+3
  7896  081B  0874               	movf	?___xxtofl+2,w
  7897  081C  00B0               	movwf	conv@result+2
  7898  081D  0873               	movf	?___xxtofl+1,w
  7899  081E  00AF               	movwf	conv@result+1
  7900  081F  0872               	movf	?___xxtofl,w
  7901  0820  00AE               	movwf	conv@result
  7902  0821                     l3216:
  7903                           
  7904                           ;maestro.c: 163:     return result;
  7905  0821  0831               	movf	conv@result+3,w
  7906  0822  00A9               	movwf	?_conv+3
  7907  0823  0830               	movf	conv@result+2,w
  7908  0824  00A8               	movwf	?_conv+2
  7909  0825  082F               	movf	conv@result+1,w
  7910  0826  00A7               	movwf	?_conv+1
  7911  0827  082E               	movf	conv@result,w
  7912  0828  00A6               	movwf	?_conv
  7913  0829                     l169:
  7914  0829  0008               	return
  7915  082A                     __end_of_conv:
  7916                           
  7917                           	psect	text27
  7918  1F44                     __ptext27:	
  7919 ;; *************** function ___xxtofl *****************
  7920 ;; Defined at:
  7921 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;  sign            1    wreg     unsigned char 
  7924 ;;  val             4    2[COMMON] long 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;  sign            1    0[BANK0 ] unsigned char 
  7927 ;;  arg             4    2[BANK0 ] unsigned long 
  7928 ;;  exp             1    1[BANK0 ] unsigned char 
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  4    2[COMMON] unsigned char 
  7931 ;; Registers used:
  7932 ;;		wreg, status,2, status,0
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7938 ;;      Params:         4       0       0       0       0
  7939 ;;      Locals:         0       6       0       0       0
  7940 ;;      Temps:          4       0       0       0       0
  7941 ;;      Totals:         8       6       0       0       0
  7942 ;;Total ram usage:       14 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:    1
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_conv
  7949 ;;		_sprintf
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           
  7954                           ;psect for function ___xxtofl
  7955  1F44                     ___xxtofl:
  7956                           
  7957                           ;incstack = 0
  7958                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7959                           ;___xxtofl@sign stored from wreg
  7960  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  7961  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  7962  1F46  00A0               	movwf	___xxtofl@sign
  7963  1F47                     l3114:
  7964  1F47  0820               	movf	___xxtofl@sign,w
  7965  1F48  1903               	btfsc	3,2
  7966  1F49  2F4B               	goto	u5031
  7967  1F4A  2F4C               	goto	u5030
  7968  1F4B                     u5031:
  7969  1F4B  2F60               	goto	l3120
  7970  1F4C                     u5030:
  7971  1F4C                     l3116:
  7972  1F4C  1FF5               	btfss	___xxtofl@val+3,7
  7973  1F4D  2F4F               	goto	u5041
  7974  1F4E  2F50               	goto	u5040
  7975  1F4F                     u5041:
  7976  1F4F  2F60               	goto	l3120
  7977  1F50                     u5040:
  7978  1F50                     l3118:
  7979  1F50  0972               	comf	___xxtofl@val,w
  7980  1F51  00A2               	movwf	___xxtofl@arg
  7981  1F52  0973               	comf	___xxtofl@val+1,w
  7982  1F53  00A3               	movwf	___xxtofl@arg+1
  7983  1F54  0974               	comf	___xxtofl@val+2,w
  7984  1F55  00A4               	movwf	___xxtofl@arg+2
  7985  1F56  0975               	comf	___xxtofl@val+3,w
  7986  1F57  00A5               	movwf	___xxtofl@arg+3
  7987  1F58  0AA2               	incf	___xxtofl@arg,f
  7988  1F59  1903               	skipnz
  7989  1F5A  0AA3               	incf	___xxtofl@arg+1,f
  7990  1F5B  1903               	skipnz
  7991  1F5C  0AA4               	incf	___xxtofl@arg+2,f
  7992  1F5D  1903               	skipnz
  7993  1F5E  0AA5               	incf	___xxtofl@arg+3,f
  7994  1F5F  2F68               	goto	l862
  7995  1F60                     l3120:
  7996  1F60  0875               	movf	___xxtofl@val+3,w
  7997  1F61  00A5               	movwf	___xxtofl@arg+3
  7998  1F62  0874               	movf	___xxtofl@val+2,w
  7999  1F63  00A4               	movwf	___xxtofl@arg+2
  8000  1F64  0873               	movf	___xxtofl@val+1,w
  8001  1F65  00A3               	movwf	___xxtofl@arg+1
  8002  1F66  0872               	movf	___xxtofl@val,w
  8003  1F67  00A2               	movwf	___xxtofl@arg
  8004  1F68                     l862:
  8005  1F68  0875               	movf	___xxtofl@val+3,w
  8006  1F69  0474               	iorwf	___xxtofl@val+2,w
  8007  1F6A  0473               	iorwf	___xxtofl@val+1,w
  8008  1F6B  0472               	iorwf	___xxtofl@val,w
  8009  1F6C  1D03               	skipz
  8010  1F6D  2F6F               	goto	u5051
  8011  1F6E  2F70               	goto	u5050
  8012  1F6F                     u5051:
  8013  1F6F  2F79               	goto	l3126
  8014  1F70                     u5050:
  8015  1F70                     l3122:
  8016  1F70  3000               	movlw	0
  8017  1F71  00F5               	movwf	?___xxtofl+3
  8018  1F72  3000               	movlw	0
  8019  1F73  00F4               	movwf	?___xxtofl+2
  8020  1F74  3000               	movlw	0
  8021  1F75  00F3               	movwf	?___xxtofl+1
  8022  1F76  3000               	movlw	0
  8023  1F77  00F2               	movwf	?___xxtofl
  8024  1F78  2FFF               	goto	l864
  8025  1F79                     l3126:
  8026  1F79  3096               	movlw	150
  8027  1F7A  00F6               	movwf	??___xxtofl
  8028  1F7B  0876               	movf	??___xxtofl,w
  8029  1F7C  00A1               	movwf	___xxtofl@exp
  8030  1F7D  2F8B               	goto	l3130
  8031  1F7E                     l3128:
  8032  1F7E  3001               	movlw	1
  8033  1F7F  00F6               	movwf	??___xxtofl
  8034  1F80  0876               	movf	??___xxtofl,w
  8035  1F81  07A1               	addwf	___xxtofl@exp,f
  8036  1F82  3001               	movlw	1
  8037  1F83                     u5065:
  8038  1F83  1003               	clrc
  8039  1F84  0CA5               	rrf	___xxtofl@arg+3,f
  8040  1F85  0CA4               	rrf	___xxtofl@arg+2,f
  8041  1F86  0CA3               	rrf	___xxtofl@arg+1,f
  8042  1F87  0CA2               	rrf	___xxtofl@arg,f
  8043  1F88  3EFF               	addlw	-1
  8044  1F89  1D03               	skipz
  8045  1F8A  2F83               	goto	u5065
  8046  1F8B                     l3130:
  8047  1F8B  30FE               	movlw	254
  8048  1F8C  0525               	andwf	___xxtofl@arg+3,w
  8049  1F8D  1D03               	btfss	3,2
  8050  1F8E  2F90               	goto	u5071
  8051  1F8F  2F91               	goto	u5070
  8052  1F90                     u5071:
  8053  1F90  2F7E               	goto	l3128
  8054  1F91                     u5070:
  8055  1F91  2FAD               	goto	l868
  8056  1F92                     l3132:
  8057  1F92  3001               	movlw	1
  8058  1F93  00F6               	movwf	??___xxtofl
  8059  1F94  0876               	movf	??___xxtofl,w
  8060  1F95  07A1               	addwf	___xxtofl@exp,f
  8061  1F96                     l3134:
  8062  1F96  3001               	movlw	1
  8063  1F97  07A2               	addwf	___xxtofl@arg,f
  8064  1F98  3000               	movlw	0
  8065  1F99  1803               	skipnc
  8066  1F9A  3001               	movlw	1
  8067  1F9B  07A3               	addwf	___xxtofl@arg+1,f
  8068  1F9C  3000               	movlw	0
  8069  1F9D  1803               	skipnc
  8070  1F9E  3001               	movlw	1
  8071  1F9F  07A4               	addwf	___xxtofl@arg+2,f
  8072  1FA0  3000               	movlw	0
  8073  1FA1  1803               	skipnc
  8074  1FA2  3001               	movlw	1
  8075  1FA3  07A5               	addwf	___xxtofl@arg+3,f
  8076  1FA4                     l3136:
  8077  1FA4  3001               	movlw	1
  8078  1FA5                     u5085:
  8079  1FA5  1003               	clrc
  8080  1FA6  0CA5               	rrf	___xxtofl@arg+3,f
  8081  1FA7  0CA4               	rrf	___xxtofl@arg+2,f
  8082  1FA8  0CA3               	rrf	___xxtofl@arg+1,f
  8083  1FA9  0CA2               	rrf	___xxtofl@arg,f
  8084  1FAA  3EFF               	addlw	-1
  8085  1FAB  1D03               	skipz
  8086  1FAC  2FA5               	goto	u5085
  8087  1FAD                     l868:
  8088  1FAD  30FF               	movlw	255
  8089  1FAE  0525               	andwf	___xxtofl@arg+3,w
  8090  1FAF  1D03               	btfss	3,2
  8091  1FB0  2FB2               	goto	u5091
  8092  1FB1  2FB3               	goto	u5090
  8093  1FB2                     u5091:
  8094  1FB2  2F92               	goto	l3132
  8095  1FB3                     u5090:
  8096  1FB3  2FBF               	goto	l3140
  8097  1FB4                     l3138:
  8098  1FB4  3001               	movlw	1
  8099  1FB5  02A1               	subwf	___xxtofl@exp,f
  8100  1FB6  3001               	movlw	1
  8101  1FB7  00F6               	movwf	??___xxtofl
  8102  1FB8                     u5105:
  8103  1FB8  1003               	clrc
  8104  1FB9  0DA2               	rlf	___xxtofl@arg,f
  8105  1FBA  0DA3               	rlf	___xxtofl@arg+1,f
  8106  1FBB  0DA4               	rlf	___xxtofl@arg+2,f
  8107  1FBC  0DA5               	rlf	___xxtofl@arg+3,f
  8108  1FBD  0BF6               	decfsz	??___xxtofl,f
  8109  1FBE  2FB8               	goto	u5105
  8110  1FBF                     l3140:
  8111  1FBF  1BA4               	btfsc	___xxtofl@arg+2,7
  8112  1FC0  2FC2               	goto	u5111
  8113  1FC1  2FC3               	goto	u5110
  8114  1FC2                     u5111:
  8115  1FC2  2FC9               	goto	l875
  8116  1FC3                     u5110:
  8117  1FC3                     l3142:
  8118  1FC3  3002               	movlw	2
  8119  1FC4  0221               	subwf	___xxtofl@exp,w
  8120  1FC5  1803               	skipnc
  8121  1FC6  2FC8               	goto	u5121
  8122  1FC7  2FC9               	goto	u5120
  8123  1FC8                     u5121:
  8124  1FC8  2FB4               	goto	l3138
  8125  1FC9                     u5120:
  8126  1FC9                     l875:
  8127  1FC9  1821               	btfsc	___xxtofl@exp,0
  8128  1FCA  2FCC               	goto	u5131
  8129  1FCB  2FCD               	goto	u5130
  8130  1FCC                     u5131:
  8131  1FCC  2FD5               	goto	l876
  8132  1FCD                     u5130:
  8133  1FCD                     l3144:
  8134  1FCD  30FF               	movlw	255
  8135  1FCE  05A2               	andwf	___xxtofl@arg,f
  8136  1FCF  30FF               	movlw	255
  8137  1FD0  05A3               	andwf	___xxtofl@arg+1,f
  8138  1FD1  307F               	movlw	127
  8139  1FD2  05A4               	andwf	___xxtofl@arg+2,f
  8140  1FD3  30FF               	movlw	255
  8141  1FD4  05A5               	andwf	___xxtofl@arg+3,f
  8142  1FD5                     l876:
  8143  1FD5  1003               	clrc
  8144  1FD6  0CA1               	rrf	___xxtofl@exp,f
  8145  1FD7                     l3146:
  8146  1FD7  0821               	movf	___xxtofl@exp,w
  8147  1FD8  00F6               	movwf	??___xxtofl
  8148  1FD9  01F7               	clrf	??___xxtofl+1
  8149  1FDA  01F8               	clrf	??___xxtofl+2
  8150  1FDB  01F9               	clrf	??___xxtofl+3
  8151  1FDC  3018               	movlw	24
  8152  1FDD                     u5145:
  8153  1FDD  1003               	clrc
  8154  1FDE  0DF6               	rlf	??___xxtofl,f
  8155  1FDF  0DF7               	rlf	??___xxtofl+1,f
  8156  1FE0  0DF8               	rlf	??___xxtofl+2,f
  8157  1FE1  0DF9               	rlf	??___xxtofl+3,f
  8158  1FE2                     u5140:
  8159  1FE2  3EFF               	addlw	-1
  8160  1FE3  1D03               	skipz
  8161  1FE4  2FDD               	goto	u5145
  8162  1FE5  0876               	movf	??___xxtofl,w
  8163  1FE6  04A2               	iorwf	___xxtofl@arg,f
  8164  1FE7  0877               	movf	??___xxtofl+1,w
  8165  1FE8  04A3               	iorwf	___xxtofl@arg+1,f
  8166  1FE9  0878               	movf	??___xxtofl+2,w
  8167  1FEA  04A4               	iorwf	___xxtofl@arg+2,f
  8168  1FEB  0879               	movf	??___xxtofl+3,w
  8169  1FEC  04A5               	iorwf	___xxtofl@arg+3,f
  8170  1FED                     l3148:
  8171  1FED  0820               	movf	___xxtofl@sign,w
  8172  1FEE  1903               	btfsc	3,2
  8173  1FEF  2FF1               	goto	u5151
  8174  1FF0  2FF2               	goto	u5150
  8175  1FF1                     u5151:
  8176  1FF1  2FF7               	goto	l3154
  8177  1FF2                     u5150:
  8178  1FF2                     l3150:
  8179  1FF2  1FF5               	btfss	___xxtofl@val+3,7
  8180  1FF3  2FF5               	goto	u5161
  8181  1FF4  2FF6               	goto	u5160
  8182  1FF5                     u5161:
  8183  1FF5  2FF7               	goto	l3154
  8184  1FF6                     u5160:
  8185  1FF6                     l3152:
  8186  1FF6  17A5               	bsf	___xxtofl@arg+3,7
  8187  1FF7                     l3154:
  8188  1FF7  0825               	movf	___xxtofl@arg+3,w
  8189  1FF8  00F5               	movwf	?___xxtofl+3
  8190  1FF9  0824               	movf	___xxtofl@arg+2,w
  8191  1FFA  00F4               	movwf	?___xxtofl+2
  8192  1FFB  0823               	movf	___xxtofl@arg+1,w
  8193  1FFC  00F3               	movwf	?___xxtofl+1
  8194  1FFD  0822               	movf	___xxtofl@arg,w
  8195  1FFE  00F2               	movwf	?___xxtofl
  8196  1FFF                     l864:
  8197  1FFF  0008               	return
  8198  2000                     __end_of___xxtofl:
  8199                           
  8200                           	psect	text28
  8201  100B                     __ptext28:	
  8202 ;; *************** function _cfg_usart *****************
  8203 ;; Defined at:
  8204 ;;		line 142 in file "maestro.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;		None
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;		None
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  1    wreg      void 
  8211 ;; Registers used:
  8212 ;;		wreg, status,2
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8218 ;;      Params:         0       0       0       0       0
  8219 ;;      Locals:         0       0       0       0       0
  8220 ;;      Temps:          0       0       0       0       0
  8221 ;;      Totals:         0       0       0       0       0
  8222 ;;Total ram usage:        0 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    1
  8225 ;; This function calls:
  8226 ;;		Nothing
  8227 ;; This function is called by:
  8228 ;;		_main
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           
  8233                           ;psect for function _cfg_usart
  8234  100B                     _cfg_usart:
  8235  100B                     l3200:	
  8236                           ;incstack = 0
  8237                           ; Regs used in _cfg_usart: [wreg+status,2]
  8238                           
  8239                           
  8240                           ;maestro.c: 143:     TXSTAbits.SYNC = 0;
  8241  100B  1683               	bsf	3,5	;RP0=1, select bank1
  8242  100C  1303               	bcf	3,6	;RP1=0, select bank1
  8243  100D  1218               	bcf	24,4	;volatile
  8244                           
  8245                           ;maestro.c: 144:     TXSTAbits.BRGH = 1;
  8246  100E  1518               	bsf	24,2	;volatile
  8247                           
  8248                           ;maestro.c: 146:     BAUDCTLbits.BRG16 = 1;
  8249  100F  1683               	bsf	3,5	;RP0=1, select bank3
  8250  1010  1703               	bsf	3,6	;RP1=1, select bank3
  8251  1011  1587               	bsf	7,3	;volatile
  8252  1012                     l3202:
  8253                           
  8254                           ;maestro.c: 148:     SPBRG = 103;
  8255  1012  3067               	movlw	103
  8256  1013  1683               	bsf	3,5	;RP0=1, select bank1
  8257  1014  1303               	bcf	3,6	;RP1=0, select bank1
  8258  1015  0099               	movwf	25	;volatile
  8259  1016                     l3204:
  8260                           
  8261                           ;maestro.c: 149:     SPBRGH = 0;
  8262  1016  019A               	clrf	26	;volatile
  8263  1017                     l3206:
  8264                           
  8265                           ;maestro.c: 151:     RCSTAbits.SPEN = 1;
  8266  1017  1283               	bcf	3,5	;RP0=0, select bank0
  8267  1018  1303               	bcf	3,6	;RP1=0, select bank0
  8268  1019  1798               	bsf	24,7	;volatile
  8269  101A                     l3208:
  8270                           
  8271                           ;maestro.c: 152:     RCSTAbits.RX9 = 0;
  8272  101A  1318               	bcf	24,6	;volatile
  8273  101B                     l3210:
  8274                           
  8275                           ;maestro.c: 153:     RCSTAbits.CREN = 1;
  8276  101B  1618               	bsf	24,4	;volatile
  8277  101C                     l3212:
  8278                           
  8279                           ;maestro.c: 155:     TXSTAbits.TXEN = 1;
  8280  101C  1683               	bsf	3,5	;RP0=1, select bank1
  8281  101D  1303               	bcf	3,6	;RP1=0, select bank1
  8282  101E  1698               	bsf	24,5	;volatile
  8283  101F                     l166:
  8284  101F  0008               	return
  8285  1020                     __end_of_cfg_usart:
  8286                           
  8287                           	psect	text29
  8288  1A90                     __ptext29:	
  8289 ;; *************** function _cfg_clk *****************
  8290 ;; Defined at:
  8291 ;;		line 138 in file "maestro.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;		None
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;		None
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      void 
  8298 ;; Registers used:
  8299 ;;		wreg, status,2, status,0
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8305 ;;      Params:         0       0       0       0       0
  8306 ;;      Locals:         0       0       0       0       0
  8307 ;;      Temps:          0       0       0       0       0
  8308 ;;      Totals:         0       0       0       0       0
  8309 ;;Total ram usage:        0 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    1
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		_main
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           
  8320                           ;psect for function _cfg_clk
  8321  1A90                     _cfg_clk:
  8322  1A90                     l3196:	
  8323                           ;incstack = 0
  8324                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  8325                           
  8326                           
  8327                           ;maestro.c: 139:     OSCCONbits.IRCF = 0b110;
  8328  1A90  1683               	bsf	3,5	;RP0=1, select bank1
  8329  1A91  1303               	bcf	3,6	;RP1=0, select bank1
  8330  1A92  080F               	movf	15,w	;volatile
  8331  1A93  398F               	andlw	-113
  8332  1A94  3860               	iorlw	96
  8333  1A95  008F               	movwf	15	;volatile
  8334  1A96                     l3198:
  8335                           
  8336                           ;maestro.c: 140:     OSCCONbits.SCS = 1;
  8337  1A96  140F               	bsf	15,0	;volatile
  8338  1A97                     l163:
  8339  1A97  0008               	return
  8340  1A98                     __end_of_cfg_clk:
  8341                           
  8342                           	psect	text30
  8343  1AB2                     __ptext30:	
  8344 ;; *************** function _I2C_Master_Write *****************
  8345 ;; Defined at:
  8346 ;;		line 68 in file "I2C.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  d               2    2[COMMON] unsigned int 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0, pclath, cstack
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8360 ;;      Params:         2       0       0       0       0
  8361 ;;      Locals:         0       0       0       0       0
  8362 ;;      Temps:          0       0       0       0       0
  8363 ;;      Totals:         2       0       0       0       0
  8364 ;;Total ram usage:        2 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    2
  8367 ;; This function calls:
  8368 ;;		_I2C_Master_Wait
  8369 ;; This function is called by:
  8370 ;;		_main
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           
  8375                           ;psect for function _I2C_Master_Write
  8376  1AB2                     _I2C_Master_Write:
  8377  1AB2                     l3166:	
  8378                           ;incstack = 0
  8379                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8380                           
  8381                           
  8382                           ;I2C.c: 68: void I2C_Master_Write(unsigned d);I2C.c: 69: {;I2C.c: 70:     I2C_Master_Wai
      +                          t();
  8383  1AB2  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8384  1AB7                     l3168:
  8385                           
  8386                           ;I2C.c: 71:     SSPBUF = d;
  8387  1AB7  0872               	movf	I2C_Master_Write@d,w
  8388  1AB8  1283               	bcf	3,5	;RP0=0, select bank0
  8389  1AB9  1303               	bcf	3,6	;RP1=0, select bank0
  8390  1ABA  0093               	movwf	19	;volatile
  8391  1ABB                     l47:
  8392  1ABB  0008               	return
  8393  1ABC                     __end_of_I2C_Master_Write:
  8394                           
  8395                           	psect	text31
  8396  1AA9                     __ptext31:	
  8397 ;; *************** function _I2C_Master_Stop *****************
  8398 ;; Defined at:
  8399 ;;		line 58 in file "I2C.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;		None
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;		None
  8404 ;; Return value:  Size  Location     Type
  8405 ;;                  1    wreg      void 
  8406 ;; Registers used:
  8407 ;;		wreg, status,2, status,0, pclath, cstack
  8408 ;; Tracked objects:
  8409 ;;		On entry : 0/0
  8410 ;;		On exit  : 0/0
  8411 ;;		Unchanged: 0/0
  8412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8413 ;;      Params:         0       0       0       0       0
  8414 ;;      Locals:         0       0       0       0       0
  8415 ;;      Temps:          0       0       0       0       0
  8416 ;;      Totals:         0       0       0       0       0
  8417 ;;Total ram usage:        0 bytes
  8418 ;; Hardware stack levels used:    1
  8419 ;; Hardware stack levels required when called:    2
  8420 ;; This function calls:
  8421 ;;		_I2C_Master_Wait
  8422 ;; This function is called by:
  8423 ;;		_main
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427                           
  8428                           ;psect for function _I2C_Master_Stop
  8429  1AA9                     _I2C_Master_Stop:
  8430  1AA9                     l3162:	
  8431                           ;incstack = 0
  8432                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8433                           
  8434                           
  8435                           ;I2C.c: 60:     I2C_Master_Wait();
  8436  1AA9  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8437  1AAE                     l3164:
  8438                           
  8439                           ;I2C.c: 61:     SSPCON2bits.PEN = 1;
  8440  1AAE  1683               	bsf	3,5	;RP0=1, select bank1
  8441  1AAF  1303               	bcf	3,6	;RP1=0, select bank1
  8442  1AB0  1511               	bsf	17,2	;volatile
  8443  1AB1                     l44:
  8444  1AB1  0008               	return
  8445  1AB2                     __end_of_I2C_Master_Stop:
  8446                           
  8447                           	psect	text32
  8448  1AA0                     __ptext32:	
  8449 ;; *************** function _I2C_Master_Start *****************
  8450 ;; Defined at:
  8451 ;;		line 42 in file "I2C.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;		None
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;		None
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2, status,0, pclath, cstack
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8465 ;;      Params:         0       0       0       0       0
  8466 ;;      Locals:         0       0       0       0       0
  8467 ;;      Temps:          0       0       0       0       0
  8468 ;;      Totals:         0       0       0       0       0
  8469 ;;Total ram usage:        0 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    2
  8472 ;; This function calls:
  8473 ;;		_I2C_Master_Wait
  8474 ;; This function is called by:
  8475 ;;		_main
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           
  8480                           ;psect for function _I2C_Master_Start
  8481  1AA0                     _I2C_Master_Start:
  8482  1AA0                     l3158:	
  8483                           ;incstack = 0
  8484                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8485                           
  8486                           
  8487                           ;I2C.c: 44:     I2C_Master_Wait();
  8488  1AA0  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8489  1AA5                     l3160:
  8490                           
  8491                           ;I2C.c: 45:     SSPCON2bits.SEN = 1;
  8492  1AA5  1683               	bsf	3,5	;RP0=1, select bank1
  8493  1AA6  1303               	bcf	3,6	;RP1=0, select bank1
  8494  1AA7  1411               	bsf	17,0	;volatile
  8495  1AA8                     l38:
  8496  1AA8  0008               	return
  8497  1AA9                     __end_of_I2C_Master_Start:
  8498                           
  8499                           	psect	text33
  8500  1B87                     __ptext33:	
  8501 ;; *************** function _I2C_Master_Read *****************
  8502 ;; Defined at:
  8503 ;;		line 77 in file "I2C.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  a               2    2[COMMON] unsigned short 
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;  temp            2    6[COMMON] unsigned short 
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  2    2[COMMON] unsigned short 
  8510 ;; Registers used:
  8511 ;;		wreg, status,2, status,0, pclath, cstack
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8517 ;;      Params:         2       0       0       0       0
  8518 ;;      Locals:         2       0       0       0       0
  8519 ;;      Temps:          2       0       0       0       0
  8520 ;;      Totals:         6       0       0       0       0
  8521 ;;Total ram usage:        6 bytes
  8522 ;; Hardware stack levels used:    1
  8523 ;; Hardware stack levels required when called:    2
  8524 ;; This function calls:
  8525 ;;		_I2C_Master_Wait
  8526 ;; This function is called by:
  8527 ;;		_main
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           
  8532                           ;psect for function _I2C_Master_Read
  8533  1B87                     _I2C_Master_Read:
  8534  1B87                     l3170:	
  8535                           ;incstack = 0
  8536                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  8537                           
  8538                           
  8539                           ;I2C.c: 77: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 78: {;I2C.c: 79:    
      +                           unsigned short temp;;I2C.c: 80:     I2C_Master_Wait();
  8540  1B87  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8541  1B8C                     l3172:
  8542                           
  8543                           ;I2C.c: 81:     SSPCON2bits.RCEN = 1;
  8544  1B8C  1683               	bsf	3,5	;RP0=1, select bank1
  8545  1B8D  1303               	bcf	3,6	;RP1=0, select bank1
  8546  1B8E  1591               	bsf	17,3	;volatile
  8547                           
  8548                           ;I2C.c: 82:     I2C_Master_Wait();
  8549  1B8F  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8550  1B94                     l3174:
  8551                           
  8552                           ;I2C.c: 83:     temp = SSPBUF;
  8553  1B94  1283               	bcf	3,5	;RP0=0, select bank0
  8554  1B95  1303               	bcf	3,6	;RP1=0, select bank0
  8555  1B96  0813               	movf	19,w	;volatile
  8556  1B97  00F4               	movwf	??_I2C_Master_Read
  8557  1B98  01F5               	clrf	??_I2C_Master_Read+1
  8558  1B99  0874               	movf	??_I2C_Master_Read,w
  8559  1B9A  00F6               	movwf	I2C_Master_Read@temp
  8560  1B9B  0875               	movf	??_I2C_Master_Read+1,w
  8561  1B9C  00F7               	movwf	I2C_Master_Read@temp+1
  8562  1B9D                     l3176:
  8563                           
  8564                           ;I2C.c: 84:     I2C_Master_Wait();
  8565  1B9D  120A  118A  27F0  160A  158A  	fcall	_I2C_Master_Wait
  8566  1BA2                     l3178:
  8567                           
  8568                           ;I2C.c: 85:     if(a == 1){
  8569  1BA2  0372               	decf	I2C_Master_Read@a,w
  8570  1BA3  0473               	iorwf	I2C_Master_Read@a+1,w
  8571  1BA4  1D03               	btfss	3,2
  8572  1BA5  2BA7               	goto	u5171
  8573  1BA6  2BA8               	goto	u5170
  8574  1BA7                     u5171:
  8575  1BA7  2BAC               	goto	l50
  8576  1BA8                     u5170:
  8577  1BA8                     l3180:
  8578                           
  8579                           ;I2C.c: 86:         SSPCON2bits.ACKDT = 0;
  8580  1BA8  1683               	bsf	3,5	;RP0=1, select bank1
  8581  1BA9  1303               	bcf	3,6	;RP1=0, select bank1
  8582  1BAA  1291               	bcf	17,5	;volatile
  8583                           
  8584                           ;I2C.c: 87:     }else{
  8585  1BAB  2BAF               	goto	l51
  8586  1BAC                     l50:
  8587                           
  8588                           ;I2C.c: 88:         SSPCON2bits.ACKDT = 1;
  8589  1BAC  1683               	bsf	3,5	;RP0=1, select bank1
  8590  1BAD  1303               	bcf	3,6	;RP1=0, select bank1
  8591  1BAE  1691               	bsf	17,5	;volatile
  8592  1BAF                     l51:	
  8593                           ;I2C.c: 89:     }
  8594                           
  8595                           
  8596                           ;I2C.c: 90:     SSPCON2bits.ACKEN = 1;
  8597  1BAF  1611               	bsf	17,4	;volatile
  8598  1BB0                     l3182:
  8599                           
  8600                           ;I2C.c: 91:     return temp;
  8601  1BB0  0877               	movf	I2C_Master_Read@temp+1,w
  8602  1BB1  00F3               	movwf	?_I2C_Master_Read+1
  8603  1BB2  0876               	movf	I2C_Master_Read@temp,w
  8604  1BB3  00F2               	movwf	?_I2C_Master_Read
  8605  1BB4                     l52:
  8606  1BB4  0008               	return
  8607  1BB5                     __end_of_I2C_Master_Read:
  8608                           
  8609                           	psect	text34
  8610  07F0                     __ptext34:	
  8611 ;; *************** function _I2C_Master_Wait *****************
  8612 ;; Defined at:
  8613 ;;		line 35 in file "I2C.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;		None
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;		None
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      void 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8627 ;;      Params:         0       0       0       0       0
  8628 ;;      Locals:         0       0       0       0       0
  8629 ;;      Temps:          0       0       0       0       0
  8630 ;;      Totals:         0       0       0       0       0
  8631 ;;Total ram usage:        0 bytes
  8632 ;; Hardware stack levels used:    1
  8633 ;; Hardware stack levels required when called:    1
  8634 ;; This function calls:
  8635 ;;		Nothing
  8636 ;; This function is called by:
  8637 ;;		_I2C_Master_Start
  8638 ;;		_I2C_Master_Stop
  8639 ;;		_I2C_Master_Write
  8640 ;;		_I2C_Master_Read
  8641 ;;		_I2C_Master_RepeatedStart
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           
  8646                           ;psect for function _I2C_Master_Wait
  8647  07F0                     _I2C_Master_Wait:
  8648  07F0                     l2816:	
  8649                           ;incstack = 0
  8650                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8651                           
  8652  07F0                     l32:	
  8653                           ;I2C.c: 37:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8654                           
  8655  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  8656  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  8657  07F2  1914               	btfsc	20,2	;volatile
  8658  07F3  2FF5               	goto	u4161
  8659  07F4  2FF6               	goto	u4160
  8660  07F5                     u4161:
  8661  07F5  2FF0               	goto	l32
  8662  07F6                     u4160:
  8663  07F6                     l2818:
  8664  07F6  0811               	movf	17,w	;volatile
  8665  07F7  391F               	andlw	31
  8666  07F8  1D03               	btfss	3,2
  8667  07F9  2FFB               	goto	u4171
  8668  07FA  2FFC               	goto	u4170
  8669  07FB                     u4171:
  8670  07FB  2FF0               	goto	l32
  8671  07FC                     u4170:
  8672  07FC                     l35:
  8673  07FC  0008               	return
  8674  07FD                     __end_of_I2C_Master_Wait:
  8675                           
  8676                           	psect	text35
  8677  1AD8                     __ptext35:	
  8678 ;; *************** function _isr *****************
  8679 ;; Defined at:
  8680 ;;		line 67 in file "maestro.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;		None
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;		None
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      void 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2, status,0
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8694 ;;      Params:         0       0       0       0       0
  8695 ;;      Locals:         0       0       0       0       0
  8696 ;;      Temps:          2       0       0       0       0
  8697 ;;      Totals:         2       0       0       0       0
  8698 ;;Total ram usage:        2 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		Interrupt level 1
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           
  8708                           ;psect for function _isr
  8709  1AD8                     _isr:
  8710  1AD8                     i1l3538:
  8711                           
  8712                           ;maestro.c: 69:     if(PIR1bits.RCIF){
  8713  1AD8  1283               	bcf	3,5	;RP0=0, select bank0
  8714  1AD9  1303               	bcf	3,6	;RP1=0, select bank0
  8715  1ADA  1E8C               	btfss	12,5	;volatile
  8716  1ADB  2ADD               	goto	u573_21
  8717  1ADC  2ADE               	goto	u573_20
  8718  1ADD                     u573_21:
  8719  1ADD  2AF2               	goto	i1l147
  8720  1ADE                     u573_20:
  8721  1ADE                     i1l3540:
  8722                           
  8723                           ;maestro.c: 70:         if(RCREG == '1'){
  8724  1ADE  3031               	movlw	49
  8725  1ADF  061A               	xorwf	26,w	;volatile
  8726  1AE0  1D03               	btfss	3,2
  8727  1AE1  2AE3               	goto	u574_21
  8728  1AE2  2AE4               	goto	u574_20
  8729  1AE3                     u574_21:
  8730  1AE3  2AE8               	goto	i1l3544
  8731  1AE4                     u574_20:
  8732  1AE4                     i1l3542:
  8733                           
  8734                           ;maestro.c: 71:             light = 1;
  8735  1AE4  1683               	bsf	3,5	;RP0=1, select bank1
  8736  1AE5  1303               	bcf	3,6	;RP1=0, select bank1
  8737  1AE6  01DF               	clrf	_light^(0+128)
  8738  1AE7  0ADF               	incf	_light^(0+128),f
  8739  1AE8                     i1l3544:
  8740                           
  8741                           ;maestro.c: 73:         if(RCREG == '0'){
  8742  1AE8  3030               	movlw	48
  8743  1AE9  1283               	bcf	3,5	;RP0=0, select bank0
  8744  1AEA  061A               	xorwf	26,w	;volatile
  8745  1AEB  1D03               	btfss	3,2
  8746  1AEC  2AEE               	goto	u575_21
  8747  1AED  2AEF               	goto	u575_20
  8748  1AEE                     u575_21:
  8749  1AEE  2AF2               	goto	i1l147
  8750  1AEF                     u575_20:
  8751  1AEF                     i1l3546:
  8752                           
  8753                           ;maestro.c: 74:             light = 0;
  8754  1AEF  1683               	bsf	3,5	;RP0=1, select bank1
  8755  1AF0  1303               	bcf	3,6	;RP1=0, select bank1
  8756  1AF1  01DF               	clrf	_light^(0+128)
  8757  1AF2                     i1l147:
  8758  1AF2  0871               	movf	??_isr+1,w
  8759  1AF3  008A               	movwf	10
  8760  1AF4  0E70               	swapf	??_isr,w
  8761  1AF5  0083               	movwf	3
  8762  1AF6  0EFE               	swapf	btemp,f
  8763  1AF7  0E7E               	swapf	btemp,w
  8764  1AF8  0009               	retfie
  8765  1AF9                     __end_of_isr:
  8766  007E                     btemp	set	126	;btemp
  8767  007E                     wtemp0	set	126
  8768                           
  8769                           	psect	intentry
  8770  0004                     __pintentry:	
  8771                           ;incstack = 0
  8772                           ; Regs used in _isr: [wreg+status,2+status,0]
  8773                           
  8774  0004                     interrupt_function:
  8775  007E                     saved_w	set	btemp
  8776  0004  00FE               	movwf	btemp
  8777  0005  0E03               	swapf	3,w
  8778  0006  00F0               	movwf	??_isr
  8779  0007  080A               	movf	10,w
  8780  0008  00F1               	movwf	??_isr+1
  8781  0009  160A  158A  2AD8   	ljmp	_isr
  8782                           
  8783                           	psect	config
  8784                           
  8785                           ;Config register CONFIG1 @ 0x2007
  8786                           ;	Oscillator Selection bits
  8787                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8788                           ;	Watchdog Timer Enable bit
  8789                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8790                           ;	Power-up Timer Enable bit
  8791                           ;	PWRTE = OFF, PWRT disabled
  8792                           ;	RE3/MCLR pin function select bit
  8793                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8794                           ;	Code Protection bit
  8795                           ;	CP = OFF, Program memory code protection is disabled
  8796                           ;	Data Code Protection bit
  8797                           ;	CPD = OFF, Data memory code protection is disabled
  8798                           ;	Brown Out Reset Selection bits
  8799                           ;	BOREN = OFF, BOR disabled
  8800                           ;	Internal External Switchover bit
  8801                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8802                           ;	Fail-Safe Clock Monitor Enabled bit
  8803                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8804                           ;	Low Voltage Programming Enable bit
  8805                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8806                           ;	In-Circuit Debugger Mode bit
  8807                           ;	DEBUG = 0x1, unprogrammed default
  8808  2007                     	org	8199
  8809  2007  20D4               	dw	8404
  8810                           
  8811                           ;Config register CONFIG2 @ 0x2008
  8812                           ;	Brown-out Reset Selection bit
  8813                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8814                           ;	Flash Program Memory Self Write Enable bits
  8815                           ;	WRT = OFF, Write protection off
  8816  2008                     	org	8200
  8817  2008  3FFF               	dw	16383
  8818                           
  8819                           	psect	text1_split_1
  8820  1522                     l3746:
  8821                           
  8822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  8823  1522  01CC               	clrf	sprintf@prec^(0+128)
  8824  1523  01CD               	clrf	(sprintf@prec+1)^(0+128)
  8825  1524                     l3748:
  8826                           
  8827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  8828  1524  1645               	bsf	(sprintf@flag^(0+128)+1),4
  8829  1525  2D2A               	goto	l3752
  8830  1526                     l318:	
  8831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  8832                           
  8833                           
  8834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  8835  1526  1683               	bsf	3,5	;RP0=1, select bank1
  8836  1527  1303               	bcf	3,6	;RP1=0, select bank1
  8837  1528  1545               	bsf	(sprintf@flag^(0+128)+1),2
  8838                           
  8839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  8840  1529  2D4A               	goto	l3754
  8841  152A                     l3752:
  8842  152A  3001               	movlw	1
  8843  152B  1683               	bsf	3,5	;RP0=1, select bank1
  8844  152C  1303               	bcf	3,6	;RP1=0, select bank1
  8845  152D  07A8               	addwf	sprintf@f^(0+128),f
  8846  152E  30FF               	movlw	-1
  8847  152F  0728               	addwf	sprintf@f^(0+128),w
  8848  1530  0084               	movwf	4
  8849  1531  160A  158A  2000  160A  118A  	fcall	stringdir
  8850  1536  00CF               	movwf	sprintf@c^(0+128)
  8851  1537  1283               	bcf	3,5	;RP0=0, select bank0
  8852  1538  1303               	bcf	3,6	;RP1=0, select bank0
  8853  1539  00EA               	movwf	??_sprintf
  8854  153A  01EB               	clrf	??_sprintf+1
  8855                           
  8856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8857                           ; Switch size 1, requested type "simple"
  8858                           ; Number of cases is 1, Range of values is 0 to 0
  8859                           ; switch strategies available:
  8860                           ; Name         Instructions Cycles
  8861                           ; simple_byte            4     3 (average)
  8862                           ; direct_byte           11     8 (fixed)
  8863                           ; jumptable            260     6 (fixed)
  8864                           ;	Chosen strategy is simple_byte
  8865  153B  086B               	movf	??_sprintf+1,w
  8866  153C  3A00               	xorlw	0	; case 0
  8867  153D  1903               	skipnz
  8868  153E  2D42               	goto	l4100
  8869  153F                     L4:
  8870  153F  120A  118A  2D59   	goto	l3990
  8871  1542                     l4100:
  8872                           
  8873                           ; Switch size 1, requested type "simple"
  8874                           ; Number of cases is 2, Range of values is 0 to 102
  8875                           ; switch strategies available:
  8876                           ; Name         Instructions Cycles
  8877                           ; simple_byte            7     4 (average)
  8878                           ; jumptable            260     6 (fixed)
  8879                           ;	Chosen strategy is simple_byte
  8880  1542  086A               	movf	??_sprintf,w
  8881  1543  3A00               	xorlw	0	; case 0
  8882  1544  1903               	skipnz
  8883  1545  2FFD               	goto	L3
  8884  1546  3A66               	xorlw	102	; case 102
  8885  1547  1903               	skipnz
  8886  1548  2D26               	goto	l318
  8887  1549  2D3F               	goto	L4
  8888  154A                     l3754:
  8889                           
  8890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  8891  154A  3000               	movlw	0
  8892  154B  0544               	andwf	sprintf@flag^(0+128),w
  8893  154C  1283               	bcf	3,5	;RP0=0, select bank0
  8894  154D  1303               	bcf	3,6	;RP1=0, select bank0
  8895  154E  00EA               	movwf	??_sprintf
  8896  154F  3007               	movlw	7
  8897  1550  1683               	bsf	3,5	;RP0=1, select bank1
  8898  1551  1303               	bcf	3,6	;RP1=0, select bank1
  8899  1552  0545               	andwf	(sprintf@flag+1)^(0+128),w
  8900  1553  1283               	bcf	3,5	;RP0=0, select bank0
  8901  1554  1303               	bcf	3,6	;RP1=0, select bank0
  8902  1555  00EB               	movwf	??_sprintf+1
  8903  1556  086A               	movf	??_sprintf,w
  8904  1557  046B               	iorwf	??_sprintf+1,w
  8905  1558  1903               	btfsc	3,2
  8906  1559  2D5B               	goto	u6051
  8907  155A  2D5E               	goto	u6050
  8908  155B                     u6051:
  8909  155B  120A  118A  2C07   	goto	l3928
  8910  155E                     u6050:
  8911  155E                     l3756:
  8912                           
  8913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  8914  155E  1683               	bsf	3,5	;RP0=1, select bank1
  8915  155F  1303               	bcf	3,6	;RP1=0, select bank1
  8916  1560  1E45               	btfss	(sprintf@flag+1)^(0+128),4
  8917  1561  2D63               	goto	u6061
  8918  1562  2D64               	goto	u6060
  8919  1563                     u6061:
  8920  1563  2D68               	goto	l3760
  8921  1564                     u6060:
  8922  1564                     l3758:
  8923                           
  8924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  8925  1564  3006               	movlw	6
  8926  1565  00CC               	movwf	sprintf@prec^(0+128)
  8927  1566  3000               	movlw	0
  8928  1567  00CD               	movwf	(sprintf@prec^(0+128)+1)
  8929  1568                     l3760:
  8930                           
  8931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  8932  1568  0839               	movf	sprintf@ap^(0+128),w
  8933  1569  0084               	movwf	4
  8934  156A  1383               	bcf	3,7	;select IRP bank0
  8935  156B  0800               	movf	0,w
  8936  156C  00C8               	movwf	sprintf@fval^(0+128)
  8937  156D  0A84               	incf	4,f
  8938  156E  0800               	movf	0,w
  8939  156F  00C9               	movwf	(sprintf@fval+1)^(0+128)
  8940  1570  0A84               	incf	4,f
  8941  1571  0800               	movf	0,w
  8942  1572  00CA               	movwf	(sprintf@fval+2)^(0+128)
  8943  1573  0A84               	incf	4,f
  8944  1574  0800               	movf	0,w
  8945  1575  00CB               	movwf	(sprintf@fval+3)^(0+128)
  8946  1576                     l3762:
  8947  1576  3004               	movlw	4
  8948  1577  1283               	bcf	3,5	;RP0=0, select bank0
  8949  1578  1303               	bcf	3,6	;RP1=0, select bank0
  8950  1579  00EA               	movwf	??_sprintf
  8951  157A  086A               	movf	??_sprintf,w
  8952  157B  1683               	bsf	3,5	;RP0=1, select bank1
  8953  157C  1303               	bcf	3,6	;RP1=0, select bank1
  8954  157D  07B9               	addwf	sprintf@ap^(0+128),f
  8955  157E                     l3764:
  8956                           
  8957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  8958  157E  084B               	movf	(sprintf@fval+3)^(0+128),w
  8959  157F  00F5               	movwf	___flge@ff1+3
  8960  1580  084A               	movf	(sprintf@fval+2)^(0+128),w
  8961  1581  00F4               	movwf	___flge@ff1+2
  8962  1582  0849               	movf	(sprintf@fval+1)^(0+128),w
  8963  1583  00F3               	movwf	___flge@ff1+1
  8964  1584  0848               	movf	sprintf@fval^(0+128),w
  8965  1585  00F2               	movwf	___flge@ff1
  8966  1586  3000               	movlw	0
  8967  1587  00F9               	movwf	___flge@ff2+3
  8968  1588  3000               	movlw	0
  8969  1589  00F8               	movwf	___flge@ff2+2
  8970  158A  3000               	movlw	0
  8971  158B  00F7               	movwf	___flge@ff2+1
  8972  158C  3000               	movlw	0
  8973  158D  00F6               	movwf	___flge@ff2
  8974  158E  160A  158A  26A0  160A  118A  	fcall	___flge
  8975  1593  1803               	btfsc	3,0
  8976  1594  2D96               	goto	u6071
  8977  1595  2D97               	goto	u6070
  8978  1596                     u6071:
  8979  1596  2DB4               	goto	l3770
  8980  1597                     u6070:
  8981  1597                     l3766:
  8982                           
  8983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  8984  1597  1683               	bsf	3,5	;RP0=1, select bank1
  8985  1598  1303               	bcf	3,6	;RP1=0, select bank1
  8986  1599  084B               	movf	(sprintf@fval+3)^(0+128),w
  8987  159A  00F5               	movwf	___flneg@f1+3
  8988  159B  084A               	movf	(sprintf@fval+2)^(0+128),w
  8989  159C  00F4               	movwf	___flneg@f1+2
  8990  159D  0849               	movf	(sprintf@fval+1)^(0+128),w
  8991  159E  00F3               	movwf	___flneg@f1+1
  8992  159F  0848               	movf	sprintf@fval^(0+128),w
  8993  15A0  00F2               	movwf	___flneg@f1
  8994  15A1  160A  118A  2000  160A  118A  	fcall	___flneg
  8995  15A6  0875               	movf	?___flneg+3,w
  8996  15A7  1683               	bsf	3,5	;RP0=1, select bank1
  8997  15A8  1303               	bcf	3,6	;RP1=0, select bank1
  8998  15A9  00CB               	movwf	(sprintf@fval+3)^(0+128)
  8999  15AA  0874               	movf	?___flneg+2,w
  9000  15AB  00CA               	movwf	(sprintf@fval+2)^(0+128)
  9001  15AC  0873               	movf	?___flneg+1,w
  9002  15AD  00C9               	movwf	(sprintf@fval+1)^(0+128)
  9003  15AE  0872               	movf	?___flneg,w
  9004  15AF  00C8               	movwf	sprintf@fval^(0+128)
  9005  15B0                     l3768:
  9006                           
  9007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  9008  15B0  3003               	movlw	3
  9009  15B1  04C4               	iorwf	sprintf@flag^(0+128),f
  9010  15B2  3000               	movlw	0
  9011  15B3  04C5               	iorwf	(sprintf@flag+1)^(0+128),f
  9012  15B4                     l3770:
  9013                           
  9014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  9015  15B4  1683               	bsf	3,5	;RP0=1, select bank1
  9016  15B5  1303               	bcf	3,6	;RP1=0, select bank1
  9017  15B6  01C2               	clrf	sprintf@eexp^(0+128)
  9018  15B7  01C3               	clrf	(sprintf@eexp+1)^(0+128)
  9019  15B8                     l3772:
  9020                           
  9021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  9022  15B8  084B               	movf	(sprintf@fval+3)^(0+128),w
  9023  15B9  00F5               	movwf	___fleq@ff1+3
  9024  15BA  084A               	movf	(sprintf@fval+2)^(0+128),w
  9025  15BB  00F4               	movwf	___fleq@ff1+2
  9026  15BC  0849               	movf	(sprintf@fval+1)^(0+128),w
  9027  15BD  00F3               	movwf	___fleq@ff1+1
  9028  15BE  0848               	movf	sprintf@fval^(0+128),w
  9029  15BF  00F2               	movwf	___fleq@ff1
  9030  15C0  3000               	movlw	0
  9031  15C1  00F9               	movwf	___fleq@ff2+3
  9032  15C2  3000               	movlw	0
  9033  15C3  00F8               	movwf	___fleq@ff2+2
  9034  15C4  3000               	movlw	0
  9035  15C5  00F7               	movwf	___fleq@ff2+1
  9036  15C6  3000               	movlw	0
  9037  15C7  00F6               	movwf	___fleq@ff2
  9038  15C8  160A  158A  246D  160A  118A  	fcall	___fleq
  9039  15CD  1803               	btfsc	3,0
  9040  15CE  2DD0               	goto	u6081
  9041  15CF  2DD1               	goto	u6080
  9042  15D0                     u6081:
  9043  15D0  2ED1               	goto	l3798
  9044  15D1                     u6080:
  9045  15D1                     l3774:
  9046                           
  9047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  9048  15D1  1003               	clrc
  9049  15D2  1683               	bsf	3,5	;RP0=1, select bank1
  9050  15D3  1303               	bcf	3,6	;RP1=0, select bank1
  9051  15D4  0D4A               	rlf	(sprintf@fval+2)^(0+128),w
  9052  15D5  0D4B               	rlf	(sprintf@fval+3)^(0+128),w
  9053  15D6  3E82               	addlw	130
  9054  15D7  00C2               	movwf	sprintf@eexp^(0+128)
  9055  15D8  30FF               	movlw	255
  9056  15D9  1803               	skipnc
  9057  15DA  3000               	movlw	0
  9058  15DB  00C3               	movwf	(sprintf@eexp^(0+128)+1)
  9059  15DC                     l3776:
  9060                           
  9061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  9062  15DC  30FF               	movlw	255
  9063  15DD  07C2               	addwf	sprintf@eexp^(0+128),f
  9064  15DE  1803               	skipnc
  9065  15DF  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9066  15E0  30FF               	movlw	255
  9067  15E1  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9068  15E2                     l3778:
  9069                           
  9070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  9071  15E2  3003               	movlw	3
  9072  15E3  00F2               	movwf	___wmul@multiplier
  9073  15E4  3000               	movlw	0
  9074  15E5  00F3               	movwf	___wmul@multiplier+1
  9075  15E6  0843               	movf	(sprintf@eexp+1)^(0+128),w
  9076  15E7  00F5               	movwf	___wmul@multiplicand+1
  9077  15E8  0842               	movf	sprintf@eexp^(0+128),w
  9078  15E9  00F4               	movwf	___wmul@multiplicand
  9079  15EA  160A  158A  233B  160A  118A  	fcall	___wmul
  9080  15EF  0873               	movf	?___wmul+1,w
  9081  15F0  1683               	bsf	3,5	;RP0=1, select bank1
  9082  15F1  1303               	bcf	3,6	;RP1=0, select bank1
  9083  15F2  00C3               	movwf	(sprintf@eexp+1)^(0+128)
  9084  15F3  0872               	movf	?___wmul,w
  9085  15F4  00C2               	movwf	sprintf@eexp^(0+128)
  9086  15F5                     l3780:
  9087                           
  9088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  9089  15F5  300A               	movlw	10
  9090  15F6  1283               	bcf	3,5	;RP0=0, select bank0
  9091  15F7  1303               	bcf	3,6	;RP1=0, select bank0
  9092  15F8  00A0               	movwf	___awdiv@divisor
  9093  15F9  3000               	movlw	0
  9094  15FA  00A1               	movwf	___awdiv@divisor+1
  9095  15FB  1683               	bsf	3,5	;RP0=1, select bank1
  9096  15FC  1303               	bcf	3,6	;RP1=0, select bank1
  9097  15FD  0843               	movf	(sprintf@eexp+1)^(0+128),w
  9098  15FE  1283               	bcf	3,5	;RP0=0, select bank0
  9099  15FF  1303               	bcf	3,6	;RP1=0, select bank0
  9100  1600  00A3               	movwf	___awdiv@dividend+1
  9101  1601  1683               	bsf	3,5	;RP0=1, select bank1
  9102  1602  1303               	bcf	3,6	;RP1=0, select bank1
  9103  1603  0842               	movf	sprintf@eexp^(0+128),w
  9104  1604  1283               	bcf	3,5	;RP0=0, select bank0
  9105  1605  1303               	bcf	3,6	;RP1=0, select bank0
  9106  1606  00A2               	movwf	___awdiv@dividend
  9107  1607  120A  118A  2787  160A  118A  	fcall	___awdiv
  9108  160C  1283               	bcf	3,5	;RP0=0, select bank0
  9109  160D  1303               	bcf	3,6	;RP1=0, select bank0
  9110  160E  0821               	movf	?___awdiv+1,w
  9111  160F  1683               	bsf	3,5	;RP0=1, select bank1
  9112  1610  1303               	bcf	3,6	;RP1=0, select bank1
  9113  1611  00C3               	movwf	(sprintf@eexp+1)^(0+128)
  9114  1612  1283               	bcf	3,5	;RP0=0, select bank0
  9115  1613  1303               	bcf	3,6	;RP1=0, select bank0
  9116  1614  0820               	movf	?___awdiv,w
  9117  1615  1683               	bsf	3,5	;RP0=1, select bank1
  9118  1616  1303               	bcf	3,6	;RP1=0, select bank1
  9119  1617  00C2               	movwf	sprintf@eexp^(0+128)
  9120  1618                     l3782:
  9121                           
  9122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  9123  1618  1FC3               	btfss	(sprintf@eexp+1)^(0+128),7
  9124  1619  2E1B               	goto	u6091
  9125  161A  2E1C               	goto	u6090
  9126  161B                     u6091:
  9127  161B  2E22               	goto	l3786
  9128  161C                     u6090:
  9129  161C                     l3784:
  9130                           
  9131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  9132  161C  30FF               	movlw	255
  9133  161D  07C2               	addwf	sprintf@eexp^(0+128),f
  9134  161E  1803               	skipnc
  9135  161F  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9136  1620  30FF               	movlw	255
  9137  1621  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9138  1622                     l3786:
  9139                           
  9140                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  9141  1622  0342               	decf	sprintf@eexp^(0+128),w
  9142  1623  3AFF               	xorlw	255
  9143  1624  120A  158A  249D  160A  118A  	fcall	_scale
  9144  1629  1283               	bcf	3,5	;RP0=0, select bank0
  9145  162A  1303               	bcf	3,6	;RP1=0, select bank0
  9146  162B  0845               	movf	?_scale+3,w
  9147  162C  1683               	bsf	3,5	;RP0=1, select bank1
  9148  162D  1303               	bcf	3,6	;RP1=0, select bank1
  9149  162E  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
  9150  162F  1283               	bcf	3,5	;RP0=0, select bank0
  9151  1630  1303               	bcf	3,6	;RP1=0, select bank0
  9152  1631  0844               	movf	?_scale+2,w
  9153  1632  1683               	bsf	3,5	;RP0=1, select bank1
  9154  1633  1303               	bcf	3,6	;RP1=0, select bank1
  9155  1634  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
  9156  1635  1283               	bcf	3,5	;RP0=0, select bank0
  9157  1636  1303               	bcf	3,6	;RP1=0, select bank0
  9158  1637  0843               	movf	?_scale+1,w
  9159  1638  1683               	bsf	3,5	;RP0=1, select bank1
  9160  1639  1303               	bcf	3,6	;RP1=0, select bank1
  9161  163A  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
  9162  163B  1283               	bcf	3,5	;RP0=0, select bank0
  9163  163C  1303               	bcf	3,6	;RP1=0, select bank0
  9164  163D  0842               	movf	?_scale,w
  9165  163E  1683               	bsf	3,5	;RP0=1, select bank1
  9166  163F  1303               	bcf	3,6	;RP1=0, select bank1
  9167  1640  00BE               	movwf	sprintf@tmpval^(0+128)
  9168  1641                     l3788:
  9169                           
  9170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  9171  1641  084B               	movf	(sprintf@fval+3)^(0+128),w
  9172  1642  1283               	bcf	3,5	;RP0=0, select bank0
  9173  1643  1303               	bcf	3,6	;RP1=0, select bank0
  9174  1644  00AB               	movwf	___flmul@b+3
  9175  1645  1683               	bsf	3,5	;RP0=1, select bank1
  9176  1646  1303               	bcf	3,6	;RP1=0, select bank1
  9177  1647  084A               	movf	(sprintf@fval+2)^(0+128),w
  9178  1648  1283               	bcf	3,5	;RP0=0, select bank0
  9179  1649  1303               	bcf	3,6	;RP1=0, select bank0
  9180  164A  00AA               	movwf	___flmul@b+2
  9181  164B  1683               	bsf	3,5	;RP0=1, select bank1
  9182  164C  1303               	bcf	3,6	;RP1=0, select bank1
  9183  164D  0849               	movf	(sprintf@fval+1)^(0+128),w
  9184  164E  1283               	bcf	3,5	;RP0=0, select bank0
  9185  164F  1303               	bcf	3,6	;RP1=0, select bank0
  9186  1650  00A9               	movwf	___flmul@b+1
  9187  1651  1683               	bsf	3,5	;RP0=1, select bank1
  9188  1652  1303               	bcf	3,6	;RP1=0, select bank1
  9189  1653  0848               	movf	sprintf@fval^(0+128),w
  9190  1654  1283               	bcf	3,5	;RP0=0, select bank0
  9191  1655  1303               	bcf	3,6	;RP1=0, select bank0
  9192  1656  00A8               	movwf	___flmul@b
  9193  1657  1683               	bsf	3,5	;RP0=1, select bank1
  9194  1658  1303               	bcf	3,6	;RP1=0, select bank1
  9195  1659  0841               	movf	(sprintf@tmpval+3)^(0+128),w
  9196  165A  1283               	bcf	3,5	;RP0=0, select bank0
  9197  165B  1303               	bcf	3,6	;RP1=0, select bank0
  9198  165C  00AF               	movwf	___flmul@a+3
  9199  165D  1683               	bsf	3,5	;RP0=1, select bank1
  9200  165E  1303               	bcf	3,6	;RP1=0, select bank1
  9201  165F  0840               	movf	(sprintf@tmpval+2)^(0+128),w
  9202  1660  1283               	bcf	3,5	;RP0=0, select bank0
  9203  1661  1303               	bcf	3,6	;RP1=0, select bank0
  9204  1662  00AE               	movwf	___flmul@a+2
  9205  1663  1683               	bsf	3,5	;RP0=1, select bank1
  9206  1664  1303               	bcf	3,6	;RP1=0, select bank1
  9207  1665  083F               	movf	(sprintf@tmpval+1)^(0+128),w
  9208  1666  1283               	bcf	3,5	;RP0=0, select bank0
  9209  1667  1303               	bcf	3,6	;RP1=0, select bank0
  9210  1668  00AD               	movwf	___flmul@a+1
  9211  1669  1683               	bsf	3,5	;RP0=1, select bank1
  9212  166A  1303               	bcf	3,6	;RP1=0, select bank1
  9213  166B  083E               	movf	sprintf@tmpval^(0+128),w
  9214  166C  1283               	bcf	3,5	;RP0=0, select bank0
  9215  166D  1303               	bcf	3,6	;RP1=0, select bank0
  9216  166E  00AC               	movwf	___flmul@a
  9217  166F  120A  158A  213C  160A  118A  	fcall	___flmul
  9218  1674  1283               	bcf	3,5	;RP0=0, select bank0
  9219  1675  1303               	bcf	3,6	;RP1=0, select bank0
  9220  1676  082B               	movf	?___flmul+3,w
  9221  1677  1683               	bsf	3,5	;RP0=1, select bank1
  9222  1678  1303               	bcf	3,6	;RP1=0, select bank1
  9223  1679  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
  9224  167A  1283               	bcf	3,5	;RP0=0, select bank0
  9225  167B  1303               	bcf	3,6	;RP1=0, select bank0
  9226  167C  082A               	movf	?___flmul+2,w
  9227  167D  1683               	bsf	3,5	;RP0=1, select bank1
  9228  167E  1303               	bcf	3,6	;RP1=0, select bank1
  9229  167F  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
  9230  1680  1283               	bcf	3,5	;RP0=0, select bank0
  9231  1681  1303               	bcf	3,6	;RP1=0, select bank0
  9232  1682  0829               	movf	?___flmul+1,w
  9233  1683  1683               	bsf	3,5	;RP0=1, select bank1
  9234  1684  1303               	bcf	3,6	;RP1=0, select bank1
  9235  1685  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
  9236  1686  1283               	bcf	3,5	;RP0=0, select bank0
  9237  1687  1303               	bcf	3,6	;RP1=0, select bank0
  9238  1688  0828               	movf	?___flmul,w
  9239  1689  1683               	bsf	3,5	;RP0=1, select bank1
  9240  168A  1303               	bcf	3,6	;RP1=0, select bank1
  9241  168B  00BE               	movwf	sprintf@tmpval^(0+128)
  9242  168C                     l3790:
  9243                           
  9244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  9245  168C  0841               	movf	(sprintf@tmpval+3)^(0+128),w
  9246  168D  00F5               	movwf	___flge@ff1+3
  9247  168E  0840               	movf	(sprintf@tmpval+2)^(0+128),w
  9248  168F  00F4               	movwf	___flge@ff1+2
  9249  1690  083F               	movf	(sprintf@tmpval+1)^(0+128),w
  9250  1691  00F3               	movwf	___flge@ff1+1
  9251  1692  083E               	movf	sprintf@tmpval^(0+128),w
  9252  1693  00F2               	movwf	___flge@ff1
  9253  1694  303F               	movlw	63
  9254  1695  00F9               	movwf	___flge@ff2+3
  9255  1696  3080               	movlw	128
  9256  1697  00F8               	movwf	___flge@ff2+2
  9257  1698  3000               	movlw	0
  9258  1699  00F7               	movwf	___flge@ff2+1
  9259  169A  3000               	movlw	0
  9260  169B  00F6               	movwf	___flge@ff2
  9261  169C  160A  158A  26A0  160A  118A  	fcall	___flge
  9262  16A1  1803               	btfsc	3,0
  9263  16A2  2EA4               	goto	u6101
  9264  16A3  2EA5               	goto	u6100
  9265  16A4                     u6101:
  9266  16A4  2EAE               	goto	l3794
  9267  16A5                     u6100:
  9268  16A5                     l3792:
  9269                           
  9270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  9271  16A5  30FF               	movlw	255
  9272  16A6  1683               	bsf	3,5	;RP0=1, select bank1
  9273  16A7  1303               	bcf	3,6	;RP1=0, select bank1
  9274  16A8  07C2               	addwf	sprintf@eexp^(0+128),f
  9275  16A9  1803               	skipnc
  9276  16AA  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9277  16AB  30FF               	movlw	255
  9278  16AC  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9279  16AD  2ED1               	goto	l3798
  9280  16AE                     l3794:
  9281  16AE  1683               	bsf	3,5	;RP0=1, select bank1
  9282  16AF  1303               	bcf	3,6	;RP1=0, select bank1
  9283  16B0  0841               	movf	(sprintf@tmpval+3)^(0+128),w
  9284  16B1  00F5               	movwf	___flge@ff1+3
  9285  16B2  0840               	movf	(sprintf@tmpval+2)^(0+128),w
  9286  16B3  00F4               	movwf	___flge@ff1+2
  9287  16B4  083F               	movf	(sprintf@tmpval+1)^(0+128),w
  9288  16B5  00F3               	movwf	___flge@ff1+1
  9289  16B6  083E               	movf	sprintf@tmpval^(0+128),w
  9290  16B7  00F2               	movwf	___flge@ff1
  9291  16B8  3041               	movlw	65
  9292  16B9  00F9               	movwf	___flge@ff2+3
  9293  16BA  3020               	movlw	32
  9294  16BB  00F8               	movwf	___flge@ff2+2
  9295  16BC  3000               	movlw	0
  9296  16BD  00F7               	movwf	___flge@ff2+1
  9297  16BE  3000               	movlw	0
  9298  16BF  00F6               	movwf	___flge@ff2
  9299  16C0  160A  158A  26A0  160A  118A  	fcall	___flge
  9300  16C5  1C03               	btfss	3,0
  9301  16C6  2EC8               	goto	u6111
  9302  16C7  2EC9               	goto	u6110
  9303  16C8                     u6111:
  9304  16C8  2ED1               	goto	l3798
  9305  16C9                     u6110:
  9306  16C9                     l3796:
  9307                           
  9308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  9309  16C9  3001               	movlw	1
  9310  16CA  1683               	bsf	3,5	;RP0=1, select bank1
  9311  16CB  1303               	bcf	3,6	;RP1=0, select bank1
  9312  16CC  07C2               	addwf	sprintf@eexp^(0+128),f
  9313  16CD  1803               	skipnc
  9314  16CE  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9315  16CF  3000               	movlw	0
  9316  16D0  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9317  16D1                     l3798:
  9318                           
  9319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  9320  16D1  1683               	bsf	3,5	;RP0=1, select bank1
  9321  16D2  1303               	bcf	3,6	;RP1=0, select bank1
  9322  16D3  084D               	movf	(sprintf@prec+1)^(0+128),w
  9323  16D4  3A80               	xorlw	128
  9324  16D5  00FF               	movwf	btemp+1
  9325  16D6  3080               	movlw	128
  9326  16D7  027F               	subwf	btemp+1,w
  9327  16D8  1D03               	skipz
  9328  16D9  2EDC               	goto	u6125
  9329  16DA  300D               	movlw	13
  9330  16DB  024C               	subwf	sprintf@prec^(0+128),w
  9331  16DC                     u6125:
  9332  16DC  1803               	skipnc
  9333  16DD  2EDF               	goto	u6121
  9334  16DE  2EE0               	goto	u6120
  9335  16DF                     u6121:
  9336  16DF  2F27               	goto	l3802
  9337  16E0                     u6120:
  9338  16E0                     l3800:
  9339                           
  9340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  9341  16E0  1683               	bsf	3,5	;RP0=1, select bank1
  9342  16E1  1303               	bcf	3,6	;RP1=0, select bank1
  9343  16E2  084C               	movf	sprintf@prec^(0+128),w
  9344  16E3  120A  118A  257A  160A  118A  	fcall	_fround
  9345  16E8  1283               	bcf	3,5	;RP0=0, select bank0
  9346  16E9  1303               	bcf	3,6	;RP1=0, select bank0
  9347  16EA  0845               	movf	?_fround+3,w
  9348  16EB  00D9               	movwf	___fladd@b+3
  9349  16EC  0844               	movf	?_fround+2,w
  9350  16ED  00D8               	movwf	___fladd@b+2
  9351  16EE  0843               	movf	?_fround+1,w
  9352  16EF  00D7               	movwf	___fladd@b+1
  9353  16F0  0842               	movf	?_fround,w
  9354  16F1  00D6               	movwf	___fladd@b
  9355  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  9356  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  9357  16F4  084B               	movf	(sprintf@fval+3)^(0+128),w
  9358  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  9359  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  9360  16F7  00DD               	movwf	___fladd@a+3
  9361  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  9362  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  9363  16FA  084A               	movf	(sprintf@fval+2)^(0+128),w
  9364  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  9365  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  9366  16FD  00DC               	movwf	___fladd@a+2
  9367  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  9368  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  9369  1700  0849               	movf	(sprintf@fval+1)^(0+128),w
  9370  1701  1283               	bcf	3,5	;RP0=0, select bank0
  9371  1702  1303               	bcf	3,6	;RP1=0, select bank0
  9372  1703  00DB               	movwf	___fladd@a+1
  9373  1704  1683               	bsf	3,5	;RP0=1, select bank1
  9374  1705  1303               	bcf	3,6	;RP1=0, select bank1
  9375  1706  0848               	movf	sprintf@fval^(0+128),w
  9376  1707  1283               	bcf	3,5	;RP0=0, select bank0
  9377  1708  1303               	bcf	3,6	;RP1=0, select bank0
  9378  1709  00DA               	movwf	___fladd@a
  9379  170A  160A  118A  229A  160A  118A  	fcall	___fladd
  9380  170F  1283               	bcf	3,5	;RP0=0, select bank0
  9381  1710  1303               	bcf	3,6	;RP1=0, select bank0
  9382  1711  0859               	movf	?___fladd+3,w
  9383  1712  1683               	bsf	3,5	;RP0=1, select bank1
  9384  1713  1303               	bcf	3,6	;RP1=0, select bank1
  9385  1714  00CB               	movwf	(sprintf@fval+3)^(0+128)
  9386  1715  1283               	bcf	3,5	;RP0=0, select bank0
  9387  1716  1303               	bcf	3,6	;RP1=0, select bank0
  9388  1717  0858               	movf	?___fladd+2,w
  9389  1718  1683               	bsf	3,5	;RP0=1, select bank1
  9390  1719  1303               	bcf	3,6	;RP1=0, select bank1
  9391  171A  00CA               	movwf	(sprintf@fval+2)^(0+128)
  9392  171B  1283               	bcf	3,5	;RP0=0, select bank0
  9393  171C  1303               	bcf	3,6	;RP1=0, select bank0
  9394  171D  0857               	movf	?___fladd+1,w
  9395  171E  1683               	bsf	3,5	;RP0=1, select bank1
  9396  171F  1303               	bcf	3,6	;RP1=0, select bank1
  9397  1720  00C9               	movwf	(sprintf@fval+1)^(0+128)
  9398  1721  1283               	bcf	3,5	;RP0=0, select bank0
  9399  1722  1303               	bcf	3,6	;RP1=0, select bank0
  9400  1723  0856               	movf	?___fladd,w
  9401  1724  1683               	bsf	3,5	;RP0=1, select bank1
  9402  1725  1303               	bcf	3,6	;RP1=0, select bank1
  9403  1726  00C8               	movwf	sprintf@fval^(0+128)
  9404  1727                     l3802:
  9405                           
  9406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  9407  1727  1683               	bsf	3,5	;RP0=1, select bank1
  9408  1728  1303               	bcf	3,6	;RP1=0, select bank1
  9409  1729  0843               	movf	(sprintf@eexp+1)^(0+128),w
  9410  172A  3A80               	xorlw	128
  9411  172B  00FF               	movwf	btemp+1
  9412  172C  3080               	movlw	128
  9413  172D  027F               	subwf	btemp+1,w
  9414  172E  1D03               	skipz
  9415  172F  2F32               	goto	u6135
  9416  1730  300A               	movlw	10
  9417  1731  0242               	subwf	sprintf@eexp^(0+128),w
  9418  1732                     u6135:
  9419  1732  1803               	skipnc
  9420  1733  2F35               	goto	u6131
  9421  1734  2F36               	goto	u6130
  9422  1735                     u6131:
  9423  1735  2F89               	goto	l3810
  9424  1736                     u6130:
  9425  1736                     l3804:
  9426  1736  1683               	bsf	3,5	;RP0=1, select bank1
  9427  1737  1303               	bcf	3,6	;RP1=0, select bank1
  9428  1738  084B               	movf	(sprintf@fval+3)^(0+128),w
  9429  1739  00F5               	movwf	___fleq@ff1+3
  9430  173A  084A               	movf	(sprintf@fval+2)^(0+128),w
  9431  173B  00F4               	movwf	___fleq@ff1+2
  9432  173C  0849               	movf	(sprintf@fval+1)^(0+128),w
  9433  173D  00F3               	movwf	___fleq@ff1+1
  9434  173E  0848               	movf	sprintf@fval^(0+128),w
  9435  173F  00F2               	movwf	___fleq@ff1
  9436  1740  3000               	movlw	0
  9437  1741  00F9               	movwf	___fleq@ff2+3
  9438  1742  3000               	movlw	0
  9439  1743  00F8               	movwf	___fleq@ff2+2
  9440  1744  3000               	movlw	0
  9441  1745  00F7               	movwf	___fleq@ff2+1
  9442  1746  3000               	movlw	0
  9443  1747  00F6               	movwf	___fleq@ff2
  9444  1748  160A  158A  246D  160A  118A  	fcall	___fleq
  9445  174D  1803               	btfsc	3,0
  9446  174E  2F50               	goto	u6141
  9447  174F  2F53               	goto	u6140
  9448  1750                     u6141:
  9449  1750  120A  118A  281D   	goto	l3824
  9450  1753                     u6140:
  9451  1753                     l3806:
  9452  1753  1683               	bsf	3,5	;RP0=1, select bank1
  9453  1754  1303               	bcf	3,6	;RP1=0, select bank1
  9454  1755  084B               	movf	(sprintf@fval+3)^(0+128),w
  9455  1756  1283               	bcf	3,5	;RP0=0, select bank0
  9456  1757  1303               	bcf	3,6	;RP1=0, select bank0
  9457  1758  00D8               	movwf	___fltol@f1+3
  9458  1759  1683               	bsf	3,5	;RP0=1, select bank1
  9459  175A  1303               	bcf	3,6	;RP1=0, select bank1
  9460  175B  084A               	movf	(sprintf@fval+2)^(0+128),w
  9461  175C  1283               	bcf	3,5	;RP0=0, select bank0
  9462  175D  1303               	bcf	3,6	;RP1=0, select bank0
  9463  175E  00D7               	movwf	___fltol@f1+2
  9464  175F  1683               	bsf	3,5	;RP0=1, select bank1
  9465  1760  1303               	bcf	3,6	;RP1=0, select bank1
  9466  1761  0849               	movf	(sprintf@fval+1)^(0+128),w
  9467  1762  1283               	bcf	3,5	;RP0=0, select bank0
  9468  1763  1303               	bcf	3,6	;RP1=0, select bank0
  9469  1764  00D6               	movwf	___fltol@f1+1
  9470  1765  1683               	bsf	3,5	;RP0=1, select bank1
  9471  1766  1303               	bcf	3,6	;RP1=0, select bank1
  9472  1767  0848               	movf	sprintf@fval^(0+128),w
  9473  1768  1283               	bcf	3,5	;RP0=0, select bank0
  9474  1769  1303               	bcf	3,6	;RP1=0, select bank0
  9475  176A  00D5               	movwf	___fltol@f1
  9476  176B  160A  158A  2624  160A  118A  	fcall	___fltol
  9477  1770  1283               	bcf	3,5	;RP0=0, select bank0
  9478  1771  1303               	bcf	3,6	;RP1=0, select bank0
  9479  1772  0858               	movf	?___fltol+3,w
  9480  1773  0457               	iorwf	?___fltol+2,w
  9481  1774  0456               	iorwf	?___fltol+1,w
  9482  1775  0455               	iorwf	?___fltol,w
  9483  1776  1D03               	skipz
  9484  1777  2F79               	goto	u6151
  9485  1778  2F7A               	goto	u6150
  9486  1779                     u6151:
  9487  1779  2F50               	goto	u6141
  9488  177A                     u6150:
  9489  177A                     l3808:
  9490  177A  1683               	bsf	3,5	;RP0=1, select bank1
  9491  177B  1303               	bcf	3,6	;RP1=0, select bank1
  9492  177C  0843               	movf	(sprintf@eexp+1)^(0+128),w
  9493  177D  3A80               	xorlw	128
  9494  177E  00FF               	movwf	btemp+1
  9495  177F  3080               	movlw	128
  9496  1780  027F               	subwf	btemp+1,w
  9497  1781  1D03               	skipz
  9498  1782  2F85               	goto	u6165
  9499  1783  3002               	movlw	2
  9500  1784  0242               	subwf	sprintf@eexp^(0+128),w
  9501  1785                     u6165:
  9502  1785  1C03               	skipc
  9503  1786  2F88               	goto	u6161
  9504  1787  2F89               	goto	u6160
  9505  1788                     u6161:
  9506  1788  2F50               	goto	u6141
  9507  1789                     u6160:
  9508  1789                     l3810:
  9509                           
  9510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9511  1789  1683               	bsf	3,5	;RP0=1, select bank1
  9512  178A  1303               	bcf	3,6	;RP1=0, select bank1
  9513  178B  0841               	movf	(sprintf@tmpval+3)^(0+128),w
  9514  178C  00F5               	movwf	___flge@ff1+3
  9515  178D  0840               	movf	(sprintf@tmpval+2)^(0+128),w
  9516  178E  00F4               	movwf	___flge@ff1+2
  9517  178F  083F               	movf	(sprintf@tmpval+1)^(0+128),w
  9518  1790  00F3               	movwf	___flge@ff1+1
  9519  1791  083E               	movf	sprintf@tmpval^(0+128),w
  9520  1792  00F2               	movwf	___flge@ff1
  9521  1793  3040               	movlw	64
  9522  1794  00F9               	movwf	___flge@ff2+3
  9523  1795  3089               	movlw	137
  9524  1796  00F8               	movwf	___flge@ff2+2
  9525  1797  3070               	movlw	112
  9526  1798  00F7               	movwf	___flge@ff2+1
  9527  1799  305F               	movlw	95
  9528  179A  00F6               	movwf	___flge@ff2
  9529  179B  160A  158A  26A0  160A  118A  	fcall	___flge
  9530  17A0  1803               	btfsc	3,0
  9531  17A1  2FA3               	goto	u6171
  9532  17A2  2FA4               	goto	u6170
  9533  17A3                     u6171:
  9534  17A3  2FAD               	goto	l3814
  9535  17A4                     u6170:
  9536  17A4                     l3812:
  9537                           
  9538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9539  17A4  30F7               	movlw	247
  9540  17A5  1683               	bsf	3,5	;RP0=1, select bank1
  9541  17A6  1303               	bcf	3,6	;RP1=0, select bank1
  9542  17A7  07C2               	addwf	sprintf@eexp^(0+128),f
  9543  17A8  1803               	skipnc
  9544  17A9  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9545  17AA  30FF               	movlw	255
  9546  17AB  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9547                           
  9548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9549  17AC  2FB5               	goto	l3816
  9550  17AD                     l3814:
  9551                           
  9552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9553  17AD  30F8               	movlw	248
  9554  17AE  1683               	bsf	3,5	;RP0=1, select bank1
  9555  17AF  1303               	bcf	3,6	;RP1=0, select bank1
  9556  17B0  07C2               	addwf	sprintf@eexp^(0+128),f
  9557  17B1  1803               	skipnc
  9558  17B2  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
  9559  17B3  30FF               	movlw	255
  9560  17B4  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
  9561  17B5                     l3816:
  9562                           
  9563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9564  17B5  0842               	movf	sprintf@eexp^(0+128),w
  9565  17B6  120A  158A  249D  160A  118A  	fcall	_scale
  9566  17BB  1283               	bcf	3,5	;RP0=0, select bank0
  9567  17BC  1303               	bcf	3,6	;RP1=0, select bank0
  9568  17BD  0845               	movf	?_scale+3,w
  9569  17BE  1683               	bsf	3,5	;RP0=1, select bank1
  9570  17BF  1303               	bcf	3,6	;RP1=0, select bank1
  9571  17C0  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
  9572  17C1  1283               	bcf	3,5	;RP0=0, select bank0
  9573  17C2  1303               	bcf	3,6	;RP1=0, select bank0
  9574  17C3  0844               	movf	?_scale+2,w
  9575  17C4  1683               	bsf	3,5	;RP0=1, select bank1
  9576  17C5  1303               	bcf	3,6	;RP1=0, select bank1
  9577  17C6  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
  9578  17C7  1283               	bcf	3,5	;RP0=0, select bank0
  9579  17C8  1303               	bcf	3,6	;RP1=0, select bank0
  9580  17C9  0843               	movf	?_scale+1,w
  9581  17CA  1683               	bsf	3,5	;RP0=1, select bank1
  9582  17CB  1303               	bcf	3,6	;RP1=0, select bank1
  9583  17CC  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
  9584  17CD  1283               	bcf	3,5	;RP0=0, select bank0
  9585  17CE  1303               	bcf	3,6	;RP1=0, select bank0
  9586  17CF  0842               	movf	?_scale,w
  9587  17D0  1683               	bsf	3,5	;RP0=1, select bank1
  9588  17D1  1303               	bcf	3,6	;RP1=0, select bank1
  9589  17D2  00BE               	movwf	sprintf@tmpval^(0+128)
  9590  17D3                     l3818:
  9591  17D3  084B               	movf	(sprintf@fval+3)^(0+128),w
  9592  17D4  00F5               	movwf	__div_to_l_@f1+3
  9593  17D5  084A               	movf	(sprintf@fval+2)^(0+128),w
  9594  17D6  00F4               	movwf	__div_to_l_@f1+2
  9595  17D7  0849               	movf	(sprintf@fval+1)^(0+128),w
  9596  17D8  00F3               	movwf	__div_to_l_@f1+1
  9597  17D9  0848               	movf	sprintf@fval^(0+128),w
  9598  17DA  00F2               	movwf	__div_to_l_@f1
  9599  17DB  0841               	movf	(sprintf@tmpval+3)^(0+128),w
  9600  17DC  00F9               	movwf	__div_to_l_@f2+3
  9601  17DD  0840               	movf	(sprintf@tmpval+2)^(0+128),w
  9602  17DE  00F8               	movwf	__div_to_l_@f2+2
  9603  17DF  083F               	movf	(sprintf@tmpval+1)^(0+128),w
  9604  17E0  00F7               	movwf	__div_to_l_@f2+1
  9605  17E1  083E               	movf	sprintf@tmpval^(0+128),w
  9606  17E2  00F6               	movwf	__div_to_l_@f2
  9607  17E3  160A  118A  20DD  160A  118A  	fcall	__div_to_l_
  9608  17E8  0875               	movf	?__div_to_l_+3,w
  9609  17E9  1683               	bsf	3,5	;RP0=1, select bank1
  9610  17EA  1303               	bcf	3,6	;RP1=0, select bank1
  9611  17EB  00BD               	movwf	(sprintf@val+3)^(0+128)
  9612  17EC  0874               	movf	?__div_to_l_+2,w
  9613  17ED  00BC               	movwf	(sprintf@val+2)^(0+128)
  9614  17EE  0873               	movf	?__div_to_l_+1,w
  9615  17EF  00BB               	movwf	(sprintf@val+1)^(0+128)
  9616  17F0  0872               	movf	?__div_to_l_,w
  9617  17F1  00BA               	movwf	sprintf@val^(0+128)
  9618  17F2                     l3822:
  9619                           
  9620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9621  17F2  3000               	movlw	0
  9622  17F3  00CB               	movwf	(sprintf@fval+3)^(0+128)
  9623  17F4  3000               	movlw	0
  9624  17F5  00CA               	movwf	(sprintf@fval+2)^(0+128)
  9625  17F6  3000               	movlw	0
  9626  17F7  00C9               	movwf	(sprintf@fval+1)^(0+128)
  9627  17F8  3000               	movlw	0
  9628  17F9  00C8               	movwf	sprintf@fval^(0+128)
  9629                           
  9630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9631  17FA  120A  118A  2883   	goto	l3830
  9632  17FD                     L3:
  9633  17FD                     L2:
  9634  17FD  120A  118A  2D73   	ljmp	l3992
  9635                           
  9636                           	psect	text1_split_2
  9637  001D                     l3824:
  9638                           
  9639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9640  001D  1683               	bsf	3,5	;RP0=1, select bank1
  9641  001E  1303               	bcf	3,6	;RP1=0, select bank1
  9642  001F  084B               	movf	(sprintf@fval+3)^(0+128),w
  9643  0020  1283               	bcf	3,5	;RP0=0, select bank0
  9644  0021  1303               	bcf	3,6	;RP1=0, select bank0
  9645  0022  00D8               	movwf	___fltol@f1+3
  9646  0023  1683               	bsf	3,5	;RP0=1, select bank1
  9647  0024  1303               	bcf	3,6	;RP1=0, select bank1
  9648  0025  084A               	movf	(sprintf@fval+2)^(0+128),w
  9649  0026  1283               	bcf	3,5	;RP0=0, select bank0
  9650  0027  1303               	bcf	3,6	;RP1=0, select bank0
  9651  0028  00D7               	movwf	___fltol@f1+2
  9652  0029  1683               	bsf	3,5	;RP0=1, select bank1
  9653  002A  1303               	bcf	3,6	;RP1=0, select bank1
  9654  002B  0849               	movf	(sprintf@fval+1)^(0+128),w
  9655  002C  1283               	bcf	3,5	;RP0=0, select bank0
  9656  002D  1303               	bcf	3,6	;RP1=0, select bank0
  9657  002E  00D6               	movwf	___fltol@f1+1
  9658  002F  1683               	bsf	3,5	;RP0=1, select bank1
  9659  0030  1303               	bcf	3,6	;RP1=0, select bank1
  9660  0031  0848               	movf	sprintf@fval^(0+128),w
  9661  0032  1283               	bcf	3,5	;RP0=0, select bank0
  9662  0033  1303               	bcf	3,6	;RP1=0, select bank0
  9663  0034  00D5               	movwf	___fltol@f1
  9664  0035  160A  158A  2624  120A  118A  	fcall	___fltol
  9665  003A  1283               	bcf	3,5	;RP0=0, select bank0
  9666  003B  1303               	bcf	3,6	;RP1=0, select bank0
  9667  003C  0858               	movf	?___fltol+3,w
  9668  003D  1683               	bsf	3,5	;RP0=1, select bank1
  9669  003E  1303               	bcf	3,6	;RP1=0, select bank1
  9670  003F  00BD               	movwf	(sprintf@val+3)^(0+128)
  9671  0040  1283               	bcf	3,5	;RP0=0, select bank0
  9672  0041  1303               	bcf	3,6	;RP1=0, select bank0
  9673  0042  0857               	movf	?___fltol+2,w
  9674  0043  1683               	bsf	3,5	;RP0=1, select bank1
  9675  0044  1303               	bcf	3,6	;RP1=0, select bank1
  9676  0045  00BC               	movwf	(sprintf@val+2)^(0+128)
  9677  0046  1283               	bcf	3,5	;RP0=0, select bank0
  9678  0047  1303               	bcf	3,6	;RP1=0, select bank0
  9679  0048  0856               	movf	?___fltol+1,w
  9680  0049  1683               	bsf	3,5	;RP0=1, select bank1
  9681  004A  1303               	bcf	3,6	;RP1=0, select bank1
  9682  004B  00BB               	movwf	(sprintf@val+1)^(0+128)
  9683  004C  1283               	bcf	3,5	;RP0=0, select bank0
  9684  004D  1303               	bcf	3,6	;RP1=0, select bank0
  9685  004E  0855               	movf	?___fltol,w
  9686  004F  1683               	bsf	3,5	;RP0=1, select bank1
  9687  0050  1303               	bcf	3,6	;RP1=0, select bank1
  9688  0051  00BA               	movwf	sprintf@val^(0+128)
  9689  0052                     l3826:
  9690                           
  9691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9692  0052  083D               	movf	(sprintf@val+3)^(0+128),w
  9693  0053  00F5               	movwf	___xxtofl@val+3
  9694  0054  083C               	movf	(sprintf@val+2)^(0+128),w
  9695  0055  00F4               	movwf	___xxtofl@val+2
  9696  0056  083B               	movf	(sprintf@val+1)^(0+128),w
  9697  0057  00F3               	movwf	___xxtofl@val+1
  9698  0058  083A               	movf	sprintf@val^(0+128),w
  9699  0059  00F2               	movwf	___xxtofl@val
  9700  005A  3000               	movlw	0
  9701  005B  160A  158A  2744  120A  118A  	fcall	___xxtofl
  9702  0060  0875               	movf	?___xxtofl+3,w
  9703  0061  1683               	bsf	3,5	;RP0=1, select bank1
  9704  0062  1303               	bcf	3,6	;RP1=0, select bank1
  9705  0063  00A3               	movwf	(___flsub@a+3)^(0+128)
  9706  0064  0874               	movf	?___xxtofl+2,w
  9707  0065  00A2               	movwf	(___flsub@a+2)^(0+128)
  9708  0066  0873               	movf	?___xxtofl+1,w
  9709  0067  00A1               	movwf	(___flsub@a+1)^(0+128)
  9710  0068  0872               	movf	?___xxtofl,w
  9711  0069  00A0               	movwf	___flsub@a^(0+128)
  9712  006A  084B               	movf	(sprintf@fval+3)^(0+128),w
  9713  006B  00A7               	movwf	(___flsub@b+3)^(0+128)
  9714  006C  084A               	movf	(sprintf@fval+2)^(0+128),w
  9715  006D  00A6               	movwf	(___flsub@b+2)^(0+128)
  9716  006E  0849               	movf	(sprintf@fval+1)^(0+128),w
  9717  006F  00A5               	movwf	(___flsub@b+1)^(0+128)
  9718  0070  0848               	movf	sprintf@fval^(0+128),w
  9719  0071  00A4               	movwf	___flsub@b^(0+128)
  9720  0072  160A  158A  24BD  120A  118A  	fcall	___flsub
  9721  0077  1683               	bsf	3,5	;RP0=1, select bank1
  9722  0078  1303               	bcf	3,6	;RP1=0, select bank1
  9723  0079  0823               	movf	(?___flsub+3)^(0+128),w
  9724  007A  00CB               	movwf	(sprintf@fval+3)^(0+128)
  9725  007B  0822               	movf	(?___flsub+2)^(0+128),w
  9726  007C  00CA               	movwf	(sprintf@fval+2)^(0+128)
  9727  007D  0821               	movf	(?___flsub+1)^(0+128),w
  9728  007E  00C9               	movwf	(sprintf@fval+1)^(0+128)
  9729  007F  0820               	movf	?___flsub^(0+128),w
  9730  0080  00C8               	movwf	sprintf@fval^(0+128)
  9731  0081                     l3828:
  9732                           
  9733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9734  0081  01C2               	clrf	sprintf@eexp^(0+128)
  9735  0082  01C3               	clrf	(sprintf@eexp+1)^(0+128)
  9736  0083                     l3830:
  9737                           
  9738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9739  0083  01CF               	clrf	sprintf@c^(0+128)
  9740  0084  0ACF               	incf	sprintf@c^(0+128),f
  9741  0085                     l3836:
  9742                           
  9743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9744  0085  084F               	movf	sprintf@c^(0+128),w
  9745  0086  1283               	bcf	3,5	;RP0=0, select bank0
  9746  0087  1303               	bcf	3,6	;RP1=0, select bank0
  9747  0088  00EA               	movwf	??_sprintf
  9748  0089  3001               	movlw	1
  9749  008A                     u6185:
  9750  008A  1003               	clrc
  9751  008B  0DEA               	rlf	??_sprintf,f
  9752  008C  3EFF               	addlw	-1
  9753  008D  1D03               	skipz
  9754  008E  288A               	goto	u6185
  9755  008F  1003               	clrc
  9756  0090  0D6A               	rlf	??_sprintf,w
  9757  0091  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9758  0092  0084               	movwf	4
  9759  0093  160A  158A  2000  120A  118A  	fcall	stringdir
  9760  0098  00EB               	movwf	??_sprintf+1
  9761  0099  160A  158A  2000  120A  118A  	fcall	stringdir
  9762  009E  00EC               	movwf	??_sprintf+2
  9763  009F  160A  158A  2000  120A  118A  	fcall	stringdir
  9764  00A4  00ED               	movwf	??_sprintf+3
  9765  00A5  160A  158A  2000  120A  118A  	fcall	stringdir
  9766  00AA  00EE               	movwf	??_sprintf+4
  9767  00AB  086E               	movf	??_sprintf+4,w
  9768  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  9769  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  9770  00AE  023D               	subwf	(sprintf@val+3)^(0+128),w
  9771  00AF  1D03               	skipz
  9772  00B0  28C7               	goto	u6195
  9773  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  9774  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  9775  00B3  086D               	movf	??_sprintf+3,w
  9776  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  9777  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  9778  00B6  023C               	subwf	(sprintf@val+2)^(0+128),w
  9779  00B7  1D03               	skipz
  9780  00B8  28C7               	goto	u6195
  9781  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  9782  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  9783  00BB  086C               	movf	??_sprintf+2,w
  9784  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  9785  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  9786  00BE  023B               	subwf	(sprintf@val+1)^(0+128),w
  9787  00BF  1D03               	skipz
  9788  00C0  28C7               	goto	u6195
  9789  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  9790  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  9791  00C3  086B               	movf	??_sprintf+1,w
  9792  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  9793  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  9794  00C6  023A               	subwf	sprintf@val^(0+128),w
  9795  00C7                     u6195:
  9796  00C7  1803               	skipnc
  9797  00C8  28CA               	goto	u6191
  9798  00C9  28CB               	goto	u6190
  9799  00CA                     u6191:
  9800  00CA  28CC               	goto	l3840
  9801  00CB                     u6190:
  9802  00CB  28DA               	goto	l3842
  9803  00CC                     l3840:
  9804  00CC  3001               	movlw	1
  9805  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  9806  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  9807  00CF  00EA               	movwf	??_sprintf
  9808  00D0  086A               	movf	??_sprintf,w
  9809  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  9810  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  9811  00D3  07CF               	addwf	sprintf@c^(0+128),f
  9812  00D4  300A               	movlw	10
  9813  00D5  064F               	xorwf	sprintf@c^(0+128),w
  9814  00D6  1D03               	btfss	3,2
  9815  00D7  28D9               	goto	u6201
  9816  00D8  28DA               	goto	u6200
  9817  00D9                     u6201:
  9818  00D9  2885               	goto	l3836
  9819  00DA                     u6200:
  9820  00DA                     l3842:
  9821                           
  9822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9823  00DA  084F               	movf	sprintf@c^(0+128),w
  9824  00DB  074C               	addwf	sprintf@prec^(0+128),w
  9825  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  9826  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  9827  00DE  00EA               	movwf	??_sprintf
  9828  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  9829  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  9830  00E1  084D               	movf	(sprintf@prec+1)^(0+128),w
  9831  00E2  1803               	skipnc
  9832  00E3  0A4D               	incf	(sprintf@prec+1)^(0+128),w
  9833  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  9834  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  9835  00E6  00EB               	movwf	??_sprintf+1
  9836  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  9837  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  9838  00E9  0842               	movf	sprintf@eexp^(0+128),w
  9839  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  9840  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  9841  00EC  076A               	addwf	??_sprintf,w
  9842  00ED  00EC               	movwf	??_sprintf+2
  9843  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  9844  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  9845  00F0  0843               	movf	(sprintf@eexp+1)^(0+128),w
  9846  00F1  1803               	skipnc
  9847  00F2  0A43               	incf	(sprintf@eexp+1)^(0+128),w
  9848  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  9849  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  9850  00F5  076B               	addwf	??_sprintf+1,w
  9851  00F6  00ED               	movwf	??_sprintf+3
  9852  00F7  086C               	movf	??_sprintf+2,w
  9853  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  9854  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  9855  00FA  02C6               	subwf	sprintf@width^(0+128),f
  9856  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  9857  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  9858  00FD  086D               	movf	??_sprintf+3,w
  9859  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  9860  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  9861  0100  1C03               	skipc
  9862  0101  03C7               	decf	(sprintf@width+1)^(0+128),f
  9863  0102  02C7               	subwf	(sprintf@width+1)^(0+128),f
  9864                           
  9865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9866  0103  084C               	movf	sprintf@prec^(0+128),w
  9867  0104  044D               	iorwf	(sprintf@prec+1)^(0+128),w
  9868  0105  1903               	btfsc	3,2
  9869  0106  2908               	goto	u6211
  9870  0107  2909               	goto	u6210
  9871  0108                     u6211:
  9872  0108  290F               	goto	l3846
  9873  0109                     u6210:
  9874  0109                     l3844:
  9875                           
  9876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9877  0109  30FF               	movlw	255
  9878  010A  07C6               	addwf	sprintf@width^(0+128),f
  9879  010B  1803               	skipnc
  9880  010C  0AC7               	incf	(sprintf@width+1)^(0+128),f
  9881  010D  30FF               	movlw	255
  9882  010E  07C7               	addwf	(sprintf@width+1)^(0+128),f
  9883  010F                     l3846:
  9884                           
  9885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9886  010F  3003               	movlw	3
  9887  0110  0544               	andwf	sprintf@flag^(0+128),w
  9888  0111  1283               	bcf	3,5	;RP0=0, select bank0
  9889  0112  1303               	bcf	3,6	;RP1=0, select bank0
  9890  0113  00EA               	movwf	??_sprintf
  9891  0114  3000               	movlw	0
  9892  0115  1683               	bsf	3,5	;RP0=1, select bank1
  9893  0116  1303               	bcf	3,6	;RP1=0, select bank1
  9894  0117  0545               	andwf	(sprintf@flag+1)^(0+128),w
  9895  0118  1283               	bcf	3,5	;RP0=0, select bank0
  9896  0119  1303               	bcf	3,6	;RP1=0, select bank0
  9897  011A  00EB               	movwf	??_sprintf+1
  9898  011B  086A               	movf	??_sprintf,w
  9899  011C  046B               	iorwf	??_sprintf+1,w
  9900  011D  1903               	btfsc	3,2
  9901  011E  2920               	goto	u6221
  9902  011F  2921               	goto	u6220
  9903  0120                     u6221:
  9904  0120  2929               	goto	l3850
  9905  0121                     u6220:
  9906  0121                     l3848:
  9907                           
  9908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9909  0121  30FF               	movlw	255
  9910  0122  1683               	bsf	3,5	;RP0=1, select bank1
  9911  0123  1303               	bcf	3,6	;RP1=0, select bank1
  9912  0124  07C6               	addwf	sprintf@width^(0+128),f
  9913  0125  1803               	skipnc
  9914  0126  0AC7               	incf	(sprintf@width+1)^(0+128),f
  9915  0127  30FF               	movlw	255
  9916  0128  07C7               	addwf	(sprintf@width+1)^(0+128),f
  9917  0129                     l3850:
  9918                           
  9919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
  9920  0129  1683               	bsf	3,5	;RP0=1, select bank1
  9921  012A  1303               	bcf	3,6	;RP1=0, select bank1
  9922  012B  1D44               	btfss	sprintf@flag^(0+128),2
  9923  012C  292E               	goto	u6231
  9924  012D  292F               	goto	u6230
  9925  012E                     u6231:
  9926  012E  2995               	goto	l3872
  9927  012F                     u6230:
  9928  012F                     l3852:
  9929                           
  9930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
  9931  012F  3003               	movlw	3
  9932  0130  0544               	andwf	sprintf@flag^(0+128),w
  9933  0131  1283               	bcf	3,5	;RP0=0, select bank0
  9934  0132  1303               	bcf	3,6	;RP1=0, select bank0
  9935  0133  00EA               	movwf	??_sprintf
  9936  0134  3000               	movlw	0
  9937  0135  1683               	bsf	3,5	;RP0=1, select bank1
  9938  0136  1303               	bcf	3,6	;RP1=0, select bank1
  9939  0137  0545               	andwf	(sprintf@flag+1)^(0+128),w
  9940  0138  1283               	bcf	3,5	;RP0=0, select bank0
  9941  0139  1303               	bcf	3,6	;RP1=0, select bank0
  9942  013A  00EB               	movwf	??_sprintf+1
  9943  013B  086A               	movf	??_sprintf,w
  9944  013C  046B               	iorwf	??_sprintf+1,w
  9945  013D  1903               	btfsc	3,2
  9946  013E  2940               	goto	u6241
  9947  013F  2941               	goto	u6240
  9948  0140                     u6241:
  9949  0140  296C               	goto	l3864
  9950  0141                     u6240:
  9951  0141                     l3854:
  9952                           
  9953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
  9954  0141  302D               	movlw	45
  9955  0142  00EA               	movwf	??_sprintf
  9956  0143  1683               	bsf	3,5	;RP0=1, select bank1
  9957  0144  1303               	bcf	3,6	;RP1=0, select bank1
  9958  0145  084E               	movf	sprintf@sp^(0+128),w
  9959  0146  0084               	movwf	4
  9960  0147  1283               	bcf	3,5	;RP0=0, select bank0
  9961  0148  1303               	bcf	3,6	;RP1=0, select bank0
  9962  0149  086A               	movf	??_sprintf,w
  9963  014A  1383               	bcf	3,7	;select IRP bank0
  9964  014B  0080               	movwf	0
  9965  014C                     l3856:
  9966  014C  3001               	movlw	1
  9967  014D  00EA               	movwf	??_sprintf
  9968  014E  086A               	movf	??_sprintf,w
  9969  014F  1683               	bsf	3,5	;RP0=1, select bank1
  9970  0150  1303               	bcf	3,6	;RP1=0, select bank1
  9971  0151  07CE               	addwf	sprintf@sp^(0+128),f
  9972  0152  296C               	goto	l3864
  9973  0153                     l3858:
  9974                           
  9975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
  9976  0153  3030               	movlw	48
  9977  0154  1283               	bcf	3,5	;RP0=0, select bank0
  9978  0155  1303               	bcf	3,6	;RP1=0, select bank0
  9979  0156  00EA               	movwf	??_sprintf
  9980  0157  1683               	bsf	3,5	;RP0=1, select bank1
  9981  0158  1303               	bcf	3,6	;RP1=0, select bank1
  9982  0159  084E               	movf	sprintf@sp^(0+128),w
  9983  015A  0084               	movwf	4
  9984  015B  1283               	bcf	3,5	;RP0=0, select bank0
  9985  015C  1303               	bcf	3,6	;RP1=0, select bank0
  9986  015D  086A               	movf	??_sprintf,w
  9987  015E  1383               	bcf	3,7	;select IRP bank0
  9988  015F  0080               	movwf	0
  9989  0160                     l3860:
  9990  0160  3001               	movlw	1
  9991  0161  00EA               	movwf	??_sprintf
  9992  0162  086A               	movf	??_sprintf,w
  9993  0163  1683               	bsf	3,5	;RP0=1, select bank1
  9994  0164  1303               	bcf	3,6	;RP1=0, select bank1
  9995  0165  07CE               	addwf	sprintf@sp^(0+128),f
  9996  0166                     l3862:
  9997                           
  9998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
  9999  0166  30FF               	movlw	255
 10000  0167  07C6               	addwf	sprintf@width^(0+128),f
 10001  0168  1803               	skipnc
 10002  0169  0AC7               	incf	(sprintf@width+1)^(0+128),f
 10003  016A  30FF               	movlw	255
 10004  016B  07C7               	addwf	(sprintf@width+1)^(0+128),f
 10005  016C                     l3864:
 10006                           
 10007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
 10008  016C  1683               	bsf	3,5	;RP0=1, select bank1
 10009  016D  1303               	bcf	3,6	;RP1=0, select bank1
 10010  016E  0847               	movf	(sprintf@width+1)^(0+128),w
 10011  016F  3A80               	xorlw	128
 10012  0170  00FF               	movwf	btemp+1
 10013  0171  3080               	movlw	128
 10014  0172  027F               	subwf	btemp+1,w
 10015  0173  1D03               	skipz
 10016  0174  2977               	goto	u6255
 10017  0175  3001               	movlw	1
 10018  0176  0246               	subwf	sprintf@width^(0+128),w
 10019  0177                     u6255:
 10020  0177  1803               	skipnc
 10021  0178  297A               	goto	u6251
 10022  0179  297B               	goto	u6250
 10023  017A                     u6251:
 10024  017A  2953               	goto	l3858
 10025  017B                     u6250:
 10026  017B  2A3A               	goto	l355
 10027  017C                     l3866:
 10028                           
 10029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10030  017C  3020               	movlw	32
 10031  017D  1283               	bcf	3,5	;RP0=0, select bank0
 10032  017E  1303               	bcf	3,6	;RP1=0, select bank0
 10033  017F  00EA               	movwf	??_sprintf
 10034  0180  1683               	bsf	3,5	;RP0=1, select bank1
 10035  0181  1303               	bcf	3,6	;RP1=0, select bank1
 10036  0182  084E               	movf	sprintf@sp^(0+128),w
 10037  0183  0084               	movwf	4
 10038  0184  1283               	bcf	3,5	;RP0=0, select bank0
 10039  0185  1303               	bcf	3,6	;RP1=0, select bank0
 10040  0186  086A               	movf	??_sprintf,w
 10041  0187  1383               	bcf	3,7	;select IRP bank0
 10042  0188  0080               	movwf	0
 10043  0189                     l3868:
 10044  0189  3001               	movlw	1
 10045  018A  00EA               	movwf	??_sprintf
 10046  018B  086A               	movf	??_sprintf,w
 10047  018C  1683               	bsf	3,5	;RP0=1, select bank1
 10048  018D  1303               	bcf	3,6	;RP1=0, select bank1
 10049  018E  07CE               	addwf	sprintf@sp^(0+128),f
 10050  018F                     l3870:
 10051                           
 10052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
 10053  018F  30FF               	movlw	255
 10054  0190  07C6               	addwf	sprintf@width^(0+128),f
 10055  0191  1803               	skipnc
 10056  0192  0AC7               	incf	(sprintf@width+1)^(0+128),f
 10057  0193  30FF               	movlw	255
 10058  0194  07C7               	addwf	(sprintf@width+1)^(0+128),f
 10059  0195                     l3872:
 10060                           
 10061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10062  0195  0847               	movf	(sprintf@width+1)^(0+128),w
 10063  0196  3A80               	xorlw	128
 10064  0197  00FF               	movwf	btemp+1
 10065  0198  3080               	movlw	128
 10066  0199  027F               	subwf	btemp+1,w
 10067  019A  1D03               	skipz
 10068  019B  299E               	goto	u6265
 10069  019C  3001               	movlw	1
 10070  019D  0246               	subwf	sprintf@width^(0+128),w
 10071  019E                     u6265:
 10072  019E  1803               	skipnc
 10073  019F  29A1               	goto	u6261
 10074  01A0  29A2               	goto	u6260
 10075  01A1                     u6261:
 10076  01A1  297C               	goto	l3866
 10077  01A2                     u6260:
 10078  01A2                     l3874:
 10079                           
 10080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10081  01A2  3003               	movlw	3
 10082  01A3  1683               	bsf	3,5	;RP0=1, select bank1
 10083  01A4  1303               	bcf	3,6	;RP1=0, select bank1
 10084  01A5  0544               	andwf	sprintf@flag^(0+128),w
 10085  01A6  1283               	bcf	3,5	;RP0=0, select bank0
 10086  01A7  1303               	bcf	3,6	;RP1=0, select bank0
 10087  01A8  00EA               	movwf	??_sprintf
 10088  01A9  3000               	movlw	0
 10089  01AA  1683               	bsf	3,5	;RP0=1, select bank1
 10090  01AB  1303               	bcf	3,6	;RP1=0, select bank1
 10091  01AC  0545               	andwf	(sprintf@flag+1)^(0+128),w
 10092  01AD  1283               	bcf	3,5	;RP0=0, select bank0
 10093  01AE  1303               	bcf	3,6	;RP1=0, select bank0
 10094  01AF  00EB               	movwf	??_sprintf+1
 10095  01B0  086A               	movf	??_sprintf,w
 10096  01B1  046B               	iorwf	??_sprintf+1,w
 10097  01B2  1903               	btfsc	3,2
 10098  01B3  29B5               	goto	u6271
 10099  01B4  29B6               	goto	u6270
 10100  01B5                     u6271:
 10101  01B5  2A3A               	goto	l355
 10102  01B6                     u6270:
 10103  01B6                     l3876:
 10104                           
 10105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10106  01B6  302D               	movlw	45
 10107  01B7  00EA               	movwf	??_sprintf
 10108  01B8  1683               	bsf	3,5	;RP0=1, select bank1
 10109  01B9  1303               	bcf	3,6	;RP1=0, select bank1
 10110  01BA  084E               	movf	sprintf@sp^(0+128),w
 10111  01BB  0084               	movwf	4
 10112  01BC  1283               	bcf	3,5	;RP0=0, select bank0
 10113  01BD  1303               	bcf	3,6	;RP1=0, select bank0
 10114  01BE  086A               	movf	??_sprintf,w
 10115  01BF  1383               	bcf	3,7	;select IRP bank0
 10116  01C0  0080               	movwf	0
 10117  01C1                     l3878:
 10118  01C1  3001               	movlw	1
 10119  01C2  00EA               	movwf	??_sprintf
 10120  01C3  086A               	movf	??_sprintf,w
 10121  01C4  1683               	bsf	3,5	;RP0=1, select bank1
 10122  01C5  1303               	bcf	3,6	;RP1=0, select bank1
 10123  01C6  07CE               	addwf	sprintf@sp^(0+128),f
 10124  01C7  2A3A               	goto	l355
 10125  01C8                     l3880:
 10126                           
 10127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10128  01C8  084F               	movf	sprintf@c^(0+128),w
 10129  01C9  1283               	bcf	3,5	;RP0=0, select bank0
 10130  01CA  1303               	bcf	3,6	;RP1=0, select bank0
 10131  01CB  00EA               	movwf	??_sprintf
 10132  01CC  3001               	movlw	1
 10133  01CD                     u6285:
 10134  01CD  1003               	clrc
 10135  01CE  0DEA               	rlf	??_sprintf,f
 10136  01CF  3EFF               	addlw	-1
 10137  01D0  1D03               	skipz
 10138  01D1  29CD               	goto	u6285
 10139  01D2  1003               	clrc
 10140  01D3  0D6A               	rlf	??_sprintf,w
 10141  01D4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10142  01D5  0084               	movwf	4
 10143  01D6  160A  158A  2000  120A  118A  	fcall	stringdir
 10144  01DB  00F2               	movwf	___lldiv@divisor
 10145  01DC  160A  158A  2000  120A  118A  	fcall	stringdir
 10146  01E1  00F3               	movwf	___lldiv@divisor+1
 10147  01E2  160A  158A  2000  120A  118A  	fcall	stringdir
 10148  01E7  00F4               	movwf	___lldiv@divisor+2
 10149  01E8  160A  158A  2000  120A  118A  	fcall	stringdir
 10150  01ED  00F5               	movwf	___lldiv@divisor+3
 10151  01EE  1683               	bsf	3,5	;RP0=1, select bank1
 10152  01EF  1303               	bcf	3,6	;RP1=0, select bank1
 10153  01F0  083D               	movf	(sprintf@val+3)^(0+128),w
 10154  01F1  00F9               	movwf	___lldiv@dividend+3
 10155  01F2  083C               	movf	(sprintf@val+2)^(0+128),w
 10156  01F3  00F8               	movwf	___lldiv@dividend+2
 10157  01F4  083B               	movf	(sprintf@val+1)^(0+128),w
 10158  01F5  00F7               	movwf	___lldiv@dividend+1
 10159  01F6  083A               	movf	sprintf@val^(0+128),w
 10160  01F7  00F6               	movwf	___lldiv@dividend
 10161  01F8  160A  158A  25BC  120A  118A  	fcall	___lldiv
 10162  01FD  0875               	movf	?___lldiv+3,w
 10163  01FE  1683               	bsf	3,5	;RP0=1, select bank1
 10164  01FF  1303               	bcf	3,6	;RP1=0, select bank1
 10165  0200  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
 10166  0201  0874               	movf	?___lldiv+2,w
 10167  0202  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
 10168  0203  0873               	movf	?___lldiv+1,w
 10169  0204  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
 10170  0205  0872               	movf	?___lldiv,w
 10171  0206  00BE               	movwf	sprintf@tmpval^(0+128)
 10172  0207                     l3882:
 10173                           
 10174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10175  0207  3000               	movlw	0
 10176  0208  00F5               	movwf	___llmod@divisor+3
 10177  0209  3000               	movlw	0
 10178  020A  00F4               	movwf	___llmod@divisor+2
 10179  020B  3000               	movlw	0
 10180  020C  00F3               	movwf	___llmod@divisor+1
 10181  020D  300A               	movlw	10
 10182  020E  00F2               	movwf	___llmod@divisor
 10183  020F  0841               	movf	(sprintf@tmpval+3)^(0+128),w
 10184  0210  00F9               	movwf	___llmod@dividend+3
 10185  0211  0840               	movf	(sprintf@tmpval+2)^(0+128),w
 10186  0212  00F8               	movwf	___llmod@dividend+2
 10187  0213  083F               	movf	(sprintf@tmpval+1)^(0+128),w
 10188  0214  00F7               	movwf	___llmod@dividend+1
 10189  0215  083E               	movf	sprintf@tmpval^(0+128),w
 10190  0216  00F6               	movwf	___llmod@dividend
 10191  0217  160A  158A  250D  120A  118A  	fcall	___llmod
 10192  021C  0875               	movf	?___llmod+3,w
 10193  021D  1683               	bsf	3,5	;RP0=1, select bank1
 10194  021E  1303               	bcf	3,6	;RP1=0, select bank1
 10195  021F  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
 10196  0220  0874               	movf	?___llmod+2,w
 10197  0221  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
 10198  0222  0873               	movf	?___llmod+1,w
 10199  0223  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
 10200  0224  0872               	movf	?___llmod,w
 10201  0225  00BE               	movwf	sprintf@tmpval^(0+128)
 10202  0226                     l3884:
 10203                           
 10204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10205  0226  083E               	movf	sprintf@tmpval^(0+128),w
 10206  0227  3E30               	addlw	48
 10207  0228  1283               	bcf	3,5	;RP0=0, select bank0
 10208  0229  1303               	bcf	3,6	;RP1=0, select bank0
 10209  022A  00EA               	movwf	??_sprintf
 10210  022B  1683               	bsf	3,5	;RP0=1, select bank1
 10211  022C  1303               	bcf	3,6	;RP1=0, select bank1
 10212  022D  084E               	movf	sprintf@sp^(0+128),w
 10213  022E  0084               	movwf	4
 10214  022F  1283               	bcf	3,5	;RP0=0, select bank0
 10215  0230  1303               	bcf	3,6	;RP1=0, select bank0
 10216  0231  086A               	movf	??_sprintf,w
 10217  0232  1383               	bcf	3,7	;select IRP bank0
 10218  0233  0080               	movwf	0
 10219  0234  3001               	movlw	1
 10220  0235  00EA               	movwf	??_sprintf
 10221  0236  086A               	movf	??_sprintf,w
 10222  0237  1683               	bsf	3,5	;RP0=1, select bank1
 10223  0238  1303               	bcf	3,6	;RP1=0, select bank1
 10224  0239  07CE               	addwf	sprintf@sp^(0+128),f
 10225  023A                     l355:	
 10226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10227                           
 10228                           
 10229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10230  023A  3001               	movlw	1
 10231  023B  1683               	bsf	3,5	;RP0=1, select bank1
 10232  023C  1303               	bcf	3,6	;RP1=0, select bank1
 10233  023D  02CF               	subwf	sprintf@c^(0+128),f
 10234  023E  0A4F               	incf	sprintf@c^(0+128),w
 10235  023F  1D03               	btfss	3,2
 10236  0240  2A42               	goto	u6291
 10237  0241  2A43               	goto	u6290
 10238  0242                     u6291:
 10239  0242  29C8               	goto	l3880
 10240  0243                     u6290:
 10241  0243  2A5D               	goto	l3892
 10242  0244                     l3886:
 10243                           
 10244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10245  0244  3030               	movlw	48
 10246  0245  1283               	bcf	3,5	;RP0=0, select bank0
 10247  0246  1303               	bcf	3,6	;RP1=0, select bank0
 10248  0247  00EA               	movwf	??_sprintf
 10249  0248  1683               	bsf	3,5	;RP0=1, select bank1
 10250  0249  1303               	bcf	3,6	;RP1=0, select bank1
 10251  024A  084E               	movf	sprintf@sp^(0+128),w
 10252  024B  0084               	movwf	4
 10253  024C  1283               	bcf	3,5	;RP0=0, select bank0
 10254  024D  1303               	bcf	3,6	;RP1=0, select bank0
 10255  024E  086A               	movf	??_sprintf,w
 10256  024F  1383               	bcf	3,7	;select IRP bank0
 10257  0250  0080               	movwf	0
 10258  0251                     l3888:
 10259  0251  3001               	movlw	1
 10260  0252  00EA               	movwf	??_sprintf
 10261  0253  086A               	movf	??_sprintf,w
 10262  0254  1683               	bsf	3,5	;RP0=1, select bank1
 10263  0255  1303               	bcf	3,6	;RP1=0, select bank1
 10264  0256  07CE               	addwf	sprintf@sp^(0+128),f
 10265  0257                     l3890:
 10266                           
 10267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10268  0257  30FF               	movlw	255
 10269  0258  07C2               	addwf	sprintf@eexp^(0+128),f
 10270  0259  1803               	skipnc
 10271  025A  0AC3               	incf	(sprintf@eexp+1)^(0+128),f
 10272  025B  30FF               	movlw	255
 10273  025C  07C3               	addwf	(sprintf@eexp+1)^(0+128),f
 10274  025D                     l3892:
 10275                           
 10276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10277  025D  0843               	movf	(sprintf@eexp+1)^(0+128),w
 10278  025E  3A80               	xorlw	128
 10279  025F  00FF               	movwf	btemp+1
 10280  0260  3080               	movlw	128
 10281  0261  027F               	subwf	btemp+1,w
 10282  0262  1D03               	skipz
 10283  0263  2A66               	goto	u6305
 10284  0264  3001               	movlw	1
 10285  0265  0242               	subwf	sprintf@eexp^(0+128),w
 10286  0266                     u6305:
 10287  0266  1803               	skipnc
 10288  0267  2A69               	goto	u6301
 10289  0268  2A6A               	goto	u6300
 10290  0269                     u6301:
 10291  0269  2A44               	goto	l3886
 10292  026A                     u6300:
 10293  026A                     l3894:
 10294                           
 10295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10296  026A  1683               	bsf	3,5	;RP0=1, select bank1
 10297  026B  1303               	bcf	3,6	;RP1=0, select bank1
 10298  026C  084D               	movf	(sprintf@prec+1)^(0+128),w
 10299  026D  3A80               	xorlw	128
 10300  026E  00FF               	movwf	btemp+1
 10301  026F  3080               	movlw	128
 10302  0270  027F               	subwf	btemp+1,w
 10303  0271  1D03               	skipz
 10304  0272  2A75               	goto	u6315
 10305  0273  3009               	movlw	9
 10306  0274  024C               	subwf	sprintf@prec^(0+128),w
 10307  0275                     u6315:
 10308  0275  1C03               	skipc
 10309  0276  2A78               	goto	u6311
 10310  0277  2A79               	goto	u6310
 10311  0278                     u6311:
 10312  0278  2A82               	goto	l3898
 10313  0279                     u6310:
 10314  0279                     l3896:
 10315                           
 10316                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10317  0279  3008               	movlw	8
 10318  027A  1283               	bcf	3,5	;RP0=0, select bank0
 10319  027B  1303               	bcf	3,6	;RP1=0, select bank0
 10320  027C  00EA               	movwf	??_sprintf
 10321  027D  086A               	movf	??_sprintf,w
 10322  027E  1683               	bsf	3,5	;RP0=1, select bank1
 10323  027F  1303               	bcf	3,6	;RP1=0, select bank1
 10324  0280  00CF               	movwf	sprintf@c^(0+128)
 10325  0281  2A8C               	goto	l362
 10326  0282                     l3898:
 10327                           
 10328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10329  0282  1683               	bsf	3,5	;RP0=1, select bank1
 10330  0283  1303               	bcf	3,6	;RP1=0, select bank1
 10331  0284  084C               	movf	sprintf@prec^(0+128),w
 10332  0285  1283               	bcf	3,5	;RP0=0, select bank0
 10333  0286  1303               	bcf	3,6	;RP1=0, select bank0
 10334  0287  00EA               	movwf	??_sprintf
 10335  0288  086A               	movf	??_sprintf,w
 10336  0289  1683               	bsf	3,5	;RP0=1, select bank1
 10337  028A  1303               	bcf	3,6	;RP1=0, select bank1
 10338  028B  00CF               	movwf	sprintf@c^(0+128)
 10339  028C                     l362:
 10340                           
 10341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10342  028C  084F               	movf	sprintf@c^(0+128),w
 10343  028D  1283               	bcf	3,5	;RP0=0, select bank0
 10344  028E  1303               	bcf	3,6	;RP1=0, select bank0
 10345  028F  00EA               	movwf	??_sprintf
 10346  0290  01EB               	clrf	??_sprintf+1
 10347  0291  086A               	movf	??_sprintf,w
 10348  0292  1683               	bsf	3,5	;RP0=1, select bank1
 10349  0293  1303               	bcf	3,6	;RP1=0, select bank1
 10350  0294  02CC               	subwf	sprintf@prec^(0+128),f
 10351  0295  1283               	bcf	3,5	;RP0=0, select bank0
 10352  0296  1303               	bcf	3,6	;RP1=0, select bank0
 10353  0297  086B               	movf	??_sprintf+1,w
 10354  0298  1683               	bsf	3,5	;RP0=1, select bank1
 10355  0299  1303               	bcf	3,6	;RP1=0, select bank1
 10356  029A  1C03               	skipc
 10357  029B  03CD               	decf	(sprintf@prec+1)^(0+128),f
 10358  029C  02CD               	subwf	(sprintf@prec+1)^(0+128),f
 10359  029D                     l3900:
 10360                           
 10361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10362  029D  084F               	movf	sprintf@c^(0+128),w
 10363  029E  1903               	btfsc	3,2
 10364  029F  2AA1               	goto	u6321
 10365  02A0  2AA2               	goto	u6320
 10366  02A1                     u6321:
 10367  02A1  2AB5               	goto	l3906
 10368  02A2                     u6320:
 10369  02A2                     l3902:
 10370                           
 10371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10372  02A2  302E               	movlw	46
 10373  02A3  1283               	bcf	3,5	;RP0=0, select bank0
 10374  02A4  1303               	bcf	3,6	;RP1=0, select bank0
 10375  02A5  00EA               	movwf	??_sprintf
 10376  02A6  1683               	bsf	3,5	;RP0=1, select bank1
 10377  02A7  1303               	bcf	3,6	;RP1=0, select bank1
 10378  02A8  084E               	movf	sprintf@sp^(0+128),w
 10379  02A9  0084               	movwf	4
 10380  02AA  1283               	bcf	3,5	;RP0=0, select bank0
 10381  02AB  1303               	bcf	3,6	;RP1=0, select bank0
 10382  02AC  086A               	movf	??_sprintf,w
 10383  02AD  1383               	bcf	3,7	;select IRP bank0
 10384  02AE  0080               	movwf	0
 10385  02AF                     l3904:
 10386  02AF  3001               	movlw	1
 10387  02B0  00EA               	movwf	??_sprintf
 10388  02B1  086A               	movf	??_sprintf,w
 10389  02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10390  02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10391  02B4  07CE               	addwf	sprintf@sp^(0+128),f
 10392  02B5                     l3906:
 10393                           
 10394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10395  02B5  084F               	movf	sprintf@c^(0+128),w
 10396  02B6  120A  158A  249D  120A  118A  	fcall	_scale
 10397  02BB  1283               	bcf	3,5	;RP0=0, select bank0
 10398  02BC  1303               	bcf	3,6	;RP1=0, select bank0
 10399  02BD  0845               	movf	?_scale+3,w
 10400  02BE  1683               	bsf	3,5	;RP0=1, select bank1
 10401  02BF  1303               	bcf	3,6	;RP1=0, select bank1
 10402  02C0  00B8               	movwf	(_sprintf$1181+3)^(0+128)
 10403  02C1  1283               	bcf	3,5	;RP0=0, select bank0
 10404  02C2  1303               	bcf	3,6	;RP1=0, select bank0
 10405  02C3  0844               	movf	?_scale+2,w
 10406  02C4  1683               	bsf	3,5	;RP0=1, select bank1
 10407  02C5  1303               	bcf	3,6	;RP1=0, select bank1
 10408  02C6  00B7               	movwf	(_sprintf$1181+2)^(0+128)
 10409  02C7  1283               	bcf	3,5	;RP0=0, select bank0
 10410  02C8  1303               	bcf	3,6	;RP1=0, select bank0
 10411  02C9  0843               	movf	?_scale+1,w
 10412  02CA  1683               	bsf	3,5	;RP0=1, select bank1
 10413  02CB  1303               	bcf	3,6	;RP1=0, select bank1
 10414  02CC  00B6               	movwf	(_sprintf$1181+1)^(0+128)
 10415  02CD  1283               	bcf	3,5	;RP0=0, select bank0
 10416  02CE  1303               	bcf	3,6	;RP1=0, select bank0
 10417  02CF  0842               	movf	?_scale,w
 10418  02D0  1683               	bsf	3,5	;RP0=1, select bank1
 10419  02D1  1303               	bcf	3,6	;RP1=0, select bank1
 10420  02D2  00B5               	movwf	_sprintf$1181^(0+128)
 10421  02D3                     l3908:
 10422                           
 10423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10424  02D3  0838               	movf	(_sprintf$1181+3)^(0+128),w
 10425  02D4  1283               	bcf	3,5	;RP0=0, select bank0
 10426  02D5  1303               	bcf	3,6	;RP1=0, select bank0
 10427  02D6  00AF               	movwf	___flmul@a+3
 10428  02D7  1683               	bsf	3,5	;RP0=1, select bank1
 10429  02D8  1303               	bcf	3,6	;RP1=0, select bank1
 10430  02D9  0837               	movf	(_sprintf$1181+2)^(0+128),w
 10431  02DA  1283               	bcf	3,5	;RP0=0, select bank0
 10432  02DB  1303               	bcf	3,6	;RP1=0, select bank0
 10433  02DC  00AE               	movwf	___flmul@a+2
 10434  02DD  1683               	bsf	3,5	;RP0=1, select bank1
 10435  02DE  1303               	bcf	3,6	;RP1=0, select bank1
 10436  02DF  0836               	movf	(_sprintf$1181+1)^(0+128),w
 10437  02E0  1283               	bcf	3,5	;RP0=0, select bank0
 10438  02E1  1303               	bcf	3,6	;RP1=0, select bank0
 10439  02E2  00AD               	movwf	___flmul@a+1
 10440  02E3  1683               	bsf	3,5	;RP0=1, select bank1
 10441  02E4  1303               	bcf	3,6	;RP1=0, select bank1
 10442  02E5  0835               	movf	_sprintf$1181^(0+128),w
 10443  02E6  1283               	bcf	3,5	;RP0=0, select bank0
 10444  02E7  1303               	bcf	3,6	;RP1=0, select bank0
 10445  02E8  00AC               	movwf	___flmul@a
 10446  02E9  1683               	bsf	3,5	;RP0=1, select bank1
 10447  02EA  1303               	bcf	3,6	;RP1=0, select bank1
 10448  02EB  084B               	movf	(sprintf@fval+3)^(0+128),w
 10449  02EC  1283               	bcf	3,5	;RP0=0, select bank0
 10450  02ED  1303               	bcf	3,6	;RP1=0, select bank0
 10451  02EE  00AB               	movwf	___flmul@b+3
 10452  02EF  1683               	bsf	3,5	;RP0=1, select bank1
 10453  02F0  1303               	bcf	3,6	;RP1=0, select bank1
 10454  02F1  084A               	movf	(sprintf@fval+2)^(0+128),w
 10455  02F2  1283               	bcf	3,5	;RP0=0, select bank0
 10456  02F3  1303               	bcf	3,6	;RP1=0, select bank0
 10457  02F4  00AA               	movwf	___flmul@b+2
 10458  02F5  1683               	bsf	3,5	;RP0=1, select bank1
 10459  02F6  1303               	bcf	3,6	;RP1=0, select bank1
 10460  02F7  0849               	movf	(sprintf@fval+1)^(0+128),w
 10461  02F8  1283               	bcf	3,5	;RP0=0, select bank0
 10462  02F9  1303               	bcf	3,6	;RP1=0, select bank0
 10463  02FA  00A9               	movwf	___flmul@b+1
 10464  02FB  1683               	bsf	3,5	;RP0=1, select bank1
 10465  02FC  1303               	bcf	3,6	;RP1=0, select bank1
 10466  02FD  0848               	movf	sprintf@fval^(0+128),w
 10467  02FE  1283               	bcf	3,5	;RP0=0, select bank0
 10468  02FF  1303               	bcf	3,6	;RP1=0, select bank0
 10469  0300  00A8               	movwf	___flmul@b
 10470  0301  120A  158A  213C  120A  118A  	fcall	___flmul
 10471  0306  1283               	bcf	3,5	;RP0=0, select bank0
 10472  0307  1303               	bcf	3,6	;RP1=0, select bank0
 10473  0308  082B               	movf	?___flmul+3,w
 10474  0309  00D8               	movwf	___fltol@f1+3
 10475  030A  082A               	movf	?___flmul+2,w
 10476  030B  00D7               	movwf	___fltol@f1+2
 10477  030C  0829               	movf	?___flmul+1,w
 10478  030D  00D6               	movwf	___fltol@f1+1
 10479  030E  0828               	movf	?___flmul,w
 10480  030F  00D5               	movwf	___fltol@f1
 10481  0310  160A  158A  2624  120A  118A  	fcall	___fltol
 10482  0315  1283               	bcf	3,5	;RP0=0, select bank0
 10483  0316  1303               	bcf	3,6	;RP1=0, select bank0
 10484  0317  0858               	movf	?___fltol+3,w
 10485  0318  1683               	bsf	3,5	;RP0=1, select bank1
 10486  0319  1303               	bcf	3,6	;RP1=0, select bank1
 10487  031A  00BD               	movwf	(sprintf@val+3)^(0+128)
 10488  031B  1283               	bcf	3,5	;RP0=0, select bank0
 10489  031C  1303               	bcf	3,6	;RP1=0, select bank0
 10490  031D  0857               	movf	?___fltol+2,w
 10491  031E  1683               	bsf	3,5	;RP0=1, select bank1
 10492  031F  1303               	bcf	3,6	;RP1=0, select bank1
 10493  0320  00BC               	movwf	(sprintf@val+2)^(0+128)
 10494  0321  1283               	bcf	3,5	;RP0=0, select bank0
 10495  0322  1303               	bcf	3,6	;RP1=0, select bank0
 10496  0323  0856               	movf	?___fltol+1,w
 10497  0324  1683               	bsf	3,5	;RP0=1, select bank1
 10498  0325  1303               	bcf	3,6	;RP1=0, select bank1
 10499  0326  00BB               	movwf	(sprintf@val+1)^(0+128)
 10500  0327  1283               	bcf	3,5	;RP0=0, select bank0
 10501  0328  1303               	bcf	3,6	;RP1=0, select bank0
 10502  0329  0855               	movf	?___fltol,w
 10503  032A  1683               	bsf	3,5	;RP0=1, select bank1
 10504  032B  1303               	bcf	3,6	;RP1=0, select bank1
 10505  032C  00BA               	movwf	sprintf@val^(0+128)
 10506                           
 10507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10508  032D  2BDF               	goto	l3918
 10509  032E                     l3910:
 10510                           
 10511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10512  032E  084F               	movf	sprintf@c^(0+128),w
 10513  032F  1283               	bcf	3,5	;RP0=0, select bank0
 10514  0330  1303               	bcf	3,6	;RP1=0, select bank0
 10515  0331  00EA               	movwf	??_sprintf
 10516  0332  3001               	movlw	1
 10517  0333                     u6335:
 10518  0333  1003               	clrc
 10519  0334  0DEA               	rlf	??_sprintf,f
 10520  0335  3EFF               	addlw	-1
 10521  0336  1D03               	skipz
 10522  0337  2B33               	goto	u6335
 10523  0338  1003               	clrc
 10524  0339  0D6A               	rlf	??_sprintf,w
 10525  033A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10526  033B  0084               	movwf	4
 10527  033C  160A  158A  2000  120A  118A  	fcall	stringdir
 10528  0341  00F2               	movwf	___lldiv@divisor
 10529  0342  160A  158A  2000  120A  118A  	fcall	stringdir
 10530  0347  00F3               	movwf	___lldiv@divisor+1
 10531  0348  160A  158A  2000  120A  118A  	fcall	stringdir
 10532  034D  00F4               	movwf	___lldiv@divisor+2
 10533  034E  160A  158A  2000  120A  118A  	fcall	stringdir
 10534  0353  00F5               	movwf	___lldiv@divisor+3
 10535  0354  1683               	bsf	3,5	;RP0=1, select bank1
 10536  0355  1303               	bcf	3,6	;RP1=0, select bank1
 10537  0356  083D               	movf	(sprintf@val+3)^(0+128),w
 10538  0357  00F9               	movwf	___lldiv@dividend+3
 10539  0358  083C               	movf	(sprintf@val+2)^(0+128),w
 10540  0359  00F8               	movwf	___lldiv@dividend+2
 10541  035A  083B               	movf	(sprintf@val+1)^(0+128),w
 10542  035B  00F7               	movwf	___lldiv@dividend+1
 10543  035C  083A               	movf	sprintf@val^(0+128),w
 10544  035D  00F6               	movwf	___lldiv@dividend
 10545  035E  160A  158A  25BC  120A  118A  	fcall	___lldiv
 10546  0363  0875               	movf	?___lldiv+3,w
 10547  0364  1683               	bsf	3,5	;RP0=1, select bank1
 10548  0365  1303               	bcf	3,6	;RP1=0, select bank1
 10549  0366  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
 10550  0367  0874               	movf	?___lldiv+2,w
 10551  0368  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
 10552  0369  0873               	movf	?___lldiv+1,w
 10553  036A  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
 10554  036B  0872               	movf	?___lldiv,w
 10555  036C  00BE               	movwf	sprintf@tmpval^(0+128)
 10556  036D                     l3912:
 10557                           
 10558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10559  036D  3000               	movlw	0
 10560  036E  00F5               	movwf	___llmod@divisor+3
 10561  036F  3000               	movlw	0
 10562  0370  00F4               	movwf	___llmod@divisor+2
 10563  0371  3000               	movlw	0
 10564  0372  00F3               	movwf	___llmod@divisor+1
 10565  0373  300A               	movlw	10
 10566  0374  00F2               	movwf	___llmod@divisor
 10567  0375  0841               	movf	(sprintf@tmpval+3)^(0+128),w
 10568  0376  00F9               	movwf	___llmod@dividend+3
 10569  0377  0840               	movf	(sprintf@tmpval+2)^(0+128),w
 10570  0378  00F8               	movwf	___llmod@dividend+2
 10571  0379  083F               	movf	(sprintf@tmpval+1)^(0+128),w
 10572  037A  00F7               	movwf	___llmod@dividend+1
 10573  037B  083E               	movf	sprintf@tmpval^(0+128),w
 10574  037C  00F6               	movwf	___llmod@dividend
 10575  037D  160A  158A  250D  120A  118A  	fcall	___llmod
 10576  0382  0875               	movf	?___llmod+3,w
 10577  0383  1683               	bsf	3,5	;RP0=1, select bank1
 10578  0384  1303               	bcf	3,6	;RP1=0, select bank1
 10579  0385  00C1               	movwf	(sprintf@tmpval+3)^(0+128)
 10580  0386  0874               	movf	?___llmod+2,w
 10581  0387  00C0               	movwf	(sprintf@tmpval+2)^(0+128)
 10582  0388  0873               	movf	?___llmod+1,w
 10583  0389  00BF               	movwf	(sprintf@tmpval+1)^(0+128)
 10584  038A  0872               	movf	?___llmod,w
 10585  038B  00BE               	movwf	sprintf@tmpval^(0+128)
 10586  038C                     l3914:
 10587                           
 10588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10589  038C  083E               	movf	sprintf@tmpval^(0+128),w
 10590  038D  3E30               	addlw	48
 10591  038E  1283               	bcf	3,5	;RP0=0, select bank0
 10592  038F  1303               	bcf	3,6	;RP1=0, select bank0
 10593  0390  00EA               	movwf	??_sprintf
 10594  0391  1683               	bsf	3,5	;RP0=1, select bank1
 10595  0392  1303               	bcf	3,6	;RP1=0, select bank1
 10596  0393  084E               	movf	sprintf@sp^(0+128),w
 10597  0394  0084               	movwf	4
 10598  0395  1283               	bcf	3,5	;RP0=0, select bank0
 10599  0396  1303               	bcf	3,6	;RP1=0, select bank0
 10600  0397  086A               	movf	??_sprintf,w
 10601  0398  1383               	bcf	3,7	;select IRP bank0
 10602  0399  0080               	movwf	0
 10603  039A  3001               	movlw	1
 10604  039B  00EA               	movwf	??_sprintf
 10605  039C  086A               	movf	??_sprintf,w
 10606  039D  1683               	bsf	3,5	;RP0=1, select bank1
 10607  039E  1303               	bcf	3,6	;RP1=0, select bank1
 10608  039F  07CE               	addwf	sprintf@sp^(0+128),f
 10609  03A0                     l3916:
 10610                           
 10611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10612  03A0  084F               	movf	sprintf@c^(0+128),w
 10613  03A1  1283               	bcf	3,5	;RP0=0, select bank0
 10614  03A2  1303               	bcf	3,6	;RP1=0, select bank0
 10615  03A3  00EA               	movwf	??_sprintf
 10616  03A4  3001               	movlw	1
 10617  03A5                     u6345:
 10618  03A5  1003               	clrc
 10619  03A6  0DEA               	rlf	??_sprintf,f
 10620  03A7  3EFF               	addlw	-1
 10621  03A8  1D03               	skipz
 10622  03A9  2BA5               	goto	u6345
 10623  03AA  1003               	clrc
 10624  03AB  0D6A               	rlf	??_sprintf,w
 10625  03AC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10626  03AD  0084               	movwf	4
 10627  03AE  160A  158A  2000  120A  118A  	fcall	stringdir
 10628  03B3  00F2               	movwf	___llmod@divisor
 10629  03B4  160A  158A  2000  120A  118A  	fcall	stringdir
 10630  03B9  00F3               	movwf	___llmod@divisor+1
 10631  03BA  160A  158A  2000  120A  118A  	fcall	stringdir
 10632  03BF  00F4               	movwf	___llmod@divisor+2
 10633  03C0  160A  158A  2000  120A  118A  	fcall	stringdir
 10634  03C5  00F5               	movwf	___llmod@divisor+3
 10635  03C6  1683               	bsf	3,5	;RP0=1, select bank1
 10636  03C7  1303               	bcf	3,6	;RP1=0, select bank1
 10637  03C8  083D               	movf	(sprintf@val+3)^(0+128),w
 10638  03C9  00F9               	movwf	___llmod@dividend+3
 10639  03CA  083C               	movf	(sprintf@val+2)^(0+128),w
 10640  03CB  00F8               	movwf	___llmod@dividend+2
 10641  03CC  083B               	movf	(sprintf@val+1)^(0+128),w
 10642  03CD  00F7               	movwf	___llmod@dividend+1
 10643  03CE  083A               	movf	sprintf@val^(0+128),w
 10644  03CF  00F6               	movwf	___llmod@dividend
 10645  03D0  160A  158A  250D  120A  118A  	fcall	___llmod
 10646  03D5  0875               	movf	?___llmod+3,w
 10647  03D6  1683               	bsf	3,5	;RP0=1, select bank1
 10648  03D7  1303               	bcf	3,6	;RP1=0, select bank1
 10649  03D8  00BD               	movwf	(sprintf@val+3)^(0+128)
 10650  03D9  0874               	movf	?___llmod+2,w
 10651  03DA  00BC               	movwf	(sprintf@val+2)^(0+128)
 10652  03DB  0873               	movf	?___llmod+1,w
 10653  03DC  00BB               	movwf	(sprintf@val+1)^(0+128)
 10654  03DD  0872               	movf	?___llmod,w
 10655  03DE  00BA               	movwf	sprintf@val^(0+128)
 10656  03DF                     l3918:
 10657                           
 10658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10659  03DF  3001               	movlw	1
 10660  03E0  02CF               	subwf	sprintf@c^(0+128),f
 10661  03E1  0A4F               	incf	sprintf@c^(0+128),w
 10662  03E2  1D03               	btfss	3,2
 10663  03E3  2BE5               	goto	u6351
 10664  03E4  2BE6               	goto	u6350
 10665  03E5                     u6351:
 10666  03E5  2B2E               	goto	l3910
 10667  03E6                     u6350:
 10668  03E6  2C00               	goto	l3926
 10669  03E7                     l3920:
 10670                           
 10671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10672  03E7  3030               	movlw	48
 10673  03E8  1283               	bcf	3,5	;RP0=0, select bank0
 10674  03E9  1303               	bcf	3,6	;RP1=0, select bank0
 10675  03EA  00EA               	movwf	??_sprintf
 10676  03EB  1683               	bsf	3,5	;RP0=1, select bank1
 10677  03EC  1303               	bcf	3,6	;RP1=0, select bank1
 10678  03ED  084E               	movf	sprintf@sp^(0+128),w
 10679  03EE  0084               	movwf	4
 10680  03EF  1283               	bcf	3,5	;RP0=0, select bank0
 10681  03F0  1303               	bcf	3,6	;RP1=0, select bank0
 10682  03F1  086A               	movf	??_sprintf,w
 10683  03F2  1383               	bcf	3,7	;select IRP bank0
 10684  03F3  0080               	movwf	0
 10685  03F4                     l3922:
 10686  03F4  3001               	movlw	1
 10687  03F5  00EA               	movwf	??_sprintf
 10688  03F6  086A               	movf	??_sprintf,w
 10689  03F7  1683               	bsf	3,5	;RP0=1, select bank1
 10690  03F8  1303               	bcf	3,6	;RP1=0, select bank1
 10691  03F9  07CE               	addwf	sprintf@sp^(0+128),f
 10692  03FA                     l3924:
 10693                           
 10694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10695  03FA  30FF               	movlw	255
 10696  03FB  07CC               	addwf	sprintf@prec^(0+128),f
 10697  03FC  1803               	skipnc
 10698  03FD  0ACD               	incf	(sprintf@prec+1)^(0+128),f
 10699  03FE  30FF               	movlw	255
 10700  03FF  07CD               	addwf	(sprintf@prec+1)^(0+128),f
 10701  0400                     l3926:
 10702                           
 10703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10704  0400  084C               	movf	sprintf@prec^(0+128),w
 10705  0401  044D               	iorwf	(sprintf@prec+1)^(0+128),w
 10706  0402  1D03               	btfss	3,2
 10707  0403  2C05               	goto	u6361
 10708  0404  2C06               	goto	u6360
 10709  0405                     u6361:
 10710  0405  2BE7               	goto	l3920
 10711  0406                     u6360:
 10712  0406  2D59               	goto	l3990
 10713  0407                     l3928:
 10714                           
 10715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10716  0407  1683               	bsf	3,5	;RP0=1, select bank1
 10717  0408  1303               	bcf	3,6	;RP1=0, select bank1
 10718  0409  084C               	movf	sprintf@prec^(0+128),w
 10719  040A  044D               	iorwf	(sprintf@prec+1)^(0+128),w
 10720  040B  1D03               	btfss	3,2
 10721  040C  2C0E               	goto	u6371
 10722  040D  2C0F               	goto	u6370
 10723  040E                     u6371:
 10724  040E  2C1D               	goto	l370
 10725  040F                     u6370:
 10726  040F                     l3930:
 10727  040F  083D               	movf	(sprintf@val+3)^(0+128),w
 10728  0410  043C               	iorwf	(sprintf@val+2)^(0+128),w
 10729  0411  043B               	iorwf	(sprintf@val+1)^(0+128),w
 10730  0412  043A               	iorwf	sprintf@val^(0+128),w
 10731  0413  1D03               	skipz
 10732  0414  2C16               	goto	u6381
 10733  0415  2C17               	goto	u6380
 10734  0416                     u6381:
 10735  0416  2C1D               	goto	l370
 10736  0417                     u6380:
 10737  0417                     l3932:
 10738                           
 10739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10740  0417  3001               	movlw	1
 10741  0418  07CC               	addwf	sprintf@prec^(0+128),f
 10742  0419  1803               	skipnc
 10743  041A  0ACD               	incf	(sprintf@prec+1)^(0+128),f
 10744  041B  3000               	movlw	0
 10745  041C  07CD               	addwf	(sprintf@prec+1)^(0+128),f
 10746  041D                     l370:
 10747                           
 10748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10749  041D  084D               	movf	(sprintf@prec+1)^(0+128),w
 10750  041E  3A80               	xorlw	128
 10751  041F  3C80               	sublw	128
 10752  0420  1D03               	skipz
 10753  0421  2C24               	goto	u6395
 10754  0422  084C               	movf	sprintf@prec^(0+128),w
 10755  0423  024F               	subwf	sprintf@c^(0+128),w
 10756  0424                     u6395:
 10757  0424  1803               	skipnc
 10758  0425  2C27               	goto	u6391
 10759  0426  2C28               	goto	u6390
 10760  0427                     u6391:
 10761  0427  2C33               	goto	l3936
 10762  0428                     u6390:
 10763  0428                     l3934:
 10764                           
 10765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10766  0428  1683               	bsf	3,5	;RP0=1, select bank1
 10767  0429  1303               	bcf	3,6	;RP1=0, select bank1
 10768  042A  084C               	movf	sprintf@prec^(0+128),w
 10769  042B  1283               	bcf	3,5	;RP0=0, select bank0
 10770  042C  1303               	bcf	3,6	;RP1=0, select bank0
 10771  042D  00EA               	movwf	??_sprintf
 10772  042E  086A               	movf	??_sprintf,w
 10773  042F  1683               	bsf	3,5	;RP0=1, select bank1
 10774  0430  1303               	bcf	3,6	;RP1=0, select bank1
 10775  0431  00CF               	movwf	sprintf@c^(0+128)
 10776  0432  2C57               	goto	l3940
 10777  0433                     l3936:
 10778  0433  1683               	bsf	3,5	;RP0=1, select bank1
 10779  0434  1303               	bcf	3,6	;RP1=0, select bank1
 10780  0435  084D               	movf	(sprintf@prec+1)^(0+128),w
 10781  0436  3A80               	xorlw	128
 10782  0437  1283               	bcf	3,5	;RP0=0, select bank0
 10783  0438  1303               	bcf	3,6	;RP1=0, select bank0
 10784  0439  00EA               	movwf	??_sprintf
 10785  043A  3080               	movlw	128
 10786  043B  026A               	subwf	??_sprintf,w
 10787  043C  1D03               	skipz
 10788  043D  2C42               	goto	u6405
 10789  043E  1683               	bsf	3,5	;RP0=1, select bank1
 10790  043F  1303               	bcf	3,6	;RP1=0, select bank1
 10791  0440  084F               	movf	sprintf@c^(0+128),w
 10792  0441  024C               	subwf	sprintf@prec^(0+128),w
 10793  0442                     u6405:
 10794  0442  1803               	skipnc
 10795  0443  2C45               	goto	u6401
 10796  0444  2C46               	goto	u6400
 10797  0445                     u6401:
 10798  0445  2C57               	goto	l3940
 10799  0446                     u6400:
 10800  0446                     l3938:
 10801                           
 10802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10803  0446  1683               	bsf	3,5	;RP0=1, select bank1
 10804  0447  1303               	bcf	3,6	;RP1=0, select bank1
 10805  0448  084F               	movf	sprintf@c^(0+128),w
 10806  0449  1283               	bcf	3,5	;RP0=0, select bank0
 10807  044A  1303               	bcf	3,6	;RP1=0, select bank0
 10808  044B  00EA               	movwf	??_sprintf
 10809  044C  01EB               	clrf	??_sprintf+1
 10810  044D  086A               	movf	??_sprintf,w
 10811  044E  1683               	bsf	3,5	;RP0=1, select bank1
 10812  044F  1303               	bcf	3,6	;RP1=0, select bank1
 10813  0450  00CC               	movwf	sprintf@prec^(0+128)
 10814  0451  1283               	bcf	3,5	;RP0=0, select bank0
 10815  0452  1303               	bcf	3,6	;RP1=0, select bank0
 10816  0453  086B               	movf	??_sprintf+1,w
 10817  0454  1683               	bsf	3,5	;RP0=1, select bank1
 10818  0455  1303               	bcf	3,6	;RP1=0, select bank1
 10819  0456  00CD               	movwf	(sprintf@prec+1)^(0+128)
 10820  0457                     l3940:
 10821                           
 10822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10823  0457  1683               	bsf	3,5	;RP0=1, select bank1
 10824  0458  1303               	bcf	3,6	;RP1=0, select bank1
 10825  0459  0846               	movf	sprintf@width^(0+128),w
 10826  045A  0447               	iorwf	(sprintf@width+1)^(0+128),w
 10827  045B  1903               	btfsc	3,2
 10828  045C  2C5E               	goto	u6411
 10829  045D  2C5F               	goto	u6410
 10830  045E                     u6411:
 10831  045E  2C79               	goto	l3946
 10832  045F                     u6410:
 10833  045F                     l3942:
 10834  045F  3003               	movlw	3
 10835  0460  0544               	andwf	sprintf@flag^(0+128),w
 10836  0461  1283               	bcf	3,5	;RP0=0, select bank0
 10837  0462  1303               	bcf	3,6	;RP1=0, select bank0
 10838  0463  00EA               	movwf	??_sprintf
 10839  0464  3000               	movlw	0
 10840  0465  1683               	bsf	3,5	;RP0=1, select bank1
 10841  0466  1303               	bcf	3,6	;RP1=0, select bank1
 10842  0467  0545               	andwf	(sprintf@flag+1)^(0+128),w
 10843  0468  1283               	bcf	3,5	;RP0=0, select bank0
 10844  0469  1303               	bcf	3,6	;RP1=0, select bank0
 10845  046A  00EB               	movwf	??_sprintf+1
 10846  046B  086A               	movf	??_sprintf,w
 10847  046C  046B               	iorwf	??_sprintf+1,w
 10848  046D  1903               	btfsc	3,2
 10849  046E  2C70               	goto	u6421
 10850  046F  2C71               	goto	u6420
 10851  0470                     u6421:
 10852  0470  2C79               	goto	l3946
 10853  0471                     u6420:
 10854  0471                     l3944:
 10855                           
 10856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10857  0471  30FF               	movlw	255
 10858  0472  1683               	bsf	3,5	;RP0=1, select bank1
 10859  0473  1303               	bcf	3,6	;RP1=0, select bank1
 10860  0474  07C6               	addwf	sprintf@width^(0+128),f
 10861  0475  1803               	skipnc
 10862  0476  0AC7               	incf	(sprintf@width+1)^(0+128),f
 10863  0477  30FF               	movlw	255
 10864  0478  07C7               	addwf	(sprintf@width+1)^(0+128),f
 10865  0479                     l3946:
 10866                           
 10867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10868  0479  1683               	bsf	3,5	;RP0=1, select bank1
 10869  047A  1303               	bcf	3,6	;RP1=0, select bank1
 10870  047B  1F45               	btfss	(sprintf@flag+1)^(0+128),6
 10871  047C  2C7E               	goto	u6431
 10872  047D  2C7F               	goto	u6430
 10873  047E                     u6431:
 10874  047E  2CA2               	goto	l3954
 10875  047F                     u6430:
 10876  047F                     l3948:
 10877                           
 10878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10879  047F  084D               	movf	(sprintf@prec+1)^(0+128),w
 10880  0480  3A80               	xorlw	128
 10881  0481  1283               	bcf	3,5	;RP0=0, select bank0
 10882  0482  1303               	bcf	3,6	;RP1=0, select bank0
 10883  0483  00EA               	movwf	??_sprintf
 10884  0484  1683               	bsf	3,5	;RP0=1, select bank1
 10885  0485  1303               	bcf	3,6	;RP1=0, select bank1
 10886  0486  0847               	movf	(sprintf@width+1)^(0+128),w
 10887  0487  3A80               	xorlw	128
 10888  0488  1283               	bcf	3,5	;RP0=0, select bank0
 10889  0489  1303               	bcf	3,6	;RP1=0, select bank0
 10890  048A  026A               	subwf	??_sprintf,w
 10891  048B  1D03               	skipz
 10892  048C  2C91               	goto	u6445
 10893  048D  1683               	bsf	3,5	;RP0=1, select bank1
 10894  048E  1303               	bcf	3,6	;RP1=0, select bank1
 10895  048F  0846               	movf	sprintf@width^(0+128),w
 10896  0490  024C               	subwf	sprintf@prec^(0+128),w
 10897  0491                     u6445:
 10898  0491  1803               	skipnc
 10899  0492  2C94               	goto	u6441
 10900  0493  2C95               	goto	u6440
 10901  0494                     u6441:
 10902  0494  2C9E               	goto	l3952
 10903  0495                     u6440:
 10904  0495                     l3950:
 10905                           
 10906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10907  0495  1683               	bsf	3,5	;RP0=1, select bank1
 10908  0496  1303               	bcf	3,6	;RP1=0, select bank1
 10909  0497  084C               	movf	sprintf@prec^(0+128),w
 10910  0498  02C6               	subwf	sprintf@width^(0+128),f
 10911  0499  084D               	movf	(sprintf@prec+1)^(0+128),w
 10912  049A  1C03               	skipc
 10913  049B  03C7               	decf	(sprintf@width+1)^(0+128),f
 10914  049C  02C7               	subwf	(sprintf@width+1)^(0+128),f
 10915  049D  2CA2               	goto	l3954
 10916  049E                     l3952:
 10917                           
 10918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10919  049E  1683               	bsf	3,5	;RP0=1, select bank1
 10920  049F  1303               	bcf	3,6	;RP1=0, select bank1
 10921  04A0  01C6               	clrf	sprintf@width^(0+128)
 10922  04A1  01C7               	clrf	(sprintf@width+1)^(0+128)
 10923  04A2                     l3954:
 10924                           
 10925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10926  04A2  0847               	movf	(sprintf@width+1)^(0+128),w
 10927  04A3  3A80               	xorlw	128
 10928  04A4  3C80               	sublw	128
 10929  04A5  1D03               	skipz
 10930  04A6  2CA9               	goto	u6455
 10931  04A7  0846               	movf	sprintf@width^(0+128),w
 10932  04A8  024F               	subwf	sprintf@c^(0+128),w
 10933  04A9                     u6455:
 10934  04A9  1803               	skipnc
 10935  04AA  2CAC               	goto	u6451
 10936  04AB  2CAD               	goto	u6450
 10937  04AC                     u6451:
 10938  04AC  2CC1               	goto	l3958
 10939  04AD                     u6450:
 10940  04AD                     l3956:
 10941                           
 10942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10943  04AD  1683               	bsf	3,5	;RP0=1, select bank1
 10944  04AE  1303               	bcf	3,6	;RP1=0, select bank1
 10945  04AF  084F               	movf	sprintf@c^(0+128),w
 10946  04B0  1283               	bcf	3,5	;RP0=0, select bank0
 10947  04B1  1303               	bcf	3,6	;RP1=0, select bank0
 10948  04B2  00EA               	movwf	??_sprintf
 10949  04B3  01EB               	clrf	??_sprintf+1
 10950  04B4  086A               	movf	??_sprintf,w
 10951  04B5  1683               	bsf	3,5	;RP0=1, select bank1
 10952  04B6  1303               	bcf	3,6	;RP1=0, select bank1
 10953  04B7  02C6               	subwf	sprintf@width^(0+128),f
 10954  04B8  1283               	bcf	3,5	;RP0=0, select bank0
 10955  04B9  1303               	bcf	3,6	;RP1=0, select bank0
 10956  04BA  086B               	movf	??_sprintf+1,w
 10957  04BB  1683               	bsf	3,5	;RP0=1, select bank1
 10958  04BC  1303               	bcf	3,6	;RP1=0, select bank1
 10959  04BD  1C03               	skipc
 10960  04BE  03C7               	decf	(sprintf@width+1)^(0+128),f
 10961  04BF  02C7               	subwf	(sprintf@width+1)^(0+128),f
 10962  04C0  2CC5               	goto	l3960
 10963  04C1                     l3958:
 10964                           
 10965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10966  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 10967  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 10968  04C3  01C6               	clrf	sprintf@width^(0+128)
 10969  04C4  01C7               	clrf	(sprintf@width+1)^(0+128)
 10970  04C5                     l3960:
 10971                           
 10972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
 10973  04C5  1D44               	btfss	sprintf@flag^(0+128),2
 10974  04C6  2CC8               	goto	u6461
 10975  04C7  2CC9               	goto	u6460
 10976  04C8                     u6461:
 10977  04C8  2D14               	goto	l3976
 10978  04C9                     u6460:
 10979  04C9                     l3962:
 10980                           
 10981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
 10982  04C9  3003               	movlw	3
 10983  04CA  0544               	andwf	sprintf@flag^(0+128),w
 10984  04CB  1283               	bcf	3,5	;RP0=0, select bank0
 10985  04CC  1303               	bcf	3,6	;RP1=0, select bank0
 10986  04CD  00EA               	movwf	??_sprintf
 10987  04CE  3000               	movlw	0
 10988  04CF  1683               	bsf	3,5	;RP0=1, select bank1
 10989  04D0  1303               	bcf	3,6	;RP1=0, select bank1
 10990  04D1  0545               	andwf	(sprintf@flag+1)^(0+128),w
 10991  04D2  1283               	bcf	3,5	;RP0=0, select bank0
 10992  04D3  1303               	bcf	3,6	;RP1=0, select bank0
 10993  04D4  00EB               	movwf	??_sprintf+1
 10994  04D5  086A               	movf	??_sprintf,w
 10995  04D6  046B               	iorwf	??_sprintf+1,w
 10996  04D7  1903               	btfsc	3,2
 10997  04D8  2CDA               	goto	u6471
 10998  04D9  2CDB               	goto	u6470
 10999  04DA                     u6471:
 11000  04DA  2CEC               	goto	l3968
 11001  04DB                     u6470:
 11002  04DB                     l3964:
 11003                           
 11004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
 11005  04DB  302D               	movlw	45
 11006  04DC  00EA               	movwf	??_sprintf
 11007  04DD  1683               	bsf	3,5	;RP0=1, select bank1
 11008  04DE  1303               	bcf	3,6	;RP1=0, select bank1
 11009  04DF  084E               	movf	sprintf@sp^(0+128),w
 11010  04E0  0084               	movwf	4
 11011  04E1  1283               	bcf	3,5	;RP0=0, select bank0
 11012  04E2  1303               	bcf	3,6	;RP1=0, select bank0
 11013  04E3  086A               	movf	??_sprintf,w
 11014  04E4  1383               	bcf	3,7	;select IRP bank0
 11015  04E5  0080               	movwf	0
 11016  04E6                     l3966:
 11017  04E6  3001               	movlw	1
 11018  04E7  00EA               	movwf	??_sprintf
 11019  04E8  086A               	movf	??_sprintf,w
 11020  04E9  1683               	bsf	3,5	;RP0=1, select bank1
 11021  04EA  1303               	bcf	3,6	;RP1=0, select bank1
 11022  04EB  07CE               	addwf	sprintf@sp^(0+128),f
 11023  04EC                     l3968:
 11024                           
 11025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
 11026  04EC  1683               	bsf	3,5	;RP0=1, select bank1
 11027  04ED  1303               	bcf	3,6	;RP1=0, select bank1
 11028  04EE  0846               	movf	sprintf@width^(0+128),w
 11029  04EF  0447               	iorwf	(sprintf@width+1)^(0+128),w
 11030  04F0  1903               	btfsc	3,2
 11031  04F1  2CF3               	goto	u6481
 11032  04F2  2CF4               	goto	u6480
 11033  04F3                     u6481:
 11034  04F3  2D59               	goto	l3990
 11035  04F4                     u6480:
 11036  04F4                     l3970:
 11037                           
 11038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
 11039  04F4  3030               	movlw	48
 11040  04F5  1283               	bcf	3,5	;RP0=0, select bank0
 11041  04F6  1303               	bcf	3,6	;RP1=0, select bank0
 11042  04F7  00EA               	movwf	??_sprintf
 11043  04F8  1683               	bsf	3,5	;RP0=1, select bank1
 11044  04F9  1303               	bcf	3,6	;RP1=0, select bank1
 11045  04FA  084E               	movf	sprintf@sp^(0+128),w
 11046  04FB  0084               	movwf	4
 11047  04FC  1283               	bcf	3,5	;RP0=0, select bank0
 11048  04FD  1303               	bcf	3,6	;RP1=0, select bank0
 11049  04FE  086A               	movf	??_sprintf,w
 11050  04FF  1383               	bcf	3,7	;select IRP bank0
 11051  0500  0080               	movwf	0
 11052  0501                     l3972:
 11053  0501  3001               	movlw	1
 11054  0502  00EA               	movwf	??_sprintf
 11055  0503  086A               	movf	??_sprintf,w
 11056  0504  1683               	bsf	3,5	;RP0=1, select bank1
 11057  0505  1303               	bcf	3,6	;RP1=0, select bank1
 11058  0506  07CE               	addwf	sprintf@sp^(0+128),f
 11059  0507                     l3974:
 11060  0507  30FF               	movlw	255
 11061  0508  07C6               	addwf	sprintf@width^(0+128),f
 11062  0509  1803               	skipnc
 11063  050A  0AC7               	incf	(sprintf@width+1)^(0+128),f
 11064  050B  30FF               	movlw	255
 11065  050C  07C7               	addwf	(sprintf@width+1)^(0+128),f
 11066  050D  0846               	movf	sprintf@width^(0+128),w
 11067  050E  0447               	iorwf	(sprintf@width+1)^(0+128),w
 11068  050F  1D03               	btfss	3,2
 11069  0510  2D12               	goto	u6491
 11070  0511  2D13               	goto	u6490
 11071  0512                     u6491:
 11072  0512  2CF4               	goto	l3970
 11073  0513                     u6490:
 11074  0513  2D59               	goto	l3990
 11075  0514                     l3976:
 11076                           
 11077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11078  0514  0846               	movf	sprintf@width^(0+128),w
 11079  0515  0447               	iorwf	(sprintf@width+1)^(0+128),w
 11080  0516  1903               	btfsc	3,2
 11081  0517  2D19               	goto	u6501
 11082  0518  2D1A               	goto	u6500
 11083  0519                     u6501:
 11084  0519  2D39               	goto	l3984
 11085  051A                     u6500:
 11086  051A                     l3978:
 11087                           
 11088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11089  051A  3020               	movlw	32
 11090  051B  1283               	bcf	3,5	;RP0=0, select bank0
 11091  051C  1303               	bcf	3,6	;RP1=0, select bank0
 11092  051D  00EA               	movwf	??_sprintf
 11093  051E  1683               	bsf	3,5	;RP0=1, select bank1
 11094  051F  1303               	bcf	3,6	;RP1=0, select bank1
 11095  0520  084E               	movf	sprintf@sp^(0+128),w
 11096  0521  0084               	movwf	4
 11097  0522  1283               	bcf	3,5	;RP0=0, select bank0
 11098  0523  1303               	bcf	3,6	;RP1=0, select bank0
 11099  0524  086A               	movf	??_sprintf,w
 11100  0525  1383               	bcf	3,7	;select IRP bank0
 11101  0526  0080               	movwf	0
 11102  0527                     l3980:
 11103  0527  3001               	movlw	1
 11104  0528  00EA               	movwf	??_sprintf
 11105  0529  086A               	movf	??_sprintf,w
 11106  052A  1683               	bsf	3,5	;RP0=1, select bank1
 11107  052B  1303               	bcf	3,6	;RP1=0, select bank1
 11108  052C  07CE               	addwf	sprintf@sp^(0+128),f
 11109  052D                     l3982:
 11110  052D  30FF               	movlw	255
 11111  052E  07C6               	addwf	sprintf@width^(0+128),f
 11112  052F  1803               	skipnc
 11113  0530  0AC7               	incf	(sprintf@width+1)^(0+128),f
 11114  0531  30FF               	movlw	255
 11115  0532  07C7               	addwf	(sprintf@width+1)^(0+128),f
 11116  0533  0846               	movf	sprintf@width^(0+128),w
 11117  0534  0447               	iorwf	(sprintf@width+1)^(0+128),w
 11118  0535  1D03               	btfss	3,2
 11119  0536  2D38               	goto	u6511
 11120  0537  2D39               	goto	u6510
 11121  0538                     u6511:
 11122  0538  2D1A               	goto	l3978
 11123  0539                     u6510:
 11124  0539                     l3984:
 11125                           
 11126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11127  0539  3003               	movlw	3
 11128  053A  0544               	andwf	sprintf@flag^(0+128),w
 11129  053B  1283               	bcf	3,5	;RP0=0, select bank0
 11130  053C  1303               	bcf	3,6	;RP1=0, select bank0
 11131  053D  00EA               	movwf	??_sprintf
 11132  053E  3000               	movlw	0
 11133  053F  1683               	bsf	3,5	;RP0=1, select bank1
 11134  0540  1303               	bcf	3,6	;RP1=0, select bank1
 11135  0541  0545               	andwf	(sprintf@flag+1)^(0+128),w
 11136  0542  1283               	bcf	3,5	;RP0=0, select bank0
 11137  0543  1303               	bcf	3,6	;RP1=0, select bank0
 11138  0544  00EB               	movwf	??_sprintf+1
 11139  0545  086A               	movf	??_sprintf,w
 11140  0546  046B               	iorwf	??_sprintf+1,w
 11141  0547  1903               	btfsc	3,2
 11142  0548  2D4A               	goto	u6521
 11143  0549  2D4B               	goto	u6520
 11144  054A                     u6521:
 11145  054A  2D59               	goto	l3990
 11146  054B                     u6520:
 11147  054B                     l3986:
 11148                           
 11149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11150  054B  302D               	movlw	45
 11151  054C  00EA               	movwf	??_sprintf
 11152  054D  1683               	bsf	3,5	;RP0=1, select bank1
 11153  054E  1303               	bcf	3,6	;RP1=0, select bank1
 11154  054F  084E               	movf	sprintf@sp^(0+128),w
 11155  0550  0084               	movwf	4
 11156  0551  1283               	bcf	3,5	;RP0=0, select bank0
 11157  0552  1303               	bcf	3,6	;RP1=0, select bank0
 11158  0553  086A               	movf	??_sprintf,w
 11159  0554  1383               	bcf	3,7	;select IRP bank0
 11160  0555  0080               	movwf	0
 11161  0556  120A  158A  284B   	goto	l3708
 11162  0559                     l3990:
 11163                           
 11164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11165  0559  3001               	movlw	1
 11166  055A  1683               	bsf	3,5	;RP0=1, select bank1
 11167  055B  1303               	bcf	3,6	;RP1=0, select bank1
 11168  055C  07A8               	addwf	sprintf@f^(0+128),f
 11169  055D  30FF               	movlw	-1
 11170  055E  0728               	addwf	sprintf@f^(0+128),w
 11171  055F  0084               	movwf	4
 11172  0560  160A  158A  2000  120A  118A  	fcall	stringdir
 11173  0565  1283               	bcf	3,5	;RP0=0, select bank0
 11174  0566  1303               	bcf	3,6	;RP1=0, select bank0
 11175  0567  00EA               	movwf	??_sprintf
 11176  0568  086A               	movf	??_sprintf,w
 11177  0569  1683               	bsf	3,5	;RP0=1, select bank1
 11178  056A  1303               	bcf	3,6	;RP1=0, select bank1
 11179  056B  00CF               	movwf	sprintf@c^(0+128)
 11180  056C  084F               	movf	sprintf@c^(0+128),w
 11181  056D  1D03               	btfss	3,2
 11182  056E  2D70               	goto	u6531
 11183  056F  2D73               	goto	u6530
 11184  0570                     u6531:
 11185  0570  120A  158A  2838   	goto	l3704
 11186  0573                     u6530:
 11187  0573                     l3992:
 11188                           
 11189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11190  0573  1683               	bsf	3,5	;RP0=1, select bank1
 11191  0574  1303               	bcf	3,6	;RP1=0, select bank1
 11192  0575  084E               	movf	sprintf@sp^(0+128),w
 11193  0576  0084               	movwf	4
 11194  0577  1383               	bcf	3,7	;select IRP bank0
 11195  0578  0180               	clrf	0
 11196  0579                     l391:
 11197  0579  0008               	return
 11198  057A                     __end_of_sprintf:

Data Sizes:
    Strings     19
    Constant    144
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     79      79
    BANK1            80     51      77
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    _I2C_Master_Init->___lldiv
    _send_crct->_send_char
    _conv->___xxtofl

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _conv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34870
                                             48 BANK1      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _cfg_clk
                          _cfg_usart
                               _conv
                          _send_crct
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    37     13   33271
                                             74 BANK0      5     5      0
                                              8 BANK1     40    27     13
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6139
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              3 COMMON     4     4      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4     519
                                              6 BANK0     13     9      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _cfg_clk
   _cfg_usart
   _conv
     ___xxtofl
   _send_crct
     _send_char
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     33      4D       7       96.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Sep 01 18:21:00 2021

                        pc 0002                         l32 07F0                         l50 1BAC  
                       l35 07FC                         l51 1BAF                         l52 1BB4  
                       l44 1AB1                         l29 1BEC                         l38 1AA8  
                       l47 1ABB                         _f1 00E2               ___awdiv@sign 0025  
                       _v0 00DB                         _v1 00D7                         _v2 00D3  
                       _pd 00EC                         fsr 0004        ___wmul@multiplicand 0074  
      __Umul8_16@word_mpld 0078                        l303 0857                        l160 1B3A  
                      l152 11AA                        l163 1A97                        l181 1AC5  
                      l166 101F                        l318 1526                        l175 1B19  
                      l431 1E23                        l169 0829                        l178 1ABD  
                      l290 0FFF                        l370 041D                        l362 028C  
                      l283 0786                        l355 023A                        l612 10DC  
                      l605 1E8A                        l613 104E                        l701 1C6C  
                      l623 10CF                        l711 1C26                        l391 0579  
                      l608 1E9F                        l616 109F                        l561 1DBB  
                      l722 12FD                        l651 1D62                        l395 1B47  
                      l548 07EF                        l581 1C8B                        l397 1B5F  
                      l565 119A                        l582 1CA7                        l590 1F43  
                      l726 13A4                        l566 10FF                        l830 0C90  
                      l583 1CBC                        l743 146F                        l735 1521  
                      l728 137B                        l576 118D                        l824 0C08  
                      l753 14B5                        l569 115D                        l586 1EBE  
                      l594 100A                        l818 0C9C                        l747 1493  
                      l764 1515                        l756 14F3                        l589 1F2A  
                      l765 1521                        l837 1B74                        l862 1F68  
                      l598 1E9F                        l839 1B86                        l864 1FFF  
                      l768 1D0C                        l882 1AD7                        l875 1FC9  
                      l876 1FD5                        l868 1FAD                        _GIE 005F  
                      _isr 1AD8                        _val 007B                        fsr0 0004  
                      indf 0000               ___awmod@sign 0078               ___flmul@aexp 003A  
             ___flmul@bexp 003B               ___flmul@sign 0035               ___flmul@temp 0040  
             ___flmul@prod 003C               ___fltol@exp1 005F                       l3000 1B3D  
                     l3002 1B41                       l3020 1CBB                       l3012 1C6D  
                     l3004 1B4E                       l3014 1C83                       l3030 1EDA  
                     l3110 1CC1                       l3006 1B55                       l2310 1B7D  
                     l2302 1B61                       l3200 100B                       l3120 1F60  
                     l2320 1DD1                       l3016 1C9F                       l3040 1F42  
                     l3032 1EDE                       l3024 1EA0                       l3008 1B5B  
                     l2312 1B82                       l2304 1B63                       l2400 1D81  
                     l3210 101B                       l3202 1012                       l3130 1F8B  
                     l3122 1F70                       l3114 1F47                       l2330 1E0B  
                     l2322 1DDE                       l3018 1CB9                       l3034 1F02  
                     l3026 1EB6                       l2306 1B6A                       l2410 1DA0  
                     l2402 1D88                       l4010 11CB                       l3212 101C  
                     l3204 1016                       l3140 1FBF                       l3132 1F92  
                     l3116 1F4C                       l2332 1E0C                       l2324 1DE2  
                     l2316 1DBC                       l3036 1F06                       l3028 1ED2  
                     l3044 1000                       l2500 12DF                       l3108 1CBD  
                     l3060 1E4F                       l3052 1E24                       l2308 1B6E  
                     l2340 0787                       l2412 1DA7                       l2404 1D8C  
                     l4100 1542                       l4020 122A                       l4012 11DA  
                     l3206 1017                       l3150 1FF2                       l3142 1FC3  
                     l3134 1F96                       l3126 1F79                       l3118 1F50  
                     l3214 0804                       l2334 1E15                       l2326 1DEB  
                     l2318 1DCE                       l3038 1F40                       l3046 1008  
                     l2510 12F3                       l2502 12E0                       l3062 1E50  
                     l3054 1E31                       l2350 0799                       l2342 078A  
                     l2406 1D90                       l2414 1DAD                       l4030 1282  
                     l4022 1248                       l4014 11E1                       l3160 1AA5  
                     l3208 101A                       l3152 1FF6                       l3144 1FCD  
                     l3136 1FA4                       l3128 1F7E                       l3216 0821  
                     l2328 1DFD                       l2336 1E1B                       l3048 100A  
                     l2600 1452                       l2520 130F                       l2504 12E5  
                     l2512 12F5                       l3064 1E58                       l2360 07AD  
                     l2352 079E                       l2344 078E                       l2416 1DB2  
                     l2408 1D9A                       l4032 1289                       l4024 126A  
                     l4016 11EE                       l4008 119B                       l3170 1B87  
                     l3162 1AA9                       l3154 1FF7                       l3146 1FD7  
                     l3138 1FB4                       l2610 1485                       l2602 1461  
                     l2530 1323                       l2522 1313                       l2514 1303  
                     l2506 12EA                       l3082 1E7F                       l3074 1E66  
                     l3066 1E5A                       l3058 1E3A                       l2450 1BF3  
                     l2370 07D3                       l2362 07B4                       l2354 07A2  
                     l2346 0793                       l2418 1DB7                       l4034 128C  
                     l4026 1270                       l4018 120C                       l3180 1BA8  
                     l3172 1B8C                       l3164 1AAE                       l3148 1FED  
                     l2620 149C                       l2612 148E                       l2604 1477  
                     l2540 1337                       l2532 1327                       l2524 1317  
                     l2516 1307                       l2508 12F2                       l3084 1E8F  
                     l3068 1E5E                       l3076 1E78                       l2700 0996  
                     l2460 1C0F                       l2452 1BF6                       l2380 07EB  
                     l2372 07D4                       l2364 07B8                       l2356 07A4  
                     l2348 0795                       l4036 1293                       l4028 1279  
                     l3182 1BB0                       l3174 1B94                       l3158 1AA0  
                     l3166 1AB2                       l3190 1B27                       l2630 14AC  
                     l2622 14A1                       l2614 1492                       l2606 147C  
                     l2550 1348                       l2542 133B                       l2534 132B  
                     l2526 131B                       l2518 130B                       l2470 129A  
                     l3086 1E94                       l2710 09B9                       l2702 099B  
                     l2462 1C15                       l2454 1BFD                       l2374 07DB  
                     l2366 07BC                       l2358 07AA                       l2390 1D6D  
                     l3176 1B9D                       l3168 1AB7                       l3192 1B28  
                     l2640 14CD                       l2632 14B2                       l2616 1497  
                     l2624 14A3                       l2560 138E                       l2552 135F  
                     l2544 133F                       l2536 132F                       l2528 131F  
                     l2480 12B1                       l2472 12A1                       l2800 0C94  
                     l2720 0A47                       l2712 09C6                       l2704 09A0  
                     l2464 1C1C                       l2456 1C01                       l2448 1BED  
                     l2368 07CD                       l2376 07E1                       l2392 1D6F  
                     l2384 1D63                       l3178 1BA2                       l3530 1B08  
                     l2810 1BE9                       l3194 1B2B                       l3186 1B1A  
                     l2650 1505                       l2642 14D1                       l2618 149A  
                     l2626 14A7                       l2570 13AD                       l2562 138F  
                     l2554 137F                       l2546 1343                       l2538 1333  
                     l2490 12C9                       l2482 12B6                       l2474 12A7  
                     l2730 0AA9                       l2722 0A63                       l2714 09E3  
                     l2458 1C05                       l2466 1C22                       l2378 07E6  
                     l2394 1D73                       l2386 1D64                       l3196 1A90  
                     l2820 1ABD                       l3532 1B0E                       l2812 1BEA  
                     l2804 1BB5                       l3188 1B26                       l2660 151C  
                     l2652 150A                       l2644 14EF                       l2636 14BA  
                     l2628 14A8                       l2580 13D5                       l2564 1398  
                     l2556 1388                       l2548 1347                       l2492 12CE  
                     l2484 12BE                       l2476 12AB                       l2900 103C  
                     l2740 0B39                       l2732 0AC6                       l2724 0A6C  
                     l2716 09FF                       l2708 09A9                       l2396 1D78  
                     l2388 1D68                       l3198 1A96                       l2822 1AC3  
                     l3526 1AFA                       l2814 1BEB                       l2806 1BB9  
                     l2662 1520                       l2654 150B                       l2646 14F8  
                     l2638 14BF                       l2590 13EE                       l2582 13DE  
                     l2574 13B6                       l2558 138A                       l2566 139C  
                     l2494 12D4                       l2486 12BF                       l2478 12AC  
                     l2910 1064                       l2750 0BCB                       l2742 0B66  
                     l2734 0ADF                       l2726 0A7C                       l2718 0A2B  
                     l2670 094D                       l2398 1D7E                       l3710 0852  
                     l3702 082D                       l2816 07F0                       l3528 1AFD  
                     l2808 1BBC                       l2656 150F                       l2648 14FD  
                     l2584 13E0                       l2576 13CD                       l2568 13A8  
                     l2592 13F3                       l2496 12D5                       l2488 12C1  
                     l2920 1090                       l2912 1066                       l2752 0BD4  
                     l2760 0BE8                       l2744 0B8C                       l2736 0AFC  
                     l2728 0A99                       l2680 0962                       l2672 094E  
                     l2664 093C                       l3640 1C2B                       l3800 16E0  
                     l3720 0889                       l3712 085A                       l3704 0838  
                     l2818 07F6                       l2658 1511                       l2594 1409  
                     l2586 13E4                       l2578 13D1                       l2498 12DB  
                     l2922 1091                       l2914 106F                       l2906 104F  
                     l2762 0BEC                       l2754 0BD8                       l2746 0BB4  
                     l2738 0B29                       l2690 097A                       l2682 096A  
                     l2674 0953                       l2666 0943                       l3650 1C43  
                     l3642 1C31                       l2842 0CA0                       l3810 1789  
                     l3802 1727                       l3722 088D                       l3730 08D5  
                     l4098 0872                       l3706 083E                       l2596 1447  
                     l2588 13E5                       l2940 10C4                       l2932 10AB  
                     l2924 1099                       l2916 1078                       l2908 1055  
                     l2780 0C3D                       l2772 0C0D                       l2764 0BED  
                     l2756 0BD9                       l2748 0BBD                       l2692 097F  
                     l2684 096F                       l2676 0958                       l2668 0949  
                     l3652 1C54                       l3644 1C34                       l3660 1C68  
                     l2860 0E26                       l2844 0CA4                       l3900 029D  
                     l3812 17A4                       l3804 1736                       l3740 0906  
                     l3732 08E5                       l3724 08A2                       l3716 0862  
                     l3708 084B                       l2598 144D                       l2942 10D4  
                     l2926 10A3                       l2934 10BD                       l2918 1086  
                     l2790 0C74                       l2774 0C12                       l2782 0C43  
                     l2766 0BF1                       l2758 0BE2                       l2694 0984  
                     l2686 0975                       l2678 0960                       l3654 1C5A  
                     l3646 1C3B                       l3638 1C27                       l2854 0D97  
                     l2846 0CA6                       l3910 032E                       l3902 02A2  
                     l3830 0083                       l3822 17F2                       l3814 17AD  
                     l3806 1753                       l3742 0921                       l3734 08E6  
                     l3726 08BD                       l3718 0877                       l2960 1108  
                     l2952 10F3                       l2792 0C76                       l2784 0C50  
                     l2776 0C20                       l2768 0C05                       l2696 098C  
                     l2688 0979                       l3656 1C5B                       l3648 1C3F  
                     l3672 0692                       l3664 057D                       l2872 0F44  
                     l2856 0D9E                       l2848 0CAD                       l2864 0E53  
                     l3920 03E7                       l3912 036D                       l3904 02AF  
                     l3840 00CC                       l3816 17B5                       l3808 177A  
                     l3824 001D                       l3760 1568                       l3752 152A  
                     l3744 0929                       l3736 08EE                       l3728 08C5  
                     l3690 1D2B                       l3682 1D0D                       l2970 113F  
                     l2962 1119                       l2946 10DD                       l2794 0C84  
                     l2786 0C5B                       l2778 0C24                       l2698 098E  
                     l3658 1C62                       l3674 0698                       l3666 0583  
                     l2890 1AD6                       l2882 1AC7                       l2874 0F4B  
                     l2866 0E5A                       l3930 040F                       l3922 03F4  
                     l3914 038C                       l3906 02B5                       l3850 0129  
                     l3842 00DA                       l3826 0052                       l3818 17D3  
                     l3770 15B4                       l3762 1576                       l3754 154A  
                     l3738 08F1                       l3746 1522                       l3692 1D3D  
                     l3684 1D15                       l2972 114D                       l2964 111B  
                     l2948 10EA                       l2796 0C88                       l2788 0C6A  
                     l2884 1AC8                       l3940 0457                       l3932 0417  
                     l3924 03FA                       l3916 03A0                       l3908 02D3  
                     l3860 0160                       l3852 012F                       l3844 0109  
                     l3836 0085                       l3828 0081                       l3780 15F5  
                     l3772 15B8                       l3764 157E                       l3756 155E  
                     l3748 1524                       l3694 1D4B                       l3686 1D1A  
                     l2974 114E                       l2966 1124                       l2958 1100  
                     l2894 1020                       l2798 0C89                       l3678 0743  
                     l2886 1ACE                       l2878 0FD3                       l3950 0495  
                     l3942 045F                       l3934 0428                       l3926 0400  
                     l3918 03DF                       l3870 018F                       l3862 0166  
                     l3854 0141                       l3846 010F                       l3790 168C  
                     l3782 1618                       l3774 15D1                       l3766 1597  
                     l3758 1564                       l3696 1D54                       l3688 1D27  
                     l2992 1182                       l2984 1169                       l2976 1157  
                     l2968 112D                       l2896 1033                       l2888 1AD4  
                     l3960 04C5                       l3952 049E                       l3944 0471  
                     l3936 0433                       l3880 01C8                       l3856 014C  
                     l3864 016C                       l3872 0195                       l3848 0121  
                     l3792 16A5                       l3784 161C                       l3776 15DC  
                     l3768 15B0                       l3928 0407                       l3698 1D5A  
                     l2994 1192                       l2978 1161                       l2986 117B  
                     l3970 04F4                       l3962 04C9                       l3954 04A2  
                     l3946 0479                       l3938 0446                       l3890 0257  
                     l3882 0207                       l3874 01A2                       l3866 017C  
                     l3858 0153                       l3794 16AE                       l3786 1622  
                     l3778 15E2                       l3980 0527                       l3972 0501  
                     l3964 04DB                       l3956 04AD                       l3948 047F  
                     l3892 025D                       l3884 0226                       l3876 01B6  
                     l3868 0189                       l3796 16C9                       l3788 1641  
                     l2998 1B3B                       l3982 052D                       l3974 0507  
                     l3966 04E6                       l3958 04C1                       l3894 026A  
                     l3886 0244                       l3878 01C1                       l3798 16D1  
                     l3990 0559                       l3984 0539                       l3968 04EC  
                     l3976 0514                       l3896 0279                       l3888 0251  
                     l3992 0573                       l3986 054B                       l3978 051A  
                     l3898 0282                       ?_isr 0070                       STR_1 1896  
                     u3000 078E                       u3001 078D                       u3010 0799  
                     u3011 0798                       u3020 07AA                       u3100 1D68  
                     u3021 07A9                       u3101 1D67                       u3110 1D73  
                     u3111 1D72                       u3040 07BC                       u3120 1D7E  
                     u4001 0BA6                       u3041 07BB                       u3121 1D7D  
                     u4002 0BAD                       u4003 0BB4                       u3035 07AE  
                     u4100 0C24                       u3060 07CD                       u3140 1D90  
                     u4101 0C23                       u3061 07CC                       u3141 1D8F  
                     u4110 0C33                       u4030 0BD8                       u3310 1C22  
                     u3150 1D9A                       u4031 0BD7                       u4015 0BB6  
                     u3311 1C21                       u3055 07BD                       u3151 1D99  
                     u3135 1D82                       u3400 1307                       u3320 12AB  
                     u4120 0C50                       u3080 07E1                       u3401 1306  
                     u3321 12AA                       u4121 0C4F                       u4025 0BCD  
                     u3305 1C16                       u3081 07E0                       u3065 07C9  
                     u3410 135F                       u3330 12B1                       u4130 0C6A  
                     u4050 0BEC                       u3090 07E6                       u3170 1DAD  
                     u3411 135E                       u3331 12B0                       u4131 0C69  
                     u4115 0C2E                       u4051 0BEB                       u3091 07E5  
                     u3075 07D5                       u3171 1DAC                       u3155 1D96  
                     u3420 136A                       u3340 12B6                       u4140 0C88  
                     u4060 0BF1                       u3260 1BF3                       u3180 1DB2  
                     u3501 13BF                       u3421 1368                       u3341 12B5  
                     u4141 0C87                       u4125 0C4C                       u4061 0BF0  
                     u4045 0BDB                       u3261 1BF2                       u3181 1DB1  
                     u3165 1DA1                       u5110 1FC3                       u5030 1F4C  
                     u4150 1BCC                       u3510 13D1                       u3502 13C6  
                     u3430 136B                       u3350 12D4                       u4070 0C05  
                     u5111 1FC2                       u5031 1F4B                       u3511 13D0  
                     u3503 13CD                       u3415 135B                       u3351 12D3  
                     u4135 0C66                       u4071 0C04                       u4160 07F6  
                     u5120 1FC9                       u5040 1F50                       u3600 147C  
                     u3520 13D5                       u3440 137F                       u3360 12DF  
                     u4080 0C0C                       u3280 1C05                       u4400 0F4B  
                     u4320 0D9E                       u6000 083E                       u4161 07F5  
                     u5121 1FC8                       u5105 1FB8                       u5041 1F4F  
                     u3601 147B                       u3521 13D4                       u3441 137E  
                     u3361 12DE                       u4081 0C0B                       u3281 1C04  
                     u4401 0F4A                       u4321 0D9D                       u4305 0D0B  
                     u6001 083D                       u4170 07FC                       u5130 1FCD  
                     u5050 1F70                       u3530 13E4                       u3450 138E  
                     u3370 12E5                       u4090 0C12                       u3290 1C0F  
                     u6010 0889                       u4171 07FB                       u5131 1FCC  
                     u5051 1F6F                       u4155 1BC7                       u3531 13E3  
                     u3451 138D                       u3371 12E4                       u4091 0C11  
                     u3291 1C0E                       u3275 1BF7                       u4315 0D56  
                     u6011 0888                       u5140 1FE2                       u4180 1AC3  
                     u3700 14D1                       u3620 1492                       u3380 12EA  
                     u2900 1B6E                       u6100 16A5                       u6020 08D5  
                     u4181 1AC2                       u3701 14D0                       u3621 1491  
                     u3381 12E9                       u2901 1B6D                       u6101 16A4  
                     u6021 08D4                       u5150 1FF2                       u5070 1F91  
                     u3710 14E0                       u3630 1497                       u3550 1409  
                     u3470 13A4                       u3390 1303                       u4510 109F  
                     u4270 0CA4                       u6110 16C9                       u6030 08E5  
                     u5151 1FF1                       u5071 1F90                       u3631 1496  
                     u3615 1487                       u3551 1408                       u3471 13A3  
                     u3391 1302                       u4511 109E                       u3295 1C0B  
                     u4415 0F5E                       u4335 0DB1                       u4271 0CA3  
                     u6111 16C8                       u6031 08E2                       u5160 1FF6  
                     u3720 14EF                       u3640 14A1                       u3480 13A8  
                     u4600 10FE                       u4520 10A3                       u2920 1B82  
                     u3800 0958                       u4440 1ACE                       u4360 0E5A  
                     u4280 0CAD                       u6200 00DA                       u6120 16E0  
                     u6040 0939                       u5161 1FF5                       u5145 1FDD  
                     u5065 1F83                       u3721 14EE                       u3641 14A0  
                     u3561 1420                       u3553 1405                       u3545 13E7  
                     u3481 13A7                       u3465 1391                       u4601 10FD  
                     u4521 10A2                       u4505 1092                       u2921 1B81  
                     u3801 0957                       u4441 1ACD                       u4425 0F9A  
                     u4361 0E59                       u4345 0DED                       u4281 0CAC  
                     u6201 00D9                       u6121 16DF                       u6041 0938  
                     u5170 1BA8                       u5090 1FB3                       u2930 1DCE  
                     u3730 14F8                       u3650 14A7                       u3570 1434  
                     u3562 1421                       u3490 13AD                       u4530 10AA  
                     u3810 0979                       u4450 1AD4                       u6210 0109  
                     u6130 1736                       u6050 155E                       u5171 1BA7  
                     u5091 1FB2                       u2931 1DCD                       u3731 14F7  
                     u3715 14DB                       u3651 14A6                       u3571 1435  
                     u3563 1426                       u3491 13AC                       u4531 10A9  
                     u2915 1B75                       u3811 0978                       u4451 1AD3  
                     u4435 0FD6                       u4355 0E29                       u6211 0108  
                     u6131 1735                       u6051 155B                       _PEIE 005E  
                     u3740 14FD                       u3660 14AC                       u3580 1452  
                     u3572 143A                       u3564 1427                       u4620 113F  
                     u4460 1033                       u3820 097F                       u6300 026A  
                     u6220 0121                       u6140 1753                       u6060 1564  
                     u5085 1FA5                       u3741 14FC                       u3661 14AB  
                     u3581 1451                       u3573 143B                       u3565 142C  
                     u4621 113E                       u4461 1032                       u3821 097E  
                     u6301 0269                       u6221 0120                       u6141 1750  
                     u6125 16DC                       u6061 1563                       u2950 1DE2  
                     u3750 150A                       u3670 14B2                       u3590 1477  
                     u3566 142D                       u4710 1192                       u4550 10BC  
                     u4470 104D                       u3830 0984                       u6310 0279  
                     u6230 012F                       u6150 177A                       u6070 1597  
                     u2951 1DE1                       u3751 1509                       u3671 14B1  
                     u3591 1476                       u4711 1191                       u4615 1126  
                     u4551 10BB                       u4471 104C                       u3911 0A8B  
                     u3831 0983                       u4375 0E7C                       u4295 0CCF  
                     u6311 0278                       u6231 012E                       u6151 1779  
                     u6135 1732                       u6071 1596                       u4800 1ED2  
                     u3760 150F                       u3680 14B9                       u4720 1B41  
                     u4640 115D                       u4560 10C3                       u3912 0A92  
                     u3840 099B                       u6400 0446                       u6320 02A2  
                     u6240 0141                       u6160 1789                       u6080 15D1  
                     u2945 1DD3                       u4801 1ED1                       u3761 150E  
                     u3681 14B8                       u4721 1B40                       u4705 1184  
                     u4641 115C                       u4625 113B                       u4561 10C2  
                     u4545 10AC                       u3921 0AB8                       u3913 0A99  
                     u3905 0A65                       u3841 099A                       u4385 0EB8  
                     u6401 0445                       u6321 02A1                       u6305 0266  
                     u6241 0140                       u6161 1788                       u6081 15D0  
                     u2970 1DFD                       u4810 1EDE                       u3770 1520  
                     u3690 14BF                       u4650 1161                       u4490 1086  
                     u3922 0ABF                       u3850 09A0                       u6410 045F  
                     u6250 017B                       u6170 17A4                       u6090 161C  
                     u2971 1DFC                       u4811 1EDD                       u3771 151F  
                     u3691 14BE                       u4651 1160                       u4635 1150  
                     u4491 1085                       u3923 0AC6                       u3851 099F  
                     u4395 0F03                       u6411 045E                       u6315 0275  
                     u6251 017A                       u6171 17A3                       u6091 161B  
                     u4900 1E65                       u4660 1168                       u4580 10D4  
                     u3780 094D                       u6500 051A                       u6420 0471  
                     u6260 01A2                       u2965 1DE4                       u4821 1EED  
                     u4901 1E64                       u4661 1167                       u4581 10D3  
                     u4485 1071                       u3941 0AEE                       u3861 09F1  
                     u3781 094C                       u6501 0519                       u6421 0470  
                     u6405 0442                       u6261 01A1                       u6165 1785  
                     u2990 1E1B                       u4830 1F06                       u4822 1EEE  
                     u4750 1B5B                       u4590 10EA                       u3942 0AF5  
                     u3862 09F8                       u3790 0953                       u6510 0539  
                     u6430 047F                       u6350 03E6                       u6270 01B6  
                     u6190 00CB                       u2991 1E1A                       u2975 1DF9  
                     u4831 1F05                       u4823 1EF3                       u4751 1B5A  
                     u4735 1B48                       u4591 10E9                       u4575 10C6  
                     u4495 1082                       u3951 0B1B                       u3943 0AFC  
                     u3935 0AC8                       u3871 0A0D                       u3863 09FF  
                     u3791 0952                       u6511 0538                       u6431 047E  
                     u6351 03E5                       u6335 0333                       u6271 01B5  
                     u6255 0177                       u6191 00CA                       u5720 1B19  
                     u4760 1C83                       u4824 1EF4                       u4920 1E77  
                     u4680 117A                       u3952 0B22                       u3872 0A14  
                     u6520 054B                       u6440 0495                       u6360 0406  
                     u5721 1B18                       u2985 1E0D                       u4761 1C82  
                     u4841 1F15                       u4825 1EF9                       u4921 1E76  
                     u4745 1B4F                       u4681 1179                       u3961 0B48  
                     u3953 0B29                       u3881 0A39                       u3873 0A1B  
                     u6521 054A                       u6441 0494                       u6361 0405  
                     u6345 03A5                       u6265 019E                       u6185 008A  
                     u4770 1C9F                       u4850 1F40                       u4842 1F16  
                     u4826 1EFA                       u4930 1E7E                       u4690 1181  
                     u3970 0B72                       u3962 0B4F                       u3882 0A40  
                     u5810 1C43                       u6530 0573                       u6450 04AD  
                     u6370 040F                       u6290 0243                       u4771 1C9E  
                     u4851 1F3F                       u4843 1F1B                       u4931 1E7D  
                     u4915 1E67                       u4691 1180                       u4675 116A  
                     u3963 0B56                       u3891 0A55                       u3883 0A47  
                     u5811 1C42                       u6531 0570                       u6451 04AC  
                     u6371 040E                       u6291 0242                       u6195 00C7  
                     u4780 1CB9                       u4844 1F1C                       u4860 1008  
                     u3892 0A5C                       u5900 0698                       u6460 04C9  
                     u6380 0417                       u4781 1CB8                       u4845 1F21  
                     u4861 1007                       u3981 0B7E                       u3893 0A63  
                     u5805 1C35                       u5901 0697                       u6461 04C8  
                     u6445 0491                       u6381 0416                       u6285 01CD  
                     u4846 1F22                       u4790 1EB6                       u4950 1E8F  
                     u4870 1E31                       u3990 0B9A                       u3982 0B85  
                     u5830 1C54                       u6470 04DB                       u6390 0428  
                     u6550 1289                       u4855 1F3C                       u4791 1EB5  
                     u4951 1E8E                       u4871 1E30                       u3983 0B8C  
                     u3975 0B6D                       u5831 1C53                       u6471 04DA  
                     u6455 04A9                       u6391 0427                       u6551 1288  
                     u4960 1E94                       u4880 1E48                       u6480 04F4  
                     u6560 1293                       u4785 1CB5                       u4961 1E93  
                     u4945 1E81                       u5825 1C44                       u6481 04F3  
                     u6561 1292                       u6545 11E4                       u4890 1E5E  
                     u5850 1C68                       u6490 0513                       u4891 1E5D  
                     u3995 0B95                       u5851 1C67                       u5835 1C50  
                     u5915 06B5                       u6491 0512                       u6395 0424  
                     u5940 1D15                       u5860 0583                       u4885 1E43  
                     u5941 1D14                       u5845 1C5C                       u5925 0702  
                     u5861 0582                       u5790 1C31                       u5791 1C30  
                     u5935 074E                       u5960 1D2B                       u5961 1D2A  
                     u6577 11D3                       u5970 1D3D                       u5971 1D3C  
                     u5955 1D1C                       u5875 05A0                       u5885 05FC  
                     u5990 1D5A                       u5991 1D59                       u5975 1D39  
                     u5895 0651                       u5985 1D4C                       _TXIF 0064  
                     _conv 0801                       _door 00E0                       _main 119B  
                     _lock 00E1                       btemp 007E                       start 000C  
             _sprintf$1181 00B5                      ??_isr 0070           ?_I2C_Master_Init 0025  
         ?_I2C_Master_Read 0072           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
            ___fltol@sign1 005E                      ?_conv 0026            __end_of___fladd 1522  
                    ?_main 0070            __end_of___awdiv 07F0            __end_of___flneg 100B  
          __end_of___awmod 1DBC            __end_of___flmul 0C9D            __end_of___flsub 1D0D  
          __end_of___fltol 1EA0                      _ANSEL 0188            __end_of___lldiv 1E24  
          ___awdiv@divisor 0020            __end_of___llmod 1D63            __end_of___lwdiv 1C6D  
                    i1l147 1AF2            __end_of___lwmod 1C27            ___awdiv@counter 0024  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTD 0008            __end_of_cfg_clk 1A98                      _TRISA 0085  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
                    _TXREG 0019            __end_of_dpowers 1896                      _light 00DF  
                    _scale 0C9D            __end_of_isdigit 1AD8                      _setup 1B1A  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 057A            __initialization 000F               __end_of_conv 082A  
             __end_of_main 129A                     ??_conv 002A                     ??_main 00D0  
     __size_of__tdiv_to_l_ 00BD          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072  
       ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0074           ___llmod@dividend 0076  
                   ?_scale 0042           ___awdiv@dividend 0022                     ?_setup 0070  
                   _ANSELH 0189                     i1l3540 1ADE                     i1l3542 1AE4  
                   i1l3544 1AE8                     i1l3546 1AEF                     i1l3538 1AD8  
                   u573_20 1ADE                     u573_21 1ADD                     u574_20 1AE4  
                   u574_21 1AE3                     u575_20 1AEF                     u575_21 1AEE  
                   _SPBRGH 009A                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 2000           __end_of__powers_ 183A                     ___flge 1EA0  
                   ___fleq 1C6D                  ??___fladd 005E                     ___wmul 1B3B  
                ??___awdiv 0079                  ??___flneg 0076                  ??___awmod 0076  
                ??___flmul 0030                  ??___flsub 007B                  ??___fltol 0059  
                ??___lldiv 007A                  ??___llmod 007A                  ??___lwdiv 0078  
                ??___lwmod 0076                  ??_cfg_clk 0072                     _fround 057A  
         ___awdiv@quotient 0026            ___awmod@divisor 0072            ___awmod@counter 0077  
                   conv@aa 0032                  ??_isdigit 0072         __size_of__Umul8_16 0027  
                   saved_w 007E                  ??_sprintf 006A                 ___flge@ff1 0072  
               ___flge@ff2 0076               ___xxtofl@arg 0022               ___xxtofl@exp 0021  
             ___xxtofl@val 0072                 ___fleq@ff1 0072                 ___fleq@ff2 0076  
  __end_of__initialization 0019                 ___flneg@f1 0072                 ___fltol@f1 0055  
           __pcstackCOMMON 0070         __size_of_cfg_usart 0015              __end_of_scale 1000  
            __end_of_setup 1B3B                 __div_to_l_ 10DD            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 0046            __div_to_l_@quot 0020  
             sprintf@width 00C6                    ??_setup 007B                 __pbssBANK1 00D3  
            __div_to_l_@f1 0072              __div_to_l_@f2 0076          __end_of__Umul8_16 1B87  
               __pmaintext 119B                    ?___flge 0072                    ?___fleq 0072  
                  ?___wmul 0072                 __pintentry 0004         __size_of_send_char 000A  
       __size_of_send_crct 0021                    ?_fround 0042                  ?___xxtofl 0072  
                  _SSPCON2 0091                    _SSPSTAT 0094                send_crct@st 0076  
               __stringtab 1800          __end_of_cfg_usart 1020          __end_of__npowers_ 186E  
               _scale$1180 0050            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 129A                    ___awdiv 0787                    ___flneg 1000  
                  ___awmod 1D63                    ___flmul 093C                    ___flsub 1CBD  
                  ___fltol 1E24                    ___lldiv 1DBC            __size_of___wmul 0025  
                  ___llmod 1D0D                    ___lwdiv 1C27                    ___lwmod 1BED  
                  _cfg_clk 1A90            __size_of_fround 020D                    __ptext1 082A  
                  __ptext2 0C9D                    __ptext3 1D63                    __ptext4 0787  
                  __ptext5 1AC6                    __ptext6 057A                    __ptext7 1BED  
                  __ptext8 1C27                    __ptext9 093C                ?__div_to_l_ 0072  
                  _dpowers 186E                    _isdigit 1AC6               __size_of_isr 0021  
               ??___xxtofl 0076           ___awmod@dividend 0074   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 082A                    clrloop0 1A99       end_of_initialization 0019  
        __end_of_send_char 1AC6          __end_of_send_crct 1B1A  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0072            ___lldiv@counter 0024  
                _RCSTAbits 0018           I2C_Master_Init@c 0025           I2C_Master_Read@a 0072  
                  psplit$0 B0030                    psplit$1 300031             __tdiv_to_l_@f1 0072  
           __tdiv_to_l_@f2 0076              send_char@dato 0072              ??__tdiv_to_l_ 0020  
                _PORTAbits 0005                  _PORTDbits 0008                ___fladd@grs 0069  
            ___xxtofl@sign 0020                  _TRISCbits 0087                 conv@result 002E  
              ___flmul@grs 0036                  _TXSTAbits 0098        __size_of__div_to_l_ 00BE  
           __end_of___flge 1F44             __end_of___fleq 1CBD             __end_of___wmul 1B60  
        pnum$text1_split_1 0030          pnum$text1_split_2 0031                _BAUDCTLbits 0187  
           __end_of_fround 0787        start_initialization 000F        __end_of__tdiv_to_l_ 10DD  
              __end_of_isr 1AF9          ??_I2C_Master_Init 0029          ??_I2C_Master_Read 0074  
        ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072            ___llmod@divisor 0072  
          ___llmod@counter 0020                   ??___flge 0020                   ??___fleq 0020  
                 ??___wmul 0076                  __Umul8_16 1B60                   ??_fround 0046  
            sprintf@tmpval 00BE                  ___fladd@a 005A                  ___fladd@b 0056  
               fround@prec 0055                  ___flmul@a 002C                  ___flmul@b 0028  
              __pbssCOMMON 007B                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC                sprintf@flag 00C4                sprintf@eexp 00C2  
              sprintf@fval 00C8                sprintf@prec 00CC                  _cfg_usart 100B  
         _I2C_Master_Start 1AA0           _I2C_Master_Write 1AB2           ___lwdiv@dividend 0022  
                 ?___fladd 0056                   ?___awdiv 0020                   ?___flneg 0072  
                 ?___awmod 0072                   ?___flmul 0028                   ?___flsub 00A0  
                 ?___fltol 0055                   ?___lldiv 0072                   ?___llmod 0072  
                __npowers_ 183A                 ?__Umul8_16 0072                   ?___lwdiv 0020  
                 ?___lwmod 0072                   ?_cfg_clk 0070                  __pstrings 1800  
              __tdiv_to_l_ 1020                 send_crct@i 0074               ??__div_to_l_ 007A  
                 ?_isdigit 0070           ___lwdiv@quotient 0025                   ?_sprintf 00A8  
           __size_of_scale 0363             __size_of_setup 0021          interrupt_function 0004  
           ___wmul@product 0076                  clear_ram0 1A98                 ?_cfg_usart 0070  
                 _PIE1bits 008C                  _send_char 1ABC                  _send_crct 1AF9  
                 _PIR1bits 000C         __end_of__div_to_l_ 119B                __stringbase 1805  
        ___wmul@multiplier 0072        I2C_Master_Read@temp 0076                 ?_send_char 0070  
               ?_send_crct 0070                ??__Umul8_16 0074           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003A           __size_of_cfg_clk 0008                _fround$1178 0051  
              _fround$1179 004D         __end_of__stringtab 1806                _isdigit$991 0072  
               sprintf@val 00BA            _I2C_Master_Init 1BB5            _I2C_Master_Read 1B87  
                 ___xxtofl 1F44            _I2C_Master_Wait 07F0            _I2C_Master_Stop 1AA9  
         __size_of_isdigit 0012            ___lwdiv@divisor 0020            ___lwdiv@counter 0024  
                 __ptext10 1B60                   __ptext11 1020                   __ptext20 1C6D  
                 __ptext12 10DD                   __ptext21 1B1A                   __ptext13 1B3B  
                 __ptext30 1AB2                   __ptext22 1BB5                   __ptext14 1D0D  
                 __ptext31 1AA9                   __ptext23 1DBC                   __ptext15 1E24  
                 __ptext32 1AA0                   __ptext24 1AF9                   __ptext16 1CBD  
                 __ptext33 1B87                   __ptext25 1ABC                   __ptext17 129A  
                 __ptext34 07F0                   __ptext26 0801                   __ptext18 1000  
                 __ptext35 1AD8                   __ptext27 1F44                   __ptext19 1EA0  
                 __ptext28 100B                   __ptext29 1A90                   __powers_ 1806  
         __size_of_sprintf FD50              __size_of_conv 0029              __size_of_main 00FF  
                pnum$text1 000B                ??_cfg_usart 0072   __end_of_I2C_Master_Start 1AA9  
 __end_of_I2C_Master_Write 1ABC                 _INTCONbits 000B                   isdigit@c 0073  
                 scale@scl 0054                   intlevel1 0000                  sprintf@ap 00B9  
         __tdiv_to_l_@exp1 0029           __tdiv_to_l_@cntr 0028                  sprintf@sp 00CE  
         __tdiv_to_l_@quot 0024           ___lwmod@dividend 0074           ___lldiv@dividend 0076  
              ??_send_char 0072                ??_send_crct 0073                  stringcode 1800  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 1BED    __end_of_I2C_Master_Read 1BB5  
  __end_of_I2C_Master_Wait 07FD    __end_of_I2C_Master_Stop 1AB2               ?__tdiv_to_l_ 0072  
   __Umul8_16@multiplicand 0072                   sprintf@c 00CF                   sprintf@f 00A8  
         ___lldiv@quotient 0020          I2C_Master_Write@d 0072            ___lwmod@divisor 0072  
          ___lwmod@counter 0077                   stringdir 1800                   stringtab 1800  
              _SSPCON2bits 0091              ___fladd@signs 0066               ___fladd@aexp 0067  
             ___fladd@bexp 0068       __Umul8_16@multiplier 007A          __Umul8_16@product 0076  



Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Aug 13 02:44:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240                           
   241                           	psect	strings
   242  1800                     __pstrings:
   243  1800                     stringtab:
   244  1800                     __stringtab:
   245  1800                     stringcode:	
   246                           ;	String table - string pointers are 1 byte each
   247                           
   248  1800                     stringdir:
   249  1800  3018               	movlw	high stringdir
   250  1801  008A               	movwf	10
   251  1802  0804               	movf	4,w
   252  1803  0A84               	incf	4,f
   253  1804  0782               	addwf	2,f
   254  1805                     __stringbase:
   255  1805  3400               	retlw	0
   256  1806                     __end_of__stringtab:
   257  1806                     __powers_:
   258  1806  3400               	retlw	0
   259  1807  3400               	retlw	0
   260  1808  3480               	retlw	128
   261  1809  343F               	retlw	63
   262  180A  3400               	retlw	0
   263  180B  3400               	retlw	0
   264  180C  3420               	retlw	32
   265  180D  3441               	retlw	65
   266  180E  3400               	retlw	0
   267  180F  3400               	retlw	0
   268  1810  34C8               	retlw	200
   269  1811  3442               	retlw	66
   270  1812  3400               	retlw	0
   271  1813  3400               	retlw	0
   272  1814  347A               	retlw	122
   273  1815  3444               	retlw	68
   274  1816  3400               	retlw	0
   275  1817  3440               	retlw	64
   276  1818  341C               	retlw	28
   277  1819  3446               	retlw	70
   278  181A  3400               	retlw	0
   279  181B  3450               	retlw	80
   280  181C  34C3               	retlw	195
   281  181D  3447               	retlw	71
   282  181E  3400               	retlw	0
   283  181F  3424               	retlw	36
   284  1820  3474               	retlw	116
   285  1821  3449               	retlw	73
   286  1822  3480               	retlw	128
   287  1823  3496               	retlw	150
   288  1824  3418               	retlw	24
   289  1825  344B               	retlw	75
   290  1826  3420               	retlw	32
   291  1827  34BC               	retlw	188
   292  1828  34BE               	retlw	190
   293  1829  344C               	retlw	76
   294  182A  3428               	retlw	40
   295  182B  346B               	retlw	107
   296  182C  346E               	retlw	110
   297  182D  344E               	retlw	78
   298  182E  34F9               	retlw	249
   299  182F  3402               	retlw	2
   300  1830  3415               	retlw	21
   301  1831  3450               	retlw	80
   302  1832  34EC               	retlw	236
   303  1833  3478               	retlw	120
   304  1834  34AD               	retlw	173
   305  1835  3460               	retlw	96
   306  1836  34CA               	retlw	202
   307  1837  34F2               	retlw	242
   308  1838  3449               	retlw	73
   309  1839  3471               	retlw	113
   310  183A                     __end_of__powers_:
   311  183A                     __npowers_:
   312  183A  3400               	retlw	0
   313  183B  3400               	retlw	0
   314  183C  3480               	retlw	128
   315  183D  343F               	retlw	63
   316  183E  34CD               	retlw	205
   317  183F  34CC               	retlw	204
   318  1840  34CC               	retlw	204
   319  1841  343D               	retlw	61
   320  1842  340A               	retlw	10
   321  1843  34D7               	retlw	215
   322  1844  3423               	retlw	35
   323  1845  343C               	retlw	60
   324  1846  346F               	retlw	111
   325  1847  3412               	retlw	18
   326  1848  3483               	retlw	131
   327  1849  343A               	retlw	58
   328  184A  3417               	retlw	23
   329  184B  34B7               	retlw	183
   330  184C  34D1               	retlw	209
   331  184D  3438               	retlw	56
   332  184E  34AC               	retlw	172
   333  184F  34C5               	retlw	197
   334  1850  3427               	retlw	39
   335  1851  3437               	retlw	55
   336  1852  34BD               	retlw	189
   337  1853  3437               	retlw	55
   338  1854  3486               	retlw	134
   339  1855  3435               	retlw	53
   340  1856  3495               	retlw	149
   341  1857  34BF               	retlw	191
   342  1858  34D6               	retlw	214
   343  1859  3433               	retlw	51
   344  185A  3477               	retlw	119
   345  185B  34CC               	retlw	204
   346  185C  342B               	retlw	43
   347  185D  3432               	retlw	50
   348  185E  345F               	retlw	95
   349  185F  3470               	retlw	112
   350  1860  3489               	retlw	137
   351  1861  3430               	retlw	48
   352  1862  34FF               	retlw	255
   353  1863  34E6               	retlw	230
   354  1864  34DB               	retlw	219
   355  1865  342E               	retlw	46
   356  1866  3408               	retlw	8
   357  1867  34E5               	retlw	229
   358  1868  343C               	retlw	60
   359  1869  341E               	retlw	30
   360  186A  3460               	retlw	96
   361  186B  3442               	retlw	66
   362  186C  34A2               	retlw	162
   363  186D  340D               	retlw	13
   364  186E                     __end_of__npowers_:
   365  186E                     _dpowers:
   366  186E  3401               	retlw	1
   367  186F  3400               	retlw	0
   368  1870  3400               	retlw	0
   369  1871  3400               	retlw	0
   370  1872  340A               	retlw	10
   371  1873  3400               	retlw	0
   372  1874  3400               	retlw	0
   373  1875  3400               	retlw	0
   374  1876  3464               	retlw	100
   375  1877  3400               	retlw	0
   376  1878  3400               	retlw	0
   377  1879  3400               	retlw	0
   378  187A  34E8               	retlw	232
   379  187B  3403               	retlw	3
   380  187C  3400               	retlw	0
   381  187D  3400               	retlw	0
   382  187E  3410               	retlw	16
   383  187F  3427               	retlw	39
   384  1880  3400               	retlw	0
   385  1881  3400               	retlw	0
   386  1882  34A0               	retlw	160
   387  1883  3486               	retlw	134
   388  1884  3401               	retlw	1
   389  1885  3400               	retlw	0
   390  1886  3440               	retlw	64
   391  1887  3442               	retlw	66
   392  1888  340F               	retlw	15
   393  1889  3400               	retlw	0
   394  188A  3480               	retlw	128
   395  188B  3496               	retlw	150
   396  188C  3498               	retlw	152
   397  188D  3400               	retlw	0
   398  188E  3400               	retlw	0
   399  188F  34E1               	retlw	225
   400  1890  34F5               	retlw	245
   401  1891  3405               	retlw	5
   402  1892  3400               	retlw	0
   403  1893  34CA               	retlw	202
   404  1894  349A               	retlw	154
   405  1895  343B               	retlw	59
   406  1896                     __end_of_dpowers:
   407  1896                     STR_1:
   408  1896  3425               	retlw	37	;'%'
   409  1897  3433               	retlw	51	;'3'
   410  1898  342E               	retlw	46	;'.'
   411  1899  3430               	retlw	48	;'0'
   412  189A  3466               	retlw	102	;'f'
   413  189B  3400               	retlw	0
   414                           
   415                           	psect	nvBANK1
   416  00E3                     __pnvBANK1:
   417  00E3                     _v:
   418  00E3                     	ds	4
   419  0018                     _RCSTAbits	set	24
   420  0005                     _PORTA	set	5
   421  0006                     _PORTB	set	6
   422  0006                     _PORTBbits	set	6
   423  000B                     _INTCONbits	set	11
   424  001A                     _RCREG	set	26
   425  0008                     _PORTD	set	8
   426  0019                     _TXREG	set	25
   427  000C                     _PIR1bits	set	12
   428  0064                     _TXIF	set	100
   429  0096                     _IOCB	set	150
   430  008C                     _PIE1bits	set	140
   431  009A                     _SPBRGH	set	154
   432  0099                     _SPBRG	set	153
   433  0098                     _TXSTAbits	set	152
   434  008F                     _OSCCONbits	set	143
   435  0095                     _WPUB	set	149
   436  0081                     _OPTION_REGbits	set	129
   437  0086                     _TRISBbits	set	134
   438  0088                     _TRISD	set	136
   439  0086                     _TRISB	set	134
   440  0085                     _TRISA	set	133
   441  0187                     _BAUDCTLbits	set	391
   442  0189                     _ANSELH	set	393
   443  0188                     _ANSEL	set	392
   444                           
   445                           	psect	cinit
   446  000F                     start_initialization:	
   447                           ; #config settings
   448                           
   449  000F                     __initialization:
   450                           
   451                           ; Clear objects allocated to COMMON
   452  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   453  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   454                           
   455                           ; Clear objects allocated to BANK1
   456  0011  1383               	bcf	3,7	;select IRP bank0
   457  0012  30CE               	movlw	low __pbssBANK1
   458  0013  0084               	movwf	4
   459  0014  30E3               	movlw	low (__pbssBANK1+21)
   460  0015  160A  158A  23F6  120A  118A  	fcall	clear_ram0
   461  001A                     end_of_initialization:	
   462                           ;End of C runtime variable initialization code
   463                           
   464  001A                     __end_of__initialization:
   465  001A  0183               	clrf	3
   466  001B  160A  158A  2ECF   	ljmp	_main	;jump to C main() function
   467                           
   468                           	psect	bssCOMMON
   469  0077                     __pbssCOMMON:
   470  0077                     _op:
   471  0077                     	ds	1
   472  0078                     _CONT:
   473  0078                     	ds	1
   474                           
   475                           	psect	bssBANK1
   476  00CE                     __pbssBANK1:
   477  00CE                     _f2:
   478  00CE                     	ds	10
   479  00D8                     _V:
   480  00D8                     	ds	1
   481  00D9                     _f1:
   482  00D9                     	ds	10
   483                           
   484                           	psect	clrtext
   485  1BF6                     clear_ram0:	
   486                           ;	Called with FSR containing the base address, and
   487                           ;	W with the last address+1
   488                           
   489  1BF6  0064               	clrwdt	;clear the watchdog before getting into this loop
   490  1BF7                     clrloop0:
   491  1BF7  0180               	clrf	0	;clear RAM location pointed to by FSR
   492  1BF8  0A84               	incf	4,f	;increment pointer
   493  1BF9  0604               	xorwf	4,w	;XOR with final address
   494  1BFA  1903               	btfsc	3,2	;have we reached the end yet?
   495  1BFB  3400               	retlw	0	;all done for this memory range, return
   496  1BFC  0604               	xorwf	4,w	;XOR again to restore value
   497  1BFD  2BF7               	goto	clrloop0	;do the next byte
   498                           
   499                           	psect	cstackBANK1
   500  00A0                     __pcstackBANK1:
   501  00A0                     ?___flsub:
   502  00A0                     ___flsub@a:	
   503                           ; 4 bytes @ 0x0
   504                           
   505                           
   506                           ; 4 bytes @ 0x0
   507  00A0                     	ds	4
   508  00A4                     ___flsub@b:
   509                           
   510                           ; 4 bytes @ 0x4
   511  00A4                     	ds	4
   512  00A8                     ?_sprintf:
   513  00A8                     sprintf@f:	
   514                           ; 2 bytes @ 0x8
   515                           
   516                           
   517                           ; 1 bytes @ 0x8
   518  00A8                     	ds	5
   519  00AD                     ??_sprintf:
   520                           
   521                           ; 1 bytes @ 0xD
   522  00AD                     	ds	5
   523  00B2                     _sprintf$1113:
   524                           
   525                           ; 4 bytes @ 0x12
   526  00B2                     	ds	4
   527  00B6                     sprintf@ap:
   528                           
   529                           ; 1 bytes @ 0x16
   530  00B6                     	ds	1
   531  00B7                     sprintf@val:
   532                           
   533                           ; 4 bytes @ 0x17
   534  00B7                     	ds	4
   535  00BB                     sprintf@flag:
   536                           
   537                           ; 2 bytes @ 0x1B
   538  00BB                     	ds	2
   539  00BD                     sprintf@width:
   540                           
   541                           ; 2 bytes @ 0x1D
   542  00BD                     	ds	2
   543  00BF                     sprintf@tmpval:
   544                           
   545                           ; 4 bytes @ 0x1F
   546  00BF                     	ds	4
   547  00C3                     sprintf@eexp:
   548                           
   549                           ; 2 bytes @ 0x23
   550  00C3                     	ds	2
   551  00C5                     sprintf@fval:
   552                           
   553                           ; 4 bytes @ 0x25
   554  00C5                     	ds	4
   555  00C9                     sprintf@sp:
   556                           
   557                           ; 1 bytes @ 0x29
   558  00C9                     	ds	1
   559  00CA                     sprintf@prec:
   560                           
   561                           ; 2 bytes @ 0x2A
   562  00CA                     	ds	2
   563  00CC                     sprintf@c:
   564                           
   565                           ; 1 bytes @ 0x2C
   566  00CC                     	ds	1
   567  00CD                     ??_main:
   568                           
   569                           ; 1 bytes @ 0x2D
   570  00CD                     	ds	1
   571                           
   572                           	psect	cstackCOMMON
   573  0070                     __pcstackCOMMON:
   574  0070                     ?_isdigit:
   575  0070                     ?_cfg_io:	
   576                           ; 1 bit 
   577                           
   578  0070                     ?_cfg_inte:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_cfg_iocb:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_cfg_usart:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_cfg_clk:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_send_crct:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_send_char:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_isr:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ??_isr:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_main:	
   603                           ; 1 bytes @ 0x0
   604                           
   605                           
   606                           ; 1 bytes @ 0x0
   607  0070                     	ds	5
   608  0075                     ??_cfg_io:
   609  0075                     ??_cfg_inte:	
   610                           ; 1 bytes @ 0x5
   611                           
   612  0075                     ??_cfg_iocb:	
   613                           ; 1 bytes @ 0x5
   614                           
   615  0075                     ??_cfg_usart:	
   616                           ; 1 bytes @ 0x5
   617                           
   618  0075                     ??_cfg_clk:	
   619                           ; 1 bytes @ 0x5
   620                           
   621  0075                     ??_send_char:	
   622                           ; 1 bytes @ 0x5
   623                           
   624  0075                     ??_isdigit:	
   625                           ; 1 bytes @ 0x5
   626                           
   627  0075                     ??__div_to_l_:	
   628                           ; 1 bytes @ 0x5
   629                           
   630  0075                     ??___wmul:	
   631                           ; 1 bytes @ 0x5
   632                           
   633  0075                     ??___lldiv:	
   634                           ; 1 bytes @ 0x5
   635                           
   636  0075                     ??___awmod:	
   637                           ; 1 bytes @ 0x5
   638                           
   639  0075                     ??___flneg:	
   640                           ; 1 bytes @ 0x5
   641                           
   642  0075                     ??___llmod:	
   643                           ; 1 bytes @ 0x5
   644                           
   645  0075                     ??___lwmod:	
   646                           ; 1 bytes @ 0x5
   647                           
   648  0075                     ?__Umul8_16:	
   649                           ; 1 bytes @ 0x5
   650                           
   651  0075                     send_char@dato:	
   652                           ; 2 bytes @ 0x5
   653                           
   654  0075                     __Umul8_16@multiplicand:	
   655                           ; 1 bytes @ 0x5
   656                           
   657  0075                     _isdigit$941:	
   658                           ; 1 bytes @ 0x5
   659                           
   660  0075                     ___wmul@product:	
   661                           ; 1 bytes @ 0x5
   662                           
   663                           
   664                           ; 2 bytes @ 0x5
   665  0075                     	ds	1
   666  0076                     ??_send_crct:
   667  0076                     ??___awdiv:	
   668                           ; 1 bytes @ 0x6
   669                           
   670  0076                     ___llmod@counter:	
   671                           ; 1 bytes @ 0x6
   672                           
   673  0076                     ___lwmod@counter:	
   674                           ; 1 bytes @ 0x6
   675                           
   676  0076                     isdigit@c:	
   677                           ; 1 bytes @ 0x6
   678                           
   679                           
   680                           ; 1 bytes @ 0x6
   681  0076                     	ds	1
   682  0077                     ??___flsub:
   683                           
   684                           	psect	cstackBANK0
   685  0020                     __pcstackBANK0:	
   686                           ; 1 bytes @ 0x7
   687                           
   688  0020                     ?___fleq:
   689  0020                     ?___flge:	
   690                           ; 1 bit 
   691                           
   692  0020                     ??__Umul8_16:	
   693                           ; 1 bit 
   694                           
   695  0020                     ?___wmul:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0020                     ?___awmod:	
   699                           ; 2 bytes @ 0x0
   700                           
   701  0020                     ?___lwmod:	
   702                           ; 2 bytes @ 0x0
   703                           
   704  0020                     ?__tdiv_to_l_:	
   705                           ; 2 bytes @ 0x0
   706                           
   707  0020                     ?__div_to_l_:	
   708                           ; 4 bytes @ 0x0
   709                           
   710  0020                     ?___lldiv:	
   711                           ; 4 bytes @ 0x0
   712                           
   713  0020                     ?___flneg:	
   714                           ; 4 bytes @ 0x0
   715                           
   716  0020                     ?___llmod:	
   717                           ; 4 bytes @ 0x0
   718                           
   719  0020                     ?___xxtofl:	
   720                           ; 4 bytes @ 0x0
   721                           
   722  0020                     send_crct@i:	
   723                           ; 4 bytes @ 0x0
   724                           
   725  0020                     ___wmul@multiplier:	
   726                           ; 2 bytes @ 0x0
   727                           
   728  0020                     ___awmod@divisor:	
   729                           ; 2 bytes @ 0x0
   730                           
   731  0020                     ___lwmod@divisor:	
   732                           ; 2 bytes @ 0x0
   733                           
   734  0020                     ___lldiv@divisor:	
   735                           ; 2 bytes @ 0x0
   736                           
   737  0020                     __div_to_l_@f1:	
   738                           ; 4 bytes @ 0x0
   739                           
   740  0020                     ___fleq@ff1:	
   741                           ; 4 bytes @ 0x0
   742                           
   743  0020                     ___flge@ff1:	
   744                           ; 4 bytes @ 0x0
   745                           
   746  0020                     ___flneg@f1:	
   747                           ; 4 bytes @ 0x0
   748                           
   749  0020                     __tdiv_to_l_@f1:	
   750                           ; 4 bytes @ 0x0
   751                           
   752  0020                     ___llmod@divisor:	
   753                           ; 4 bytes @ 0x0
   754                           
   755  0020                     ___xxtofl@val:	
   756                           ; 4 bytes @ 0x0
   757                           
   758                           
   759                           ; 4 bytes @ 0x0
   760  0020                     	ds	2
   761  0022                     send_crct@st:
   762  0022                     ___wmul@multiplicand:	
   763                           ; 1 bytes @ 0x2
   764                           
   765  0022                     ___awmod@dividend:	
   766                           ; 2 bytes @ 0x2
   767                           
   768  0022                     ___lwmod@dividend:	
   769                           ; 2 bytes @ 0x2
   770                           
   771  0022                     __Umul8_16@product:	
   772                           ; 2 bytes @ 0x2
   773                           
   774                           
   775                           ; 2 bytes @ 0x2
   776  0022                     	ds	2
   777  0024                     ??___xxtofl:
   778  0024                     ?___lwdiv:	
   779                           ; 1 bytes @ 0x4
   780                           
   781  0024                     ___awmod@counter:	
   782                           ; 2 bytes @ 0x4
   783                           
   784  0024                     ___lwdiv@divisor:	
   785                           ; 1 bytes @ 0x4
   786                           
   787  0024                     __Umul8_16@word_mpld:	
   788                           ; 2 bytes @ 0x4
   789                           
   790  0024                     ___lldiv@dividend:	
   791                           ; 2 bytes @ 0x4
   792                           
   793  0024                     __div_to_l_@f2:	
   794                           ; 4 bytes @ 0x4
   795                           
   796  0024                     ___fleq@ff2:	
   797                           ; 4 bytes @ 0x4
   798                           
   799  0024                     ___flge@ff2:	
   800                           ; 4 bytes @ 0x4
   801                           
   802  0024                     __tdiv_to_l_@f2:	
   803                           ; 4 bytes @ 0x4
   804                           
   805  0024                     ___llmod@dividend:	
   806                           ; 4 bytes @ 0x4
   807                           
   808                           
   809                           ; 4 bytes @ 0x4
   810  0024                     	ds	1
   811  0025                     ___awmod@sign:
   812                           
   813                           ; 1 bytes @ 0x5
   814  0025                     	ds	1
   815  0026                     ?___awdiv:
   816  0026                     __Umul8_16@multiplier:	
   817                           ; 2 bytes @ 0x6
   818                           
   819  0026                     ___awdiv@divisor:	
   820                           ; 1 bytes @ 0x6
   821                           
   822  0026                     ___lwdiv@dividend:	
   823                           ; 2 bytes @ 0x6
   824                           
   825                           
   826                           ; 2 bytes @ 0x6
   827  0026                     	ds	2
   828  0028                     ??__tdiv_to_l_:
   829  0028                     ??___fleq:	
   830                           ; 1 bytes @ 0x8
   831                           
   832  0028                     ??___flge:	
   833                           ; 1 bytes @ 0x8
   834                           
   835  0028                     ??___lwdiv:	
   836                           ; 1 bytes @ 0x8
   837                           
   838  0028                     ___xxtofl@sign:	
   839                           ; 1 bytes @ 0x8
   840                           
   841  0028                     ___awdiv@dividend:	
   842                           ; 1 bytes @ 0x8
   843                           
   844  0028                     ___lldiv@quotient:	
   845                           ; 2 bytes @ 0x8
   846                           
   847  0028                     __div_to_l_@quot:	
   848                           ; 4 bytes @ 0x8
   849                           
   850                           
   851                           ; 4 bytes @ 0x8
   852  0028                     	ds	1
   853  0029                     ___xxtofl@exp:
   854  0029                     ___lwdiv@quotient:	
   855                           ; 1 bytes @ 0x9
   856                           
   857                           
   858                           ; 2 bytes @ 0x9
   859  0029                     	ds	1
   860  002A                     ___awdiv@counter:
   861  002A                     ___xxtofl@arg:	
   862                           ; 1 bytes @ 0xA
   863                           
   864                           
   865                           ; 4 bytes @ 0xA
   866  002A                     	ds	1
   867  002B                     ___awdiv@sign:
   868  002B                     ___lwdiv@counter:	
   869                           ; 1 bytes @ 0xB
   870                           
   871                           
   872                           ; 1 bytes @ 0xB
   873  002B                     	ds	1
   874  002C                     ___lldiv@counter:
   875  002C                     __div_to_l_@cntr:	
   876                           ; 1 bytes @ 0xC
   877                           
   878  002C                     ___awdiv@quotient:	
   879                           ; 1 bytes @ 0xC
   880                           
   881  002C                     __tdiv_to_l_@quot:	
   882                           ; 2 bytes @ 0xC
   883                           
   884                           
   885                           ; 4 bytes @ 0xC
   886  002C                     	ds	1
   887  002D                     __div_to_l_@exp1:
   888                           
   889                           ; 1 bytes @ 0xD
   890  002D                     	ds	1
   891  002E                     ?_conv:
   892  002E                     ?___flmul:	
   893                           ; 4 bytes @ 0xE
   894                           
   895  002E                     ___flmul@b:	
   896                           ; 4 bytes @ 0xE
   897                           
   898                           
   899                           ; 4 bytes @ 0xE
   900  002E                     	ds	2
   901  0030                     __tdiv_to_l_@cntr:
   902                           
   903                           ; 1 bytes @ 0x10
   904  0030                     	ds	1
   905  0031                     __tdiv_to_l_@exp1:
   906                           
   907                           ; 1 bytes @ 0x11
   908  0031                     	ds	1
   909  0032                     ??_conv:
   910  0032                     ___flmul@a:	
   911                           ; 1 bytes @ 0x12
   912                           
   913                           
   914                           ; 4 bytes @ 0x12
   915  0032                     	ds	4
   916  0036                     ??___flmul:
   917  0036                     conv@result:	
   918                           ; 1 bytes @ 0x16
   919                           
   920                           
   921                           ; 4 bytes @ 0x16
   922  0036                     	ds	4
   923  003A                     conv@aa:
   924                           
   925                           ; 1 bytes @ 0x1A
   926  003A                     	ds	1
   927  003B                     ___flmul@sign:
   928                           
   929                           ; 1 bytes @ 0x1B
   930  003B                     	ds	1
   931  003C                     ___flmul@aexp:
   932                           
   933                           ; 1 bytes @ 0x1C
   934  003C                     	ds	1
   935  003D                     ___flmul@grs:
   936                           
   937                           ; 4 bytes @ 0x1D
   938  003D                     	ds	4
   939  0041                     ___flmul@bexp:
   940                           
   941                           ; 1 bytes @ 0x21
   942  0041                     	ds	1
   943  0042                     ___flmul@prod:
   944                           
   945                           ; 4 bytes @ 0x22
   946  0042                     	ds	4
   947  0046                     ___flmul@temp:
   948                           
   949                           ; 2 bytes @ 0x26
   950  0046                     	ds	2
   951  0048                     ?_fround:
   952  0048                     ?_scale:	
   953                           ; 4 bytes @ 0x28
   954                           
   955                           
   956                           ; 4 bytes @ 0x28
   957  0048                     	ds	4
   958  004C                     ??_fround:
   959  004C                     ??_scale:	
   960                           ; 1 bytes @ 0x2C
   961                           
   962                           
   963                           ; 1 bytes @ 0x2C
   964  004C                     	ds	7
   965  0053                     _fround$1111:
   966                           
   967                           ; 4 bytes @ 0x33
   968  0053                     	ds	3
   969  0056                     _scale$1112:
   970                           
   971                           ; 4 bytes @ 0x36
   972  0056                     	ds	1
   973  0057                     _fround$1110:
   974                           
   975                           ; 4 bytes @ 0x37
   976  0057                     	ds	3
   977  005A                     scale@scl:
   978                           
   979                           ; 1 bytes @ 0x3A
   980  005A                     	ds	1
   981  005B                     ?___fltol:
   982  005B                     fround@prec:	
   983                           ; 4 bytes @ 0x3B
   984                           
   985  005B                     ___fltol@f1:	
   986                           ; 1 bytes @ 0x3B
   987                           
   988                           
   989                           ; 4 bytes @ 0x3B
   990  005B                     	ds	1
   991  005C                     ?___fladd:
   992  005C                     ___fladd@b:	
   993                           ; 4 bytes @ 0x3C
   994                           
   995                           
   996                           ; 4 bytes @ 0x3C
   997  005C                     	ds	3
   998  005F                     ??___fltol:
   999                           
  1000                           ; 1 bytes @ 0x3F
  1001  005F                     	ds	1
  1002  0060                     ___fladd@a:
  1003                           
  1004                           ; 4 bytes @ 0x40
  1005  0060                     	ds	4
  1006  0064                     ??___fladd:
  1007  0064                     ___fltol@sign1:	
  1008                           ; 1 bytes @ 0x44
  1009                           
  1010                           
  1011                           ; 1 bytes @ 0x44
  1012  0064                     	ds	1
  1013  0065                     ___fltol@exp1:
  1014                           
  1015                           ; 1 bytes @ 0x45
  1016  0065                     	ds	7
  1017  006C                     ___fladd@signs:
  1018                           
  1019                           ; 1 bytes @ 0x4C
  1020  006C                     	ds	1
  1021  006D                     ___fladd@aexp:
  1022                           
  1023                           ; 1 bytes @ 0x4D
  1024  006D                     	ds	1
  1025  006E                     ___fladd@bexp:
  1026                           
  1027                           ; 1 bytes @ 0x4E
  1028  006E                     	ds	1
  1029  006F                     ___fladd@grs:
  1030                           
  1031                           ; 1 bytes @ 0x4F
  1032  006F                     	ds	1
  1033                           
  1034                           	psect	maintext
  1035  1ECF                     __pmaintext:	
  1036 ;;
  1037 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1038 ;;
  1039 ;; *************** function _main *****************
  1040 ;; Defined at:
  1041 ;;		line 89 in file "main5a.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : B00/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0
  1057 ;;      Temps:          0       0       1       0       0
  1058 ;;      Totals:         0       0       1       0       0
  1059 ;;Total ram usage:        1 bytes
  1060 ;; Hardware stack levels required when called:    5
  1061 ;; This function calls:
  1062 ;;		_cfg_clk
  1063 ;;		_cfg_inte
  1064 ;;		_cfg_io
  1065 ;;		_cfg_iocb
  1066 ;;		_cfg_usart
  1067 ;;		_conv
  1068 ;;		_send_crct
  1069 ;;		_sprintf
  1070 ;; This function is called by:
  1071 ;;		Startup code after reset
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _main
  1077  1ECF                     _main:
  1078  1ECF                     l4080:	
  1079                           ;incstack = 0
  1080                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1081                           
  1082                           
  1083                           ;main5a.c: 90:     cfg_io();
  1084  1ECF  160A  158A  2410  160A  158A  	fcall	_cfg_io
  1085  1ED4                     l4082:
  1086                           
  1087                           ;main5a.c: 91:     cfg_inte();
  1088  1ED4  160A  158A  23EE  160A  158A  	fcall	_cfg_inte
  1089  1ED9                     l4084:
  1090                           
  1091                           ;main5a.c: 92:     cfg_iocb();
  1092  1ED9  160A  158A  23E8  160A  158A  	fcall	_cfg_iocb
  1093  1EDE                     l4086:
  1094                           
  1095                           ;main5a.c: 93:     cfg_usart();
  1096  1EDE  120A  118A  27DF  160A  158A  	fcall	_cfg_usart
  1097  1EE3                     l4088:
  1098                           
  1099                           ;main5a.c: 94:     cfg_clk();
  1100  1EE3  160A  158A  23E2  160A  158A  	fcall	_cfg_clk
  1101  1EE8                     l4090:
  1102                           
  1103                           ;main5a.c: 99:       v = conv(V);
  1104  1EE8  1683               	bsf	3,5	;RP0=1, select bank1
  1105  1EE9  1303               	bcf	3,6	;RP1=0, select bank1
  1106  1EEA  0858               	movf	_V^(0+128),w
  1107  1EEB  160A  158A  2470  160A  158A  	fcall	_conv
  1108  1EF0  1283               	bcf	3,5	;RP0=0, select bank0
  1109  1EF1  1303               	bcf	3,6	;RP1=0, select bank0
  1110  1EF2  0831               	movf	?_conv+3,w
  1111  1EF3  1683               	bsf	3,5	;RP0=1, select bank1
  1112  1EF4  1303               	bcf	3,6	;RP1=0, select bank1
  1113  1EF5  00E6               	movwf	(_v+3)^(0+128)
  1114  1EF6  1283               	bcf	3,5	;RP0=0, select bank0
  1115  1EF7  1303               	bcf	3,6	;RP1=0, select bank0
  1116  1EF8  0830               	movf	?_conv+2,w
  1117  1EF9  1683               	bsf	3,5	;RP0=1, select bank1
  1118  1EFA  1303               	bcf	3,6	;RP1=0, select bank1
  1119  1EFB  00E5               	movwf	(_v+2)^(0+128)
  1120  1EFC  1283               	bcf	3,5	;RP0=0, select bank0
  1121  1EFD  1303               	bcf	3,6	;RP1=0, select bank0
  1122  1EFE  082F               	movf	?_conv+1,w
  1123  1EFF  1683               	bsf	3,5	;RP0=1, select bank1
  1124  1F00  1303               	bcf	3,6	;RP1=0, select bank1
  1125  1F01  00E4               	movwf	(_v+1)^(0+128)
  1126  1F02  1283               	bcf	3,5	;RP0=0, select bank0
  1127  1F03  1303               	bcf	3,6	;RP1=0, select bank0
  1128  1F04  082E               	movf	?_conv,w
  1129  1F05  1683               	bsf	3,5	;RP0=1, select bank1
  1130  1F06  1303               	bcf	3,6	;RP1=0, select bank1
  1131  1F07  00E3               	movwf	_v^(0+128)
  1132  1F08                     l4092:
  1133                           
  1134                           ;main5a.c: 101:       sprintf(f1, "%3.0f",v);
  1135  1F08  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1136  1F09  00CD               	movwf	??_main^(0+128)
  1137  1F0A  084D               	movf	??_main^(0+128),w
  1138  1F0B  00A8               	movwf	sprintf@f^(0+128)
  1139  1F0C  0866               	movf	(_v+3)^(0+128),w
  1140  1F0D  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1141  1F0E  0865               	movf	(_v+2)^(0+128),w
  1142  1F0F  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1143  1F10  0864               	movf	(_v+1)^(0+128),w
  1144  1F11  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1145  1F12  0863               	movf	_v^(0+128),w
  1146  1F13  00A9               	movwf	(?_sprintf^(0+128)+1)
  1147  1F14  30D9               	movlw	(low (_f1| 0))& (0+255)
  1148  1F15  160A  118A  24B4  160A  158A  	fcall	_sprintf
  1149  1F1A                     l4094:
  1150                           
  1151                           ;main5a.c: 103:       TXREG = 12;
  1152  1F1A  300C               	movlw	12
  1153  1F1B  1283               	bcf	3,5	;RP0=0, select bank0
  1154  1F1C  1303               	bcf	3,6	;RP1=0, select bank0
  1155  1F1D  0099               	movwf	25	;volatile
  1156  1F1E                     l4096:
  1157                           
  1158                           ;main5a.c: 104:       send_crct(f1);
  1159  1F1E  30D9               	movlw	(low (_f1| 0))& (0+255)
  1160  1F1F  160A  158A  2424  160A  158A  	fcall	_send_crct
  1161  1F24                     l4098:
  1162                           
  1163                           ;main5a.c: 106:       _delay((unsigned long)((500)*(4000000/4000000.0)));
  1164  1F24  30A5               	movlw	165
  1165  1F25  1683               	bsf	3,5	;RP0=1, select bank1
  1166  1F26  1303               	bcf	3,6	;RP1=0, select bank1
  1167  1F27  00CD               	movwf	??_main^(0+128)
  1168  1F28                     u7327:
  1169  1F28  0BCD               	decfsz	??_main^(0+128),f
  1170  1F29  2F28               	goto	u7327
  1171  1F2A  2F2B               	nop2
  1172  1F2B  2EE8               	goto	l4090
  1173  1F2C  120A  118A  280C   	ljmp	start
  1174  1F2F                     __end_of_main:
  1175                           
  1176                           	psect	text1
  1177  14B4                     __ptext1:	
  1178 ;; *************** function _sprintf *****************
  1179 ;; Defined at:
  1180 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;  sp              1    wreg     PTR unsigned char 
  1183 ;;		 -> f1(10), 
  1184 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1185 ;;		 -> STR_1(6), 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1188 ;;		 -> f1(10), 
  1189 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1190 ;;  tmpval          4   31[BANK1 ] struct .
  1191 ;;  val             4   23[BANK1 ] unsigned long 
  1192 ;;  prec            2   42[BANK1 ] int 
  1193 ;;  eexp            2   35[BANK1 ] int 
  1194 ;;  width           2   29[BANK1 ] int 
  1195 ;;  flag            2   27[BANK1 ] unsigned short 
  1196 ;;  cp              2    0        PTR const unsigned char 
  1197 ;;  len             2    0        unsigned int 
  1198 ;;  c               1   44[BANK1 ] unsigned char 
  1199 ;;  ap              1   22[BANK1 ] PTR void [1]
  1200 ;;		 -> ?_sprintf(2), 
  1201 ;;  d               1    0        unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  2    8[BANK1 ] int 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       5       0       0
  1212 ;;      Locals:         0       0      27       0       0
  1213 ;;      Temps:          0       0       5       0       0
  1214 ;;      Totals:         0       0      37       0       0
  1215 ;;Total ram usage:       37 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    4
  1218 ;; This function calls:
  1219 ;;		___awdiv
  1220 ;;		___fladd
  1221 ;;		___fleq
  1222 ;;		___flge
  1223 ;;		___flmul
  1224 ;;		___flneg
  1225 ;;		___flsub
  1226 ;;		___fltol
  1227 ;;		___lldiv
  1228 ;;		___llmod
  1229 ;;		___wmul
  1230 ;;		___xxtofl
  1231 ;;		__div_to_l_
  1232 ;;		__tdiv_to_l_
  1233 ;;		_fround
  1234 ;;		_isdigit
  1235 ;;		_scale
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _sprintf
  1243  14B4                     _sprintf:
  1244                           
  1245                           ;incstack = 0
  1246                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1247                           ;sprintf@sp stored from wreg
  1248  14B4  1683               	bsf	3,5	;RP0=1, select bank1
  1249  14B5  1303               	bcf	3,6	;RP1=0, select bank1
  1250  14B6  00C9               	movwf	sprintf@sp^(0+128)
  1251  14B7                     l3818:
  1252                           
  1253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1254  14B7  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1255  14B8  00AD               	movwf	??_sprintf^(0+128)
  1256  14B9  082D               	movf	??_sprintf^(0+128),w
  1257  14BA  00B6               	movwf	sprintf@ap^(0+128)
  1258  14BB                     L1:
  1259                           
  1260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1261  14BB  120A  118A  2DB9   	goto	l4068
  1262  14BE                     l3820:
  1263                           
  1264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1265  14BE  3025               	movlw	37
  1266  14BF  064C               	xorwf	sprintf@c^(0+128),w
  1267  14C0  1903               	btfsc	3,2
  1268  14C1  2CC3               	goto	u6851
  1269  14C2  2CC4               	goto	u6850
  1270  14C3                     u6851:
  1271  14C3  2CD0               	goto	l3826
  1272  14C4                     u6850:
  1273  14C4                     l3822:
  1274                           
  1275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1276  14C4  084C               	movf	sprintf@c^(0+128),w
  1277  14C5  00AD               	movwf	??_sprintf^(0+128)
  1278  14C6  0849               	movf	sprintf@sp^(0+128),w
  1279  14C7  0084               	movwf	4
  1280  14C8  082D               	movf	??_sprintf^(0+128),w
  1281  14C9  1383               	bcf	3,7	;select IRP bank0
  1282  14CA  0080               	movwf	0
  1283  14CB                     l3824:
  1284  14CB  3001               	movlw	1
  1285  14CC  00AD               	movwf	??_sprintf^(0+128)
  1286  14CD  082D               	movf	??_sprintf^(0+128),w
  1287  14CE  07C9               	addwf	sprintf@sp^(0+128),f
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1290  14CF  2CBB               	goto	L1
  1291  14D0                     l3826:
  1292                           
  1293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1294  14D0  01BD               	clrf	sprintf@width^(0+128)
  1295  14D1  01BE               	clrf	(sprintf@width+1)^(0+128)
  1296                           
  1297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1298  14D2  01BB               	clrf	sprintf@flag^(0+128)
  1299  14D3  01BC               	clrf	(sprintf@flag+1)^(0+128)
  1300  14D4                     l3828:
  1301                           
  1302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1303  14D4  0828               	movf	sprintf@f^(0+128),w
  1304  14D5  0084               	movwf	4
  1305  14D6  160A  158A  2000  160A  118A  	fcall	stringdir
  1306  14DB  160A  158A  23FE  160A  118A  	fcall	_isdigit
  1307  14E0  1C03               	btfss	3,0
  1308  14E1  2CE3               	goto	u6861
  1309  14E2  2CE4               	goto	u6860
  1310  14E3                     u6861:
  1311  14E3  2D32               	goto	l3840
  1312  14E4                     u6860:
  1313  14E4                     l3830:
  1314                           
  1315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1316  14E4  1683               	bsf	3,5	;RP0=1, select bank1
  1317  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  1318  14E6  01BD               	clrf	sprintf@width^(0+128)
  1319  14E7  01BE               	clrf	(sprintf@width+1)^(0+128)
  1320  14E8                     l3832:
  1321                           
  1322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1323  14E8  300A               	movlw	10
  1324  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  1325  14EA  1303               	bcf	3,6	;RP1=0, select bank0
  1326  14EB  00A0               	movwf	___wmul@multiplier
  1327  14EC  3000               	movlw	0
  1328  14ED  00A1               	movwf	___wmul@multiplier+1
  1329  14EE  1683               	bsf	3,5	;RP0=1, select bank1
  1330  14EF  1303               	bcf	3,6	;RP1=0, select bank1
  1331  14F0  083E               	movf	(sprintf@width+1)^(0+128),w
  1332  14F1  1283               	bcf	3,5	;RP0=0, select bank0
  1333  14F2  1303               	bcf	3,6	;RP1=0, select bank0
  1334  14F3  00A3               	movwf	___wmul@multiplicand+1
  1335  14F4  1683               	bsf	3,5	;RP0=1, select bank1
  1336  14F5  1303               	bcf	3,6	;RP1=0, select bank1
  1337  14F6  083D               	movf	sprintf@width^(0+128),w
  1338  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  1339  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  1340  14F9  00A2               	movwf	___wmul@multiplicand
  1341  14FA  160A  158A  2449  160A  118A  	fcall	___wmul
  1342  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  1343  1500  1303               	bcf	3,6	;RP1=0, select bank0
  1344  1501  0821               	movf	?___wmul+1,w
  1345  1502  1683               	bsf	3,5	;RP0=1, select bank1
  1346  1503  1303               	bcf	3,6	;RP1=0, select bank1
  1347  1504  00BE               	movwf	(sprintf@width+1)^(0+128)
  1348  1505  1283               	bcf	3,5	;RP0=0, select bank0
  1349  1506  1303               	bcf	3,6	;RP1=0, select bank0
  1350  1507  0820               	movf	?___wmul,w
  1351  1508  1683               	bsf	3,5	;RP0=1, select bank1
  1352  1509  1303               	bcf	3,6	;RP1=0, select bank1
  1353  150A  00BD               	movwf	sprintf@width^(0+128)
  1354  150B                     l3834:
  1355                           
  1356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1357  150B  0828               	movf	sprintf@f^(0+128),w
  1358  150C  0084               	movwf	4
  1359  150D  160A  158A  2000  160A  118A  	fcall	stringdir
  1360  1512  3ED0               	addlw	208
  1361  1513  00AD               	movwf	??_sprintf^(0+128)
  1362  1514  30FF               	movlw	255
  1363  1515  1803               	skipnc
  1364  1516  3000               	movlw	0
  1365  1517  00AE               	movwf	(??_sprintf^(0+128)+1)
  1366  1518  082D               	movf	??_sprintf^(0+128),w
  1367  1519  07BD               	addwf	sprintf@width^(0+128),f
  1368  151A  1803               	skipnc
  1369  151B  0ABE               	incf	(sprintf@width+1)^(0+128),f
  1370  151C  082E               	movf	(??_sprintf+1)^(0+128),w
  1371  151D  07BE               	addwf	(sprintf@width+1)^(0+128),f
  1372  151E                     l3836:
  1373  151E  3001               	movlw	1
  1374  151F  00AD               	movwf	??_sprintf^(0+128)
  1375  1520  082D               	movf	??_sprintf^(0+128),w
  1376  1521  07A8               	addwf	sprintf@f^(0+128),f
  1377  1522                     l3838:
  1378                           
  1379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1380  1522  0828               	movf	sprintf@f^(0+128),w
  1381  1523  0084               	movwf	4
  1382  1524  160A  158A  2000  160A  118A  	fcall	stringdir
  1383  1529  160A  158A  23FE  160A  118A  	fcall	_isdigit
  1384  152E  1803               	btfsc	3,0
  1385  152F  2D31               	goto	u6871
  1386  1530  2D32               	goto	u6870
  1387  1531                     u6871:
  1388  1531  2CE8               	goto	l3832
  1389  1532                     u6870:
  1390  1532                     l3840:
  1391                           
  1392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1393  1532  1683               	bsf	3,5	;RP0=1, select bank1
  1394  1533  1303               	bcf	3,6	;RP1=0, select bank1
  1395  1534  0828               	movf	sprintf@f^(0+128),w
  1396  1535  0084               	movwf	4
  1397  1536  160A  158A  2000  160A  118A  	fcall	stringdir
  1398  153B  3A2E               	xorlw	46
  1399  153C  1D03               	skipz
  1400  153D  2D3F               	goto	u6881
  1401  153E  2D40               	goto	u6880
  1402  153F                     u6881:
  1403  153F  2D93               	goto	l3856
  1404  1540                     u6880:
  1405  1540                     l3842:
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1408  1540  173C               	bsf	(sprintf@flag^(0+128)+1),6
  1409  1541                     l3844:
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1412  1541  3001               	movlw	1
  1413  1542  00AD               	movwf	??_sprintf^(0+128)
  1414  1543  082D               	movf	??_sprintf^(0+128),w
  1415  1544  07A8               	addwf	sprintf@f^(0+128),f
  1416  1545                     l3846:
  1417                           
  1418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1419  1545  01CA               	clrf	sprintf@prec^(0+128)
  1420  1546  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1421                           
  1422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1423  1547  2D82               	goto	l3854
  1424  1548                     l3848:
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1427  1548  300A               	movlw	10
  1428  1549  1283               	bcf	3,5	;RP0=0, select bank0
  1429  154A  1303               	bcf	3,6	;RP1=0, select bank0
  1430  154B  00A0               	movwf	___wmul@multiplier
  1431  154C  3000               	movlw	0
  1432  154D  00A1               	movwf	___wmul@multiplier+1
  1433  154E  1683               	bsf	3,5	;RP0=1, select bank1
  1434  154F  1303               	bcf	3,6	;RP1=0, select bank1
  1435  1550  084B               	movf	(sprintf@prec+1)^(0+128),w
  1436  1551  1283               	bcf	3,5	;RP0=0, select bank0
  1437  1552  1303               	bcf	3,6	;RP1=0, select bank0
  1438  1553  00A3               	movwf	___wmul@multiplicand+1
  1439  1554  1683               	bsf	3,5	;RP0=1, select bank1
  1440  1555  1303               	bcf	3,6	;RP1=0, select bank1
  1441  1556  084A               	movf	sprintf@prec^(0+128),w
  1442  1557  1283               	bcf	3,5	;RP0=0, select bank0
  1443  1558  1303               	bcf	3,6	;RP1=0, select bank0
  1444  1559  00A2               	movwf	___wmul@multiplicand
  1445  155A  160A  158A  2449  160A  118A  	fcall	___wmul
  1446  155F  1283               	bcf	3,5	;RP0=0, select bank0
  1447  1560  1303               	bcf	3,6	;RP1=0, select bank0
  1448  1561  0821               	movf	?___wmul+1,w
  1449  1562  1683               	bsf	3,5	;RP0=1, select bank1
  1450  1563  1303               	bcf	3,6	;RP1=0, select bank1
  1451  1564  00CB               	movwf	(sprintf@prec+1)^(0+128)
  1452  1565  1283               	bcf	3,5	;RP0=0, select bank0
  1453  1566  1303               	bcf	3,6	;RP1=0, select bank0
  1454  1567  0820               	movf	?___wmul,w
  1455  1568  1683               	bsf	3,5	;RP0=1, select bank1
  1456  1569  1303               	bcf	3,6	;RP1=0, select bank1
  1457  156A  00CA               	movwf	sprintf@prec^(0+128)
  1458  156B                     l3850:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1461  156B  0828               	movf	sprintf@f^(0+128),w
  1462  156C  0084               	movwf	4
  1463  156D  160A  158A  2000  160A  118A  	fcall	stringdir
  1464  1572  3ED0               	addlw	208
  1465  1573  00AD               	movwf	??_sprintf^(0+128)
  1466  1574  30FF               	movlw	255
  1467  1575  1803               	skipnc
  1468  1576  3000               	movlw	0
  1469  1577  00AE               	movwf	(??_sprintf^(0+128)+1)
  1470  1578  082D               	movf	??_sprintf^(0+128),w
  1471  1579  07CA               	addwf	sprintf@prec^(0+128),f
  1472  157A  1803               	skipnc
  1473  157B  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  1474  157C  082E               	movf	(??_sprintf+1)^(0+128),w
  1475  157D  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  1476  157E                     l3852:
  1477  157E  3001               	movlw	1
  1478  157F  00AD               	movwf	??_sprintf^(0+128)
  1479  1580  082D               	movf	??_sprintf^(0+128),w
  1480  1581  07A8               	addwf	sprintf@f^(0+128),f
  1481  1582                     l3854:
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1484  1582  0828               	movf	sprintf@f^(0+128),w
  1485  1583  0084               	movwf	4
  1486  1584  160A  158A  2000  160A  118A  	fcall	stringdir
  1487  1589  160A  158A  23FE  160A  118A  	fcall	_isdigit
  1488  158E  1803               	btfsc	3,0
  1489  158F  2D91               	goto	u6891
  1490  1590  2D92               	goto	u6890
  1491  1591                     u6891:
  1492  1591  2D48               	goto	l3848
  1493  1592                     u6890:
  1494  1592  2D99               	goto	l3862
  1495  1593                     l3856:
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1498  1593  01CA               	clrf	sprintf@prec^(0+128)
  1499  1594  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1500  1595                     l3858:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1503  1595  163C               	bsf	(sprintf@flag^(0+128)+1),4
  1504  1596  2D99               	goto	l3862
  1505  1597                     l260:	
  1506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1507                           
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1510  1597  153C               	bsf	(sprintf@flag^(0+128)+1),2
  1511                           
  1512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1513  1598  2DB5               	goto	l3864
  1514  1599                     l3862:
  1515  1599  3001               	movlw	1
  1516  159A  1683               	bsf	3,5	;RP0=1, select bank1
  1517  159B  1303               	bcf	3,6	;RP1=0, select bank1
  1518  159C  07A8               	addwf	sprintf@f^(0+128),f
  1519  159D  30FF               	movlw	-1
  1520  159E  0728               	addwf	sprintf@f^(0+128),w
  1521  159F  0084               	movwf	4
  1522  15A0  160A  158A  2000  160A  118A  	fcall	stringdir
  1523  15A5  00CC               	movwf	sprintf@c^(0+128)
  1524  15A6  00AD               	movwf	??_sprintf^(0+128)
  1525  15A7  01AE               	clrf	(??_sprintf^(0+128)+1)
  1526                           
  1527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1528                           ; Switch size 1, requested type "simple"
  1529                           ; Number of cases is 1, Range of values is 0 to 0
  1530                           ; switch strategies available:
  1531                           ; Name         Instructions Cycles
  1532                           ; simple_byte            4     3 (average)
  1533                           ; direct_byte           11     8 (fixed)
  1534                           ; jumptable            260     6 (fixed)
  1535                           ;	Chosen strategy is simple_byte
  1536  15A8  082E               	movf	(??_sprintf+1)^(0+128),w
  1537  15A9  3A00               	xorlw	0	; case 0
  1538  15AA  1903               	skipnz
  1539  15AB  2DAD               	goto	l4130
  1540  15AC  2CBB               	goto	L1
  1541  15AD                     l4130:
  1542                           
  1543                           ; Switch size 1, requested type "simple"
  1544                           ; Number of cases is 2, Range of values is 0 to 102
  1545                           ; switch strategies available:
  1546                           ; Name         Instructions Cycles
  1547                           ; simple_byte            7     4 (average)
  1548                           ; jumptable            260     6 (fixed)
  1549                           ;	Chosen strategy is simple_byte
  1550  15AD  082D               	movf	??_sprintf^(0+128),w
  1551  15AE  3A00               	xorlw	0	; case 0
  1552  15AF  1903               	skipnz
  1553  15B0  2FFD               	goto	L3
  1554  15B1  3A66               	xorlw	102	; case 102
  1555  15B2  1903               	skipnz
  1556  15B3  2D97               	goto	l260
  1557  15B4  2CBB               	goto	L1
  1558  15B5                     l3864:
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1561  15B5  3000               	movlw	0
  1562  15B6  053B               	andwf	sprintf@flag^(0+128),w
  1563  15B7  00AD               	movwf	??_sprintf^(0+128)
  1564  15B8  3007               	movlw	7
  1565  15B9  053C               	andwf	(sprintf@flag+1)^(0+128),w
  1566  15BA  00AE               	movwf	(??_sprintf+1)^(0+128)
  1567  15BB  082D               	movf	??_sprintf^(0+128),w
  1568  15BC  042E               	iorwf	(??_sprintf^(0+128)+1),w
  1569  15BD  1903               	btfsc	3,2
  1570  15BE  2DC0               	goto	u6901
  1571  15BF  2DC3               	goto	u6900
  1572  15C0                     u6901:
  1573  15C0  120A  118A  2CF4   	goto	l4022
  1574  15C3                     u6900:
  1575  15C3                     l3866:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1578  15C3  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  1579  15C4  2DC6               	goto	u6911
  1580  15C5  2DC7               	goto	u6910
  1581  15C6                     u6911:
  1582  15C6  2DCB               	goto	l3870
  1583  15C7                     u6910:
  1584  15C7                     l3868:
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1587  15C7  3006               	movlw	6
  1588  15C8  00CA               	movwf	sprintf@prec^(0+128)
  1589  15C9  3000               	movlw	0
  1590  15CA  00CB               	movwf	(sprintf@prec^(0+128)+1)
  1591  15CB                     l3870:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1594  15CB  0836               	movf	sprintf@ap^(0+128),w
  1595  15CC  0084               	movwf	4
  1596  15CD  1383               	bcf	3,7	;select IRP bank0
  1597  15CE  0800               	movf	0,w
  1598  15CF  00C5               	movwf	sprintf@fval^(0+128)
  1599  15D0  0A84               	incf	4,f
  1600  15D1  0800               	movf	0,w
  1601  15D2  00C6               	movwf	(sprintf@fval+1)^(0+128)
  1602  15D3  0A84               	incf	4,f
  1603  15D4  0800               	movf	0,w
  1604  15D5  00C7               	movwf	(sprintf@fval+2)^(0+128)
  1605  15D6  0A84               	incf	4,f
  1606  15D7  0800               	movf	0,w
  1607  15D8  00C8               	movwf	(sprintf@fval+3)^(0+128)
  1608  15D9                     l3872:
  1609  15D9  3004               	movlw	4
  1610  15DA  00AD               	movwf	??_sprintf^(0+128)
  1611  15DB  082D               	movf	??_sprintf^(0+128),w
  1612  15DC  07B6               	addwf	sprintf@ap^(0+128),f
  1613  15DD                     l3874:
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1616  15DD  0848               	movf	(sprintf@fval+3)^(0+128),w
  1617  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  1618  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  1619  15E0  00A3               	movwf	___flge@ff1+3
  1620  15E1  1683               	bsf	3,5	;RP0=1, select bank1
  1621  15E2  1303               	bcf	3,6	;RP1=0, select bank1
  1622  15E3  0847               	movf	(sprintf@fval+2)^(0+128),w
  1623  15E4  1283               	bcf	3,5	;RP0=0, select bank0
  1624  15E5  1303               	bcf	3,6	;RP1=0, select bank0
  1625  15E6  00A2               	movwf	___flge@ff1+2
  1626  15E7  1683               	bsf	3,5	;RP0=1, select bank1
  1627  15E8  1303               	bcf	3,6	;RP1=0, select bank1
  1628  15E9  0846               	movf	(sprintf@fval+1)^(0+128),w
  1629  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  1630  15EB  1303               	bcf	3,6	;RP1=0, select bank0
  1631  15EC  00A1               	movwf	___flge@ff1+1
  1632  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  1633  15EE  1303               	bcf	3,6	;RP1=0, select bank1
  1634  15EF  0845               	movf	sprintf@fval^(0+128),w
  1635  15F0  1283               	bcf	3,5	;RP0=0, select bank0
  1636  15F1  1303               	bcf	3,6	;RP1=0, select bank0
  1637  15F2  00A0               	movwf	___flge@ff1
  1638  15F3  3000               	movlw	0
  1639  15F4  00A7               	movwf	___flge@ff2+3
  1640  15F5  3000               	movlw	0
  1641  15F6  00A6               	movwf	___flge@ff2+2
  1642  15F7  3000               	movlw	0
  1643  15F8  00A5               	movwf	___flge@ff2+1
  1644  15F9  3000               	movlw	0
  1645  15FA  00A4               	movwf	___flge@ff2
  1646  15FB  160A  118A  200F  160A  118A  	fcall	___flge
  1647  1600  1803               	btfsc	3,0
  1648  1601  2E03               	goto	u6921
  1649  1602  2E04               	goto	u6920
  1650  1603                     u6921:
  1651  1603  2E3D               	goto	l3880
  1652  1604                     u6920:
  1653  1604                     l3876:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1656  1604  1683               	bsf	3,5	;RP0=1, select bank1
  1657  1605  1303               	bcf	3,6	;RP1=0, select bank1
  1658  1606  0848               	movf	(sprintf@fval+3)^(0+128),w
  1659  1607  1283               	bcf	3,5	;RP0=0, select bank0
  1660  1608  1303               	bcf	3,6	;RP1=0, select bank0
  1661  1609  00A3               	movwf	___flneg@f1+3
  1662  160A  1683               	bsf	3,5	;RP0=1, select bank1
  1663  160B  1303               	bcf	3,6	;RP1=0, select bank1
  1664  160C  0847               	movf	(sprintf@fval+2)^(0+128),w
  1665  160D  1283               	bcf	3,5	;RP0=0, select bank0
  1666  160E  1303               	bcf	3,6	;RP1=0, select bank0
  1667  160F  00A2               	movwf	___flneg@f1+2
  1668  1610  1683               	bsf	3,5	;RP0=1, select bank1
  1669  1611  1303               	bcf	3,6	;RP1=0, select bank1
  1670  1612  0846               	movf	(sprintf@fval+1)^(0+128),w
  1671  1613  1283               	bcf	3,5	;RP0=0, select bank0
  1672  1614  1303               	bcf	3,6	;RP1=0, select bank0
  1673  1615  00A1               	movwf	___flneg@f1+1
  1674  1616  1683               	bsf	3,5	;RP0=1, select bank1
  1675  1617  1303               	bcf	3,6	;RP1=0, select bank1
  1676  1618  0845               	movf	sprintf@fval^(0+128),w
  1677  1619  1283               	bcf	3,5	;RP0=0, select bank0
  1678  161A  1303               	bcf	3,6	;RP1=0, select bank0
  1679  161B  00A0               	movwf	___flneg@f1
  1680  161C  160A  118A  2002  160A  118A  	fcall	___flneg
  1681  1621  1283               	bcf	3,5	;RP0=0, select bank0
  1682  1622  1303               	bcf	3,6	;RP1=0, select bank0
  1683  1623  0823               	movf	?___flneg+3,w
  1684  1624  1683               	bsf	3,5	;RP0=1, select bank1
  1685  1625  1303               	bcf	3,6	;RP1=0, select bank1
  1686  1626  00C8               	movwf	(sprintf@fval+3)^(0+128)
  1687  1627  1283               	bcf	3,5	;RP0=0, select bank0
  1688  1628  1303               	bcf	3,6	;RP1=0, select bank0
  1689  1629  0822               	movf	?___flneg+2,w
  1690  162A  1683               	bsf	3,5	;RP0=1, select bank1
  1691  162B  1303               	bcf	3,6	;RP1=0, select bank1
  1692  162C  00C7               	movwf	(sprintf@fval+2)^(0+128)
  1693  162D  1283               	bcf	3,5	;RP0=0, select bank0
  1694  162E  1303               	bcf	3,6	;RP1=0, select bank0
  1695  162F  0821               	movf	?___flneg+1,w
  1696  1630  1683               	bsf	3,5	;RP0=1, select bank1
  1697  1631  1303               	bcf	3,6	;RP1=0, select bank1
  1698  1632  00C6               	movwf	(sprintf@fval+1)^(0+128)
  1699  1633  1283               	bcf	3,5	;RP0=0, select bank0
  1700  1634  1303               	bcf	3,6	;RP1=0, select bank0
  1701  1635  0820               	movf	?___flneg,w
  1702  1636  1683               	bsf	3,5	;RP0=1, select bank1
  1703  1637  1303               	bcf	3,6	;RP1=0, select bank1
  1704  1638  00C5               	movwf	sprintf@fval^(0+128)
  1705  1639                     l3878:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1708  1639  3003               	movlw	3
  1709  163A  04BB               	iorwf	sprintf@flag^(0+128),f
  1710  163B  3000               	movlw	0
  1711  163C  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  1712  163D                     l3880:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1715  163D  1683               	bsf	3,5	;RP0=1, select bank1
  1716  163E  1303               	bcf	3,6	;RP1=0, select bank1
  1717  163F  01C3               	clrf	sprintf@eexp^(0+128)
  1718  1640  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  1719  1641                     l3882:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1722  1641  0848               	movf	(sprintf@fval+3)^(0+128),w
  1723  1642  1283               	bcf	3,5	;RP0=0, select bank0
  1724  1643  1303               	bcf	3,6	;RP1=0, select bank0
  1725  1644  00A3               	movwf	___fleq@ff1+3
  1726  1645  1683               	bsf	3,5	;RP0=1, select bank1
  1727  1646  1303               	bcf	3,6	;RP1=0, select bank1
  1728  1647  0847               	movf	(sprintf@fval+2)^(0+128),w
  1729  1648  1283               	bcf	3,5	;RP0=0, select bank0
  1730  1649  1303               	bcf	3,6	;RP1=0, select bank0
  1731  164A  00A2               	movwf	___fleq@ff1+2
  1732  164B  1683               	bsf	3,5	;RP0=1, select bank1
  1733  164C  1303               	bcf	3,6	;RP1=0, select bank1
  1734  164D  0846               	movf	(sprintf@fval+1)^(0+128),w
  1735  164E  1283               	bcf	3,5	;RP0=0, select bank0
  1736  164F  1303               	bcf	3,6	;RP1=0, select bank0
  1737  1650  00A1               	movwf	___fleq@ff1+1
  1738  1651  1683               	bsf	3,5	;RP0=1, select bank1
  1739  1652  1303               	bcf	3,6	;RP1=0, select bank1
  1740  1653  0845               	movf	sprintf@fval^(0+128),w
  1741  1654  1283               	bcf	3,5	;RP0=0, select bank0
  1742  1655  1303               	bcf	3,6	;RP1=0, select bank0
  1743  1656  00A0               	movwf	___fleq@ff1
  1744  1657  3000               	movlw	0
  1745  1658  00A7               	movwf	___fleq@ff2+3
  1746  1659  3000               	movlw	0
  1747  165A  00A6               	movwf	___fleq@ff2+2
  1748  165B  3000               	movlw	0
  1749  165C  00A5               	movwf	___fleq@ff2+1
  1750  165D  3000               	movlw	0
  1751  165E  00A4               	movwf	___fleq@ff2
  1752  165F  160A  158A  257E  160A  118A  	fcall	___fleq
  1753  1664  1803               	btfsc	3,0
  1754  1665  2E67               	goto	u6931
  1755  1666  2E68               	goto	u6930
  1756  1667                     u6931:
  1757  1667  2F94               	goto	l3908
  1758  1668                     u6930:
  1759  1668                     l3884:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1762  1668  1003               	clrc
  1763  1669  1683               	bsf	3,5	;RP0=1, select bank1
  1764  166A  1303               	bcf	3,6	;RP1=0, select bank1
  1765  166B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  1766  166C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  1767  166D  3E82               	addlw	130
  1768  166E  00C3               	movwf	sprintf@eexp^(0+128)
  1769  166F  30FF               	movlw	255
  1770  1670  1803               	skipnc
  1771  1671  3000               	movlw	0
  1772  1672  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  1773  1673                     l3886:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1776  1673  30FF               	movlw	255
  1777  1674  07C3               	addwf	sprintf@eexp^(0+128),f
  1778  1675  1803               	skipnc
  1779  1676  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  1780  1677  30FF               	movlw	255
  1781  1678  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  1782  1679                     l3888:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1785  1679  3003               	movlw	3
  1786  167A  1283               	bcf	3,5	;RP0=0, select bank0
  1787  167B  1303               	bcf	3,6	;RP1=0, select bank0
  1788  167C  00A0               	movwf	___wmul@multiplier
  1789  167D  3000               	movlw	0
  1790  167E  00A1               	movwf	___wmul@multiplier+1
  1791  167F  1683               	bsf	3,5	;RP0=1, select bank1
  1792  1680  1303               	bcf	3,6	;RP1=0, select bank1
  1793  1681  0844               	movf	(sprintf@eexp+1)^(0+128),w
  1794  1682  1283               	bcf	3,5	;RP0=0, select bank0
  1795  1683  1303               	bcf	3,6	;RP1=0, select bank0
  1796  1684  00A3               	movwf	___wmul@multiplicand+1
  1797  1685  1683               	bsf	3,5	;RP0=1, select bank1
  1798  1686  1303               	bcf	3,6	;RP1=0, select bank1
  1799  1687  0843               	movf	sprintf@eexp^(0+128),w
  1800  1688  1283               	bcf	3,5	;RP0=0, select bank0
  1801  1689  1303               	bcf	3,6	;RP1=0, select bank0
  1802  168A  00A2               	movwf	___wmul@multiplicand
  1803  168B  160A  158A  2449  160A  118A  	fcall	___wmul
  1804  1690  1283               	bcf	3,5	;RP0=0, select bank0
  1805  1691  1303               	bcf	3,6	;RP1=0, select bank0
  1806  1692  0821               	movf	?___wmul+1,w
  1807  1693  1683               	bsf	3,5	;RP0=1, select bank1
  1808  1694  1303               	bcf	3,6	;RP1=0, select bank1
  1809  1695  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  1810  1696  1283               	bcf	3,5	;RP0=0, select bank0
  1811  1697  1303               	bcf	3,6	;RP1=0, select bank0
  1812  1698  0820               	movf	?___wmul,w
  1813  1699  1683               	bsf	3,5	;RP0=1, select bank1
  1814  169A  1303               	bcf	3,6	;RP1=0, select bank1
  1815  169B  00C3               	movwf	sprintf@eexp^(0+128)
  1816  169C                     l3890:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1819  169C  300A               	movlw	10
  1820  169D  1283               	bcf	3,5	;RP0=0, select bank0
  1821  169E  1303               	bcf	3,6	;RP1=0, select bank0
  1822  169F  00A6               	movwf	___awdiv@divisor
  1823  16A0  3000               	movlw	0
  1824  16A1  00A7               	movwf	___awdiv@divisor+1
  1825  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  1826  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  1827  16A4  0844               	movf	(sprintf@eexp+1)^(0+128),w
  1828  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  1829  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  1830  16A7  00A9               	movwf	___awdiv@dividend+1
  1831  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  1832  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  1833  16AA  0843               	movf	sprintf@eexp^(0+128),w
  1834  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  1835  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  1836  16AD  00A8               	movwf	___awdiv@dividend
  1837  16AE  160A  158A  2797  160A  118A  	fcall	___awdiv
  1838  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  1839  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  1840  16B5  0827               	movf	?___awdiv+1,w
  1841  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  1842  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  1843  16B8  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  1844  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  1845  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  1846  16BB  0826               	movf	?___awdiv,w
  1847  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  1848  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  1849  16BE  00C3               	movwf	sprintf@eexp^(0+128)
  1850  16BF                     l3892:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1853  16BF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  1854  16C0  2EC2               	goto	u6941
  1855  16C1  2EC3               	goto	u6940
  1856  16C2                     u6941:
  1857  16C2  2EC9               	goto	l3896
  1858  16C3                     u6940:
  1859  16C3                     l3894:
  1860                           
  1861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1862  16C3  30FF               	movlw	255
  1863  16C4  07C3               	addwf	sprintf@eexp^(0+128),f
  1864  16C5  1803               	skipnc
  1865  16C6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  1866  16C7  30FF               	movlw	255
  1867  16C8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  1868  16C9                     l3896:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1871  16C9  0343               	decf	sprintf@eexp^(0+128),w
  1872  16CA  3AFF               	xorlw	255
  1873  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  1874  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  1875  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  1876  16D2  084B               	movf	?_scale+3,w
  1877  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  1878  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  1879  16D5  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  1880  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  1881  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  1882  16D8  084A               	movf	?_scale+2,w
  1883  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  1884  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  1885  16DB  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  1886  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  1887  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  1888  16DE  0849               	movf	?_scale+1,w
  1889  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  1890  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  1891  16E1  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  1892  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  1893  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  1894  16E4  0848               	movf	?_scale,w
  1895  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  1896  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  1897  16E7  00BF               	movwf	sprintf@tmpval^(0+128)
  1898  16E8                     l3898:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1901  16E8  0848               	movf	(sprintf@fval+3)^(0+128),w
  1902  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  1903  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  1904  16EB  00B1               	movwf	___flmul@b+3
  1905  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  1906  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  1907  16EE  0847               	movf	(sprintf@fval+2)^(0+128),w
  1908  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  1909  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  1910  16F1  00B0               	movwf	___flmul@b+2
  1911  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  1912  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  1913  16F4  0846               	movf	(sprintf@fval+1)^(0+128),w
  1914  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  1915  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  1916  16F7  00AF               	movwf	___flmul@b+1
  1917  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  1918  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  1919  16FA  0845               	movf	sprintf@fval^(0+128),w
  1920  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  1921  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  1922  16FD  00AE               	movwf	___flmul@b
  1923  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  1924  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  1925  1700  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  1926  1701  1283               	bcf	3,5	;RP0=0, select bank0
  1927  1702  1303               	bcf	3,6	;RP1=0, select bank0
  1928  1703  00B5               	movwf	___flmul@a+3
  1929  1704  1683               	bsf	3,5	;RP0=1, select bank1
  1930  1705  1303               	bcf	3,6	;RP1=0, select bank1
  1931  1706  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  1932  1707  1283               	bcf	3,5	;RP0=0, select bank0
  1933  1708  1303               	bcf	3,6	;RP1=0, select bank0
  1934  1709  00B4               	movwf	___flmul@a+2
  1935  170A  1683               	bsf	3,5	;RP0=1, select bank1
  1936  170B  1303               	bcf	3,6	;RP1=0, select bank1
  1937  170C  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  1938  170D  1283               	bcf	3,5	;RP0=0, select bank0
  1939  170E  1303               	bcf	3,6	;RP1=0, select bank0
  1940  170F  00B3               	movwf	___flmul@a+1
  1941  1710  1683               	bsf	3,5	;RP0=1, select bank1
  1942  1711  1303               	bcf	3,6	;RP1=0, select bank1
  1943  1712  083F               	movf	sprintf@tmpval^(0+128),w
  1944  1713  1283               	bcf	3,5	;RP0=0, select bank0
  1945  1714  1303               	bcf	3,6	;RP1=0, select bank0
  1946  1715  00B2               	movwf	___flmul@a
  1947  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  1948  171B  1283               	bcf	3,5	;RP0=0, select bank0
  1949  171C  1303               	bcf	3,6	;RP1=0, select bank0
  1950  171D  0831               	movf	?___flmul+3,w
  1951  171E  1683               	bsf	3,5	;RP0=1, select bank1
  1952  171F  1303               	bcf	3,6	;RP1=0, select bank1
  1953  1720  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  1954  1721  1283               	bcf	3,5	;RP0=0, select bank0
  1955  1722  1303               	bcf	3,6	;RP1=0, select bank0
  1956  1723  0830               	movf	?___flmul+2,w
  1957  1724  1683               	bsf	3,5	;RP0=1, select bank1
  1958  1725  1303               	bcf	3,6	;RP1=0, select bank1
  1959  1726  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  1960  1727  1283               	bcf	3,5	;RP0=0, select bank0
  1961  1728  1303               	bcf	3,6	;RP1=0, select bank0
  1962  1729  082F               	movf	?___flmul+1,w
  1963  172A  1683               	bsf	3,5	;RP0=1, select bank1
  1964  172B  1303               	bcf	3,6	;RP1=0, select bank1
  1965  172C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  1966  172D  1283               	bcf	3,5	;RP0=0, select bank0
  1967  172E  1303               	bcf	3,6	;RP1=0, select bank0
  1968  172F  082E               	movf	?___flmul,w
  1969  1730  1683               	bsf	3,5	;RP0=1, select bank1
  1970  1731  1303               	bcf	3,6	;RP1=0, select bank1
  1971  1732  00BF               	movwf	sprintf@tmpval^(0+128)
  1972  1733                     l3900:
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  1975  1733  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  1976  1734  1283               	bcf	3,5	;RP0=0, select bank0
  1977  1735  1303               	bcf	3,6	;RP1=0, select bank0
  1978  1736  00A3               	movwf	___flge@ff1+3
  1979  1737  1683               	bsf	3,5	;RP0=1, select bank1
  1980  1738  1303               	bcf	3,6	;RP1=0, select bank1
  1981  1739  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  1982  173A  1283               	bcf	3,5	;RP0=0, select bank0
  1983  173B  1303               	bcf	3,6	;RP1=0, select bank0
  1984  173C  00A2               	movwf	___flge@ff1+2
  1985  173D  1683               	bsf	3,5	;RP0=1, select bank1
  1986  173E  1303               	bcf	3,6	;RP1=0, select bank1
  1987  173F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  1988  1740  1283               	bcf	3,5	;RP0=0, select bank0
  1989  1741  1303               	bcf	3,6	;RP1=0, select bank0
  1990  1742  00A1               	movwf	___flge@ff1+1
  1991  1743  1683               	bsf	3,5	;RP0=1, select bank1
  1992  1744  1303               	bcf	3,6	;RP1=0, select bank1
  1993  1745  083F               	movf	sprintf@tmpval^(0+128),w
  1994  1746  1283               	bcf	3,5	;RP0=0, select bank0
  1995  1747  1303               	bcf	3,6	;RP1=0, select bank0
  1996  1748  00A0               	movwf	___flge@ff1
  1997  1749  303F               	movlw	63
  1998  174A  00A7               	movwf	___flge@ff2+3
  1999  174B  3080               	movlw	128
  2000  174C  00A6               	movwf	___flge@ff2+2
  2001  174D  3000               	movlw	0
  2002  174E  00A5               	movwf	___flge@ff2+1
  2003  174F  3000               	movlw	0
  2004  1750  00A4               	movwf	___flge@ff2
  2005  1751  160A  118A  200F  160A  118A  	fcall	___flge
  2006  1756  1803               	btfsc	3,0
  2007  1757  2F59               	goto	u6951
  2008  1758  2F5A               	goto	u6950
  2009  1759                     u6951:
  2010  1759  2F63               	goto	l3904
  2011  175A                     u6950:
  2012  175A                     l3902:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2015  175A  30FF               	movlw	255
  2016  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2017  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2018  175D  07C3               	addwf	sprintf@eexp^(0+128),f
  2019  175E  1803               	skipnc
  2020  175F  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2021  1760  30FF               	movlw	255
  2022  1761  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2023  1762  2F94               	goto	l3908
  2024  1763                     l3904:
  2025  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2026  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2027  1765  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2028  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2029  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2030  1768  00A3               	movwf	___flge@ff1+3
  2031  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2032  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2033  176B  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2034  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2035  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2036  176E  00A2               	movwf	___flge@ff1+2
  2037  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2038  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2039  1771  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2040  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2041  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2042  1774  00A1               	movwf	___flge@ff1+1
  2043  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2044  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2045  1777  083F               	movf	sprintf@tmpval^(0+128),w
  2046  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2047  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2048  177A  00A0               	movwf	___flge@ff1
  2049  177B  3041               	movlw	65
  2050  177C  00A7               	movwf	___flge@ff2+3
  2051  177D  3020               	movlw	32
  2052  177E  00A6               	movwf	___flge@ff2+2
  2053  177F  3000               	movlw	0
  2054  1780  00A5               	movwf	___flge@ff2+1
  2055  1781  3000               	movlw	0
  2056  1782  00A4               	movwf	___flge@ff2
  2057  1783  160A  118A  200F  160A  118A  	fcall	___flge
  2058  1788  1C03               	btfss	3,0
  2059  1789  2F8B               	goto	u6961
  2060  178A  2F8C               	goto	u6960
  2061  178B                     u6961:
  2062  178B  2F94               	goto	l3908
  2063  178C                     u6960:
  2064  178C                     l3906:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2067  178C  3001               	movlw	1
  2068  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2069  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2070  178F  07C3               	addwf	sprintf@eexp^(0+128),f
  2071  1790  1803               	skipnc
  2072  1791  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2073  1792  3000               	movlw	0
  2074  1793  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2075  1794                     l3908:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2078  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2079  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2080  1796  084B               	movf	(sprintf@prec+1)^(0+128),w
  2081  1797  3A80               	xorlw	128
  2082  1798  00FF               	movwf	btemp+1
  2083  1799  3080               	movlw	128
  2084  179A  027F               	subwf	btemp+1,w
  2085  179B  1D03               	skipz
  2086  179C  2F9F               	goto	u6975
  2087  179D  300D               	movlw	13
  2088  179E  024A               	subwf	sprintf@prec^(0+128),w
  2089  179F                     u6975:
  2090  179F  1803               	skipnc
  2091  17A0  2FA2               	goto	u6971
  2092  17A1  2FA3               	goto	u6970
  2093  17A2                     u6971:
  2094  17A2  2FEA               	goto	l3912
  2095  17A3                     u6970:
  2096  17A3                     l3910:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2099  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2100  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2101  17A5  084A               	movf	sprintf@prec^(0+128),w
  2102  17A6  120A  118A  25D2  160A  118A  	fcall	_fround
  2103  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2104  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2105  17AD  084B               	movf	?_fround+3,w
  2106  17AE  00DF               	movwf	___fladd@b+3
  2107  17AF  084A               	movf	?_fround+2,w
  2108  17B0  00DE               	movwf	___fladd@b+2
  2109  17B1  0849               	movf	?_fround+1,w
  2110  17B2  00DD               	movwf	___fladd@b+1
  2111  17B3  0848               	movf	?_fround,w
  2112  17B4  00DC               	movwf	___fladd@b
  2113  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2114  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2115  17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2116  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2117  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2118  17BA  00E3               	movwf	___fladd@a+3
  2119  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2120  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2121  17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2122  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2123  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2124  17C0  00E2               	movwf	___fladd@a+2
  2125  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2126  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2127  17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2128  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2129  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2130  17C6  00E1               	movwf	___fladd@a+1
  2131  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2132  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2133  17C9  0845               	movf	sprintf@fval^(0+128),w
  2134  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2135  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2136  17CC  00E0               	movwf	___fladd@a
  2137  17CD  160A  118A  222C  160A  118A  	fcall	___fladd
  2138  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2139  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2140  17D4  085F               	movf	?___fladd+3,w
  2141  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2142  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2143  17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2144  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2145  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2146  17DA  085E               	movf	?___fladd+2,w
  2147  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2148  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2149  17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2150  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2151  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2152  17E0  085D               	movf	?___fladd+1,w
  2153  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2154  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2155  17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2156  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2157  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2158  17E6  085C               	movf	?___fladd,w
  2159  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2160  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2161  17E9  00C5               	movwf	sprintf@fval^(0+128)
  2162  17EA                     l3912:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2165  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2166  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2167  17EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2168  17ED  3A80               	xorlw	128
  2169  17EE  00FF               	movwf	btemp+1
  2170  17EF  3080               	movlw	128
  2171  17F0  027F               	subwf	btemp+1,w
  2172  17F1  1D03               	skipz
  2173  17F2  2FF5               	goto	u6985
  2174  17F3  300A               	movlw	10
  2175  17F4  0243               	subwf	sprintf@eexp^(0+128),w
  2176  17F5                     u6985:
  2177  17F5  1803               	skipnc
  2178  17F6  2FFA               	goto	u6981
  2179  17F7  120A  118A  281E   	goto	u6980
  2180  17FA                     u6981:
  2181  17FA  120A  118A  287D   	goto	l3920
  2182  17FD                     L3:
  2183  17FD                     L2:
  2184  17FD  120A  118A  2DCD   	ljmp	l4070
  2185                           
  2186                           	psect	text2
  2187  0C9D                     __ptext2:	
  2188 ;; *************** function _scale *****************
  2189 ;; Defined at:
  2190 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  scl             1    wreg     char 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  scl             1   58[BANK0 ] char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  4   40[BANK0 ] char 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2204 ;;      Params:         0       4       0       0       0
  2205 ;;      Locals:         0       5       0       0       0
  2206 ;;      Temps:          0      10       0       0       0
  2207 ;;      Totals:         0      19       0       0       0
  2208 ;;Total ram usage:       19 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    3
  2211 ;; This function calls:
  2212 ;;		___awdiv
  2213 ;;		___awmod
  2214 ;;		___flmul
  2215 ;; This function is called by:
  2216 ;;		_sprintf
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _scale
  2222  0C9D                     _scale:
  2223                           
  2224                           ;incstack = 0
  2225                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2226                           ;scale@scl stored from wreg
  2227  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0C9F  00DA               	movwf	scale@scl
  2230  0CA0                     l3622:
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2233  0CA0  1FDA               	btfss	scale@scl,7
  2234  0CA1  2CA3               	goto	u6261
  2235  0CA2  2CA4               	goto	u6260
  2236  0CA3                     u6261:
  2237  0CA3  2E53               	goto	l3644
  2238  0CA4                     u6260:
  2239  0CA4                     l3624:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2242  0CA4  09DA               	comf	scale@scl,f
  2243  0CA5  0ADA               	incf	scale@scl,f
  2244  0CA6                     l3626:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2247  0CA6  085A               	movf	scale@scl,w
  2248  0CA7  3A80               	xorlw	128
  2249  0CA8  3E12               	addlw	-238
  2250  0CA9  1C03               	skipc
  2251  0CAA  2CAC               	goto	u6271
  2252  0CAB  2CAD               	goto	u6270
  2253  0CAC                     u6271:
  2254  0CAC  2D97               	goto	l3634
  2255  0CAD                     u6270:
  2256  0CAD                     l3628:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2259  0CAD  300A               	movlw	10
  2260  0CAE  00A6               	movwf	___awdiv@divisor
  2261  0CAF  3000               	movlw	0
  2262  0CB0  00A7               	movwf	___awdiv@divisor+1
  2263  0CB1  085A               	movf	scale@scl,w
  2264  0CB2  00A2               	movwf	___awmod@dividend
  2265  0CB3  01A3               	clrf	___awmod@dividend+1
  2266  0CB4  1BA2               	btfsc	___awmod@dividend,7
  2267  0CB5  03A3               	decf	___awmod@dividend+1,f
  2268  0CB6  3064               	movlw	100
  2269  0CB7  00A0               	movwf	___awmod@divisor
  2270  0CB8  3000               	movlw	0
  2271  0CB9  00A1               	movwf	___awmod@divisor+1
  2272  0CBA  160A  158A  2674  120A  158A  	fcall	___awmod
  2273  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0CC1  0821               	movf	?___awmod+1,w
  2276  0CC2  00A9               	movwf	___awdiv@dividend+1
  2277  0CC3  0820               	movf	?___awmod,w
  2278  0CC4  00A8               	movwf	___awdiv@dividend
  2279  0CC5  160A  158A  2797  120A  158A  	fcall	___awdiv
  2280  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0CCC  0826               	movf	?___awdiv,w
  2283  0CCD  00CC               	movwf	??_scale
  2284  0CCE  3001               	movlw	1
  2285  0CCF                     u6285:
  2286  0CCF  1003               	clrc
  2287  0CD0  0DCC               	rlf	??_scale,f
  2288  0CD1  3EFF               	addlw	-1
  2289  0CD2  1D03               	skipz
  2290  0CD3  2CCF               	goto	u6285
  2291  0CD4  1003               	clrc
  2292  0CD5  0D4C               	rlf	??_scale,w
  2293  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2294  0CD7  0084               	movwf	4
  2295  0CD8  160A  158A  2000  120A  158A  	fcall	stringdir
  2296  0CDD  00CD               	movwf	??_scale+1
  2297  0CDE  160A  158A  2000  120A  158A  	fcall	stringdir
  2298  0CE3  00CE               	movwf	??_scale+2
  2299  0CE4  160A  158A  2000  120A  158A  	fcall	stringdir
  2300  0CE9  00CF               	movwf	??_scale+3
  2301  0CEA  160A  158A  2000  120A  158A  	fcall	stringdir
  2302  0CEF  00D0               	movwf	??_scale+4
  2303  0CF0  0850               	movf	??_scale+4,w
  2304  0CF1  00B1               	movwf	___flmul@b+3
  2305  0CF2  084F               	movf	??_scale+3,w
  2306  0CF3  00B0               	movwf	___flmul@b+2
  2307  0CF4  084E               	movf	??_scale+2,w
  2308  0CF5  00AF               	movwf	___flmul@b+1
  2309  0CF6  084D               	movf	??_scale+1,w
  2310  0CF7  00AE               	movwf	___flmul@b
  2311  0CF8  3064               	movlw	100
  2312  0CF9  00A6               	movwf	___awdiv@divisor
  2313  0CFA  3000               	movlw	0
  2314  0CFB  00A7               	movwf	___awdiv@divisor+1
  2315  0CFC  085A               	movf	scale@scl,w
  2316  0CFD  00A8               	movwf	___awdiv@dividend
  2317  0CFE  01A9               	clrf	___awdiv@dividend+1
  2318  0CFF  1BA8               	btfsc	___awdiv@dividend,7
  2319  0D00  03A9               	decf	___awdiv@dividend+1,f
  2320  0D01  160A  158A  2797  120A  158A  	fcall	___awdiv
  2321  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0D08  0826               	movf	?___awdiv,w
  2324  0D09  00D1               	movwf	??_scale+5
  2325  0D0A  3001               	movlw	1
  2326  0D0B                     u6295:
  2327  0D0B  1003               	clrc
  2328  0D0C  0DD1               	rlf	??_scale+5,f
  2329  0D0D  3EFF               	addlw	-1
  2330  0D0E  1D03               	skipz
  2331  0D0F  2D0B               	goto	u6295
  2332  0D10  1003               	clrc
  2333  0D11  0D51               	rlf	??_scale+5,w
  2334  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2335  0D13  0084               	movwf	4
  2336  0D14  160A  158A  2000  120A  158A  	fcall	stringdir
  2337  0D19  00D2               	movwf	??_scale+6
  2338  0D1A  160A  158A  2000  120A  158A  	fcall	stringdir
  2339  0D1F  00D3               	movwf	??_scale+7
  2340  0D20  160A  158A  2000  120A  158A  	fcall	stringdir
  2341  0D25  00D4               	movwf	??_scale+8
  2342  0D26  160A  158A  2000  120A  158A  	fcall	stringdir
  2343  0D2B  00D5               	movwf	??_scale+9
  2344  0D2C  0855               	movf	??_scale+9,w
  2345  0D2D  00B5               	movwf	___flmul@a+3
  2346  0D2E  0854               	movf	??_scale+8,w
  2347  0D2F  00B4               	movwf	___flmul@a+2
  2348  0D30  0853               	movf	??_scale+7,w
  2349  0D31  00B3               	movwf	___flmul@a+1
  2350  0D32  0852               	movf	??_scale+6,w
  2351  0D33  00B2               	movwf	___flmul@a
  2352  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2353  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0D3B  0831               	movf	?___flmul+3,w
  2356  0D3C  00D9               	movwf	_scale$1112+3
  2357  0D3D  0830               	movf	?___flmul+2,w
  2358  0D3E  00D8               	movwf	_scale$1112+2
  2359  0D3F  082F               	movf	?___flmul+1,w
  2360  0D40  00D7               	movwf	_scale$1112+1
  2361  0D41  082E               	movf	?___flmul,w
  2362  0D42  00D6               	movwf	_scale$1112
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2365  0D43  300A               	movlw	10
  2366  0D44  00A0               	movwf	___awmod@divisor
  2367  0D45  3000               	movlw	0
  2368  0D46  00A1               	movwf	___awmod@divisor+1
  2369  0D47  085A               	movf	scale@scl,w
  2370  0D48  00A2               	movwf	___awmod@dividend
  2371  0D49  01A3               	clrf	___awmod@dividend+1
  2372  0D4A  1BA2               	btfsc	___awmod@dividend,7
  2373  0D4B  03A3               	decf	___awmod@dividend+1,f
  2374  0D4C  160A  158A  2674  120A  158A  	fcall	___awmod
  2375  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0D53  0820               	movf	?___awmod,w
  2378  0D54  00CC               	movwf	??_scale
  2379  0D55  3001               	movlw	1
  2380  0D56                     u6305:
  2381  0D56  1003               	clrc
  2382  0D57  0DCC               	rlf	??_scale,f
  2383  0D58  3EFF               	addlw	-1
  2384  0D59  1D03               	skipz
  2385  0D5A  2D56               	goto	u6305
  2386  0D5B  1003               	clrc
  2387  0D5C  0D4C               	rlf	??_scale,w
  2388  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2389  0D5E  0084               	movwf	4
  2390  0D5F  160A  158A  2000  120A  158A  	fcall	stringdir
  2391  0D64  00CD               	movwf	??_scale+1
  2392  0D65  160A  158A  2000  120A  158A  	fcall	stringdir
  2393  0D6A  00CE               	movwf	??_scale+2
  2394  0D6B  160A  158A  2000  120A  158A  	fcall	stringdir
  2395  0D70  00CF               	movwf	??_scale+3
  2396  0D71  160A  158A  2000  120A  158A  	fcall	stringdir
  2397  0D76  00D0               	movwf	??_scale+4
  2398  0D77  0850               	movf	??_scale+4,w
  2399  0D78  00B1               	movwf	___flmul@b+3
  2400  0D79  084F               	movf	??_scale+3,w
  2401  0D7A  00B0               	movwf	___flmul@b+2
  2402  0D7B  084E               	movf	??_scale+2,w
  2403  0D7C  00AF               	movwf	___flmul@b+1
  2404  0D7D  084D               	movf	??_scale+1,w
  2405  0D7E  00AE               	movwf	___flmul@b
  2406  0D7F  0859               	movf	_scale$1112+3,w
  2407  0D80  00B5               	movwf	___flmul@a+3
  2408  0D81  0858               	movf	_scale$1112+2,w
  2409  0D82  00B4               	movwf	___flmul@a+2
  2410  0D83  0857               	movf	_scale$1112+1,w
  2411  0D84  00B3               	movwf	___flmul@a+1
  2412  0D85  0856               	movf	_scale$1112,w
  2413  0D86  00B2               	movwf	___flmul@a
  2414  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2415  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0D8E  0831               	movf	?___flmul+3,w
  2418  0D8F  00CB               	movwf	?_scale+3
  2419  0D90  0830               	movf	?___flmul+2,w
  2420  0D91  00CA               	movwf	?_scale+2
  2421  0D92  082F               	movf	?___flmul+1,w
  2422  0D93  00C9               	movwf	?_scale+1
  2423  0D94  082E               	movf	?___flmul,w
  2424  0D95  00C8               	movwf	?_scale
  2425  0D96  2FFF               	goto	l238
  2426  0D97                     l3634:
  2427  0D97  085A               	movf	scale@scl,w
  2428  0D98  3A80               	xorlw	128
  2429  0D99  3E75               	addlw	-139
  2430  0D9A  1C03               	skipc
  2431  0D9B  2D9D               	goto	u6311
  2432  0D9C  2D9E               	goto	u6310
  2433  0D9D                     u6311:
  2434  0D9D  2E26               	goto	l3640
  2435  0D9E                     u6310:
  2436  0D9E                     l3636:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2439  0D9E  300A               	movlw	10
  2440  0D9F  00A0               	movwf	___awmod@divisor
  2441  0DA0  3000               	movlw	0
  2442  0DA1  00A1               	movwf	___awmod@divisor+1
  2443  0DA2  085A               	movf	scale@scl,w
  2444  0DA3  00A2               	movwf	___awmod@dividend
  2445  0DA4  01A3               	clrf	___awmod@dividend+1
  2446  0DA5  1BA2               	btfsc	___awmod@dividend,7
  2447  0DA6  03A3               	decf	___awmod@dividend+1,f
  2448  0DA7  160A  158A  2674  120A  158A  	fcall	___awmod
  2449  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0DAE  0820               	movf	?___awmod,w
  2452  0DAF  00CC               	movwf	??_scale
  2453  0DB0  3001               	movlw	1
  2454  0DB1                     u6325:
  2455  0DB1  1003               	clrc
  2456  0DB2  0DCC               	rlf	??_scale,f
  2457  0DB3  3EFF               	addlw	-1
  2458  0DB4  1D03               	skipz
  2459  0DB5  2DB1               	goto	u6325
  2460  0DB6  1003               	clrc
  2461  0DB7  0D4C               	rlf	??_scale,w
  2462  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2463  0DB9  0084               	movwf	4
  2464  0DBA  160A  158A  2000  120A  158A  	fcall	stringdir
  2465  0DBF  00CD               	movwf	??_scale+1
  2466  0DC0  160A  158A  2000  120A  158A  	fcall	stringdir
  2467  0DC5  00CE               	movwf	??_scale+2
  2468  0DC6  160A  158A  2000  120A  158A  	fcall	stringdir
  2469  0DCB  00CF               	movwf	??_scale+3
  2470  0DCC  160A  158A  2000  120A  158A  	fcall	stringdir
  2471  0DD1  00D0               	movwf	??_scale+4
  2472  0DD2  0850               	movf	??_scale+4,w
  2473  0DD3  00B1               	movwf	___flmul@b+3
  2474  0DD4  084F               	movf	??_scale+3,w
  2475  0DD5  00B0               	movwf	___flmul@b+2
  2476  0DD6  084E               	movf	??_scale+2,w
  2477  0DD7  00AF               	movwf	___flmul@b+1
  2478  0DD8  084D               	movf	??_scale+1,w
  2479  0DD9  00AE               	movwf	___flmul@b
  2480  0DDA  300A               	movlw	10
  2481  0DDB  00A6               	movwf	___awdiv@divisor
  2482  0DDC  3000               	movlw	0
  2483  0DDD  00A7               	movwf	___awdiv@divisor+1
  2484  0DDE  085A               	movf	scale@scl,w
  2485  0DDF  00A8               	movwf	___awdiv@dividend
  2486  0DE0  01A9               	clrf	___awdiv@dividend+1
  2487  0DE1  1BA8               	btfsc	___awdiv@dividend,7
  2488  0DE2  03A9               	decf	___awdiv@dividend+1,f
  2489  0DE3  160A  158A  2797  120A  158A  	fcall	___awdiv
  2490  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0DEA  0826               	movf	?___awdiv,w
  2493  0DEB  00D1               	movwf	??_scale+5
  2494  0DEC  3001               	movlw	1
  2495  0DED                     u6335:
  2496  0DED  1003               	clrc
  2497  0DEE  0DD1               	rlf	??_scale+5,f
  2498  0DEF  3EFF               	addlw	-1
  2499  0DF0  1D03               	skipz
  2500  0DF1  2DED               	goto	u6335
  2501  0DF2  1003               	clrc
  2502  0DF3  0D51               	rlf	??_scale+5,w
  2503  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2504  0DF5  0084               	movwf	4
  2505  0DF6  160A  158A  2000  120A  158A  	fcall	stringdir
  2506  0DFB  00D2               	movwf	??_scale+6
  2507  0DFC  160A  158A  2000  120A  158A  	fcall	stringdir
  2508  0E01  00D3               	movwf	??_scale+7
  2509  0E02  160A  158A  2000  120A  158A  	fcall	stringdir
  2510  0E07  00D4               	movwf	??_scale+8
  2511  0E08  160A  158A  2000  120A  158A  	fcall	stringdir
  2512  0E0D  00D5               	movwf	??_scale+9
  2513  0E0E  0855               	movf	??_scale+9,w
  2514  0E0F  00B5               	movwf	___flmul@a+3
  2515  0E10  0854               	movf	??_scale+8,w
  2516  0E11  00B4               	movwf	___flmul@a+2
  2517  0E12  0853               	movf	??_scale+7,w
  2518  0E13  00B3               	movwf	___flmul@a+1
  2519  0E14  0852               	movf	??_scale+6,w
  2520  0E15  00B2               	movwf	___flmul@a
  2521  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2522  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0E1D  0831               	movf	?___flmul+3,w
  2525  0E1E  00CB               	movwf	?_scale+3
  2526  0E1F  0830               	movf	?___flmul+2,w
  2527  0E20  00CA               	movwf	?_scale+2
  2528  0E21  082F               	movf	?___flmul+1,w
  2529  0E22  00C9               	movwf	?_scale+1
  2530  0E23  082E               	movf	?___flmul,w
  2531  0E24  00C8               	movwf	?_scale
  2532  0E25  2FFF               	goto	l238
  2533  0E26                     l3640:
  2534                           
  2535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2536  0E26  085A               	movf	scale@scl,w
  2537  0E27  00CC               	movwf	??_scale
  2538  0E28  3001               	movlw	1
  2539  0E29                     u6345:
  2540  0E29  1003               	clrc
  2541  0E2A  0DCC               	rlf	??_scale,f
  2542  0E2B  3EFF               	addlw	-1
  2543  0E2C  1D03               	skipz
  2544  0E2D  2E29               	goto	u6345
  2545  0E2E  1003               	clrc
  2546  0E2F  0D4C               	rlf	??_scale,w
  2547  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2548  0E31  0084               	movwf	4
  2549  0E32  160A  158A  2000  120A  158A  	fcall	stringdir
  2550  0E37  00CD               	movwf	??_scale+1
  2551  0E38  160A  158A  2000  120A  158A  	fcall	stringdir
  2552  0E3D  00CE               	movwf	??_scale+2
  2553  0E3E  160A  158A  2000  120A  158A  	fcall	stringdir
  2554  0E43  00CF               	movwf	??_scale+3
  2555  0E44  160A  158A  2000  120A  158A  	fcall	stringdir
  2556  0E49  00D0               	movwf	??_scale+4
  2557  0E4A  0850               	movf	??_scale+4,w
  2558  0E4B  00CB               	movwf	?_scale+3
  2559  0E4C  084F               	movf	??_scale+3,w
  2560  0E4D  00CA               	movwf	?_scale+2
  2561  0E4E  084E               	movf	??_scale+2,w
  2562  0E4F  00C9               	movwf	?_scale+1
  2563  0E50  084D               	movf	??_scale+1,w
  2564  0E51  00C8               	movwf	?_scale
  2565  0E52  2FFF               	goto	l238
  2566  0E53                     l3644:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2569  0E53  085A               	movf	scale@scl,w
  2570  0E54  3A80               	xorlw	128
  2571  0E55  3E12               	addlw	-238
  2572  0E56  1C03               	skipc
  2573  0E57  2E59               	goto	u6351
  2574  0E58  2E5A               	goto	u6350
  2575  0E59                     u6351:
  2576  0E59  2F44               	goto	l3652
  2577  0E5A                     u6350:
  2578  0E5A                     l3646:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2581  0E5A  300A               	movlw	10
  2582  0E5B  00A6               	movwf	___awdiv@divisor
  2583  0E5C  3000               	movlw	0
  2584  0E5D  00A7               	movwf	___awdiv@divisor+1
  2585  0E5E  085A               	movf	scale@scl,w
  2586  0E5F  00A2               	movwf	___awmod@dividend
  2587  0E60  01A3               	clrf	___awmod@dividend+1
  2588  0E61  1BA2               	btfsc	___awmod@dividend,7
  2589  0E62  03A3               	decf	___awmod@dividend+1,f
  2590  0E63  3064               	movlw	100
  2591  0E64  00A0               	movwf	___awmod@divisor
  2592  0E65  3000               	movlw	0
  2593  0E66  00A1               	movwf	___awmod@divisor+1
  2594  0E67  160A  158A  2674  120A  158A  	fcall	___awmod
  2595  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0E6E  0821               	movf	?___awmod+1,w
  2598  0E6F  00A9               	movwf	___awdiv@dividend+1
  2599  0E70  0820               	movf	?___awmod,w
  2600  0E71  00A8               	movwf	___awdiv@dividend
  2601  0E72  160A  158A  2797  120A  158A  	fcall	___awdiv
  2602  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2603  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2604  0E79  0826               	movf	?___awdiv,w
  2605  0E7A  00CC               	movwf	??_scale
  2606  0E7B  3001               	movlw	1
  2607  0E7C                     u6365:
  2608  0E7C  1003               	clrc
  2609  0E7D  0DCC               	rlf	??_scale,f
  2610  0E7E  3EFF               	addlw	-1
  2611  0E7F  1D03               	skipz
  2612  0E80  2E7C               	goto	u6365
  2613  0E81  1003               	clrc
  2614  0E82  0D4C               	rlf	??_scale,w
  2615  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2616  0E84  0084               	movwf	4
  2617  0E85  160A  158A  2000  120A  158A  	fcall	stringdir
  2618  0E8A  00CD               	movwf	??_scale+1
  2619  0E8B  160A  158A  2000  120A  158A  	fcall	stringdir
  2620  0E90  00CE               	movwf	??_scale+2
  2621  0E91  160A  158A  2000  120A  158A  	fcall	stringdir
  2622  0E96  00CF               	movwf	??_scale+3
  2623  0E97  160A  158A  2000  120A  158A  	fcall	stringdir
  2624  0E9C  00D0               	movwf	??_scale+4
  2625  0E9D  0850               	movf	??_scale+4,w
  2626  0E9E  00B1               	movwf	___flmul@b+3
  2627  0E9F  084F               	movf	??_scale+3,w
  2628  0EA0  00B0               	movwf	___flmul@b+2
  2629  0EA1  084E               	movf	??_scale+2,w
  2630  0EA2  00AF               	movwf	___flmul@b+1
  2631  0EA3  084D               	movf	??_scale+1,w
  2632  0EA4  00AE               	movwf	___flmul@b
  2633  0EA5  3064               	movlw	100
  2634  0EA6  00A6               	movwf	___awdiv@divisor
  2635  0EA7  3000               	movlw	0
  2636  0EA8  00A7               	movwf	___awdiv@divisor+1
  2637  0EA9  085A               	movf	scale@scl,w
  2638  0EAA  00A8               	movwf	___awdiv@dividend
  2639  0EAB  01A9               	clrf	___awdiv@dividend+1
  2640  0EAC  1BA8               	btfsc	___awdiv@dividend,7
  2641  0EAD  03A9               	decf	___awdiv@dividend+1,f
  2642  0EAE  160A  158A  2797  120A  158A  	fcall	___awdiv
  2643  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0EB5  0826               	movf	?___awdiv,w
  2646  0EB6  00D1               	movwf	??_scale+5
  2647  0EB7  3001               	movlw	1
  2648  0EB8                     u6375:
  2649  0EB8  1003               	clrc
  2650  0EB9  0DD1               	rlf	??_scale+5,f
  2651  0EBA  3EFF               	addlw	-1
  2652  0EBB  1D03               	skipz
  2653  0EBC  2EB8               	goto	u6375
  2654  0EBD  1003               	clrc
  2655  0EBE  0D51               	rlf	??_scale+5,w
  2656  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2657  0EC0  0084               	movwf	4
  2658  0EC1  160A  158A  2000  120A  158A  	fcall	stringdir
  2659  0EC6  00D2               	movwf	??_scale+6
  2660  0EC7  160A  158A  2000  120A  158A  	fcall	stringdir
  2661  0ECC  00D3               	movwf	??_scale+7
  2662  0ECD  160A  158A  2000  120A  158A  	fcall	stringdir
  2663  0ED2  00D4               	movwf	??_scale+8
  2664  0ED3  160A  158A  2000  120A  158A  	fcall	stringdir
  2665  0ED8  00D5               	movwf	??_scale+9
  2666  0ED9  0855               	movf	??_scale+9,w
  2667  0EDA  00B5               	movwf	___flmul@a+3
  2668  0EDB  0854               	movf	??_scale+8,w
  2669  0EDC  00B4               	movwf	___flmul@a+2
  2670  0EDD  0853               	movf	??_scale+7,w
  2671  0EDE  00B3               	movwf	___flmul@a+1
  2672  0EDF  0852               	movf	??_scale+6,w
  2673  0EE0  00B2               	movwf	___flmul@a
  2674  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2675  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0EE8  0831               	movf	?___flmul+3,w
  2678  0EE9  00D9               	movwf	_scale$1112+3
  2679  0EEA  0830               	movf	?___flmul+2,w
  2680  0EEB  00D8               	movwf	_scale$1112+2
  2681  0EEC  082F               	movf	?___flmul+1,w
  2682  0EED  00D7               	movwf	_scale$1112+1
  2683  0EEE  082E               	movf	?___flmul,w
  2684  0EEF  00D6               	movwf	_scale$1112
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2687  0EF0  300A               	movlw	10
  2688  0EF1  00A0               	movwf	___awmod@divisor
  2689  0EF2  3000               	movlw	0
  2690  0EF3  00A1               	movwf	___awmod@divisor+1
  2691  0EF4  085A               	movf	scale@scl,w
  2692  0EF5  00A2               	movwf	___awmod@dividend
  2693  0EF6  01A3               	clrf	___awmod@dividend+1
  2694  0EF7  1BA2               	btfsc	___awmod@dividend,7
  2695  0EF8  03A3               	decf	___awmod@dividend+1,f
  2696  0EF9  160A  158A  2674  120A  158A  	fcall	___awmod
  2697  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  2698  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  2699  0F00  0820               	movf	?___awmod,w
  2700  0F01  00CC               	movwf	??_scale
  2701  0F02  3001               	movlw	1
  2702  0F03                     u6385:
  2703  0F03  1003               	clrc
  2704  0F04  0DCC               	rlf	??_scale,f
  2705  0F05  3EFF               	addlw	-1
  2706  0F06  1D03               	skipz
  2707  0F07  2F03               	goto	u6385
  2708  0F08  1003               	clrc
  2709  0F09  0D4C               	rlf	??_scale,w
  2710  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2711  0F0B  0084               	movwf	4
  2712  0F0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2713  0F11  00CD               	movwf	??_scale+1
  2714  0F12  160A  158A  2000  120A  158A  	fcall	stringdir
  2715  0F17  00CE               	movwf	??_scale+2
  2716  0F18  160A  158A  2000  120A  158A  	fcall	stringdir
  2717  0F1D  00CF               	movwf	??_scale+3
  2718  0F1E  160A  158A  2000  120A  158A  	fcall	stringdir
  2719  0F23  00D0               	movwf	??_scale+4
  2720  0F24  0850               	movf	??_scale+4,w
  2721  0F25  00B1               	movwf	___flmul@b+3
  2722  0F26  084F               	movf	??_scale+3,w
  2723  0F27  00B0               	movwf	___flmul@b+2
  2724  0F28  084E               	movf	??_scale+2,w
  2725  0F29  00AF               	movwf	___flmul@b+1
  2726  0F2A  084D               	movf	??_scale+1,w
  2727  0F2B  00AE               	movwf	___flmul@b
  2728  0F2C  0859               	movf	_scale$1112+3,w
  2729  0F2D  00B5               	movwf	___flmul@a+3
  2730  0F2E  0858               	movf	_scale$1112+2,w
  2731  0F2F  00B4               	movwf	___flmul@a+2
  2732  0F30  0857               	movf	_scale$1112+1,w
  2733  0F31  00B3               	movwf	___flmul@a+1
  2734  0F32  0856               	movf	_scale$1112,w
  2735  0F33  00B2               	movwf	___flmul@a
  2736  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2737  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2738  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2739  0F3B  0831               	movf	?___flmul+3,w
  2740  0F3C  00CB               	movwf	?_scale+3
  2741  0F3D  0830               	movf	?___flmul+2,w
  2742  0F3E  00CA               	movwf	?_scale+2
  2743  0F3F  082F               	movf	?___flmul+1,w
  2744  0F40  00C9               	movwf	?_scale+1
  2745  0F41  082E               	movf	?___flmul,w
  2746  0F42  00C8               	movwf	?_scale
  2747  0F43  2FFF               	goto	l238
  2748  0F44                     l3652:
  2749  0F44  085A               	movf	scale@scl,w
  2750  0F45  3A80               	xorlw	128
  2751  0F46  3E75               	addlw	-139
  2752  0F47  1C03               	skipc
  2753  0F48  2F4A               	goto	u6391
  2754  0F49  2F4B               	goto	u6390
  2755  0F4A                     u6391:
  2756  0F4A  2FD3               	goto	l3658
  2757  0F4B                     u6390:
  2758  0F4B                     l3654:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2761  0F4B  300A               	movlw	10
  2762  0F4C  00A0               	movwf	___awmod@divisor
  2763  0F4D  3000               	movlw	0
  2764  0F4E  00A1               	movwf	___awmod@divisor+1
  2765  0F4F  085A               	movf	scale@scl,w
  2766  0F50  00A2               	movwf	___awmod@dividend
  2767  0F51  01A3               	clrf	___awmod@dividend+1
  2768  0F52  1BA2               	btfsc	___awmod@dividend,7
  2769  0F53  03A3               	decf	___awmod@dividend+1,f
  2770  0F54  160A  158A  2674  120A  158A  	fcall	___awmod
  2771  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2772  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2773  0F5B  0820               	movf	?___awmod,w
  2774  0F5C  00CC               	movwf	??_scale
  2775  0F5D  3001               	movlw	1
  2776  0F5E                     u6405:
  2777  0F5E  1003               	clrc
  2778  0F5F  0DCC               	rlf	??_scale,f
  2779  0F60  3EFF               	addlw	-1
  2780  0F61  1D03               	skipz
  2781  0F62  2F5E               	goto	u6405
  2782  0F63  1003               	clrc
  2783  0F64  0D4C               	rlf	??_scale,w
  2784  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2785  0F66  0084               	movwf	4
  2786  0F67  160A  158A  2000  120A  158A  	fcall	stringdir
  2787  0F6C  00CD               	movwf	??_scale+1
  2788  0F6D  160A  158A  2000  120A  158A  	fcall	stringdir
  2789  0F72  00CE               	movwf	??_scale+2
  2790  0F73  160A  158A  2000  120A  158A  	fcall	stringdir
  2791  0F78  00CF               	movwf	??_scale+3
  2792  0F79  160A  158A  2000  120A  158A  	fcall	stringdir
  2793  0F7E  00D0               	movwf	??_scale+4
  2794  0F7F  0850               	movf	??_scale+4,w
  2795  0F80  00B1               	movwf	___flmul@b+3
  2796  0F81  084F               	movf	??_scale+3,w
  2797  0F82  00B0               	movwf	___flmul@b+2
  2798  0F83  084E               	movf	??_scale+2,w
  2799  0F84  00AF               	movwf	___flmul@b+1
  2800  0F85  084D               	movf	??_scale+1,w
  2801  0F86  00AE               	movwf	___flmul@b
  2802  0F87  300A               	movlw	10
  2803  0F88  00A6               	movwf	___awdiv@divisor
  2804  0F89  3000               	movlw	0
  2805  0F8A  00A7               	movwf	___awdiv@divisor+1
  2806  0F8B  085A               	movf	scale@scl,w
  2807  0F8C  00A8               	movwf	___awdiv@dividend
  2808  0F8D  01A9               	clrf	___awdiv@dividend+1
  2809  0F8E  1BA8               	btfsc	___awdiv@dividend,7
  2810  0F8F  03A9               	decf	___awdiv@dividend+1,f
  2811  0F90  160A  158A  2797  120A  158A  	fcall	___awdiv
  2812  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2813  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2814  0F97  0826               	movf	?___awdiv,w
  2815  0F98  00D1               	movwf	??_scale+5
  2816  0F99  3001               	movlw	1
  2817  0F9A                     u6415:
  2818  0F9A  1003               	clrc
  2819  0F9B  0DD1               	rlf	??_scale+5,f
  2820  0F9C  3EFF               	addlw	-1
  2821  0F9D  1D03               	skipz
  2822  0F9E  2F9A               	goto	u6415
  2823  0F9F  1003               	clrc
  2824  0FA0  0D51               	rlf	??_scale+5,w
  2825  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2826  0FA2  0084               	movwf	4
  2827  0FA3  160A  158A  2000  120A  158A  	fcall	stringdir
  2828  0FA8  00D2               	movwf	??_scale+6
  2829  0FA9  160A  158A  2000  120A  158A  	fcall	stringdir
  2830  0FAE  00D3               	movwf	??_scale+7
  2831  0FAF  160A  158A  2000  120A  158A  	fcall	stringdir
  2832  0FB4  00D4               	movwf	??_scale+8
  2833  0FB5  160A  158A  2000  120A  158A  	fcall	stringdir
  2834  0FBA  00D5               	movwf	??_scale+9
  2835  0FBB  0855               	movf	??_scale+9,w
  2836  0FBC  00B5               	movwf	___flmul@a+3
  2837  0FBD  0854               	movf	??_scale+8,w
  2838  0FBE  00B4               	movwf	___flmul@a+2
  2839  0FBF  0853               	movf	??_scale+7,w
  2840  0FC0  00B3               	movwf	___flmul@a+1
  2841  0FC1  0852               	movf	??_scale+6,w
  2842  0FC2  00B2               	movwf	___flmul@a
  2843  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  2844  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0FCA  0831               	movf	?___flmul+3,w
  2847  0FCB  00CB               	movwf	?_scale+3
  2848  0FCC  0830               	movf	?___flmul+2,w
  2849  0FCD  00CA               	movwf	?_scale+2
  2850  0FCE  082F               	movf	?___flmul+1,w
  2851  0FCF  00C9               	movwf	?_scale+1
  2852  0FD0  082E               	movf	?___flmul,w
  2853  0FD1  00C8               	movwf	?_scale
  2854  0FD2  2FFF               	goto	l238
  2855  0FD3                     l3658:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  2858  0FD3  085A               	movf	scale@scl,w
  2859  0FD4  00CC               	movwf	??_scale
  2860  0FD5  3001               	movlw	1
  2861  0FD6                     u6425:
  2862  0FD6  1003               	clrc
  2863  0FD7  0DCC               	rlf	??_scale,f
  2864  0FD8  3EFF               	addlw	-1
  2865  0FD9  1D03               	skipz
  2866  0FDA  2FD6               	goto	u6425
  2867  0FDB  1003               	clrc
  2868  0FDC  0D4C               	rlf	??_scale,w
  2869  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2870  0FDE  0084               	movwf	4
  2871  0FDF  160A  158A  2000  120A  158A  	fcall	stringdir
  2872  0FE4  00CD               	movwf	??_scale+1
  2873  0FE5  160A  158A  2000  120A  158A  	fcall	stringdir
  2874  0FEA  00CE               	movwf	??_scale+2
  2875  0FEB  160A  158A  2000  120A  158A  	fcall	stringdir
  2876  0FF0  00CF               	movwf	??_scale+3
  2877  0FF1  160A  158A  2000  120A  158A  	fcall	stringdir
  2878  0FF6  00D0               	movwf	??_scale+4
  2879  0FF7  0850               	movf	??_scale+4,w
  2880  0FF8  00CB               	movwf	?_scale+3
  2881  0FF9  084F               	movf	??_scale+3,w
  2882  0FFA  00CA               	movwf	?_scale+2
  2883  0FFB  084E               	movf	??_scale+2,w
  2884  0FFC  00C9               	movwf	?_scale+1
  2885  0FFD  084D               	movf	??_scale+1,w
  2886  0FFE  00C8               	movwf	?_scale
  2887  0FFF                     l238:
  2888  0FFF  0008               	return
  2889  1000                     __end_of_scale:
  2890                           
  2891                           	psect	text3
  2892  1E74                     __ptext3:	
  2893 ;; *************** function ___awmod *****************
  2894 ;; Defined at:
  2895 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  divisor         2    0[BANK0 ] int 
  2898 ;;  dividend        2    2[BANK0 ] int 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  sign            1    5[BANK0 ] unsigned char 
  2901 ;;  counter         1    4[BANK0 ] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  2    0[BANK0 ] int 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       4       0       0       0
  2912 ;;      Locals:         0       2       0       0       0
  2913 ;;      Temps:          1       0       0       0       0
  2914 ;;      Totals:         1       6       0       0       0
  2915 ;;Total ram usage:        7 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    1
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_scale
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           
  2926                           ;psect for function ___awmod
  2927  1E74                     ___awmod:
  2928  1E74                     l3404:	
  2929                           ;incstack = 0
  2930                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2931                           
  2932  1E74  1283               	bcf	3,5	;RP0=0, select bank0
  2933  1E75  1303               	bcf	3,6	;RP1=0, select bank0
  2934  1E76  01A5               	clrf	___awmod@sign
  2935  1E77                     l3406:
  2936  1E77  1FA3               	btfss	___awmod@dividend+1,7
  2937  1E78  2E7A               	goto	u5661
  2938  1E79  2E7B               	goto	u5660
  2939  1E7A                     u5661:
  2940  1E7A  2E82               	goto	l3412
  2941  1E7B                     u5660:
  2942  1E7B                     l3408:
  2943  1E7B  09A2               	comf	___awmod@dividend,f
  2944  1E7C  09A3               	comf	___awmod@dividend+1,f
  2945  1E7D  0AA2               	incf	___awmod@dividend,f
  2946  1E7E  1903               	skipnz
  2947  1E7F  0AA3               	incf	___awmod@dividend+1,f
  2948  1E80                     l3410:
  2949  1E80  01A5               	clrf	___awmod@sign
  2950  1E81  0AA5               	incf	___awmod@sign,f
  2951  1E82                     l3412:
  2952  1E82  1FA1               	btfss	___awmod@divisor+1,7
  2953  1E83  2E85               	goto	u5671
  2954  1E84  2E86               	goto	u5670
  2955  1E85                     u5671:
  2956  1E85  2E8B               	goto	l3416
  2957  1E86                     u5670:
  2958  1E86                     l3414:
  2959  1E86  09A0               	comf	___awmod@divisor,f
  2960  1E87  09A1               	comf	___awmod@divisor+1,f
  2961  1E88  0AA0               	incf	___awmod@divisor,f
  2962  1E89  1903               	skipnz
  2963  1E8A  0AA1               	incf	___awmod@divisor+1,f
  2964  1E8B                     l3416:
  2965  1E8B  0820               	movf	___awmod@divisor,w
  2966  1E8C  0421               	iorwf	___awmod@divisor+1,w
  2967  1E8D  1903               	btfsc	3,2
  2968  1E8E  2E90               	goto	u5681
  2969  1E8F  2E91               	goto	u5680
  2970  1E90                     u5681:
  2971  1E90  2EC0               	goto	l3434
  2972  1E91                     u5680:
  2973  1E91                     l3418:
  2974  1E91  01A4               	clrf	___awmod@counter
  2975  1E92  0AA4               	incf	___awmod@counter,f
  2976  1E93  2E9F               	goto	l3424
  2977  1E94                     l3420:
  2978  1E94  3001               	movlw	1
  2979  1E95                     u5695:
  2980  1E95  1003               	clrc
  2981  1E96  0DA0               	rlf	___awmod@divisor,f
  2982  1E97  0DA1               	rlf	___awmod@divisor+1,f
  2983  1E98  3EFF               	addlw	-1
  2984  1E99  1D03               	skipz
  2985  1E9A  2E95               	goto	u5695
  2986  1E9B                     l3422:
  2987  1E9B  3001               	movlw	1
  2988  1E9C  00F5               	movwf	??___awmod
  2989  1E9D  0875               	movf	??___awmod,w
  2990  1E9E  07A4               	addwf	___awmod@counter,f
  2991  1E9F                     l3424:
  2992  1E9F  1FA1               	btfss	___awmod@divisor+1,7
  2993  1EA0  2EA2               	goto	u5701
  2994  1EA1  2EA3               	goto	u5700
  2995  1EA2                     u5701:
  2996  1EA2  2E94               	goto	l3420
  2997  1EA3                     u5700:
  2998  1EA3                     l3426:
  2999  1EA3  0821               	movf	___awmod@divisor+1,w
  3000  1EA4  0223               	subwf	___awmod@dividend+1,w
  3001  1EA5  1D03               	skipz
  3002  1EA6  2EA9               	goto	u5715
  3003  1EA7  0820               	movf	___awmod@divisor,w
  3004  1EA8  0222               	subwf	___awmod@dividend,w
  3005  1EA9                     u5715:
  3006  1EA9  1C03               	skipc
  3007  1EAA  2EAC               	goto	u5711
  3008  1EAB  2EAD               	goto	u5710
  3009  1EAC                     u5711:
  3010  1EAC  2EB3               	goto	l3430
  3011  1EAD                     u5710:
  3012  1EAD                     l3428:
  3013  1EAD  0820               	movf	___awmod@divisor,w
  3014  1EAE  02A2               	subwf	___awmod@dividend,f
  3015  1EAF  0821               	movf	___awmod@divisor+1,w
  3016  1EB0  1C03               	skipc
  3017  1EB1  03A3               	decf	___awmod@dividend+1,f
  3018  1EB2  02A3               	subwf	___awmod@dividend+1,f
  3019  1EB3                     l3430:
  3020  1EB3  3001               	movlw	1
  3021  1EB4                     u5725:
  3022  1EB4  1003               	clrc
  3023  1EB5  0CA1               	rrf	___awmod@divisor+1,f
  3024  1EB6  0CA0               	rrf	___awmod@divisor,f
  3025  1EB7  3EFF               	addlw	-1
  3026  1EB8  1D03               	skipz
  3027  1EB9  2EB4               	goto	u5725
  3028  1EBA                     l3432:
  3029  1EBA  3001               	movlw	1
  3030  1EBB  02A4               	subwf	___awmod@counter,f
  3031  1EBC  1D03               	btfss	3,2
  3032  1EBD  2EBF               	goto	u5731
  3033  1EBE  2EC0               	goto	u5730
  3034  1EBF                     u5731:
  3035  1EBF  2EA3               	goto	l3426
  3036  1EC0                     u5730:
  3037  1EC0                     l3434:
  3038  1EC0  0825               	movf	___awmod@sign,w
  3039  1EC1  1903               	btfsc	3,2
  3040  1EC2  2EC4               	goto	u5741
  3041  1EC3  2EC5               	goto	u5740
  3042  1EC4                     u5741:
  3043  1EC4  2ECA               	goto	l3438
  3044  1EC5                     u5740:
  3045  1EC5                     l3436:
  3046  1EC5  09A2               	comf	___awmod@dividend,f
  3047  1EC6  09A3               	comf	___awmod@dividend+1,f
  3048  1EC7  0AA2               	incf	___awmod@dividend,f
  3049  1EC8  1903               	skipnz
  3050  1EC9  0AA3               	incf	___awmod@dividend+1,f
  3051  1ECA                     l3438:
  3052  1ECA  0823               	movf	___awmod@dividend+1,w
  3053  1ECB  00A1               	movwf	?___awmod+1
  3054  1ECC  0822               	movf	___awmod@dividend,w
  3055  1ECD  00A0               	movwf	?___awmod
  3056  1ECE                     l491:
  3057  1ECE  0008               	return
  3058  1ECF                     __end_of___awmod:
  3059                           
  3060                           	psect	text4
  3061  1F97                     __ptext4:	
  3062 ;; *************** function ___awdiv *****************
  3063 ;; Defined at:
  3064 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  divisor         2    6[BANK0 ] int 
  3067 ;;  dividend        2    8[BANK0 ] int 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  quotient        2   12[BANK0 ] int 
  3070 ;;  sign            1   11[BANK0 ] unsigned char 
  3071 ;;  counter         1   10[BANK0 ] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  2    6[BANK0 ] int 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3081 ;;      Params:         0       4       0       0       0
  3082 ;;      Locals:         0       4       0       0       0
  3083 ;;      Temps:          1       0       0       0       0
  3084 ;;      Totals:         1       8       0       0       0
  3085 ;;Total ram usage:        9 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_scale
  3092 ;;		_sprintf
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function ___awdiv
  3098  1F97                     ___awdiv:
  3099  1F97                     l3360:	
  3100                           ;incstack = 0
  3101                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3102                           
  3103  1F97  1283               	bcf	3,5	;RP0=0, select bank0
  3104  1F98  1303               	bcf	3,6	;RP1=0, select bank0
  3105  1F99  01AB               	clrf	___awdiv@sign
  3106  1F9A                     l3362:
  3107  1F9A  1FA7               	btfss	___awdiv@divisor+1,7
  3108  1F9B  2F9D               	goto	u5561
  3109  1F9C  2F9E               	goto	u5560
  3110  1F9D                     u5561:
  3111  1F9D  2FA5               	goto	l3368
  3112  1F9E                     u5560:
  3113  1F9E                     l3364:
  3114  1F9E  09A6               	comf	___awdiv@divisor,f
  3115  1F9F  09A7               	comf	___awdiv@divisor+1,f
  3116  1FA0  0AA6               	incf	___awdiv@divisor,f
  3117  1FA1  1903               	skipnz
  3118  1FA2  0AA7               	incf	___awdiv@divisor+1,f
  3119  1FA3                     l3366:
  3120  1FA3  01AB               	clrf	___awdiv@sign
  3121  1FA4  0AAB               	incf	___awdiv@sign,f
  3122  1FA5                     l3368:
  3123  1FA5  1FA9               	btfss	___awdiv@dividend+1,7
  3124  1FA6  2FA8               	goto	u5571
  3125  1FA7  2FA9               	goto	u5570
  3126  1FA8                     u5571:
  3127  1FA8  2FB2               	goto	l3374
  3128  1FA9                     u5570:
  3129  1FA9                     l3370:
  3130  1FA9  09A8               	comf	___awdiv@dividend,f
  3131  1FAA  09A9               	comf	___awdiv@dividend+1,f
  3132  1FAB  0AA8               	incf	___awdiv@dividend,f
  3133  1FAC  1903               	skipnz
  3134  1FAD  0AA9               	incf	___awdiv@dividend+1,f
  3135  1FAE                     l3372:
  3136  1FAE  3001               	movlw	1
  3137  1FAF  00F6               	movwf	??___awdiv
  3138  1FB0  0876               	movf	??___awdiv,w
  3139  1FB1  06AB               	xorwf	___awdiv@sign,f
  3140  1FB2                     l3374:
  3141  1FB2  01AC               	clrf	___awdiv@quotient
  3142  1FB3  01AD               	clrf	___awdiv@quotient+1
  3143  1FB4                     l3376:
  3144  1FB4  0826               	movf	___awdiv@divisor,w
  3145  1FB5  0427               	iorwf	___awdiv@divisor+1,w
  3146  1FB6  1903               	btfsc	3,2
  3147  1FB7  2FB9               	goto	u5581
  3148  1FB8  2FBA               	goto	u5580
  3149  1FB9                     u5581:
  3150  1FB9  2FF1               	goto	l3396
  3151  1FBA                     u5580:
  3152  1FBA                     l3378:
  3153  1FBA  01AA               	clrf	___awdiv@counter
  3154  1FBB  0AAA               	incf	___awdiv@counter,f
  3155  1FBC  2FC8               	goto	l3384
  3156  1FBD                     l3380:
  3157  1FBD  3001               	movlw	1
  3158  1FBE                     u5595:
  3159  1FBE  1003               	clrc
  3160  1FBF  0DA6               	rlf	___awdiv@divisor,f
  3161  1FC0  0DA7               	rlf	___awdiv@divisor+1,f
  3162  1FC1  3EFF               	addlw	-1
  3163  1FC2  1D03               	skipz
  3164  1FC3  2FBE               	goto	u5595
  3165  1FC4                     l3382:
  3166  1FC4  3001               	movlw	1
  3167  1FC5  00F6               	movwf	??___awdiv
  3168  1FC6  0876               	movf	??___awdiv,w
  3169  1FC7  07AA               	addwf	___awdiv@counter,f
  3170  1FC8                     l3384:
  3171  1FC8  1FA7               	btfss	___awdiv@divisor+1,7
  3172  1FC9  2FCB               	goto	u5601
  3173  1FCA  2FCC               	goto	u5600
  3174  1FCB                     u5601:
  3175  1FCB  2FBD               	goto	l3380
  3176  1FCC                     u5600:
  3177  1FCC                     l3386:
  3178  1FCC  3001               	movlw	1
  3179  1FCD                     u5615:
  3180  1FCD  1003               	clrc
  3181  1FCE  0DAC               	rlf	___awdiv@quotient,f
  3182  1FCF  0DAD               	rlf	___awdiv@quotient+1,f
  3183  1FD0  3EFF               	addlw	-1
  3184  1FD1  1D03               	skipz
  3185  1FD2  2FCD               	goto	u5615
  3186  1FD3  0827               	movf	___awdiv@divisor+1,w
  3187  1FD4  0229               	subwf	___awdiv@dividend+1,w
  3188  1FD5  1D03               	skipz
  3189  1FD6  2FD9               	goto	u5625
  3190  1FD7  0826               	movf	___awdiv@divisor,w
  3191  1FD8  0228               	subwf	___awdiv@dividend,w
  3192  1FD9                     u5625:
  3193  1FD9  1C03               	skipc
  3194  1FDA  2FDC               	goto	u5621
  3195  1FDB  2FDD               	goto	u5620
  3196  1FDC                     u5621:
  3197  1FDC  2FE4               	goto	l3392
  3198  1FDD                     u5620:
  3199  1FDD                     l3388:
  3200  1FDD  0826               	movf	___awdiv@divisor,w
  3201  1FDE  02A8               	subwf	___awdiv@dividend,f
  3202  1FDF  0827               	movf	___awdiv@divisor+1,w
  3203  1FE0  1C03               	skipc
  3204  1FE1  03A9               	decf	___awdiv@dividend+1,f
  3205  1FE2  02A9               	subwf	___awdiv@dividend+1,f
  3206  1FE3                     l3390:
  3207  1FE3  142C               	bsf	___awdiv@quotient,0
  3208  1FE4                     l3392:
  3209  1FE4  3001               	movlw	1
  3210  1FE5                     u5635:
  3211  1FE5  1003               	clrc
  3212  1FE6  0CA7               	rrf	___awdiv@divisor+1,f
  3213  1FE7  0CA6               	rrf	___awdiv@divisor,f
  3214  1FE8  3EFF               	addlw	-1
  3215  1FE9  1D03               	skipz
  3216  1FEA  2FE5               	goto	u5635
  3217  1FEB                     l3394:
  3218  1FEB  3001               	movlw	1
  3219  1FEC  02AA               	subwf	___awdiv@counter,f
  3220  1FED  1D03               	btfss	3,2
  3221  1FEE  2FF0               	goto	u5641
  3222  1FEF  2FF1               	goto	u5640
  3223  1FF0                     u5641:
  3224  1FF0  2FCC               	goto	l3386
  3225  1FF1                     u5640:
  3226  1FF1                     l3396:
  3227  1FF1  082B               	movf	___awdiv@sign,w
  3228  1FF2  1903               	btfsc	3,2
  3229  1FF3  2FF5               	goto	u5651
  3230  1FF4  2FF6               	goto	u5650
  3231  1FF5                     u5651:
  3232  1FF5  2FFB               	goto	l3400
  3233  1FF6                     u5650:
  3234  1FF6                     l3398:
  3235  1FF6  09AC               	comf	___awdiv@quotient,f
  3236  1FF7  09AD               	comf	___awdiv@quotient+1,f
  3237  1FF8  0AAC               	incf	___awdiv@quotient,f
  3238  1FF9  1903               	skipnz
  3239  1FFA  0AAD               	incf	___awdiv@quotient+1,f
  3240  1FFB                     l3400:
  3241  1FFB  082D               	movf	___awdiv@quotient+1,w
  3242  1FFC  00A7               	movwf	?___awdiv+1
  3243  1FFD  082C               	movf	___awdiv@quotient,w
  3244  1FFE  00A6               	movwf	?___awdiv
  3245  1FFF                     l478:
  3246  1FFF  0008               	return
  3247  2000                     __end_of___awdiv:
  3248                           
  3249                           	psect	text5
  3250  1BFE                     __ptext5:	
  3251 ;; *************** function _isdigit *****************
  3252 ;; Defined at:
  3253 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  c               1    wreg     unsigned char 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  c               1    6[COMMON] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       0       0       0       0
  3268 ;;      Locals:         2       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0
  3270 ;;      Totals:         2       0       0       0       0
  3271 ;;Total ram usage:        2 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_sprintf
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function _isdigit
  3283  1BFE                     _isdigit:
  3284                           
  3285                           ;incstack = 0
  3286                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3287                           ;isdigit@c stored from wreg
  3288  1BFE  00F6               	movwf	isdigit@c
  3289  1BFF                     l2656:
  3290  1BFF  01F5               	clrf	_isdigit$941
  3291  1C00                     l2658:
  3292  1C00  303A               	movlw	58
  3293  1C01  0276               	subwf	isdigit@c,w
  3294  1C02  1803               	skipnc
  3295  1C03  2C05               	goto	u4211
  3296  1C04  2C06               	goto	u4210
  3297  1C05                     u4211:
  3298  1C05  2C0E               	goto	l2664
  3299  1C06                     u4210:
  3300  1C06                     l2660:
  3301  1C06  3030               	movlw	48
  3302  1C07  0276               	subwf	isdigit@c,w
  3303  1C08  1C03               	skipc
  3304  1C09  2C0B               	goto	u4221
  3305  1C0A  2C0C               	goto	u4220
  3306  1C0B                     u4221:
  3307  1C0B  2C0E               	goto	l2664
  3308  1C0C                     u4220:
  3309  1C0C                     l2662:
  3310  1C0C  01F5               	clrf	_isdigit$941
  3311  1C0D  0AF5               	incf	_isdigit$941,f
  3312  1C0E                     l2664:
  3313  1C0E  0C75               	rrf	_isdigit$941,w
  3314  1C0F                     l812:
  3315  1C0F  0008               	return
  3316  1C10                     __end_of_isdigit:
  3317                           
  3318                           	psect	text6
  3319  05D2                     __ptext6:	
  3320 ;; *************** function _fround *****************
  3321 ;; Defined at:
  3322 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  prec            1    wreg     unsigned char 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  prec            1   59[BANK0 ] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  4   40[BANK0 ] unsigned char 
  3329 ;; Registers used:
  3330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3336 ;;      Params:         0       4       0       0       0
  3337 ;;      Locals:         0       9       0       0       0
  3338 ;;      Temps:          0       7       0       0       0
  3339 ;;      Totals:         0      20       0       0       0
  3340 ;;Total ram usage:       20 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    3
  3343 ;; This function calls:
  3344 ;;		___flmul
  3345 ;;		___lwdiv
  3346 ;;		___lwmod
  3347 ;; This function is called by:
  3348 ;;		_sprintf
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _fround
  3354  05D2                     _fround:
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3358                           ;fround@prec stored from wreg
  3359  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  3360  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  3361  05D4  00DB               	movwf	fround@prec
  3362  05D5                     l3604:
  3363                           
  3364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3365  05D5  306E               	movlw	110
  3366  05D6  025B               	subwf	fround@prec,w
  3367  05D7  1C03               	skipc
  3368  05D8  2DDA               	goto	u6181
  3369  05D9  2DDB               	goto	u6180
  3370  05DA                     u6181:
  3371  05DA  2EEA               	goto	l3612
  3372  05DB                     u6180:
  3373  05DB                     l3606:
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3376  05DB  303F               	movlw	63
  3377  05DC  00B1               	movwf	___flmul@b+3
  3378  05DD  3000               	movlw	0
  3379  05DE  00B0               	movwf	___flmul@b+2
  3380  05DF  3000               	movlw	0
  3381  05E0  00AF               	movwf	___flmul@b+1
  3382  05E1  3000               	movlw	0
  3383  05E2  00AE               	movwf	___flmul@b
  3384  05E3  3064               	movlw	100
  3385  05E4  00A4               	movwf	___lwdiv@divisor
  3386  05E5  3000               	movlw	0
  3387  05E6  00A5               	movwf	___lwdiv@divisor+1
  3388  05E7  085B               	movf	fround@prec,w
  3389  05E8  00CC               	movwf	??_fround
  3390  05E9  01CD               	clrf	??_fround+1
  3391  05EA  084C               	movf	??_fround,w
  3392  05EB  00A6               	movwf	___lwdiv@dividend
  3393  05EC  084D               	movf	??_fround+1,w
  3394  05ED  00A7               	movwf	___lwdiv@dividend+1
  3395  05EE  160A  158A  2538  120A  118A  	fcall	___lwdiv
  3396  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3397  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  3398  05F5  0824               	movf	?___lwdiv,w
  3399  05F6  00CE               	movwf	??_fround+2
  3400  05F7  3001               	movlw	1
  3401  05F8                     u6195:
  3402  05F8  1003               	clrc
  3403  05F9  0DCE               	rlf	??_fround+2,f
  3404  05FA  3EFF               	addlw	-1
  3405  05FB  1D03               	skipz
  3406  05FC  2DF8               	goto	u6195
  3407  05FD  1003               	clrc
  3408  05FE  0D4E               	rlf	??_fround+2,w
  3409  05FF  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3410  0600  0084               	movwf	4
  3411  0601  160A  158A  2000  120A  118A  	fcall	stringdir
  3412  0606  00CF               	movwf	??_fround+3
  3413  0607  160A  158A  2000  120A  118A  	fcall	stringdir
  3414  060C  00D0               	movwf	??_fround+4
  3415  060D  160A  158A  2000  120A  118A  	fcall	stringdir
  3416  0612  00D1               	movwf	??_fround+5
  3417  0613  160A  158A  2000  120A  118A  	fcall	stringdir
  3418  0618  00D2               	movwf	??_fround+6
  3419  0619  0852               	movf	??_fround+6,w
  3420  061A  00B5               	movwf	___flmul@a+3
  3421  061B  0851               	movf	??_fround+5,w
  3422  061C  00B4               	movwf	___flmul@a+2
  3423  061D  0850               	movf	??_fround+4,w
  3424  061E  00B3               	movwf	___flmul@a+1
  3425  061F  084F               	movf	??_fround+3,w
  3426  0620  00B2               	movwf	___flmul@a
  3427  0621  120A  158A  213C  120A  118A  	fcall	___flmul
  3428  0626  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0627  1303               	bcf	3,6	;RP1=0, select bank0
  3430  0628  0831               	movf	?___flmul+3,w
  3431  0629  00DA               	movwf	_fround$1110+3
  3432  062A  0830               	movf	?___flmul+2,w
  3433  062B  00D9               	movwf	_fround$1110+2
  3434  062C  082F               	movf	?___flmul+1,w
  3435  062D  00D8               	movwf	_fround$1110+1
  3436  062E  082E               	movf	?___flmul,w
  3437  062F  00D7               	movwf	_fround$1110
  3438                           
  3439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3440  0630  300A               	movlw	10
  3441  0631  00A4               	movwf	___lwdiv@divisor
  3442  0632  3000               	movlw	0
  3443  0633  00A5               	movwf	___lwdiv@divisor+1
  3444  0634  085B               	movf	fround@prec,w
  3445  0635  00CC               	movwf	??_fround
  3446  0636  01CD               	clrf	??_fround+1
  3447  0637  084C               	movf	??_fround,w
  3448  0638  00A2               	movwf	___lwmod@dividend
  3449  0639  084D               	movf	??_fround+1,w
  3450  063A  00A3               	movwf	___lwmod@dividend+1
  3451  063B  3064               	movlw	100
  3452  063C  00A0               	movwf	___lwmod@divisor
  3453  063D  3000               	movlw	0
  3454  063E  00A1               	movwf	___lwmod@divisor+1
  3455  063F  160A  158A  24FC  120A  118A  	fcall	___lwmod
  3456  0644  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0645  1303               	bcf	3,6	;RP1=0, select bank0
  3458  0646  0821               	movf	?___lwmod+1,w
  3459  0647  00A7               	movwf	___lwdiv@dividend+1
  3460  0648  0820               	movf	?___lwmod,w
  3461  0649  00A6               	movwf	___lwdiv@dividend
  3462  064A  160A  158A  2538  120A  118A  	fcall	___lwdiv
  3463  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0651  0824               	movf	?___lwdiv,w
  3466  0652  00CE               	movwf	??_fround+2
  3467  0653  3001               	movlw	1
  3468  0654                     u6205:
  3469  0654  1003               	clrc
  3470  0655  0DCE               	rlf	??_fround+2,f
  3471  0656  3EFF               	addlw	-1
  3472  0657  1D03               	skipz
  3473  0658  2E54               	goto	u6205
  3474  0659  1003               	clrc
  3475  065A  0D4E               	rlf	??_fround+2,w
  3476  065B  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3477  065C  0084               	movwf	4
  3478  065D  160A  158A  2000  120A  118A  	fcall	stringdir
  3479  0662  00CF               	movwf	??_fround+3
  3480  0663  160A  158A  2000  120A  118A  	fcall	stringdir
  3481  0668  00D0               	movwf	??_fround+4
  3482  0669  160A  158A  2000  120A  118A  	fcall	stringdir
  3483  066E  00D1               	movwf	??_fround+5
  3484  066F  160A  158A  2000  120A  118A  	fcall	stringdir
  3485  0674  00D2               	movwf	??_fround+6
  3486  0675  0852               	movf	??_fround+6,w
  3487  0676  00B1               	movwf	___flmul@b+3
  3488  0677  0851               	movf	??_fround+5,w
  3489  0678  00B0               	movwf	___flmul@b+2
  3490  0679  0850               	movf	??_fround+4,w
  3491  067A  00AF               	movwf	___flmul@b+1
  3492  067B  084F               	movf	??_fround+3,w
  3493  067C  00AE               	movwf	___flmul@b
  3494  067D  085A               	movf	_fround$1110+3,w
  3495  067E  00B5               	movwf	___flmul@a+3
  3496  067F  0859               	movf	_fround$1110+2,w
  3497  0680  00B4               	movwf	___flmul@a+2
  3498  0681  0858               	movf	_fround$1110+1,w
  3499  0682  00B3               	movwf	___flmul@a+1
  3500  0683  0857               	movf	_fround$1110,w
  3501  0684  00B2               	movwf	___flmul@a
  3502  0685  120A  158A  213C  120A  118A  	fcall	___flmul
  3503  068A  1283               	bcf	3,5	;RP0=0, select bank0
  3504  068B  1303               	bcf	3,6	;RP1=0, select bank0
  3505  068C  0831               	movf	?___flmul+3,w
  3506  068D  00D6               	movwf	_fround$1111+3
  3507  068E  0830               	movf	?___flmul+2,w
  3508  068F  00D5               	movwf	_fround$1111+2
  3509  0690  082F               	movf	?___flmul+1,w
  3510  0691  00D4               	movwf	_fround$1111+1
  3511  0692  082E               	movf	?___flmul,w
  3512  0693  00D3               	movwf	_fround$1111
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3515  0694  300A               	movlw	10
  3516  0695  00A0               	movwf	___lwmod@divisor
  3517  0696  3000               	movlw	0
  3518  0697  00A1               	movwf	___lwmod@divisor+1
  3519  0698  085B               	movf	fround@prec,w
  3520  0699  00CC               	movwf	??_fround
  3521  069A  01CD               	clrf	??_fround+1
  3522  069B  084C               	movf	??_fround,w
  3523  069C  00A2               	movwf	___lwmod@dividend
  3524  069D  084D               	movf	??_fround+1,w
  3525  069E  00A3               	movwf	___lwmod@dividend+1
  3526  069F  160A  158A  24FC  120A  118A  	fcall	___lwmod
  3527  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3528  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3529  06A6  0820               	movf	?___lwmod,w
  3530  06A7  00CE               	movwf	??_fround+2
  3531  06A8  3001               	movlw	1
  3532  06A9                     u6215:
  3533  06A9  1003               	clrc
  3534  06AA  0DCE               	rlf	??_fround+2,f
  3535  06AB  3EFF               	addlw	-1
  3536  06AC  1D03               	skipz
  3537  06AD  2EA9               	goto	u6215
  3538  06AE  1003               	clrc
  3539  06AF  0D4E               	rlf	??_fround+2,w
  3540  06B0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3541  06B1  0084               	movwf	4
  3542  06B2  160A  158A  2000  120A  118A  	fcall	stringdir
  3543  06B7  00CF               	movwf	??_fround+3
  3544  06B8  160A  158A  2000  120A  118A  	fcall	stringdir
  3545  06BD  00D0               	movwf	??_fround+4
  3546  06BE  160A  158A  2000  120A  118A  	fcall	stringdir
  3547  06C3  00D1               	movwf	??_fround+5
  3548  06C4  160A  158A  2000  120A  118A  	fcall	stringdir
  3549  06C9  00D2               	movwf	??_fround+6
  3550  06CA  0852               	movf	??_fround+6,w
  3551  06CB  00B1               	movwf	___flmul@b+3
  3552  06CC  0851               	movf	??_fround+5,w
  3553  06CD  00B0               	movwf	___flmul@b+2
  3554  06CE  0850               	movf	??_fround+4,w
  3555  06CF  00AF               	movwf	___flmul@b+1
  3556  06D0  084F               	movf	??_fround+3,w
  3557  06D1  00AE               	movwf	___flmul@b
  3558  06D2  0856               	movf	_fround$1111+3,w
  3559  06D3  00B5               	movwf	___flmul@a+3
  3560  06D4  0855               	movf	_fround$1111+2,w
  3561  06D5  00B4               	movwf	___flmul@a+2
  3562  06D6  0854               	movf	_fround$1111+1,w
  3563  06D7  00B3               	movwf	___flmul@a+1
  3564  06D8  0853               	movf	_fround$1111,w
  3565  06D9  00B2               	movwf	___flmul@a
  3566  06DA  120A  158A  213C  120A  118A  	fcall	___flmul
  3567  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3568  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3569  06E1  0831               	movf	?___flmul+3,w
  3570  06E2  00CB               	movwf	?_fround+3
  3571  06E3  0830               	movf	?___flmul+2,w
  3572  06E4  00CA               	movwf	?_fround+2
  3573  06E5  082F               	movf	?___flmul+1,w
  3574  06E6  00C9               	movwf	?_fround+1
  3575  06E7  082E               	movf	?___flmul,w
  3576  06E8  00C8               	movwf	?_fround
  3577  06E9  2FDE               	goto	l231
  3578  06EA                     l3612:
  3579  06EA  300B               	movlw	11
  3580  06EB  025B               	subwf	fround@prec,w
  3581  06EC  1C03               	skipc
  3582  06ED  2EEF               	goto	u6221
  3583  06EE  2EF0               	goto	u6220
  3584  06EF                     u6221:
  3585  06EF  2F9B               	goto	l3618
  3586  06F0                     u6220:
  3587  06F0                     l3614:
  3588                           
  3589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3590  06F0  303F               	movlw	63
  3591  06F1  00B1               	movwf	___flmul@b+3
  3592  06F2  3000               	movlw	0
  3593  06F3  00B0               	movwf	___flmul@b+2
  3594  06F4  3000               	movlw	0
  3595  06F5  00AF               	movwf	___flmul@b+1
  3596  06F6  3000               	movlw	0
  3597  06F7  00AE               	movwf	___flmul@b
  3598  06F8  300A               	movlw	10
  3599  06F9  00A4               	movwf	___lwdiv@divisor
  3600  06FA  3000               	movlw	0
  3601  06FB  00A5               	movwf	___lwdiv@divisor+1
  3602  06FC  085B               	movf	fround@prec,w
  3603  06FD  00CC               	movwf	??_fround
  3604  06FE  01CD               	clrf	??_fround+1
  3605  06FF  084C               	movf	??_fround,w
  3606  0700  00A6               	movwf	___lwdiv@dividend
  3607  0701  084D               	movf	??_fround+1,w
  3608  0702  00A7               	movwf	___lwdiv@dividend+1
  3609  0703  160A  158A  2538  120A  118A  	fcall	___lwdiv
  3610  0708  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0709  1303               	bcf	3,6	;RP1=0, select bank0
  3612  070A  0824               	movf	?___lwdiv,w
  3613  070B  00CE               	movwf	??_fround+2
  3614  070C  3001               	movlw	1
  3615  070D                     u6235:
  3616  070D  1003               	clrc
  3617  070E  0DCE               	rlf	??_fround+2,f
  3618  070F  3EFF               	addlw	-1
  3619  0710  1D03               	skipz
  3620  0711  2F0D               	goto	u6235
  3621  0712  1003               	clrc
  3622  0713  0D4E               	rlf	??_fround+2,w
  3623  0714  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3624  0715  0084               	movwf	4
  3625  0716  160A  158A  2000  120A  118A  	fcall	stringdir
  3626  071B  00CF               	movwf	??_fround+3
  3627  071C  160A  158A  2000  120A  118A  	fcall	stringdir
  3628  0721  00D0               	movwf	??_fround+4
  3629  0722  160A  158A  2000  120A  118A  	fcall	stringdir
  3630  0727  00D1               	movwf	??_fround+5
  3631  0728  160A  158A  2000  120A  118A  	fcall	stringdir
  3632  072D  00D2               	movwf	??_fround+6
  3633  072E  0852               	movf	??_fround+6,w
  3634  072F  00B5               	movwf	___flmul@a+3
  3635  0730  0851               	movf	??_fround+5,w
  3636  0731  00B4               	movwf	___flmul@a+2
  3637  0732  0850               	movf	??_fround+4,w
  3638  0733  00B3               	movwf	___flmul@a+1
  3639  0734  084F               	movf	??_fround+3,w
  3640  0735  00B2               	movwf	___flmul@a
  3641  0736  120A  158A  213C  120A  118A  	fcall	___flmul
  3642  073B  1283               	bcf	3,5	;RP0=0, select bank0
  3643  073C  1303               	bcf	3,6	;RP1=0, select bank0
  3644  073D  0831               	movf	?___flmul+3,w
  3645  073E  00DA               	movwf	_fround$1110+3
  3646  073F  0830               	movf	?___flmul+2,w
  3647  0740  00D9               	movwf	_fround$1110+2
  3648  0741  082F               	movf	?___flmul+1,w
  3649  0742  00D8               	movwf	_fround$1110+1
  3650  0743  082E               	movf	?___flmul,w
  3651  0744  00D7               	movwf	_fround$1110
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3654  0745  300A               	movlw	10
  3655  0746  00A0               	movwf	___lwmod@divisor
  3656  0747  3000               	movlw	0
  3657  0748  00A1               	movwf	___lwmod@divisor+1
  3658  0749  085B               	movf	fround@prec,w
  3659  074A  00CC               	movwf	??_fround
  3660  074B  01CD               	clrf	??_fround+1
  3661  074C  084C               	movf	??_fround,w
  3662  074D  00A2               	movwf	___lwmod@dividend
  3663  074E  084D               	movf	??_fround+1,w
  3664  074F  00A3               	movwf	___lwmod@dividend+1
  3665  0750  160A  158A  24FC  120A  118A  	fcall	___lwmod
  3666  0755  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0756  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0757  0820               	movf	?___lwmod,w
  3669  0758  00CE               	movwf	??_fround+2
  3670  0759  3001               	movlw	1
  3671  075A                     u6245:
  3672  075A  1003               	clrc
  3673  075B  0DCE               	rlf	??_fround+2,f
  3674  075C  3EFF               	addlw	-1
  3675  075D  1D03               	skipz
  3676  075E  2F5A               	goto	u6245
  3677  075F  1003               	clrc
  3678  0760  0D4E               	rlf	??_fround+2,w
  3679  0761  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3680  0762  0084               	movwf	4
  3681  0763  160A  158A  2000  120A  118A  	fcall	stringdir
  3682  0768  00CF               	movwf	??_fround+3
  3683  0769  160A  158A  2000  120A  118A  	fcall	stringdir
  3684  076E  00D0               	movwf	??_fround+4
  3685  076F  160A  158A  2000  120A  118A  	fcall	stringdir
  3686  0774  00D1               	movwf	??_fround+5
  3687  0775  160A  158A  2000  120A  118A  	fcall	stringdir
  3688  077A  00D2               	movwf	??_fround+6
  3689  077B  0852               	movf	??_fround+6,w
  3690  077C  00B1               	movwf	___flmul@b+3
  3691  077D  0851               	movf	??_fround+5,w
  3692  077E  00B0               	movwf	___flmul@b+2
  3693  077F  0850               	movf	??_fround+4,w
  3694  0780  00AF               	movwf	___flmul@b+1
  3695  0781  084F               	movf	??_fround+3,w
  3696  0782  00AE               	movwf	___flmul@b
  3697  0783  085A               	movf	_fround$1110+3,w
  3698  0784  00B5               	movwf	___flmul@a+3
  3699  0785  0859               	movf	_fround$1110+2,w
  3700  0786  00B4               	movwf	___flmul@a+2
  3701  0787  0858               	movf	_fround$1110+1,w
  3702  0788  00B3               	movwf	___flmul@a+1
  3703  0789  0857               	movf	_fround$1110,w
  3704  078A  00B2               	movwf	___flmul@a
  3705  078B  120A  158A  213C  120A  118A  	fcall	___flmul
  3706  0790  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0791  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0792  0831               	movf	?___flmul+3,w
  3709  0793  00CB               	movwf	?_fround+3
  3710  0794  0830               	movf	?___flmul+2,w
  3711  0795  00CA               	movwf	?_fround+2
  3712  0796  082F               	movf	?___flmul+1,w
  3713  0797  00C9               	movwf	?_fround+1
  3714  0798  082E               	movf	?___flmul,w
  3715  0799  00C8               	movwf	?_fround
  3716  079A  2FDE               	goto	l231
  3717  079B                     l3618:
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3720  079B  303F               	movlw	63
  3721  079C  00B1               	movwf	___flmul@b+3
  3722  079D  3000               	movlw	0
  3723  079E  00B0               	movwf	___flmul@b+2
  3724  079F  3000               	movlw	0
  3725  07A0  00AF               	movwf	___flmul@b+1
  3726  07A1  3000               	movlw	0
  3727  07A2  00AE               	movwf	___flmul@b
  3728  07A3  085B               	movf	fround@prec,w
  3729  07A4  00CC               	movwf	??_fround
  3730  07A5  3001               	movlw	1
  3731  07A6                     u6255:
  3732  07A6  1003               	clrc
  3733  07A7  0DCC               	rlf	??_fround,f
  3734  07A8  3EFF               	addlw	-1
  3735  07A9  1D03               	skipz
  3736  07AA  2FA6               	goto	u6255
  3737  07AB  1003               	clrc
  3738  07AC  0D4C               	rlf	??_fround,w
  3739  07AD  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3740  07AE  0084               	movwf	4
  3741  07AF  160A  158A  2000  120A  118A  	fcall	stringdir
  3742  07B4  00CD               	movwf	??_fround+1
  3743  07B5  160A  158A  2000  120A  118A  	fcall	stringdir
  3744  07BA  00CE               	movwf	??_fround+2
  3745  07BB  160A  158A  2000  120A  118A  	fcall	stringdir
  3746  07C0  00CF               	movwf	??_fround+3
  3747  07C1  160A  158A  2000  120A  118A  	fcall	stringdir
  3748  07C6  00D0               	movwf	??_fround+4
  3749  07C7  0850               	movf	??_fround+4,w
  3750  07C8  00B5               	movwf	___flmul@a+3
  3751  07C9  084F               	movf	??_fround+3,w
  3752  07CA  00B4               	movwf	___flmul@a+2
  3753  07CB  084E               	movf	??_fround+2,w
  3754  07CC  00B3               	movwf	___flmul@a+1
  3755  07CD  084D               	movf	??_fround+1,w
  3756  07CE  00B2               	movwf	___flmul@a
  3757  07CF  120A  158A  213C  120A  118A  	fcall	___flmul
  3758  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  3759  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  3760  07D6  0831               	movf	?___flmul+3,w
  3761  07D7  00CB               	movwf	?_fround+3
  3762  07D8  0830               	movf	?___flmul+2,w
  3763  07D9  00CA               	movwf	?_fround+2
  3764  07DA  082F               	movf	?___flmul+1,w
  3765  07DB  00C9               	movwf	?_fround+1
  3766  07DC  082E               	movf	?___flmul,w
  3767  07DD  00C8               	movwf	?_fround
  3768  07DE                     l231:
  3769  07DE  0008               	return
  3770  07DF                     __end_of_fround:
  3771                           
  3772                           	psect	text7
  3773  1CFC                     __ptext7:	
  3774 ;; *************** function ___lwmod *****************
  3775 ;; Defined at:
  3776 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  divisor         2    0[BANK0 ] unsigned int 
  3779 ;;  dividend        2    2[BANK0 ] unsigned int 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  counter         1    6[COMMON] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  2    0[BANK0 ] unsigned int 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3791 ;;      Params:         0       4       0       0       0
  3792 ;;      Locals:         1       0       0       0       0
  3793 ;;      Temps:          1       0       0       0       0
  3794 ;;      Totals:         2       4       0       0       0
  3795 ;;Total ram usage:        6 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    1
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_fround
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           
  3806                           ;psect for function ___lwmod
  3807  1CFC                     ___lwmod:
  3808  1CFC                     l3442:	
  3809                           ;incstack = 0
  3810                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3811                           
  3812  1CFC  1283               	bcf	3,5	;RP0=0, select bank0
  3813  1CFD  1303               	bcf	3,6	;RP1=0, select bank0
  3814  1CFE  0820               	movf	___lwmod@divisor,w
  3815  1CFF  0421               	iorwf	___lwmod@divisor+1,w
  3816  1D00  1903               	btfsc	3,2
  3817  1D01  2D03               	goto	u5751
  3818  1D02  2D04               	goto	u5750
  3819  1D03                     u5751:
  3820  1D03  2D33               	goto	l3460
  3821  1D04                     u5750:
  3822  1D04                     l3444:
  3823  1D04  01F6               	clrf	___lwmod@counter
  3824  1D05  0AF6               	incf	___lwmod@counter,f
  3825  1D06  2D12               	goto	l3450
  3826  1D07                     l3446:
  3827  1D07  3001               	movlw	1
  3828  1D08                     u5765:
  3829  1D08  1003               	clrc
  3830  1D09  0DA0               	rlf	___lwmod@divisor,f
  3831  1D0A  0DA1               	rlf	___lwmod@divisor+1,f
  3832  1D0B  3EFF               	addlw	-1
  3833  1D0C  1D03               	skipz
  3834  1D0D  2D08               	goto	u5765
  3835  1D0E                     l3448:
  3836  1D0E  3001               	movlw	1
  3837  1D0F  00F5               	movwf	??___lwmod
  3838  1D10  0875               	movf	??___lwmod,w
  3839  1D11  07F6               	addwf	___lwmod@counter,f
  3840  1D12                     l3450:
  3841  1D12  1FA1               	btfss	___lwmod@divisor+1,7
  3842  1D13  2D15               	goto	u5771
  3843  1D14  2D16               	goto	u5770
  3844  1D15                     u5771:
  3845  1D15  2D07               	goto	l3446
  3846  1D16                     u5770:
  3847  1D16                     l3452:
  3848  1D16  0821               	movf	___lwmod@divisor+1,w
  3849  1D17  0223               	subwf	___lwmod@dividend+1,w
  3850  1D18  1D03               	skipz
  3851  1D19  2D1C               	goto	u5785
  3852  1D1A  0820               	movf	___lwmod@divisor,w
  3853  1D1B  0222               	subwf	___lwmod@dividend,w
  3854  1D1C                     u5785:
  3855  1D1C  1C03               	skipc
  3856  1D1D  2D1F               	goto	u5781
  3857  1D1E  2D20               	goto	u5780
  3858  1D1F                     u5781:
  3859  1D1F  2D26               	goto	l3456
  3860  1D20                     u5780:
  3861  1D20                     l3454:
  3862  1D20  0820               	movf	___lwmod@divisor,w
  3863  1D21  02A2               	subwf	___lwmod@dividend,f
  3864  1D22  0821               	movf	___lwmod@divisor+1,w
  3865  1D23  1C03               	skipc
  3866  1D24  03A3               	decf	___lwmod@dividend+1,f
  3867  1D25  02A3               	subwf	___lwmod@dividend+1,f
  3868  1D26                     l3456:
  3869  1D26  3001               	movlw	1
  3870  1D27                     u5795:
  3871  1D27  1003               	clrc
  3872  1D28  0CA1               	rrf	___lwmod@divisor+1,f
  3873  1D29  0CA0               	rrf	___lwmod@divisor,f
  3874  1D2A  3EFF               	addlw	-1
  3875  1D2B  1D03               	skipz
  3876  1D2C  2D27               	goto	u5795
  3877  1D2D                     l3458:
  3878  1D2D  3001               	movlw	1
  3879  1D2E  02F6               	subwf	___lwmod@counter,f
  3880  1D2F  1D03               	btfss	3,2
  3881  1D30  2D32               	goto	u5801
  3882  1D31  2D33               	goto	u5800
  3883  1D32                     u5801:
  3884  1D32  2D16               	goto	l3452
  3885  1D33                     u5800:
  3886  1D33                     l3460:
  3887  1D33  0823               	movf	___lwmod@dividend+1,w
  3888  1D34  00A1               	movwf	?___lwmod+1
  3889  1D35  0822               	movf	___lwmod@dividend,w
  3890  1D36  00A0               	movwf	?___lwmod
  3891  1D37                     l641:
  3892  1D37  0008               	return
  3893  1D38                     __end_of___lwmod:
  3894                           
  3895                           	psect	text8
  3896  1D38                     __ptext8:	
  3897 ;; *************** function ___lwdiv *****************
  3898 ;; Defined at:
  3899 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  divisor         2    4[BANK0 ] unsigned int 
  3902 ;;  dividend        2    6[BANK0 ] unsigned int 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  quotient        2    9[BANK0 ] unsigned int 
  3905 ;;  counter         1   11[BANK0 ] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  2    4[BANK0 ] unsigned int 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         0       4       0       0       0
  3916 ;;      Locals:         0       3       0       0       0
  3917 ;;      Temps:          0       1       0       0       0
  3918 ;;      Totals:         0       8       0       0       0
  3919 ;;Total ram usage:        8 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    1
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_fround
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           
  3930                           ;psect for function ___lwdiv
  3931  1D38                     ___lwdiv:
  3932  1D38                     l2212:	
  3933                           ;incstack = 0
  3934                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3935                           
  3936  1D38  1283               	bcf	3,5	;RP0=0, select bank0
  3937  1D39  1303               	bcf	3,6	;RP1=0, select bank0
  3938  1D3A  01A9               	clrf	___lwdiv@quotient
  3939  1D3B  01AA               	clrf	___lwdiv@quotient+1
  3940  1D3C                     l2214:
  3941  1D3C  0824               	movf	___lwdiv@divisor,w
  3942  1D3D  0425               	iorwf	___lwdiv@divisor+1,w
  3943  1D3E  1903               	btfsc	3,2
  3944  1D3F  2D41               	goto	u2991
  3945  1D40  2D42               	goto	u2990
  3946  1D41                     u2991:
  3947  1D41  2D79               	goto	l2234
  3948  1D42                     u2990:
  3949  1D42                     l2216:
  3950  1D42  01AB               	clrf	___lwdiv@counter
  3951  1D43  0AAB               	incf	___lwdiv@counter,f
  3952  1D44  2D50               	goto	l2222
  3953  1D45                     l2218:
  3954  1D45  3001               	movlw	1
  3955  1D46                     u3005:
  3956  1D46  1003               	clrc
  3957  1D47  0DA4               	rlf	___lwdiv@divisor,f
  3958  1D48  0DA5               	rlf	___lwdiv@divisor+1,f
  3959  1D49  3EFF               	addlw	-1
  3960  1D4A  1D03               	skipz
  3961  1D4B  2D46               	goto	u3005
  3962  1D4C                     l2220:
  3963  1D4C  3001               	movlw	1
  3964  1D4D  00A8               	movwf	??___lwdiv
  3965  1D4E  0828               	movf	??___lwdiv,w
  3966  1D4F  07AB               	addwf	___lwdiv@counter,f
  3967  1D50                     l2222:
  3968  1D50  1FA5               	btfss	___lwdiv@divisor+1,7
  3969  1D51  2D53               	goto	u3011
  3970  1D52  2D54               	goto	u3010
  3971  1D53                     u3011:
  3972  1D53  2D45               	goto	l2218
  3973  1D54                     u3010:
  3974  1D54                     l2224:
  3975  1D54  3001               	movlw	1
  3976  1D55                     u3025:
  3977  1D55  1003               	clrc
  3978  1D56  0DA9               	rlf	___lwdiv@quotient,f
  3979  1D57  0DAA               	rlf	___lwdiv@quotient+1,f
  3980  1D58  3EFF               	addlw	-1
  3981  1D59  1D03               	skipz
  3982  1D5A  2D55               	goto	u3025
  3983  1D5B  0825               	movf	___lwdiv@divisor+1,w
  3984  1D5C  0227               	subwf	___lwdiv@dividend+1,w
  3985  1D5D  1D03               	skipz
  3986  1D5E  2D61               	goto	u3035
  3987  1D5F  0824               	movf	___lwdiv@divisor,w
  3988  1D60  0226               	subwf	___lwdiv@dividend,w
  3989  1D61                     u3035:
  3990  1D61  1C03               	skipc
  3991  1D62  2D64               	goto	u3031
  3992  1D63  2D65               	goto	u3030
  3993  1D64                     u3031:
  3994  1D64  2D6C               	goto	l2230
  3995  1D65                     u3030:
  3996  1D65                     l2226:
  3997  1D65  0824               	movf	___lwdiv@divisor,w
  3998  1D66  02A6               	subwf	___lwdiv@dividend,f
  3999  1D67  0825               	movf	___lwdiv@divisor+1,w
  4000  1D68  1C03               	skipc
  4001  1D69  03A7               	decf	___lwdiv@dividend+1,f
  4002  1D6A  02A7               	subwf	___lwdiv@dividend+1,f
  4003  1D6B                     l2228:
  4004  1D6B  1429               	bsf	___lwdiv@quotient,0
  4005  1D6C                     l2230:
  4006  1D6C  3001               	movlw	1
  4007  1D6D                     u3045:
  4008  1D6D  1003               	clrc
  4009  1D6E  0CA5               	rrf	___lwdiv@divisor+1,f
  4010  1D6F  0CA4               	rrf	___lwdiv@divisor,f
  4011  1D70  3EFF               	addlw	-1
  4012  1D71  1D03               	skipz
  4013  1D72  2D6D               	goto	u3045
  4014  1D73                     l2232:
  4015  1D73  3001               	movlw	1
  4016  1D74  02AB               	subwf	___lwdiv@counter,f
  4017  1D75  1D03               	btfss	3,2
  4018  1D76  2D78               	goto	u3051
  4019  1D77  2D79               	goto	u3050
  4020  1D78                     u3051:
  4021  1D78  2D54               	goto	l2224
  4022  1D79                     u3050:
  4023  1D79                     l2234:
  4024  1D79  082A               	movf	___lwdiv@quotient+1,w
  4025  1D7A  00A5               	movwf	?___lwdiv+1
  4026  1D7B  0829               	movf	___lwdiv@quotient,w
  4027  1D7C  00A4               	movwf	?___lwdiv
  4028  1D7D                     l631:
  4029  1D7D  0008               	return
  4030  1D7E                     __end_of___lwdiv:
  4031                           
  4032                           	psect	text9
  4033  093C                     __ptext9:	
  4034 ;; *************** function ___flmul *****************
  4035 ;; Defined at:
  4036 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  b               4   14[BANK0 ] unsigned int 
  4039 ;;  a               4   18[BANK0 ] unsigned int 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  prod            4   34[BANK0 ] struct .
  4042 ;;  grs             4   29[BANK0 ] unsigned long 
  4043 ;;  temp            2   38[BANK0 ] struct .
  4044 ;;  bexp            1   33[BANK0 ] unsigned char 
  4045 ;;  aexp            1   28[BANK0 ] unsigned char 
  4046 ;;  sign            1   27[BANK0 ] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  4   14[BANK0 ] unsigned char 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4056 ;;      Params:         0       8       0       0       0
  4057 ;;      Locals:         0      13       0       0       0
  4058 ;;      Temps:          0       5       0       0       0
  4059 ;;      Totals:         0      26       0       0       0
  4060 ;;Total ram usage:       26 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    2
  4063 ;; This function calls:
  4064 ;;		__Umul8_16
  4065 ;; This function is called by:
  4066 ;;		_fround
  4067 ;;		_scale
  4068 ;;		_sprintf
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           
  4073                           ;psect for function ___flmul
  4074  093C                     ___flmul:
  4075  093C                     l3464:	
  4076                           ;incstack = 0
  4077                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4078                           
  4079  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4080  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4081  093E  0831               	movf	___flmul@b+3,w
  4082  093F  3980               	andlw	128
  4083  0940  00B6               	movwf	??___flmul
  4084  0941  0836               	movf	??___flmul,w
  4085  0942  00BB               	movwf	___flmul@sign
  4086  0943                     l3466:
  4087  0943  0831               	movf	___flmul@b+3,w
  4088  0944  00B6               	movwf	??___flmul
  4089  0945  0736               	addwf	??___flmul,w
  4090  0946  00B7               	movwf	??___flmul+1
  4091  0947  0837               	movf	??___flmul+1,w
  4092  0948  00C1               	movwf	___flmul@bexp
  4093  0949                     l3468:
  4094  0949  1FB0               	btfss	___flmul@b+2,7
  4095  094A  294C               	goto	u5811
  4096  094B  294D               	goto	u5810
  4097  094C                     u5811:
  4098  094C  294E               	goto	l3472
  4099  094D                     u5810:
  4100  094D                     l3470:
  4101  094D  1441               	bsf	___flmul@bexp,0
  4102  094E                     l3472:
  4103  094E  0841               	movf	___flmul@bexp,w
  4104  094F  1903               	btfsc	3,2
  4105  0950  2952               	goto	u5821
  4106  0951  2953               	goto	u5820
  4107  0952                     u5821:
  4108  0952  2962               	goto	l3480
  4109  0953                     u5820:
  4110  0953                     l3474:
  4111  0953  0A41               	incf	___flmul@bexp,w
  4112  0954  1D03               	btfss	3,2
  4113  0955  2957               	goto	u5831
  4114  0956  2958               	goto	u5830
  4115  0957                     u5831:
  4116  0957  2960               	goto	l3478
  4117  0958                     u5830:
  4118  0958                     l3476:
  4119  0958  3000               	movlw	0
  4120  0959  00B1               	movwf	___flmul@b+3
  4121  095A  3000               	movlw	0
  4122  095B  00B0               	movwf	___flmul@b+2
  4123  095C  3000               	movlw	0
  4124  095D  00AF               	movwf	___flmul@b+1
  4125  095E  3000               	movlw	0
  4126  095F  00AE               	movwf	___flmul@b
  4127  0960                     l3478:
  4128  0960  17B0               	bsf	___flmul@b+2,7
  4129  0961  296A               	goto	l3482
  4130  0962                     l3480:
  4131  0962  3000               	movlw	0
  4132  0963  00B1               	movwf	___flmul@b+3
  4133  0964  3000               	movlw	0
  4134  0965  00B0               	movwf	___flmul@b+2
  4135  0966  3000               	movlw	0
  4136  0967  00AF               	movwf	___flmul@b+1
  4137  0968  3000               	movlw	0
  4138  0969  00AE               	movwf	___flmul@b
  4139  096A                     l3482:
  4140  096A  0835               	movf	___flmul@a+3,w
  4141  096B  3980               	andlw	128
  4142  096C  00B6               	movwf	??___flmul
  4143  096D  0836               	movf	??___flmul,w
  4144  096E  06BB               	xorwf	___flmul@sign,f
  4145  096F                     l3484:
  4146  096F  0835               	movf	___flmul@a+3,w
  4147  0970  00B6               	movwf	??___flmul
  4148  0971  0736               	addwf	??___flmul,w
  4149  0972  00B7               	movwf	??___flmul+1
  4150  0973  0837               	movf	??___flmul+1,w
  4151  0974  00BC               	movwf	___flmul@aexp
  4152  0975                     l3486:
  4153  0975  1FB4               	btfss	___flmul@a+2,7
  4154  0976  2978               	goto	u5841
  4155  0977  2979               	goto	u5840
  4156  0978                     u5841:
  4157  0978  297A               	goto	l3490
  4158  0979                     u5840:
  4159  0979                     l3488:
  4160  0979  143C               	bsf	___flmul@aexp,0
  4161  097A                     l3490:
  4162  097A  083C               	movf	___flmul@aexp,w
  4163  097B  1903               	btfsc	3,2
  4164  097C  297E               	goto	u5851
  4165  097D  297F               	goto	u5850
  4166  097E                     u5851:
  4167  097E  298E               	goto	l3498
  4168  097F                     u5850:
  4169  097F                     l3492:
  4170  097F  0A3C               	incf	___flmul@aexp,w
  4171  0980  1D03               	btfss	3,2
  4172  0981  2983               	goto	u5861
  4173  0982  2984               	goto	u5860
  4174  0983                     u5861:
  4175  0983  298C               	goto	l3496
  4176  0984                     u5860:
  4177  0984                     l3494:
  4178  0984  3000               	movlw	0
  4179  0985  00B5               	movwf	___flmul@a+3
  4180  0986  3000               	movlw	0
  4181  0987  00B4               	movwf	___flmul@a+2
  4182  0988  3000               	movlw	0
  4183  0989  00B3               	movwf	___flmul@a+1
  4184  098A  3000               	movlw	0
  4185  098B  00B2               	movwf	___flmul@a
  4186  098C                     l3496:
  4187  098C  17B4               	bsf	___flmul@a+2,7
  4188  098D  2996               	goto	l3500
  4189  098E                     l3498:
  4190  098E  3000               	movlw	0
  4191  098F  00B5               	movwf	___flmul@a+3
  4192  0990  3000               	movlw	0
  4193  0991  00B4               	movwf	___flmul@a+2
  4194  0992  3000               	movlw	0
  4195  0993  00B3               	movwf	___flmul@a+1
  4196  0994  3000               	movlw	0
  4197  0995  00B2               	movwf	___flmul@a
  4198  0996                     l3500:
  4199  0996  083C               	movf	___flmul@aexp,w
  4200  0997  1903               	btfsc	3,2
  4201  0998  299A               	goto	u5871
  4202  0999  299B               	goto	u5870
  4203  099A                     u5871:
  4204  099A  29A0               	goto	l3504
  4205  099B                     u5870:
  4206  099B                     l3502:
  4207  099B  0841               	movf	___flmul@bexp,w
  4208  099C  1D03               	btfss	3,2
  4209  099D  299F               	goto	u5881
  4210  099E  29A0               	goto	u5880
  4211  099F                     u5881:
  4212  099F  29A9               	goto	l3508
  4213  09A0                     u5880:
  4214  09A0                     l3504:
  4215  09A0  3000               	movlw	0
  4216  09A1  00B1               	movwf	?___flmul+3
  4217  09A2  3000               	movlw	0
  4218  09A3  00B0               	movwf	?___flmul+2
  4219  09A4  3000               	movlw	0
  4220  09A5  00AF               	movwf	?___flmul+1
  4221  09A6  3000               	movlw	0
  4222  09A7  00AE               	movwf	?___flmul
  4223  09A8  2C9C               	goto	l748
  4224  09A9                     l3508:
  4225  09A9  082E               	movf	___flmul@b,w
  4226  09AA  00B6               	movwf	??___flmul
  4227  09AB  0836               	movf	??___flmul,w
  4228  09AC  00F5               	movwf	__Umul8_16@multiplicand
  4229  09AD  0834               	movf	___flmul@a+2,w
  4230  09AE  160A  158A  2499  120A  158A  	fcall	__Umul8_16
  4231  09B3  0876               	movf	?__Umul8_16+1,w
  4232  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4233  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4234  09B6  00C7               	movwf	___flmul@temp+1
  4235  09B7  0875               	movf	?__Umul8_16,w
  4236  09B8  00C6               	movwf	___flmul@temp
  4237  09B9                     l3510:
  4238  09B9  0846               	movf	___flmul@temp,w
  4239  09BA  00B6               	movwf	??___flmul
  4240  09BB  01B7               	clrf	??___flmul+1
  4241  09BC  01B8               	clrf	??___flmul+2
  4242  09BD  01B9               	clrf	??___flmul+3
  4243  09BE  0839               	movf	??___flmul+3,w
  4244  09BF  00C0               	movwf	___flmul@grs+3
  4245  09C0  0838               	movf	??___flmul+2,w
  4246  09C1  00BF               	movwf	___flmul@grs+2
  4247  09C2  0837               	movf	??___flmul+1,w
  4248  09C3  00BE               	movwf	___flmul@grs+1
  4249  09C4  0836               	movf	??___flmul,w
  4250  09C5  00BD               	movwf	___flmul@grs
  4251  09C6                     l3512:
  4252  09C6  0847               	movf	___flmul@temp+1,w
  4253  09C7  00B6               	movwf	??___flmul
  4254  09C8  01B7               	clrf	??___flmul+1
  4255  09C9  01B8               	clrf	??___flmul+2
  4256  09CA  01B9               	clrf	??___flmul+3
  4257  09CB  0839               	movf	??___flmul+3,w
  4258  09CC  00C5               	movwf	___flmul@prod+3
  4259  09CD  0838               	movf	??___flmul+2,w
  4260  09CE  00C4               	movwf	___flmul@prod+2
  4261  09CF  0837               	movf	??___flmul+1,w
  4262  09D0  00C3               	movwf	___flmul@prod+1
  4263  09D1  0836               	movf	??___flmul,w
  4264  09D2  00C2               	movwf	___flmul@prod
  4265  09D3  082F               	movf	___flmul@b+1,w
  4266  09D4  00B6               	movwf	??___flmul
  4267  09D5  0836               	movf	??___flmul,w
  4268  09D6  00F5               	movwf	__Umul8_16@multiplicand
  4269  09D7  0833               	movf	___flmul@a+1,w
  4270  09D8  160A  158A  2499  120A  158A  	fcall	__Umul8_16
  4271  09DD  0876               	movf	?__Umul8_16+1,w
  4272  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4273  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4274  09E0  00C7               	movwf	___flmul@temp+1
  4275  09E1  0875               	movf	?__Umul8_16,w
  4276  09E2  00C6               	movwf	___flmul@temp
  4277  09E3                     l3514:
  4278  09E3  0846               	movf	___flmul@temp,w
  4279  09E4  00B6               	movwf	??___flmul
  4280  09E5  01B7               	clrf	??___flmul+1
  4281  09E6  01B8               	clrf	??___flmul+2
  4282  09E7  01B9               	clrf	??___flmul+3
  4283  09E8  0836               	movf	??___flmul,w
  4284  09E9  07BD               	addwf	___flmul@grs,f
  4285  09EA  0837               	movf	??___flmul+1,w
  4286  09EB  1103               	clrz
  4287  09EC  1803               	skipnc
  4288  09ED  3E01               	addlw	1
  4289  09EE  1903               	skipnz
  4290  09EF  29F1               	goto	u5891
  4291  09F0  07BE               	addwf	___flmul@grs+1,f
  4292  09F1                     u5891:
  4293  09F1  0838               	movf	??___flmul+2,w
  4294  09F2  1103               	clrz
  4295  09F3  1803               	skipnc
  4296  09F4  3E01               	addlw	1
  4297  09F5  1903               	skipnz
  4298  09F6  29F8               	goto	u5892
  4299  09F7  07BF               	addwf	___flmul@grs+2,f
  4300  09F8                     u5892:
  4301  09F8  0839               	movf	??___flmul+3,w
  4302  09F9  1103               	clrz
  4303  09FA  1803               	skipnc
  4304  09FB  3E01               	addlw	1
  4305  09FC  1903               	skipnz
  4306  09FD  29FF               	goto	u5893
  4307  09FE  07C0               	addwf	___flmul@grs+3,f
  4308  09FF                     u5893:
  4309  09FF                     l3516:
  4310  09FF  0847               	movf	___flmul@temp+1,w
  4311  0A00  00B6               	movwf	??___flmul
  4312  0A01  01B7               	clrf	??___flmul+1
  4313  0A02  01B8               	clrf	??___flmul+2
  4314  0A03  01B9               	clrf	??___flmul+3
  4315  0A04  0836               	movf	??___flmul,w
  4316  0A05  07C2               	addwf	___flmul@prod,f
  4317  0A06  0837               	movf	??___flmul+1,w
  4318  0A07  1103               	clrz
  4319  0A08  1803               	skipnc
  4320  0A09  3E01               	addlw	1
  4321  0A0A  1903               	skipnz
  4322  0A0B  2A0D               	goto	u5901
  4323  0A0C  07C3               	addwf	___flmul@prod+1,f
  4324  0A0D                     u5901:
  4325  0A0D  0838               	movf	??___flmul+2,w
  4326  0A0E  1103               	clrz
  4327  0A0F  1803               	skipnc
  4328  0A10  3E01               	addlw	1
  4329  0A11  1903               	skipnz
  4330  0A12  2A14               	goto	u5902
  4331  0A13  07C4               	addwf	___flmul@prod+2,f
  4332  0A14                     u5902:
  4333  0A14  0839               	movf	??___flmul+3,w
  4334  0A15  1103               	clrz
  4335  0A16  1803               	skipnc
  4336  0A17  3E01               	addlw	1
  4337  0A18  1903               	skipnz
  4338  0A19  2A1B               	goto	u5903
  4339  0A1A  07C5               	addwf	___flmul@prod+3,f
  4340  0A1B                     u5903:
  4341  0A1B  0830               	movf	___flmul@b+2,w
  4342  0A1C  00B6               	movwf	??___flmul
  4343  0A1D  0836               	movf	??___flmul,w
  4344  0A1E  00F5               	movwf	__Umul8_16@multiplicand
  4345  0A1F  0832               	movf	___flmul@a,w
  4346  0A20  160A  158A  2499  120A  158A  	fcall	__Umul8_16
  4347  0A25  0876               	movf	?__Umul8_16+1,w
  4348  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4349  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4350  0A28  00C7               	movwf	___flmul@temp+1
  4351  0A29  0875               	movf	?__Umul8_16,w
  4352  0A2A  00C6               	movwf	___flmul@temp
  4353  0A2B                     l3518:
  4354  0A2B  0846               	movf	___flmul@temp,w
  4355  0A2C  00B6               	movwf	??___flmul
  4356  0A2D  01B7               	clrf	??___flmul+1
  4357  0A2E  01B8               	clrf	??___flmul+2
  4358  0A2F  01B9               	clrf	??___flmul+3
  4359  0A30  0836               	movf	??___flmul,w
  4360  0A31  07BD               	addwf	___flmul@grs,f
  4361  0A32  0837               	movf	??___flmul+1,w
  4362  0A33  1103               	clrz
  4363  0A34  1803               	skipnc
  4364  0A35  3E01               	addlw	1
  4365  0A36  1903               	skipnz
  4366  0A37  2A39               	goto	u5911
  4367  0A38  07BE               	addwf	___flmul@grs+1,f
  4368  0A39                     u5911:
  4369  0A39  0838               	movf	??___flmul+2,w
  4370  0A3A  1103               	clrz
  4371  0A3B  1803               	skipnc
  4372  0A3C  3E01               	addlw	1
  4373  0A3D  1903               	skipnz
  4374  0A3E  2A40               	goto	u5912
  4375  0A3F  07BF               	addwf	___flmul@grs+2,f
  4376  0A40                     u5912:
  4377  0A40  0839               	movf	??___flmul+3,w
  4378  0A41  1103               	clrz
  4379  0A42  1803               	skipnc
  4380  0A43  3E01               	addlw	1
  4381  0A44  1903               	skipnz
  4382  0A45  2A47               	goto	u5913
  4383  0A46  07C0               	addwf	___flmul@grs+3,f
  4384  0A47                     u5913:
  4385  0A47                     l3520:
  4386  0A47  0847               	movf	___flmul@temp+1,w
  4387  0A48  00B6               	movwf	??___flmul
  4388  0A49  01B7               	clrf	??___flmul+1
  4389  0A4A  01B8               	clrf	??___flmul+2
  4390  0A4B  01B9               	clrf	??___flmul+3
  4391  0A4C  0836               	movf	??___flmul,w
  4392  0A4D  07C2               	addwf	___flmul@prod,f
  4393  0A4E  0837               	movf	??___flmul+1,w
  4394  0A4F  1103               	clrz
  4395  0A50  1803               	skipnc
  4396  0A51  3E01               	addlw	1
  4397  0A52  1903               	skipnz
  4398  0A53  2A55               	goto	u5921
  4399  0A54  07C3               	addwf	___flmul@prod+1,f
  4400  0A55                     u5921:
  4401  0A55  0838               	movf	??___flmul+2,w
  4402  0A56  1103               	clrz
  4403  0A57  1803               	skipnc
  4404  0A58  3E01               	addlw	1
  4405  0A59  1903               	skipnz
  4406  0A5A  2A5C               	goto	u5922
  4407  0A5B  07C4               	addwf	___flmul@prod+2,f
  4408  0A5C                     u5922:
  4409  0A5C  0839               	movf	??___flmul+3,w
  4410  0A5D  1103               	clrz
  4411  0A5E  1803               	skipnc
  4412  0A5F  3E01               	addlw	1
  4413  0A60  1903               	skipnz
  4414  0A61  2A63               	goto	u5923
  4415  0A62  07C5               	addwf	___flmul@prod+3,f
  4416  0A63                     u5923:
  4417  0A63                     l3522:
  4418  0A63  3008               	movlw	8
  4419  0A64  00B6               	movwf	??___flmul
  4420  0A65                     u5935:
  4421  0A65  1003               	clrc
  4422  0A66  0DBD               	rlf	___flmul@grs,f
  4423  0A67  0DBE               	rlf	___flmul@grs+1,f
  4424  0A68  0DBF               	rlf	___flmul@grs+2,f
  4425  0A69  0DC0               	rlf	___flmul@grs+3,f
  4426  0A6A  0BB6               	decfsz	??___flmul,f
  4427  0A6B  2A65               	goto	u5935
  4428  0A6C                     l3524:
  4429  0A6C  082F               	movf	___flmul@b+1,w
  4430  0A6D  00B6               	movwf	??___flmul
  4431  0A6E  0836               	movf	??___flmul,w
  4432  0A6F  00F5               	movwf	__Umul8_16@multiplicand
  4433  0A70  0832               	movf	___flmul@a,w
  4434  0A71  160A  158A  2499  120A  158A  	fcall	__Umul8_16
  4435  0A76  0876               	movf	?__Umul8_16+1,w
  4436  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4437  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4438  0A79  00C7               	movwf	___flmul@temp+1
  4439  0A7A  0875               	movf	?__Umul8_16,w
  4440  0A7B  00C6               	movwf	___flmul@temp
  4441  0A7C                     l3526:
  4442  0A7C  0846               	movf	___flmul@temp,w
  4443  0A7D  00B6               	movwf	??___flmul
  4444  0A7E  0847               	movf	___flmul@temp+1,w
  4445  0A7F  00B7               	movwf	??___flmul+1
  4446  0A80  01B8               	clrf	??___flmul+2
  4447  0A81  01B9               	clrf	??___flmul+3
  4448  0A82  0836               	movf	??___flmul,w
  4449  0A83  07BD               	addwf	___flmul@grs,f
  4450  0A84  0837               	movf	??___flmul+1,w
  4451  0A85  1103               	clrz
  4452  0A86  1803               	skipnc
  4453  0A87  3E01               	addlw	1
  4454  0A88  1903               	skipnz
  4455  0A89  2A8B               	goto	u5941
  4456  0A8A  07BE               	addwf	___flmul@grs+1,f
  4457  0A8B                     u5941:
  4458  0A8B  0838               	movf	??___flmul+2,w
  4459  0A8C  1103               	clrz
  4460  0A8D  1803               	skipnc
  4461  0A8E  3E01               	addlw	1
  4462  0A8F  1903               	skipnz
  4463  0A90  2A92               	goto	u5942
  4464  0A91  07BF               	addwf	___flmul@grs+2,f
  4465  0A92                     u5942:
  4466  0A92  0839               	movf	??___flmul+3,w
  4467  0A93  1103               	clrz
  4468  0A94  1803               	skipnc
  4469  0A95  3E01               	addlw	1
  4470  0A96  1903               	skipnz
  4471  0A97  2A99               	goto	u5943
  4472  0A98  07C0               	addwf	___flmul@grs+3,f
  4473  0A99                     u5943:
  4474  0A99                     l3528:
  4475  0A99  082E               	movf	___flmul@b,w
  4476  0A9A  00B6               	movwf	??___flmul
  4477  0A9B  0836               	movf	??___flmul,w
  4478  0A9C  00F5               	movwf	__Umul8_16@multiplicand
  4479  0A9D  0833               	movf	___flmul@a+1,w
  4480  0A9E  160A  158A  2499  120A  158A  	fcall	__Umul8_16
  4481  0AA3  0876               	movf	?__Umul8_16+1,w
  4482  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4483  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4484  0AA6  00C7               	movwf	___flmul@temp+1
  4485  0AA7  0875               	movf	?__Umul8_16,w
  4486  0AA8  00C6               	movwf	___flmul@temp
  4487  0AA9                     l3530:
  4488  0AA9  0846               	movf	___flmul@temp,w
  4489  0AAA  00B6               	movwf	??___flmul
  4490  0AAB  0847               	movf	___flmul@temp+1,w
  4491  0AAC  00B7               	movwf	??___flmul+1
  4492  0AAD  01B8               	clrf	??___flmul+2
  4493  0AAE  01B9               	clrf	??___flmul+3
  4494  0AAF  0836               	movf	??___flmul,w
  4495  0AB0  07BD               	addwf	___flmul@grs,f
  4496  0AB1  0837               	movf	??___flmul+1,w
  4497  0AB2  1103               	clrz
  4498  0AB3  1803               	skipnc
  4499  0AB4  3E01               	addlw	1
  4500  0AB5  1903               	skipnz
  4501  0AB6  2AB8               	goto	u5951
  4502  0AB7  07BE               	addwf	___flmul@grs+1,f
  4503  0AB8                     u5951:
  4504  0AB8  0838               	movf	??___flmul+2,w
  4505  0AB9  1103               	clrz
  4506  0ABA  1803               	skipnc
  4507  0ABB  3E01               	addlw	1
  4508  0ABC  1903               	skipnz
  4509  0ABD  2ABF               	goto	u5952
  4510  0ABE  07BF               	addwf	___flmul@grs+2,f
  4511  0ABF                     u5952:
  4512  0ABF  0839               	movf	??___flmul+3,w
  4513  0AC0  1103               	clrz
  4514  0AC1  1803               	skipnc
  4515  0AC2  3E01               	addlw	1
  4516  0AC3  1903               	skipnz
  4517  0AC4  2AC6               	goto	u5953
  4518  0AC5  07C0               	addwf	___flmul@grs+3,f
  4519  0AC6                     u5953:
  4520  0AC6                     l3532:
  4521  0AC6  3008               	movlw	8
  4522  0AC7  00B6               	movwf	??___flmul
  4523  0AC8                     u5965:
  4524  0AC8  1003               	clrc
  4525  0AC9  0DBD               	rlf	___flmul@grs,f
  4526  0ACA  0DBE               	rlf	___flmul@grs+1,f
  4527  0ACB  0DBF               	rlf	___flmul@grs+2,f
  4528  0ACC  0DC0               	rlf	___flmul@grs+3,f
  4529  0ACD  0BB6               	decfsz	??___flmul,f
  4530  0ACE  2AC8               	goto	u5965
  4531  0ACF  082E               	movf	___flmul@b,w
  4532  0AD0  00B6               	movwf	??___flmul
  4533  0AD1  0836               	movf	??___flmul,w
  4534  0AD2  00F5               	movwf	__Umul8_16@multiplicand
  4535  0AD3  0832               	movf	___flmul@a,w
  4536  0AD4  160A  158A  2499  120A  158A  	fcall	__Umul8_16
  4537  0AD9  0876               	movf	?__Umul8_16+1,w
  4538  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4539  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0ADC  00C7               	movwf	___flmul@temp+1
  4541  0ADD  0875               	movf	?__Umul8_16,w
  4542  0ADE  00C6               	movwf	___flmul@temp
  4543  0ADF                     l3534:
  4544  0ADF  0846               	movf	___flmul@temp,w
  4545  0AE0  00B6               	movwf	??___flmul
  4546  0AE1  0847               	movf	___flmul@temp+1,w
  4547  0AE2  00B7               	movwf	??___flmul+1
  4548  0AE3  01B8               	clrf	??___flmul+2
  4549  0AE4  01B9               	clrf	??___flmul+3
  4550  0AE5  0836               	movf	??___flmul,w
  4551  0AE6  07BD               	addwf	___flmul@grs,f
  4552  0AE7  0837               	movf	??___flmul+1,w
  4553  0AE8  1103               	clrz
  4554  0AE9  1803               	skipnc
  4555  0AEA  3E01               	addlw	1
  4556  0AEB  1903               	skipnz
  4557  0AEC  2AEE               	goto	u5971
  4558  0AED  07BE               	addwf	___flmul@grs+1,f
  4559  0AEE                     u5971:
  4560  0AEE  0838               	movf	??___flmul+2,w
  4561  0AEF  1103               	clrz
  4562  0AF0  1803               	skipnc
  4563  0AF1  3E01               	addlw	1
  4564  0AF2  1903               	skipnz
  4565  0AF3  2AF5               	goto	u5972
  4566  0AF4  07BF               	addwf	___flmul@grs+2,f
  4567  0AF5                     u5972:
  4568  0AF5  0839               	movf	??___flmul+3,w
  4569  0AF6  1103               	clrz
  4570  0AF7  1803               	skipnc
  4571  0AF8  3E01               	addlw	1
  4572  0AF9  1903               	skipnz
  4573  0AFA  2AFC               	goto	u5973
  4574  0AFB  07C0               	addwf	___flmul@grs+3,f
  4575  0AFC                     u5973:
  4576  0AFC                     l3536:
  4577  0AFC  082F               	movf	___flmul@b+1,w
  4578  0AFD  00B6               	movwf	??___flmul
  4579  0AFE  0836               	movf	??___flmul,w
  4580  0AFF  00F5               	movwf	__Umul8_16@multiplicand
  4581  0B00  0834               	movf	___flmul@a+2,w
  4582  0B01  160A  158A  2499  120A  158A  	fcall	__Umul8_16
  4583  0B06  0876               	movf	?__Umul8_16+1,w
  4584  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4585  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4586  0B09  00C7               	movwf	___flmul@temp+1
  4587  0B0A  0875               	movf	?__Umul8_16,w
  4588  0B0B  00C6               	movwf	___flmul@temp
  4589  0B0C  0846               	movf	___flmul@temp,w
  4590  0B0D  00B6               	movwf	??___flmul
  4591  0B0E  0847               	movf	___flmul@temp+1,w
  4592  0B0F  00B7               	movwf	??___flmul+1
  4593  0B10  01B8               	clrf	??___flmul+2
  4594  0B11  01B9               	clrf	??___flmul+3
  4595  0B12  0836               	movf	??___flmul,w
  4596  0B13  07C2               	addwf	___flmul@prod,f
  4597  0B14  0837               	movf	??___flmul+1,w
  4598  0B15  1103               	clrz
  4599  0B16  1803               	skipnc
  4600  0B17  3E01               	addlw	1
  4601  0B18  1903               	skipnz
  4602  0B19  2B1B               	goto	u5981
  4603  0B1A  07C3               	addwf	___flmul@prod+1,f
  4604  0B1B                     u5981:
  4605  0B1B  0838               	movf	??___flmul+2,w
  4606  0B1C  1103               	clrz
  4607  0B1D  1803               	skipnc
  4608  0B1E  3E01               	addlw	1
  4609  0B1F  1903               	skipnz
  4610  0B20  2B22               	goto	u5982
  4611  0B21  07C4               	addwf	___flmul@prod+2,f
  4612  0B22                     u5982:
  4613  0B22  0839               	movf	??___flmul+3,w
  4614  0B23  1103               	clrz
  4615  0B24  1803               	skipnc
  4616  0B25  3E01               	addlw	1
  4617  0B26  1903               	skipnz
  4618  0B27  2B29               	goto	u5983
  4619  0B28  07C5               	addwf	___flmul@prod+3,f
  4620  0B29                     u5983:
  4621  0B29                     l3538:
  4622  0B29  0830               	movf	___flmul@b+2,w
  4623  0B2A  00B6               	movwf	??___flmul
  4624  0B2B  0836               	movf	??___flmul,w
  4625  0B2C  00F5               	movwf	__Umul8_16@multiplicand
  4626  0B2D  0833               	movf	___flmul@a+1,w
  4627  0B2E  160A  158A  2499  120A  158A  	fcall	__Umul8_16
  4628  0B33  0876               	movf	?__Umul8_16+1,w
  4629  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4630  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4631  0B36  00C7               	movwf	___flmul@temp+1
  4632  0B37  0875               	movf	?__Umul8_16,w
  4633  0B38  00C6               	movwf	___flmul@temp
  4634  0B39                     l3540:
  4635  0B39  0846               	movf	___flmul@temp,w
  4636  0B3A  00B6               	movwf	??___flmul
  4637  0B3B  0847               	movf	___flmul@temp+1,w
  4638  0B3C  00B7               	movwf	??___flmul+1
  4639  0B3D  01B8               	clrf	??___flmul+2
  4640  0B3E  01B9               	clrf	??___flmul+3
  4641  0B3F  0836               	movf	??___flmul,w
  4642  0B40  07C2               	addwf	___flmul@prod,f
  4643  0B41  0837               	movf	??___flmul+1,w
  4644  0B42  1103               	clrz
  4645  0B43  1803               	skipnc
  4646  0B44  3E01               	addlw	1
  4647  0B45  1903               	skipnz
  4648  0B46  2B48               	goto	u5991
  4649  0B47  07C3               	addwf	___flmul@prod+1,f
  4650  0B48                     u5991:
  4651  0B48  0838               	movf	??___flmul+2,w
  4652  0B49  1103               	clrz
  4653  0B4A  1803               	skipnc
  4654  0B4B  3E01               	addlw	1
  4655  0B4C  1903               	skipnz
  4656  0B4D  2B4F               	goto	u5992
  4657  0B4E  07C4               	addwf	___flmul@prod+2,f
  4658  0B4F                     u5992:
  4659  0B4F  0839               	movf	??___flmul+3,w
  4660  0B50  1103               	clrz
  4661  0B51  1803               	skipnc
  4662  0B52  3E01               	addlw	1
  4663  0B53  1903               	skipnz
  4664  0B54  2B56               	goto	u5993
  4665  0B55  07C5               	addwf	___flmul@prod+3,f
  4666  0B56                     u5993:
  4667  0B56  0830               	movf	___flmul@b+2,w
  4668  0B57  00B6               	movwf	??___flmul
  4669  0B58  0836               	movf	??___flmul,w
  4670  0B59  00F5               	movwf	__Umul8_16@multiplicand
  4671  0B5A  0834               	movf	___flmul@a+2,w
  4672  0B5B  160A  158A  2499  120A  158A  	fcall	__Umul8_16
  4673  0B60  0876               	movf	?__Umul8_16+1,w
  4674  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4675  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4676  0B63  00C7               	movwf	___flmul@temp+1
  4677  0B64  0875               	movf	?__Umul8_16,w
  4678  0B65  00C6               	movwf	___flmul@temp
  4679  0B66                     l3542:
  4680  0B66  0846               	movf	___flmul@temp,w
  4681  0B67  00B6               	movwf	??___flmul
  4682  0B68  0847               	movf	___flmul@temp+1,w
  4683  0B69  00B7               	movwf	??___flmul+1
  4684  0B6A  01B8               	clrf	??___flmul+2
  4685  0B6B  01B9               	clrf	??___flmul+3
  4686  0B6C  3008               	movlw	8
  4687  0B6D                     u6005:
  4688  0B6D  1003               	clrc
  4689  0B6E  0DB6               	rlf	??___flmul,f
  4690  0B6F  0DB7               	rlf	??___flmul+1,f
  4691  0B70  0DB8               	rlf	??___flmul+2,f
  4692  0B71  0DB9               	rlf	??___flmul+3,f
  4693  0B72                     u6000:
  4694  0B72  3EFF               	addlw	-1
  4695  0B73  1D03               	skipz
  4696  0B74  2B6D               	goto	u6005
  4697  0B75  0836               	movf	??___flmul,w
  4698  0B76  07C2               	addwf	___flmul@prod,f
  4699  0B77  0837               	movf	??___flmul+1,w
  4700  0B78  1103               	clrz
  4701  0B79  1803               	skipnc
  4702  0B7A  3E01               	addlw	1
  4703  0B7B  1903               	skipnz
  4704  0B7C  2B7E               	goto	u6011
  4705  0B7D  07C3               	addwf	___flmul@prod+1,f
  4706  0B7E                     u6011:
  4707  0B7E  0838               	movf	??___flmul+2,w
  4708  0B7F  1103               	clrz
  4709  0B80  1803               	skipnc
  4710  0B81  3E01               	addlw	1
  4711  0B82  1903               	skipnz
  4712  0B83  2B85               	goto	u6012
  4713  0B84  07C4               	addwf	___flmul@prod+2,f
  4714  0B85                     u6012:
  4715  0B85  0839               	movf	??___flmul+3,w
  4716  0B86  1103               	clrz
  4717  0B87  1803               	skipnc
  4718  0B88  3E01               	addlw	1
  4719  0B89  1903               	skipnz
  4720  0B8A  2B8C               	goto	u6013
  4721  0B8B  07C5               	addwf	___flmul@prod+3,f
  4722  0B8C                     u6013:
  4723  0B8C                     l3544:
  4724  0B8C  083D               	movf	___flmul@grs,w
  4725  0B8D  00B6               	movwf	??___flmul
  4726  0B8E  083E               	movf	___flmul@grs+1,w
  4727  0B8F  00B7               	movwf	??___flmul+1
  4728  0B90  083F               	movf	___flmul@grs+2,w
  4729  0B91  00B8               	movwf	??___flmul+2
  4730  0B92  0840               	movf	___flmul@grs+3,w
  4731  0B93  00B9               	movwf	??___flmul+3
  4732  0B94  3018               	movlw	24
  4733  0B95                     u6025:
  4734  0B95  1003               	clrc
  4735  0B96  0CB9               	rrf	??___flmul+3,f
  4736  0B97  0CB8               	rrf	??___flmul+2,f
  4737  0B98  0CB7               	rrf	??___flmul+1,f
  4738  0B99  0CB6               	rrf	??___flmul,f
  4739  0B9A                     u6020:
  4740  0B9A  3EFF               	addlw	-1
  4741  0B9B  1D03               	skipz
  4742  0B9C  2B95               	goto	u6025
  4743  0B9D  0836               	movf	??___flmul,w
  4744  0B9E  07C2               	addwf	___flmul@prod,f
  4745  0B9F  0837               	movf	??___flmul+1,w
  4746  0BA0  1103               	clrz
  4747  0BA1  1803               	skipnc
  4748  0BA2  3E01               	addlw	1
  4749  0BA3  1903               	skipnz
  4750  0BA4  2BA6               	goto	u6031
  4751  0BA5  07C3               	addwf	___flmul@prod+1,f
  4752  0BA6                     u6031:
  4753  0BA6  0838               	movf	??___flmul+2,w
  4754  0BA7  1103               	clrz
  4755  0BA8  1803               	skipnc
  4756  0BA9  3E01               	addlw	1
  4757  0BAA  1903               	skipnz
  4758  0BAB  2BAD               	goto	u6032
  4759  0BAC  07C4               	addwf	___flmul@prod+2,f
  4760  0BAD                     u6032:
  4761  0BAD  0839               	movf	??___flmul+3,w
  4762  0BAE  1103               	clrz
  4763  0BAF  1803               	skipnc
  4764  0BB0  3E01               	addlw	1
  4765  0BB1  1903               	skipnz
  4766  0BB2  2BB4               	goto	u6033
  4767  0BB3  07C5               	addwf	___flmul@prod+3,f
  4768  0BB4                     u6033:
  4769  0BB4                     l3546:
  4770  0BB4  3008               	movlw	8
  4771  0BB5  00B6               	movwf	??___flmul
  4772  0BB6                     u6045:
  4773  0BB6  1003               	clrc
  4774  0BB7  0DBD               	rlf	___flmul@grs,f
  4775  0BB8  0DBE               	rlf	___flmul@grs+1,f
  4776  0BB9  0DBF               	rlf	___flmul@grs+2,f
  4777  0BBA  0DC0               	rlf	___flmul@grs+3,f
  4778  0BBB  0BB6               	decfsz	??___flmul,f
  4779  0BBC  2BB6               	goto	u6045
  4780  0BBD                     l3548:
  4781  0BBD  0841               	movf	___flmul@bexp,w
  4782  0BBE  073C               	addwf	___flmul@aexp,w
  4783  0BBF  00B6               	movwf	??___flmul
  4784  0BC0  01B7               	clrf	??___flmul+1
  4785  0BC1  0DB7               	rlf	??___flmul+1,f
  4786  0BC2  0836               	movf	??___flmul,w
  4787  0BC3  3E82               	addlw	130
  4788  0BC4  00C6               	movwf	___flmul@temp
  4789  0BC5  0837               	movf	??___flmul+1,w
  4790  0BC6  1803               	skipnc
  4791  0BC7  3E01               	addlw	1
  4792  0BC8  3EFF               	addlw	255
  4793  0BC9  00C7               	movwf	___flmul@temp+1
  4794  0BCA  2BE8               	goto	l3560
  4795  0BCB                     l3550:
  4796  0BCB  3001               	movlw	1
  4797  0BCC  00B6               	movwf	??___flmul
  4798  0BCD                     u6055:
  4799  0BCD  1003               	clrc
  4800  0BCE  0DC2               	rlf	___flmul@prod,f
  4801  0BCF  0DC3               	rlf	___flmul@prod+1,f
  4802  0BD0  0DC4               	rlf	___flmul@prod+2,f
  4803  0BD1  0DC5               	rlf	___flmul@prod+3,f
  4804  0BD2  0BB6               	decfsz	??___flmul,f
  4805  0BD3  2BCD               	goto	u6055
  4806  0BD4                     l3552:
  4807  0BD4  1FC0               	btfss	___flmul@grs+3,7
  4808  0BD5  2BD7               	goto	u6061
  4809  0BD6  2BD8               	goto	u6060
  4810  0BD7                     u6061:
  4811  0BD7  2BD9               	goto	l3556
  4812  0BD8                     u6060:
  4813  0BD8                     l3554:
  4814  0BD8  1442               	bsf	___flmul@prod,0
  4815  0BD9                     l3556:
  4816  0BD9  3001               	movlw	1
  4817  0BDA  00B6               	movwf	??___flmul
  4818  0BDB                     u6075:
  4819  0BDB  1003               	clrc
  4820  0BDC  0DBD               	rlf	___flmul@grs,f
  4821  0BDD  0DBE               	rlf	___flmul@grs+1,f
  4822  0BDE  0DBF               	rlf	___flmul@grs+2,f
  4823  0BDF  0DC0               	rlf	___flmul@grs+3,f
  4824  0BE0  0BB6               	decfsz	??___flmul,f
  4825  0BE1  2BDB               	goto	u6075
  4826  0BE2                     l3558:
  4827  0BE2  30FF               	movlw	255
  4828  0BE3  07C6               	addwf	___flmul@temp,f
  4829  0BE4  1803               	skipnc
  4830  0BE5  0AC7               	incf	___flmul@temp+1,f
  4831  0BE6  30FF               	movlw	255
  4832  0BE7  07C7               	addwf	___flmul@temp+1,f
  4833  0BE8                     l3560:
  4834  0BE8  1FC4               	btfss	___flmul@prod+2,7
  4835  0BE9  2BEB               	goto	u6081
  4836  0BEA  2BEC               	goto	u6080
  4837  0BEB                     u6081:
  4838  0BEB  2BCB               	goto	l3550
  4839  0BEC                     u6080:
  4840  0BEC                     l3562:
  4841  0BEC  01BC               	clrf	___flmul@aexp
  4842  0BED                     l3564:
  4843  0BED  1FC0               	btfss	___flmul@grs+3,7
  4844  0BEE  2BF0               	goto	u6091
  4845  0BEF  2BF1               	goto	u6090
  4846  0BF0                     u6091:
  4847  0BF0  2C0D               	goto	l3572
  4848  0BF1                     u6090:
  4849  0BF1                     l3566:
  4850  0BF1  30FF               	movlw	255
  4851  0BF2  053D               	andwf	___flmul@grs,w
  4852  0BF3  00B6               	movwf	??___flmul
  4853  0BF4  30FF               	movlw	255
  4854  0BF5  053E               	andwf	___flmul@grs+1,w
  4855  0BF6  00B7               	movwf	??___flmul+1
  4856  0BF7  30FF               	movlw	255
  4857  0BF8  053F               	andwf	___flmul@grs+2,w
  4858  0BF9  00B8               	movwf	??___flmul+2
  4859  0BFA  307F               	movlw	127
  4860  0BFB  0540               	andwf	___flmul@grs+3,w
  4861  0BFC  00B9               	movwf	??___flmul+3
  4862  0BFD  0839               	movf	??___flmul+3,w
  4863  0BFE  0438               	iorwf	??___flmul+2,w
  4864  0BFF  0437               	iorwf	??___flmul+1,w
  4865  0C00  0436               	iorwf	??___flmul,w
  4866  0C01  1903               	skipnz
  4867  0C02  2C04               	goto	u6101
  4868  0C03  2C05               	goto	u6100
  4869  0C04                     u6101:
  4870  0C04  2C08               	goto	l754
  4871  0C05                     u6100:
  4872  0C05                     l3568:
  4873  0C05  01BC               	clrf	___flmul@aexp
  4874  0C06  0ABC               	incf	___flmul@aexp,f
  4875  0C07  2C0D               	goto	l3572
  4876  0C08                     l754:
  4877  0C08  1C42               	btfss	___flmul@prod,0
  4878  0C09  2C0B               	goto	u6111
  4879  0C0A  2C0C               	goto	u6110
  4880  0C0B                     u6111:
  4881  0C0B  2C0D               	goto	l3572
  4882  0C0C                     u6110:
  4883  0C0C  2C05               	goto	l3568
  4884  0C0D                     l3572:
  4885  0C0D  083C               	movf	___flmul@aexp,w
  4886  0C0E  1903               	btfsc	3,2
  4887  0C0F  2C11               	goto	u6121
  4888  0C10  2C12               	goto	u6120
  4889  0C11                     u6121:
  4890  0C11  2C43               	goto	l3582
  4891  0C12                     u6120:
  4892  0C12                     l3574:
  4893  0C12  3001               	movlw	1
  4894  0C13  07C2               	addwf	___flmul@prod,f
  4895  0C14  3000               	movlw	0
  4896  0C15  1803               	skipnc
  4897  0C16  3001               	movlw	1
  4898  0C17  07C3               	addwf	___flmul@prod+1,f
  4899  0C18  3000               	movlw	0
  4900  0C19  1803               	skipnc
  4901  0C1A  3001               	movlw	1
  4902  0C1B  07C4               	addwf	___flmul@prod+2,f
  4903  0C1C  3000               	movlw	0
  4904  0C1D  1803               	skipnc
  4905  0C1E  3001               	movlw	1
  4906  0C1F  07C5               	addwf	___flmul@prod+3,f
  4907  0C20                     l3576:
  4908  0C20  1C45               	btfss	___flmul@prod+3,0
  4909  0C21  2C23               	goto	u6131
  4910  0C22  2C24               	goto	u6130
  4911  0C23                     u6131:
  4912  0C23  2C43               	goto	l3582
  4913  0C24                     u6130:
  4914  0C24                     l3578:
  4915  0C24  0842               	movf	___flmul@prod,w
  4916  0C25  00B6               	movwf	??___flmul
  4917  0C26  0843               	movf	___flmul@prod+1,w
  4918  0C27  00B7               	movwf	??___flmul+1
  4919  0C28  0844               	movf	___flmul@prod+2,w
  4920  0C29  00B8               	movwf	??___flmul+2
  4921  0C2A  0845               	movf	___flmul@prod+3,w
  4922  0C2B  00B9               	movwf	??___flmul+3
  4923  0C2C  3001               	movlw	1
  4924  0C2D  00BA               	movwf	??___flmul+4
  4925  0C2E                     u6145:
  4926  0C2E  0D39               	rlf	??___flmul+3,w
  4927  0C2F  0CB9               	rrf	??___flmul+3,f
  4928  0C30  0CB8               	rrf	??___flmul+2,f
  4929  0C31  0CB7               	rrf	??___flmul+1,f
  4930  0C32  0CB6               	rrf	??___flmul,f
  4931  0C33                     u6140:
  4932  0C33  0BBA               	decfsz	??___flmul+4,f
  4933  0C34  2C2E               	goto	u6145
  4934  0C35  0839               	movf	??___flmul+3,w
  4935  0C36  00C5               	movwf	___flmul@prod+3
  4936  0C37  0838               	movf	??___flmul+2,w
  4937  0C38  00C4               	movwf	___flmul@prod+2
  4938  0C39  0837               	movf	??___flmul+1,w
  4939  0C3A  00C3               	movwf	___flmul@prod+1
  4940  0C3B  0836               	movf	??___flmul,w
  4941  0C3C  00C2               	movwf	___flmul@prod
  4942  0C3D                     l3580:
  4943  0C3D  3001               	movlw	1
  4944  0C3E  07C6               	addwf	___flmul@temp,f
  4945  0C3F  1803               	skipnc
  4946  0C40  0AC7               	incf	___flmul@temp+1,f
  4947  0C41  3000               	movlw	0
  4948  0C42  07C7               	addwf	___flmul@temp+1,f
  4949  0C43                     l3582:
  4950  0C43  0847               	movf	___flmul@temp+1,w
  4951  0C44  3A80               	xorlw	128
  4952  0C45  00FF               	movwf	btemp+1
  4953  0C46  3080               	movlw	128
  4954  0C47  027F               	subwf	btemp+1,w
  4955  0C48  1D03               	skipz
  4956  0C49  2C4C               	goto	u6155
  4957  0C4A  30FF               	movlw	255
  4958  0C4B  0246               	subwf	___flmul@temp,w
  4959  0C4C                     u6155:
  4960  0C4C  1C03               	skipc
  4961  0C4D  2C4F               	goto	u6151
  4962  0C4E  2C50               	goto	u6150
  4963  0C4F                     u6151:
  4964  0C4F  2C5B               	goto	l3586
  4965  0C50                     u6150:
  4966  0C50                     l3584:
  4967  0C50  307F               	movlw	127
  4968  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0C53  00C5               	movwf	___flmul@prod+3
  4971  0C54  3080               	movlw	128
  4972  0C55  00C4               	movwf	___flmul@prod+2
  4973  0C56  3000               	movlw	0
  4974  0C57  00C3               	movwf	___flmul@prod+1
  4975  0C58  3000               	movlw	0
  4976  0C59  00C2               	movwf	___flmul@prod
  4977  0C5A  2C90               	goto	l760
  4978  0C5B                     l3586:
  4979  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  4980  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  4981  0C5D  0847               	movf	___flmul@temp+1,w
  4982  0C5E  3A80               	xorlw	128
  4983  0C5F  00FF               	movwf	btemp+1
  4984  0C60  3080               	movlw	128
  4985  0C61  027F               	subwf	btemp+1,w
  4986  0C62  1D03               	skipz
  4987  0C63  2C66               	goto	u6165
  4988  0C64  3001               	movlw	1
  4989  0C65  0246               	subwf	___flmul@temp,w
  4990  0C66                     u6165:
  4991  0C66  1803               	skipnc
  4992  0C67  2C69               	goto	u6161
  4993  0C68  2C6A               	goto	u6160
  4994  0C69                     u6161:
  4995  0C69  2C76               	goto	l3592
  4996  0C6A                     u6160:
  4997  0C6A                     l3588:
  4998  0C6A  3000               	movlw	0
  4999  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5000  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5001  0C6D  00C5               	movwf	___flmul@prod+3
  5002  0C6E  3000               	movlw	0
  5003  0C6F  00C4               	movwf	___flmul@prod+2
  5004  0C70  3000               	movlw	0
  5005  0C71  00C3               	movwf	___flmul@prod+1
  5006  0C72  3000               	movlw	0
  5007  0C73  00C2               	movwf	___flmul@prod
  5008  0C74                     l3590:
  5009  0C74  01BB               	clrf	___flmul@sign
  5010  0C75  2C90               	goto	l760
  5011  0C76                     l3592:
  5012  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5013  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5014  0C78  0846               	movf	___flmul@temp,w
  5015  0C79  00B6               	movwf	??___flmul
  5016  0C7A  0836               	movf	??___flmul,w
  5017  0C7B  00C1               	movwf	___flmul@bexp
  5018  0C7C  30FF               	movlw	255
  5019  0C7D  05C2               	andwf	___flmul@prod,f
  5020  0C7E  30FF               	movlw	255
  5021  0C7F  05C3               	andwf	___flmul@prod+1,f
  5022  0C80  307F               	movlw	127
  5023  0C81  05C4               	andwf	___flmul@prod+2,f
  5024  0C82  3000               	movlw	0
  5025  0C83  05C5               	andwf	___flmul@prod+3,f
  5026  0C84                     l3594:
  5027  0C84  1C41               	btfss	___flmul@bexp,0
  5028  0C85  2C87               	goto	u6171
  5029  0C86  2C88               	goto	u6170
  5030  0C87                     u6171:
  5031  0C87  2C89               	goto	l3598
  5032  0C88                     u6170:
  5033  0C88                     l3596:
  5034  0C88  17C4               	bsf	___flmul@prod+2,7
  5035  0C89                     l3598:
  5036  0C89  0841               	movf	___flmul@bexp,w
  5037  0C8A  00B6               	movwf	??___flmul
  5038  0C8B  1003               	clrc
  5039  0C8C  0C36               	rrf	??___flmul,w
  5040  0C8D  00B7               	movwf	??___flmul+1
  5041  0C8E  0837               	movf	??___flmul+1,w
  5042  0C8F  00C5               	movwf	___flmul@prod+3
  5043  0C90                     l760:
  5044  0C90  083B               	movf	___flmul@sign,w
  5045  0C91  00B6               	movwf	??___flmul
  5046  0C92  0836               	movf	??___flmul,w
  5047  0C93  04C5               	iorwf	___flmul@prod+3,f
  5048  0C94                     l3600:
  5049  0C94  0845               	movf	___flmul@prod+3,w
  5050  0C95  00B1               	movwf	?___flmul+3
  5051  0C96  0844               	movf	___flmul@prod+2,w
  5052  0C97  00B0               	movwf	?___flmul+2
  5053  0C98  0843               	movf	___flmul@prod+1,w
  5054  0C99  00AF               	movwf	?___flmul+1
  5055  0C9A  0842               	movf	___flmul@prod,w
  5056  0C9B  00AE               	movwf	?___flmul
  5057  0C9C                     l748:
  5058  0C9C  0008               	return
  5059  0C9D                     __end_of___flmul:
  5060                           
  5061                           	psect	text10
  5062  1C99                     __ptext10:	
  5063 ;; *************** function __Umul8_16 *****************
  5064 ;; Defined at:
  5065 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  multiplier      1    wreg     unsigned char 
  5068 ;;  multiplicand    1    5[COMMON] unsigned char 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  multiplier      1    6[BANK0 ] unsigned char 
  5071 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  5072 ;;  product         2    2[BANK0 ] unsigned int 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  2    5[COMMON] unsigned int 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5082 ;;      Params:         2       0       0       0       0
  5083 ;;      Locals:         0       5       0       0       0
  5084 ;;      Temps:          0       2       0       0       0
  5085 ;;      Totals:         2       7       0       0       0
  5086 ;;Total ram usage:        9 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    1
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		___flmul
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function __Umul8_16
  5098  1C99                     __Umul8_16:
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5102                           ;__Umul8_16@multiplier stored from wreg
  5103  1C99  1283               	bcf	3,5	;RP0=0, select bank0
  5104  1C9A  1303               	bcf	3,6	;RP1=0, select bank0
  5105  1C9B  00A6               	movwf	__Umul8_16@multiplier
  5106  1C9C                     l3346:
  5107  1C9C  01A2               	clrf	__Umul8_16@product
  5108  1C9D  01A3               	clrf	__Umul8_16@product+1
  5109  1C9E                     l3348:
  5110  1C9E  0875               	movf	__Umul8_16@multiplicand,w
  5111  1C9F  00A0               	movwf	??__Umul8_16
  5112  1CA0  01A1               	clrf	??__Umul8_16+1
  5113  1CA1  0820               	movf	??__Umul8_16,w
  5114  1CA2  00A4               	movwf	__Umul8_16@word_mpld
  5115  1CA3  0821               	movf	??__Umul8_16+1,w
  5116  1CA4  00A5               	movwf	__Umul8_16@word_mpld+1
  5117  1CA5                     l3350:
  5118  1CA5  1C26               	btfss	__Umul8_16@multiplier,0
  5119  1CA6  2CA8               	goto	u5531
  5120  1CA7  2CA9               	goto	u5530
  5121  1CA8                     u5531:
  5122  1CA8  2CAF               	goto	l767
  5123  1CA9                     u5530:
  5124  1CA9                     l3352:
  5125  1CA9  0824               	movf	__Umul8_16@word_mpld,w
  5126  1CAA  07A2               	addwf	__Umul8_16@product,f
  5127  1CAB  1803               	skipnc
  5128  1CAC  0AA3               	incf	__Umul8_16@product+1,f
  5129  1CAD  0825               	movf	__Umul8_16@word_mpld+1,w
  5130  1CAE  07A3               	addwf	__Umul8_16@product+1,f
  5131  1CAF                     l767:
  5132  1CAF  3001               	movlw	1
  5133  1CB0                     u5545:
  5134  1CB0  1003               	clrc
  5135  1CB1  0DA4               	rlf	__Umul8_16@word_mpld,f
  5136  1CB2  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  5137  1CB3  3EFF               	addlw	-1
  5138  1CB4  1D03               	skipz
  5139  1CB5  2CB0               	goto	u5545
  5140  1CB6  1003               	clrc
  5141  1CB7  0CA6               	rrf	__Umul8_16@multiplier,f
  5142  1CB8                     l3354:
  5143  1CB8  0826               	movf	__Umul8_16@multiplier,w
  5144  1CB9  1D03               	btfss	3,2
  5145  1CBA  2CBC               	goto	u5551
  5146  1CBB  2CBD               	goto	u5550
  5147  1CBC                     u5551:
  5148  1CBC  2CA5               	goto	l3350
  5149  1CBD                     u5550:
  5150  1CBD                     l3356:
  5151  1CBD  0823               	movf	__Umul8_16@product+1,w
  5152  1CBE  00F6               	movwf	?__Umul8_16+1
  5153  1CBF  0822               	movf	__Umul8_16@product,w
  5154  1CC0  00F5               	movwf	?__Umul8_16
  5155  1CC1                     l769:
  5156  1CC1  0008               	return
  5157  1CC2                     __end_of__Umul8_16:
  5158                           
  5159                           	psect	text11
  5160  116F                     __ptext11:	
  5161 ;; *************** function __tdiv_to_l_ *****************
  5162 ;; Defined at:
  5163 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  f1              4    0[BANK0 ] float 
  5166 ;;  f2              4    4[BANK0 ] float 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  quot            4   12[BANK0 ] unsigned long 
  5169 ;;  exp1            1   17[BANK0 ] unsigned char 
  5170 ;;  cntr            1   16[BANK0 ] unsigned char 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  4    0[BANK0 ] unsigned long 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5180 ;;      Params:         0       8       0       0       0
  5181 ;;      Locals:         0       6       0       0       0
  5182 ;;      Temps:          0       4       0       0       0
  5183 ;;      Totals:         0      18       0       0       0
  5184 ;;Total ram usage:       18 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    1
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_sprintf
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           
  5195                           ;psect for function __tdiv_to_l_
  5196  116F                     __tdiv_to_l_:
  5197  116F                     l3662:	
  5198                           ;incstack = 0
  5199                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5200                           
  5201  116F  1283               	bcf	3,5	;RP0=0, select bank0
  5202  1170  1303               	bcf	3,6	;RP1=0, select bank0
  5203  1171  0820               	movf	__tdiv_to_l_@f1,w
  5204  1172  00A8               	movwf	??__tdiv_to_l_
  5205  1173  0821               	movf	__tdiv_to_l_@f1+1,w
  5206  1174  00A9               	movwf	??__tdiv_to_l_+1
  5207  1175  0822               	movf	__tdiv_to_l_@f1+2,w
  5208  1176  00AA               	movwf	??__tdiv_to_l_+2
  5209  1177  1003               	clrc
  5210  1178  0D29               	rlf	??__tdiv_to_l_+1,w
  5211  1179  0D2A               	rlf	??__tdiv_to_l_+2,w
  5212  117A  00AB               	movwf	??__tdiv_to_l_+3
  5213  117B  082B               	movf	??__tdiv_to_l_+3,w
  5214  117C  00B1               	movwf	__tdiv_to_l_@exp1
  5215  117D  0831               	movf	__tdiv_to_l_@exp1,w
  5216  117E  1D03               	btfss	3,2
  5217  117F  2981               	goto	u6431
  5218  1180  2982               	goto	u6430
  5219  1181                     u6431:
  5220  1181  298B               	goto	l3668
  5221  1182                     u6430:
  5222  1182                     l3664:
  5223  1182  3000               	movlw	0
  5224  1183  00A3               	movwf	?__tdiv_to_l_+3
  5225  1184  3000               	movlw	0
  5226  1185  00A2               	movwf	?__tdiv_to_l_+2
  5227  1186  3000               	movlw	0
  5228  1187  00A1               	movwf	?__tdiv_to_l_+1
  5229  1188  3000               	movlw	0
  5230  1189  00A0               	movwf	?__tdiv_to_l_
  5231  118A  2A2B               	goto	l542
  5232  118B                     l3668:
  5233  118B  0824               	movf	__tdiv_to_l_@f2,w
  5234  118C  00A8               	movwf	??__tdiv_to_l_
  5235  118D  0825               	movf	__tdiv_to_l_@f2+1,w
  5236  118E  00A9               	movwf	??__tdiv_to_l_+1
  5237  118F  0826               	movf	__tdiv_to_l_@f2+2,w
  5238  1190  00AA               	movwf	??__tdiv_to_l_+2
  5239  1191  1003               	clrc
  5240  1192  0D29               	rlf	??__tdiv_to_l_+1,w
  5241  1193  0D2A               	rlf	??__tdiv_to_l_+2,w
  5242  1194  00AB               	movwf	??__tdiv_to_l_+3
  5243  1195  082B               	movf	??__tdiv_to_l_+3,w
  5244  1196  00B0               	movwf	__tdiv_to_l_@cntr
  5245  1197  0830               	movf	__tdiv_to_l_@cntr,w
  5246  1198  1D03               	btfss	3,2
  5247  1199  299B               	goto	u6441
  5248  119A  299C               	goto	u6440
  5249  119B                     u6441:
  5250  119B  299D               	goto	l543
  5251  119C                     u6440:
  5252  119C  2982               	goto	l3664
  5253  119D                     l543:
  5254  119D  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5255  119E                     l3674:
  5256  119E  30FF               	movlw	255
  5257  119F  05A0               	andwf	__tdiv_to_l_@f1,f
  5258  11A0  30FF               	movlw	255
  5259  11A1  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5260  11A2  3000               	movlw	0
  5261  11A3  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5262  11A4                     l3676:
  5263  11A4  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5264  11A5  30FF               	movlw	255
  5265  11A6  05A4               	andwf	__tdiv_to_l_@f2,f
  5266  11A7  30FF               	movlw	255
  5267  11A8  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5268  11A9  3000               	movlw	0
  5269  11AA  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5270  11AB  3000               	movlw	0
  5271  11AC  00AF               	movwf	__tdiv_to_l_@quot+3
  5272  11AD  3000               	movlw	0
  5273  11AE  00AE               	movwf	__tdiv_to_l_@quot+2
  5274  11AF  3000               	movlw	0
  5275  11B0  00AD               	movwf	__tdiv_to_l_@quot+1
  5276  11B1  3000               	movlw	0
  5277  11B2  00AC               	movwf	__tdiv_to_l_@quot
  5278  11B3                     l3678:
  5279  11B3  307F               	movlw	127
  5280  11B4  02B1               	subwf	__tdiv_to_l_@exp1,f
  5281  11B5                     l3680:
  5282  11B5  3098               	movlw	152
  5283  11B6  0730               	addwf	__tdiv_to_l_@cntr,w
  5284  11B7  00A8               	movwf	??__tdiv_to_l_
  5285  11B8  0828               	movf	??__tdiv_to_l_,w
  5286  11B9  02B1               	subwf	__tdiv_to_l_@exp1,f
  5287  11BA  3018               	movlw	24
  5288  11BB  00A8               	movwf	??__tdiv_to_l_
  5289  11BC  0828               	movf	??__tdiv_to_l_,w
  5290  11BD  00B0               	movwf	__tdiv_to_l_@cntr
  5291  11BE                     l3682:
  5292  11BE  3001               	movlw	1
  5293  11BF  00A8               	movwf	??__tdiv_to_l_
  5294  11C0                     u6455:
  5295  11C0  1003               	clrc
  5296  11C1  0DAC               	rlf	__tdiv_to_l_@quot,f
  5297  11C2  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  5298  11C3  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  5299  11C4  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  5300  11C5  0BA8               	decfsz	??__tdiv_to_l_,f
  5301  11C6  29C0               	goto	u6455
  5302  11C7                     l3684:
  5303  11C7  0826               	movf	__tdiv_to_l_@f2+2,w
  5304  11C8  0222               	subwf	__tdiv_to_l_@f1+2,w
  5305  11C9  1D03               	skipz
  5306  11CA  29D1               	goto	u6465
  5307  11CB  0825               	movf	__tdiv_to_l_@f2+1,w
  5308  11CC  0221               	subwf	__tdiv_to_l_@f1+1,w
  5309  11CD  1D03               	skipz
  5310  11CE  29D1               	goto	u6465
  5311  11CF  0824               	movf	__tdiv_to_l_@f2,w
  5312  11D0  0220               	subwf	__tdiv_to_l_@f1,w
  5313  11D1                     u6465:
  5314  11D1  1C03               	skipc
  5315  11D2  29D4               	goto	u6461
  5316  11D3  29D5               	goto	u6460
  5317  11D4                     u6461:
  5318  11D4  29E0               	goto	l3690
  5319  11D5                     u6460:
  5320  11D5                     l3686:
  5321  11D5  0824               	movf	__tdiv_to_l_@f2,w
  5322  11D6  02A0               	subwf	__tdiv_to_l_@f1,f
  5323  11D7  0825               	movf	__tdiv_to_l_@f2+1,w
  5324  11D8  1C03               	skipc
  5325  11D9  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  5326  11DA  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5327  11DB  0826               	movf	__tdiv_to_l_@f2+2,w
  5328  11DC  1C03               	skipc
  5329  11DD  0A26               	incf	__tdiv_to_l_@f2+2,w
  5330  11DE  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5331  11DF                     l3688:
  5332  11DF  142C               	bsf	__tdiv_to_l_@quot,0
  5333  11E0                     l3690:
  5334  11E0  3001               	movlw	1
  5335  11E1                     u6475:
  5336  11E1  1003               	clrc
  5337  11E2  0DA0               	rlf	__tdiv_to_l_@f1,f
  5338  11E3  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5339  11E4  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5340  11E5  3EFF               	addlw	-1
  5341  11E6  1D03               	skipz
  5342  11E7  29E1               	goto	u6475
  5343  11E8                     l3692:
  5344  11E8  3001               	movlw	1
  5345  11E9  02B0               	subwf	__tdiv_to_l_@cntr,f
  5346  11EA  1D03               	btfss	3,2
  5347  11EB  29ED               	goto	u6481
  5348  11EC  29EE               	goto	u6480
  5349  11ED                     u6481:
  5350  11ED  29BE               	goto	l3682
  5351  11EE                     u6480:
  5352  11EE                     l546:
  5353  11EE  1FB1               	btfss	__tdiv_to_l_@exp1,7
  5354  11EF  29F1               	goto	u6491
  5355  11F0  29F2               	goto	u6490
  5356  11F1                     u6491:
  5357  11F1  2A0C               	goto	l3702
  5358  11F2                     u6490:
  5359  11F2                     l3694:
  5360  11F2  0831               	movf	__tdiv_to_l_@exp1,w
  5361  11F3  3A80               	xorlw	128
  5362  11F4  3E97               	addlw	151
  5363  11F5  1803               	skipnc
  5364  11F6  29F8               	goto	u6501
  5365  11F7  29F9               	goto	u6500
  5366  11F8                     u6501:
  5367  11F8  29FA               	goto	l3700
  5368  11F9                     u6500:
  5369  11F9  2982               	goto	l3664
  5370  11FA                     l3700:
  5371  11FA  3001               	movlw	1
  5372  11FB                     u6515:
  5373  11FB  1003               	clrc
  5374  11FC  0CAF               	rrf	__tdiv_to_l_@quot+3,f
  5375  11FD  0CAE               	rrf	__tdiv_to_l_@quot+2,f
  5376  11FE  0CAD               	rrf	__tdiv_to_l_@quot+1,f
  5377  11FF  0CAC               	rrf	__tdiv_to_l_@quot,f
  5378  1200  3EFF               	addlw	-1
  5379  1201  1D03               	skipz
  5380  1202  29FB               	goto	u6515
  5381  1203  3001               	movlw	1
  5382  1204  00A8               	movwf	??__tdiv_to_l_
  5383  1205  0828               	movf	??__tdiv_to_l_,w
  5384  1206  07B1               	addwf	__tdiv_to_l_@exp1,f
  5385  1207  1D03               	btfss	3,2
  5386  1208  2A0A               	goto	u6521
  5387  1209  2A0B               	goto	u6520
  5388  120A                     u6521:
  5389  120A  29FA               	goto	l3700
  5390  120B                     u6520:
  5391  120B  2A23               	goto	l3710
  5392  120C                     l3702:
  5393  120C  3018               	movlw	24
  5394  120D  0231               	subwf	__tdiv_to_l_@exp1,w
  5395  120E  1C03               	skipc
  5396  120F  2A11               	goto	u6531
  5397  1210  2A12               	goto	u6530
  5398  1211                     u6531:
  5399  1211  2A1E               	goto	l553
  5400  1212                     u6530:
  5401  1212  2982               	goto	l3664
  5402  1213                     l3708:
  5403  1213  3001               	movlw	1
  5404  1214  00A8               	movwf	??__tdiv_to_l_
  5405  1215                     u6545:
  5406  1215  1003               	clrc
  5407  1216  0DAC               	rlf	__tdiv_to_l_@quot,f
  5408  1217  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  5409  1218  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  5410  1219  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  5411  121A  0BA8               	decfsz	??__tdiv_to_l_,f
  5412  121B  2A15               	goto	u6545
  5413  121C  3001               	movlw	1
  5414  121D  02B1               	subwf	__tdiv_to_l_@exp1,f
  5415  121E                     l553:
  5416  121E  0831               	movf	__tdiv_to_l_@exp1,w
  5417  121F  1D03               	btfss	3,2
  5418  1220  2A22               	goto	u6551
  5419  1221  2A23               	goto	u6550
  5420  1222                     u6551:
  5421  1222  2A13               	goto	l3708
  5422  1223                     u6550:
  5423  1223                     l3710:
  5424  1223  082F               	movf	__tdiv_to_l_@quot+3,w
  5425  1224  00A3               	movwf	?__tdiv_to_l_+3
  5426  1225  082E               	movf	__tdiv_to_l_@quot+2,w
  5427  1226  00A2               	movwf	?__tdiv_to_l_+2
  5428  1227  082D               	movf	__tdiv_to_l_@quot+1,w
  5429  1228  00A1               	movwf	?__tdiv_to_l_+1
  5430  1229  082C               	movf	__tdiv_to_l_@quot,w
  5431  122A  00A0               	movwf	?__tdiv_to_l_
  5432  122B                     l542:
  5433  122B  0008               	return
  5434  122C                     __end_of__tdiv_to_l_:
  5435                           
  5436                           	psect	text12
  5437  087E                     __ptext12:	
  5438 ;; *************** function __div_to_l_ *****************
  5439 ;; Defined at:
  5440 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  f1              4    0[BANK0 ] unsigned long 
  5443 ;;  f2              4    4[BANK0 ] unsigned long 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  quot            4    8[BANK0 ] unsigned long 
  5446 ;;  exp1            1   13[BANK0 ] unsigned char 
  5447 ;;  cntr            1   12[BANK0 ] unsigned char 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  4    0[BANK0 ] unsigned long 
  5450 ;; Registers used:
  5451 ;;		wreg, status,2, status,0
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5457 ;;      Params:         0       8       0       0       0
  5458 ;;      Locals:         0       6       0       0       0
  5459 ;;      Temps:          1       0       0       0       0
  5460 ;;      Totals:         1      14       0       0       0
  5461 ;;Total ram usage:       15 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:    1
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_sprintf
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           
  5472                           ;psect for function __div_to_l_
  5473  087E                     __div_to_l_:
  5474  087E                     l2720:	
  5475                           ;incstack = 0
  5476                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5477                           
  5478  087E  1003               	clrc
  5479  087F  1283               	bcf	3,5	;RP0=0, select bank0
  5480  0880  1303               	bcf	3,6	;RP1=0, select bank0
  5481  0881  0D22               	rlf	__div_to_l_@f1+2,w
  5482  0882  0D23               	rlf	__div_to_l_@f1+3,w
  5483  0883  00F5               	movwf	??__div_to_l_
  5484  0884  0875               	movf	??__div_to_l_,w
  5485  0885  00AD               	movwf	__div_to_l_@exp1
  5486  0886  082D               	movf	__div_to_l_@exp1,w
  5487  0887  1D03               	btfss	3,2
  5488  0888  288A               	goto	u4361
  5489  0889  288B               	goto	u4360
  5490  088A                     u4361:
  5491  088A  2894               	goto	l2726
  5492  088B                     u4360:
  5493  088B                     l2722:
  5494  088B  3000               	movlw	0
  5495  088C  00A3               	movwf	?__div_to_l_+3
  5496  088D  3000               	movlw	0
  5497  088E  00A2               	movwf	?__div_to_l_+2
  5498  088F  3000               	movlw	0
  5499  0890  00A1               	movwf	?__div_to_l_+1
  5500  0891  3000               	movlw	0
  5501  0892  00A0               	movwf	?__div_to_l_
  5502  0893  293B               	goto	l495
  5503  0894                     l2726:
  5504  0894  1003               	clrc
  5505  0895  0D26               	rlf	__div_to_l_@f2+2,w
  5506  0896  0D27               	rlf	__div_to_l_@f2+3,w
  5507  0897  00F5               	movwf	??__div_to_l_
  5508  0898  0875               	movf	??__div_to_l_,w
  5509  0899  00AC               	movwf	__div_to_l_@cntr
  5510  089A  082C               	movf	__div_to_l_@cntr,w
  5511  089B  1D03               	btfss	3,2
  5512  089C  289E               	goto	u4371
  5513  089D  289F               	goto	u4370
  5514  089E                     u4371:
  5515  089E  28A0               	goto	l496
  5516  089F                     u4370:
  5517  089F  288B               	goto	l2722
  5518  08A0                     l496:
  5519  08A0  17A2               	bsf	__div_to_l_@f1+2,7
  5520  08A1                     l2732:
  5521  08A1  30FF               	movlw	255
  5522  08A2  05A0               	andwf	__div_to_l_@f1,f
  5523  08A3  30FF               	movlw	255
  5524  08A4  05A1               	andwf	__div_to_l_@f1+1,f
  5525  08A5  30FF               	movlw	255
  5526  08A6  05A2               	andwf	__div_to_l_@f1+2,f
  5527  08A7  3000               	movlw	0
  5528  08A8  05A3               	andwf	__div_to_l_@f1+3,f
  5529  08A9                     l2734:
  5530  08A9  17A6               	bsf	__div_to_l_@f2+2,7
  5531  08AA  30FF               	movlw	255
  5532  08AB  05A4               	andwf	__div_to_l_@f2,f
  5533  08AC  30FF               	movlw	255
  5534  08AD  05A5               	andwf	__div_to_l_@f2+1,f
  5535  08AE  30FF               	movlw	255
  5536  08AF  05A6               	andwf	__div_to_l_@f2+2,f
  5537  08B0  3000               	movlw	0
  5538  08B1  05A7               	andwf	__div_to_l_@f2+3,f
  5539  08B2  3000               	movlw	0
  5540  08B3  00AB               	movwf	__div_to_l_@quot+3
  5541  08B4  3000               	movlw	0
  5542  08B5  00AA               	movwf	__div_to_l_@quot+2
  5543  08B6  3000               	movlw	0
  5544  08B7  00A9               	movwf	__div_to_l_@quot+1
  5545  08B8  3000               	movlw	0
  5546  08B9  00A8               	movwf	__div_to_l_@quot
  5547  08BA                     l2736:
  5548  08BA  307F               	movlw	127
  5549  08BB  02AD               	subwf	__div_to_l_@exp1,f
  5550  08BC                     l2738:
  5551  08BC  30A0               	movlw	160
  5552  08BD  072C               	addwf	__div_to_l_@cntr,w
  5553  08BE  00F5               	movwf	??__div_to_l_
  5554  08BF  0875               	movf	??__div_to_l_,w
  5555  08C0  02AD               	subwf	__div_to_l_@exp1,f
  5556  08C1  3020               	movlw	32
  5557  08C2  00F5               	movwf	??__div_to_l_
  5558  08C3  0875               	movf	??__div_to_l_,w
  5559  08C4  00AC               	movwf	__div_to_l_@cntr
  5560  08C5                     l2740:
  5561  08C5  3001               	movlw	1
  5562  08C6  00F5               	movwf	??__div_to_l_
  5563  08C7                     u4385:
  5564  08C7  1003               	clrc
  5565  08C8  0DA8               	rlf	__div_to_l_@quot,f
  5566  08C9  0DA9               	rlf	__div_to_l_@quot+1,f
  5567  08CA  0DAA               	rlf	__div_to_l_@quot+2,f
  5568  08CB  0DAB               	rlf	__div_to_l_@quot+3,f
  5569  08CC  0BF5               	decfsz	??__div_to_l_,f
  5570  08CD  28C7               	goto	u4385
  5571  08CE                     l2742:
  5572  08CE  0827               	movf	__div_to_l_@f2+3,w
  5573  08CF  0223               	subwf	__div_to_l_@f1+3,w
  5574  08D0  1D03               	skipz
  5575  08D1  28DC               	goto	u4395
  5576  08D2  0826               	movf	__div_to_l_@f2+2,w
  5577  08D3  0222               	subwf	__div_to_l_@f1+2,w
  5578  08D4  1D03               	skipz
  5579  08D5  28DC               	goto	u4395
  5580  08D6  0825               	movf	__div_to_l_@f2+1,w
  5581  08D7  0221               	subwf	__div_to_l_@f1+1,w
  5582  08D8  1D03               	skipz
  5583  08D9  28DC               	goto	u4395
  5584  08DA  0824               	movf	__div_to_l_@f2,w
  5585  08DB  0220               	subwf	__div_to_l_@f1,w
  5586  08DC                     u4395:
  5587  08DC  1C03               	skipc
  5588  08DD  28DF               	goto	u4391
  5589  08DE  28E0               	goto	u4390
  5590  08DF                     u4391:
  5591  08DF  28EF               	goto	l2748
  5592  08E0                     u4390:
  5593  08E0                     l2744:
  5594  08E0  0824               	movf	__div_to_l_@f2,w
  5595  08E1  02A0               	subwf	__div_to_l_@f1,f
  5596  08E2  0825               	movf	__div_to_l_@f2+1,w
  5597  08E3  1C03               	skipc
  5598  08E4  0F25               	incfsz	__div_to_l_@f2+1,w
  5599  08E5  02A1               	subwf	__div_to_l_@f1+1,f
  5600  08E6  0826               	movf	__div_to_l_@f2+2,w
  5601  08E7  1C03               	skipc
  5602  08E8  0F26               	incfsz	__div_to_l_@f2+2,w
  5603  08E9  02A2               	subwf	__div_to_l_@f1+2,f
  5604  08EA  0827               	movf	__div_to_l_@f2+3,w
  5605  08EB  1C03               	skipc
  5606  08EC  0F27               	incfsz	__div_to_l_@f2+3,w
  5607  08ED  02A3               	subwf	__div_to_l_@f1+3,f
  5608  08EE                     l2746:
  5609  08EE  1428               	bsf	__div_to_l_@quot,0
  5610  08EF                     l2748:
  5611  08EF  3001               	movlw	1
  5612  08F0  00F5               	movwf	??__div_to_l_
  5613  08F1                     u4405:
  5614  08F1  1003               	clrc
  5615  08F2  0DA0               	rlf	__div_to_l_@f1,f
  5616  08F3  0DA1               	rlf	__div_to_l_@f1+1,f
  5617  08F4  0DA2               	rlf	__div_to_l_@f1+2,f
  5618  08F5  0DA3               	rlf	__div_to_l_@f1+3,f
  5619  08F6  0BF5               	decfsz	??__div_to_l_,f
  5620  08F7  28F1               	goto	u4405
  5621  08F8                     l2750:
  5622  08F8  3001               	movlw	1
  5623  08F9  02AC               	subwf	__div_to_l_@cntr,f
  5624  08FA  1D03               	btfss	3,2
  5625  08FB  28FD               	goto	u4411
  5626  08FC  28FE               	goto	u4410
  5627  08FD                     u4411:
  5628  08FD  28C5               	goto	l2740
  5629  08FE                     u4410:
  5630  08FE                     l499:
  5631  08FE  1FAD               	btfss	__div_to_l_@exp1,7
  5632  08FF  2901               	goto	u4421
  5633  0900  2902               	goto	u4420
  5634  0901                     u4421:
  5635  0901  291C               	goto	l2760
  5636  0902                     u4420:
  5637  0902                     l2752:
  5638  0902  082D               	movf	__div_to_l_@exp1,w
  5639  0903  3A80               	xorlw	128
  5640  0904  3E9F               	addlw	159
  5641  0905  1803               	skipnc
  5642  0906  2908               	goto	u4431
  5643  0907  2909               	goto	u4430
  5644  0908                     u4431:
  5645  0908  290A               	goto	l2758
  5646  0909                     u4430:
  5647  0909  288B               	goto	l2722
  5648  090A                     l2758:
  5649  090A  3001               	movlw	1
  5650  090B                     u4445:
  5651  090B  1003               	clrc
  5652  090C  0CAB               	rrf	__div_to_l_@quot+3,f
  5653  090D  0CAA               	rrf	__div_to_l_@quot+2,f
  5654  090E  0CA9               	rrf	__div_to_l_@quot+1,f
  5655  090F  0CA8               	rrf	__div_to_l_@quot,f
  5656  0910  3EFF               	addlw	-1
  5657  0911  1D03               	skipz
  5658  0912  290B               	goto	u4445
  5659  0913  3001               	movlw	1
  5660  0914  00F5               	movwf	??__div_to_l_
  5661  0915  0875               	movf	??__div_to_l_,w
  5662  0916  07AD               	addwf	__div_to_l_@exp1,f
  5663  0917  1D03               	btfss	3,2
  5664  0918  291A               	goto	u4451
  5665  0919  291B               	goto	u4450
  5666  091A                     u4451:
  5667  091A  290A               	goto	l2758
  5668  091B                     u4450:
  5669  091B  2933               	goto	l2768
  5670  091C                     l2760:
  5671  091C  3020               	movlw	32
  5672  091D  022D               	subwf	__div_to_l_@exp1,w
  5673  091E  1C03               	skipc
  5674  091F  2921               	goto	u4461
  5675  0920  2922               	goto	u4460
  5676  0921                     u4461:
  5677  0921  292E               	goto	l506
  5678  0922                     u4460:
  5679  0922  288B               	goto	l2722
  5680  0923                     l2766:
  5681  0923  3001               	movlw	1
  5682  0924  00F5               	movwf	??__div_to_l_
  5683  0925                     u4475:
  5684  0925  1003               	clrc
  5685  0926  0DA8               	rlf	__div_to_l_@quot,f
  5686  0927  0DA9               	rlf	__div_to_l_@quot+1,f
  5687  0928  0DAA               	rlf	__div_to_l_@quot+2,f
  5688  0929  0DAB               	rlf	__div_to_l_@quot+3,f
  5689  092A  0BF5               	decfsz	??__div_to_l_,f
  5690  092B  2925               	goto	u4475
  5691  092C  3001               	movlw	1
  5692  092D  02AD               	subwf	__div_to_l_@exp1,f
  5693  092E                     l506:
  5694  092E  082D               	movf	__div_to_l_@exp1,w
  5695  092F  1D03               	btfss	3,2
  5696  0930  2932               	goto	u4481
  5697  0931  2933               	goto	u4480
  5698  0932                     u4481:
  5699  0932  2923               	goto	l2766
  5700  0933                     u4480:
  5701  0933                     l2768:
  5702  0933  082B               	movf	__div_to_l_@quot+3,w
  5703  0934  00A3               	movwf	?__div_to_l_+3
  5704  0935  082A               	movf	__div_to_l_@quot+2,w
  5705  0936  00A2               	movwf	?__div_to_l_+2
  5706  0937  0829               	movf	__div_to_l_@quot+1,w
  5707  0938  00A1               	movwf	?__div_to_l_+1
  5708  0939  0828               	movf	__div_to_l_@quot,w
  5709  093A  00A0               	movwf	?__div_to_l_
  5710  093B                     l495:
  5711  093B  0008               	return
  5712  093C                     __end_of__div_to_l_:
  5713                           
  5714                           	psect	text13
  5715  1C49                     __ptext13:	
  5716 ;; *************** function ___wmul *****************
  5717 ;; Defined at:
  5718 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5721 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  product         2    5[COMMON] unsigned int 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  2    0[BANK0 ] unsigned int 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5733 ;;      Params:         0       4       0       0       0
  5734 ;;      Locals:         2       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0
  5736 ;;      Totals:         2       4       0       0       0
  5737 ;;Total ram usage:        6 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    1
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_sprintf
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           
  5748                           ;psect for function ___wmul
  5749  1C49                     ___wmul:
  5750  1C49                     l3714:	
  5751                           ;incstack = 0
  5752                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5753                           
  5754  1C49  01F5               	clrf	___wmul@product
  5755  1C4A  01F6               	clrf	___wmul@product+1
  5756  1C4B                     l3716:
  5757  1C4B  1283               	bcf	3,5	;RP0=0, select bank0
  5758  1C4C  1303               	bcf	3,6	;RP1=0, select bank0
  5759  1C4D  1C20               	btfss	___wmul@multiplier,0
  5760  1C4E  2C50               	goto	u6561
  5761  1C4F  2C51               	goto	u6560
  5762  1C50                     u6561:
  5763  1C50  2C57               	goto	l325
  5764  1C51                     u6560:
  5765  1C51                     l3718:
  5766  1C51  0822               	movf	___wmul@multiplicand,w
  5767  1C52  07F5               	addwf	___wmul@product,f
  5768  1C53  1803               	skipnc
  5769  1C54  0AF6               	incf	___wmul@product+1,f
  5770  1C55  0823               	movf	___wmul@multiplicand+1,w
  5771  1C56  07F6               	addwf	___wmul@product+1,f
  5772  1C57                     l325:
  5773  1C57  3001               	movlw	1
  5774  1C58                     u6575:
  5775  1C58  1003               	clrc
  5776  1C59  0DA2               	rlf	___wmul@multiplicand,f
  5777  1C5A  0DA3               	rlf	___wmul@multiplicand+1,f
  5778  1C5B  3EFF               	addlw	-1
  5779  1C5C  1D03               	skipz
  5780  1C5D  2C58               	goto	u6575
  5781  1C5E                     l3720:
  5782  1C5E  3001               	movlw	1
  5783  1C5F                     u6585:
  5784  1C5F  1003               	clrc
  5785  1C60  0CA1               	rrf	___wmul@multiplier+1,f
  5786  1C61  0CA0               	rrf	___wmul@multiplier,f
  5787  1C62  3EFF               	addlw	-1
  5788  1C63  1D03               	skipz
  5789  1C64  2C5F               	goto	u6585
  5790  1C65                     l3722:
  5791  1C65  0820               	movf	___wmul@multiplier,w
  5792  1C66  0421               	iorwf	___wmul@multiplier+1,w
  5793  1C67  1D03               	btfss	3,2
  5794  1C68  2C6A               	goto	u6591
  5795  1C69  2C6B               	goto	u6590
  5796  1C6A                     u6591:
  5797  1C6A  2C4B               	goto	l3716
  5798  1C6B                     u6590:
  5799  1C6B                     l3724:
  5800  1C6B  0876               	movf	___wmul@product+1,w
  5801  1C6C  00A1               	movwf	?___wmul+1
  5802  1C6D  0875               	movf	___wmul@product,w
  5803  1C6E  00A0               	movwf	?___wmul
  5804  1C6F                     l327:
  5805  1C6F  0008               	return
  5806  1C70                     __end_of___wmul:
  5807                           
  5808                           	psect	text14
  5809  1E1E                     __ptext14:	
  5810 ;; *************** function ___llmod *****************
  5811 ;; Defined at:
  5812 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  divisor         4    0[BANK0 ] unsigned long 
  5815 ;;  dividend        4    4[BANK0 ] unsigned long 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  counter         1    6[COMMON] unsigned char 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  4    0[BANK0 ] unsigned long 
  5820 ;; Registers used:
  5821 ;;		wreg, status,2, status,0
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5827 ;;      Params:         0       8       0       0       0
  5828 ;;      Locals:         1       0       0       0       0
  5829 ;;      Temps:          1       0       0       0       0
  5830 ;;      Totals:         2       8       0       0       0
  5831 ;;Total ram usage:       10 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    1
  5834 ;; This function calls:
  5835 ;;		Nothing
  5836 ;; This function is called by:
  5837 ;;		_sprintf
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           
  5842                           ;psect for function ___llmod
  5843  1E1E                     ___llmod:
  5844  1E1E                     l2886:	
  5845                           ;incstack = 0
  5846                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5847                           
  5848  1E1E  1283               	bcf	3,5	;RP0=0, select bank0
  5849  1E1F  1303               	bcf	3,6	;RP1=0, select bank0
  5850  1E20  0823               	movf	___llmod@divisor+3,w
  5851  1E21  0422               	iorwf	___llmod@divisor+2,w
  5852  1E22  0421               	iorwf	___llmod@divisor+1,w
  5853  1E23  0420               	iorwf	___llmod@divisor,w
  5854  1E24  1903               	skipnz
  5855  1E25  2E27               	goto	u4811
  5856  1E26  2E28               	goto	u4810
  5857  1E27                     u4811:
  5858  1E27  2E6B               	goto	l2902
  5859  1E28                     u4810:
  5860  1E28                     l2888:
  5861  1E28  01F6               	clrf	___llmod@counter
  5862  1E29  0AF6               	incf	___llmod@counter,f
  5863  1E2A  2E38               	goto	l2892
  5864  1E2B                     l2890:
  5865  1E2B  3001               	movlw	1
  5866  1E2C  00F5               	movwf	??___llmod
  5867  1E2D                     u4825:
  5868  1E2D  1003               	clrc
  5869  1E2E  0DA0               	rlf	___llmod@divisor,f
  5870  1E2F  0DA1               	rlf	___llmod@divisor+1,f
  5871  1E30  0DA2               	rlf	___llmod@divisor+2,f
  5872  1E31  0DA3               	rlf	___llmod@divisor+3,f
  5873  1E32  0BF5               	decfsz	??___llmod,f
  5874  1E33  2E2D               	goto	u4825
  5875  1E34  3001               	movlw	1
  5876  1E35  00F5               	movwf	??___llmod
  5877  1E36  0875               	movf	??___llmod,w
  5878  1E37  07F6               	addwf	___llmod@counter,f
  5879  1E38                     l2892:
  5880  1E38  1FA3               	btfss	___llmod@divisor+3,7
  5881  1E39  2E3B               	goto	u4831
  5882  1E3A  2E3C               	goto	u4830
  5883  1E3B                     u4831:
  5884  1E3B  2E2B               	goto	l2890
  5885  1E3C                     u4830:
  5886  1E3C                     l2894:
  5887  1E3C  0823               	movf	___llmod@divisor+3,w
  5888  1E3D  0227               	subwf	___llmod@dividend+3,w
  5889  1E3E  1D03               	skipz
  5890  1E3F  2E4A               	goto	u4845
  5891  1E40  0822               	movf	___llmod@divisor+2,w
  5892  1E41  0226               	subwf	___llmod@dividend+2,w
  5893  1E42  1D03               	skipz
  5894  1E43  2E4A               	goto	u4845
  5895  1E44  0821               	movf	___llmod@divisor+1,w
  5896  1E45  0225               	subwf	___llmod@dividend+1,w
  5897  1E46  1D03               	skipz
  5898  1E47  2E4A               	goto	u4845
  5899  1E48  0820               	movf	___llmod@divisor,w
  5900  1E49  0224               	subwf	___llmod@dividend,w
  5901  1E4A                     u4845:
  5902  1E4A  1C03               	skipc
  5903  1E4B  2E4D               	goto	u4841
  5904  1E4C  2E4E               	goto	u4840
  5905  1E4D                     u4841:
  5906  1E4D  2E5C               	goto	l2898
  5907  1E4E                     u4840:
  5908  1E4E                     l2896:
  5909  1E4E  0820               	movf	___llmod@divisor,w
  5910  1E4F  02A4               	subwf	___llmod@dividend,f
  5911  1E50  0821               	movf	___llmod@divisor+1,w
  5912  1E51  1C03               	skipc
  5913  1E52  0F21               	incfsz	___llmod@divisor+1,w
  5914  1E53  02A5               	subwf	___llmod@dividend+1,f
  5915  1E54  0822               	movf	___llmod@divisor+2,w
  5916  1E55  1C03               	skipc
  5917  1E56  0F22               	incfsz	___llmod@divisor+2,w
  5918  1E57  02A6               	subwf	___llmod@dividend+2,f
  5919  1E58  0823               	movf	___llmod@divisor+3,w
  5920  1E59  1C03               	skipc
  5921  1E5A  0F23               	incfsz	___llmod@divisor+3,w
  5922  1E5B  02A7               	subwf	___llmod@dividend+3,f
  5923  1E5C                     l2898:
  5924  1E5C  3001               	movlw	1
  5925  1E5D                     u4855:
  5926  1E5D  1003               	clrc
  5927  1E5E  0CA3               	rrf	___llmod@divisor+3,f
  5928  1E5F  0CA2               	rrf	___llmod@divisor+2,f
  5929  1E60  0CA1               	rrf	___llmod@divisor+1,f
  5930  1E61  0CA0               	rrf	___llmod@divisor,f
  5931  1E62  3EFF               	addlw	-1
  5932  1E63  1D03               	skipz
  5933  1E64  2E5D               	goto	u4855
  5934  1E65                     l2900:
  5935  1E65  3001               	movlw	1
  5936  1E66  02F6               	subwf	___llmod@counter,f
  5937  1E67  1D03               	btfss	3,2
  5938  1E68  2E6A               	goto	u4861
  5939  1E69  2E6B               	goto	u4860
  5940  1E6A                     u4861:
  5941  1E6A  2E3C               	goto	l2894
  5942  1E6B                     u4860:
  5943  1E6B                     l2902:
  5944  1E6B  0827               	movf	___llmod@dividend+3,w
  5945  1E6C  00A3               	movwf	?___llmod+3
  5946  1E6D  0826               	movf	___llmod@dividend+2,w
  5947  1E6E  00A2               	movwf	?___llmod+2
  5948  1E6F  0825               	movf	___llmod@dividend+1,w
  5949  1E70  00A1               	movwf	?___llmod+1
  5950  1E71  0824               	movf	___llmod@dividend,w
  5951  1E72  00A0               	movwf	?___llmod
  5952  1E73                     l581:
  5953  1E73  0008               	return
  5954  1E74                     __end_of___llmod:
  5955                           
  5956                           	psect	text15
  5957  1F2F                     __ptext15:	
  5958 ;; *************** function ___lldiv *****************
  5959 ;; Defined at:
  5960 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  divisor         4    0[BANK0 ] unsigned long 
  5963 ;;  dividend        4    4[BANK0 ] unsigned long 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  quotient        4    8[BANK0 ] unsigned long 
  5966 ;;  counter         1   12[BANK0 ] unsigned char 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  4    0[BANK0 ] unsigned long 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5976 ;;      Params:         0       8       0       0       0
  5977 ;;      Locals:         0       5       0       0       0
  5978 ;;      Temps:          1       0       0       0       0
  5979 ;;      Totals:         1      13       0       0       0
  5980 ;;Total ram usage:       14 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    1
  5983 ;; This function calls:
  5984 ;;		Nothing
  5985 ;; This function is called by:
  5986 ;;		_sprintf
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           
  5991                           ;psect for function ___lldiv
  5992  1F2F                     ___lldiv:
  5993  1F2F                     l2786:	
  5994                           ;incstack = 0
  5995                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5996                           
  5997  1F2F  3000               	movlw	0
  5998  1F30  1283               	bcf	3,5	;RP0=0, select bank0
  5999  1F31  1303               	bcf	3,6	;RP1=0, select bank0
  6000  1F32  00AB               	movwf	___lldiv@quotient+3
  6001  1F33  3000               	movlw	0
  6002  1F34  00AA               	movwf	___lldiv@quotient+2
  6003  1F35  3000               	movlw	0
  6004  1F36  00A9               	movwf	___lldiv@quotient+1
  6005  1F37  3000               	movlw	0
  6006  1F38  00A8               	movwf	___lldiv@quotient
  6007  1F39  0823               	movf	___lldiv@divisor+3,w
  6008  1F3A  0422               	iorwf	___lldiv@divisor+2,w
  6009  1F3B  0421               	iorwf	___lldiv@divisor+1,w
  6010  1F3C  0420               	iorwf	___lldiv@divisor,w
  6011  1F3D  1903               	skipnz
  6012  1F3E  2F40               	goto	u4531
  6013  1F3F  2F41               	goto	u4530
  6014  1F40                     u4531:
  6015  1F40  2F8E               	goto	l2806
  6016  1F41                     u4530:
  6017  1F41                     l2788:
  6018  1F41  01AC               	clrf	___lldiv@counter
  6019  1F42  0AAC               	incf	___lldiv@counter,f
  6020  1F43  2F51               	goto	l2792
  6021  1F44                     l2790:
  6022  1F44  3001               	movlw	1
  6023  1F45  00F5               	movwf	??___lldiv
  6024  1F46                     u4545:
  6025  1F46  1003               	clrc
  6026  1F47  0DA0               	rlf	___lldiv@divisor,f
  6027  1F48  0DA1               	rlf	___lldiv@divisor+1,f
  6028  1F49  0DA2               	rlf	___lldiv@divisor+2,f
  6029  1F4A  0DA3               	rlf	___lldiv@divisor+3,f
  6030  1F4B  0BF5               	decfsz	??___lldiv,f
  6031  1F4C  2F46               	goto	u4545
  6032  1F4D  3001               	movlw	1
  6033  1F4E  00F5               	movwf	??___lldiv
  6034  1F4F  0875               	movf	??___lldiv,w
  6035  1F50  07AC               	addwf	___lldiv@counter,f
  6036  1F51                     l2792:
  6037  1F51  1FA3               	btfss	___lldiv@divisor+3,7
  6038  1F52  2F54               	goto	u4551
  6039  1F53  2F55               	goto	u4550
  6040  1F54                     u4551:
  6041  1F54  2F44               	goto	l2790
  6042  1F55                     u4550:
  6043  1F55                     l2794:
  6044  1F55  3001               	movlw	1
  6045  1F56  00F5               	movwf	??___lldiv
  6046  1F57                     u4565:
  6047  1F57  1003               	clrc
  6048  1F58  0DA8               	rlf	___lldiv@quotient,f
  6049  1F59  0DA9               	rlf	___lldiv@quotient+1,f
  6050  1F5A  0DAA               	rlf	___lldiv@quotient+2,f
  6051  1F5B  0DAB               	rlf	___lldiv@quotient+3,f
  6052  1F5C  0BF5               	decfsz	??___lldiv,f
  6053  1F5D  2F57               	goto	u4565
  6054  1F5E                     l2796:
  6055  1F5E  0823               	movf	___lldiv@divisor+3,w
  6056  1F5F  0227               	subwf	___lldiv@dividend+3,w
  6057  1F60  1D03               	skipz
  6058  1F61  2F6C               	goto	u4575
  6059  1F62  0822               	movf	___lldiv@divisor+2,w
  6060  1F63  0226               	subwf	___lldiv@dividend+2,w
  6061  1F64  1D03               	skipz
  6062  1F65  2F6C               	goto	u4575
  6063  1F66  0821               	movf	___lldiv@divisor+1,w
  6064  1F67  0225               	subwf	___lldiv@dividend+1,w
  6065  1F68  1D03               	skipz
  6066  1F69  2F6C               	goto	u4575
  6067  1F6A  0820               	movf	___lldiv@divisor,w
  6068  1F6B  0224               	subwf	___lldiv@dividend,w
  6069  1F6C                     u4575:
  6070  1F6C  1C03               	skipc
  6071  1F6D  2F6F               	goto	u4571
  6072  1F6E  2F70               	goto	u4570
  6073  1F6F                     u4571:
  6074  1F6F  2F7F               	goto	l2802
  6075  1F70                     u4570:
  6076  1F70                     l2798:
  6077  1F70  0820               	movf	___lldiv@divisor,w
  6078  1F71  02A4               	subwf	___lldiv@dividend,f
  6079  1F72  0821               	movf	___lldiv@divisor+1,w
  6080  1F73  1C03               	skipc
  6081  1F74  0F21               	incfsz	___lldiv@divisor+1,w
  6082  1F75  02A5               	subwf	___lldiv@dividend+1,f
  6083  1F76  0822               	movf	___lldiv@divisor+2,w
  6084  1F77  1C03               	skipc
  6085  1F78  0F22               	incfsz	___lldiv@divisor+2,w
  6086  1F79  02A6               	subwf	___lldiv@dividend+2,f
  6087  1F7A  0823               	movf	___lldiv@divisor+3,w
  6088  1F7B  1C03               	skipc
  6089  1F7C  0F23               	incfsz	___lldiv@divisor+3,w
  6090  1F7D  02A7               	subwf	___lldiv@dividend+3,f
  6091  1F7E                     l2800:
  6092  1F7E  1428               	bsf	___lldiv@quotient,0
  6093  1F7F                     l2802:
  6094  1F7F  3001               	movlw	1
  6095  1F80                     u4585:
  6096  1F80  1003               	clrc
  6097  1F81  0CA3               	rrf	___lldiv@divisor+3,f
  6098  1F82  0CA2               	rrf	___lldiv@divisor+2,f
  6099  1F83  0CA1               	rrf	___lldiv@divisor+1,f
  6100  1F84  0CA0               	rrf	___lldiv@divisor,f
  6101  1F85  3EFF               	addlw	-1
  6102  1F86  1D03               	skipz
  6103  1F87  2F80               	goto	u4585
  6104  1F88                     l2804:
  6105  1F88  3001               	movlw	1
  6106  1F89  02AC               	subwf	___lldiv@counter,f
  6107  1F8A  1D03               	btfss	3,2
  6108  1F8B  2F8D               	goto	u4591
  6109  1F8C  2F8E               	goto	u4590
  6110  1F8D                     u4591:
  6111  1F8D  2F55               	goto	l2794
  6112  1F8E                     u4590:
  6113  1F8E                     l2806:
  6114  1F8E  082B               	movf	___lldiv@quotient+3,w
  6115  1F8F  00A3               	movwf	?___lldiv+3
  6116  1F90  082A               	movf	___lldiv@quotient+2,w
  6117  1F91  00A2               	movwf	?___lldiv+2
  6118  1F92  0829               	movf	___lldiv@quotient+1,w
  6119  1F93  00A1               	movwf	?___lldiv+1
  6120  1F94  0828               	movf	___lldiv@quotient,w
  6121  1F95  00A0               	movwf	?___lldiv
  6122  1F96                     l361:
  6123  1F96  0008               	return
  6124  1F97                     __end_of___lldiv:
  6125                           
  6126                           	psect	text16
  6127  0802                     __ptext16:	
  6128 ;; *************** function ___fltol *****************
  6129 ;; Defined at:
  6130 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  f1              4   59[BANK0 ] unsigned long 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  exp1            1   69[BANK0 ] unsigned char 
  6135 ;;  sign1           1   68[BANK0 ] unsigned char 
  6136 ;; Return value:  Size  Location     Type
  6137 ;;                  4   59[BANK0 ] long 
  6138 ;; Registers used:
  6139 ;;		wreg, status,2, status,0
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6145 ;;      Params:         0       4       0       0       0
  6146 ;;      Locals:         0       2       0       0       0
  6147 ;;      Temps:          0       5       0       0       0
  6148 ;;      Totals:         0      11       0       0       0
  6149 ;;Total ram usage:       11 bytes
  6150 ;; Hardware stack levels used:    1
  6151 ;; Hardware stack levels required when called:    1
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_sprintf
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           
  6160                           ;psect for function ___fltol
  6161  0802                     ___fltol:
  6162  0802                     l2850:	
  6163                           ;incstack = 0
  6164                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6165                           
  6166  0802  1003               	clrc
  6167  0803  1283               	bcf	3,5	;RP0=0, select bank0
  6168  0804  1303               	bcf	3,6	;RP1=0, select bank0
  6169  0805  0D5D               	rlf	___fltol@f1+2,w
  6170  0806  0D5E               	rlf	___fltol@f1+3,w
  6171  0807  00DF               	movwf	??___fltol
  6172  0808  085F               	movf	??___fltol,w
  6173  0809  00E5               	movwf	___fltol@exp1
  6174  080A  0865               	movf	___fltol@exp1,w
  6175  080B  1D03               	btfss	3,2
  6176  080C  280E               	goto	u4711
  6177  080D  280F               	goto	u4710
  6178  080E                     u4711:
  6179  080E  2818               	goto	l2856
  6180  080F                     u4710:
  6181  080F                     l2852:
  6182  080F  3000               	movlw	0
  6183  0810  00DE               	movwf	?___fltol+3
  6184  0811  3000               	movlw	0
  6185  0812  00DD               	movwf	?___fltol+2
  6186  0813  3000               	movlw	0
  6187  0814  00DC               	movwf	?___fltol+1
  6188  0815  3000               	movlw	0
  6189  0816  00DB               	movwf	?___fltol
  6190  0817  287D               	goto	l528
  6191  0818                     l2856:
  6192  0818  085B               	movf	___fltol@f1,w
  6193  0819  00DF               	movwf	??___fltol
  6194  081A  085C               	movf	___fltol@f1+1,w
  6195  081B  00E0               	movwf	??___fltol+1
  6196  081C  085D               	movf	___fltol@f1+2,w
  6197  081D  00E1               	movwf	??___fltol+2
  6198  081E  085E               	movf	___fltol@f1+3,w
  6199  081F  00E2               	movwf	??___fltol+3
  6200  0820  301F               	movlw	31
  6201  0821                     u4725:
  6202  0821  1003               	clrc
  6203  0822  0CE2               	rrf	??___fltol+3,f
  6204  0823  0CE1               	rrf	??___fltol+2,f
  6205  0824  0CE0               	rrf	??___fltol+1,f
  6206  0825  0CDF               	rrf	??___fltol,f
  6207  0826                     u4720:
  6208  0826  3EFF               	addlw	-1
  6209  0827  1D03               	skipz
  6210  0828  2821               	goto	u4725
  6211  0829  085F               	movf	??___fltol,w
  6212  082A  00E3               	movwf	??___fltol+4
  6213  082B  0863               	movf	??___fltol+4,w
  6214  082C  00E4               	movwf	___fltol@sign1
  6215  082D                     l2858:
  6216  082D  17DD               	bsf	___fltol@f1+2,7
  6217  082E                     l2860:
  6218  082E  30FF               	movlw	255
  6219  082F  05DB               	andwf	___fltol@f1,f
  6220  0830  30FF               	movlw	255
  6221  0831  05DC               	andwf	___fltol@f1+1,f
  6222  0832  30FF               	movlw	255
  6223  0833  05DD               	andwf	___fltol@f1+2,f
  6224  0834  3000               	movlw	0
  6225  0835  05DE               	andwf	___fltol@f1+3,f
  6226  0836                     l2862:
  6227  0836  3096               	movlw	150
  6228  0837  02E5               	subwf	___fltol@exp1,f
  6229  0838                     l2864:
  6230  0838  1FE5               	btfss	___fltol@exp1,7
  6231  0839  283B               	goto	u4731
  6232  083A  283C               	goto	u4730
  6233  083B                     u4731:
  6234  083B  2856               	goto	l2874
  6235  083C                     u4730:
  6236  083C                     l2866:
  6237  083C  0865               	movf	___fltol@exp1,w
  6238  083D  3A80               	xorlw	128
  6239  083E  3E97               	addlw	151
  6240  083F  1803               	skipnc
  6241  0840  2842               	goto	u4741
  6242  0841  2843               	goto	u4740
  6243  0842                     u4741:
  6244  0842  2844               	goto	l2872
  6245  0843                     u4740:
  6246  0843  280F               	goto	l2852
  6247  0844                     l2872:
  6248  0844  3001               	movlw	1
  6249  0845                     u4755:
  6250  0845  1003               	clrc
  6251  0846  0CDE               	rrf	___fltol@f1+3,f
  6252  0847  0CDD               	rrf	___fltol@f1+2,f
  6253  0848  0CDC               	rrf	___fltol@f1+1,f
  6254  0849  0CDB               	rrf	___fltol@f1,f
  6255  084A  3EFF               	addlw	-1
  6256  084B  1D03               	skipz
  6257  084C  2845               	goto	u4755
  6258  084D  3001               	movlw	1
  6259  084E  00DF               	movwf	??___fltol
  6260  084F  085F               	movf	??___fltol,w
  6261  0850  07E5               	addwf	___fltol@exp1,f
  6262  0851  1D03               	btfss	3,2
  6263  0852  2854               	goto	u4761
  6264  0853  2855               	goto	u4760
  6265  0854                     u4761:
  6266  0854  2844               	goto	l2872
  6267  0855                     u4760:
  6268  0855  286D               	goto	l2882
  6269  0856                     l2874:
  6270  0856  3020               	movlw	32
  6271  0857  0265               	subwf	___fltol@exp1,w
  6272  0858  1C03               	skipc
  6273  0859  285B               	goto	u4771
  6274  085A  285C               	goto	u4770
  6275  085B                     u4771:
  6276  085B  2868               	goto	l535
  6277  085C                     u4770:
  6278  085C  280F               	goto	l2852
  6279  085D                     l2880:
  6280  085D  3001               	movlw	1
  6281  085E  00DF               	movwf	??___fltol
  6282  085F                     u4785:
  6283  085F  1003               	clrc
  6284  0860  0DDB               	rlf	___fltol@f1,f
  6285  0861  0DDC               	rlf	___fltol@f1+1,f
  6286  0862  0DDD               	rlf	___fltol@f1+2,f
  6287  0863  0DDE               	rlf	___fltol@f1+3,f
  6288  0864  0BDF               	decfsz	??___fltol,f
  6289  0865  285F               	goto	u4785
  6290  0866  3001               	movlw	1
  6291  0867  02E5               	subwf	___fltol@exp1,f
  6292  0868                     l535:
  6293  0868  0865               	movf	___fltol@exp1,w
  6294  0869  1D03               	btfss	3,2
  6295  086A  286C               	goto	u4791
  6296  086B  286D               	goto	u4790
  6297  086C                     u4791:
  6298  086C  285D               	goto	l2880
  6299  086D                     u4790:
  6300  086D                     l2882:
  6301  086D  0864               	movf	___fltol@sign1,w
  6302  086E  1903               	btfsc	3,2
  6303  086F  2871               	goto	u4801
  6304  0870  2872               	goto	u4800
  6305  0871                     u4801:
  6306  0871  287D               	goto	l538
  6307  0872                     u4800:
  6308  0872                     l2884:
  6309  0872  09DB               	comf	___fltol@f1,f
  6310  0873  09DC               	comf	___fltol@f1+1,f
  6311  0874  09DD               	comf	___fltol@f1+2,f
  6312  0875  09DE               	comf	___fltol@f1+3,f
  6313  0876  0ADB               	incf	___fltol@f1,f
  6314  0877  1903               	skipnz
  6315  0878  0ADC               	incf	___fltol@f1+1,f
  6316  0879  1903               	skipnz
  6317  087A  0ADD               	incf	___fltol@f1+2,f
  6318  087B  1903               	skipnz
  6319  087C  0ADE               	incf	___fltol@f1+3,f
  6320  087D                     l538:
  6321  087D                     l528:
  6322  087D  0008               	return
  6323  087E                     __end_of___fltol:
  6324                           
  6325                           	psect	text17
  6326  1DCE                     __ptext17:	
  6327 ;; *************** function ___flsub *****************
  6328 ;; Defined at:
  6329 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;  a               4    0[BANK1 ] long 
  6332 ;;  b               4    4[BANK1 ] long 
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;		None
  6335 ;; Return value:  Size  Location     Type
  6336 ;;                  4    0[BANK1 ] long 
  6337 ;; Registers used:
  6338 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6344 ;;      Params:         0       0       8       0       0
  6345 ;;      Locals:         0       0       0       0       0
  6346 ;;      Temps:          0       0       0       0       0
  6347 ;;      Totals:         0       0       8       0       0
  6348 ;;Total ram usage:        8 bytes
  6349 ;; Hardware stack levels used:    1
  6350 ;; Hardware stack levels required when called:    2
  6351 ;; This function calls:
  6352 ;;		___fladd
  6353 ;; This function is called by:
  6354 ;;		_sprintf
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           
  6359                           ;psect for function ___flsub
  6360  1DCE                     ___flsub:
  6361  1DCE                     l2906:	
  6362                           ;incstack = 0
  6363                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6364                           
  6365  1DCE  3080               	movlw	128
  6366  1DCF  1683               	bsf	3,5	;RP0=1, select bank1
  6367  1DD0  1303               	bcf	3,6	;RP1=0, select bank1
  6368  1DD1  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6369  1DD2                     l2908:
  6370  1DD2  0827               	movf	(___flsub@b+3)^(0+128),w
  6371  1DD3  1283               	bcf	3,5	;RP0=0, select bank0
  6372  1DD4  1303               	bcf	3,6	;RP1=0, select bank0
  6373  1DD5  00DF               	movwf	___fladd@b+3
  6374  1DD6  1683               	bsf	3,5	;RP0=1, select bank1
  6375  1DD7  1303               	bcf	3,6	;RP1=0, select bank1
  6376  1DD8  0826               	movf	(___flsub@b+2)^(0+128),w
  6377  1DD9  1283               	bcf	3,5	;RP0=0, select bank0
  6378  1DDA  1303               	bcf	3,6	;RP1=0, select bank0
  6379  1DDB  00DE               	movwf	___fladd@b+2
  6380  1DDC  1683               	bsf	3,5	;RP0=1, select bank1
  6381  1DDD  1303               	bcf	3,6	;RP1=0, select bank1
  6382  1DDE  0825               	movf	(___flsub@b+1)^(0+128),w
  6383  1DDF  1283               	bcf	3,5	;RP0=0, select bank0
  6384  1DE0  1303               	bcf	3,6	;RP1=0, select bank0
  6385  1DE1  00DD               	movwf	___fladd@b+1
  6386  1DE2  1683               	bsf	3,5	;RP0=1, select bank1
  6387  1DE3  1303               	bcf	3,6	;RP1=0, select bank1
  6388  1DE4  0824               	movf	___flsub@b^(0+128),w
  6389  1DE5  1283               	bcf	3,5	;RP0=0, select bank0
  6390  1DE6  1303               	bcf	3,6	;RP1=0, select bank0
  6391  1DE7  00DC               	movwf	___fladd@b
  6392  1DE8  1683               	bsf	3,5	;RP0=1, select bank1
  6393  1DE9  1303               	bcf	3,6	;RP1=0, select bank1
  6394  1DEA  0823               	movf	(___flsub@a+3)^(0+128),w
  6395  1DEB  1283               	bcf	3,5	;RP0=0, select bank0
  6396  1DEC  1303               	bcf	3,6	;RP1=0, select bank0
  6397  1DED  00E3               	movwf	___fladd@a+3
  6398  1DEE  1683               	bsf	3,5	;RP0=1, select bank1
  6399  1DEF  1303               	bcf	3,6	;RP1=0, select bank1
  6400  1DF0  0822               	movf	(___flsub@a+2)^(0+128),w
  6401  1DF1  1283               	bcf	3,5	;RP0=0, select bank0
  6402  1DF2  1303               	bcf	3,6	;RP1=0, select bank0
  6403  1DF3  00E2               	movwf	___fladd@a+2
  6404  1DF4  1683               	bsf	3,5	;RP0=1, select bank1
  6405  1DF5  1303               	bcf	3,6	;RP1=0, select bank1
  6406  1DF6  0821               	movf	(___flsub@a+1)^(0+128),w
  6407  1DF7  1283               	bcf	3,5	;RP0=0, select bank0
  6408  1DF8  1303               	bcf	3,6	;RP1=0, select bank0
  6409  1DF9  00E1               	movwf	___fladd@a+1
  6410  1DFA  1683               	bsf	3,5	;RP0=1, select bank1
  6411  1DFB  1303               	bcf	3,6	;RP1=0, select bank1
  6412  1DFC  0820               	movf	___flsub@a^(0+128),w
  6413  1DFD  1283               	bcf	3,5	;RP0=0, select bank0
  6414  1DFE  1303               	bcf	3,6	;RP1=0, select bank0
  6415  1DFF  00E0               	movwf	___fladd@a
  6416  1E00  160A  118A  222C  160A  158A  	fcall	___fladd
  6417  1E05  1283               	bcf	3,5	;RP0=0, select bank0
  6418  1E06  1303               	bcf	3,6	;RP1=0, select bank0
  6419  1E07  085F               	movf	?___fladd+3,w
  6420  1E08  1683               	bsf	3,5	;RP0=1, select bank1
  6421  1E09  1303               	bcf	3,6	;RP1=0, select bank1
  6422  1E0A  00A3               	movwf	(?___flsub+3)^(0+128)
  6423  1E0B  1283               	bcf	3,5	;RP0=0, select bank0
  6424  1E0C  1303               	bcf	3,6	;RP1=0, select bank0
  6425  1E0D  085E               	movf	?___fladd+2,w
  6426  1E0E  1683               	bsf	3,5	;RP0=1, select bank1
  6427  1E0F  1303               	bcf	3,6	;RP1=0, select bank1
  6428  1E10  00A2               	movwf	(?___flsub+2)^(0+128)
  6429  1E11  1283               	bcf	3,5	;RP0=0, select bank0
  6430  1E12  1303               	bcf	3,6	;RP1=0, select bank0
  6431  1E13  085D               	movf	?___fladd+1,w
  6432  1E14  1683               	bsf	3,5	;RP0=1, select bank1
  6433  1E15  1303               	bcf	3,6	;RP1=0, select bank1
  6434  1E16  00A1               	movwf	(?___flsub+1)^(0+128)
  6435  1E17  1283               	bcf	3,5	;RP0=0, select bank0
  6436  1E18  1303               	bcf	3,6	;RP1=0, select bank0
  6437  1E19  085C               	movf	?___fladd,w
  6438  1E1A  1683               	bsf	3,5	;RP0=1, select bank1
  6439  1E1B  1303               	bcf	3,6	;RP1=0, select bank1
  6440  1E1C  00A0               	movwf	?___flsub^(0+128)
  6441  1E1D                     l698:
  6442  1E1D  0008               	return
  6443  1E1E                     __end_of___flsub:
  6444                           
  6445                           	psect	text18
  6446  122C                     __ptext18:	
  6447 ;; *************** function ___fladd *****************
  6448 ;; Defined at:
  6449 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  b               4   60[BANK0 ] long 
  6452 ;;  a               4   64[BANK0 ] long 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  grs             1   79[BANK0 ] unsigned char 
  6455 ;;  bexp            1   78[BANK0 ] unsigned char 
  6456 ;;  aexp            1   77[BANK0 ] unsigned char 
  6457 ;;  signs           1   76[BANK0 ] unsigned char 
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  4   60[BANK0 ] unsigned char 
  6460 ;; Registers used:
  6461 ;;		wreg, status,2, status,0, btemp+1
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6467 ;;      Params:         0       8       0       0       0
  6468 ;;      Locals:         0       4       0       0       0
  6469 ;;      Temps:          0       8       0       0       0
  6470 ;;      Totals:         0      20       0       0       0
  6471 ;;Total ram usage:       20 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    1
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_sprintf
  6478 ;;		___flsub
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           
  6483                           ;psect for function ___fladd
  6484  122C                     ___fladd:
  6485  122C                     l2260:	
  6486                           ;incstack = 0
  6487                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6488                           
  6489  122C  1283               	bcf	3,5	;RP0=0, select bank0
  6490  122D  1303               	bcf	3,6	;RP1=0, select bank0
  6491  122E  085F               	movf	___fladd@b+3,w
  6492  122F  3980               	andlw	128
  6493  1230  00E4               	movwf	??___fladd
  6494  1231  0864               	movf	??___fladd,w
  6495  1232  00EC               	movwf	___fladd@signs
  6496  1233                     l2262:
  6497  1233  085F               	movf	___fladd@b+3,w
  6498  1234  00E4               	movwf	??___fladd
  6499  1235  0764               	addwf	??___fladd,w
  6500  1236  00E5               	movwf	??___fladd+1
  6501  1237  0865               	movf	??___fladd+1,w
  6502  1238  00EE               	movwf	___fladd@bexp
  6503  1239                     l2264:
  6504  1239  1FDE               	btfss	___fladd@b+2,7
  6505  123A  2A3C               	goto	u3121
  6506  123B  2A3D               	goto	u3120
  6507  123C                     u3121:
  6508  123C  2A3E               	goto	l2268
  6509  123D                     u3120:
  6510  123D                     l2266:
  6511  123D  146E               	bsf	___fladd@bexp,0
  6512  123E                     l2268:
  6513  123E  086E               	movf	___fladd@bexp,w
  6514  123F  1903               	btfsc	3,2
  6515  1240  2A42               	goto	u3131
  6516  1241  2A43               	goto	u3130
  6517  1242                     u3131:
  6518  1242  2A53               	goto	l2278
  6519  1243                     u3130:
  6520  1243                     l2270:
  6521  1243  0A6E               	incf	___fladd@bexp,w
  6522  1244  1D03               	btfss	3,2
  6523  1245  2A47               	goto	u3141
  6524  1246  2A48               	goto	u3140
  6525  1247                     u3141:
  6526  1247  2A50               	goto	l2274
  6527  1248                     u3140:
  6528  1248                     l2272:
  6529  1248  3000               	movlw	0
  6530  1249  00DF               	movwf	___fladd@b+3
  6531  124A  3000               	movlw	0
  6532  124B  00DE               	movwf	___fladd@b+2
  6533  124C  3000               	movlw	0
  6534  124D  00DD               	movwf	___fladd@b+1
  6535  124E  3000               	movlw	0
  6536  124F  00DC               	movwf	___fladd@b
  6537  1250                     l2274:
  6538  1250  17DE               	bsf	___fladd@b+2,7
  6539  1251                     l2276:
  6540  1251  01DF               	clrf	___fladd@b+3
  6541  1252  2A5B               	goto	l2280
  6542  1253                     l2278:
  6543  1253  3000               	movlw	0
  6544  1254  00DF               	movwf	___fladd@b+3
  6545  1255  3000               	movlw	0
  6546  1256  00DE               	movwf	___fladd@b+2
  6547  1257  3000               	movlw	0
  6548  1258  00DD               	movwf	___fladd@b+1
  6549  1259  3000               	movlw	0
  6550  125A  00DC               	movwf	___fladd@b
  6551  125B                     l2280:
  6552  125B  0863               	movf	___fladd@a+3,w
  6553  125C  3980               	andlw	128
  6554  125D  00E4               	movwf	??___fladd
  6555  125E  0864               	movf	??___fladd,w
  6556  125F  00ED               	movwf	___fladd@aexp
  6557  1260                     l2282:
  6558  1260  086D               	movf	___fladd@aexp,w
  6559  1261  066C               	xorwf	___fladd@signs,w
  6560  1262  1903               	skipnz
  6561  1263  2A65               	goto	u3151
  6562  1264  2A66               	goto	u3150
  6563  1265                     u3151:
  6564  1265  2A67               	goto	l2286
  6565  1266                     u3150:
  6566  1266                     l2284:
  6567  1266  176C               	bsf	___fladd@signs,6
  6568  1267                     l2286:
  6569  1267  0863               	movf	___fladd@a+3,w
  6570  1268  00E4               	movwf	??___fladd
  6571  1269  0764               	addwf	??___fladd,w
  6572  126A  00E5               	movwf	??___fladd+1
  6573  126B  0865               	movf	??___fladd+1,w
  6574  126C  00ED               	movwf	___fladd@aexp
  6575  126D                     l2288:
  6576  126D  1FE2               	btfss	___fladd@a+2,7
  6577  126E  2A70               	goto	u3161
  6578  126F  2A71               	goto	u3160
  6579  1270                     u3161:
  6580  1270  2A72               	goto	l2292
  6581  1271                     u3160:
  6582  1271                     l2290:
  6583  1271  146D               	bsf	___fladd@aexp,0
  6584  1272                     l2292:
  6585  1272  086D               	movf	___fladd@aexp,w
  6586  1273  1903               	btfsc	3,2
  6587  1274  2A76               	goto	u3171
  6588  1275  2A77               	goto	u3170
  6589  1276                     u3171:
  6590  1276  2A87               	goto	l2302
  6591  1277                     u3170:
  6592  1277                     l2294:
  6593  1277  0A6D               	incf	___fladd@aexp,w
  6594  1278  1D03               	btfss	3,2
  6595  1279  2A7B               	goto	u3181
  6596  127A  2A7C               	goto	u3180
  6597  127B                     u3181:
  6598  127B  2A84               	goto	l2298
  6599  127C                     u3180:
  6600  127C                     l2296:
  6601  127C  3000               	movlw	0
  6602  127D  00E3               	movwf	___fladd@a+3
  6603  127E  3000               	movlw	0
  6604  127F  00E2               	movwf	___fladd@a+2
  6605  1280  3000               	movlw	0
  6606  1281  00E1               	movwf	___fladd@a+1
  6607  1282  3000               	movlw	0
  6608  1283  00E0               	movwf	___fladd@a
  6609  1284                     l2298:
  6610  1284  17E2               	bsf	___fladd@a+2,7
  6611  1285                     l2300:
  6612  1285  01E3               	clrf	___fladd@a+3
  6613  1286  2A8F               	goto	l652
  6614  1287                     l2302:
  6615  1287  3000               	movlw	0
  6616  1288  00E3               	movwf	___fladd@a+3
  6617  1289  3000               	movlw	0
  6618  128A  00E2               	movwf	___fladd@a+2
  6619  128B  3000               	movlw	0
  6620  128C  00E1               	movwf	___fladd@a+1
  6621  128D  3000               	movlw	0
  6622  128E  00E0               	movwf	___fladd@a
  6623  128F                     l652:
  6624  128F  086E               	movf	___fladd@bexp,w
  6625  1290  026D               	subwf	___fladd@aexp,w
  6626  1291  1803               	skipnc
  6627  1292  2A94               	goto	u3191
  6628  1293  2A95               	goto	u3190
  6629  1294                     u3191:
  6630  1294  2AD9               	goto	l2338
  6631  1295                     u3190:
  6632  1295                     l2304:
  6633  1295  1F6C               	btfss	___fladd@signs,6
  6634  1296  2A98               	goto	u3201
  6635  1297  2A99               	goto	u3200
  6636  1298                     u3201:
  6637  1298  2A9D               	goto	l2308
  6638  1299                     u3200:
  6639  1299                     l2306:
  6640  1299  3080               	movlw	128
  6641  129A  00E4               	movwf	??___fladd
  6642  129B  0864               	movf	??___fladd,w
  6643  129C  06EC               	xorwf	___fladd@signs,f
  6644  129D                     l2308:
  6645  129D  086E               	movf	___fladd@bexp,w
  6646  129E  00E4               	movwf	??___fladd
  6647  129F  0864               	movf	??___fladd,w
  6648  12A0  00EF               	movwf	___fladd@grs
  6649  12A1                     l2310:
  6650  12A1  086D               	movf	___fladd@aexp,w
  6651  12A2  00E4               	movwf	??___fladd
  6652  12A3  0864               	movf	??___fladd,w
  6653  12A4  00EE               	movwf	___fladd@bexp
  6654  12A5                     l2312:
  6655  12A5  086F               	movf	___fladd@grs,w
  6656  12A6  00E4               	movwf	??___fladd
  6657  12A7  0864               	movf	??___fladd,w
  6658  12A8  00ED               	movwf	___fladd@aexp
  6659  12A9                     l2314:
  6660  12A9  085C               	movf	___fladd@b,w
  6661  12AA  00E4               	movwf	??___fladd
  6662  12AB  0864               	movf	??___fladd,w
  6663  12AC  00EF               	movwf	___fladd@grs
  6664  12AD                     l2316:
  6665  12AD  0860               	movf	___fladd@a,w
  6666  12AE  00E4               	movwf	??___fladd
  6667  12AF  0864               	movf	??___fladd,w
  6668  12B0  00DC               	movwf	___fladd@b
  6669  12B1                     l2318:
  6670  12B1  086F               	movf	___fladd@grs,w
  6671  12B2  00E4               	movwf	??___fladd
  6672  12B3  0864               	movf	??___fladd,w
  6673  12B4  00E0               	movwf	___fladd@a
  6674  12B5                     l2320:
  6675  12B5  085D               	movf	___fladd@b+1,w
  6676  12B6  00E4               	movwf	??___fladd
  6677  12B7  0864               	movf	??___fladd,w
  6678  12B8  00EF               	movwf	___fladd@grs
  6679  12B9                     l2322:
  6680  12B9  0861               	movf	___fladd@a+1,w
  6681  12BA  00E4               	movwf	??___fladd
  6682  12BB  0864               	movf	??___fladd,w
  6683  12BC  00DD               	movwf	___fladd@b+1
  6684  12BD                     l2324:
  6685  12BD  086F               	movf	___fladd@grs,w
  6686  12BE  00E4               	movwf	??___fladd
  6687  12BF  0864               	movf	??___fladd,w
  6688  12C0  00E1               	movwf	___fladd@a+1
  6689  12C1                     l2326:
  6690  12C1  085E               	movf	___fladd@b+2,w
  6691  12C2  00E4               	movwf	??___fladd
  6692  12C3  0864               	movf	??___fladd,w
  6693  12C4  00EF               	movwf	___fladd@grs
  6694  12C5                     l2328:
  6695  12C5  0862               	movf	___fladd@a+2,w
  6696  12C6  00E4               	movwf	??___fladd
  6697  12C7  0864               	movf	??___fladd,w
  6698  12C8  00DE               	movwf	___fladd@b+2
  6699  12C9                     l2330:
  6700  12C9  086F               	movf	___fladd@grs,w
  6701  12CA  00E4               	movwf	??___fladd
  6702  12CB  0864               	movf	??___fladd,w
  6703  12CC  00E2               	movwf	___fladd@a+2
  6704  12CD                     l2332:
  6705  12CD  085F               	movf	___fladd@b+3,w
  6706  12CE  00E4               	movwf	??___fladd
  6707  12CF  0864               	movf	??___fladd,w
  6708  12D0  00EF               	movwf	___fladd@grs
  6709  12D1                     l2334:
  6710  12D1  0863               	movf	___fladd@a+3,w
  6711  12D2  00E4               	movwf	??___fladd
  6712  12D3  0864               	movf	??___fladd,w
  6713  12D4  00DF               	movwf	___fladd@b+3
  6714  12D5                     l2336:
  6715  12D5  086F               	movf	___fladd@grs,w
  6716  12D6  00E4               	movwf	??___fladd
  6717  12D7  0864               	movf	??___fladd,w
  6718  12D8  00E3               	movwf	___fladd@a+3
  6719  12D9                     l2338:
  6720  12D9  01EF               	clrf	___fladd@grs
  6721  12DA                     l2340:
  6722  12DA  086D               	movf	___fladd@aexp,w
  6723  12DB  00E4               	movwf	??___fladd
  6724  12DC  01E5               	clrf	??___fladd+1
  6725  12DD  0865               	movf	??___fladd+1,w
  6726  12DE  00E7               	movwf	??___fladd+3
  6727  12DF  086E               	movf	___fladd@bexp,w
  6728  12E0  0264               	subwf	??___fladd,w
  6729  12E1  00E6               	movwf	??___fladd+2
  6730  12E2  1C03               	skipc
  6731  12E3  03E7               	decf	??___fladd+3,f
  6732  12E4  0867               	movf	??___fladd+3,w
  6733  12E5  3A80               	xorlw	128
  6734  12E6  00FF               	movwf	btemp+1
  6735  12E7  3080               	movlw	128
  6736  12E8  027F               	subwf	btemp+1,w
  6737  12E9  1D03               	skipz
  6738  12EA  2AED               	goto	u3215
  6739  12EB  301A               	movlw	26
  6740  12EC  0266               	subwf	??___fladd+2,w
  6741  12ED                     u3215:
  6742  12ED  1C03               	skipc
  6743  12EE  2AF0               	goto	u3211
  6744  12EF  2AF1               	goto	u3210
  6745  12F0                     u3211:
  6746  12F0  2B2E               	goto	l2356
  6747  12F1                     u3210:
  6748  12F1                     l2342:
  6749  12F1  1283               	bcf	3,5	;RP0=0, select bank0
  6750  12F2  1303               	bcf	3,6	;RP1=0, select bank0
  6751  12F3  085F               	movf	___fladd@b+3,w
  6752  12F4  045E               	iorwf	___fladd@b+2,w
  6753  12F5  045D               	iorwf	___fladd@b+1,w
  6754  12F6  045C               	iorwf	___fladd@b,w
  6755  12F7  1D03               	skipz
  6756  12F8  2AFA               	goto	u3221
  6757  12F9  2AFC               	goto	u3220
  6758  12FA                     u3221:
  6759  12FA  3001               	movlw	1
  6760  12FB  2AFD               	goto	u3230
  6761  12FC                     u3220:
  6762  12FC  3000               	movlw	0
  6763  12FD                     u3230:
  6764  12FD  00E4               	movwf	??___fladd
  6765  12FE  0864               	movf	??___fladd,w
  6766  12FF  00EF               	movwf	___fladd@grs
  6767  1300  3000               	movlw	0
  6768  1301  00DF               	movwf	___fladd@b+3
  6769  1302  3000               	movlw	0
  6770  1303  00DE               	movwf	___fladd@b+2
  6771  1304  3000               	movlw	0
  6772  1305  00DD               	movwf	___fladd@b+1
  6773  1306  3000               	movlw	0
  6774  1307  00DC               	movwf	___fladd@b
  6775  1308  086D               	movf	___fladd@aexp,w
  6776  1309  00E4               	movwf	??___fladd
  6777  130A  0864               	movf	??___fladd,w
  6778  130B  00EE               	movwf	___fladd@bexp
  6779  130C  2B36               	goto	l656
  6780  130D                     l658:
  6781  130D  1C6F               	btfss	___fladd@grs,0
  6782  130E  2B10               	goto	u3241
  6783  130F  2B11               	goto	u3240
  6784  1310                     u3241:
  6785  1310  2B1A               	goto	l2346
  6786  1311                     u3240:
  6787  1311                     l2344:
  6788  1311  086F               	movf	___fladd@grs,w
  6789  1312  00E4               	movwf	??___fladd
  6790  1313  1003               	clrc
  6791  1314  0C64               	rrf	??___fladd,w
  6792  1315  3801               	iorlw	1
  6793  1316  00E5               	movwf	??___fladd+1
  6794  1317  0865               	movf	??___fladd+1,w
  6795  1318  00EF               	movwf	___fladd@grs
  6796  1319  2B1C               	goto	l2348
  6797  131A                     l2346:
  6798  131A  1003               	clrc
  6799  131B  0CEF               	rrf	___fladd@grs,f
  6800  131C                     l2348:
  6801  131C  1C5C               	btfss	___fladd@b,0
  6802  131D  2B1F               	goto	u3251
  6803  131E  2B20               	goto	u3250
  6804  131F                     u3251:
  6805  131F  2B21               	goto	l2352
  6806  1320                     u3250:
  6807  1320                     l2350:
  6808  1320  17EF               	bsf	___fladd@grs,7
  6809  1321                     l2352:
  6810  1321  3001               	movlw	1
  6811  1322  00E4               	movwf	??___fladd
  6812  1323                     u3265:
  6813  1323  0D5F               	rlf	___fladd@b+3,w
  6814  1324  0CDF               	rrf	___fladd@b+3,f
  6815  1325  0CDE               	rrf	___fladd@b+2,f
  6816  1326  0CDD               	rrf	___fladd@b+1,f
  6817  1327  0CDC               	rrf	___fladd@b,f
  6818  1328  0BE4               	decfsz	??___fladd& (0+127),f
  6819  1329  2B23               	goto	u3265
  6820  132A                     l2354:
  6821  132A  3001               	movlw	1
  6822  132B  00E4               	movwf	??___fladd
  6823  132C  0864               	movf	??___fladd,w
  6824  132D  07EE               	addwf	___fladd@bexp,f
  6825  132E                     l2356:
  6826  132E  1283               	bcf	3,5	;RP0=0, select bank0
  6827  132F  1303               	bcf	3,6	;RP1=0, select bank0
  6828  1330  086D               	movf	___fladd@aexp,w
  6829  1331  026E               	subwf	___fladd@bexp,w
  6830  1332  1C03               	skipc
  6831  1333  2B35               	goto	u3271
  6832  1334  2B36               	goto	u3270
  6833  1335                     u3271:
  6834  1335  2B0D               	goto	l658
  6835  1336                     u3270:
  6836  1336                     l656:
  6837  1336  1B6C               	btfsc	___fladd@signs,6
  6838  1337  2B39               	goto	u3281
  6839  1338  2B3A               	goto	u3280
  6840  1339                     u3281:
  6841  1339  2B85               	goto	l2382
  6842  133A                     u3280:
  6843  133A                     l2358:
  6844  133A  086E               	movf	___fladd@bexp,w
  6845  133B  1D03               	btfss	3,2
  6846  133C  2B3E               	goto	u3291
  6847  133D  2B3F               	goto	u3290
  6848  133E                     u3291:
  6849  133E  2B48               	goto	l2364
  6850  133F                     u3290:
  6851  133F                     l2360:
  6852  133F  3000               	movlw	0
  6853  1340  00DF               	movwf	?___fladd+3
  6854  1341  3000               	movlw	0
  6855  1342  00DE               	movwf	?___fladd+2
  6856  1343  3000               	movlw	0
  6857  1344  00DD               	movwf	?___fladd+1
  6858  1345  3000               	movlw	0
  6859  1346  00DC               	movwf	?___fladd
  6860  1347  2CB3               	goto	l665
  6861  1348                     l2364:
  6862  1348  0860               	movf	___fladd@a,w
  6863  1349  07DC               	addwf	___fladd@b,f
  6864  134A  0861               	movf	___fladd@a+1,w
  6865  134B  1103               	clrz
  6866  134C  1803               	skipnc
  6867  134D  3E01               	addlw	1
  6868  134E  1903               	skipnz
  6869  134F  2B51               	goto	u3301
  6870  1350  07DD               	addwf	___fladd@b+1,f
  6871  1351                     u3301:
  6872  1351  0862               	movf	___fladd@a+2,w
  6873  1352  1103               	clrz
  6874  1353  1803               	skipnc
  6875  1354  3E01               	addlw	1
  6876  1355  1903               	skipnz
  6877  1356  2B58               	goto	u3302
  6878  1357  07DE               	addwf	___fladd@b+2,f
  6879  1358                     u3302:
  6880  1358  0863               	movf	___fladd@a+3,w
  6881  1359  1103               	clrz
  6882  135A  1803               	skipnc
  6883  135B  3E01               	addlw	1
  6884  135C  1903               	skipnz
  6885  135D  2B5F               	goto	u3303
  6886  135E  07DF               	addwf	___fladd@b+3,f
  6887  135F                     u3303:
  6888  135F                     l2366:
  6889  135F  1C5F               	btfss	___fladd@b+3,0
  6890  1360  2B62               	goto	u3311
  6891  1361  2B63               	goto	u3310
  6892  1362                     u3311:
  6893  1362  2C39               	goto	l2416
  6894  1363                     u3310:
  6895  1363                     l2368:
  6896  1363  1C6F               	btfss	___fladd@grs,0
  6897  1364  2B66               	goto	u3321
  6898  1365  2B67               	goto	u3320
  6899  1366                     u3321:
  6900  1366  2B70               	goto	l2372
  6901  1367                     u3320:
  6902  1367                     l2370:
  6903  1367  086F               	movf	___fladd@grs,w
  6904  1368  00E4               	movwf	??___fladd
  6905  1369  1003               	clrc
  6906  136A  0C64               	rrf	??___fladd,w
  6907  136B  3801               	iorlw	1
  6908  136C  00E5               	movwf	??___fladd+1
  6909  136D  0865               	movf	??___fladd+1,w
  6910  136E  00EF               	movwf	___fladd@grs
  6911  136F  2B72               	goto	l2374
  6912  1370                     l2372:
  6913  1370  1003               	clrc
  6914  1371  0CEF               	rrf	___fladd@grs,f
  6915  1372                     l2374:
  6916  1372  1C5C               	btfss	___fladd@b,0
  6917  1373  2B75               	goto	u3331
  6918  1374  2B76               	goto	u3330
  6919  1375                     u3331:
  6920  1375  2B77               	goto	l2378
  6921  1376                     u3330:
  6922  1376                     l2376:
  6923  1376  17EF               	bsf	___fladd@grs,7
  6924  1377                     l2378:
  6925  1377  3001               	movlw	1
  6926  1378  00E4               	movwf	??___fladd
  6927  1379                     u3345:
  6928  1379  0D5F               	rlf	___fladd@b+3,w
  6929  137A  0CDF               	rrf	___fladd@b+3,f
  6930  137B  0CDE               	rrf	___fladd@b+2,f
  6931  137C  0CDD               	rrf	___fladd@b+1,f
  6932  137D  0CDC               	rrf	___fladd@b,f
  6933  137E  0BE4               	decfsz	??___fladd& (0+127),f
  6934  137F  2B79               	goto	u3345
  6935  1380                     l2380:
  6936  1380  3001               	movlw	1
  6937  1381  00E4               	movwf	??___fladd
  6938  1382  0864               	movf	??___fladd,w
  6939  1383  07EE               	addwf	___fladd@bexp,f
  6940  1384  2C39               	goto	l2416
  6941  1385                     l2382:
  6942  1385  085F               	movf	___fladd@b+3,w
  6943  1386  3A80               	xorlw	128
  6944  1387  00FF               	movwf	btemp+1
  6945  1388  0863               	movf	___fladd@a+3,w
  6946  1389  3A80               	xorlw	128
  6947  138A  027F               	subwf	btemp+1,w
  6948  138B  1D03               	skipz
  6949  138C  2B97               	goto	u3353
  6950  138D  0862               	movf	___fladd@a+2,w
  6951  138E  025E               	subwf	___fladd@b+2,w
  6952  138F  1D03               	skipz
  6953  1390  2B97               	goto	u3353
  6954  1391  0861               	movf	___fladd@a+1,w
  6955  1392  025D               	subwf	___fladd@b+1,w
  6956  1393  1D03               	skipz
  6957  1394  2B97               	goto	u3353
  6958  1395  0860               	movf	___fladd@a,w
  6959  1396  025C               	subwf	___fladd@b,w
  6960  1397                     u3353:
  6961  1397  1803               	skipnc
  6962  1398  2B9A               	goto	u3351
  6963  1399  2B9B               	goto	u3350
  6964  139A                     u3351:
  6965  139A  2BF3               	goto	l2392
  6966  139B                     u3350:
  6967  139B                     l2384:
  6968  139B  30FF               	movlw	255
  6969  139C  00E4               	movwf	??___fladd
  6970  139D  30FF               	movlw	255
  6971  139E  00E5               	movwf	??___fladd+1
  6972  139F  30FF               	movlw	255
  6973  13A0  00E6               	movwf	??___fladd+2
  6974  13A1  30FF               	movlw	255
  6975  13A2  00E7               	movwf	??___fladd+3
  6976  13A3  0860               	movf	___fladd@a,w
  6977  13A4  00E8               	movwf	??___fladd+4
  6978  13A5  0861               	movf	___fladd@a+1,w
  6979  13A6  00E9               	movwf	??___fladd+5
  6980  13A7  0862               	movf	___fladd@a+2,w
  6981  13A8  00EA               	movwf	??___fladd+6
  6982  13A9  0863               	movf	___fladd@a+3,w
  6983  13AA  00EB               	movwf	??___fladd+7
  6984  13AB  085C               	movf	___fladd@b,w
  6985  13AC  02E8               	subwf	??___fladd+4,f
  6986  13AD  085D               	movf	___fladd@b+1,w
  6987  13AE  1C03               	skipc
  6988  13AF  0F5D               	incfsz	___fladd@b+1,w
  6989  13B0  2BB2               	goto	u3361
  6990  13B1  2BB3               	goto	u3362
  6991  13B2                     u3361:
  6992  13B2  02E9               	subwf	??___fladd+5,f
  6993  13B3                     u3362:
  6994  13B3  085E               	movf	___fladd@b+2,w
  6995  13B4  1C03               	skipc
  6996  13B5  0F5E               	incfsz	___fladd@b+2,w
  6997  13B6  2BB8               	goto	u3363
  6998  13B7  2BB9               	goto	u3364
  6999  13B8                     u3363:
  7000  13B8  02EA               	subwf	??___fladd+6,f
  7001  13B9                     u3364:
  7002  13B9  085F               	movf	___fladd@b+3,w
  7003  13BA  1C03               	skipc
  7004  13BB  0F5F               	incfsz	___fladd@b+3,w
  7005  13BC  2BBE               	goto	u3365
  7006  13BD  2BBF               	goto	u3366
  7007  13BE                     u3365:
  7008  13BE  02EB               	subwf	??___fladd+7,f
  7009  13BF                     u3366:
  7010  13BF  0868               	movf	??___fladd+4,w
  7011  13C0  07E4               	addwf	??___fladd,f
  7012  13C1  0869               	movf	??___fladd+5,w
  7013  13C2  1803               	skipnc
  7014  13C3  0F69               	incfsz	??___fladd+5,w
  7015  13C4  2BC6               	goto	u3370
  7016  13C5  2BC7               	goto	u3371
  7017  13C6                     u3370:
  7018  13C6  07E5               	addwf	??___fladd+1,f
  7019  13C7                     u3371:
  7020  13C7  086A               	movf	??___fladd+6,w
  7021  13C8  1803               	skipnc
  7022  13C9  0F6A               	incfsz	??___fladd+6,w
  7023  13CA  2BCC               	goto	u3372
  7024  13CB  2BCD               	goto	u3373
  7025  13CC                     u3372:
  7026  13CC  07E6               	addwf	??___fladd+2,f
  7027  13CD                     u3373:
  7028  13CD  086B               	movf	??___fladd+7,w
  7029  13CE  1803               	skipnc
  7030  13CF  0A6B               	incf	??___fladd+7,w
  7031  13D0  07E7               	addwf	??___fladd+3,f
  7032  13D1  0867               	movf	??___fladd+3,w
  7033  13D2  00DF               	movwf	___fladd@b+3
  7034  13D3  0866               	movf	??___fladd+2,w
  7035  13D4  00DE               	movwf	___fladd@b+2
  7036  13D5  0865               	movf	??___fladd+1,w
  7037  13D6  00DD               	movwf	___fladd@b+1
  7038  13D7  0864               	movf	??___fladd,w
  7039  13D8  00DC               	movwf	___fladd@b
  7040  13D9                     l2386:
  7041  13D9  3080               	movlw	128
  7042  13DA  00E4               	movwf	??___fladd
  7043  13DB  0864               	movf	??___fladd,w
  7044  13DC  06EC               	xorwf	___fladd@signs,f
  7045  13DD  09EF               	comf	___fladd@grs,f
  7046  13DE  0AEF               	incf	___fladd@grs,f
  7047  13DF                     l2388:
  7048  13DF  086F               	movf	___fladd@grs,w
  7049  13E0  1D03               	btfss	3,2
  7050  13E1  2BE3               	goto	u3381
  7051  13E2  2BE4               	goto	u3380
  7052  13E3                     u3381:
  7053  13E3  2C01               	goto	l673
  7054  13E4                     u3380:
  7055  13E4                     l2390:
  7056  13E4  3001               	movlw	1
  7057  13E5  07DC               	addwf	___fladd@b,f
  7058  13E6  3000               	movlw	0
  7059  13E7  1803               	skipnc
  7060  13E8  3001               	movlw	1
  7061  13E9  07DD               	addwf	___fladd@b+1,f
  7062  13EA  3000               	movlw	0
  7063  13EB  1803               	skipnc
  7064  13EC  3001               	movlw	1
  7065  13ED  07DE               	addwf	___fladd@b+2,f
  7066  13EE  3000               	movlw	0
  7067  13EF  1803               	skipnc
  7068  13F0  3001               	movlw	1
  7069  13F1  07DF               	addwf	___fladd@b+3,f
  7070  13F2  2C01               	goto	l673
  7071  13F3                     l2392:
  7072  13F3  0860               	movf	___fladd@a,w
  7073  13F4  02DC               	subwf	___fladd@b,f
  7074  13F5  0861               	movf	___fladd@a+1,w
  7075  13F6  1C03               	skipc
  7076  13F7  0F61               	incfsz	___fladd@a+1,w
  7077  13F8  02DD               	subwf	___fladd@b+1,f
  7078  13F9  0862               	movf	___fladd@a+2,w
  7079  13FA  1C03               	skipc
  7080  13FB  0F62               	incfsz	___fladd@a+2,w
  7081  13FC  02DE               	subwf	___fladd@b+2,f
  7082  13FD  0863               	movf	___fladd@a+3,w
  7083  13FE  1C03               	skipc
  7084  13FF  0F63               	incfsz	___fladd@a+3,w
  7085  1400  02DF               	subwf	___fladd@b+3,f
  7086  1401                     l673:
  7087  1401  085F               	movf	___fladd@b+3,w
  7088  1402  045E               	iorwf	___fladd@b+2,w
  7089  1403  045D               	iorwf	___fladd@b+1,w
  7090  1404  045C               	iorwf	___fladd@b,w
  7091  1405  1D03               	skipz
  7092  1406  2C08               	goto	u3391
  7093  1407  2C09               	goto	u3390
  7094  1408                     u3391:
  7095  1408  2C35               	goto	l2414
  7096  1409                     u3390:
  7097  1409                     l2394:
  7098  1409  086F               	movf	___fladd@grs,w
  7099  140A  1D03               	btfss	3,2
  7100  140B  2C0D               	goto	u3401
  7101  140C  2C0E               	goto	u3400
  7102  140D                     u3401:
  7103  140D  2C35               	goto	l2414
  7104  140E                     u3400:
  7105  140E                     l2396:
  7106  140E  3000               	movlw	0
  7107  140F  00DF               	movwf	?___fladd+3
  7108  1410  3000               	movlw	0
  7109  1411  00DE               	movwf	?___fladd+2
  7110  1412  3000               	movlw	0
  7111  1413  00DD               	movwf	?___fladd+1
  7112  1414  3000               	movlw	0
  7113  1415  00DC               	movwf	?___fladd
  7114  1416  2CB3               	goto	l665
  7115  1417                     l2400:
  7116  1417  3001               	movlw	1
  7117  1418  00E4               	movwf	??___fladd
  7118  1419                     u3415:
  7119  1419  1003               	clrc
  7120  141A  0DDC               	rlf	___fladd@b,f
  7121  141B  0DDD               	rlf	___fladd@b+1,f
  7122  141C  0DDE               	rlf	___fladd@b+2,f
  7123  141D  0DDF               	rlf	___fladd@b+3,f
  7124  141E  0BE4               	decfsz	??___fladd,f
  7125  141F  2C19               	goto	u3415
  7126  1420                     l2402:
  7127  1420  1FEF               	btfss	___fladd@grs,7
  7128  1421  2C23               	goto	u3421
  7129  1422  2C24               	goto	u3420
  7130  1423                     u3421:
  7131  1423  2C25               	goto	l677
  7132  1424                     u3420:
  7133  1424                     l2404:
  7134  1424  145C               	bsf	___fladd@b,0
  7135  1425                     l677:
  7136  1425  1C6F               	btfss	___fladd@grs,0
  7137  1426  2C28               	goto	u3431
  7138  1427  2C29               	goto	u3430
  7139  1428                     u3431:
  7140  1428  2C2C               	goto	l2408
  7141  1429                     u3430:
  7142  1429                     l2406:
  7143  1429  1403               	setc
  7144  142A  0DEF               	rlf	___fladd@grs,f
  7145  142B  2C2E               	goto	l2410
  7146  142C                     l2408:
  7147  142C  1003               	clrc
  7148  142D  0DEF               	rlf	___fladd@grs,f
  7149  142E                     l2410:
  7150  142E  086E               	movf	___fladd@bexp,w
  7151  142F  1903               	btfsc	3,2
  7152  1430  2C32               	goto	u3441
  7153  1431  2C33               	goto	u3440
  7154  1432                     u3441:
  7155  1432  2C35               	goto	l2414
  7156  1433                     u3440:
  7157  1433                     l2412:
  7158  1433  3001               	movlw	1
  7159  1434  02EE               	subwf	___fladd@bexp,f
  7160  1435                     l2414:
  7161  1435  1FDE               	btfss	___fladd@b+2,7
  7162  1436  2C38               	goto	u3451
  7163  1437  2C39               	goto	u3450
  7164  1438                     u3451:
  7165  1438  2C17               	goto	l2400
  7166  1439                     u3450:
  7167  1439                     l2416:
  7168  1439  01ED               	clrf	___fladd@aexp
  7169  143A                     l2418:
  7170  143A  1FEF               	btfss	___fladd@grs,7
  7171  143B  2C3D               	goto	u3461
  7172  143C  2C3E               	goto	u3460
  7173  143D                     u3461:
  7174  143D  2C4C               	goto	l2426
  7175  143E                     u3460:
  7176  143E                     l2420:
  7177  143E  086F               	movf	___fladd@grs,w
  7178  143F  397F               	andlw	127
  7179  1440  1903               	btfsc	3,2
  7180  1441  2C43               	goto	u3471
  7181  1442  2C44               	goto	u3470
  7182  1443                     u3471:
  7183  1443  2C47               	goto	l683
  7184  1444                     u3470:
  7185  1444                     l2422:
  7186  1444  01ED               	clrf	___fladd@aexp
  7187  1445  0AED               	incf	___fladd@aexp,f
  7188  1446  2C4C               	goto	l2426
  7189  1447                     l683:
  7190  1447  1C5C               	btfss	___fladd@b,0
  7191  1448  2C4A               	goto	u3481
  7192  1449  2C4B               	goto	u3480
  7193  144A                     u3481:
  7194  144A  2C4C               	goto	l2426
  7195  144B                     u3480:
  7196  144B  2C44               	goto	l2422
  7197  144C                     l2426:
  7198  144C  086D               	movf	___fladd@aexp,w
  7199  144D  1903               	btfsc	3,2
  7200  144E  2C50               	goto	u3491
  7201  144F  2C51               	goto	u3490
  7202  1450                     u3491:
  7203  1450  2C85               	goto	l686
  7204  1451                     u3490:
  7205  1451                     l2428:
  7206  1451  3001               	movlw	1
  7207  1452  07DC               	addwf	___fladd@b,f
  7208  1453  3000               	movlw	0
  7209  1454  1803               	skipnc
  7210  1455  3001               	movlw	1
  7211  1456  07DD               	addwf	___fladd@b+1,f
  7212  1457  3000               	movlw	0
  7213  1458  1803               	skipnc
  7214  1459  3001               	movlw	1
  7215  145A  07DE               	addwf	___fladd@b+2,f
  7216  145B  3000               	movlw	0
  7217  145C  1803               	skipnc
  7218  145D  3001               	movlw	1
  7219  145E  07DF               	addwf	___fladd@b+3,f
  7220  145F                     l2430:
  7221  145F  1C5F               	btfss	___fladd@b+3,0
  7222  1460  2C62               	goto	u3501
  7223  1461  2C63               	goto	u3500
  7224  1462                     u3501:
  7225  1462  2C85               	goto	l686
  7226  1463                     u3500:
  7227  1463                     l2432:
  7228  1463  085C               	movf	___fladd@b,w
  7229  1464  00E4               	movwf	??___fladd
  7230  1465  085D               	movf	___fladd@b+1,w
  7231  1466  00E5               	movwf	??___fladd+1
  7232  1467  085E               	movf	___fladd@b+2,w
  7233  1468  00E6               	movwf	??___fladd+2
  7234  1469  085F               	movf	___fladd@b+3,w
  7235  146A  00E7               	movwf	??___fladd+3
  7236  146B  3001               	movlw	1
  7237  146C  00E8               	movwf	??___fladd+4
  7238  146D                     u3515:
  7239  146D  0D67               	rlf	??___fladd+3,w
  7240  146E  0CE7               	rrf	??___fladd+3,f
  7241  146F  0CE6               	rrf	??___fladd+2,f
  7242  1470  0CE5               	rrf	??___fladd+1,f
  7243  1471  0CE4               	rrf	??___fladd,f
  7244  1472                     u3510:
  7245  1472  0BE8               	decfsz	??___fladd+4,f
  7246  1473  2C6D               	goto	u3515
  7247  1474  0867               	movf	??___fladd+3,w
  7248  1475  00DF               	movwf	___fladd@b+3
  7249  1476  0866               	movf	??___fladd+2,w
  7250  1477  00DE               	movwf	___fladd@b+2
  7251  1478  0865               	movf	??___fladd+1,w
  7252  1479  00DD               	movwf	___fladd@b+1
  7253  147A  0864               	movf	??___fladd,w
  7254  147B  00DC               	movwf	___fladd@b
  7255  147C  0A6E               	incf	___fladd@bexp,w
  7256  147D  1903               	btfsc	3,2
  7257  147E  2C80               	goto	u3521
  7258  147F  2C81               	goto	u3520
  7259  1480                     u3521:
  7260  1480  2C85               	goto	l686
  7261  1481                     u3520:
  7262  1481                     l2434:
  7263  1481  3001               	movlw	1
  7264  1482  00E4               	movwf	??___fladd
  7265  1483  0864               	movf	??___fladd,w
  7266  1484  07EE               	addwf	___fladd@bexp,f
  7267  1485                     l686:
  7268  1485  0A6E               	incf	___fladd@bexp,w
  7269  1486  1903               	btfsc	3,2
  7270  1487  2C89               	goto	u3531
  7271  1488  2C8A               	goto	u3530
  7272  1489                     u3531:
  7273  1489  2C8F               	goto	l2438
  7274  148A                     u3530:
  7275  148A                     l2436:
  7276  148A  086E               	movf	___fladd@bexp,w
  7277  148B  1D03               	btfss	3,2
  7278  148C  2C8E               	goto	u3541
  7279  148D  2C8F               	goto	u3540
  7280  148E                     u3541:
  7281  148E  2C9D               	goto	l2444
  7282  148F                     u3540:
  7283  148F                     l2438:
  7284  148F  3000               	movlw	0
  7285  1490  00DF               	movwf	___fladd@b+3
  7286  1491  3000               	movlw	0
  7287  1492  00DE               	movwf	___fladd@b+2
  7288  1493  3000               	movlw	0
  7289  1494  00DD               	movwf	___fladd@b+1
  7290  1495  3000               	movlw	0
  7291  1496  00DC               	movwf	___fladd@b
  7292  1497                     l2440:
  7293  1497  086E               	movf	___fladd@bexp,w
  7294  1498  1D03               	btfss	3,2
  7295  1499  2C9B               	goto	u3551
  7296  149A  2C9C               	goto	u3550
  7297  149B                     u3551:
  7298  149B  2C9D               	goto	l2444
  7299  149C                     u3550:
  7300  149C                     l2442:
  7301  149C  01EC               	clrf	___fladd@signs
  7302  149D                     l2444:
  7303  149D  1C6E               	btfss	___fladd@bexp,0
  7304  149E  2CA0               	goto	u3561
  7305  149F  2CA1               	goto	u3560
  7306  14A0                     u3561:
  7307  14A0  2CA3               	goto	l2448
  7308  14A1                     u3560:
  7309  14A1                     l2446:
  7310  14A1  17DE               	bsf	___fladd@b+2,7
  7311  14A2  2CA7               	goto	l694
  7312  14A3                     l2448:
  7313  14A3  307F               	movlw	127
  7314  14A4  00E4               	movwf	??___fladd
  7315  14A5  0864               	movf	??___fladd,w
  7316  14A6  05DE               	andwf	___fladd@b+2,f
  7317  14A7                     l694:
  7318  14A7  086E               	movf	___fladd@bexp,w
  7319  14A8  00E4               	movwf	??___fladd
  7320  14A9  1003               	clrc
  7321  14AA  0C64               	rrf	??___fladd,w
  7322  14AB  00E5               	movwf	??___fladd+1
  7323  14AC  0865               	movf	??___fladd+1,w
  7324  14AD  00DF               	movwf	___fladd@b+3
  7325  14AE                     l2450:
  7326  14AE  1FEC               	btfss	___fladd@signs,7
  7327  14AF  2CB1               	goto	u3571
  7328  14B0  2CB2               	goto	u3570
  7329  14B1                     u3571:
  7330  14B1  2CB3               	goto	l695
  7331  14B2                     u3570:
  7332  14B2                     l2452:
  7333  14B2  17DF               	bsf	___fladd@b+3,7
  7334  14B3                     l695:
  7335  14B3                     l665:
  7336  14B3  0008               	return
  7337  14B4                     __end_of___fladd:
  7338                           
  7339                           	psect	text19
  7340  1002                     __ptext19:	
  7341 ;; *************** function ___flneg *****************
  7342 ;; Defined at:
  7343 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  f1              4    0[BANK0 ] unsigned char 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;		None
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  4    0[BANK0 ] unsigned char 
  7350 ;; Registers used:
  7351 ;;		wreg
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7357 ;;      Params:         0       4       0       0       0
  7358 ;;      Locals:         0       0       0       0       0
  7359 ;;      Temps:          0       0       0       0       0
  7360 ;;      Totals:         0       4       0       0       0
  7361 ;;Total ram usage:        4 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; Hardware stack levels required when called:    1
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_sprintf
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           
  7372                           ;psect for function ___flneg
  7373  1002                     ___flneg:
  7374  1002                     l3760:	
  7375                           ;incstack = 0
  7376                           ; Regs used in ___flneg: [wreg]
  7377                           
  7378  1002  1283               	bcf	3,5	;RP0=0, select bank0
  7379  1003  1303               	bcf	3,6	;RP1=0, select bank0
  7380  1004  0823               	movf	___flneg@f1+3,w
  7381  1005  0422               	iorwf	___flneg@f1+2,w
  7382  1006  0421               	iorwf	___flneg@f1+1,w
  7383  1007  0420               	iorwf	___flneg@f1,w
  7384  1008  1903               	skipnz
  7385  1009  280B               	goto	u6701
  7386  100A  280C               	goto	u6700
  7387  100B                     u6701:
  7388  100B  280E               	goto	l3764
  7389  100C                     u6700:
  7390  100C                     l3762:
  7391  100C  3080               	movlw	128
  7392  100D  06A3               	xorwf	___flneg@f1+3,f
  7393  100E                     l3764:
  7394  100E                     l524:
  7395  100E  0008               	return
  7396  100F                     __end_of___flneg:
  7397                           
  7398                           	psect	text20
  7399  100F                     __ptext20:	
  7400 ;; *************** function ___flge *****************
  7401 ;; Defined at:
  7402 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  ff1             4    0[BANK0 ] unsigned char 
  7405 ;;  ff2             4    4[BANK0 ] unsigned char 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;		None               void
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7417 ;;      Params:         0       8       0       0       0
  7418 ;;      Locals:         0       0       0       0       0
  7419 ;;      Temps:          0       4       0       0       0
  7420 ;;      Totals:         0      12       0       0       0
  7421 ;;Total ram usage:       12 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    1
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_sprintf
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           
  7432                           ;psect for function ___flge
  7433  100F                     ___flge:
  7434  100F                     l3740:	
  7435                           ;incstack = 0
  7436                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7437                           
  7438  100F  3000               	movlw	0
  7439  1010  1283               	bcf	3,5	;RP0=0, select bank0
  7440  1011  1303               	bcf	3,6	;RP1=0, select bank0
  7441  1012  0520               	andwf	___flge@ff1,w
  7442  1013  00A8               	movwf	??___flge
  7443  1014  3000               	movlw	0
  7444  1015  0521               	andwf	___flge@ff1+1,w
  7445  1016  00A9               	movwf	??___flge+1
  7446  1017  3080               	movlw	128
  7447  1018  0522               	andwf	___flge@ff1+2,w
  7448  1019  00AA               	movwf	??___flge+2
  7449  101A  307F               	movlw	127
  7450  101B  0523               	andwf	___flge@ff1+3,w
  7451  101C  00AB               	movwf	??___flge+3
  7452  101D  082B               	movf	??___flge+3,w
  7453  101E  042A               	iorwf	??___flge+2,w
  7454  101F  0429               	iorwf	??___flge+1,w
  7455  1020  0428               	iorwf	??___flge,w
  7456  1021  1D03               	skipz
  7457  1022  2824               	goto	u6631
  7458  1023  2825               	goto	u6630
  7459  1024                     u6631:
  7460  1024  282D               	goto	l516
  7461  1025                     u6630:
  7462  1025                     l3742:
  7463  1025  3000               	movlw	0
  7464  1026  00A3               	movwf	___flge@ff1+3
  7465  1027  3000               	movlw	0
  7466  1028  00A2               	movwf	___flge@ff1+2
  7467  1029  3000               	movlw	0
  7468  102A  00A1               	movwf	___flge@ff1+1
  7469  102B  3000               	movlw	0
  7470  102C  00A0               	movwf	___flge@ff1
  7471  102D                     l516:
  7472  102D  3000               	movlw	0
  7473  102E  0524               	andwf	___flge@ff2,w
  7474  102F  00A8               	movwf	??___flge
  7475  1030  3000               	movlw	0
  7476  1031  0525               	andwf	___flge@ff2+1,w
  7477  1032  00A9               	movwf	??___flge+1
  7478  1033  3080               	movlw	128
  7479  1034  0526               	andwf	___flge@ff2+2,w
  7480  1035  00AA               	movwf	??___flge+2
  7481  1036  307F               	movlw	127
  7482  1037  0527               	andwf	___flge@ff2+3,w
  7483  1038  00AB               	movwf	??___flge+3
  7484  1039  082B               	movf	??___flge+3,w
  7485  103A  042A               	iorwf	??___flge+2,w
  7486  103B  0429               	iorwf	??___flge+1,w
  7487  103C  0428               	iorwf	??___flge,w
  7488  103D  1D03               	skipz
  7489  103E  2840               	goto	u6641
  7490  103F  2841               	goto	u6640
  7491  1040                     u6641:
  7492  1040  2849               	goto	l3746
  7493  1041                     u6640:
  7494  1041                     l3744:
  7495  1041  3000               	movlw	0
  7496  1042  00A7               	movwf	___flge@ff2+3
  7497  1043  3000               	movlw	0
  7498  1044  00A6               	movwf	___flge@ff2+2
  7499  1045  3000               	movlw	0
  7500  1046  00A5               	movwf	___flge@ff2+1
  7501  1047  3000               	movlw	0
  7502  1048  00A4               	movwf	___flge@ff2
  7503  1049                     l3746:
  7504  1049  1FA3               	btfss	___flge@ff1+3,7
  7505  104A  284C               	goto	u6651
  7506  104B  284D               	goto	u6650
  7507  104C                     u6651:
  7508  104C  2871               	goto	l3750
  7509  104D                     u6650:
  7510  104D                     l3748:
  7511  104D  3000               	movlw	0
  7512  104E  00A8               	movwf	??___flge
  7513  104F  3000               	movlw	0
  7514  1050  00A9               	movwf	??___flge+1
  7515  1051  3000               	movlw	0
  7516  1052  00AA               	movwf	??___flge+2
  7517  1053  3080               	movlw	128
  7518  1054  00AB               	movwf	??___flge+3
  7519  1055  0820               	movf	___flge@ff1,w
  7520  1056  02A8               	subwf	??___flge,f
  7521  1057  0821               	movf	___flge@ff1+1,w
  7522  1058  1C03               	skipc
  7523  1059  0F21               	incfsz	___flge@ff1+1,w
  7524  105A  285C               	goto	u6661
  7525  105B  285D               	goto	u6662
  7526  105C                     u6661:
  7527  105C  02A9               	subwf	??___flge+1,f
  7528  105D                     u6662:
  7529  105D  0822               	movf	___flge@ff1+2,w
  7530  105E  1C03               	skipc
  7531  105F  0F22               	incfsz	___flge@ff1+2,w
  7532  1060  2862               	goto	u6663
  7533  1061  2863               	goto	u6664
  7534  1062                     u6663:
  7535  1062  02AA               	subwf	??___flge+2,f
  7536  1063                     u6664:
  7537  1063  0823               	movf	___flge@ff1+3,w
  7538  1064  1C03               	skipc
  7539  1065  0F23               	incfsz	___flge@ff1+3,w
  7540  1066  2868               	goto	u6665
  7541  1067  2869               	goto	u6666
  7542  1068                     u6665:
  7543  1068  02AB               	subwf	??___flge+3,f
  7544  1069                     u6666:
  7545  1069  082B               	movf	??___flge+3,w
  7546  106A  00A3               	movwf	___flge@ff1+3
  7547  106B  082A               	movf	??___flge+2,w
  7548  106C  00A2               	movwf	___flge@ff1+2
  7549  106D  0829               	movf	??___flge+1,w
  7550  106E  00A1               	movwf	___flge@ff1+1
  7551  106F  0828               	movf	??___flge,w
  7552  1070  00A0               	movwf	___flge@ff1
  7553  1071                     l3750:
  7554  1071  1FA7               	btfss	___flge@ff2+3,7
  7555  1072  2874               	goto	u6671
  7556  1073  2875               	goto	u6670
  7557  1074                     u6671:
  7558  1074  2899               	goto	l519
  7559  1075                     u6670:
  7560  1075                     l3752:
  7561  1075  3000               	movlw	0
  7562  1076  00A8               	movwf	??___flge
  7563  1077  3000               	movlw	0
  7564  1078  00A9               	movwf	??___flge+1
  7565  1079  3000               	movlw	0
  7566  107A  00AA               	movwf	??___flge+2
  7567  107B  3080               	movlw	128
  7568  107C  00AB               	movwf	??___flge+3
  7569  107D  0824               	movf	___flge@ff2,w
  7570  107E  02A8               	subwf	??___flge,f
  7571  107F  0825               	movf	___flge@ff2+1,w
  7572  1080  1C03               	skipc
  7573  1081  0F25               	incfsz	___flge@ff2+1,w
  7574  1082  2884               	goto	u6681
  7575  1083  2885               	goto	u6682
  7576  1084                     u6681:
  7577  1084  02A9               	subwf	??___flge+1,f
  7578  1085                     u6682:
  7579  1085  0826               	movf	___flge@ff2+2,w
  7580  1086  1C03               	skipc
  7581  1087  0F26               	incfsz	___flge@ff2+2,w
  7582  1088  288A               	goto	u6683
  7583  1089  288B               	goto	u6684
  7584  108A                     u6683:
  7585  108A  02AA               	subwf	??___flge+2,f
  7586  108B                     u6684:
  7587  108B  0827               	movf	___flge@ff2+3,w
  7588  108C  1C03               	skipc
  7589  108D  0F27               	incfsz	___flge@ff2+3,w
  7590  108E  2890               	goto	u6685
  7591  108F  2891               	goto	u6686
  7592  1090                     u6685:
  7593  1090  02AB               	subwf	??___flge+3,f
  7594  1091                     u6686:
  7595  1091  082B               	movf	??___flge+3,w
  7596  1092  00A7               	movwf	___flge@ff2+3
  7597  1093  082A               	movf	??___flge+2,w
  7598  1094  00A6               	movwf	___flge@ff2+2
  7599  1095  0829               	movf	??___flge+1,w
  7600  1096  00A5               	movwf	___flge@ff2+1
  7601  1097  0828               	movf	??___flge,w
  7602  1098  00A4               	movwf	___flge@ff2
  7603  1099                     l519:
  7604  1099  3080               	movlw	128
  7605  109A  06A3               	xorwf	___flge@ff1+3,f
  7606  109B  3080               	movlw	128
  7607  109C  06A7               	xorwf	___flge@ff2+3,f
  7608  109D  0827               	movf	___flge@ff2+3,w
  7609  109E  0223               	subwf	___flge@ff1+3,w
  7610  109F  1D03               	skipz
  7611  10A0  28AB               	goto	u6695
  7612  10A1  0826               	movf	___flge@ff2+2,w
  7613  10A2  0222               	subwf	___flge@ff1+2,w
  7614  10A3  1D03               	skipz
  7615  10A4  28AB               	goto	u6695
  7616  10A5  0825               	movf	___flge@ff2+1,w
  7617  10A6  0221               	subwf	___flge@ff1+1,w
  7618  10A7  1D03               	skipz
  7619  10A8  28AB               	goto	u6695
  7620  10A9  0824               	movf	___flge@ff2,w
  7621  10AA  0220               	subwf	___flge@ff1,w
  7622  10AB                     u6695:
  7623  10AB  1803               	skipnc
  7624  10AC  28AE               	goto	u6691
  7625  10AD  28AF               	goto	u6690
  7626  10AE                     u6691:
  7627  10AE  28B1               	goto	l3756
  7628  10AF                     u6690:
  7629  10AF                     l3754:
  7630  10AF  1003               	clrc
  7631  10B0  28B2               	goto	l520
  7632  10B1                     l3756:
  7633  10B1  1403               	setc
  7634  10B2                     l520:
  7635  10B2  0008               	return
  7636  10B3                     __end_of___flge:
  7637                           
  7638                           	psect	text21
  7639  1D7E                     __ptext21:	
  7640 ;; *************** function ___fleq *****************
  7641 ;; Defined at:
  7642 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;  ff1             4    0[BANK0 ] unsigned char 
  7645 ;;  ff2             4    4[BANK0 ] unsigned char 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;		None               void
  7650 ;; Registers used:
  7651 ;;		wreg, status,2, status,0
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7657 ;;      Params:         0       8       0       0       0
  7658 ;;      Locals:         0       0       0       0       0
  7659 ;;      Temps:          0       4       0       0       0
  7660 ;;      Totals:         0      12       0       0       0
  7661 ;;Total ram usage:       12 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:    1
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_sprintf
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           
  7672                           ;psect for function ___fleq
  7673  1D7E                     ___fleq:
  7674  1D7E                     l3728:	
  7675                           ;incstack = 0
  7676                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7677                           
  7678  1D7E  3000               	movlw	0
  7679  1D7F  1283               	bcf	3,5	;RP0=0, select bank0
  7680  1D80  1303               	bcf	3,6	;RP1=0, select bank0
  7681  1D81  0520               	andwf	___fleq@ff1,w
  7682  1D82  00A8               	movwf	??___fleq
  7683  1D83  3000               	movlw	0
  7684  1D84  0521               	andwf	___fleq@ff1+1,w
  7685  1D85  00A9               	movwf	??___fleq+1
  7686  1D86  3080               	movlw	128
  7687  1D87  0522               	andwf	___fleq@ff1+2,w
  7688  1D88  00AA               	movwf	??___fleq+2
  7689  1D89  307F               	movlw	127
  7690  1D8A  0523               	andwf	___fleq@ff1+3,w
  7691  1D8B  00AB               	movwf	??___fleq+3
  7692  1D8C  082B               	movf	??___fleq+3,w
  7693  1D8D  042A               	iorwf	??___fleq+2,w
  7694  1D8E  0429               	iorwf	??___fleq+1,w
  7695  1D8F  0428               	iorwf	??___fleq,w
  7696  1D90  1D03               	skipz
  7697  1D91  2D93               	goto	u6601
  7698  1D92  2D94               	goto	u6600
  7699  1D93                     u6601:
  7700  1D93  2D9C               	goto	l511
  7701  1D94                     u6600:
  7702  1D94                     l3730:
  7703  1D94  3000               	movlw	0
  7704  1D95  00A3               	movwf	___fleq@ff1+3
  7705  1D96  3000               	movlw	0
  7706  1D97  00A2               	movwf	___fleq@ff1+2
  7707  1D98  3000               	movlw	0
  7708  1D99  00A1               	movwf	___fleq@ff1+1
  7709  1D9A  3000               	movlw	0
  7710  1D9B  00A0               	movwf	___fleq@ff1
  7711  1D9C                     l511:
  7712  1D9C  3000               	movlw	0
  7713  1D9D  0524               	andwf	___fleq@ff2,w
  7714  1D9E  00A8               	movwf	??___fleq
  7715  1D9F  3000               	movlw	0
  7716  1DA0  0525               	andwf	___fleq@ff2+1,w
  7717  1DA1  00A9               	movwf	??___fleq+1
  7718  1DA2  3080               	movlw	128
  7719  1DA3  0526               	andwf	___fleq@ff2+2,w
  7720  1DA4  00AA               	movwf	??___fleq+2
  7721  1DA5  307F               	movlw	127
  7722  1DA6  0527               	andwf	___fleq@ff2+3,w
  7723  1DA7  00AB               	movwf	??___fleq+3
  7724  1DA8  082B               	movf	??___fleq+3,w
  7725  1DA9  042A               	iorwf	??___fleq+2,w
  7726  1DAA  0429               	iorwf	??___fleq+1,w
  7727  1DAB  0428               	iorwf	??___fleq,w
  7728  1DAC  1D03               	skipz
  7729  1DAD  2DAF               	goto	u6611
  7730  1DAE  2DB0               	goto	u6610
  7731  1DAF                     u6611:
  7732  1DAF  2DB8               	goto	l512
  7733  1DB0                     u6610:
  7734  1DB0                     l3732:
  7735  1DB0  3000               	movlw	0
  7736  1DB1  00A7               	movwf	___fleq@ff2+3
  7737  1DB2  3000               	movlw	0
  7738  1DB3  00A6               	movwf	___fleq@ff2+2
  7739  1DB4  3000               	movlw	0
  7740  1DB5  00A5               	movwf	___fleq@ff2+1
  7741  1DB6  3000               	movlw	0
  7742  1DB7  00A4               	movwf	___fleq@ff2
  7743  1DB8                     l512:
  7744  1DB8  0827               	movf	___fleq@ff2+3,w
  7745  1DB9  0623               	xorwf	___fleq@ff1+3,w
  7746  1DBA  1D03               	skipz
  7747  1DBB  2DC6               	goto	u6625
  7748  1DBC  0826               	movf	___fleq@ff2+2,w
  7749  1DBD  0622               	xorwf	___fleq@ff1+2,w
  7750  1DBE  1D03               	skipz
  7751  1DBF  2DC6               	goto	u6625
  7752  1DC0  0825               	movf	___fleq@ff2+1,w
  7753  1DC1  0621               	xorwf	___fleq@ff1+1,w
  7754  1DC2  1D03               	skipz
  7755  1DC3  2DC6               	goto	u6625
  7756  1DC4  0824               	movf	___fleq@ff2,w
  7757  1DC5  0620               	xorwf	___fleq@ff1,w
  7758  1DC6                     u6625:
  7759  1DC6  1903               	skipnz
  7760  1DC7  2DC9               	goto	u6621
  7761  1DC8  2DCA               	goto	u6620
  7762  1DC9                     u6621:
  7763  1DC9  2DCC               	goto	l3736
  7764  1DCA                     u6620:
  7765  1DCA                     l3734:
  7766  1DCA  1003               	clrc
  7767  1DCB  2DCD               	goto	l513
  7768  1DCC                     l3736:
  7769  1DCC  1403               	setc
  7770  1DCD                     l513:
  7771  1DCD  0008               	return
  7772  1DCE                     __end_of___fleq:
  7773                           
  7774                           	psect	text22
  7775  1C24                     __ptext22:	
  7776 ;; *************** function _send_crct *****************
  7777 ;; Defined at:
  7778 ;;		line 168 in file "main5a.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  st              1    wreg     PTR unsigned char 
  7781 ;;		 -> f1(10), 
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;  st              1    2[BANK0 ] PTR unsigned char 
  7784 ;;		 -> f1(10), 
  7785 ;;  i               2    0[BANK0 ] int 
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  1    wreg      void 
  7788 ;; Registers used:
  7789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7795 ;;      Params:         0       0       0       0       0
  7796 ;;      Locals:         0       3       0       0       0
  7797 ;;      Temps:          1       0       0       0       0
  7798 ;;      Totals:         1       3       0       0       0
  7799 ;;Total ram usage:        4 bytes
  7800 ;; Hardware stack levels used:    1
  7801 ;; Hardware stack levels required when called:    2
  7802 ;; This function calls:
  7803 ;;		_send_char
  7804 ;; This function is called by:
  7805 ;;		_main
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           
  7810                           ;psect for function _send_crct
  7811  1C24                     _send_crct:
  7812                           
  7813                           ;incstack = 0
  7814                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7815                           ;send_crct@st stored from wreg
  7816  1C24  1283               	bcf	3,5	;RP0=0, select bank0
  7817  1C25  1303               	bcf	3,6	;RP1=0, select bank0
  7818  1C26  00A2               	movwf	send_crct@st
  7819  1C27                     l3264:
  7820                           
  7821                           ;main5a.c: 169:     int i = 0;
  7822  1C27  01A0               	clrf	send_crct@i
  7823  1C28  01A1               	clrf	send_crct@i+1
  7824                           
  7825                           ;main5a.c: 170:     while (st[i] != 0){
  7826  1C29  2C3D               	goto	l3270
  7827  1C2A                     l3266:
  7828                           
  7829                           ;main5a.c: 171:         send_char(st[i]);
  7830  1C2A  0820               	movf	send_crct@i,w
  7831  1C2B  0722               	addwf	send_crct@st,w
  7832  1C2C  00F6               	movwf	??_send_crct
  7833  1C2D  0876               	movf	??_send_crct,w
  7834  1C2E  0084               	movwf	4
  7835  1C2F  0800               	movf	0,w
  7836  1C30  120A  118A  27F4  160A  158A  	fcall	_send_char
  7837  1C35                     l3268:
  7838                           
  7839                           ;main5a.c: 172:         i++;
  7840  1C35  3001               	movlw	1
  7841  1C36  1283               	bcf	3,5	;RP0=0, select bank0
  7842  1C37  1303               	bcf	3,6	;RP1=0, select bank0
  7843  1C38  07A0               	addwf	send_crct@i,f
  7844  1C39  1803               	skipnc
  7845  1C3A  0AA1               	incf	send_crct@i+1,f
  7846  1C3B  3000               	movlw	0
  7847  1C3C  07A1               	addwf	send_crct@i+1,f
  7848  1C3D                     l3270:
  7849                           
  7850                           ;main5a.c: 170:     while (st[i] != 0){
  7851  1C3D  0820               	movf	send_crct@i,w
  7852  1C3E  0722               	addwf	send_crct@st,w
  7853  1C3F  00F6               	movwf	??_send_crct
  7854  1C40  0876               	movf	??_send_crct,w
  7855  1C41  0084               	movwf	4
  7856  1C42  1383               	bcf	3,7	;select IRP bank0
  7857  1C43  0800               	movf	0,w
  7858  1C44  1D03               	btfss	3,2
  7859  1C45  2C47               	goto	u5481
  7860  1C46  2C48               	goto	u5480
  7861  1C47                     u5481:
  7862  1C47  2C2A               	goto	l3266
  7863  1C48                     u5480:
  7864  1C48                     l120:
  7865  1C48  0008               	return
  7866  1C49                     __end_of_send_crct:
  7867                           
  7868                           	psect	text23
  7869  07F4                     __ptext23:	
  7870 ;; *************** function _send_char *****************
  7871 ;; Defined at:
  7872 ;;		line 175 in file "main5a.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  dato            1    wreg     unsigned char 
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;  dato            1    5[COMMON] unsigned char 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  1    wreg      void 
  7879 ;; Registers used:
  7880 ;;		wreg
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7886 ;;      Params:         0       0       0       0       0
  7887 ;;      Locals:         1       0       0       0       0
  7888 ;;      Temps:          0       0       0       0       0
  7889 ;;      Totals:         1       0       0       0       0
  7890 ;;Total ram usage:        1 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; Hardware stack levels required when called:    1
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_send_crct
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           
  7901                           ;psect for function _send_char
  7902  07F4                     _send_char:
  7903                           
  7904                           ;incstack = 0
  7905                           ; Regs used in _send_char: [wreg]
  7906                           ;send_char@dato stored from wreg
  7907  07F4  00F5               	movwf	send_char@dato
  7908  07F5                     l2594:
  7909  07F5                     l123:	
  7910                           ;main5a.c: 176:     while(!TXIF);
  7911                           
  7912  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  7913  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  7914  07F7  1E0C               	btfss	12,4	;volatile
  7915  07F8  2FFA               	goto	u3951
  7916  07F9  2FFB               	goto	u3950
  7917  07FA                     u3951:
  7918  07FA  2FF5               	goto	l123
  7919  07FB                     u3950:
  7920  07FB                     l2596:
  7921                           
  7922                           ;main5a.c: 177:     TXREG = dato;
  7923  07FB  0875               	movf	send_char@dato,w
  7924  07FC  0099               	movwf	25	;volatile
  7925  07FD                     l126:
  7926  07FD  0008               	return
  7927  07FE                     __end_of_send_char:
  7928                           
  7929                           	psect	text24
  7930  1C70                     __ptext24:	
  7931 ;; *************** function _conv *****************
  7932 ;; Defined at:
  7933 ;;		line 179 in file "main5a.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  aa              1    wreg     unsigned char 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;  aa              1   26[BANK0 ] unsigned char 
  7938 ;;  result          4   22[BANK0 ] float 
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  4   14[BANK0 ] float 
  7941 ;; Registers used:
  7942 ;;		wreg, status,2, status,0, pclath, cstack
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7948 ;;      Params:         0       4       0       0       0
  7949 ;;      Locals:         0       5       0       0       0
  7950 ;;      Temps:          0       4       0       0       0
  7951 ;;      Totals:         0      13       0       0       0
  7952 ;;Total ram usage:       13 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; Hardware stack levels required when called:    2
  7955 ;; This function calls:
  7956 ;;		___xxtofl
  7957 ;; This function is called by:
  7958 ;;		_main
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           
  7963                           ;psect for function _conv
  7964  1C70                     _conv:
  7965                           
  7966                           ;incstack = 0
  7967                           ; Regs used in _conv: [wreg+status,2+status,0+pclath+cstack]
  7968                           ;conv@aa stored from wreg
  7969  1C70  1283               	bcf	3,5	;RP0=0, select bank0
  7970  1C71  1303               	bcf	3,6	;RP1=0, select bank0
  7971  1C72  00BA               	movwf	conv@aa
  7972  1C73                     l3812:
  7973                           
  7974                           ;main5a.c: 180:     float result;;main5a.c: 181:     result = aa*1;
  7975  1C73  083A               	movf	conv@aa,w
  7976  1C74  00B2               	movwf	??_conv
  7977  1C75  01B3               	clrf	??_conv+1
  7978  1C76  01B4               	clrf	??_conv+2
  7979  1C77  01B5               	clrf	??_conv+3
  7980  1C78  0835               	movf	??_conv+3,w
  7981  1C79  00A3               	movwf	___xxtofl@val+3
  7982  1C7A  0834               	movf	??_conv+2,w
  7983  1C7B  00A2               	movwf	___xxtofl@val+2
  7984  1C7C  0833               	movf	??_conv+1,w
  7985  1C7D  00A1               	movwf	___xxtofl@val+1
  7986  1C7E  0832               	movf	??_conv,w
  7987  1C7F  00A0               	movwf	___xxtofl@val
  7988  1C80  3001               	movlw	1
  7989  1C81  160A  118A  20B3  160A  158A  	fcall	___xxtofl
  7990  1C86  1283               	bcf	3,5	;RP0=0, select bank0
  7991  1C87  1303               	bcf	3,6	;RP1=0, select bank0
  7992  1C88  0823               	movf	?___xxtofl+3,w
  7993  1C89  00B9               	movwf	conv@result+3
  7994  1C8A  0822               	movf	?___xxtofl+2,w
  7995  1C8B  00B8               	movwf	conv@result+2
  7996  1C8C  0821               	movf	?___xxtofl+1,w
  7997  1C8D  00B7               	movwf	conv@result+1
  7998  1C8E  0820               	movf	?___xxtofl,w
  7999  1C8F  00B6               	movwf	conv@result
  8000  1C90                     l3814:
  8001                           
  8002                           ;main5a.c: 182:     return result;
  8003  1C90  0839               	movf	conv@result+3,w
  8004  1C91  00B1               	movwf	?_conv+3
  8005  1C92  0838               	movf	conv@result+2,w
  8006  1C93  00B0               	movwf	?_conv+2
  8007  1C94  0837               	movf	conv@result+1,w
  8008  1C95  00AF               	movwf	?_conv+1
  8009  1C96  0836               	movf	conv@result,w
  8010  1C97  00AE               	movwf	?_conv
  8011  1C98                     l129:
  8012  1C98  0008               	return
  8013  1C99                     __end_of_conv:
  8014                           
  8015                           	psect	text25
  8016  10B3                     __ptext25:	
  8017 ;; *************** function ___xxtofl *****************
  8018 ;; Defined at:
  8019 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  sign            1    wreg     unsigned char 
  8022 ;;  val             4    0[BANK0 ] long 
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;  sign            1    8[BANK0 ] unsigned char 
  8025 ;;  arg             4   10[BANK0 ] unsigned long 
  8026 ;;  exp             1    9[BANK0 ] unsigned char 
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  4    0[BANK0 ] unsigned char 
  8029 ;; Registers used:
  8030 ;;		wreg, status,2, status,0
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8036 ;;      Params:         0       4       0       0       0
  8037 ;;      Locals:         0       6       0       0       0
  8038 ;;      Temps:          0       4       0       0       0
  8039 ;;      Totals:         0      14       0       0       0
  8040 ;;Total ram usage:       14 bytes
  8041 ;; Hardware stack levels used:    1
  8042 ;; Hardware stack levels required when called:    1
  8043 ;; This function calls:
  8044 ;;		Nothing
  8045 ;; This function is called by:
  8046 ;;		_conv
  8047 ;;		_sprintf
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           
  8052                           ;psect for function ___xxtofl
  8053  10B3                     ___xxtofl:
  8054                           
  8055                           ;incstack = 0
  8056                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8057                           ;___xxtofl@sign stored from wreg
  8058  10B3  1283               	bcf	3,5	;RP0=0, select bank0
  8059  10B4  1303               	bcf	3,6	;RP1=0, select bank0
  8060  10B5  00A8               	movwf	___xxtofl@sign
  8061  10B6                     l3768:
  8062  10B6  0828               	movf	___xxtofl@sign,w
  8063  10B7  1903               	btfsc	3,2
  8064  10B8  28BA               	goto	u6711
  8065  10B9  28BB               	goto	u6710
  8066  10BA                     u6711:
  8067  10BA  28CF               	goto	l3774
  8068  10BB                     u6710:
  8069  10BB                     l3770:
  8070  10BB  1FA3               	btfss	___xxtofl@val+3,7
  8071  10BC  28BE               	goto	u6721
  8072  10BD  28BF               	goto	u6720
  8073  10BE                     u6721:
  8074  10BE  28CF               	goto	l3774
  8075  10BF                     u6720:
  8076  10BF                     l3772:
  8077  10BF  0920               	comf	___xxtofl@val,w
  8078  10C0  00AA               	movwf	___xxtofl@arg
  8079  10C1  0921               	comf	___xxtofl@val+1,w
  8080  10C2  00AB               	movwf	___xxtofl@arg+1
  8081  10C3  0922               	comf	___xxtofl@val+2,w
  8082  10C4  00AC               	movwf	___xxtofl@arg+2
  8083  10C5  0923               	comf	___xxtofl@val+3,w
  8084  10C6  00AD               	movwf	___xxtofl@arg+3
  8085  10C7  0AAA               	incf	___xxtofl@arg,f
  8086  10C8  1903               	skipnz
  8087  10C9  0AAB               	incf	___xxtofl@arg+1,f
  8088  10CA  1903               	skipnz
  8089  10CB  0AAC               	incf	___xxtofl@arg+2,f
  8090  10CC  1903               	skipnz
  8091  10CD  0AAD               	incf	___xxtofl@arg+3,f
  8092  10CE  28D7               	goto	l792
  8093  10CF                     l3774:
  8094  10CF  0823               	movf	___xxtofl@val+3,w
  8095  10D0  00AD               	movwf	___xxtofl@arg+3
  8096  10D1  0822               	movf	___xxtofl@val+2,w
  8097  10D2  00AC               	movwf	___xxtofl@arg+2
  8098  10D3  0821               	movf	___xxtofl@val+1,w
  8099  10D4  00AB               	movwf	___xxtofl@arg+1
  8100  10D5  0820               	movf	___xxtofl@val,w
  8101  10D6  00AA               	movwf	___xxtofl@arg
  8102  10D7                     l792:
  8103  10D7  0823               	movf	___xxtofl@val+3,w
  8104  10D8  0422               	iorwf	___xxtofl@val+2,w
  8105  10D9  0421               	iorwf	___xxtofl@val+1,w
  8106  10DA  0420               	iorwf	___xxtofl@val,w
  8107  10DB  1D03               	skipz
  8108  10DC  28DE               	goto	u6731
  8109  10DD  28DF               	goto	u6730
  8110  10DE                     u6731:
  8111  10DE  28E8               	goto	l3780
  8112  10DF                     u6730:
  8113  10DF                     l3776:
  8114  10DF  3000               	movlw	0
  8115  10E0  00A3               	movwf	?___xxtofl+3
  8116  10E1  3000               	movlw	0
  8117  10E2  00A2               	movwf	?___xxtofl+2
  8118  10E3  3000               	movlw	0
  8119  10E4  00A1               	movwf	?___xxtofl+1
  8120  10E5  3000               	movlw	0
  8121  10E6  00A0               	movwf	?___xxtofl
  8122  10E7  296E               	goto	l794
  8123  10E8                     l3780:
  8124  10E8  3096               	movlw	150
  8125  10E9  00A4               	movwf	??___xxtofl
  8126  10EA  0824               	movf	??___xxtofl,w
  8127  10EB  00A9               	movwf	___xxtofl@exp
  8128  10EC  28FA               	goto	l3784
  8129  10ED                     l3782:
  8130  10ED  3001               	movlw	1
  8131  10EE  00A4               	movwf	??___xxtofl
  8132  10EF  0824               	movf	??___xxtofl,w
  8133  10F0  07A9               	addwf	___xxtofl@exp,f
  8134  10F1  3001               	movlw	1
  8135  10F2                     u6745:
  8136  10F2  1003               	clrc
  8137  10F3  0CAD               	rrf	___xxtofl@arg+3,f
  8138  10F4  0CAC               	rrf	___xxtofl@arg+2,f
  8139  10F5  0CAB               	rrf	___xxtofl@arg+1,f
  8140  10F6  0CAA               	rrf	___xxtofl@arg,f
  8141  10F7  3EFF               	addlw	-1
  8142  10F8  1D03               	skipz
  8143  10F9  28F2               	goto	u6745
  8144  10FA                     l3784:
  8145  10FA  30FE               	movlw	254
  8146  10FB  052D               	andwf	___xxtofl@arg+3,w
  8147  10FC  1D03               	btfss	3,2
  8148  10FD  28FF               	goto	u6751
  8149  10FE  2900               	goto	u6750
  8150  10FF                     u6751:
  8151  10FF  28ED               	goto	l3782
  8152  1100                     u6750:
  8153  1100  291C               	goto	l798
  8154  1101                     l3786:
  8155  1101  3001               	movlw	1
  8156  1102  00A4               	movwf	??___xxtofl
  8157  1103  0824               	movf	??___xxtofl,w
  8158  1104  07A9               	addwf	___xxtofl@exp,f
  8159  1105                     l3788:
  8160  1105  3001               	movlw	1
  8161  1106  07AA               	addwf	___xxtofl@arg,f
  8162  1107  3000               	movlw	0
  8163  1108  1803               	skipnc
  8164  1109  3001               	movlw	1
  8165  110A  07AB               	addwf	___xxtofl@arg+1,f
  8166  110B  3000               	movlw	0
  8167  110C  1803               	skipnc
  8168  110D  3001               	movlw	1
  8169  110E  07AC               	addwf	___xxtofl@arg+2,f
  8170  110F  3000               	movlw	0
  8171  1110  1803               	skipnc
  8172  1111  3001               	movlw	1
  8173  1112  07AD               	addwf	___xxtofl@arg+3,f
  8174  1113                     l3790:
  8175  1113  3001               	movlw	1
  8176  1114                     u6765:
  8177  1114  1003               	clrc
  8178  1115  0CAD               	rrf	___xxtofl@arg+3,f
  8179  1116  0CAC               	rrf	___xxtofl@arg+2,f
  8180  1117  0CAB               	rrf	___xxtofl@arg+1,f
  8181  1118  0CAA               	rrf	___xxtofl@arg,f
  8182  1119  3EFF               	addlw	-1
  8183  111A  1D03               	skipz
  8184  111B  2914               	goto	u6765
  8185  111C                     l798:
  8186  111C  30FF               	movlw	255
  8187  111D  052D               	andwf	___xxtofl@arg+3,w
  8188  111E  1D03               	btfss	3,2
  8189  111F  2921               	goto	u6771
  8190  1120  2922               	goto	u6770
  8191  1121                     u6771:
  8192  1121  2901               	goto	l3786
  8193  1122                     u6770:
  8194  1122  292E               	goto	l3794
  8195  1123                     l3792:
  8196  1123  3001               	movlw	1
  8197  1124  02A9               	subwf	___xxtofl@exp,f
  8198  1125  3001               	movlw	1
  8199  1126  00A4               	movwf	??___xxtofl
  8200  1127                     u6785:
  8201  1127  1003               	clrc
  8202  1128  0DAA               	rlf	___xxtofl@arg,f
  8203  1129  0DAB               	rlf	___xxtofl@arg+1,f
  8204  112A  0DAC               	rlf	___xxtofl@arg+2,f
  8205  112B  0DAD               	rlf	___xxtofl@arg+3,f
  8206  112C  0BA4               	decfsz	??___xxtofl,f
  8207  112D  2927               	goto	u6785
  8208  112E                     l3794:
  8209  112E  1BAC               	btfsc	___xxtofl@arg+2,7
  8210  112F  2931               	goto	u6791
  8211  1130  2932               	goto	u6790
  8212  1131                     u6791:
  8213  1131  2938               	goto	l805
  8214  1132                     u6790:
  8215  1132                     l3796:
  8216  1132  3002               	movlw	2
  8217  1133  0229               	subwf	___xxtofl@exp,w
  8218  1134  1803               	skipnc
  8219  1135  2937               	goto	u6801
  8220  1136  2938               	goto	u6800
  8221  1137                     u6801:
  8222  1137  2923               	goto	l3792
  8223  1138                     u6800:
  8224  1138                     l805:
  8225  1138  1829               	btfsc	___xxtofl@exp,0
  8226  1139  293B               	goto	u6811
  8227  113A  293C               	goto	u6810
  8228  113B                     u6811:
  8229  113B  2944               	goto	l806
  8230  113C                     u6810:
  8231  113C                     l3798:
  8232  113C  30FF               	movlw	255
  8233  113D  05AA               	andwf	___xxtofl@arg,f
  8234  113E  30FF               	movlw	255
  8235  113F  05AB               	andwf	___xxtofl@arg+1,f
  8236  1140  307F               	movlw	127
  8237  1141  05AC               	andwf	___xxtofl@arg+2,f
  8238  1142  30FF               	movlw	255
  8239  1143  05AD               	andwf	___xxtofl@arg+3,f
  8240  1144                     l806:
  8241  1144  1003               	clrc
  8242  1145  0CA9               	rrf	___xxtofl@exp,f
  8243  1146                     l3800:
  8244  1146  0829               	movf	___xxtofl@exp,w
  8245  1147  00A4               	movwf	??___xxtofl
  8246  1148  01A5               	clrf	??___xxtofl+1
  8247  1149  01A6               	clrf	??___xxtofl+2
  8248  114A  01A7               	clrf	??___xxtofl+3
  8249  114B  3018               	movlw	24
  8250  114C                     u6825:
  8251  114C  1003               	clrc
  8252  114D  0DA4               	rlf	??___xxtofl,f
  8253  114E  0DA5               	rlf	??___xxtofl+1,f
  8254  114F  0DA6               	rlf	??___xxtofl+2,f
  8255  1150  0DA7               	rlf	??___xxtofl+3,f
  8256  1151                     u6820:
  8257  1151  3EFF               	addlw	-1
  8258  1152  1D03               	skipz
  8259  1153  294C               	goto	u6825
  8260  1154  0824               	movf	??___xxtofl,w
  8261  1155  04AA               	iorwf	___xxtofl@arg,f
  8262  1156  0825               	movf	??___xxtofl+1,w
  8263  1157  04AB               	iorwf	___xxtofl@arg+1,f
  8264  1158  0826               	movf	??___xxtofl+2,w
  8265  1159  04AC               	iorwf	___xxtofl@arg+2,f
  8266  115A  0827               	movf	??___xxtofl+3,w
  8267  115B  04AD               	iorwf	___xxtofl@arg+3,f
  8268  115C                     l3802:
  8269  115C  0828               	movf	___xxtofl@sign,w
  8270  115D  1903               	btfsc	3,2
  8271  115E  2960               	goto	u6831
  8272  115F  2961               	goto	u6830
  8273  1160                     u6831:
  8274  1160  2966               	goto	l3808
  8275  1161                     u6830:
  8276  1161                     l3804:
  8277  1161  1FA3               	btfss	___xxtofl@val+3,7
  8278  1162  2964               	goto	u6841
  8279  1163  2965               	goto	u6840
  8280  1164                     u6841:
  8281  1164  2966               	goto	l3808
  8282  1165                     u6840:
  8283  1165                     l3806:
  8284  1165  17AD               	bsf	___xxtofl@arg+3,7
  8285  1166                     l3808:
  8286  1166  082D               	movf	___xxtofl@arg+3,w
  8287  1167  00A3               	movwf	?___xxtofl+3
  8288  1168  082C               	movf	___xxtofl@arg+2,w
  8289  1169  00A2               	movwf	?___xxtofl+2
  8290  116A  082B               	movf	___xxtofl@arg+1,w
  8291  116B  00A1               	movwf	?___xxtofl+1
  8292  116C  082A               	movf	___xxtofl@arg,w
  8293  116D  00A0               	movwf	?___xxtofl
  8294  116E                     l794:
  8295  116E  0008               	return
  8296  116F                     __end_of___xxtofl:
  8297                           
  8298                           	psect	text26
  8299  07DF                     __ptext26:	
  8300 ;; *************** function _cfg_usart *****************
  8301 ;; Defined at:
  8302 ;;		line 134 in file "main5a.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;		None
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;		None
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  1    wreg      void 
  8309 ;; Registers used:
  8310 ;;		wreg, status,2
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8316 ;;      Params:         0       0       0       0       0
  8317 ;;      Locals:         0       0       0       0       0
  8318 ;;      Temps:          0       0       0       0       0
  8319 ;;      Totals:         0       0       0       0       0
  8320 ;;Total ram usage:        0 bytes
  8321 ;; Hardware stack levels used:    1
  8322 ;; Hardware stack levels required when called:    1
  8323 ;; This function calls:
  8324 ;;		Nothing
  8325 ;; This function is called by:
  8326 ;;		_main
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           
  8331                           ;psect for function _cfg_usart
  8332  07DF                     _cfg_usart:
  8333  07DF                     l2978:	
  8334                           ;incstack = 0
  8335                           ; Regs used in _cfg_usart: [wreg+status,2]
  8336                           
  8337                           
  8338                           ;main5a.c: 136:     TXSTAbits.SYNC = 0;
  8339  07DF  1683               	bsf	3,5	;RP0=1, select bank1
  8340  07E0  1303               	bcf	3,6	;RP1=0, select bank1
  8341  07E1  1218               	bcf	24,4	;volatile
  8342                           
  8343                           ;main5a.c: 137:     TXSTAbits.BRGH = 1;
  8344  07E2  1518               	bsf	24,2	;volatile
  8345                           
  8346                           ;main5a.c: 139:     BAUDCTLbits.BRG16 = 1;
  8347  07E3  1683               	bsf	3,5	;RP0=1, select bank3
  8348  07E4  1703               	bsf	3,6	;RP1=1, select bank3
  8349  07E5  1587               	bsf	7,3	;volatile
  8350  07E6                     l2980:
  8351                           
  8352                           ;main5a.c: 141:     SPBRG = 207;
  8353  07E6  30CF               	movlw	207
  8354  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  8355  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  8356  07E9  0099               	movwf	25	;volatile
  8357  07EA                     l2982:
  8358                           
  8359                           ;main5a.c: 142:     SPBRGH = 0;
  8360  07EA  019A               	clrf	26	;volatile
  8361  07EB                     l2984:
  8362                           
  8363                           ;main5a.c: 144:     RCSTAbits.SPEN = 1;
  8364  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  8365  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  8366  07ED  1798               	bsf	24,7	;volatile
  8367  07EE                     l2986:
  8368                           
  8369                           ;main5a.c: 145:     RCSTAbits.RX9 = 0;
  8370  07EE  1318               	bcf	24,6	;volatile
  8371  07EF                     l2988:
  8372                           
  8373                           ;main5a.c: 146:     RCSTAbits.CREN = 1;
  8374  07EF  1618               	bsf	24,4	;volatile
  8375  07F0                     l2990:
  8376                           
  8377                           ;main5a.c: 148:     TXSTAbits.TXEN = 1;
  8378  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  8379  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  8380  07F2  1698               	bsf	24,5	;volatile
  8381  07F3                     l108:
  8382  07F3  0008               	return
  8383  07F4                     __end_of_cfg_usart:
  8384                           
  8385                           	psect	text27
  8386  1BE8                     __ptext27:	
  8387 ;; *************** function _cfg_iocb *****************
  8388 ;; Defined at:
  8389 ;;		line 158 in file "main5a.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8403 ;;      Params:         0       0       0       0       0
  8404 ;;      Locals:         0       0       0       0       0
  8405 ;;      Temps:          0       0       0       0       0
  8406 ;;      Totals:         0       0       0       0       0
  8407 ;;Total ram usage:        0 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:    1
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_main
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           
  8418                           ;psect for function _cfg_iocb
  8419  1BE8                     _cfg_iocb:
  8420  1BE8                     l2974:	
  8421                           ;incstack = 0
  8422                           ; Regs used in _cfg_iocb: [wreg]
  8423                           
  8424                           
  8425                           ;main5a.c: 159:     IOCB = 0X03 ;
  8426  1BE8  3003               	movlw	3
  8427  1BE9  1683               	bsf	3,5	;RP0=1, select bank1
  8428  1BEA  1303               	bcf	3,6	;RP1=0, select bank1
  8429  1BEB  0096               	movwf	22	;volatile
  8430  1BEC                     l2976:
  8431                           
  8432                           ;main5a.c: 160:     INTCONbits.RBIF = 0;
  8433  1BEC  100B               	bcf	11,0	;volatile
  8434  1BED                     l114:
  8435  1BED  0008               	return
  8436  1BEE                     __end_of_cfg_iocb:
  8437                           
  8438                           	psect	text28
  8439  1C10                     __ptext28:	
  8440 ;; *************** function _cfg_io *****************
  8441 ;; Defined at:
  8442 ;;		line 113 in file "main5a.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;		None
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      void 
  8449 ;; Registers used:
  8450 ;;		wreg, status,2
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8456 ;;      Params:         0       0       0       0       0
  8457 ;;      Locals:         0       0       0       0       0
  8458 ;;      Temps:          0       0       0       0       0
  8459 ;;      Totals:         0       0       0       0       0
  8460 ;;Total ram usage:        0 bytes
  8461 ;; Hardware stack levels used:    1
  8462 ;; Hardware stack levels required when called:    1
  8463 ;; This function calls:
  8464 ;;		Nothing
  8465 ;; This function is called by:
  8466 ;;		_main
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470                           
  8471                           ;psect for function _cfg_io
  8472  1C10                     _cfg_io:
  8473  1C10                     l2956:	
  8474                           ;incstack = 0
  8475                           ; Regs used in _cfg_io: [wreg+status,2]
  8476                           
  8477                           
  8478                           ;main5a.c: 114:     ANSEL = 0;
  8479  1C10  1683               	bsf	3,5	;RP0=1, select bank3
  8480  1C11  1703               	bsf	3,6	;RP1=1, select bank3
  8481  1C12  0188               	clrf	8	;volatile
  8482                           
  8483                           ;main5a.c: 115:     ANSELH = 0;
  8484  1C13  0189               	clrf	9	;volatile
  8485                           
  8486                           ;main5a.c: 117:     TRISA = 0;
  8487  1C14  1683               	bsf	3,5	;RP0=1, select bank1
  8488  1C15  1303               	bcf	3,6	;RP1=0, select bank1
  8489  1C16  0185               	clrf	5	;volatile
  8490                           
  8491                           ;main5a.c: 118:     TRISB = 0;
  8492  1C17  0186               	clrf	6	;volatile
  8493                           
  8494                           ;main5a.c: 119:     TRISD = 0;
  8495  1C18  0188               	clrf	8	;volatile
  8496  1C19                     l2958:
  8497                           
  8498                           ;main5a.c: 120:     TRISBbits.TRISB0 = 1;
  8499  1C19  1406               	bsf	6,0	;volatile
  8500  1C1A                     l2960:
  8501                           
  8502                           ;main5a.c: 121:     TRISBbits.TRISB1 = 1;
  8503  1C1A  1486               	bsf	6,1	;volatile
  8504  1C1B                     l2962:
  8505                           
  8506                           ;main5a.c: 122:     OPTION_REGbits.nRBPU = 0 ;
  8507  1C1B  1381               	bcf	1,7	;volatile
  8508  1C1C                     l2964:
  8509                           
  8510                           ;main5a.c: 123:     WPUB = 0x03;
  8511  1C1C  3003               	movlw	3
  8512  1C1D  0095               	movwf	21	;volatile
  8513  1C1E                     l2966:
  8514                           
  8515                           ;main5a.c: 125:     PORTB = 0;
  8516  1C1E  1283               	bcf	3,5	;RP0=0, select bank0
  8517  1C1F  1303               	bcf	3,6	;RP1=0, select bank0
  8518  1C20  0186               	clrf	6	;volatile
  8519  1C21                     l2968:
  8520                           
  8521                           ;main5a.c: 126:     PORTD = 0;
  8522  1C21  0188               	clrf	8	;volatile
  8523  1C22                     l2970:
  8524                           
  8525                           ;main5a.c: 127:     PORTA = 0;
  8526  1C22  0185               	clrf	5	;volatile
  8527  1C23                     l102:
  8528  1C23  0008               	return
  8529  1C24                     __end_of_cfg_io:
  8530                           
  8531                           	psect	text29
  8532  1BEE                     __ptext29:	
  8533 ;; *************** function _cfg_inte *****************
  8534 ;; Defined at:
  8535 ;;		line 151 in file "main5a.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      void 
  8542 ;; Registers used:
  8543 ;;		None
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8549 ;;      Params:         0       0       0       0       0
  8550 ;;      Locals:         0       0       0       0       0
  8551 ;;      Temps:          0       0       0       0       0
  8552 ;;      Totals:         0       0       0       0       0
  8553 ;;Total ram usage:        0 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; Hardware stack levels required when called:    1
  8556 ;; This function calls:
  8557 ;;		Nothing
  8558 ;; This function is called by:
  8559 ;;		_main
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           
  8564                           ;psect for function _cfg_inte
  8565  1BEE                     _cfg_inte:
  8566  1BEE                     l2972:	
  8567                           ;incstack = 0
  8568                           ; Regs used in _cfg_inte: []
  8569                           
  8570                           
  8571                           ;main5a.c: 152:     INTCONbits.GIE = 1;
  8572  1BEE  178B               	bsf	11,7	;volatile
  8573                           
  8574                           ;main5a.c: 153:     INTCONbits.PEIE = 1;
  8575  1BEF  170B               	bsf	11,6	;volatile
  8576                           
  8577                           ;main5a.c: 154:     PIE1bits.RCIE = 1;
  8578  1BF0  1683               	bsf	3,5	;RP0=1, select bank1
  8579  1BF1  1303               	bcf	3,6	;RP1=0, select bank1
  8580  1BF2  168C               	bsf	12,5	;volatile
  8581                           
  8582                           ;main5a.c: 155:     INTCONbits.RBIE = 1;
  8583  1BF3  158B               	bsf	11,3	;volatile
  8584                           
  8585                           ;main5a.c: 156:     INTCONbits.RBIF = 0;
  8586  1BF4  100B               	bcf	11,0	;volatile
  8587  1BF5                     l111:
  8588  1BF5  0008               	return
  8589  1BF6                     __end_of_cfg_inte:
  8590                           
  8591                           	psect	text30
  8592  1BE2                     __ptext30:	
  8593 ;; *************** function _cfg_clk *****************
  8594 ;; Defined at:
  8595 ;;		line 130 in file "main5a.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;		None
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;		None
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      void 
  8602 ;; Registers used:
  8603 ;;		wreg, status,2, status,0
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8609 ;;      Params:         0       0       0       0       0
  8610 ;;      Locals:         0       0       0       0       0
  8611 ;;      Temps:          0       0       0       0       0
  8612 ;;      Totals:         0       0       0       0       0
  8613 ;;Total ram usage:        0 bytes
  8614 ;; Hardware stack levels used:    1
  8615 ;; Hardware stack levels required when called:    1
  8616 ;; This function calls:
  8617 ;;		Nothing
  8618 ;; This function is called by:
  8619 ;;		_main
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623                           
  8624                           ;psect for function _cfg_clk
  8625  1BE2                     _cfg_clk:
  8626  1BE2                     l2992:	
  8627                           ;incstack = 0
  8628                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  8629                           
  8630                           
  8631                           ;main5a.c: 131:     OSCCONbits.IRCF = 0b111;
  8632  1BE2  3070               	movlw	112
  8633  1BE3  1683               	bsf	3,5	;RP0=1, select bank1
  8634  1BE4  1303               	bcf	3,6	;RP1=0, select bank1
  8635  1BE5  048F               	iorwf	15,f	;volatile
  8636  1BE6                     l2994:
  8637                           
  8638                           ;main5a.c: 132:     OSCCONbits.SCS = 1;
  8639  1BE6  140F               	bsf	15,0	;volatile
  8640  1BE7                     l105:
  8641  1BE7  0008               	return
  8642  1BE8                     __end_of_cfg_clk:
  8643                           
  8644                           	psect	text31
  8645  1CC2                     __ptext31:	
  8646 ;; *************** function _isr *****************
  8647 ;; Defined at:
  8648 ;;		line 66 in file "main5a.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;		None
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;		None
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  1    wreg      void 
  8655 ;; Registers used:
  8656 ;;		wreg, status,2, status,0
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8662 ;;      Params:         0       0       0       0       0
  8663 ;;      Locals:         0       0       0       0       0
  8664 ;;      Temps:          5       0       0       0       0
  8665 ;;      Totals:         5       0       0       0       0
  8666 ;;Total ram usage:        5 bytes
  8667 ;; Hardware stack levels used:    1
  8668 ;; This function calls:
  8669 ;;		Nothing
  8670 ;; This function is called by:
  8671 ;;		Interrupt level 1
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           
  8676                           ;psect for function _isr
  8677  1CC2                     _isr:
  8678  1CC2                     i1l3272:
  8679                           
  8680                           ;main5a.c: 68:     if(PIR1bits.RCIF){
  8681  1CC2  1283               	bcf	3,5	;RP0=0, select bank0
  8682  1CC3  1303               	bcf	3,6	;RP1=0, select bank0
  8683  1CC4  1E8C               	btfss	12,5	;volatile
  8684  1CC5  2CC7               	goto	u549_21
  8685  1CC6  2CC8               	goto	u549_20
  8686  1CC7                     u549_21:
  8687  1CC7  2CDB               	goto	i1l3276
  8688  1CC8                     u549_20:
  8689  1CC8                     i1l3274:
  8690                           
  8691                           ;main5a.c: 69:         TXREG = 12;
  8692  1CC8  300C               	movlw	12
  8693  1CC9  0099               	movwf	25	;volatile
  8694                           
  8695                           ;main5a.c: 70:         TXREG = 0X0D;
  8696  1CCA  300D               	movlw	13
  8697  1CCB  0099               	movwf	25	;volatile
  8698                           
  8699                           ;main5a.c: 71:         PORTD = RCREG;
  8700  1CCC  081A               	movf	26,w	;volatile
  8701  1CCD  0088               	movwf	8	;volatile
  8702                           
  8703                           ;main5a.c: 72:         _delay((unsigned long)((4000)*(4000000/4000.0)));
  8704  1CCE  3015               	movlw	21
  8705  1CCF  00F2               	movwf	??_isr+2
  8706  1CD0  304B               	movlw	75
  8707  1CD1  00F1               	movwf	??_isr+1
  8708  1CD2  30BE               	movlw	190
  8709  1CD3  00F0               	movwf	??_isr
  8710  1CD4                     u733_27:
  8711  1CD4  0BF0               	decfsz	??_isr,f
  8712  1CD5  2CD4               	goto	u733_27
  8713  1CD6  0BF1               	decfsz	??_isr+1,f
  8714  1CD7  2CD4               	goto	u733_27
  8715  1CD8  0BF2               	decfsz	??_isr+2,f
  8716  1CD9  2CD4               	goto	u733_27
  8717  1CDA  0000               	nop
  8718  1CDB                     i1l3276:
  8719                           
  8720                           ;main5a.c: 75:     if(INTCONbits.RBIF){
  8721  1CDB  1C0B               	btfss	11,0	;volatile
  8722  1CDC  2CDE               	goto	u550_21
  8723  1CDD  2CDF               	goto	u550_20
  8724  1CDE                     u550_21:
  8725  1CDE  2CF5               	goto	i1l91
  8726  1CDF                     u550_20:
  8727  1CDF                     i1l3278:
  8728                           
  8729                           ;main5a.c: 76:         if (PORTBbits.RB0 == 0){
  8730  1CDF  1283               	bcf	3,5	;RP0=0, select bank0
  8731  1CE0  1303               	bcf	3,6	;RP1=0, select bank0
  8732  1CE1  1806               	btfsc	6,0	;volatile
  8733  1CE2  2CE4               	goto	u551_21
  8734  1CE3  2CE5               	goto	u551_20
  8735  1CE4                     u551_21:
  8736  1CE4  2CEB               	goto	i1l3282
  8737  1CE5                     u551_20:
  8738  1CE5                     i1l3280:
  8739                           
  8740                           ;main5a.c: 77:             V++;
  8741  1CE5  3001               	movlw	1
  8742  1CE6  00F0               	movwf	??_isr
  8743  1CE7  0870               	movf	??_isr,w
  8744  1CE8  1683               	bsf	3,5	;RP0=1, select bank1
  8745  1CE9  1303               	bcf	3,6	;RP1=0, select bank1
  8746  1CEA  07D8               	addwf	_V^(0+128),f
  8747  1CEB                     i1l3282:
  8748                           
  8749                           ;main5a.c: 79:         if (PORTBbits.RB1 == 0){
  8750  1CEB  1283               	bcf	3,5	;RP0=0, select bank0
  8751  1CEC  1886               	btfsc	6,1	;volatile
  8752  1CED  2CEF               	goto	u552_21
  8753  1CEE  2CF0               	goto	u552_20
  8754  1CEF                     u552_21:
  8755  1CEF  2CF4               	goto	i1l3286
  8756  1CF0                     u552_20:
  8757  1CF0                     i1l3284:
  8758                           
  8759                           ;main5a.c: 80:             V--;
  8760  1CF0  3001               	movlw	1
  8761  1CF1  1683               	bsf	3,5	;RP0=1, select bank1
  8762  1CF2  1303               	bcf	3,6	;RP1=0, select bank1
  8763  1CF3  02D8               	subwf	_V^(0+128),f
  8764  1CF4                     i1l3286:
  8765                           
  8766                           ;main5a.c: 82:         INTCONbits.RBIF = 0;
  8767  1CF4  100B               	bcf	11,0	;volatile
  8768  1CF5                     i1l91:
  8769  1CF5  0874               	movf	??_isr+4,w
  8770  1CF6  008A               	movwf	10
  8771  1CF7  0E73               	swapf	??_isr+3,w
  8772  1CF8  0083               	movwf	3
  8773  1CF9  0EFE               	swapf	btemp,f
  8774  1CFA  0E7E               	swapf	btemp,w
  8775  1CFB  0009               	retfie
  8776  1CFC                     __end_of_isr:
  8777  007E                     btemp	set	126	;btemp
  8778  007E                     wtemp0	set	126
  8779                           
  8780                           	psect	intentry
  8781  0004                     __pintentry:	
  8782                           ;incstack = 0
  8783                           ; Regs used in _isr: [wreg+status,2+status,0]
  8784                           
  8785  0004                     interrupt_function:
  8786  007E                     saved_w	set	btemp
  8787  0004  00FE               	movwf	btemp
  8788  0005  0E03               	swapf	3,w
  8789  0006  00F3               	movwf	??_isr+3
  8790  0007  080A               	movf	10,w
  8791  0008  00F4               	movwf	??_isr+4
  8792  0009  160A  158A  2CC2   	ljmp	_isr
  8793                           
  8794                           	psect	config
  8795                           
  8796                           ;Config register CONFIG1 @ 0x2007
  8797                           ;	Oscillator Selection bits
  8798                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8799                           ;	Watchdog Timer Enable bit
  8800                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8801                           ;	Power-up Timer Enable bit
  8802                           ;	PWRTE = OFF, PWRT disabled
  8803                           ;	RE3/MCLR pin function select bit
  8804                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8805                           ;	Code Protection bit
  8806                           ;	CP = OFF, Program memory code protection is disabled
  8807                           ;	Data Code Protection bit
  8808                           ;	CPD = OFF, Data memory code protection is disabled
  8809                           ;	Brown Out Reset Selection bits
  8810                           ;	BOREN = OFF, BOR disabled
  8811                           ;	Internal External Switchover bit
  8812                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8813                           ;	Fail-Safe Clock Monitor Enabled bit
  8814                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8815                           ;	Low Voltage Programming Enable bit
  8816                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8817                           ;	In-Circuit Debugger Mode bit
  8818                           ;	DEBUG = 0x1, unprogrammed default
  8819  2007                     	org	8199
  8820  2007  20D4               	dw	8404
  8821                           
  8822                           ;Config register CONFIG2 @ 0x2008
  8823                           ;	Brown-out Reset Selection bit
  8824                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8825                           ;	Flash Program Memory Self Write Enable bits
  8826                           ;	WRT = OFF, Write protection off
  8827  2008                     	org	8200
  8828  2008  3FFF               	dw	16383
  8829                           
  8830                           	psect	text1_split_1
  8831  001E                     u6980:
  8832  001E                     l3914:
  8833  001E  1683               	bsf	3,5	;RP0=1, select bank1
  8834  001F  1303               	bcf	3,6	;RP1=0, select bank1
  8835  0020  0848               	movf	(sprintf@fval+3)^(0+128),w
  8836  0021  1283               	bcf	3,5	;RP0=0, select bank0
  8837  0022  1303               	bcf	3,6	;RP1=0, select bank0
  8838  0023  00A3               	movwf	___fleq@ff1+3
  8839  0024  1683               	bsf	3,5	;RP0=1, select bank1
  8840  0025  1303               	bcf	3,6	;RP1=0, select bank1
  8841  0026  0847               	movf	(sprintf@fval+2)^(0+128),w
  8842  0027  1283               	bcf	3,5	;RP0=0, select bank0
  8843  0028  1303               	bcf	3,6	;RP1=0, select bank0
  8844  0029  00A2               	movwf	___fleq@ff1+2
  8845  002A  1683               	bsf	3,5	;RP0=1, select bank1
  8846  002B  1303               	bcf	3,6	;RP1=0, select bank1
  8847  002C  0846               	movf	(sprintf@fval+1)^(0+128),w
  8848  002D  1283               	bcf	3,5	;RP0=0, select bank0
  8849  002E  1303               	bcf	3,6	;RP1=0, select bank0
  8850  002F  00A1               	movwf	___fleq@ff1+1
  8851  0030  1683               	bsf	3,5	;RP0=1, select bank1
  8852  0031  1303               	bcf	3,6	;RP1=0, select bank1
  8853  0032  0845               	movf	sprintf@fval^(0+128),w
  8854  0033  1283               	bcf	3,5	;RP0=0, select bank0
  8855  0034  1303               	bcf	3,6	;RP1=0, select bank0
  8856  0035  00A0               	movwf	___fleq@ff1
  8857  0036  3000               	movlw	0
  8858  0037  00A7               	movwf	___fleq@ff2+3
  8859  0038  3000               	movlw	0
  8860  0039  00A6               	movwf	___fleq@ff2+2
  8861  003A  3000               	movlw	0
  8862  003B  00A5               	movwf	___fleq@ff2+1
  8863  003C  3000               	movlw	0
  8864  003D  00A4               	movwf	___fleq@ff2
  8865  003E  160A  158A  257E  120A  118A  	fcall	___fleq
  8866  0043  1803               	btfsc	3,0
  8867  0044  2846               	goto	u6991
  8868  0045  2847               	goto	u6990
  8869  0046                     u6991:
  8870  0046  2929               	goto	l3934
  8871  0047                     u6990:
  8872  0047                     l3916:
  8873  0047  1683               	bsf	3,5	;RP0=1, select bank1
  8874  0048  1303               	bcf	3,6	;RP1=0, select bank1
  8875  0049  0848               	movf	(sprintf@fval+3)^(0+128),w
  8876  004A  1283               	bcf	3,5	;RP0=0, select bank0
  8877  004B  1303               	bcf	3,6	;RP1=0, select bank0
  8878  004C  00DE               	movwf	___fltol@f1+3
  8879  004D  1683               	bsf	3,5	;RP0=1, select bank1
  8880  004E  1303               	bcf	3,6	;RP1=0, select bank1
  8881  004F  0847               	movf	(sprintf@fval+2)^(0+128),w
  8882  0050  1283               	bcf	3,5	;RP0=0, select bank0
  8883  0051  1303               	bcf	3,6	;RP1=0, select bank0
  8884  0052  00DD               	movwf	___fltol@f1+2
  8885  0053  1683               	bsf	3,5	;RP0=1, select bank1
  8886  0054  1303               	bcf	3,6	;RP1=0, select bank1
  8887  0055  0846               	movf	(sprintf@fval+1)^(0+128),w
  8888  0056  1283               	bcf	3,5	;RP0=0, select bank0
  8889  0057  1303               	bcf	3,6	;RP1=0, select bank0
  8890  0058  00DC               	movwf	___fltol@f1+1
  8891  0059  1683               	bsf	3,5	;RP0=1, select bank1
  8892  005A  1303               	bcf	3,6	;RP1=0, select bank1
  8893  005B  0845               	movf	sprintf@fval^(0+128),w
  8894  005C  1283               	bcf	3,5	;RP0=0, select bank0
  8895  005D  1303               	bcf	3,6	;RP1=0, select bank0
  8896  005E  00DB               	movwf	___fltol@f1
  8897  005F  120A  158A  2002  120A  118A  	fcall	___fltol
  8898  0064  1283               	bcf	3,5	;RP0=0, select bank0
  8899  0065  1303               	bcf	3,6	;RP1=0, select bank0
  8900  0066  085E               	movf	?___fltol+3,w
  8901  0067  045D               	iorwf	?___fltol+2,w
  8902  0068  045C               	iorwf	?___fltol+1,w
  8903  0069  045B               	iorwf	?___fltol,w
  8904  006A  1D03               	skipz
  8905  006B  286D               	goto	u7001
  8906  006C  286E               	goto	u7000
  8907  006D                     u7001:
  8908  006D  2929               	goto	l3934
  8909  006E                     u7000:
  8910  006E                     l3918:
  8911  006E  1683               	bsf	3,5	;RP0=1, select bank1
  8912  006F  1303               	bcf	3,6	;RP1=0, select bank1
  8913  0070  0844               	movf	(sprintf@eexp+1)^(0+128),w
  8914  0071  3A80               	xorlw	128
  8915  0072  00FF               	movwf	btemp+1
  8916  0073  3080               	movlw	128
  8917  0074  027F               	subwf	btemp+1,w
  8918  0075  1D03               	skipz
  8919  0076  2879               	goto	u7015
  8920  0077  3002               	movlw	2
  8921  0078  0243               	subwf	sprintf@eexp^(0+128),w
  8922  0079                     u7015:
  8923  0079  1C03               	skipc
  8924  007A  287C               	goto	u7011
  8925  007B  287D               	goto	u7010
  8926  007C                     u7011:
  8927  007C  2929               	goto	l3934
  8928  007D                     u7010:
  8929  007D                     l3920:
  8930                           
  8931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8932  007D  1683               	bsf	3,5	;RP0=1, select bank1
  8933  007E  1303               	bcf	3,6	;RP1=0, select bank1
  8934  007F  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  8935  0080  1283               	bcf	3,5	;RP0=0, select bank0
  8936  0081  1303               	bcf	3,6	;RP1=0, select bank0
  8937  0082  00A3               	movwf	___flge@ff1+3
  8938  0083  1683               	bsf	3,5	;RP0=1, select bank1
  8939  0084  1303               	bcf	3,6	;RP1=0, select bank1
  8940  0085  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  8941  0086  1283               	bcf	3,5	;RP0=0, select bank0
  8942  0087  1303               	bcf	3,6	;RP1=0, select bank0
  8943  0088  00A2               	movwf	___flge@ff1+2
  8944  0089  1683               	bsf	3,5	;RP0=1, select bank1
  8945  008A  1303               	bcf	3,6	;RP1=0, select bank1
  8946  008B  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  8947  008C  1283               	bcf	3,5	;RP0=0, select bank0
  8948  008D  1303               	bcf	3,6	;RP1=0, select bank0
  8949  008E  00A1               	movwf	___flge@ff1+1
  8950  008F  1683               	bsf	3,5	;RP0=1, select bank1
  8951  0090  1303               	bcf	3,6	;RP1=0, select bank1
  8952  0091  083F               	movf	sprintf@tmpval^(0+128),w
  8953  0092  1283               	bcf	3,5	;RP0=0, select bank0
  8954  0093  1303               	bcf	3,6	;RP1=0, select bank0
  8955  0094  00A0               	movwf	___flge@ff1
  8956  0095  3040               	movlw	64
  8957  0096  00A7               	movwf	___flge@ff2+3
  8958  0097  3089               	movlw	137
  8959  0098  00A6               	movwf	___flge@ff2+2
  8960  0099  3070               	movlw	112
  8961  009A  00A5               	movwf	___flge@ff2+1
  8962  009B  305F               	movlw	95
  8963  009C  00A4               	movwf	___flge@ff2
  8964  009D  160A  118A  200F  120A  118A  	fcall	___flge
  8965  00A2  1803               	btfsc	3,0
  8966  00A3  28A5               	goto	u7021
  8967  00A4  28A6               	goto	u7020
  8968  00A5                     u7021:
  8969  00A5  28AF               	goto	l3924
  8970  00A6                     u7020:
  8971  00A6                     l3922:
  8972                           
  8973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  8974  00A6  30F7               	movlw	247
  8975  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  8976  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  8977  00A9  07C3               	addwf	sprintf@eexp^(0+128),f
  8978  00AA  1803               	skipnc
  8979  00AB  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  8980  00AC  30FF               	movlw	255
  8981  00AD  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  8982                           
  8983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8984  00AE  28B7               	goto	l3926
  8985  00AF                     l3924:
  8986                           
  8987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  8988  00AF  30F8               	movlw	248
  8989  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  8990  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  8991  00B2  07C3               	addwf	sprintf@eexp^(0+128),f
  8992  00B3  1803               	skipnc
  8993  00B4  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  8994  00B5  30FF               	movlw	255
  8995  00B6  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  8996  00B7                     l3926:
  8997                           
  8998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8999  00B7  0843               	movf	sprintf@eexp^(0+128),w
  9000  00B8  120A  158A  249D  120A  118A  	fcall	_scale
  9001  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  9002  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  9003  00BF  084B               	movf	?_scale+3,w
  9004  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  9005  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  9006  00C2  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  9007  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  9008  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  9009  00C5  084A               	movf	?_scale+2,w
  9010  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  9011  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  9012  00C8  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  9013  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  9014  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  9015  00CB  0849               	movf	?_scale+1,w
  9016  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  9017  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  9018  00CE  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  9019  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  9020  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  9021  00D1  0848               	movf	?_scale,w
  9022  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  9023  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  9024  00D4  00BF               	movwf	sprintf@tmpval^(0+128)
  9025  00D5                     l3928:
  9026  00D5  0848               	movf	(sprintf@fval+3)^(0+128),w
  9027  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  9028  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  9029  00D8  00A3               	movwf	__div_to_l_@f1+3
  9030  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  9031  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  9032  00DB  0847               	movf	(sprintf@fval+2)^(0+128),w
  9033  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  9034  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  9035  00DE  00A2               	movwf	__div_to_l_@f1+2
  9036  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  9037  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  9038  00E1  0846               	movf	(sprintf@fval+1)^(0+128),w
  9039  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  9040  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  9041  00E4  00A1               	movwf	__div_to_l_@f1+1
  9042  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  9043  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  9044  00E7  0845               	movf	sprintf@fval^(0+128),w
  9045  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  9046  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  9047  00EA  00A0               	movwf	__div_to_l_@f1
  9048  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  9049  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  9050  00ED  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  9051  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  9052  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  9053  00F0  00A7               	movwf	__div_to_l_@f2+3
  9054  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  9055  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  9056  00F3  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  9057  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  9058  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  9059  00F6  00A6               	movwf	__div_to_l_@f2+2
  9060  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  9061  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  9062  00F9  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  9063  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  9064  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  9065  00FC  00A5               	movwf	__div_to_l_@f2+1
  9066  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  9067  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  9068  00FF  083F               	movf	sprintf@tmpval^(0+128),w
  9069  0100  1283               	bcf	3,5	;RP0=0, select bank0
  9070  0101  1303               	bcf	3,6	;RP1=0, select bank0
  9071  0102  00A4               	movwf	__div_to_l_@f2
  9072  0103  120A  158A  207E  120A  118A  	fcall	__div_to_l_
  9073  0108  1283               	bcf	3,5	;RP0=0, select bank0
  9074  0109  1303               	bcf	3,6	;RP1=0, select bank0
  9075  010A  0823               	movf	?__div_to_l_+3,w
  9076  010B  1683               	bsf	3,5	;RP0=1, select bank1
  9077  010C  1303               	bcf	3,6	;RP1=0, select bank1
  9078  010D  00BA               	movwf	(sprintf@val+3)^(0+128)
  9079  010E  1283               	bcf	3,5	;RP0=0, select bank0
  9080  010F  1303               	bcf	3,6	;RP1=0, select bank0
  9081  0110  0822               	movf	?__div_to_l_+2,w
  9082  0111  1683               	bsf	3,5	;RP0=1, select bank1
  9083  0112  1303               	bcf	3,6	;RP1=0, select bank1
  9084  0113  00B9               	movwf	(sprintf@val+2)^(0+128)
  9085  0114  1283               	bcf	3,5	;RP0=0, select bank0
  9086  0115  1303               	bcf	3,6	;RP1=0, select bank0
  9087  0116  0821               	movf	?__div_to_l_+1,w
  9088  0117  1683               	bsf	3,5	;RP0=1, select bank1
  9089  0118  1303               	bcf	3,6	;RP1=0, select bank1
  9090  0119  00B8               	movwf	(sprintf@val+1)^(0+128)
  9091  011A  1283               	bcf	3,5	;RP0=0, select bank0
  9092  011B  1303               	bcf	3,6	;RP1=0, select bank0
  9093  011C  0820               	movf	?__div_to_l_,w
  9094  011D  1683               	bsf	3,5	;RP0=1, select bank1
  9095  011E  1303               	bcf	3,6	;RP1=0, select bank1
  9096  011F  00B7               	movwf	sprintf@val^(0+128)
  9097  0120                     l3932:
  9098                           
  9099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9100  0120  3000               	movlw	0
  9101  0121  00C8               	movwf	(sprintf@fval+3)^(0+128)
  9102  0122  3000               	movlw	0
  9103  0123  00C7               	movwf	(sprintf@fval+2)^(0+128)
  9104  0124  3000               	movlw	0
  9105  0125  00C6               	movwf	(sprintf@fval+1)^(0+128)
  9106  0126  3000               	movlw	0
  9107  0127  00C5               	movwf	sprintf@fval^(0+128)
  9108                           
  9109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9110  0128  29AB               	goto	l3940
  9111  0129                     l3934:
  9112                           
  9113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9114  0129  1683               	bsf	3,5	;RP0=1, select bank1
  9115  012A  1303               	bcf	3,6	;RP1=0, select bank1
  9116  012B  0848               	movf	(sprintf@fval+3)^(0+128),w
  9117  012C  1283               	bcf	3,5	;RP0=0, select bank0
  9118  012D  1303               	bcf	3,6	;RP1=0, select bank0
  9119  012E  00DE               	movwf	___fltol@f1+3
  9120  012F  1683               	bsf	3,5	;RP0=1, select bank1
  9121  0130  1303               	bcf	3,6	;RP1=0, select bank1
  9122  0131  0847               	movf	(sprintf@fval+2)^(0+128),w
  9123  0132  1283               	bcf	3,5	;RP0=0, select bank0
  9124  0133  1303               	bcf	3,6	;RP1=0, select bank0
  9125  0134  00DD               	movwf	___fltol@f1+2
  9126  0135  1683               	bsf	3,5	;RP0=1, select bank1
  9127  0136  1303               	bcf	3,6	;RP1=0, select bank1
  9128  0137  0846               	movf	(sprintf@fval+1)^(0+128),w
  9129  0138  1283               	bcf	3,5	;RP0=0, select bank0
  9130  0139  1303               	bcf	3,6	;RP1=0, select bank0
  9131  013A  00DC               	movwf	___fltol@f1+1
  9132  013B  1683               	bsf	3,5	;RP0=1, select bank1
  9133  013C  1303               	bcf	3,6	;RP1=0, select bank1
  9134  013D  0845               	movf	sprintf@fval^(0+128),w
  9135  013E  1283               	bcf	3,5	;RP0=0, select bank0
  9136  013F  1303               	bcf	3,6	;RP1=0, select bank0
  9137  0140  00DB               	movwf	___fltol@f1
  9138  0141  120A  158A  2002  120A  118A  	fcall	___fltol
  9139  0146  1283               	bcf	3,5	;RP0=0, select bank0
  9140  0147  1303               	bcf	3,6	;RP1=0, select bank0
  9141  0148  085E               	movf	?___fltol+3,w
  9142  0149  1683               	bsf	3,5	;RP0=1, select bank1
  9143  014A  1303               	bcf	3,6	;RP1=0, select bank1
  9144  014B  00BA               	movwf	(sprintf@val+3)^(0+128)
  9145  014C  1283               	bcf	3,5	;RP0=0, select bank0
  9146  014D  1303               	bcf	3,6	;RP1=0, select bank0
  9147  014E  085D               	movf	?___fltol+2,w
  9148  014F  1683               	bsf	3,5	;RP0=1, select bank1
  9149  0150  1303               	bcf	3,6	;RP1=0, select bank1
  9150  0151  00B9               	movwf	(sprintf@val+2)^(0+128)
  9151  0152  1283               	bcf	3,5	;RP0=0, select bank0
  9152  0153  1303               	bcf	3,6	;RP1=0, select bank0
  9153  0154  085C               	movf	?___fltol+1,w
  9154  0155  1683               	bsf	3,5	;RP0=1, select bank1
  9155  0156  1303               	bcf	3,6	;RP1=0, select bank1
  9156  0157  00B8               	movwf	(sprintf@val+1)^(0+128)
  9157  0158  1283               	bcf	3,5	;RP0=0, select bank0
  9158  0159  1303               	bcf	3,6	;RP1=0, select bank0
  9159  015A  085B               	movf	?___fltol,w
  9160  015B  1683               	bsf	3,5	;RP0=1, select bank1
  9161  015C  1303               	bcf	3,6	;RP1=0, select bank1
  9162  015D  00B7               	movwf	sprintf@val^(0+128)
  9163  015E                     l3936:
  9164                           
  9165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9166  015E  083A               	movf	(sprintf@val+3)^(0+128),w
  9167  015F  1283               	bcf	3,5	;RP0=0, select bank0
  9168  0160  1303               	bcf	3,6	;RP1=0, select bank0
  9169  0161  00A3               	movwf	___xxtofl@val+3
  9170  0162  1683               	bsf	3,5	;RP0=1, select bank1
  9171  0163  1303               	bcf	3,6	;RP1=0, select bank1
  9172  0164  0839               	movf	(sprintf@val+2)^(0+128),w
  9173  0165  1283               	bcf	3,5	;RP0=0, select bank0
  9174  0166  1303               	bcf	3,6	;RP1=0, select bank0
  9175  0167  00A2               	movwf	___xxtofl@val+2
  9176  0168  1683               	bsf	3,5	;RP0=1, select bank1
  9177  0169  1303               	bcf	3,6	;RP1=0, select bank1
  9178  016A  0838               	movf	(sprintf@val+1)^(0+128),w
  9179  016B  1283               	bcf	3,5	;RP0=0, select bank0
  9180  016C  1303               	bcf	3,6	;RP1=0, select bank0
  9181  016D  00A1               	movwf	___xxtofl@val+1
  9182  016E  1683               	bsf	3,5	;RP0=1, select bank1
  9183  016F  1303               	bcf	3,6	;RP1=0, select bank1
  9184  0170  0837               	movf	sprintf@val^(0+128),w
  9185  0171  1283               	bcf	3,5	;RP0=0, select bank0
  9186  0172  1303               	bcf	3,6	;RP1=0, select bank0
  9187  0173  00A0               	movwf	___xxtofl@val
  9188  0174  3000               	movlw	0
  9189  0175  160A  118A  20B3  120A  118A  	fcall	___xxtofl
  9190  017A  1283               	bcf	3,5	;RP0=0, select bank0
  9191  017B  1303               	bcf	3,6	;RP1=0, select bank0
  9192  017C  0823               	movf	?___xxtofl+3,w
  9193  017D  1683               	bsf	3,5	;RP0=1, select bank1
  9194  017E  1303               	bcf	3,6	;RP1=0, select bank1
  9195  017F  00A3               	movwf	(___flsub@a+3)^(0+128)
  9196  0180  1283               	bcf	3,5	;RP0=0, select bank0
  9197  0181  1303               	bcf	3,6	;RP1=0, select bank0
  9198  0182  0822               	movf	?___xxtofl+2,w
  9199  0183  1683               	bsf	3,5	;RP0=1, select bank1
  9200  0184  1303               	bcf	3,6	;RP1=0, select bank1
  9201  0185  00A2               	movwf	(___flsub@a+2)^(0+128)
  9202  0186  1283               	bcf	3,5	;RP0=0, select bank0
  9203  0187  1303               	bcf	3,6	;RP1=0, select bank0
  9204  0188  0821               	movf	?___xxtofl+1,w
  9205  0189  1683               	bsf	3,5	;RP0=1, select bank1
  9206  018A  1303               	bcf	3,6	;RP1=0, select bank1
  9207  018B  00A1               	movwf	(___flsub@a+1)^(0+128)
  9208  018C  1283               	bcf	3,5	;RP0=0, select bank0
  9209  018D  1303               	bcf	3,6	;RP1=0, select bank0
  9210  018E  0820               	movf	?___xxtofl,w
  9211  018F  1683               	bsf	3,5	;RP0=1, select bank1
  9212  0190  1303               	bcf	3,6	;RP1=0, select bank1
  9213  0191  00A0               	movwf	___flsub@a^(0+128)
  9214  0192  0848               	movf	(sprintf@fval+3)^(0+128),w
  9215  0193  00A7               	movwf	(___flsub@b+3)^(0+128)
  9216  0194  0847               	movf	(sprintf@fval+2)^(0+128),w
  9217  0195  00A6               	movwf	(___flsub@b+2)^(0+128)
  9218  0196  0846               	movf	(sprintf@fval+1)^(0+128),w
  9219  0197  00A5               	movwf	(___flsub@b+1)^(0+128)
  9220  0198  0845               	movf	sprintf@fval^(0+128),w
  9221  0199  00A4               	movwf	___flsub@b^(0+128)
  9222  019A  160A  158A  25CE  120A  118A  	fcall	___flsub
  9223  019F  1683               	bsf	3,5	;RP0=1, select bank1
  9224  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  9225  01A1  0823               	movf	(?___flsub+3)^(0+128),w
  9226  01A2  00C8               	movwf	(sprintf@fval+3)^(0+128)
  9227  01A3  0822               	movf	(?___flsub+2)^(0+128),w
  9228  01A4  00C7               	movwf	(sprintf@fval+2)^(0+128)
  9229  01A5  0821               	movf	(?___flsub+1)^(0+128),w
  9230  01A6  00C6               	movwf	(sprintf@fval+1)^(0+128)
  9231  01A7  0820               	movf	?___flsub^(0+128),w
  9232  01A8  00C5               	movwf	sprintf@fval^(0+128)
  9233  01A9                     l3938:
  9234                           
  9235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9236  01A9  01C3               	clrf	sprintf@eexp^(0+128)
  9237  01AA  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  9238  01AB                     l3940:
  9239                           
  9240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9241  01AB  01CC               	clrf	sprintf@c^(0+128)
  9242  01AC  0ACC               	incf	sprintf@c^(0+128),f
  9243  01AD                     l3946:
  9244                           
  9245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9246  01AD  084C               	movf	sprintf@c^(0+128),w
  9247  01AE  00AD               	movwf	??_sprintf^(0+128)
  9248  01AF  3001               	movlw	1
  9249  01B0                     u7035:
  9250  01B0  1003               	clrc
  9251  01B1  0DAD               	rlf	??_sprintf^(0+128),f
  9252  01B2  3EFF               	addlw	-1
  9253  01B3  1D03               	skipz
  9254  01B4  29B0               	goto	u7035
  9255  01B5  1003               	clrc
  9256  01B6  0D2D               	rlf	??_sprintf^(0+128),w
  9257  01B7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9258  01B8  0084               	movwf	4
  9259  01B9  160A  158A  2000  120A  118A  	fcall	stringdir
  9260  01BE  00AE               	movwf	(??_sprintf+1)^(0+128)
  9261  01BF  160A  158A  2000  120A  118A  	fcall	stringdir
  9262  01C4  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  9263  01C5  160A  158A  2000  120A  118A  	fcall	stringdir
  9264  01CA  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  9265  01CB  160A  158A  2000  120A  118A  	fcall	stringdir
  9266  01D0  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  9267  01D1  0831               	movf	(??_sprintf+4)^(0+128),w
  9268  01D2  023A               	subwf	(sprintf@val+3)^(0+128),w
  9269  01D3  1D03               	skipz
  9270  01D4  29DF               	goto	u7045
  9271  01D5  0830               	movf	(??_sprintf+3)^(0+128),w
  9272  01D6  0239               	subwf	(sprintf@val+2)^(0+128),w
  9273  01D7  1D03               	skipz
  9274  01D8  29DF               	goto	u7045
  9275  01D9  082F               	movf	(??_sprintf+2)^(0+128),w
  9276  01DA  0238               	subwf	(sprintf@val+1)^(0+128),w
  9277  01DB  1D03               	skipz
  9278  01DC  29DF               	goto	u7045
  9279  01DD  082E               	movf	(??_sprintf+1)^(0+128),w
  9280  01DE  0237               	subwf	sprintf@val^(0+128),w
  9281  01DF                     u7045:
  9282  01DF  1803               	skipnc
  9283  01E0  29E2               	goto	u7041
  9284  01E1  29E3               	goto	u7040
  9285  01E2                     u7041:
  9286  01E2  29E4               	goto	l3950
  9287  01E3                     u7040:
  9288  01E3  29EE               	goto	l3952
  9289  01E4                     l3950:
  9290  01E4  3001               	movlw	1
  9291  01E5  00AD               	movwf	??_sprintf^(0+128)
  9292  01E6  082D               	movf	??_sprintf^(0+128),w
  9293  01E7  07CC               	addwf	sprintf@c^(0+128),f
  9294  01E8  300A               	movlw	10
  9295  01E9  064C               	xorwf	sprintf@c^(0+128),w
  9296  01EA  1D03               	btfss	3,2
  9297  01EB  29ED               	goto	u7051
  9298  01EC  29EE               	goto	u7050
  9299  01ED                     u7051:
  9300  01ED  29AD               	goto	l3946
  9301  01EE                     u7050:
  9302  01EE                     l3952:
  9303                           
  9304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9305  01EE  084C               	movf	sprintf@c^(0+128),w
  9306  01EF  074A               	addwf	sprintf@prec^(0+128),w
  9307  01F0  00AD               	movwf	??_sprintf^(0+128)
  9308  01F1  084B               	movf	(sprintf@prec+1)^(0+128),w
  9309  01F2  1803               	skipnc
  9310  01F3  0A4B               	incf	(sprintf@prec+1)^(0+128),w
  9311  01F4  00AE               	movwf	(??_sprintf^(0+128)+1)
  9312  01F5  0843               	movf	sprintf@eexp^(0+128),w
  9313  01F6  072D               	addwf	??_sprintf^(0+128),w
  9314  01F7  00AF               	movwf	(??_sprintf+2)^(0+128)
  9315  01F8  0844               	movf	(sprintf@eexp+1)^(0+128),w
  9316  01F9  1803               	skipnc
  9317  01FA  0A44               	incf	(sprintf@eexp+1)^(0+128),w
  9318  01FB  072E               	addwf	(??_sprintf+1)^(0+128),w
  9319  01FC  00B0               	movwf	(??_sprintf+3)^(0+128)
  9320  01FD  082F               	movf	(??_sprintf+2)^(0+128),w
  9321  01FE  02BD               	subwf	sprintf@width^(0+128),f
  9322  01FF  0830               	movf	(??_sprintf+3)^(0+128),w
  9323  0200  1C03               	skipc
  9324  0201  03BE               	decf	(sprintf@width+1)^(0+128),f
  9325  0202  02BE               	subwf	(sprintf@width+1)^(0+128),f
  9326                           
  9327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9328  0203  084A               	movf	sprintf@prec^(0+128),w
  9329  0204  044B               	iorwf	(sprintf@prec+1)^(0+128),w
  9330  0205  1903               	btfsc	3,2
  9331  0206  2A08               	goto	u7061
  9332  0207  2A09               	goto	u7060
  9333  0208                     u7061:
  9334  0208  2A0F               	goto	l3956
  9335  0209                     u7060:
  9336  0209                     l3954:
  9337                           
  9338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9339  0209  30FF               	movlw	255
  9340  020A  07BD               	addwf	sprintf@width^(0+128),f
  9341  020B  1803               	skipnc
  9342  020C  0ABE               	incf	(sprintf@width+1)^(0+128),f
  9343  020D  30FF               	movlw	255
  9344  020E  07BE               	addwf	(sprintf@width+1)^(0+128),f
  9345  020F                     l3956:
  9346                           
  9347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9348  020F  3003               	movlw	3
  9349  0210  053B               	andwf	sprintf@flag^(0+128),w
  9350  0211  00AD               	movwf	??_sprintf^(0+128)
  9351  0212  3000               	movlw	0
  9352  0213  053C               	andwf	(sprintf@flag+1)^(0+128),w
  9353  0214  00AE               	movwf	(??_sprintf+1)^(0+128)
  9354  0215  082D               	movf	??_sprintf^(0+128),w
  9355  0216  042E               	iorwf	(??_sprintf^(0+128)+1),w
  9356  0217  1903               	btfsc	3,2
  9357  0218  2A1A               	goto	u7071
  9358  0219  2A1B               	goto	u7070
  9359  021A                     u7071:
  9360  021A  2A30               	goto	l3966
  9361  021B                     u7070:
  9362  021B                     l3958:
  9363                           
  9364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9365  021B  30FF               	movlw	255
  9366  021C  07BD               	addwf	sprintf@width^(0+128),f
  9367  021D  1803               	skipnc
  9368  021E  0ABE               	incf	(sprintf@width+1)^(0+128),f
  9369  021F  30FF               	movlw	255
  9370  0220  07BE               	addwf	(sprintf@width+1)^(0+128),f
  9371  0221  2A30               	goto	l3966
  9372  0222                     l3960:
  9373                           
  9374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9375  0222  3020               	movlw	32
  9376  0223  1683               	bsf	3,5	;RP0=1, select bank1
  9377  0224  1303               	bcf	3,6	;RP1=0, select bank1
  9378  0225  00AD               	movwf	??_sprintf^(0+128)
  9379  0226  0849               	movf	sprintf@sp^(0+128),w
  9380  0227  0084               	movwf	4
  9381  0228  082D               	movf	??_sprintf^(0+128),w
  9382  0229  1383               	bcf	3,7	;select IRP bank0
  9383  022A  0080               	movwf	0
  9384  022B                     l3962:
  9385  022B  3001               	movlw	1
  9386  022C  00AD               	movwf	??_sprintf^(0+128)
  9387  022D  082D               	movf	??_sprintf^(0+128),w
  9388  022E  07C9               	addwf	sprintf@sp^(0+128),f
  9389  022F  2A1B               	goto	l3958
  9390  0230                     l3966:
  9391                           
  9392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9393  0230  083E               	movf	(sprintf@width+1)^(0+128),w
  9394  0231  3A80               	xorlw	128
  9395  0232  00FF               	movwf	btemp+1
  9396  0233  3080               	movlw	128
  9397  0234  027F               	subwf	btemp+1,w
  9398  0235  1D03               	skipz
  9399  0236  2A39               	goto	u7085
  9400  0237  3001               	movlw	1
  9401  0238  023D               	subwf	sprintf@width^(0+128),w
  9402  0239                     u7085:
  9403  0239  1803               	skipnc
  9404  023A  2A3C               	goto	u7081
  9405  023B  2A3D               	goto	u7080
  9406  023C                     u7081:
  9407  023C  2A22               	goto	l3960
  9408  023D                     u7080:
  9409  023D                     l3968:
  9410                           
  9411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9412  023D  3003               	movlw	3
  9413  023E  1683               	bsf	3,5	;RP0=1, select bank1
  9414  023F  1303               	bcf	3,6	;RP1=0, select bank1
  9415  0240  053B               	andwf	sprintf@flag^(0+128),w
  9416  0241  00AD               	movwf	??_sprintf^(0+128)
  9417  0242  3000               	movlw	0
  9418  0243  053C               	andwf	(sprintf@flag+1)^(0+128),w
  9419  0244  00AE               	movwf	(??_sprintf+1)^(0+128)
  9420  0245  082D               	movf	??_sprintf^(0+128),w
  9421  0246  042E               	iorwf	(??_sprintf^(0+128)+1),w
  9422  0247  1903               	btfsc	3,2
  9423  0248  2A4A               	goto	u7091
  9424  0249  2A4B               	goto	u7090
  9425  024A                     u7091:
  9426  024A  2AFD               	goto	l291
  9427  024B                     u7090:
  9428  024B                     l3970:
  9429                           
  9430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9431  024B  302D               	movlw	45
  9432  024C  00AD               	movwf	??_sprintf^(0+128)
  9433  024D  0849               	movf	sprintf@sp^(0+128),w
  9434  024E  0084               	movwf	4
  9435  024F  082D               	movf	??_sprintf^(0+128),w
  9436  0250  1383               	bcf	3,7	;select IRP bank0
  9437  0251  0080               	movwf	0
  9438  0252                     l3972:
  9439  0252  3001               	movlw	1
  9440  0253  00AD               	movwf	??_sprintf^(0+128)
  9441  0254  082D               	movf	??_sprintf^(0+128),w
  9442  0255  07C9               	addwf	sprintf@sp^(0+128),f
  9443  0256  2AFD               	goto	l291
  9444  0257                     l3974:
  9445                           
  9446                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9447  0257  084C               	movf	sprintf@c^(0+128),w
  9448  0258  00AD               	movwf	??_sprintf^(0+128)
  9449  0259  3001               	movlw	1
  9450  025A                     u7105:
  9451  025A  1003               	clrc
  9452  025B  0DAD               	rlf	??_sprintf^(0+128),f
  9453  025C  3EFF               	addlw	-1
  9454  025D  1D03               	skipz
  9455  025E  2A5A               	goto	u7105
  9456  025F  1003               	clrc
  9457  0260  0D2D               	rlf	??_sprintf^(0+128),w
  9458  0261  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9459  0262  0084               	movwf	4
  9460  0263  160A  158A  2000  120A  118A  	fcall	stringdir
  9461  0268  1283               	bcf	3,5	;RP0=0, select bank0
  9462  0269  1303               	bcf	3,6	;RP1=0, select bank0
  9463  026A  00A0               	movwf	___lldiv@divisor
  9464  026B  160A  158A  2000  120A  118A  	fcall	stringdir
  9465  0270  00A1               	movwf	___lldiv@divisor+1
  9466  0271  160A  158A  2000  120A  118A  	fcall	stringdir
  9467  0276  00A2               	movwf	___lldiv@divisor+2
  9468  0277  160A  158A  2000  120A  118A  	fcall	stringdir
  9469  027C  00A3               	movwf	___lldiv@divisor+3
  9470  027D  1683               	bsf	3,5	;RP0=1, select bank1
  9471  027E  1303               	bcf	3,6	;RP1=0, select bank1
  9472  027F  083A               	movf	(sprintf@val+3)^(0+128),w
  9473  0280  1283               	bcf	3,5	;RP0=0, select bank0
  9474  0281  1303               	bcf	3,6	;RP1=0, select bank0
  9475  0282  00A7               	movwf	___lldiv@dividend+3
  9476  0283  1683               	bsf	3,5	;RP0=1, select bank1
  9477  0284  1303               	bcf	3,6	;RP1=0, select bank1
  9478  0285  0839               	movf	(sprintf@val+2)^(0+128),w
  9479  0286  1283               	bcf	3,5	;RP0=0, select bank0
  9480  0287  1303               	bcf	3,6	;RP1=0, select bank0
  9481  0288  00A6               	movwf	___lldiv@dividend+2
  9482  0289  1683               	bsf	3,5	;RP0=1, select bank1
  9483  028A  1303               	bcf	3,6	;RP1=0, select bank1
  9484  028B  0838               	movf	(sprintf@val+1)^(0+128),w
  9485  028C  1283               	bcf	3,5	;RP0=0, select bank0
  9486  028D  1303               	bcf	3,6	;RP1=0, select bank0
  9487  028E  00A5               	movwf	___lldiv@dividend+1
  9488  028F  1683               	bsf	3,5	;RP0=1, select bank1
  9489  0290  1303               	bcf	3,6	;RP1=0, select bank1
  9490  0291  0837               	movf	sprintf@val^(0+128),w
  9491  0292  1283               	bcf	3,5	;RP0=0, select bank0
  9492  0293  1303               	bcf	3,6	;RP1=0, select bank0
  9493  0294  00A4               	movwf	___lldiv@dividend
  9494  0295  160A  158A  272F  120A  118A  	fcall	___lldiv
  9495  029A  1283               	bcf	3,5	;RP0=0, select bank0
  9496  029B  1303               	bcf	3,6	;RP1=0, select bank0
  9497  029C  0823               	movf	?___lldiv+3,w
  9498  029D  1683               	bsf	3,5	;RP0=1, select bank1
  9499  029E  1303               	bcf	3,6	;RP1=0, select bank1
  9500  029F  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  9501  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  9502  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  9503  02A2  0822               	movf	?___lldiv+2,w
  9504  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  9505  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  9506  02A5  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  9507  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  9508  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  9509  02A8  0821               	movf	?___lldiv+1,w
  9510  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  9511  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  9512  02AB  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  9513  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  9514  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  9515  02AE  0820               	movf	?___lldiv,w
  9516  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  9517  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  9518  02B1  00BF               	movwf	sprintf@tmpval^(0+128)
  9519  02B2                     l3976:
  9520                           
  9521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9522  02B2  3000               	movlw	0
  9523  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  9524  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  9525  02B5  00A3               	movwf	___llmod@divisor+3
  9526  02B6  3000               	movlw	0
  9527  02B7  00A2               	movwf	___llmod@divisor+2
  9528  02B8  3000               	movlw	0
  9529  02B9  00A1               	movwf	___llmod@divisor+1
  9530  02BA  300A               	movlw	10
  9531  02BB  00A0               	movwf	___llmod@divisor
  9532  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  9533  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  9534  02BE  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  9535  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  9536  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  9537  02C1  00A7               	movwf	___llmod@dividend+3
  9538  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  9539  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  9540  02C4  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  9541  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  9542  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  9543  02C7  00A6               	movwf	___llmod@dividend+2
  9544  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  9545  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  9546  02CA  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  9547  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  9548  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  9549  02CD  00A5               	movwf	___llmod@dividend+1
  9550  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  9551  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  9552  02D0  083F               	movf	sprintf@tmpval^(0+128),w
  9553  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  9554  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  9555  02D3  00A4               	movwf	___llmod@dividend
  9556  02D4  160A  158A  261E  120A  118A  	fcall	___llmod
  9557  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  9558  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  9559  02DB  0823               	movf	?___llmod+3,w
  9560  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  9561  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  9562  02DE  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  9563  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  9564  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  9565  02E1  0822               	movf	?___llmod+2,w
  9566  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  9567  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  9568  02E4  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  9569  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  9570  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  9571  02E7  0821               	movf	?___llmod+1,w
  9572  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  9573  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  9574  02EA  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  9575  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  9576  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  9577  02ED  0820               	movf	?___llmod,w
  9578  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  9579  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  9580  02F0  00BF               	movwf	sprintf@tmpval^(0+128)
  9581  02F1                     l3978:
  9582                           
  9583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9584  02F1  083F               	movf	sprintf@tmpval^(0+128),w
  9585  02F2  3E30               	addlw	48
  9586  02F3  00AD               	movwf	??_sprintf^(0+128)
  9587  02F4  0849               	movf	sprintf@sp^(0+128),w
  9588  02F5  0084               	movwf	4
  9589  02F6  082D               	movf	??_sprintf^(0+128),w
  9590  02F7  1383               	bcf	3,7	;select IRP bank0
  9591  02F8  0080               	movwf	0
  9592  02F9  3001               	movlw	1
  9593  02FA  00AD               	movwf	??_sprintf^(0+128)
  9594  02FB  082D               	movf	??_sprintf^(0+128),w
  9595  02FC  07C9               	addwf	sprintf@sp^(0+128),f
  9596  02FD                     l291:	
  9597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9598                           
  9599                           
  9600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9601  02FD  3001               	movlw	1
  9602  02FE  02CC               	subwf	sprintf@c^(0+128),f
  9603  02FF  0A4C               	incf	sprintf@c^(0+128),w
  9604  0300  1D03               	btfss	3,2
  9605  0301  2B03               	goto	u7111
  9606  0302  2B04               	goto	u7110
  9607  0303                     u7111:
  9608  0303  2A57               	goto	l3974
  9609  0304                     u7110:
  9610  0304  2B18               	goto	l3986
  9611  0305                     l3980:
  9612                           
  9613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9614  0305  3030               	movlw	48
  9615  0306  1683               	bsf	3,5	;RP0=1, select bank1
  9616  0307  1303               	bcf	3,6	;RP1=0, select bank1
  9617  0308  00AD               	movwf	??_sprintf^(0+128)
  9618  0309  0849               	movf	sprintf@sp^(0+128),w
  9619  030A  0084               	movwf	4
  9620  030B  082D               	movf	??_sprintf^(0+128),w
  9621  030C  1383               	bcf	3,7	;select IRP bank0
  9622  030D  0080               	movwf	0
  9623  030E                     l3982:
  9624  030E  3001               	movlw	1
  9625  030F  00AD               	movwf	??_sprintf^(0+128)
  9626  0310  082D               	movf	??_sprintf^(0+128),w
  9627  0311  07C9               	addwf	sprintf@sp^(0+128),f
  9628  0312                     l3984:
  9629                           
  9630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9631  0312  30FF               	movlw	255
  9632  0313  07C3               	addwf	sprintf@eexp^(0+128),f
  9633  0314  1803               	skipnc
  9634  0315  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  9635  0316  30FF               	movlw	255
  9636  0317  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  9637  0318                     l3986:
  9638                           
  9639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9640  0318  0844               	movf	(sprintf@eexp+1)^(0+128),w
  9641  0319  3A80               	xorlw	128
  9642  031A  00FF               	movwf	btemp+1
  9643  031B  3080               	movlw	128
  9644  031C  027F               	subwf	btemp+1,w
  9645  031D  1D03               	skipz
  9646  031E  2B21               	goto	u7125
  9647  031F  3001               	movlw	1
  9648  0320  0243               	subwf	sprintf@eexp^(0+128),w
  9649  0321                     u7125:
  9650  0321  1803               	skipnc
  9651  0322  2B24               	goto	u7121
  9652  0323  2B25               	goto	u7120
  9653  0324                     u7121:
  9654  0324  2B05               	goto	l3980
  9655  0325                     u7120:
  9656  0325                     l3988:
  9657                           
  9658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9659  0325  1683               	bsf	3,5	;RP0=1, select bank1
  9660  0326  1303               	bcf	3,6	;RP1=0, select bank1
  9661  0327  084B               	movf	(sprintf@prec+1)^(0+128),w
  9662  0328  3A80               	xorlw	128
  9663  0329  00FF               	movwf	btemp+1
  9664  032A  3080               	movlw	128
  9665  032B  027F               	subwf	btemp+1,w
  9666  032C  1D03               	skipz
  9667  032D  2B30               	goto	u7135
  9668  032E  3009               	movlw	9
  9669  032F  024A               	subwf	sprintf@prec^(0+128),w
  9670  0330                     u7135:
  9671  0330  1C03               	skipc
  9672  0331  2B33               	goto	u7131
  9673  0332  2B34               	goto	u7130
  9674  0333                     u7131:
  9675  0333  2B3B               	goto	l3992
  9676  0334                     u7130:
  9677  0334                     l3990:
  9678                           
  9679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9680  0334  3008               	movlw	8
  9681  0335  1683               	bsf	3,5	;RP0=1, select bank1
  9682  0336  1303               	bcf	3,6	;RP1=0, select bank1
  9683  0337  00AD               	movwf	??_sprintf^(0+128)
  9684  0338  082D               	movf	??_sprintf^(0+128),w
  9685  0339  00CC               	movwf	sprintf@c^(0+128)
  9686  033A  2B41               	goto	l298
  9687  033B                     l3992:
  9688                           
  9689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9690  033B  1683               	bsf	3,5	;RP0=1, select bank1
  9691  033C  1303               	bcf	3,6	;RP1=0, select bank1
  9692  033D  084A               	movf	sprintf@prec^(0+128),w
  9693  033E  00AD               	movwf	??_sprintf^(0+128)
  9694  033F  082D               	movf	??_sprintf^(0+128),w
  9695  0340  00CC               	movwf	sprintf@c^(0+128)
  9696  0341                     l298:
  9697                           
  9698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9699  0341  084C               	movf	sprintf@c^(0+128),w
  9700  0342  00AD               	movwf	??_sprintf^(0+128)
  9701  0343  01AE               	clrf	(??_sprintf^(0+128)+1)
  9702  0344  082D               	movf	??_sprintf^(0+128),w
  9703  0345  02CA               	subwf	sprintf@prec^(0+128),f
  9704  0346  082E               	movf	(??_sprintf+1)^(0+128),w
  9705  0347  1C03               	skipc
  9706  0348  03CB               	decf	(sprintf@prec+1)^(0+128),f
  9707  0349  02CB               	subwf	(sprintf@prec+1)^(0+128),f
  9708  034A                     l3994:
  9709                           
  9710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9711  034A  084C               	movf	sprintf@c^(0+128),w
  9712  034B  1903               	btfsc	3,2
  9713  034C  2B4E               	goto	u7141
  9714  034D  2B4F               	goto	u7140
  9715  034E                     u7141:
  9716  034E  2B5A               	goto	l4000
  9717  034F                     u7140:
  9718  034F                     l3996:
  9719                           
  9720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9721  034F  302E               	movlw	46
  9722  0350  00AD               	movwf	??_sprintf^(0+128)
  9723  0351  0849               	movf	sprintf@sp^(0+128),w
  9724  0352  0084               	movwf	4
  9725  0353  082D               	movf	??_sprintf^(0+128),w
  9726  0354  1383               	bcf	3,7	;select IRP bank0
  9727  0355  0080               	movwf	0
  9728  0356                     l3998:
  9729  0356  3001               	movlw	1
  9730  0357  00AD               	movwf	??_sprintf^(0+128)
  9731  0358  082D               	movf	??_sprintf^(0+128),w
  9732  0359  07C9               	addwf	sprintf@sp^(0+128),f
  9733  035A                     l4000:
  9734                           
  9735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9736  035A  084C               	movf	sprintf@c^(0+128),w
  9737  035B  120A  158A  249D  120A  118A  	fcall	_scale
  9738  0360  1283               	bcf	3,5	;RP0=0, select bank0
  9739  0361  1303               	bcf	3,6	;RP1=0, select bank0
  9740  0362  084B               	movf	?_scale+3,w
  9741  0363  1683               	bsf	3,5	;RP0=1, select bank1
  9742  0364  1303               	bcf	3,6	;RP1=0, select bank1
  9743  0365  00B5               	movwf	(_sprintf$1113+3)^(0+128)
  9744  0366  1283               	bcf	3,5	;RP0=0, select bank0
  9745  0367  1303               	bcf	3,6	;RP1=0, select bank0
  9746  0368  084A               	movf	?_scale+2,w
  9747  0369  1683               	bsf	3,5	;RP0=1, select bank1
  9748  036A  1303               	bcf	3,6	;RP1=0, select bank1
  9749  036B  00B4               	movwf	(_sprintf$1113+2)^(0+128)
  9750  036C  1283               	bcf	3,5	;RP0=0, select bank0
  9751  036D  1303               	bcf	3,6	;RP1=0, select bank0
  9752  036E  0849               	movf	?_scale+1,w
  9753  036F  1683               	bsf	3,5	;RP0=1, select bank1
  9754  0370  1303               	bcf	3,6	;RP1=0, select bank1
  9755  0371  00B3               	movwf	(_sprintf$1113+1)^(0+128)
  9756  0372  1283               	bcf	3,5	;RP0=0, select bank0
  9757  0373  1303               	bcf	3,6	;RP1=0, select bank0
  9758  0374  0848               	movf	?_scale,w
  9759  0375  1683               	bsf	3,5	;RP0=1, select bank1
  9760  0376  1303               	bcf	3,6	;RP1=0, select bank1
  9761  0377  00B2               	movwf	_sprintf$1113^(0+128)
  9762  0378                     l4002:
  9763                           
  9764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9765  0378  0835               	movf	(_sprintf$1113+3)^(0+128),w
  9766  0379  1283               	bcf	3,5	;RP0=0, select bank0
  9767  037A  1303               	bcf	3,6	;RP1=0, select bank0
  9768  037B  00B5               	movwf	___flmul@a+3
  9769  037C  1683               	bsf	3,5	;RP0=1, select bank1
  9770  037D  1303               	bcf	3,6	;RP1=0, select bank1
  9771  037E  0834               	movf	(_sprintf$1113+2)^(0+128),w
  9772  037F  1283               	bcf	3,5	;RP0=0, select bank0
  9773  0380  1303               	bcf	3,6	;RP1=0, select bank0
  9774  0381  00B4               	movwf	___flmul@a+2
  9775  0382  1683               	bsf	3,5	;RP0=1, select bank1
  9776  0383  1303               	bcf	3,6	;RP1=0, select bank1
  9777  0384  0833               	movf	(_sprintf$1113+1)^(0+128),w
  9778  0385  1283               	bcf	3,5	;RP0=0, select bank0
  9779  0386  1303               	bcf	3,6	;RP1=0, select bank0
  9780  0387  00B3               	movwf	___flmul@a+1
  9781  0388  1683               	bsf	3,5	;RP0=1, select bank1
  9782  0389  1303               	bcf	3,6	;RP1=0, select bank1
  9783  038A  0832               	movf	_sprintf$1113^(0+128),w
  9784  038B  1283               	bcf	3,5	;RP0=0, select bank0
  9785  038C  1303               	bcf	3,6	;RP1=0, select bank0
  9786  038D  00B2               	movwf	___flmul@a
  9787  038E  1683               	bsf	3,5	;RP0=1, select bank1
  9788  038F  1303               	bcf	3,6	;RP1=0, select bank1
  9789  0390  0848               	movf	(sprintf@fval+3)^(0+128),w
  9790  0391  1283               	bcf	3,5	;RP0=0, select bank0
  9791  0392  1303               	bcf	3,6	;RP1=0, select bank0
  9792  0393  00B1               	movwf	___flmul@b+3
  9793  0394  1683               	bsf	3,5	;RP0=1, select bank1
  9794  0395  1303               	bcf	3,6	;RP1=0, select bank1
  9795  0396  0847               	movf	(sprintf@fval+2)^(0+128),w
  9796  0397  1283               	bcf	3,5	;RP0=0, select bank0
  9797  0398  1303               	bcf	3,6	;RP1=0, select bank0
  9798  0399  00B0               	movwf	___flmul@b+2
  9799  039A  1683               	bsf	3,5	;RP0=1, select bank1
  9800  039B  1303               	bcf	3,6	;RP1=0, select bank1
  9801  039C  0846               	movf	(sprintf@fval+1)^(0+128),w
  9802  039D  1283               	bcf	3,5	;RP0=0, select bank0
  9803  039E  1303               	bcf	3,6	;RP1=0, select bank0
  9804  039F  00AF               	movwf	___flmul@b+1
  9805  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  9806  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  9807  03A2  0845               	movf	sprintf@fval^(0+128),w
  9808  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  9809  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  9810  03A5  00AE               	movwf	___flmul@b
  9811  03A6  120A  158A  213C  120A  118A  	fcall	___flmul
  9812  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  9813  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  9814  03AD  0831               	movf	?___flmul+3,w
  9815  03AE  00DE               	movwf	___fltol@f1+3
  9816  03AF  0830               	movf	?___flmul+2,w
  9817  03B0  00DD               	movwf	___fltol@f1+2
  9818  03B1  082F               	movf	?___flmul+1,w
  9819  03B2  00DC               	movwf	___fltol@f1+1
  9820  03B3  082E               	movf	?___flmul,w
  9821  03B4  00DB               	movwf	___fltol@f1
  9822  03B5  120A  158A  2002  120A  118A  	fcall	___fltol
  9823  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  9824  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  9825  03BC  085E               	movf	?___fltol+3,w
  9826  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  9827  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  9828  03BF  00BA               	movwf	(sprintf@val+3)^(0+128)
  9829  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  9830  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  9831  03C2  085D               	movf	?___fltol+2,w
  9832  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  9833  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  9834  03C5  00B9               	movwf	(sprintf@val+2)^(0+128)
  9835  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  9836  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  9837  03C8  085C               	movf	?___fltol+1,w
  9838  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  9839  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  9840  03CB  00B8               	movwf	(sprintf@val+1)^(0+128)
  9841  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  9842  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  9843  03CE  085B               	movf	?___fltol,w
  9844  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  9845  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  9846  03D1  00B7               	movwf	sprintf@val^(0+128)
  9847                           
  9848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9849  03D2  2CD4               	goto	l4012
  9850  03D3                     l4004:
  9851                           
  9852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9853  03D3  084C               	movf	sprintf@c^(0+128),w
  9854  03D4  00AD               	movwf	??_sprintf^(0+128)
  9855  03D5  3001               	movlw	1
  9856  03D6                     u7155:
  9857  03D6  1003               	clrc
  9858  03D7  0DAD               	rlf	??_sprintf^(0+128),f
  9859  03D8  3EFF               	addlw	-1
  9860  03D9  1D03               	skipz
  9861  03DA  2BD6               	goto	u7155
  9862  03DB  1003               	clrc
  9863  03DC  0D2D               	rlf	??_sprintf^(0+128),w
  9864  03DD  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9865  03DE  0084               	movwf	4
  9866  03DF  160A  158A  2000  120A  118A  	fcall	stringdir
  9867  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  9868  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  9869  03E6  00A0               	movwf	___lldiv@divisor
  9870  03E7  160A  158A  2000  120A  118A  	fcall	stringdir
  9871  03EC  00A1               	movwf	___lldiv@divisor+1
  9872  03ED  160A  158A  2000  120A  118A  	fcall	stringdir
  9873  03F2  00A2               	movwf	___lldiv@divisor+2
  9874  03F3  160A  158A  2000  120A  118A  	fcall	stringdir
  9875  03F8  00A3               	movwf	___lldiv@divisor+3
  9876  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  9877  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  9878  03FB  083A               	movf	(sprintf@val+3)^(0+128),w
  9879  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  9880  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  9881  03FE  00A7               	movwf	___lldiv@dividend+3
  9882  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  9883  0400  1303               	bcf	3,6	;RP1=0, select bank1
  9884  0401  0839               	movf	(sprintf@val+2)^(0+128),w
  9885  0402  1283               	bcf	3,5	;RP0=0, select bank0
  9886  0403  1303               	bcf	3,6	;RP1=0, select bank0
  9887  0404  00A6               	movwf	___lldiv@dividend+2
  9888  0405  1683               	bsf	3,5	;RP0=1, select bank1
  9889  0406  1303               	bcf	3,6	;RP1=0, select bank1
  9890  0407  0838               	movf	(sprintf@val+1)^(0+128),w
  9891  0408  1283               	bcf	3,5	;RP0=0, select bank0
  9892  0409  1303               	bcf	3,6	;RP1=0, select bank0
  9893  040A  00A5               	movwf	___lldiv@dividend+1
  9894  040B  1683               	bsf	3,5	;RP0=1, select bank1
  9895  040C  1303               	bcf	3,6	;RP1=0, select bank1
  9896  040D  0837               	movf	sprintf@val^(0+128),w
  9897  040E  1283               	bcf	3,5	;RP0=0, select bank0
  9898  040F  1303               	bcf	3,6	;RP1=0, select bank0
  9899  0410  00A4               	movwf	___lldiv@dividend
  9900  0411  160A  158A  272F  120A  118A  	fcall	___lldiv
  9901  0416  1283               	bcf	3,5	;RP0=0, select bank0
  9902  0417  1303               	bcf	3,6	;RP1=0, select bank0
  9903  0418  0823               	movf	?___lldiv+3,w
  9904  0419  1683               	bsf	3,5	;RP0=1, select bank1
  9905  041A  1303               	bcf	3,6	;RP1=0, select bank1
  9906  041B  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  9907  041C  1283               	bcf	3,5	;RP0=0, select bank0
  9908  041D  1303               	bcf	3,6	;RP1=0, select bank0
  9909  041E  0822               	movf	?___lldiv+2,w
  9910  041F  1683               	bsf	3,5	;RP0=1, select bank1
  9911  0420  1303               	bcf	3,6	;RP1=0, select bank1
  9912  0421  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  9913  0422  1283               	bcf	3,5	;RP0=0, select bank0
  9914  0423  1303               	bcf	3,6	;RP1=0, select bank0
  9915  0424  0821               	movf	?___lldiv+1,w
  9916  0425  1683               	bsf	3,5	;RP0=1, select bank1
  9917  0426  1303               	bcf	3,6	;RP1=0, select bank1
  9918  0427  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  9919  0428  1283               	bcf	3,5	;RP0=0, select bank0
  9920  0429  1303               	bcf	3,6	;RP1=0, select bank0
  9921  042A  0820               	movf	?___lldiv,w
  9922  042B  1683               	bsf	3,5	;RP0=1, select bank1
  9923  042C  1303               	bcf	3,6	;RP1=0, select bank1
  9924  042D  00BF               	movwf	sprintf@tmpval^(0+128)
  9925  042E                     l4006:
  9926                           
  9927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9928  042E  3000               	movlw	0
  9929  042F  1283               	bcf	3,5	;RP0=0, select bank0
  9930  0430  1303               	bcf	3,6	;RP1=0, select bank0
  9931  0431  00A3               	movwf	___llmod@divisor+3
  9932  0432  3000               	movlw	0
  9933  0433  00A2               	movwf	___llmod@divisor+2
  9934  0434  3000               	movlw	0
  9935  0435  00A1               	movwf	___llmod@divisor+1
  9936  0436  300A               	movlw	10
  9937  0437  00A0               	movwf	___llmod@divisor
  9938  0438  1683               	bsf	3,5	;RP0=1, select bank1
  9939  0439  1303               	bcf	3,6	;RP1=0, select bank1
  9940  043A  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  9941  043B  1283               	bcf	3,5	;RP0=0, select bank0
  9942  043C  1303               	bcf	3,6	;RP1=0, select bank0
  9943  043D  00A7               	movwf	___llmod@dividend+3
  9944  043E  1683               	bsf	3,5	;RP0=1, select bank1
  9945  043F  1303               	bcf	3,6	;RP1=0, select bank1
  9946  0440  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  9947  0441  1283               	bcf	3,5	;RP0=0, select bank0
  9948  0442  1303               	bcf	3,6	;RP1=0, select bank0
  9949  0443  00A6               	movwf	___llmod@dividend+2
  9950  0444  1683               	bsf	3,5	;RP0=1, select bank1
  9951  0445  1303               	bcf	3,6	;RP1=0, select bank1
  9952  0446  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  9953  0447  1283               	bcf	3,5	;RP0=0, select bank0
  9954  0448  1303               	bcf	3,6	;RP1=0, select bank0
  9955  0449  00A5               	movwf	___llmod@dividend+1
  9956  044A  1683               	bsf	3,5	;RP0=1, select bank1
  9957  044B  1303               	bcf	3,6	;RP1=0, select bank1
  9958  044C  083F               	movf	sprintf@tmpval^(0+128),w
  9959  044D  1283               	bcf	3,5	;RP0=0, select bank0
  9960  044E  1303               	bcf	3,6	;RP1=0, select bank0
  9961  044F  00A4               	movwf	___llmod@dividend
  9962  0450  160A  158A  261E  120A  118A  	fcall	___llmod
  9963  0455  1283               	bcf	3,5	;RP0=0, select bank0
  9964  0456  1303               	bcf	3,6	;RP1=0, select bank0
  9965  0457  0823               	movf	?___llmod+3,w
  9966  0458  1683               	bsf	3,5	;RP0=1, select bank1
  9967  0459  1303               	bcf	3,6	;RP1=0, select bank1
  9968  045A  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  9969  045B  1283               	bcf	3,5	;RP0=0, select bank0
  9970  045C  1303               	bcf	3,6	;RP1=0, select bank0
  9971  045D  0822               	movf	?___llmod+2,w
  9972  045E  1683               	bsf	3,5	;RP0=1, select bank1
  9973  045F  1303               	bcf	3,6	;RP1=0, select bank1
  9974  0460  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  9975  0461  1283               	bcf	3,5	;RP0=0, select bank0
  9976  0462  1303               	bcf	3,6	;RP1=0, select bank0
  9977  0463  0821               	movf	?___llmod+1,w
  9978  0464  1683               	bsf	3,5	;RP0=1, select bank1
  9979  0465  1303               	bcf	3,6	;RP1=0, select bank1
  9980  0466  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  9981  0467  1283               	bcf	3,5	;RP0=0, select bank0
  9982  0468  1303               	bcf	3,6	;RP1=0, select bank0
  9983  0469  0820               	movf	?___llmod,w
  9984  046A  1683               	bsf	3,5	;RP0=1, select bank1
  9985  046B  1303               	bcf	3,6	;RP1=0, select bank1
  9986  046C  00BF               	movwf	sprintf@tmpval^(0+128)
  9987  046D                     l4008:
  9988                           
  9989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  9990  046D  083F               	movf	sprintf@tmpval^(0+128),w
  9991  046E  3E30               	addlw	48
  9992  046F  00AD               	movwf	??_sprintf^(0+128)
  9993  0470  0849               	movf	sprintf@sp^(0+128),w
  9994  0471  0084               	movwf	4
  9995  0472  082D               	movf	??_sprintf^(0+128),w
  9996  0473  1383               	bcf	3,7	;select IRP bank0
  9997  0474  0080               	movwf	0
  9998  0475  3001               	movlw	1
  9999  0476  00AD               	movwf	??_sprintf^(0+128)
 10000  0477  082D               	movf	??_sprintf^(0+128),w
 10001  0478  07C9               	addwf	sprintf@sp^(0+128),f
 10002  0479                     l4010:
 10003                           
 10004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10005  0479  084C               	movf	sprintf@c^(0+128),w
 10006  047A  00AD               	movwf	??_sprintf^(0+128)
 10007  047B  3001               	movlw	1
 10008  047C                     u7165:
 10009  047C  1003               	clrc
 10010  047D  0DAD               	rlf	??_sprintf^(0+128),f
 10011  047E  3EFF               	addlw	-1
 10012  047F  1D03               	skipz
 10013  0480  2C7C               	goto	u7165
 10014  0481  1003               	clrc
 10015  0482  0D2D               	rlf	??_sprintf^(0+128),w
 10016  0483  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10017  0484  0084               	movwf	4
 10018  0485  160A  158A  2000  120A  118A  	fcall	stringdir
 10019  048A  1283               	bcf	3,5	;RP0=0, select bank0
 10020  048B  1303               	bcf	3,6	;RP1=0, select bank0
 10021  048C  00A0               	movwf	___llmod@divisor
 10022  048D  160A  158A  2000  120A  118A  	fcall	stringdir
 10023  0492  00A1               	movwf	___llmod@divisor+1
 10024  0493  160A  158A  2000  120A  118A  	fcall	stringdir
 10025  0498  00A2               	movwf	___llmod@divisor+2
 10026  0499  160A  158A  2000  120A  118A  	fcall	stringdir
 10027  049E  00A3               	movwf	___llmod@divisor+3
 10028  049F  1683               	bsf	3,5	;RP0=1, select bank1
 10029  04A0  1303               	bcf	3,6	;RP1=0, select bank1
 10030  04A1  083A               	movf	(sprintf@val+3)^(0+128),w
 10031  04A2  1283               	bcf	3,5	;RP0=0, select bank0
 10032  04A3  1303               	bcf	3,6	;RP1=0, select bank0
 10033  04A4  00A7               	movwf	___llmod@dividend+3
 10034  04A5  1683               	bsf	3,5	;RP0=1, select bank1
 10035  04A6  1303               	bcf	3,6	;RP1=0, select bank1
 10036  04A7  0839               	movf	(sprintf@val+2)^(0+128),w
 10037  04A8  1283               	bcf	3,5	;RP0=0, select bank0
 10038  04A9  1303               	bcf	3,6	;RP1=0, select bank0
 10039  04AA  00A6               	movwf	___llmod@dividend+2
 10040  04AB  1683               	bsf	3,5	;RP0=1, select bank1
 10041  04AC  1303               	bcf	3,6	;RP1=0, select bank1
 10042  04AD  0838               	movf	(sprintf@val+1)^(0+128),w
 10043  04AE  1283               	bcf	3,5	;RP0=0, select bank0
 10044  04AF  1303               	bcf	3,6	;RP1=0, select bank0
 10045  04B0  00A5               	movwf	___llmod@dividend+1
 10046  04B1  1683               	bsf	3,5	;RP0=1, select bank1
 10047  04B2  1303               	bcf	3,6	;RP1=0, select bank1
 10048  04B3  0837               	movf	sprintf@val^(0+128),w
 10049  04B4  1283               	bcf	3,5	;RP0=0, select bank0
 10050  04B5  1303               	bcf	3,6	;RP1=0, select bank0
 10051  04B6  00A4               	movwf	___llmod@dividend
 10052  04B7  160A  158A  261E  120A  118A  	fcall	___llmod
 10053  04BC  1283               	bcf	3,5	;RP0=0, select bank0
 10054  04BD  1303               	bcf	3,6	;RP1=0, select bank0
 10055  04BE  0823               	movf	?___llmod+3,w
 10056  04BF  1683               	bsf	3,5	;RP0=1, select bank1
 10057  04C0  1303               	bcf	3,6	;RP1=0, select bank1
 10058  04C1  00BA               	movwf	(sprintf@val+3)^(0+128)
 10059  04C2  1283               	bcf	3,5	;RP0=0, select bank0
 10060  04C3  1303               	bcf	3,6	;RP1=0, select bank0
 10061  04C4  0822               	movf	?___llmod+2,w
 10062  04C5  1683               	bsf	3,5	;RP0=1, select bank1
 10063  04C6  1303               	bcf	3,6	;RP1=0, select bank1
 10064  04C7  00B9               	movwf	(sprintf@val+2)^(0+128)
 10065  04C8  1283               	bcf	3,5	;RP0=0, select bank0
 10066  04C9  1303               	bcf	3,6	;RP1=0, select bank0
 10067  04CA  0821               	movf	?___llmod+1,w
 10068  04CB  1683               	bsf	3,5	;RP0=1, select bank1
 10069  04CC  1303               	bcf	3,6	;RP1=0, select bank1
 10070  04CD  00B8               	movwf	(sprintf@val+1)^(0+128)
 10071  04CE  1283               	bcf	3,5	;RP0=0, select bank0
 10072  04CF  1303               	bcf	3,6	;RP1=0, select bank0
 10073  04D0  0820               	movf	?___llmod,w
 10074  04D1  1683               	bsf	3,5	;RP0=1, select bank1
 10075  04D2  1303               	bcf	3,6	;RP1=0, select bank1
 10076  04D3  00B7               	movwf	sprintf@val^(0+128)
 10077  04D4                     l4012:
 10078                           
 10079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10080  04D4  3001               	movlw	1
 10081  04D5  02CC               	subwf	sprintf@c^(0+128),f
 10082  04D6  0A4C               	incf	sprintf@c^(0+128),w
 10083  04D7  1D03               	btfss	3,2
 10084  04D8  2CDA               	goto	u7171
 10085  04D9  2CDB               	goto	u7170
 10086  04DA                     u7171:
 10087  04DA  2BD3               	goto	l4004
 10088  04DB                     u7170:
 10089  04DB  2CED               	goto	l4020
 10090  04DC                     l4014:
 10091                           
 10092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10093  04DC  3030               	movlw	48
 10094  04DD  00AD               	movwf	??_sprintf^(0+128)
 10095  04DE  0849               	movf	sprintf@sp^(0+128),w
 10096  04DF  0084               	movwf	4
 10097  04E0  082D               	movf	??_sprintf^(0+128),w
 10098  04E1  1383               	bcf	3,7	;select IRP bank0
 10099  04E2  0080               	movwf	0
 10100  04E3                     l4016:
 10101  04E3  3001               	movlw	1
 10102  04E4  00AD               	movwf	??_sprintf^(0+128)
 10103  04E5  082D               	movf	??_sprintf^(0+128),w
 10104  04E6  07C9               	addwf	sprintf@sp^(0+128),f
 10105  04E7                     l4018:
 10106                           
 10107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10108  04E7  30FF               	movlw	255
 10109  04E8  07CA               	addwf	sprintf@prec^(0+128),f
 10110  04E9  1803               	skipnc
 10111  04EA  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 10112  04EB  30FF               	movlw	255
 10113  04EC  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 10114  04ED                     l4020:
 10115                           
 10116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10117  04ED  084A               	movf	sprintf@prec^(0+128),w
 10118  04EE  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10119  04EF  1D03               	btfss	3,2
 10120  04F0  2CF2               	goto	u7181
 10121  04F1  2CF3               	goto	u7180
 10122  04F2                     u7181:
 10123  04F2  2CDC               	goto	l4014
 10124  04F3                     u7180:
 10125  04F3  2DB9               	goto	l4068
 10126  04F4                     l4022:
 10127                           
 10128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10129  04F4  084A               	movf	sprintf@prec^(0+128),w
 10130  04F5  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10131  04F6  1D03               	btfss	3,2
 10132  04F7  2CF9               	goto	u7191
 10133  04F8  2CFA               	goto	u7190
 10134  04F9                     u7191:
 10135  04F9  2D08               	goto	l306
 10136  04FA                     u7190:
 10137  04FA                     l4024:
 10138  04FA  083A               	movf	(sprintf@val+3)^(0+128),w
 10139  04FB  0439               	iorwf	(sprintf@val+2)^(0+128),w
 10140  04FC  0438               	iorwf	(sprintf@val+1)^(0+128),w
 10141  04FD  0437               	iorwf	sprintf@val^(0+128),w
 10142  04FE  1D03               	skipz
 10143  04FF  2D01               	goto	u7201
 10144  0500  2D02               	goto	u7200
 10145  0501                     u7201:
 10146  0501  2D08               	goto	l306
 10147  0502                     u7200:
 10148  0502                     l4026:
 10149                           
 10150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10151  0502  3001               	movlw	1
 10152  0503  07CA               	addwf	sprintf@prec^(0+128),f
 10153  0504  1803               	skipnc
 10154  0505  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 10155  0506  3000               	movlw	0
 10156  0507  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 10157  0508                     l306:
 10158                           
 10159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10160  0508  084B               	movf	(sprintf@prec+1)^(0+128),w
 10161  0509  3A80               	xorlw	128
 10162  050A  3C80               	sublw	128
 10163  050B  1D03               	skipz
 10164  050C  2D0F               	goto	u7215
 10165  050D  084A               	movf	sprintf@prec^(0+128),w
 10166  050E  024C               	subwf	sprintf@c^(0+128),w
 10167  050F                     u7215:
 10168  050F  1803               	skipnc
 10169  0510  2D12               	goto	u7211
 10170  0511  2D13               	goto	u7210
 10171  0512                     u7211:
 10172  0512  2D1A               	goto	l4030
 10173  0513                     u7210:
 10174  0513                     l4028:
 10175                           
 10176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10177  0513  1683               	bsf	3,5	;RP0=1, select bank1
 10178  0514  1303               	bcf	3,6	;RP1=0, select bank1
 10179  0515  084A               	movf	sprintf@prec^(0+128),w
 10180  0516  00AD               	movwf	??_sprintf^(0+128)
 10181  0517  082D               	movf	??_sprintf^(0+128),w
 10182  0518  00CC               	movwf	sprintf@c^(0+128)
 10183  0519  2D32               	goto	l4034
 10184  051A                     l4030:
 10185  051A  1683               	bsf	3,5	;RP0=1, select bank1
 10186  051B  1303               	bcf	3,6	;RP1=0, select bank1
 10187  051C  084B               	movf	(sprintf@prec+1)^(0+128),w
 10188  051D  3A80               	xorlw	128
 10189  051E  00AD               	movwf	??_sprintf^(0+128)
 10190  051F  3080               	movlw	128
 10191  0520  022D               	subwf	??_sprintf^(0+128),w
 10192  0521  1D03               	skipz
 10193  0522  2D25               	goto	u7225
 10194  0523  084C               	movf	sprintf@c^(0+128),w
 10195  0524  024A               	subwf	sprintf@prec^(0+128),w
 10196  0525                     u7225:
 10197  0525  1803               	skipnc
 10198  0526  2D28               	goto	u7221
 10199  0527  2D29               	goto	u7220
 10200  0528                     u7221:
 10201  0528  2D32               	goto	l4034
 10202  0529                     u7220:
 10203  0529                     l4032:
 10204                           
 10205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10206  0529  1683               	bsf	3,5	;RP0=1, select bank1
 10207  052A  1303               	bcf	3,6	;RP1=0, select bank1
 10208  052B  084C               	movf	sprintf@c^(0+128),w
 10209  052C  00AD               	movwf	??_sprintf^(0+128)
 10210  052D  01AE               	clrf	(??_sprintf^(0+128)+1)
 10211  052E  082D               	movf	??_sprintf^(0+128),w
 10212  052F  00CA               	movwf	sprintf@prec^(0+128)
 10213  0530  082E               	movf	(??_sprintf+1)^(0+128),w
 10214  0531  00CB               	movwf	(sprintf@prec+1)^(0+128)
 10215  0532                     l4034:
 10216                           
 10217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10218  0532  1683               	bsf	3,5	;RP0=1, select bank1
 10219  0533  1303               	bcf	3,6	;RP1=0, select bank1
 10220  0534  083D               	movf	sprintf@width^(0+128),w
 10221  0535  043E               	iorwf	(sprintf@width+1)^(0+128),w
 10222  0536  1903               	btfsc	3,2
 10223  0537  2D39               	goto	u7231
 10224  0538  2D3A               	goto	u7230
 10225  0539                     u7231:
 10226  0539  2D4C               	goto	l4040
 10227  053A                     u7230:
 10228  053A                     l4036:
 10229  053A  3003               	movlw	3
 10230  053B  053B               	andwf	sprintf@flag^(0+128),w
 10231  053C  00AD               	movwf	??_sprintf^(0+128)
 10232  053D  3000               	movlw	0
 10233  053E  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10234  053F  00AE               	movwf	(??_sprintf+1)^(0+128)
 10235  0540  082D               	movf	??_sprintf^(0+128),w
 10236  0541  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10237  0542  1903               	btfsc	3,2
 10238  0543  2D45               	goto	u7241
 10239  0544  2D46               	goto	u7240
 10240  0545                     u7241:
 10241  0545  2D4C               	goto	l4040
 10242  0546                     u7240:
 10243  0546                     l4038:
 10244                           
 10245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10246  0546  30FF               	movlw	255
 10247  0547  07BD               	addwf	sprintf@width^(0+128),f
 10248  0548  1803               	skipnc
 10249  0549  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10250  054A  30FF               	movlw	255
 10251  054B  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10252  054C                     l4040:
 10253                           
 10254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10255  054C  1F3C               	btfss	(sprintf@flag+1)^(0+128),6
 10256  054D  2D4F               	goto	u7251
 10257  054E  2D50               	goto	u7250
 10258  054F                     u7251:
 10259  054F  2D6B               	goto	l4048
 10260  0550                     u7250:
 10261  0550                     l4042:
 10262                           
 10263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10264  0550  084B               	movf	(sprintf@prec+1)^(0+128),w
 10265  0551  3A80               	xorlw	128
 10266  0552  00AD               	movwf	??_sprintf^(0+128)
 10267  0553  083E               	movf	(sprintf@width+1)^(0+128),w
 10268  0554  3A80               	xorlw	128
 10269  0555  022D               	subwf	??_sprintf^(0+128),w
 10270  0556  1D03               	skipz
 10271  0557  2D5A               	goto	u7265
 10272  0558  083D               	movf	sprintf@width^(0+128),w
 10273  0559  024A               	subwf	sprintf@prec^(0+128),w
 10274  055A                     u7265:
 10275  055A  1803               	skipnc
 10276  055B  2D5D               	goto	u7261
 10277  055C  2D5E               	goto	u7260
 10278  055D                     u7261:
 10279  055D  2D67               	goto	l4046
 10280  055E                     u7260:
 10281  055E                     l4044:
 10282                           
 10283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10284  055E  1683               	bsf	3,5	;RP0=1, select bank1
 10285  055F  1303               	bcf	3,6	;RP1=0, select bank1
 10286  0560  084A               	movf	sprintf@prec^(0+128),w
 10287  0561  02BD               	subwf	sprintf@width^(0+128),f
 10288  0562  084B               	movf	(sprintf@prec+1)^(0+128),w
 10289  0563  1C03               	skipc
 10290  0564  03BE               	decf	(sprintf@width+1)^(0+128),f
 10291  0565  02BE               	subwf	(sprintf@width+1)^(0+128),f
 10292  0566  2D6B               	goto	l4048
 10293  0567                     l4046:
 10294                           
 10295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10296  0567  1683               	bsf	3,5	;RP0=1, select bank1
 10297  0568  1303               	bcf	3,6	;RP1=0, select bank1
 10298  0569  01BD               	clrf	sprintf@width^(0+128)
 10299  056A  01BE               	clrf	(sprintf@width+1)^(0+128)
 10300  056B                     l4048:
 10301                           
 10302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10303  056B  083E               	movf	(sprintf@width+1)^(0+128),w
 10304  056C  3A80               	xorlw	128
 10305  056D  3C80               	sublw	128
 10306  056E  1D03               	skipz
 10307  056F  2D72               	goto	u7275
 10308  0570  083D               	movf	sprintf@width^(0+128),w
 10309  0571  024C               	subwf	sprintf@c^(0+128),w
 10310  0572                     u7275:
 10311  0572  1803               	skipnc
 10312  0573  2D75               	goto	u7271
 10313  0574  2D76               	goto	u7270
 10314  0575                     u7271:
 10315  0575  2D82               	goto	l4052
 10316  0576                     u7270:
 10317  0576                     l4050:
 10318                           
 10319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10320  0576  1683               	bsf	3,5	;RP0=1, select bank1
 10321  0577  1303               	bcf	3,6	;RP1=0, select bank1
 10322  0578  084C               	movf	sprintf@c^(0+128),w
 10323  0579  00AD               	movwf	??_sprintf^(0+128)
 10324  057A  01AE               	clrf	(??_sprintf^(0+128)+1)
 10325  057B  082D               	movf	??_sprintf^(0+128),w
 10326  057C  02BD               	subwf	sprintf@width^(0+128),f
 10327  057D  082E               	movf	(??_sprintf+1)^(0+128),w
 10328  057E  1C03               	skipc
 10329  057F  03BE               	decf	(sprintf@width+1)^(0+128),f
 10330  0580  02BE               	subwf	(sprintf@width+1)^(0+128),f
 10331  0581  2D86               	goto	l4054
 10332  0582                     l4052:
 10333                           
 10334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10335  0582  1683               	bsf	3,5	;RP0=1, select bank1
 10336  0583  1303               	bcf	3,6	;RP1=0, select bank1
 10337  0584  01BD               	clrf	sprintf@width^(0+128)
 10338  0585  01BE               	clrf	(sprintf@width+1)^(0+128)
 10339  0586                     l4054:
 10340                           
 10341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10342  0586  083D               	movf	sprintf@width^(0+128),w
 10343  0587  043E               	iorwf	(sprintf@width+1)^(0+128),w
 10344  0588  1903               	btfsc	3,2
 10345  0589  2D8B               	goto	u7281
 10346  058A  2D8C               	goto	u7280
 10347  058B                     u7281:
 10348  058B  2DA3               	goto	l4062
 10349  058C                     u7280:
 10350  058C                     l4056:
 10351                           
 10352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10353  058C  3020               	movlw	32
 10354  058D  00AD               	movwf	??_sprintf^(0+128)
 10355  058E  0849               	movf	sprintf@sp^(0+128),w
 10356  058F  0084               	movwf	4
 10357  0590  082D               	movf	??_sprintf^(0+128),w
 10358  0591  1383               	bcf	3,7	;select IRP bank0
 10359  0592  0080               	movwf	0
 10360  0593                     l4058:
 10361  0593  3001               	movlw	1
 10362  0594  00AD               	movwf	??_sprintf^(0+128)
 10363  0595  082D               	movf	??_sprintf^(0+128),w
 10364  0596  07C9               	addwf	sprintf@sp^(0+128),f
 10365  0597                     l4060:
 10366  0597  30FF               	movlw	255
 10367  0598  07BD               	addwf	sprintf@width^(0+128),f
 10368  0599  1803               	skipnc
 10369  059A  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10370  059B  30FF               	movlw	255
 10371  059C  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10372  059D  083D               	movf	sprintf@width^(0+128),w
 10373  059E  043E               	iorwf	(sprintf@width+1)^(0+128),w
 10374  059F  1D03               	btfss	3,2
 10375  05A0  2DA2               	goto	u7291
 10376  05A1  2DA3               	goto	u7290
 10377  05A2                     u7291:
 10378  05A2  2D8C               	goto	l4056
 10379  05A3                     u7290:
 10380  05A3                     l4062:
 10381                           
 10382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10383  05A3  3003               	movlw	3
 10384  05A4  053B               	andwf	sprintf@flag^(0+128),w
 10385  05A5  00AD               	movwf	??_sprintf^(0+128)
 10386  05A6  3000               	movlw	0
 10387  05A7  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10388  05A8  00AE               	movwf	(??_sprintf+1)^(0+128)
 10389  05A9  082D               	movf	??_sprintf^(0+128),w
 10390  05AA  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10391  05AB  1903               	btfsc	3,2
 10392  05AC  2DAE               	goto	u7301
 10393  05AD  2DAF               	goto	u7300
 10394  05AE                     u7301:
 10395  05AE  2DB9               	goto	l4068
 10396  05AF                     u7300:
 10397  05AF                     l4064:
 10398                           
 10399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10400  05AF  302D               	movlw	45
 10401  05B0  00AD               	movwf	??_sprintf^(0+128)
 10402  05B1  0849               	movf	sprintf@sp^(0+128),w
 10403  05B2  0084               	movwf	4
 10404  05B3  082D               	movf	??_sprintf^(0+128),w
 10405  05B4  1383               	bcf	3,7	;select IRP bank0
 10406  05B5  0080               	movwf	0
 10407  05B6  160A  118A  2CCB   	goto	l3824
 10408  05B9                     l4068:
 10409                           
 10410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10411  05B9  3001               	movlw	1
 10412  05BA  07A8               	addwf	sprintf@f^(0+128),f
 10413  05BB  30FF               	movlw	-1
 10414  05BC  0728               	addwf	sprintf@f^(0+128),w
 10415  05BD  0084               	movwf	4
 10416  05BE  160A  158A  2000  120A  118A  	fcall	stringdir
 10417  05C3  00AD               	movwf	??_sprintf^(0+128)
 10418  05C4  082D               	movf	??_sprintf^(0+128),w
 10419  05C5  00CC               	movwf	sprintf@c^(0+128)
 10420  05C6  084C               	movf	sprintf@c^(0+128),w
 10421  05C7  1D03               	btfss	3,2
 10422  05C8  2DCA               	goto	u7311
 10423  05C9  2DCD               	goto	u7310
 10424  05CA                     u7311:
 10425  05CA  160A  118A  2CBE   	goto	l3820
 10426  05CD                     u7310:
 10427  05CD                     l4070:
 10428                           
 10429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10430  05CD  0849               	movf	sprintf@sp^(0+128),w
 10431  05CE  0084               	movwf	4
 10432  05CF  1383               	bcf	3,7	;select IRP bank0
 10433  05D0  0180               	clrf	0
 10434  05D1                     l321:
 10435  05D1  0008               	return
 10436  05D2                     __end_of_sprintf:

Data Sizes:
    Strings     6
    Constant    144
    Data        0
    BSS         23
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     80      80
    BANK1            80     46      71
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 


Critical Paths under _main in COMMON

    _main->_send_crct
    _sprintf->___awdiv
    _sprintf->___llmod
    _sprintf->___wmul
    _sprintf->_isdigit
    _scale->___awdiv
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    ___flmul->___awdiv
    ___flmul->___lwmod
    _send_crct->_send_char

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   39317
                                             45 BANK1      1     1      0
                            _cfg_clk
                           _cfg_inte
                             _cfg_io
                           _cfg_iocb
                          _cfg_usart
                               _conv
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   38451
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9540
                                             40 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              5 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              6 COMMON     1     1      0
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7433
                                             40 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              4 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5693
                                             14 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              5 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              0 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              5 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              5 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              5 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             59 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             60 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4     721
                                             14 BANK0     13     9      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_iocb                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_inte                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cfg_clk
   _cfg_inte
   _cfg_io
   _cfg_iocb
   _cfg_usart
   _conv
     ___xxtofl
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Aug 13 02:44:07 2021

                      _V 00D8                        _v 00E3                        pc 0002  
                     _f1 00D9                       _f2 00CE             ___awdiv@sign 002B  
                     _op 0077                       fsr 0004      ___wmul@multiplicand 0022  
    __Umul8_16@word_mpld 0024                      l102 1C23                      l111 1BF5  
                    l120 1C48                      l105 1BE7                      l114 1BED  
                    l123 07F5                      l108 07F3                      l126 07FD  
                    l231 07DE                      l129 1C98                      l321 05D1  
                    l306 0508                      l260 1597                      l325 1C57  
                    l238 0FFF                      l511 1D9C                      l327 1C6F  
                    l512 1DB8                      l520 10B2                      l513 1DCD  
                    l361 1F96                      l506 092E                      l291 02FD  
                    l516 102D                      l524 100E                      l542 122B  
                    l519 1099                      l535 0868                      l543 119D  
                    l631 1D7D                      l528 087D                      l553 121E  
                    l641 1D37                      l538 087D                      l546 11EE  
                    l298 0341                      l491 1ECE                      l652 128F  
                    l812 1C0F                      l805 1138                      l581 1E73  
                    l806 1144                      l478 1FFF                      l495 093B  
                    l656 1336                      l496 08A0                      l760 0C90  
                    l673 1401                      l665 14B3                      l658 130D  
                    l754 0C08                      l683 1447                      l499 08FE  
                    l748 0C9C                      l677 1425                      l694 14A7  
                    l686 1485                      l695 14B3                      l767 1CAF  
                    l792 10D7                      l769 1CC1                      l794 116E  
                    l698 1E1D                      l798 111C                      _isr 1CC2  
                    fsr0 0004                      indf 0000             ___awmod@sign 0025  
           ___flmul@aexp 003C             ___flmul@bexp 0041             ___flmul@sign 003B  
           ___flmul@temp 0046             ___flmul@prod 0042             ___fltol@exp1 0065  
                   l2300 1285                     l2220 1D4C                     l2212 1D38  
                   l2310 12A1                     l2302 1287                     l2230 1D6C  
                   l2222 1D50                     l2214 1D3C                     l2400 1417  
                   l2320 12B5                     l2312 12A5                     l2304 1295  
                   l2232 1D73                     l2224 1D54                     l2216 1D42  
                   l4000 035A                     l2410 142E                     l2402 1420  
                   l2330 12C9                     l2322 12B9                     l2314 12A9  
                   l2306 1299                     l2226 1D65                     l2218 1D45  
                   l2234 1D79                     l4010 0479                     l4002 0378  
                   l2420 143E                     l2412 1433                     l2404 1424  
                   l2340 12DA                     l2332 12CD                     l2324 12BD  
                   l2316 12AD                     l2308 129D                     l2260 122C  
                   l2228 1D6B                     l4020 04ED                     l4004 03D3  
                   l4012 04D4                     l2430 145F                     l2422 1444  
                   l2406 1429                     l2414 1435                     l2350 1320  
                   l2342 12F1                     l2334 12D1                     l2326 12C1  
                   l2318 12B1                     l2270 1243                     l2262 1233  
                   l4030 051A                     l4014 04DC                     l4006 042E  
                   l4022 04F4                     l2440 1497                     l2432 1463  
                   l2408 142C                     l2416 1439                     l2360 133F  
                   l2352 1321                     l2344 1311                     l2336 12D5  
                   l2328 12C5                     l2280 125B                     l2272 1248  
                   l2264 1239                     l3400 1FFB                     l4040 054C  
                   l4032 0529                     l4024 04FA                     l4016 04E3  
                   l4008 046D                     l2450 14AE                     l2442 149C  
                   l2434 1481                     l2426 144C                     l2418 143A  
                   l2370 1367                     l2354 132A                     l2346 131A  
                   l2338 12D9                     l2290 1271                     l2282 1260  
                   l2274 1250                     l2266 123D                     l3410 1E80  
                   l4050 0576                     l4042 0550                     l4034 0532  
                   l4026 0502                     l4018 04E7                     l4130 15AD  
                   l2452 14B2                     l2444 149D                     l2436 148A  
                   l2428 1451                     l2380 1380                     l2372 1370  
                   l2364 1348                     l2348 131C                     l2356 132E  
                   l2292 1272                     l2284 1266                     l2276 1251  
                   l2268 123E                     l3500 0996                     l3420 1E94  
                   l3412 1E82                     l3404 1E74                     l4060 0597  
                   l4052 0582                     l4044 055E                     l4036 053A  
                   l4028 0513                     l3270 1C3D                     l2446 14A1  
                   l2438 148F                     l2390 13E4                     l2374 1372  
                   l2366 135F                     l2358 133A                     l2382 1385  
                   l2294 1277                     l2286 1267                     l2278 1253  
                   l3350 1CA5                     l3510 09B9                     l3502 099B  
                   l3430 1EB3                     l3422 1E9B                     l3414 1E86  
                   l3406 1E77                     l4062 05A3                     l4054 0586  
                   l4046 0567                     l4038 0546                     l4070 05CD  
                   l3264 1C27                     l2448 14A3                     l2384 139B  
                   l2392 13F3                     l2376 1376                     l2368 1363  
                   l2296 127C                     l2288 126D                     l2800 1F7E  
                   l2720 087E                     l3352 1CA9                     l3600 0C94  
                   l3520 0A47                     l3512 09C6                     l3504 09A0  
                   l3360 1F97                     l3432 1EBA                     l3424 1E9F  
                   l3416 1E8B                     l3408 1E7B                     l4064 05AF  
                   l4056 058C                     l4048 056B                     l4080 1ECF  
                   l3266 1C2A                     l2394 1409                     l2386 13D9  
                   l2378 1377                     l2298 1284                     l2802 1F7F  
                   l2722 088B                     l3354 1CB8                     l3346 1C9C  
                   l3530 0AA9                     l3522 0A63                     l3514 09E3  
                   l3450 1D12                     l3442 1CFC                     l3370 1FA9  
                   l3362 1F9A                     l3426 1EA3                     l3418 1E91  
                   l3434 1EC0                     l4058 0593                     l4090 1EE8  
                   l4082 1ED4                     l3268 1C35                     l2396 140E  
                   l2388 13DF                     l2804 1F88                     l2900 1E65  
                   l2740 08C5                     l2732 08A1                     l3700 11FA  
                   l3356 1CBD                     l3348 1C9E                     l3540 0B39  
                   l3532 0AC6                     l3524 0A6C                     l3516 09FF  
                   l3508 09A9                     l3452 1D16                     l3444 1D04  
                   l3460 1D33                     l3612 06EA                     l3604 05D5  
                   l2660 1C06                     l3380 1FBD                     l3372 1FAE  
                   l3364 1F9E                     l3436 1EC5                     l3428 1EAD  
                   l4068 05B9                     l4092 1F08                     l4084 1ED9  
                   l2806 1F8E                     l2902 1E6B                     l2750 08F8  
                   l2742 08CE                     l2734 08A9                     l2726 0894  
                   l3710 1223                     l3702 120C                     l3550 0BCB  
                   l3542 0B66                     l3534 0ADF                     l3526 0A7C  
                   l3518 0A2B                     l3470 094D                     l3454 1D20  
                   l3446 1D07                     l3614 06F0                     l3606 05DB  
                   l2662 1C0C                     l3390 1FE3                     l3382 1FC4  
                   l3374 1FB2                     l3366 1FA3                     l3438 1ECA  
                   l3622 0CA0                     l4094 1F1A                     l4086 1EDE  
                   l3800 1146                     l3720 1C5E                     l2752 0902  
                   l2760 091C                     l2744 08E0                     l2736 08BA  
                   l3552 0BD4                     l3560 0BE8                     l3544 0B8C  
                   l3536 0AFC                     l3528 0A99                     l3480 0962  
                   l3472 094E                     l3464 093C                     l3456 1D26  
                   l3448 1D0E                     l2664 1C0E                     l2656 1BFF  
                   l3392 1FE4                     l3384 1FC8                     l3376 1FB4  
                   l3368 1FA5                     l3640 0E26                     l3624 0CA4  
                   l4096 1F1E                     l4088 1EE3                     l3802 115C  
                   l2594 07F5                     l3730 1D94                     l2906 1DCE  
                   l2850 0802                     l3722 1C65                     l3714 1C49  
                   l2746 08EE                     l2738 08BC                     l3562 0BEC  
                   l3554 0BD8                     l3546 0BB4                     l3538 0B29  
                   l3490 097A                     l3482 096A                     l3474 0953  
                   l3466 0943                     l3458 1D2D                     l3618 079B  
                   l2658 1C00                     l3394 1FEB                     l3386 1FCC  
                   l3378 1FBA                     l3634 0D97                     l3626 0CA6  
                   l4098 1F24                     l3804 1161                     l3812 1C73  
                   l2596 07FB                     l3732 1DB0                     l3740 100F  
                   l2908 1DD2                     l2860 082E                     l2852 080F  
                   l3724 1C6B                     l3716 1C4B                     l2748 08EF  
                   l3708 1213                     l3580 0C3D                     l3572 0C0D  
                   l3564 0BED                     l3556 0BD9                     l3548 0BBD  
                   l3492 097F                     l3484 096F                     l3476 0958  
                   l3468 0949                     l3388 1FDD                     l3396 1FF1  
                   l3652 0F44                     l3636 0D9E                     l3628 0CAD  
                   l3644 0E53                     l3900 1733                     l3820 14BE  
                   l3806 1165                     l3814 1C90                     l3734 1DCA  
                   l3750 1071                     l3742 1025                     l2862 0836  
                   l2790 1F44                     l3718 1C51                     l2766 0923  
                   l2758 090A                     l3662 116F                     l3590 0C74  
                   l3574 0C12                     l3582 0C43                     l3566 0BF1  
                   l3558 0BE2                     l3494 0984                     l3486 0975  
                   l3478 0960                     l3398 1FF6                     l3654 0F4B  
                   l3646 0E5A                     l3910 17A3                     l3902 175A  
                   l3830 14E4                     l3822 14C4                     l2960 1C1A  
                   l3808 1166                     l3736 1DCC                     l3728 1D7E  
                   l3752 1075                     l3744 1041                     l3760 1002  
                   l2880 085D                     l2872 0844                     l2864 0838  
                   l2856 0818                     l2792 1F51                     l2768 0933  
                   l3680 11B5                     l3664 1182                     l3592 0C76  
                   l3584 0C50                     l3576 0C20                     l3568 0C05  
                   l3496 098C                     l3488 0979                     l3920 007D  
                   l3912 17EA                     l3904 1763                     l3832 14E8  
                   l3840 1532                     l3824 14CB                     l2970 1C22  
                   l2962 1C1B                     l3770 10BB                     l3754 10AF  
                   l3746 1049                     l3762 100C                     l2882 086D  
                   l2866 083C                     l2874 0856                     l2858 082D  
                   l2794 1F55                     l2786 1F2F                     l2890 1E2B  
                   l3690 11E0                     l3682 11BE                     l3674 119E  
                   l3594 0C84                     l3586 0C5B                     l3578 0C24  
                   l3498 098E                     l3658 0FD3                     l3922 00A6  
                   l3914 001E                     l3906 178C                     l3850 156B  
                   l3842 1540                     l3834 150B                     l3826 14D0  
                   l3818 14B7                     l2972 1BEE                     l2964 1C1C  
                   l2956 1C10                     l2980 07E6                     l3780 10E8  
                   l3772 10BF                     l3756 10B1                     l3748 104D  
                   l3764 100E                     l2884 0872                     l2796 1F5E  
                   l2788 1F41                     l2892 1E38                     l3692 11E8  
                   l3684 11C7                     l3676 11A4                     l3668 118B  
                   l3596 0C88                     l3588 0C6A                     l3940 01AB  
                   l3932 0120                     l3924 00AF                     l3916 0047  
                   l3908 1794                     l3852 157E                     l3844 1541  
                   l3836 151E                     l3828 14D4                     l2966 1C1E  
                   l2958 1C19                     l2974 1BE8                     l2990 07F0  
                   l2982 07EA                     l3790 1113                     l3782 10ED  
                   l3774 10CF                     l2798 1F70                     l2894 1E3C  
                   l2886 1E1E                     l3694 11F2                     l3686 11D5  
                   l3678 11B3                     l3598 0C89                     l3950 01E4  
                   l3926 00B7                     l3918 006E                     l3934 0129  
                   l3870 15CB                     l3862 1599                     l3854 1582  
                   l3846 1545                     l3838 1522                     l2992 1BE2  
                   l2968 1C21                     l2976 1BEC                     l2984 07EB  
                   l3792 1123                     l3784 10FA                     l3776 10DF  
                   l3768 10B6                     l2896 1E4E                     l2888 1E28  
                   l3688 11DF                     l3960 0222                     l3952 01EE  
                   l3936 015E                     l3928 00D5                     l3880 163D  
                   l3872 15D9                     l3864 15B5                     l3848 1548  
                   l3856 1593                     l2994 1BE6                     l2986 07EE  
                   l2978 07DF                     l3794 112E                     l3786 1101  
                   l2898 1E5C                     l3970 024B                     l3962 022B  
                   l3954 0209                     l3946 01AD                     l3938 01A9  
                   l3890 169C                     l3882 1641                     l3874 15DD  
                   l3866 15C3                     l3858 1595                     l2988 07EF  
                   l3796 1132                     l3788 1105                     l3980 0305  
                   l3972 0252                     l3956 020F                     l3892 16BF  
                   l3884 1668                     l3876 1604                     l3868 15C7  
                   l3798 113C                     l3990 0334                     l3982 030E  
                   l3974 0257                     l3958 021B                     l3966 0230  
                   l3894 16C3                     l3886 1673                     l3878 1639  
                   l3992 033B                     l3984 0312                     l3976 02B2  
                   l3968 023D                     l3896 16C9                     l3888 1679  
                   l3994 034A                     l3986 0318                     l3978 02F1  
                   l3898 16E8                     l3996 034F                     l3988 0325  
                   ?_isr 0070                     l3998 0356                     STR_1 1896  
                   _CONT 0078                     u3010 1D54                     u3011 1D53  
                   _IOCB 0096                     u3005 1D46                     u3030 1D65  
                   u3031 1D64                     u3200 1299                     u3120 123D  
                   u3201 1298                     u3121 123C                     u3025 1D55  
                   u3210 12F1                     u3130 1243                     u3050 1D79  
                   u3211 12F0                     u3131 1242                     u3051 1D78  
                   u3035 1D61                     u3220 12FC                     u3140 1248  
                   u3301 1351                     u3221 12FA                     u3141 1247  
                   u3045 1D6D                     u3310 1363                     u3302 1358  
                   u3230 12FD                     u3150 1266                     u3311 1362  
                   u3303 135F                     u3215 12ED                     u3151 1265  
                   u3400 140E                     u3320 1367                     u3240 1311  
                   u3160 1271                     u3401 140D                     u3321 1366  
                   u3241 1310                     u3161 1270                     u3330 1376  
                   u3250 1320                     u3170 1277                     u4210 1C06  
                   u3331 1375                     u3251 131F                     u3171 1276  
                   u4211 1C05                     u3500 1463                     u3420 1424  
                   u3180 127C                     u4220 1C0C                     u3501 1462  
                   u3421 1423                     u3181 127B                     u4221 1C0B  
                   u3510 1472                     u3430 1429                     u3350 139B  
                   u3270 1336                     u3190 1295                     u3431 1428  
                   u3415 1419                     u3351 139A                     u3271 1335  
                   u3191 1294                     u3520 1481                     u3440 1433  
                   u3280 133A                     u6000 0B72                     u3521 1480  
                   u3441 1432                     u3361 13B2                     u3353 1397  
                   u3345 1379                     u3281 1339                     u3265 1323  
                   u3530 148A                     u3450 1439                     u3370 13C6  
                   u3362 13B3                     u3290 133F                     u4410 08FE  
                   u3531 1489                     u3515 146D                     u3451 1438  
                   u3371 13C7                     u3363 13B8                     u3291 133E  
                   u4411 08FD                     u6011 0B7E                     u3540 148F  
                   u3460 143E                     u3380 13E4                     u3372 13CC  
                   u3364 13B9                     u4420 0902                     u6100 0C05  
                   u6020 0B9A                     u6012 0B85                     u3541 148E  
                   u3461 143D                     u3381 13E3                     u3373 13CD  
                   u3365 13BE                     u4421 0901                     u4405 08F1  
                   u6101 0C04                     u6013 0B8C                     u6005 0B6D  
                   u3550 149C                     u3470 1444                     u3390 1409  
                   u3366 13BF                     u4430 0909                     u6110 0C0C  
                   u3551 149B                     u3471 1443                     u3391 1408  
                   u4431 0908                     u6111 0C0B                     u6031 0BA6  
                   u3560 14A1                     u3480 144B                     u4360 088B  
                   u6120 0C12                     u6032 0BAD                     u7000 006E  
                   u3561 14A0                     u3481 144A                     u4361 088A  
                   u6121 0C11                     u6033 0BB4                     u6025 0B95  
                   u7001 006D                     u3570 14B2                     u3490 1451  
                   u4530 1F41                     u4450 091B                     u4370 089F  
                   u6130 0C24                     u7010 007D                     u3571 14B1  
                   u3491 1450                     u4531 1F40                     u4451 091A  
                   u4371 089E                     u6131 0C23                     u7011 007C  
                   u4460 0922                     u6140 0C33                     u6060 0BD8  
                   u6220 06F0                     u7020 00A6                     u4461 0921  
                   u4445 090B                     u6061 0BD7                     u6045 0BB6  
                   u6221 06EF                     u6205 0654                     u7021 00A5  
                   u4710 080F                     u4550 1F55                     u4390 08E0  
                   u6150 0C50                     u6310 0D9E                     u7110 0304  
                   u4711 080E                     u4551 1F54                     u4391 08DF  
                   u6151 0C4F                     u6055 0BCD                     u6215 06A9  
                   u6311 0D9D                     u7111 0303                     u7015 0079  
                   u4800 0872                     u4720 0826                     u4480 0933  
                   u6160 0C6A                     u6080 0BEC                     u5600 1FCC  
                   u7200 0502                     u7120 0325                     u7040 01E3  
                   u4801 0871                     u4545 1F46                     u4481 0932  
                   u4385 08C7                     u6161 0C69                     u6145 0C2E  
                   u6081 0BEB                     u5601 1FCB                     u6305 0D56  
                   u7201 0501                     u7121 0324                     u7105 025A  
                   u7041 01E2                     u4730 083C                     u4570 1F70  
                   u4810 1E28                     u5530 1CA9                     u6170 0C88  
                   u6090 0BF1                     u7210 0513                     u7130 0334  
                   u7050 01EE                     u4731 083B                     u4571 1F6F  
                   u4811 1E27                     u4475 0925                     u4395 08DC  
                   u5531 1CA8                     u6171 0C87                     u6155 0C4C  
                   u6091 0BF0                     u6075 0BDB                     u6235 070D  
                   u7211 0512                     u7131 0333                     u7051 01ED  
                   u7035 01B0                     u4740 0843                     u6500 11F9  
                   u6180 05DB                     u5620 1FDD                     u5700 1EA3  
                   u6260 0CA4                     u7300 05AF                     u7220 0529  
                   u7140 034F                     u7060 0209                     u4741 0842  
                   u4725 0821                     u4565 1F57                     u6501 11F8  
                   u6165 0C66                     u6245 075A                     u6181 05DA  
                   u5621 1FDC                     u5701 1EA2                     u6405 0F5E  
                   u6325 0DB1                     u6261 0CA3                     u7301 05AE  
                   u7221 0528                     u7141 034E                     u7125 0321  
                   u7061 0208                     u7045 01DF                     u3950 07FB  
                   u4590 1F8E                     u4830 1E3C                     u6430 1182  
                   u5550 1CBD                     u2990 1D42                     u5710 1EAD  
                   u6350 0E5A                     u6270 0CAD                     u7310 05CD  
                   u7230 053A                     u7070 021B                     u3951 07FA  
                   u4591 1F8D                     u4575 1F6C                     u4831 1E3B  
                   u6431 1181                     u5551 1CBC                     u2991 1D41  
                   u6255 07A6                     u5615 1FCD                     u5711 1EAC  
                   u6415 0F9A                     u6351 0E59                     u6335 0DED  
                   u6271 0CAC                     u7311 05CA                     u7231 0539  
                   u7215 050F                     u7135 0330                     u7071 021A  
                   u5480 1C48                     u6600 1D94                     u4760 0855  
                   u4840 1E4E                     u6520 120B                     u6440 119C  
                   u5800 1D33                     u5640 1FF1                     u5560 1F9E  
                   u7240 0546                     u7080 023D                     u5481 1C47  
                   u6601 1D93                     u4761 0854                     u4585 1F80  
                   u4841 1E4D                     u4825 1E2D                     u6521 120A  
                   u6441 119B                     u5545 1CB0                     u5801 1D32  
                   u5641 1FF0                     u5625 1FD9                     u5561 1F9D  
                   u6425 0FD6                     u6345 0E29                     u7241 0545  
                   u7225 0525                     u7081 023C                     u6610 1DB0  
                   u4770 085C                     u6530 1212                     u5810 094D  
                   u5650 1FF6                     u5570 1FA9                     u5730 1EC0  
                   u7250 0550                     u7170 04DB                     u7090 024B  
                   i1l91 1CF5                     u6611 1DAF                     u4771 085B  
                   u4755 0845                     u6531 1211                     u6515 11FB  
                   u5811 094C                     u6195 05F8                     u5651 1FF5  
                   u5635 1FE5                     u5571 1FA8                     u5731 1EBF  
                   u5715 1EA9                     u7251 054F                     u7171 04DA  
                   u7155 03D6                     u7091 024A                     u6620 1DCA  
                   u6700 100C                     u4860 1E6B                     u6460 11D5  
                   u5820 0953                     u5580 1FBA                     u5740 1EC5  
                   u5660 1E7B                     u7260 055E                     u7180 04F3  
                   u6621 1DC9                     u6701 100B                     u4861 1E6A  
                   u4845 1E4A                     u6461 11D4                     u5901 0A0D  
                   u5821 0952                     u5581 1FB9                     u5741 1EC4  
                   u5725 1EB4                     u5661 1E7A                     u6365 0E7C  
                   u6285 0CCF                     u7261 055D                     u7181 04F2  
                   u7165 047C                     u7085 0239                     u6710 10BB  
                   u6630 1025                     u4790 086D                     u6550 1223  
                   u5902 0A14                     u5830 0958                     u5750 1D04  
                   u5670 1E86                     u6390 0F4B                     u7270 0576  
                   u7190 04FA                     u6711 10BA                     u6631 1024  
                   u4791 086C                     u4855 1E5D                     u6551 1222  
                   u6455 11C0                     u5911 0A39                     u5903 0A1B  
                   u5831 0957                     u5751 1D03                     u5671 1E85  
                   u6391 0F4A                     u6375 0EB8                     u6295 0D0B  
                   u7271 0575                     u7191 04F9                     u7327 1F28  
                   u6800 1138                     u6720 10BF                     u6640 1041  
                   u6560 1C51                     u6480 11EE                     u5912 0A40  
                   u5840 0979                     u5680 1E91                     u7280 058C  
                   u6801 1137                     u6721 10BE                     u6625 1DC6  
                   u6641 1040                     u4785 085F                     u6561 1C50  
                   u6545 1215                     u6481 11ED                     u6465 11D1  
                   u5921 0A55                     u5913 0A47                     u5841 0978  
                   u5681 1E90                     u6385 0F03                     u7281 058B  
                   u7265 055A                     u6810 113C                     u6730 10DF  
                   u6650 104D                     u6490 11F2                     u5922 0A5C  
                   u5850 097F                     u5770 1D16                     u7290 05A3  
                   u6811 113B                     u6731 10DE                     u6651 104C  
                   u6491 11F1                     u6475 11E1                     u5923 0A63  
                   u5851 097E                     u5771 1D15                     u5595 1FBE  
                   u7291 05A2                     u7275 0572                     u6820 1151  
                   u5860 0984                     u5780 1D20                     u6900 15C3  
                   u6661 105C                     u5941 0A8B                     u5861 0983  
                   u5781 1D1F                     u5765 1D08                     u6901 15C0  
                   u6830 1161                     u6750 1100                     u6670 1075  
                   u6662 105D                     u6590 1C6B                     u5942 0A92  
                   u5870 099B                     u6910 15C7                     u6831 1160  
                   u6751 10FF                     u6671 1074                     u6663 1062  
                   u6591 1C6A                     u6575 1C58                     u5951 0AB8  
                   u5943 0A99                     u5935 0A65                     u5871 099A  
                   u5695 1E95                     u6911 15C6                     u6840 1165  
                   u6664 1063                     u5952 0ABF                     u5880 09A0  
                   u6920 1604                     u6841 1164                     u6825 114C  
                   u6745 10F2                     u6681 1084                     u6665 1068  
                   u6585 1C5F                     u5953 0AC6                     u5881 099F  
                   u5785 1D1C                     u6921 1603                     u6770 1122  
                   u6690 10AF                     u6682 1085                     u6666 1069  
                   u6930 1668                     u6850 14C4                     u6771 1121  
                   u6691 10AE                     u6683 108A                     u5971 0AEE  
                   u5891 09F1                     u5795 1D27                     u6931 1667  
                   u6851 14C3                     u6684 108B                     u5972 0AF5  
                   u5892 09F8                     u6940 16C3                     u6860 14E4  
                   u6765 1114                     u6685 1090                     u5981 0B1B  
                   u5973 0AFC                     u5965 0AC8                     u5893 09FF  
                   u6941 16C2                     u6861 14E3                     u6790 1132  
                   u6686 1091                     u5982 0B22                     u6950 175A  
                   u6870 1532                     u6791 1131                     u6695 10AB  
                   u5991 0B48                     u5983 0B29                     u6951 1759  
                   u6871 1531                     u5992 0B4F                     u6960 178C  
                   u6880 1540                     u6785 1127                     u5993 0B56  
                   u6961 178B                     u6881 153F                     u6970 17A3  
                   u6890 1592                     u6971 17A2                     u6891 1591  
                   u6980 001E                     u6981 17FA                     u6990 0047  
                   u6991 0046                     u6975 179F                     u6985 17F5  
                   _TXIF 0064                     _WPUB 0095                     _conv 1C70  
                   _main 1ECF                     btemp 007E                     start 000C  
           _sprintf$1113 00B2                    ??_isr 0070            ___fltol@sign1 0064  
                  ?_conv 002E          __end_of___fladd 14B4                    ?_main 0070  
        __end_of___awdiv 2000          __end_of___flneg 100F          __end_of___awmod 1ECF  
        __end_of___flmul 0C9D          __end_of___flsub 1E1E          __end_of___fltol 087E  
                  _ANSEL 0188          __end_of___lldiv 1F97          ___awdiv@divisor 0026  
        __end_of___llmod 1E74          __end_of___lwdiv 1D7E          __end_of___lwmod 1D38  
        ___awdiv@counter 002A                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
        __end_of_cfg_clk 1BE8                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019          __end_of_dpowers 1896  
                  _scale 0C9D          __end_of_isdigit 1C10                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 05D2  
        __initialization 000F             __end_of_conv 1C99             __end_of_main 1F2F  
                 ??_conv 0032                   ??_main 00CD     __size_of__tdiv_to_l_ 00BD  
       ___llmod@dividend 0024                   ?_scale 0048         ___awdiv@dividend 0028  
                 _ANSELH 0189                   i1l3280 1CE5                   i1l3272 1CC2  
                 i1l3282 1CEB                   i1l3274 1CC8                   i1l3284 1CF0  
                 i1l3276 1CDB                   i1l3286 1CF4                   i1l3278 1CDF  
                 u550_20 1CDF                   u550_21 1CDE                   u551_20 1CE5  
                 u551_21 1CE4                   u552_20 1CF0                   u552_21 1CEF  
                 u549_20 1CC8                   u549_21 1CC7                   u733_27 1CD4  
                 _SPBRGH 009A         __end_of_cfg_iocb 1BEE         __end_of_cfg_inte 1BF6  
       __end_of___xxtofl 116F         __end_of__powers_ 183A                   ___flge 100F  
                 ___fleq 1D7E                ??___fladd 0064                   ___wmul 1C49  
              ??___awdiv 0076                   _cfg_io 1C10                ??___flneg 0075  
              ??___awmod 0075                ??___flmul 0036                ??___flsub 0077  
              ??___fltol 005F                ??___lldiv 0075                ??___llmod 0075  
              ??___lwdiv 0028                ??___lwmod 0075                ??_cfg_clk 0075  
                 _fround 05D2         ___awdiv@quotient 002C          ___awmod@divisor 0020  
        ___awmod@counter 0024                   conv@aa 003A                ??_isdigit 0075  
     __size_of__Umul8_16 0029                   saved_w 007E                ??_sprintf 00AD  
             ___flge@ff1 0020               ___flge@ff2 0024             ___xxtofl@arg 002A  
           ___xxtofl@exp 0029             ___xxtofl@val 0020               ___fleq@ff1 0020  
             ___fleq@ff2 0024  __end_of__initialization 001A               ___flneg@f1 0020  
             ___fltol@f1 005B           __pcstackCOMMON 0070       __size_of_cfg_usart 0015  
          __end_of_scale 1000               __div_to_l_ 087E           _OPTION_REGbits 0081  
        __div_to_l_@exp1 002D          __div_to_l_@cntr 002C                  ??_scale 004C  
        __div_to_l_@quot 0028             sprintf@width 00BD               __pbssBANK1 00CE  
          __div_to_l_@f1 0020            __div_to_l_@f2 0024        __end_of__Umul8_16 1CC2  
             __pmaintext 1ECF                  ?___flge 0020                  ?___fleq 0020  
                ?___wmul 0020                  ?_cfg_io 0070               __pintentry 0004  
     __size_of_send_char 000A       __size_of_send_crct 0025                  ?_fround 0048  
              ?_cfg_iocb 0070                ?_cfg_inte 0070                ?___xxtofl 0020  
            send_crct@st 0022               __stringtab 1800        __end_of_cfg_usart 07F4  
      __end_of__npowers_ 186E               _scale$1112 0056          __size_of___flge 00A4  
        __size_of___fleq 0050                  ___fladd 122C                  ___awdiv 1F97  
                ___flneg 1002                  ___awmod 1E74                  ___flmul 093C  
                ___flsub 1DCE                  ___fltol 0802                  ___lldiv 1F2F  
        __size_of___wmul 0027                  ___llmod 1E1E          __size_of_cfg_io 0014  
                ___lwdiv 1D38                  ___lwmod 1CFC                  _cfg_clk 1BE2  
        __size_of_fround 020D                  __ptext1 14B4                  __ptext2 0C9D  
                __ptext3 1E74                  __ptext4 1F97                  __ptext5 1BFE  
                __ptext6 05D2                  __ptext7 1CFC                  __ptext8 1D38  
                __ptext9 093C              ?__div_to_l_ 0020                  _dpowers 186E  
             ??_cfg_iocb 0075               ??_cfg_inte 0075                  _isdigit 1BFE  
           __size_of_isr 003A               ??___xxtofl 0024         ___awmod@dividend 0022  
                _sprintf 14B4                  clrloop0 1BF7     end_of_initialization 001A  
      __end_of_send_char 07FE        __end_of_send_crct 1C49          ___lldiv@divisor 0020  
        ___lldiv@counter 002C                _RCSTAbits 0018                  psplit$0 C002D  
         __tdiv_to_l_@f1 0020           __tdiv_to_l_@f2 0024            send_char@dato 0075  
          ??__tdiv_to_l_ 0028                _PORTBbits 0006              ___fladd@grs 006F  
          ___xxtofl@sign 0028                _TRISBbits 0086               conv@result 0036  
            ___flmul@grs 003D                _TXSTAbits 0098      __size_of__div_to_l_ 00BE  
         __end_of___flge 10B3           __end_of___fleq 1DCE           __end_of___wmul 1C70  
         __end_of_cfg_io 1C24        pnum$text1_split_1 002D              _BAUDCTLbits 0187  
         __end_of_fround 07DF      start_initialization 000F      __end_of__tdiv_to_l_ 122C  
            __end_of_isr 1CFC          ___llmod@divisor 0020          ___llmod@counter 0076  
               ??___flge 0028                 ??___fleq 0028                 ??___wmul 0075  
               ??_cfg_io 0075                __Umul8_16 1C99                 ??_fround 004C  
          sprintf@tmpval 00BF                ___fladd@a 0060                ___fladd@b 005C  
             fround@prec 005B                ___flmul@a 0032                ___flmul@b 002E  
            __pbssCOMMON 0077                ___flsub@a 00A0                ___flsub@b 00A4  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of_cfg_iocb 0006        __size_of_cfg_inte 0008        __size_of___xxtofl 00BC  
            sprintf@flag 00BB              sprintf@eexp 00C3              sprintf@fval 00C5  
            sprintf@prec 00CA                _cfg_usart 07DF                __pnvBANK1 00E3  
       ___lwdiv@dividend 0026                 ?___fladd 005C                 ?___awdiv 0026  
               ?___flneg 0020                 ?___awmod 0020                 ?___flmul 002E  
               ?___flsub 00A0                 ?___fltol 005B                 ?___lldiv 0020  
               ?___llmod 0020                __npowers_ 183A               ?__Umul8_16 0075  
               ?___lwdiv 0024                 ?___lwmod 0020                 ?_cfg_clk 0070  
              __pstrings 1800              __tdiv_to_l_ 116F               send_crct@i 0020  
           ??__div_to_l_ 0075                 ?_isdigit 0070         ___lwdiv@quotient 0029  
               ?_sprintf 00A8           __size_of_scale 0363        interrupt_function 0004  
         ___wmul@product 0075                clear_ram0 1BF6               ?_cfg_usart 0070  
               _PIE1bits 008C                _send_char 07F4                _send_crct 1C24  
               _PIR1bits 000C       __end_of__div_to_l_ 093C              __stringbase 1805  
      ___wmul@multiplier 0020               ?_send_char 0070               ?_send_crct 0070  
            ??__Umul8_16 0020         __size_of___fladd 0288         __size_of___awdiv 0069  
       __size_of___flneg 000D         __size_of___awmod 005B         __size_of___flmul 0361  
       __size_of___flsub 0050         __size_of___fltol 007C         __size_of___lldiv 0068  
       __size_of___llmod 0056         __size_of___lwdiv 0046         __size_of___lwmod 003C  
            _fround$1110 0057              _fround$1111 0053         __size_of_cfg_clk 0006  
     __end_of__stringtab 1806              _isdigit$941 0075                 _cfg_iocb 1BE8  
             sprintf@val 00B7                 _cfg_inte 1BEE                 ___xxtofl 10B3  
       __size_of_isdigit 0012          ___lwdiv@divisor 0024          ___lwdiv@counter 002B  
               __ptext10 1C99                 __ptext11 116F                 __ptext20 100F  
               __ptext12 087E                 __ptext21 1D7E                 __ptext13 1C49  
               __ptext30 1BE2                 __ptext22 1C24                 __ptext14 1E1E  
               __ptext31 1CC2                 __ptext23 07F4                 __ptext15 1F2F  
               __ptext24 1C70                 __ptext16 0802                 __ptext25 10B3  
               __ptext17 1DCE                 __ptext26 07DF                 __ptext18 122C  
               __ptext27 1BE8                 __ptext19 1002                 __ptext28 1C10  
               __ptext29 1BEE                 __powers_ 1806         __size_of_sprintf F11E  
          __size_of_conv 0029            __size_of_main 0060                pnum$text1 000C  
            ??_cfg_usart 0075               _INTCONbits 000B                 isdigit@c 0076  
               scale@scl 005A                 intlevel1 0000                sprintf@ap 00B6  
       __tdiv_to_l_@exp1 0031         __tdiv_to_l_@cntr 0030                sprintf@sp 00C9  
       __tdiv_to_l_@quot 002C         ___lwmod@dividend 0022         ___lldiv@dividend 0024  
            ??_send_char 0075              ??_send_crct 0076                stringcode 1800  
             _OSCCONbits 008F             ?__tdiv_to_l_ 0020   __Umul8_16@multiplicand 0075  
               sprintf@c 00CC                 sprintf@f 00A8         ___lldiv@quotient 0028  
        ___lwmod@divisor 0020          ___lwmod@counter 0076                 stringdir 1800  
               stringtab 1800            ___fladd@signs 006C             ___fladd@aexp 006D  
           ___fladd@bexp 006E     __Umul8_16@multiplier 0026        __Umul8_16@product 0022  

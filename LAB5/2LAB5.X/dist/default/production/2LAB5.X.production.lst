

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 16 02:29:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240                           
   241                           	psect	strings
   242  1800                     __pstrings:
   243  1800                     stringtab:
   244  1800                     __stringtab:
   245  1800                     stringcode:	
   246                           ;	String table - string pointers are 1 byte each
   247                           
   248  1800                     stringdir:
   249  1800  3018               	movlw	high stringdir
   250  1801  008A               	movwf	10
   251  1802  0804               	movf	4,w
   252  1803  0A84               	incf	4,f
   253  1804  0782               	addwf	2,f
   254  1805                     __stringbase:
   255  1805  3400               	retlw	0
   256  1806                     __end_of__stringtab:
   257  1806                     __powers_:
   258  1806  3400               	retlw	0
   259  1807  3400               	retlw	0
   260  1808  3480               	retlw	128
   261  1809  343F               	retlw	63
   262  180A  3400               	retlw	0
   263  180B  3400               	retlw	0
   264  180C  3420               	retlw	32
   265  180D  3441               	retlw	65
   266  180E  3400               	retlw	0
   267  180F  3400               	retlw	0
   268  1810  34C8               	retlw	200
   269  1811  3442               	retlw	66
   270  1812  3400               	retlw	0
   271  1813  3400               	retlw	0
   272  1814  347A               	retlw	122
   273  1815  3444               	retlw	68
   274  1816  3400               	retlw	0
   275  1817  3440               	retlw	64
   276  1818  341C               	retlw	28
   277  1819  3446               	retlw	70
   278  181A  3400               	retlw	0
   279  181B  3450               	retlw	80
   280  181C  34C3               	retlw	195
   281  181D  3447               	retlw	71
   282  181E  3400               	retlw	0
   283  181F  3424               	retlw	36
   284  1820  3474               	retlw	116
   285  1821  3449               	retlw	73
   286  1822  3480               	retlw	128
   287  1823  3496               	retlw	150
   288  1824  3418               	retlw	24
   289  1825  344B               	retlw	75
   290  1826  3420               	retlw	32
   291  1827  34BC               	retlw	188
   292  1828  34BE               	retlw	190
   293  1829  344C               	retlw	76
   294  182A  3428               	retlw	40
   295  182B  346B               	retlw	107
   296  182C  346E               	retlw	110
   297  182D  344E               	retlw	78
   298  182E  34F9               	retlw	249
   299  182F  3402               	retlw	2
   300  1830  3415               	retlw	21
   301  1831  3450               	retlw	80
   302  1832  34EC               	retlw	236
   303  1833  3478               	retlw	120
   304  1834  34AD               	retlw	173
   305  1835  3460               	retlw	96
   306  1836  34CA               	retlw	202
   307  1837  34F2               	retlw	242
   308  1838  3449               	retlw	73
   309  1839  3471               	retlw	113
   310  183A                     __end_of__powers_:
   311  183A                     __npowers_:
   312  183A  3400               	retlw	0
   313  183B  3400               	retlw	0
   314  183C  3480               	retlw	128
   315  183D  343F               	retlw	63
   316  183E  34CD               	retlw	205
   317  183F  34CC               	retlw	204
   318  1840  34CC               	retlw	204
   319  1841  343D               	retlw	61
   320  1842  340A               	retlw	10
   321  1843  34D7               	retlw	215
   322  1844  3423               	retlw	35
   323  1845  343C               	retlw	60
   324  1846  346F               	retlw	111
   325  1847  3412               	retlw	18
   326  1848  3483               	retlw	131
   327  1849  343A               	retlw	58
   328  184A  3417               	retlw	23
   329  184B  34B7               	retlw	183
   330  184C  34D1               	retlw	209
   331  184D  3438               	retlw	56
   332  184E  34AC               	retlw	172
   333  184F  34C5               	retlw	197
   334  1850  3427               	retlw	39
   335  1851  3437               	retlw	55
   336  1852  34BD               	retlw	189
   337  1853  3437               	retlw	55
   338  1854  3486               	retlw	134
   339  1855  3435               	retlw	53
   340  1856  3495               	retlw	149
   341  1857  34BF               	retlw	191
   342  1858  34D6               	retlw	214
   343  1859  3433               	retlw	51
   344  185A  3477               	retlw	119
   345  185B  34CC               	retlw	204
   346  185C  342B               	retlw	43
   347  185D  3432               	retlw	50
   348  185E  345F               	retlw	95
   349  185F  3470               	retlw	112
   350  1860  3489               	retlw	137
   351  1861  3430               	retlw	48
   352  1862  34FF               	retlw	255
   353  1863  34E6               	retlw	230
   354  1864  34DB               	retlw	219
   355  1865  342E               	retlw	46
   356  1866  3408               	retlw	8
   357  1867  34E5               	retlw	229
   358  1868  343C               	retlw	60
   359  1869  341E               	retlw	30
   360  186A  3460               	retlw	96
   361  186B  3442               	retlw	66
   362  186C  34A2               	retlw	162
   363  186D  340D               	retlw	13
   364  186E                     __end_of__npowers_:
   365  186E                     _dpowers:
   366  186E  3401               	retlw	1
   367  186F  3400               	retlw	0
   368  1870  3400               	retlw	0
   369  1871  3400               	retlw	0
   370  1872  340A               	retlw	10
   371  1873  3400               	retlw	0
   372  1874  3400               	retlw	0
   373  1875  3400               	retlw	0
   374  1876  3464               	retlw	100
   375  1877  3400               	retlw	0
   376  1878  3400               	retlw	0
   377  1879  3400               	retlw	0
   378  187A  34E8               	retlw	232
   379  187B  3403               	retlw	3
   380  187C  3400               	retlw	0
   381  187D  3400               	retlw	0
   382  187E  3410               	retlw	16
   383  187F  3427               	retlw	39
   384  1880  3400               	retlw	0
   385  1881  3400               	retlw	0
   386  1882  34A0               	retlw	160
   387  1883  3486               	retlw	134
   388  1884  3401               	retlw	1
   389  1885  3400               	retlw	0
   390  1886  3440               	retlw	64
   391  1887  3442               	retlw	66
   392  1888  340F               	retlw	15
   393  1889  3400               	retlw	0
   394  188A  3480               	retlw	128
   395  188B  3496               	retlw	150
   396  188C  3498               	retlw	152
   397  188D  3400               	retlw	0
   398  188E  3400               	retlw	0
   399  188F  34E1               	retlw	225
   400  1890  34F5               	retlw	245
   401  1891  3405               	retlw	5
   402  1892  3400               	retlw	0
   403  1893  34CA               	retlw	202
   404  1894  349A               	retlw	154
   405  1895  343B               	retlw	59
   406  1896                     __end_of_dpowers:
   407  1896                     STR_1:
   408  1896  3425               	retlw	37	;'%'
   409  1897  3430               	retlw	48	;'0'
   410  1898  342E               	retlw	46	;'.'
   411  1899  3430               	retlw	48	;'0'
   412  189A  3466               	retlw	102	;'f'
   413  189B  342C               	retlw	44	;','
   414  189C  3425               	retlw	37	;'%'
   415  189D  3430               	retlw	48	;'0'
   416  189E  342E               	retlw	46	;'.'
   417  189F  3430               	retlw	48	;'0'
   418  18A0  3466               	retlw	102	;'f'
   419  18A1  342C               	retlw	44	;','
   420  18A2  3425               	retlw	37	;'%'
   421  18A3  3430               	retlw	48	;'0'
   422  18A4  342E               	retlw	46	;'.'
   423  18A5  3430               	retlw	48	;'0'
   424  18A6  3466               	retlw	102	;'f'
   425  18A7  342C               	retlw	44	;','
   426  18A8  3400               	retlw	0
   427                           
   428                           	psect	nvBANK1
   429  00EA                     __pnvBANK1:
   430  00EA                     _v:
   431  00EA                     	ds	4
   432  0019                     _TXREG	set	25
   433  0018                     _RCSTAbits	set	24
   434  0005                     _PORTA	set	5
   435  0006                     _PORTB	set	6
   436  0006                     _PORTBbits	set	6
   437  000B                     _INTCONbits	set	11
   438  001A                     _RCREG	set	26
   439  0008                     _PORTD	set	8
   440  000C                     _PIR1bits	set	12
   441  0064                     _TXIF	set	100
   442  0096                     _IOCB	set	150
   443  008C                     _PIE1bits	set	140
   444  009A                     _SPBRGH	set	154
   445  0099                     _SPBRG	set	153
   446  0098                     _TXSTAbits	set	152
   447  008F                     _OSCCONbits	set	143
   448  0095                     _WPUB	set	149
   449  0081                     _OPTION_REGbits	set	129
   450  0086                     _TRISBbits	set	134
   451  0088                     _TRISD	set	136
   452  0086                     _TRISB	set	134
   453  0085                     _TRISA	set	133
   454  0187                     _BAUDCTLbits	set	391
   455  0189                     _ANSELH	set	393
   456  0188                     _ANSEL	set	392
   457                           
   458                           	psect	cinit
   459  000F                     start_initialization:	
   460                           ; #config settings
   461                           
   462  000F                     __initialization:
   463                           
   464                           ; Clear objects allocated to COMMON
   465  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   466  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   467                           
   468                           ; Clear objects allocated to BANK1
   469  0011  1383               	bcf	3,7	;select IRP bank0
   470  0012  30D5               	movlw	low __pbssBANK1
   471  0013  0084               	movwf	4
   472  0014  30EA               	movlw	low (__pbssBANK1+21)
   473  0015  160A  118A  2000  120A  118A  	fcall	clear_ram0
   474  001A                     end_of_initialization:	
   475                           ;End of C runtime variable initialization code
   476                           
   477  001A                     __end_of__initialization:
   478  001A  0183               	clrf	3
   479  001B  160A  158A  2EEC   	ljmp	_main	;jump to C main() function
   480                           
   481                           	psect	bssCOMMON
   482  0079                     __pbssCOMMON:
   483  0079                     _op:
   484  0079                     	ds	1
   485  007A                     _CONT:
   486  007A                     	ds	1
   487                           
   488                           	psect	bssBANK1
   489  00D5                     __pbssBANK1:
   490  00D5                     _f2:
   491  00D5                     	ds	10
   492  00DF                     _V:
   493  00DF                     	ds	1
   494  00E0                     _f1:
   495  00E0                     	ds	10
   496                           
   497                           	psect	clrtext
   498  1000                     clear_ram0:	
   499                           ;	Called with FSR containing the base address, and
   500                           ;	W with the last address+1
   501                           
   502  1000  0064               	clrwdt	;clear the watchdog before getting into this loop
   503  1001                     clrloop0:
   504  1001  0180               	clrf	0	;clear RAM location pointed to by FSR
   505  1002  0A84               	incf	4,f	;increment pointer
   506  1003  0604               	xorwf	4,w	;XOR with final address
   507  1004  1903               	btfsc	3,2	;have we reached the end yet?
   508  1005  3400               	retlw	0	;all done for this memory range, return
   509  1006  0604               	xorwf	4,w	;XOR again to restore value
   510  1007  2801               	goto	clrloop0	;do the next byte
   511                           
   512                           	psect	cstackBANK1
   513  00A0                     __pcstackBANK1:
   514  00A0                     ?___flsub:
   515  00A0                     ___flsub@a:	
   516                           ; 4 bytes @ 0x0
   517                           
   518                           
   519                           ; 4 bytes @ 0x0
   520  00A0                     	ds	4
   521  00A4                     ___flsub@b:
   522                           
   523                           ; 4 bytes @ 0x4
   524  00A4                     	ds	4
   525  00A8                     ?_sprintf:
   526  00A8                     sprintf@f:	
   527                           ; 2 bytes @ 0x8
   528                           
   529                           
   530                           ; 1 bytes @ 0x8
   531  00A8                     	ds	13
   532  00B5                     ??_sprintf:
   533                           
   534                           ; 1 bytes @ 0x15
   535  00B5                     	ds	5
   536  00BA                     _sprintf$1113:
   537                           
   538                           ; 4 bytes @ 0x1A
   539  00BA                     	ds	4
   540  00BE                     sprintf@ap:
   541                           
   542                           ; 1 bytes @ 0x1E
   543  00BE                     	ds	1
   544  00BF                     sprintf@val:
   545                           
   546                           ; 4 bytes @ 0x1F
   547  00BF                     	ds	4
   548  00C3                     sprintf@tmpval:
   549                           
   550                           ; 4 bytes @ 0x23
   551  00C3                     	ds	4
   552  00C7                     sprintf@eexp:
   553                           
   554                           ; 2 bytes @ 0x27
   555  00C7                     	ds	2
   556  00C9                     sprintf@flag:
   557                           
   558                           ; 2 bytes @ 0x29
   559  00C9                     	ds	2
   560  00CB                     sprintf@width:
   561                           
   562                           ; 2 bytes @ 0x2B
   563  00CB                     	ds	2
   564  00CD                     sprintf@fval:
   565                           
   566                           ; 4 bytes @ 0x2D
   567  00CD                     	ds	4
   568  00D1                     sprintf@prec:
   569                           
   570                           ; 2 bytes @ 0x31
   571  00D1                     	ds	2
   572  00D3                     sprintf@sp:
   573                           
   574                           ; 1 bytes @ 0x33
   575  00D3                     	ds	1
   576  00D4                     sprintf@c:
   577                           
   578                           ; 1 bytes @ 0x34
   579  00D4                     	ds	1
   580                           
   581                           	psect	cstackCOMMON
   582  0070                     __pcstackCOMMON:
   583  0070                     ?_isdigit:
   584  0070                     ?_cfg_io:	
   585                           ; 1 bit 
   586                           
   587  0070                     ?_cfg_inte:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_cfg_iocb:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_cfg_usart:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_cfg_clk:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_send_crct:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_send_char:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_isr:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ??_isr:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_main:	
   612                           ; 1 bytes @ 0x0
   613                           
   614                           
   615                           ; 1 bytes @ 0x0
   616  0070                     	ds	3
   617  0073                     ??_cfg_io:
   618  0073                     ??_cfg_inte:	
   619                           ; 1 bytes @ 0x3
   620                           
   621  0073                     ??_cfg_iocb:	
   622                           ; 1 bytes @ 0x3
   623                           
   624  0073                     ??_cfg_usart:	
   625                           ; 1 bytes @ 0x3
   626                           
   627  0073                     ??_cfg_clk:	
   628                           ; 1 bytes @ 0x3
   629                           
   630  0073                     ??_send_char:	
   631                           ; 1 bytes @ 0x3
   632                           
   633  0073                     ??_isdigit:	
   634                           ; 1 bytes @ 0x3
   635                           
   636  0073                     ??__tdiv_to_l_:	
   637                           ; 1 bytes @ 0x3
   638                           
   639  0073                     ??__div_to_l_:	
   640                           ; 1 bytes @ 0x3
   641                           
   642  0073                     ??___lldiv:	
   643                           ; 1 bytes @ 0x3
   644                           
   645  0073                     ??___fleq:	
   646                           ; 1 bytes @ 0x3
   647                           
   648  0073                     ??___flge:	
   649                           ; 1 bytes @ 0x3
   650                           
   651  0073                     ??___llmod:	
   652                           ; 1 bytes @ 0x3
   653                           
   654  0073                     ?__Umul8_16:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     ?___wmul:	
   658                           ; 2 bytes @ 0x3
   659                           
   660  0073                     ?___awmod:	
   661                           ; 2 bytes @ 0x3
   662                           
   663  0073                     ?___lwmod:	
   664                           ; 2 bytes @ 0x3
   665                           
   666  0073                     ?___flneg:	
   667                           ; 2 bytes @ 0x3
   668                           
   669  0073                     ?___xxtofl:	
   670                           ; 4 bytes @ 0x3
   671                           
   672  0073                     send_char@dato:	
   673                           ; 4 bytes @ 0x3
   674                           
   675  0073                     __Umul8_16@multiplicand:	
   676                           ; 1 bytes @ 0x3
   677                           
   678  0073                     _isdigit$941:	
   679                           ; 1 bytes @ 0x3
   680                           
   681  0073                     ___wmul@multiplier:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0073                     ___awmod@divisor:	
   685                           ; 2 bytes @ 0x3
   686                           
   687  0073                     ___lwmod@divisor:	
   688                           ; 2 bytes @ 0x3
   689                           
   690  0073                     ___flneg@f1:	
   691                           ; 2 bytes @ 0x3
   692                           
   693  0073                     ___xxtofl@val:	
   694                           ; 4 bytes @ 0x3
   695                           
   696                           
   697                           ; 4 bytes @ 0x3
   698  0073                     	ds	1
   699  0074                     ??_send_crct:
   700  0074                     ___llmod@counter:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     isdigit@c:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     ___lldiv@quotient:	
   707                           ; 1 bytes @ 0x4
   708                           
   709                           
   710                           ; 4 bytes @ 0x4
   711  0074                     	ds	1
   712  0075                     ??__Umul8_16:
   713  0075                     send_crct@i:	
   714                           ; 1 bytes @ 0x5
   715                           
   716  0075                     ___wmul@multiplicand:	
   717                           ; 2 bytes @ 0x5
   718                           
   719  0075                     ___awmod@dividend:	
   720                           ; 2 bytes @ 0x5
   721                           
   722  0075                     ___lwmod@dividend:	
   723                           ; 2 bytes @ 0x5
   724                           
   725                           
   726                           ; 2 bytes @ 0x5
   727  0075                     	ds	2
   728  0077                     ??___wmul:
   729  0077                     ??___awmod:	
   730                           ; 1 bytes @ 0x7
   731                           
   732  0077                     ??___flneg:	
   733                           ; 1 bytes @ 0x7
   734                           
   735  0077                     ??___lwmod:	
   736                           ; 1 bytes @ 0x7
   737                           
   738  0077                     send_crct@st:	
   739                           ; 1 bytes @ 0x7
   740                           
   741  0077                     ___wmul@product:	
   742                           ; 1 bytes @ 0x7
   743                           
   744                           
   745                           ; 2 bytes @ 0x7
   746  0077                     	ds	1
   747  0078                     ??___awdiv:
   748  0078                     ___lldiv@counter:	
   749                           ; 1 bytes @ 0x8
   750                           
   751  0078                     ___lwmod@counter:	
   752                           ; 1 bytes @ 0x8
   753                           
   754                           
   755                           ; 1 bytes @ 0x8
   756  0078                     	ds	1
   757  0079                     ??___flsub:
   758                           
   759                           	psect	cstackBANK0
   760  0020                     __pcstackBANK0:	
   761                           ; 1 bytes @ 0x9
   762                           
   763  0020                     ?___fleq:
   764  0020                     ?___flge:	
   765                           ; 1 bit 
   766                           
   767  0020                     ??___xxtofl:	
   768                           ; 1 bit 
   769                           
   770  0020                     ?___lwdiv:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0020                     ?__tdiv_to_l_:	
   774                           ; 2 bytes @ 0x0
   775                           
   776  0020                     ?__div_to_l_:	
   777                           ; 4 bytes @ 0x0
   778                           
   779  0020                     ?___lldiv:	
   780                           ; 4 bytes @ 0x0
   781                           
   782  0020                     ?___llmod:	
   783                           ; 4 bytes @ 0x0
   784                           
   785  0020                     ___awmod@counter:	
   786                           ; 4 bytes @ 0x0
   787                           
   788  0020                     ___lwdiv@divisor:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0020                     __Umul8_16@product:	
   792                           ; 2 bytes @ 0x0
   793                           
   794  0020                     ___lldiv@divisor:	
   795                           ; 2 bytes @ 0x0
   796                           
   797  0020                     __div_to_l_@f1:	
   798                           ; 4 bytes @ 0x0
   799                           
   800  0020                     ___fleq@ff1:	
   801                           ; 4 bytes @ 0x0
   802                           
   803  0020                     ___flge@ff1:	
   804                           ; 4 bytes @ 0x0
   805                           
   806  0020                     __tdiv_to_l_@f1:	
   807                           ; 4 bytes @ 0x0
   808                           
   809  0020                     ___llmod@divisor:	
   810                           ; 4 bytes @ 0x0
   811                           
   812                           
   813                           ; 4 bytes @ 0x0
   814  0020                     	ds	1
   815  0021                     ___awmod@sign:
   816                           
   817                           ; 1 bytes @ 0x1
   818  0021                     	ds	1
   819  0022                     ?___awdiv:
   820  0022                     ___awdiv@divisor:	
   821                           ; 2 bytes @ 0x2
   822                           
   823  0022                     ___lwdiv@dividend:	
   824                           ; 2 bytes @ 0x2
   825                           
   826  0022                     __Umul8_16@word_mpld:	
   827                           ; 2 bytes @ 0x2
   828                           
   829                           
   830                           ; 2 bytes @ 0x2
   831  0022                     	ds	2
   832  0024                     ??___lwdiv:
   833  0024                     __Umul8_16@multiplier:	
   834                           ; 1 bytes @ 0x4
   835                           
   836  0024                     ___xxtofl@sign:	
   837                           ; 1 bytes @ 0x4
   838                           
   839  0024                     ___awdiv@dividend:	
   840                           ; 1 bytes @ 0x4
   841                           
   842  0024                     ___lldiv@dividend:	
   843                           ; 2 bytes @ 0x4
   844                           
   845  0024                     __div_to_l_@f2:	
   846                           ; 4 bytes @ 0x4
   847                           
   848  0024                     ___fleq@ff2:	
   849                           ; 4 bytes @ 0x4
   850                           
   851  0024                     ___flge@ff2:	
   852                           ; 4 bytes @ 0x4
   853                           
   854  0024                     __tdiv_to_l_@f2:	
   855                           ; 4 bytes @ 0x4
   856                           
   857  0024                     ___llmod@dividend:	
   858                           ; 4 bytes @ 0x4
   859                           
   860                           
   861                           ; 4 bytes @ 0x4
   862  0024                     	ds	1
   863  0025                     ___lwdiv@counter:
   864  0025                     ___xxtofl@exp:	
   865                           ; 1 bytes @ 0x5
   866                           
   867                           
   868                           ; 1 bytes @ 0x5
   869  0025                     	ds	1
   870  0026                     ___awdiv@counter:
   871  0026                     ___lwdiv@quotient:	
   872                           ; 1 bytes @ 0x6
   873                           
   874  0026                     ___xxtofl@arg:	
   875                           ; 2 bytes @ 0x6
   876                           
   877                           
   878                           ; 4 bytes @ 0x6
   879  0026                     	ds	1
   880  0027                     ___awdiv@sign:
   881                           
   882                           ; 1 bytes @ 0x7
   883  0027                     	ds	1
   884  0028                     ___awdiv@quotient:
   885  0028                     __div_to_l_@quot:	
   886                           ; 2 bytes @ 0x8
   887                           
   888  0028                     __tdiv_to_l_@quot:	
   889                           ; 4 bytes @ 0x8
   890                           
   891                           
   892                           ; 4 bytes @ 0x8
   893  0028                     	ds	2
   894  002A                     ?_conv:
   895  002A                     ?___flmul:	
   896                           ; 4 bytes @ 0xA
   897                           
   898  002A                     ___flmul@b:	
   899                           ; 4 bytes @ 0xA
   900                           
   901                           
   902                           ; 4 bytes @ 0xA
   903  002A                     	ds	2
   904  002C                     __div_to_l_@cntr:
   905  002C                     __tdiv_to_l_@cntr:	
   906                           ; 1 bytes @ 0xC
   907                           
   908                           
   909                           ; 1 bytes @ 0xC
   910  002C                     	ds	1
   911  002D                     __div_to_l_@exp1:
   912  002D                     __tdiv_to_l_@exp1:	
   913                           ; 1 bytes @ 0xD
   914                           
   915                           
   916                           ; 1 bytes @ 0xD
   917  002D                     	ds	1
   918  002E                     ??_conv:
   919  002E                     ___flmul@a:	
   920                           ; 1 bytes @ 0xE
   921                           
   922                           
   923                           ; 4 bytes @ 0xE
   924  002E                     	ds	4
   925  0032                     ??___flmul:
   926  0032                     conv@result:	
   927                           ; 1 bytes @ 0x12
   928                           
   929                           
   930                           ; 4 bytes @ 0x12
   931  0032                     	ds	4
   932  0036                     conv@aa:
   933                           
   934                           ; 1 bytes @ 0x16
   935  0036                     	ds	1
   936  0037                     ___flmul@sign:
   937                           
   938                           ; 1 bytes @ 0x17
   939  0037                     	ds	1
   940  0038                     ___flmul@grs:
   941                           
   942                           ; 4 bytes @ 0x18
   943  0038                     	ds	4
   944  003C                     ___flmul@aexp:
   945                           
   946                           ; 1 bytes @ 0x1C
   947  003C                     	ds	1
   948  003D                     ___flmul@bexp:
   949                           
   950                           ; 1 bytes @ 0x1D
   951  003D                     	ds	1
   952  003E                     ___flmul@prod:
   953                           
   954                           ; 4 bytes @ 0x1E
   955  003E                     	ds	4
   956  0042                     ___flmul@temp:
   957                           
   958                           ; 2 bytes @ 0x22
   959  0042                     	ds	2
   960  0044                     ?_fround:
   961  0044                     ?_scale:	
   962                           ; 4 bytes @ 0x24
   963                           
   964                           
   965                           ; 4 bytes @ 0x24
   966  0044                     	ds	4
   967  0048                     ??_fround:
   968  0048                     ??_scale:	
   969                           ; 1 bytes @ 0x28
   970                           
   971                           
   972                           ; 1 bytes @ 0x28
   973  0048                     	ds	7
   974  004F                     _fround$1111:
   975                           
   976                           ; 4 bytes @ 0x2F
   977  004F                     	ds	3
   978  0052                     _scale$1112:
   979                           
   980                           ; 4 bytes @ 0x32
   981  0052                     	ds	1
   982  0053                     _fround$1110:
   983                           
   984                           ; 4 bytes @ 0x33
   985  0053                     	ds	3
   986  0056                     scale@scl:
   987                           
   988                           ; 1 bytes @ 0x36
   989  0056                     	ds	1
   990  0057                     ?___fltol:
   991  0057                     fround@prec:	
   992                           ; 4 bytes @ 0x37
   993                           
   994  0057                     ___fltol@f1:	
   995                           ; 1 bytes @ 0x37
   996                           
   997                           
   998                           ; 4 bytes @ 0x37
   999  0057                     	ds	1
  1000  0058                     ?___fladd:
  1001  0058                     ___fladd@b:	
  1002                           ; 4 bytes @ 0x38
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x38
  1006  0058                     	ds	3
  1007  005B                     ??___fltol:
  1008                           
  1009                           ; 1 bytes @ 0x3B
  1010  005B                     	ds	1
  1011  005C                     ___fladd@a:
  1012                           
  1013                           ; 4 bytes @ 0x3C
  1014  005C                     	ds	4
  1015  0060                     ??___fladd:
  1016  0060                     ___fltol@sign1:	
  1017                           ; 1 bytes @ 0x40
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x40
  1021  0060                     	ds	1
  1022  0061                     ___fltol@exp1:
  1023                           
  1024                           ; 1 bytes @ 0x41
  1025  0061                     	ds	7
  1026  0068                     ___fladd@signs:
  1027                           
  1028                           ; 1 bytes @ 0x48
  1029  0068                     	ds	1
  1030  0069                     ___fladd@aexp:
  1031                           
  1032                           ; 1 bytes @ 0x49
  1033  0069                     	ds	1
  1034  006A                     ___fladd@bexp:
  1035                           
  1036                           ; 1 bytes @ 0x4A
  1037  006A                     	ds	1
  1038  006B                     ___fladd@grs:
  1039                           
  1040                           ; 1 bytes @ 0x4B
  1041  006B                     	ds	1
  1042  006C                     ??_main:
  1043                           
  1044                           ; 1 bytes @ 0x4C
  1045  006C                     	ds	1
  1046                           
  1047                           	psect	maintext
  1048  1EEC                     __pmaintext:	
  1049 ;;
  1050 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1051 ;;
  1052 ;; *************** function _main *****************
  1053 ;; Defined at:
  1054 ;;		line 87 in file "main5a.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : B00/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0
  1070 ;;      Temps:          0       1       0       0       0
  1071 ;;      Totals:         0       1       0       0       0
  1072 ;;Total ram usage:        1 bytes
  1073 ;; Hardware stack levels required when called:    5
  1074 ;; This function calls:
  1075 ;;		_cfg_clk
  1076 ;;		_cfg_inte
  1077 ;;		_cfg_io
  1078 ;;		_cfg_iocb
  1079 ;;		_cfg_usart
  1080 ;;		_conv
  1081 ;;		_send_crct
  1082 ;;		_sprintf
  1083 ;; This function is called by:
  1084 ;;		Startup code after reset
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _main
  1090  1EEC                     _main:
  1091  1EEC                     l4154:	
  1092                           ;incstack = 0
  1093                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1094                           
  1095                           
  1096                           ;main5a.c: 88:     cfg_io();
  1097  1EEC  160A  158A  23F8  160A  158A  	fcall	_cfg_io
  1098  1EF1                     l4156:
  1099                           
  1100                           ;main5a.c: 89:     cfg_inte();
  1101  1EF1  160A  158A  23C9  160A  158A  	fcall	_cfg_inte
  1102  1EF6                     l4158:
  1103                           
  1104                           ;main5a.c: 90:     cfg_iocb();
  1105  1EF6  160A  158A  23C3  160A  158A  	fcall	_cfg_iocb
  1106  1EFB                     l4160:
  1107                           
  1108                           ;main5a.c: 91:     cfg_usart();
  1109  1EFB  160A  158A  240C  160A  158A  	fcall	_cfg_usart
  1110  1F00                     l4162:
  1111                           
  1112                           ;main5a.c: 92:     cfg_clk();
  1113  1F00  160A  158A  23BD  160A  158A  	fcall	_cfg_clk
  1114  1F05                     l4164:
  1115                           
  1116                           ;main5a.c: 97:       v = conv(V);
  1117  1F05  1683               	bsf	3,5	;RP0=1, select bank1
  1118  1F06  1303               	bcf	3,6	;RP1=0, select bank1
  1119  1F07  085F               	movf	_V^(0+128),w
  1120  1F08  160A  158A  248E  160A  158A  	fcall	_conv
  1121  1F0D  1283               	bcf	3,5	;RP0=0, select bank0
  1122  1F0E  1303               	bcf	3,6	;RP1=0, select bank0
  1123  1F0F  082D               	movf	?_conv+3,w
  1124  1F10  1683               	bsf	3,5	;RP0=1, select bank1
  1125  1F11  1303               	bcf	3,6	;RP1=0, select bank1
  1126  1F12  00ED               	movwf	(_v+3)^(0+128)
  1127  1F13  1283               	bcf	3,5	;RP0=0, select bank0
  1128  1F14  1303               	bcf	3,6	;RP1=0, select bank0
  1129  1F15  082C               	movf	?_conv+2,w
  1130  1F16  1683               	bsf	3,5	;RP0=1, select bank1
  1131  1F17  1303               	bcf	3,6	;RP1=0, select bank1
  1132  1F18  00EC               	movwf	(_v+2)^(0+128)
  1133  1F19  1283               	bcf	3,5	;RP0=0, select bank0
  1134  1F1A  1303               	bcf	3,6	;RP1=0, select bank0
  1135  1F1B  082B               	movf	?_conv+1,w
  1136  1F1C  1683               	bsf	3,5	;RP0=1, select bank1
  1137  1F1D  1303               	bcf	3,6	;RP1=0, select bank1
  1138  1F1E  00EB               	movwf	(_v+1)^(0+128)
  1139  1F1F  1283               	bcf	3,5	;RP0=0, select bank0
  1140  1F20  1303               	bcf	3,6	;RP1=0, select bank0
  1141  1F21  082A               	movf	?_conv,w
  1142  1F22  1683               	bsf	3,5	;RP0=1, select bank1
  1143  1F23  1303               	bcf	3,6	;RP1=0, select bank1
  1144  1F24  00EA               	movwf	_v^(0+128)
  1145  1F25                     l4166:
  1146                           
  1147                           ;main5a.c: 99:       sprintf(f1, "%0.0f,%0.0f,%0.0f,",v,v,v);
  1148  1F25  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1149  1F26  1283               	bcf	3,5	;RP0=0, select bank0
  1150  1F27  1303               	bcf	3,6	;RP1=0, select bank0
  1151  1F28  00EC               	movwf	??_main
  1152  1F29  086C               	movf	??_main,w
  1153  1F2A  1683               	bsf	3,5	;RP0=1, select bank1
  1154  1F2B  1303               	bcf	3,6	;RP1=0, select bank1
  1155  1F2C  00A8               	movwf	sprintf@f^(0+128)
  1156  1F2D  086D               	movf	(_v+3)^(0+128),w
  1157  1F2E  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1158  1F2F  086C               	movf	(_v+2)^(0+128),w
  1159  1F30  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1160  1F31  086B               	movf	(_v+1)^(0+128),w
  1161  1F32  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1162  1F33  086A               	movf	_v^(0+128),w
  1163  1F34  00A9               	movwf	(?_sprintf^(0+128)+1)
  1164  1F35  086D               	movf	(_v+3)^(0+128),w
  1165  1F36  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1166  1F37  086C               	movf	(_v+2)^(0+128),w
  1167  1F38  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1168  1F39  086B               	movf	(_v+1)^(0+128),w
  1169  1F3A  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1170  1F3B  086A               	movf	_v^(0+128),w
  1171  1F3C  00AD               	movwf	(?_sprintf^(0+128)+5)
  1172  1F3D  086D               	movf	(_v+3)^(0+128),w
  1173  1F3E  00B4               	movwf	((?_sprintf+3)^(0+128)+9)
  1174  1F3F  086C               	movf	(_v+2)^(0+128),w
  1175  1F40  00B3               	movwf	((?_sprintf+2)^(0+128)+9)
  1176  1F41  086B               	movf	(_v+1)^(0+128),w
  1177  1F42  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1178  1F43  086A               	movf	_v^(0+128),w
  1179  1F44  00B1               	movwf	(?_sprintf^(0+128)+9)
  1180  1F45  30E0               	movlw	(low (_f1| 0))& (0+255)
  1181  1F46  160A  118A  24E3  160A  158A  	fcall	_sprintf
  1182  1F4B                     l4168:
  1183                           
  1184                           ;main5a.c: 103:       send_crct(f1);
  1185  1F4B  30E0               	movlw	(low (_f1| 0))& (0+255)
  1186  1F4C  160A  158A  2421  160A  158A  	fcall	_send_crct
  1187  1F51                     l4170:
  1188                           
  1189                           ;main5a.c: 105:       _delay((unsigned long)((500)*(4000000/4000000.0)));
  1190  1F51  30A5               	movlw	165
  1191  1F52  1283               	bcf	3,5	;RP0=0, select bank0
  1192  1F53  1303               	bcf	3,6	;RP1=0, select bank0
  1193  1F54  00EC               	movwf	??_main
  1194  1F55                     u7257:
  1195  1F55  0BEC               	decfsz	??_main,f
  1196  1F56  2F55               	goto	u7257
  1197  1F57  2F58               	nop2
  1198  1F58  2F05               	goto	l4164
  1199  1F59  120A  118A  280C   	ljmp	start
  1200  1F5C                     __end_of_main:
  1201                           
  1202                           	psect	text1
  1203  14E3                     __ptext1:	
  1204 ;; *************** function _sprintf *****************
  1205 ;; Defined at:
  1206 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  sp              1    wreg     PTR unsigned char 
  1209 ;;		 -> f1(10), 
  1210 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1211 ;;		 -> STR_1(19), 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  sp              1   51[BANK1 ] PTR unsigned char 
  1214 ;;		 -> f1(10), 
  1215 ;;  fval            4   45[BANK1 ] PTR unsigned char 
  1216 ;;  tmpval          4   35[BANK1 ] struct .
  1217 ;;  val             4   31[BANK1 ] unsigned long 
  1218 ;;  prec            2   49[BANK1 ] int 
  1219 ;;  width           2   43[BANK1 ] int 
  1220 ;;  flag            2   41[BANK1 ] unsigned short 
  1221 ;;  eexp            2   39[BANK1 ] int 
  1222 ;;  cp              2    0        PTR const unsigned char 
  1223 ;;  len             2    0        unsigned int 
  1224 ;;  c               1   52[BANK1 ] unsigned char 
  1225 ;;  ap              1   30[BANK1 ] PTR void [1]
  1226 ;;		 -> ?_sprintf(2), 
  1227 ;;  d               1    0        unsigned char 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  2    8[BANK1 ] int 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       0      13       0       0
  1238 ;;      Locals:         0       0      27       0       0
  1239 ;;      Temps:          0       0       5       0       0
  1240 ;;      Totals:         0       0      45       0       0
  1241 ;;Total ram usage:       45 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; Hardware stack levels required when called:    4
  1244 ;; This function calls:
  1245 ;;		___awdiv
  1246 ;;		___fladd
  1247 ;;		___fleq
  1248 ;;		___flge
  1249 ;;		___flmul
  1250 ;;		___flneg
  1251 ;;		___flsub
  1252 ;;		___fltol
  1253 ;;		___lldiv
  1254 ;;		___llmod
  1255 ;;		___wmul
  1256 ;;		___xxtofl
  1257 ;;		__div_to_l_
  1258 ;;		__tdiv_to_l_
  1259 ;;		_fround
  1260 ;;		_isdigit
  1261 ;;		_scale
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _sprintf
  1269  14E3                     _sprintf:
  1270                           
  1271                           ;incstack = 0
  1272                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1273                           ;sprintf@sp stored from wreg
  1274  14E3  1683               	bsf	3,5	;RP0=1, select bank1
  1275  14E4  1303               	bcf	3,6	;RP1=0, select bank1
  1276  14E5  00D3               	movwf	sprintf@sp^(0+128)
  1277  14E6                     l3848:
  1278                           
  1279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1280  14E6  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1281  14E7  00B5               	movwf	??_sprintf^(0+128)
  1282  14E8  0835               	movf	??_sprintf^(0+128),w
  1283  14E9  00BE               	movwf	sprintf@ap^(0+128)
  1284  14EA                     L1:
  1285                           
  1286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1287  14EA  120A  118A  2E19   	goto	l4136
  1288  14ED                     l3850:
  1289                           
  1290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1291  14ED  3025               	movlw	37
  1292  14EE  0654               	xorwf	sprintf@c^(0+128),w
  1293  14EF  1903               	btfsc	3,2
  1294  14F0  2CF2               	goto	u6711
  1295  14F1  2CF3               	goto	u6710
  1296  14F2                     u6711:
  1297  14F2  2CFF               	goto	l3856
  1298  14F3                     u6710:
  1299  14F3                     l3852:
  1300                           
  1301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1302  14F3  0854               	movf	sprintf@c^(0+128),w
  1303  14F4  00B5               	movwf	??_sprintf^(0+128)
  1304  14F5  0853               	movf	sprintf@sp^(0+128),w
  1305  14F6  0084               	movwf	4
  1306  14F7  0835               	movf	??_sprintf^(0+128),w
  1307  14F8  1383               	bcf	3,7	;select IRP bank0
  1308  14F9  0080               	movwf	0
  1309  14FA                     l3854:
  1310  14FA  3001               	movlw	1
  1311  14FB  00B5               	movwf	??_sprintf^(0+128)
  1312  14FC  0835               	movf	??_sprintf^(0+128),w
  1313  14FD  07D3               	addwf	sprintf@sp^(0+128),f
  1314                           
  1315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1316  14FE  2CEA               	goto	L1
  1317  14FF                     l3856:
  1318                           
  1319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1320  14FF  01CB               	clrf	sprintf@width^(0+128)
  1321  1500  01CC               	clrf	(sprintf@width+1)^(0+128)
  1322                           
  1323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1324  1501  01C9               	clrf	sprintf@flag^(0+128)
  1325  1502  01CA               	clrf	(sprintf@flag+1)^(0+128)
  1326  1503  2D09               	goto	l3862
  1327  1504                     l251:	
  1328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1329                           
  1330                           
  1331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1332  1504  1549               	bsf	sprintf@flag^(0+128),2
  1333  1505                     l3858:
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  1336  1505  3001               	movlw	1
  1337  1506  00B5               	movwf	??_sprintf^(0+128)
  1338  1507  0835               	movf	??_sprintf^(0+128),w
  1339  1508  07A8               	addwf	sprintf@f^(0+128),f
  1340  1509                     l3862:	
  1341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1342                           
  1343  1509  0828               	movf	sprintf@f^(0+128),w
  1344  150A  0084               	movwf	4
  1345  150B  160A  158A  2000  160A  118A  	fcall	stringdir
  1346  1510  00B5               	movwf	??_sprintf^(0+128)
  1347  1511  01B6               	clrf	(??_sprintf^(0+128)+1)
  1348                           
  1349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1350                           ; Switch size 1, requested type "simple"
  1351                           ; Number of cases is 1, Range of values is 0 to 0
  1352                           ; switch strategies available:
  1353                           ; Name         Instructions Cycles
  1354                           ; simple_byte            4     3 (average)
  1355                           ; direct_byte           11     8 (fixed)
  1356                           ; jumptable            260     6 (fixed)
  1357                           ;	Chosen strategy is simple_byte
  1358  1512  0836               	movf	(??_sprintf+1)^(0+128),w
  1359  1513  3A00               	xorlw	0	; case 0
  1360  1514  1903               	skipnz
  1361  1515  2D17               	goto	l4232
  1362  1516  2D1C               	goto	l3864
  1363  1517                     l4232:
  1364                           
  1365                           ; Switch size 1, requested type "simple"
  1366                           ; Number of cases is 1, Range of values is 48 to 48
  1367                           ; switch strategies available:
  1368                           ; Name         Instructions Cycles
  1369                           ; simple_byte            4     3 (average)
  1370                           ; direct_byte           14    11 (fixed)
  1371                           ; jumptable            263     9 (fixed)
  1372                           ;	Chosen strategy is simple_byte
  1373  1517  0835               	movf	??_sprintf^(0+128),w
  1374  1518  3A30               	xorlw	48	; case 48
  1375  1519  1903               	skipnz
  1376  151A  2D04               	goto	l251
  1377  151B  2D1C               	goto	l3864
  1378  151C                     l3864:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1381  151C  0828               	movf	sprintf@f^(0+128),w
  1382  151D  0084               	movwf	4
  1383  151E  160A  158A  2000  160A  118A  	fcall	stringdir
  1384  1523  160A  158A  23E6  160A  118A  	fcall	_isdigit
  1385  1528  1C03               	btfss	3,0
  1386  1529  2D2B               	goto	u6721
  1387  152A  2D2C               	goto	u6720
  1388  152B                     u6721:
  1389  152B  2D6C               	goto	l3876
  1390  152C                     u6720:
  1391  152C                     l3866:
  1392                           
  1393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1394  152C  1683               	bsf	3,5	;RP0=1, select bank1
  1395  152D  1303               	bcf	3,6	;RP1=0, select bank1
  1396  152E  01CB               	clrf	sprintf@width^(0+128)
  1397  152F  01CC               	clrf	(sprintf@width+1)^(0+128)
  1398  1530                     l3868:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1401  1530  300A               	movlw	10
  1402  1531  00F3               	movwf	___wmul@multiplier
  1403  1532  3000               	movlw	0
  1404  1533  00F4               	movwf	___wmul@multiplier+1
  1405  1534  1683               	bsf	3,5	;RP0=1, select bank1
  1406  1535  1303               	bcf	3,6	;RP1=0, select bank1
  1407  1536  084C               	movf	(sprintf@width+1)^(0+128),w
  1408  1537  00F6               	movwf	___wmul@multiplicand+1
  1409  1538  084B               	movf	sprintf@width^(0+128),w
  1410  1539  00F5               	movwf	___wmul@multiplicand
  1411  153A  160A  158A  2442  160A  118A  	fcall	___wmul
  1412  153F  0874               	movf	?___wmul+1,w
  1413  1540  1683               	bsf	3,5	;RP0=1, select bank1
  1414  1541  1303               	bcf	3,6	;RP1=0, select bank1
  1415  1542  00CC               	movwf	(sprintf@width+1)^(0+128)
  1416  1543  0873               	movf	?___wmul,w
  1417  1544  00CB               	movwf	sprintf@width^(0+128)
  1418  1545                     l3870:
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1421  1545  0828               	movf	sprintf@f^(0+128),w
  1422  1546  0084               	movwf	4
  1423  1547  160A  158A  2000  160A  118A  	fcall	stringdir
  1424  154C  3ED0               	addlw	208
  1425  154D  00B5               	movwf	??_sprintf^(0+128)
  1426  154E  30FF               	movlw	255
  1427  154F  1803               	skipnc
  1428  1550  3000               	movlw	0
  1429  1551  00B6               	movwf	(??_sprintf^(0+128)+1)
  1430  1552  0835               	movf	??_sprintf^(0+128),w
  1431  1553  07CB               	addwf	sprintf@width^(0+128),f
  1432  1554  1803               	skipnc
  1433  1555  0ACC               	incf	(sprintf@width+1)^(0+128),f
  1434  1556  0836               	movf	(??_sprintf+1)^(0+128),w
  1435  1557  07CC               	addwf	(sprintf@width+1)^(0+128),f
  1436  1558                     l3872:
  1437  1558  3001               	movlw	1
  1438  1559  00B5               	movwf	??_sprintf^(0+128)
  1439  155A  0835               	movf	??_sprintf^(0+128),w
  1440  155B  07A8               	addwf	sprintf@f^(0+128),f
  1441  155C                     l3874:
  1442                           
  1443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1444  155C  0828               	movf	sprintf@f^(0+128),w
  1445  155D  0084               	movwf	4
  1446  155E  160A  158A  2000  160A  118A  	fcall	stringdir
  1447  1563  160A  158A  23E6  160A  118A  	fcall	_isdigit
  1448  1568  1803               	btfsc	3,0
  1449  1569  2D6B               	goto	u6731
  1450  156A  2D6C               	goto	u6730
  1451  156B                     u6731:
  1452  156B  2D30               	goto	l3868
  1453  156C                     u6730:
  1454  156C                     l3876:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1457  156C  1683               	bsf	3,5	;RP0=1, select bank1
  1458  156D  1303               	bcf	3,6	;RP1=0, select bank1
  1459  156E  0828               	movf	sprintf@f^(0+128),w
  1460  156F  0084               	movwf	4
  1461  1570  160A  158A  2000  160A  118A  	fcall	stringdir
  1462  1575  3A2E               	xorlw	46
  1463  1576  1D03               	skipz
  1464  1577  2D79               	goto	u6741
  1465  1578  2D7A               	goto	u6740
  1466  1579                     u6741:
  1467  1579  2DBF               	goto	l3892
  1468  157A                     u6740:
  1469  157A                     l3878:
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1472  157A  174A               	bsf	(sprintf@flag^(0+128)+1),6
  1473  157B                     l3880:
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1476  157B  3001               	movlw	1
  1477  157C  00B5               	movwf	??_sprintf^(0+128)
  1478  157D  0835               	movf	??_sprintf^(0+128),w
  1479  157E  07A8               	addwf	sprintf@f^(0+128),f
  1480  157F                     l3882:
  1481                           
  1482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1483  157F  01D1               	clrf	sprintf@prec^(0+128)
  1484  1580  01D2               	clrf	(sprintf@prec+1)^(0+128)
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1487  1581  2DAE               	goto	l3890
  1488  1582                     l3884:
  1489                           
  1490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1491  1582  300A               	movlw	10
  1492  1583  00F3               	movwf	___wmul@multiplier
  1493  1584  3000               	movlw	0
  1494  1585  00F4               	movwf	___wmul@multiplier+1
  1495  1586  1683               	bsf	3,5	;RP0=1, select bank1
  1496  1587  1303               	bcf	3,6	;RP1=0, select bank1
  1497  1588  0852               	movf	(sprintf@prec+1)^(0+128),w
  1498  1589  00F6               	movwf	___wmul@multiplicand+1
  1499  158A  0851               	movf	sprintf@prec^(0+128),w
  1500  158B  00F5               	movwf	___wmul@multiplicand
  1501  158C  160A  158A  2442  160A  118A  	fcall	___wmul
  1502  1591  0874               	movf	?___wmul+1,w
  1503  1592  1683               	bsf	3,5	;RP0=1, select bank1
  1504  1593  1303               	bcf	3,6	;RP1=0, select bank1
  1505  1594  00D2               	movwf	(sprintf@prec+1)^(0+128)
  1506  1595  0873               	movf	?___wmul,w
  1507  1596  00D1               	movwf	sprintf@prec^(0+128)
  1508  1597                     l3886:
  1509                           
  1510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1511  1597  0828               	movf	sprintf@f^(0+128),w
  1512  1598  0084               	movwf	4
  1513  1599  160A  158A  2000  160A  118A  	fcall	stringdir
  1514  159E  3ED0               	addlw	208
  1515  159F  00B5               	movwf	??_sprintf^(0+128)
  1516  15A0  30FF               	movlw	255
  1517  15A1  1803               	skipnc
  1518  15A2  3000               	movlw	0
  1519  15A3  00B6               	movwf	(??_sprintf^(0+128)+1)
  1520  15A4  0835               	movf	??_sprintf^(0+128),w
  1521  15A5  07D1               	addwf	sprintf@prec^(0+128),f
  1522  15A6  1803               	skipnc
  1523  15A7  0AD2               	incf	(sprintf@prec+1)^(0+128),f
  1524  15A8  0836               	movf	(??_sprintf+1)^(0+128),w
  1525  15A9  07D2               	addwf	(sprintf@prec+1)^(0+128),f
  1526  15AA                     l3888:
  1527  15AA  3001               	movlw	1
  1528  15AB  00B5               	movwf	??_sprintf^(0+128)
  1529  15AC  0835               	movf	??_sprintf^(0+128),w
  1530  15AD  07A8               	addwf	sprintf@f^(0+128),f
  1531  15AE                     l3890:
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1534  15AE  0828               	movf	sprintf@f^(0+128),w
  1535  15AF  0084               	movwf	4
  1536  15B0  160A  158A  2000  160A  118A  	fcall	stringdir
  1537  15B5  160A  158A  23E6  160A  118A  	fcall	_isdigit
  1538  15BA  1803               	btfsc	3,0
  1539  15BB  2DBD               	goto	u6751
  1540  15BC  2DBE               	goto	u6750
  1541  15BD                     u6751:
  1542  15BD  2D82               	goto	l3884
  1543  15BE                     u6750:
  1544  15BE  2DC5               	goto	l3898
  1545  15BF                     l3892:
  1546                           
  1547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1548  15BF  01D1               	clrf	sprintf@prec^(0+128)
  1549  15C0  01D2               	clrf	(sprintf@prec+1)^(0+128)
  1550  15C1                     l3894:
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1553  15C1  164A               	bsf	(sprintf@flag^(0+128)+1),4
  1554  15C2  2DC5               	goto	l3898
  1555  15C3                     l266:	
  1556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1557                           
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1560  15C3  154A               	bsf	(sprintf@flag^(0+128)+1),2
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1563  15C4  2DE1               	goto	l3900
  1564  15C5                     l3898:
  1565  15C5  3001               	movlw	1
  1566  15C6  1683               	bsf	3,5	;RP0=1, select bank1
  1567  15C7  1303               	bcf	3,6	;RP1=0, select bank1
  1568  15C8  07A8               	addwf	sprintf@f^(0+128),f
  1569  15C9  30FF               	movlw	-1
  1570  15CA  0728               	addwf	sprintf@f^(0+128),w
  1571  15CB  0084               	movwf	4
  1572  15CC  160A  158A  2000  160A  118A  	fcall	stringdir
  1573  15D1  00D4               	movwf	sprintf@c^(0+128)
  1574  15D2  00B5               	movwf	??_sprintf^(0+128)
  1575  15D3  01B6               	clrf	(??_sprintf^(0+128)+1)
  1576                           
  1577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1578                           ; Switch size 1, requested type "simple"
  1579                           ; Number of cases is 1, Range of values is 0 to 0
  1580                           ; switch strategies available:
  1581                           ; Name         Instructions Cycles
  1582                           ; simple_byte            4     3 (average)
  1583                           ; direct_byte           11     8 (fixed)
  1584                           ; jumptable            260     6 (fixed)
  1585                           ;	Chosen strategy is simple_byte
  1586  15D4  0836               	movf	(??_sprintf+1)^(0+128),w
  1587  15D5  3A00               	xorlw	0	; case 0
  1588  15D6  1903               	skipnz
  1589  15D7  2DD9               	goto	l4234
  1590  15D8  2CEA               	goto	L1
  1591  15D9                     l4234:
  1592                           
  1593                           ; Switch size 1, requested type "simple"
  1594                           ; Number of cases is 2, Range of values is 0 to 102
  1595                           ; switch strategies available:
  1596                           ; Name         Instructions Cycles
  1597                           ; simple_byte            7     4 (average)
  1598                           ; jumptable            260     6 (fixed)
  1599                           ;	Chosen strategy is simple_byte
  1600  15D9  0835               	movf	??_sprintf^(0+128),w
  1601  15DA  3A00               	xorlw	0	; case 0
  1602  15DB  1903               	skipnz
  1603  15DC  2FFD               	goto	L3
  1604  15DD  3A66               	xorlw	102	; case 102
  1605  15DE  1903               	skipnz
  1606  15DF  2DC3               	goto	l266
  1607  15E0  2CEA               	goto	L1
  1608  15E1                     l3900:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1611  15E1  3000               	movlw	0
  1612  15E2  0549               	andwf	sprintf@flag^(0+128),w
  1613  15E3  00B5               	movwf	??_sprintf^(0+128)
  1614  15E4  3007               	movlw	7
  1615  15E5  054A               	andwf	(sprintf@flag+1)^(0+128),w
  1616  15E6  00B6               	movwf	(??_sprintf+1)^(0+128)
  1617  15E7  0835               	movf	??_sprintf^(0+128),w
  1618  15E8  0436               	iorwf	(??_sprintf^(0+128)+1),w
  1619  15E9  1903               	btfsc	3,2
  1620  15EA  2DEC               	goto	u6761
  1621  15EB  2DEF               	goto	u6760
  1622  15EC                     u6761:
  1623  15EC  120A  118A  2D1B   	goto	l4074
  1624  15EF                     u6760:
  1625  15EF                     l3902:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1628  15EF  1E4A               	btfss	(sprintf@flag+1)^(0+128),4
  1629  15F0  2DF2               	goto	u6771
  1630  15F1  2DF3               	goto	u6770
  1631  15F2                     u6771:
  1632  15F2  2DF7               	goto	l3906
  1633  15F3                     u6770:
  1634  15F3                     l3904:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1637  15F3  3006               	movlw	6
  1638  15F4  00D1               	movwf	sprintf@prec^(0+128)
  1639  15F5  3000               	movlw	0
  1640  15F6  00D2               	movwf	(sprintf@prec^(0+128)+1)
  1641  15F7                     l3906:
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1644  15F7  083E               	movf	sprintf@ap^(0+128),w
  1645  15F8  0084               	movwf	4
  1646  15F9  1383               	bcf	3,7	;select IRP bank0
  1647  15FA  0800               	movf	0,w
  1648  15FB  00CD               	movwf	sprintf@fval^(0+128)
  1649  15FC  0A84               	incf	4,f
  1650  15FD  0800               	movf	0,w
  1651  15FE  00CE               	movwf	(sprintf@fval+1)^(0+128)
  1652  15FF  0A84               	incf	4,f
  1653  1600  0800               	movf	0,w
  1654  1601  00CF               	movwf	(sprintf@fval+2)^(0+128)
  1655  1602  0A84               	incf	4,f
  1656  1603  0800               	movf	0,w
  1657  1604  00D0               	movwf	(sprintf@fval+3)^(0+128)
  1658  1605                     l3908:
  1659  1605  3004               	movlw	4
  1660  1606  00B5               	movwf	??_sprintf^(0+128)
  1661  1607  0835               	movf	??_sprintf^(0+128),w
  1662  1608  07BE               	addwf	sprintf@ap^(0+128),f
  1663  1609                     l3910:
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1666  1609  0850               	movf	(sprintf@fval+3)^(0+128),w
  1667  160A  1283               	bcf	3,5	;RP0=0, select bank0
  1668  160B  1303               	bcf	3,6	;RP1=0, select bank0
  1669  160C  00A3               	movwf	___flge@ff1+3
  1670  160D  1683               	bsf	3,5	;RP0=1, select bank1
  1671  160E  1303               	bcf	3,6	;RP1=0, select bank1
  1672  160F  084F               	movf	(sprintf@fval+2)^(0+128),w
  1673  1610  1283               	bcf	3,5	;RP0=0, select bank0
  1674  1611  1303               	bcf	3,6	;RP1=0, select bank0
  1675  1612  00A2               	movwf	___flge@ff1+2
  1676  1613  1683               	bsf	3,5	;RP0=1, select bank1
  1677  1614  1303               	bcf	3,6	;RP1=0, select bank1
  1678  1615  084E               	movf	(sprintf@fval+1)^(0+128),w
  1679  1616  1283               	bcf	3,5	;RP0=0, select bank0
  1680  1617  1303               	bcf	3,6	;RP1=0, select bank0
  1681  1618  00A1               	movwf	___flge@ff1+1
  1682  1619  1683               	bsf	3,5	;RP0=1, select bank1
  1683  161A  1303               	bcf	3,6	;RP1=0, select bank1
  1684  161B  084D               	movf	sprintf@fval^(0+128),w
  1685  161C  1283               	bcf	3,5	;RP0=0, select bank0
  1686  161D  1303               	bcf	3,6	;RP1=0, select bank0
  1687  161E  00A0               	movwf	___flge@ff1
  1688  161F  3000               	movlw	0
  1689  1620  00A7               	movwf	___flge@ff2+3
  1690  1621  3000               	movlw	0
  1691  1622  00A6               	movwf	___flge@ff2+2
  1692  1623  3000               	movlw	0
  1693  1624  00A5               	movwf	___flge@ff2+1
  1694  1625  3000               	movlw	0
  1695  1626  00A4               	movwf	___flge@ff2
  1696  1627  160A  158A  275C  160A  118A  	fcall	___flge
  1697  162C  1803               	btfsc	3,0
  1698  162D  2E2F               	goto	u6781
  1699  162E  2E30               	goto	u6780
  1700  162F                     u6781:
  1701  162F  2E4D               	goto	l3916
  1702  1630                     u6780:
  1703  1630                     l3912:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1706  1630  1683               	bsf	3,5	;RP0=1, select bank1
  1707  1631  1303               	bcf	3,6	;RP1=0, select bank1
  1708  1632  0850               	movf	(sprintf@fval+3)^(0+128),w
  1709  1633  00F6               	movwf	___flneg@f1+3
  1710  1634  084F               	movf	(sprintf@fval+2)^(0+128),w
  1711  1635  00F5               	movwf	___flneg@f1+2
  1712  1636  084E               	movf	(sprintf@fval+1)^(0+128),w
  1713  1637  00F4               	movwf	___flneg@f1+1
  1714  1638  084D               	movf	sprintf@fval^(0+128),w
  1715  1639  00F3               	movwf	___flneg@f1
  1716  163A  160A  158A  23DB  160A  118A  	fcall	___flneg
  1717  163F  0876               	movf	?___flneg+3,w
  1718  1640  1683               	bsf	3,5	;RP0=1, select bank1
  1719  1641  1303               	bcf	3,6	;RP1=0, select bank1
  1720  1642  00D0               	movwf	(sprintf@fval+3)^(0+128)
  1721  1643  0875               	movf	?___flneg+2,w
  1722  1644  00CF               	movwf	(sprintf@fval+2)^(0+128)
  1723  1645  0874               	movf	?___flneg+1,w
  1724  1646  00CE               	movwf	(sprintf@fval+1)^(0+128)
  1725  1647  0873               	movf	?___flneg,w
  1726  1648  00CD               	movwf	sprintf@fval^(0+128)
  1727  1649                     l3914:
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1730  1649  3003               	movlw	3
  1731  164A  04C9               	iorwf	sprintf@flag^(0+128),f
  1732  164B  3000               	movlw	0
  1733  164C  04CA               	iorwf	(sprintf@flag+1)^(0+128),f
  1734  164D                     l3916:
  1735                           
  1736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1737  164D  1683               	bsf	3,5	;RP0=1, select bank1
  1738  164E  1303               	bcf	3,6	;RP1=0, select bank1
  1739  164F  01C7               	clrf	sprintf@eexp^(0+128)
  1740  1650  01C8               	clrf	(sprintf@eexp+1)^(0+128)
  1741  1651                     l3918:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1744  1651  0850               	movf	(sprintf@fval+3)^(0+128),w
  1745  1652  1283               	bcf	3,5	;RP0=0, select bank0
  1746  1653  1303               	bcf	3,6	;RP1=0, select bank0
  1747  1654  00A3               	movwf	___fleq@ff1+3
  1748  1655  1683               	bsf	3,5	;RP0=1, select bank1
  1749  1656  1303               	bcf	3,6	;RP1=0, select bank1
  1750  1657  084F               	movf	(sprintf@fval+2)^(0+128),w
  1751  1658  1283               	bcf	3,5	;RP0=0, select bank0
  1752  1659  1303               	bcf	3,6	;RP1=0, select bank0
  1753  165A  00A2               	movwf	___fleq@ff1+2
  1754  165B  1683               	bsf	3,5	;RP0=1, select bank1
  1755  165C  1303               	bcf	3,6	;RP1=0, select bank1
  1756  165D  084E               	movf	(sprintf@fval+1)^(0+128),w
  1757  165E  1283               	bcf	3,5	;RP0=0, select bank0
  1758  165F  1303               	bcf	3,6	;RP1=0, select bank0
  1759  1660  00A1               	movwf	___fleq@ff1+1
  1760  1661  1683               	bsf	3,5	;RP0=1, select bank1
  1761  1662  1303               	bcf	3,6	;RP1=0, select bank1
  1762  1663  084D               	movf	sprintf@fval^(0+128),w
  1763  1664  1283               	bcf	3,5	;RP0=0, select bank0
  1764  1665  1303               	bcf	3,6	;RP1=0, select bank0
  1765  1666  00A0               	movwf	___fleq@ff1
  1766  1667  3000               	movlw	0
  1767  1668  00A7               	movwf	___fleq@ff2+3
  1768  1669  3000               	movlw	0
  1769  166A  00A6               	movwf	___fleq@ff2+2
  1770  166B  3000               	movlw	0
  1771  166C  00A5               	movwf	___fleq@ff2+1
  1772  166D  3000               	movlw	0
  1773  166E  00A4               	movwf	___fleq@ff2
  1774  166F  160A  158A  251A  160A  118A  	fcall	___fleq
  1775  1674  1803               	btfsc	3,0
  1776  1675  2E77               	goto	u6791
  1777  1676  2E78               	goto	u6790
  1778  1677                     u6791:
  1779  1677  2F94               	goto	l3944
  1780  1678                     u6790:
  1781  1678                     l3920:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1784  1678  1003               	clrc
  1785  1679  1683               	bsf	3,5	;RP0=1, select bank1
  1786  167A  1303               	bcf	3,6	;RP1=0, select bank1
  1787  167B  0D4F               	rlf	(sprintf@fval+2)^(0+128),w
  1788  167C  0D50               	rlf	(sprintf@fval+3)^(0+128),w
  1789  167D  3E82               	addlw	130
  1790  167E  00C7               	movwf	sprintf@eexp^(0+128)
  1791  167F  30FF               	movlw	255
  1792  1680  1803               	skipnc
  1793  1681  3000               	movlw	0
  1794  1682  00C8               	movwf	(sprintf@eexp^(0+128)+1)
  1795  1683                     l3922:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1798  1683  30FF               	movlw	255
  1799  1684  07C7               	addwf	sprintf@eexp^(0+128),f
  1800  1685  1803               	skipnc
  1801  1686  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  1802  1687  30FF               	movlw	255
  1803  1688  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  1804  1689                     l3924:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1807  1689  3003               	movlw	3
  1808  168A  00F3               	movwf	___wmul@multiplier
  1809  168B  3000               	movlw	0
  1810  168C  00F4               	movwf	___wmul@multiplier+1
  1811  168D  0848               	movf	(sprintf@eexp+1)^(0+128),w
  1812  168E  00F6               	movwf	___wmul@multiplicand+1
  1813  168F  0847               	movf	sprintf@eexp^(0+128),w
  1814  1690  00F5               	movwf	___wmul@multiplicand
  1815  1691  160A  158A  2442  160A  118A  	fcall	___wmul
  1816  1696  0874               	movf	?___wmul+1,w
  1817  1697  1683               	bsf	3,5	;RP0=1, select bank1
  1818  1698  1303               	bcf	3,6	;RP1=0, select bank1
  1819  1699  00C8               	movwf	(sprintf@eexp+1)^(0+128)
  1820  169A  0873               	movf	?___wmul,w
  1821  169B  00C7               	movwf	sprintf@eexp^(0+128)
  1822  169C                     l3926:
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1825  169C  300A               	movlw	10
  1826  169D  1283               	bcf	3,5	;RP0=0, select bank0
  1827  169E  1303               	bcf	3,6	;RP1=0, select bank0
  1828  169F  00A2               	movwf	___awdiv@divisor
  1829  16A0  3000               	movlw	0
  1830  16A1  00A3               	movwf	___awdiv@divisor+1
  1831  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  1832  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  1833  16A4  0848               	movf	(sprintf@eexp+1)^(0+128),w
  1834  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  1835  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  1836  16A7  00A5               	movwf	___awdiv@dividend+1
  1837  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  1838  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  1839  16AA  0847               	movf	sprintf@eexp^(0+128),w
  1840  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  1841  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  1842  16AD  00A4               	movwf	___awdiv@dividend
  1843  16AE  160A  158A  2683  160A  118A  	fcall	___awdiv
  1844  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  1845  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  1846  16B5  0823               	movf	?___awdiv+1,w
  1847  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  1848  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  1849  16B8  00C8               	movwf	(sprintf@eexp+1)^(0+128)
  1850  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  1851  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  1852  16BB  0822               	movf	?___awdiv,w
  1853  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  1854  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  1855  16BE  00C7               	movwf	sprintf@eexp^(0+128)
  1856  16BF                     l3928:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1859  16BF  1FC8               	btfss	(sprintf@eexp+1)^(0+128),7
  1860  16C0  2EC2               	goto	u6801
  1861  16C1  2EC3               	goto	u6800
  1862  16C2                     u6801:
  1863  16C2  2EC9               	goto	l3932
  1864  16C3                     u6800:
  1865  16C3                     l3930:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1868  16C3  30FF               	movlw	255
  1869  16C4  07C7               	addwf	sprintf@eexp^(0+128),f
  1870  16C5  1803               	skipnc
  1871  16C6  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  1872  16C7  30FF               	movlw	255
  1873  16C8  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  1874  16C9                     l3932:
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1877  16C9  0347               	decf	sprintf@eexp^(0+128),w
  1878  16CA  3AFF               	xorlw	255
  1879  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  1880  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  1881  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  1882  16D2  0847               	movf	?_scale+3,w
  1883  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  1884  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  1885  16D5  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  1886  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  1887  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  1888  16D8  0846               	movf	?_scale+2,w
  1889  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  1890  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  1891  16DB  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  1892  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  1893  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  1894  16DE  0845               	movf	?_scale+1,w
  1895  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  1896  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  1897  16E1  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  1898  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  1899  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  1900  16E4  0844               	movf	?_scale,w
  1901  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  1902  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  1903  16E7  00C3               	movwf	sprintf@tmpval^(0+128)
  1904  16E8                     l3934:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1907  16E8  0850               	movf	(sprintf@fval+3)^(0+128),w
  1908  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  1909  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  1910  16EB  00AD               	movwf	___flmul@b+3
  1911  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  1912  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  1913  16EE  084F               	movf	(sprintf@fval+2)^(0+128),w
  1914  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  1915  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  1916  16F1  00AC               	movwf	___flmul@b+2
  1917  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  1918  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  1919  16F4  084E               	movf	(sprintf@fval+1)^(0+128),w
  1920  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  1921  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  1922  16F7  00AB               	movwf	___flmul@b+1
  1923  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  1924  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  1925  16FA  084D               	movf	sprintf@fval^(0+128),w
  1926  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  1927  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  1928  16FD  00AA               	movwf	___flmul@b
  1929  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  1930  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  1931  1700  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  1932  1701  1283               	bcf	3,5	;RP0=0, select bank0
  1933  1702  1303               	bcf	3,6	;RP1=0, select bank0
  1934  1703  00B1               	movwf	___flmul@a+3
  1935  1704  1683               	bsf	3,5	;RP0=1, select bank1
  1936  1705  1303               	bcf	3,6	;RP1=0, select bank1
  1937  1706  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  1938  1707  1283               	bcf	3,5	;RP0=0, select bank0
  1939  1708  1303               	bcf	3,6	;RP1=0, select bank0
  1940  1709  00B0               	movwf	___flmul@a+2
  1941  170A  1683               	bsf	3,5	;RP0=1, select bank1
  1942  170B  1303               	bcf	3,6	;RP1=0, select bank1
  1943  170C  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  1944  170D  1283               	bcf	3,5	;RP0=0, select bank0
  1945  170E  1303               	bcf	3,6	;RP1=0, select bank0
  1946  170F  00AF               	movwf	___flmul@a+1
  1947  1710  1683               	bsf	3,5	;RP0=1, select bank1
  1948  1711  1303               	bcf	3,6	;RP1=0, select bank1
  1949  1712  0843               	movf	sprintf@tmpval^(0+128),w
  1950  1713  1283               	bcf	3,5	;RP0=0, select bank0
  1951  1714  1303               	bcf	3,6	;RP1=0, select bank0
  1952  1715  00AE               	movwf	___flmul@a
  1953  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  1954  171B  1283               	bcf	3,5	;RP0=0, select bank0
  1955  171C  1303               	bcf	3,6	;RP1=0, select bank0
  1956  171D  082D               	movf	?___flmul+3,w
  1957  171E  1683               	bsf	3,5	;RP0=1, select bank1
  1958  171F  1303               	bcf	3,6	;RP1=0, select bank1
  1959  1720  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  1960  1721  1283               	bcf	3,5	;RP0=0, select bank0
  1961  1722  1303               	bcf	3,6	;RP1=0, select bank0
  1962  1723  082C               	movf	?___flmul+2,w
  1963  1724  1683               	bsf	3,5	;RP0=1, select bank1
  1964  1725  1303               	bcf	3,6	;RP1=0, select bank1
  1965  1726  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  1966  1727  1283               	bcf	3,5	;RP0=0, select bank0
  1967  1728  1303               	bcf	3,6	;RP1=0, select bank0
  1968  1729  082B               	movf	?___flmul+1,w
  1969  172A  1683               	bsf	3,5	;RP0=1, select bank1
  1970  172B  1303               	bcf	3,6	;RP1=0, select bank1
  1971  172C  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  1972  172D  1283               	bcf	3,5	;RP0=0, select bank0
  1973  172E  1303               	bcf	3,6	;RP1=0, select bank0
  1974  172F  082A               	movf	?___flmul,w
  1975  1730  1683               	bsf	3,5	;RP0=1, select bank1
  1976  1731  1303               	bcf	3,6	;RP1=0, select bank1
  1977  1732  00C3               	movwf	sprintf@tmpval^(0+128)
  1978  1733                     l3936:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  1981  1733  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  1982  1734  1283               	bcf	3,5	;RP0=0, select bank0
  1983  1735  1303               	bcf	3,6	;RP1=0, select bank0
  1984  1736  00A3               	movwf	___flge@ff1+3
  1985  1737  1683               	bsf	3,5	;RP0=1, select bank1
  1986  1738  1303               	bcf	3,6	;RP1=0, select bank1
  1987  1739  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  1988  173A  1283               	bcf	3,5	;RP0=0, select bank0
  1989  173B  1303               	bcf	3,6	;RP1=0, select bank0
  1990  173C  00A2               	movwf	___flge@ff1+2
  1991  173D  1683               	bsf	3,5	;RP0=1, select bank1
  1992  173E  1303               	bcf	3,6	;RP1=0, select bank1
  1993  173F  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  1994  1740  1283               	bcf	3,5	;RP0=0, select bank0
  1995  1741  1303               	bcf	3,6	;RP1=0, select bank0
  1996  1742  00A1               	movwf	___flge@ff1+1
  1997  1743  1683               	bsf	3,5	;RP0=1, select bank1
  1998  1744  1303               	bcf	3,6	;RP1=0, select bank1
  1999  1745  0843               	movf	sprintf@tmpval^(0+128),w
  2000  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2001  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2002  1748  00A0               	movwf	___flge@ff1
  2003  1749  303F               	movlw	63
  2004  174A  00A7               	movwf	___flge@ff2+3
  2005  174B  3080               	movlw	128
  2006  174C  00A6               	movwf	___flge@ff2+2
  2007  174D  3000               	movlw	0
  2008  174E  00A5               	movwf	___flge@ff2+1
  2009  174F  3000               	movlw	0
  2010  1750  00A4               	movwf	___flge@ff2
  2011  1751  160A  158A  275C  160A  118A  	fcall	___flge
  2012  1756  1803               	btfsc	3,0
  2013  1757  2F59               	goto	u6811
  2014  1758  2F5A               	goto	u6810
  2015  1759                     u6811:
  2016  1759  2F63               	goto	l3940
  2017  175A                     u6810:
  2018  175A                     l3938:
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2021  175A  30FF               	movlw	255
  2022  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2023  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2024  175D  07C7               	addwf	sprintf@eexp^(0+128),f
  2025  175E  1803               	skipnc
  2026  175F  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2027  1760  30FF               	movlw	255
  2028  1761  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2029  1762  2F94               	goto	l3944
  2030  1763                     l3940:
  2031  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2032  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2033  1765  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2034  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2035  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2036  1768  00A3               	movwf	___flge@ff1+3
  2037  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2038  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2039  176B  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2040  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2041  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2042  176E  00A2               	movwf	___flge@ff1+2
  2043  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2044  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2045  1771  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2046  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2047  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2048  1774  00A1               	movwf	___flge@ff1+1
  2049  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2050  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2051  1777  0843               	movf	sprintf@tmpval^(0+128),w
  2052  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2053  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2054  177A  00A0               	movwf	___flge@ff1
  2055  177B  3041               	movlw	65
  2056  177C  00A7               	movwf	___flge@ff2+3
  2057  177D  3020               	movlw	32
  2058  177E  00A6               	movwf	___flge@ff2+2
  2059  177F  3000               	movlw	0
  2060  1780  00A5               	movwf	___flge@ff2+1
  2061  1781  3000               	movlw	0
  2062  1782  00A4               	movwf	___flge@ff2
  2063  1783  160A  158A  275C  160A  118A  	fcall	___flge
  2064  1788  1C03               	btfss	3,0
  2065  1789  2F8B               	goto	u6821
  2066  178A  2F8C               	goto	u6820
  2067  178B                     u6821:
  2068  178B  2F94               	goto	l3944
  2069  178C                     u6820:
  2070  178C                     l3942:
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2073  178C  3001               	movlw	1
  2074  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2075  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2076  178F  07C7               	addwf	sprintf@eexp^(0+128),f
  2077  1790  1803               	skipnc
  2078  1791  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2079  1792  3000               	movlw	0
  2080  1793  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2081  1794                     l3944:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2084  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2085  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2086  1796  0852               	movf	(sprintf@prec+1)^(0+128),w
  2087  1797  3A80               	xorlw	128
  2088  1798  00FF               	movwf	btemp+1
  2089  1799  3080               	movlw	128
  2090  179A  027F               	subwf	btemp+1,w
  2091  179B  1D03               	skipz
  2092  179C  2F9F               	goto	u6835
  2093  179D  300D               	movlw	13
  2094  179E  0251               	subwf	sprintf@prec^(0+128),w
  2095  179F                     u6835:
  2096  179F  1803               	skipnc
  2097  17A0  2FA2               	goto	u6831
  2098  17A1  2FA3               	goto	u6830
  2099  17A2                     u6831:
  2100  17A2  2FEA               	goto	l3948
  2101  17A3                     u6830:
  2102  17A3                     l3946:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2105  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2106  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2107  17A5  0851               	movf	sprintf@prec^(0+128),w
  2108  17A6  160A  118A  204E  160A  118A  	fcall	_fround
  2109  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2110  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2111  17AD  0847               	movf	?_fround+3,w
  2112  17AE  00DB               	movwf	___fladd@b+3
  2113  17AF  0846               	movf	?_fround+2,w
  2114  17B0  00DA               	movwf	___fladd@b+2
  2115  17B1  0845               	movf	?_fround+1,w
  2116  17B2  00D9               	movwf	___fladd@b+1
  2117  17B3  0844               	movf	?_fround,w
  2118  17B4  00D8               	movwf	___fladd@b
  2119  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2120  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2121  17B7  0850               	movf	(sprintf@fval+3)^(0+128),w
  2122  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2123  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2124  17BA  00DF               	movwf	___fladd@a+3
  2125  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2126  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2127  17BD  084F               	movf	(sprintf@fval+2)^(0+128),w
  2128  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2129  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2130  17C0  00DE               	movwf	___fladd@a+2
  2131  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2132  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2133  17C3  084E               	movf	(sprintf@fval+1)^(0+128),w
  2134  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2135  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2136  17C6  00DD               	movwf	___fladd@a+1
  2137  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2138  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2139  17C9  084D               	movf	sprintf@fval^(0+128),w
  2140  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2141  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2142  17CC  00DC               	movwf	___fladd@a
  2143  17CD  160A  118A  225B  160A  118A  	fcall	___fladd
  2144  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2145  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2146  17D4  085B               	movf	?___fladd+3,w
  2147  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2148  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2149  17D7  00D0               	movwf	(sprintf@fval+3)^(0+128)
  2150  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2151  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2152  17DA  085A               	movf	?___fladd+2,w
  2153  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2154  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2155  17DD  00CF               	movwf	(sprintf@fval+2)^(0+128)
  2156  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2157  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2158  17E0  0859               	movf	?___fladd+1,w
  2159  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2160  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2161  17E3  00CE               	movwf	(sprintf@fval+1)^(0+128)
  2162  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2163  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2164  17E6  0858               	movf	?___fladd,w
  2165  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2166  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2167  17E9  00CD               	movwf	sprintf@fval^(0+128)
  2168  17EA                     l3948:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2171  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2172  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2173  17EC  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2174  17ED  3A80               	xorlw	128
  2175  17EE  00FF               	movwf	btemp+1
  2176  17EF  3080               	movlw	128
  2177  17F0  027F               	subwf	btemp+1,w
  2178  17F1  1D03               	skipz
  2179  17F2  2FF5               	goto	u6845
  2180  17F3  300A               	movlw	10
  2181  17F4  0247               	subwf	sprintf@eexp^(0+128),w
  2182  17F5                     u6845:
  2183  17F5  1803               	skipnc
  2184  17F6  2FFA               	goto	u6841
  2185  17F7  120A  118A  281E   	goto	u6840
  2186  17FA                     u6841:
  2187  17FA  120A  118A  287D   	goto	l3956
  2188  17FD                     L3:
  2189  17FD                     L2:
  2190  17FD  120A  118A  2E2D   	ljmp	l4138
  2191                           
  2192                           	psect	text2
  2193  0C9D                     __ptext2:	
  2194 ;; *************** function _scale *****************
  2195 ;; Defined at:
  2196 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  scl             1    wreg     char 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  scl             1   54[BANK0 ] char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  4   36[BANK0 ] char 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         0       4       0       0       0
  2211 ;;      Locals:         0       5       0       0       0
  2212 ;;      Temps:          0      10       0       0       0
  2213 ;;      Totals:         0      19       0       0       0
  2214 ;;Total ram usage:       19 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    3
  2217 ;; This function calls:
  2218 ;;		___awdiv
  2219 ;;		___awmod
  2220 ;;		___flmul
  2221 ;; This function is called by:
  2222 ;;		_sprintf
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _scale
  2228  0C9D                     _scale:
  2229                           
  2230                           ;incstack = 0
  2231                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2232                           ;scale@scl stored from wreg
  2233  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0C9F  00D6               	movwf	scale@scl
  2236  0CA0                     l3578:
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2239  0CA0  1FD6               	btfss	scale@scl,7
  2240  0CA1  2CA3               	goto	u5911
  2241  0CA2  2CA4               	goto	u5910
  2242  0CA3                     u5911:
  2243  0CA3  2E53               	goto	l3600
  2244  0CA4                     u5910:
  2245  0CA4                     l3580:
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2248  0CA4  09D6               	comf	scale@scl,f
  2249  0CA5  0AD6               	incf	scale@scl,f
  2250  0CA6                     l3582:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2253  0CA6  0856               	movf	scale@scl,w
  2254  0CA7  3A80               	xorlw	128
  2255  0CA8  3E12               	addlw	-238
  2256  0CA9  1C03               	skipc
  2257  0CAA  2CAC               	goto	u5921
  2258  0CAB  2CAD               	goto	u5920
  2259  0CAC                     u5921:
  2260  0CAC  2D97               	goto	l3590
  2261  0CAD                     u5920:
  2262  0CAD                     l3584:
  2263                           
  2264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2265  0CAD  300A               	movlw	10
  2266  0CAE  00A2               	movwf	___awdiv@divisor
  2267  0CAF  3000               	movlw	0
  2268  0CB0  00A3               	movwf	___awdiv@divisor+1
  2269  0CB1  0856               	movf	scale@scl,w
  2270  0CB2  00F5               	movwf	___awmod@dividend
  2271  0CB3  01F6               	clrf	___awmod@dividend+1
  2272  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2273  0CB5  03F6               	decf	___awmod@dividend+1,f
  2274  0CB6  3064               	movlw	100
  2275  0CB7  00F3               	movwf	___awmod@divisor
  2276  0CB8  3000               	movlw	0
  2277  0CB9  00F4               	movwf	___awmod@divisor+1
  2278  0CBA  160A  158A  25C0  120A  158A  	fcall	___awmod
  2279  0CBF  0874               	movf	?___awmod+1,w
  2280  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0CC2  00A5               	movwf	___awdiv@dividend+1
  2283  0CC3  0873               	movf	?___awmod,w
  2284  0CC4  00A4               	movwf	___awdiv@dividend
  2285  0CC5  160A  158A  2683  120A  158A  	fcall	___awdiv
  2286  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0CCC  0822               	movf	?___awdiv,w
  2289  0CCD  00C8               	movwf	??_scale
  2290  0CCE  3001               	movlw	1
  2291  0CCF                     u5935:
  2292  0CCF  1003               	clrc
  2293  0CD0  0DC8               	rlf	??_scale,f
  2294  0CD1  3EFF               	addlw	-1
  2295  0CD2  1D03               	skipz
  2296  0CD3  2CCF               	goto	u5935
  2297  0CD4  1003               	clrc
  2298  0CD5  0D48               	rlf	??_scale,w
  2299  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2300  0CD7  0084               	movwf	4
  2301  0CD8  160A  158A  2000  120A  158A  	fcall	stringdir
  2302  0CDD  00C9               	movwf	??_scale+1
  2303  0CDE  160A  158A  2000  120A  158A  	fcall	stringdir
  2304  0CE3  00CA               	movwf	??_scale+2
  2305  0CE4  160A  158A  2000  120A  158A  	fcall	stringdir
  2306  0CE9  00CB               	movwf	??_scale+3
  2307  0CEA  160A  158A  2000  120A  158A  	fcall	stringdir
  2308  0CEF  00CC               	movwf	??_scale+4
  2309  0CF0  084C               	movf	??_scale+4,w
  2310  0CF1  00AD               	movwf	___flmul@b+3
  2311  0CF2  084B               	movf	??_scale+3,w
  2312  0CF3  00AC               	movwf	___flmul@b+2
  2313  0CF4  084A               	movf	??_scale+2,w
  2314  0CF5  00AB               	movwf	___flmul@b+1
  2315  0CF6  0849               	movf	??_scale+1,w
  2316  0CF7  00AA               	movwf	___flmul@b
  2317  0CF8  3064               	movlw	100
  2318  0CF9  00A2               	movwf	___awdiv@divisor
  2319  0CFA  3000               	movlw	0
  2320  0CFB  00A3               	movwf	___awdiv@divisor+1
  2321  0CFC  0856               	movf	scale@scl,w
  2322  0CFD  00A4               	movwf	___awdiv@dividend
  2323  0CFE  01A5               	clrf	___awdiv@dividend+1
  2324  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  2325  0D00  03A5               	decf	___awdiv@dividend+1,f
  2326  0D01  160A  158A  2683  120A  158A  	fcall	___awdiv
  2327  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2329  0D08  0822               	movf	?___awdiv,w
  2330  0D09  00CD               	movwf	??_scale+5
  2331  0D0A  3001               	movlw	1
  2332  0D0B                     u5945:
  2333  0D0B  1003               	clrc
  2334  0D0C  0DCD               	rlf	??_scale+5,f
  2335  0D0D  3EFF               	addlw	-1
  2336  0D0E  1D03               	skipz
  2337  0D0F  2D0B               	goto	u5945
  2338  0D10  1003               	clrc
  2339  0D11  0D4D               	rlf	??_scale+5,w
  2340  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2341  0D13  0084               	movwf	4
  2342  0D14  160A  158A  2000  120A  158A  	fcall	stringdir
  2343  0D19  00CE               	movwf	??_scale+6
  2344  0D1A  160A  158A  2000  120A  158A  	fcall	stringdir
  2345  0D1F  00CF               	movwf	??_scale+7
  2346  0D20  160A  158A  2000  120A  158A  	fcall	stringdir
  2347  0D25  00D0               	movwf	??_scale+8
  2348  0D26  160A  158A  2000  120A  158A  	fcall	stringdir
  2349  0D2B  00D1               	movwf	??_scale+9
  2350  0D2C  0851               	movf	??_scale+9,w
  2351  0D2D  00B1               	movwf	___flmul@a+3
  2352  0D2E  0850               	movf	??_scale+8,w
  2353  0D2F  00B0               	movwf	___flmul@a+2
  2354  0D30  084F               	movf	??_scale+7,w
  2355  0D31  00AF               	movwf	___flmul@a+1
  2356  0D32  084E               	movf	??_scale+6,w
  2357  0D33  00AE               	movwf	___flmul@a
  2358  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2359  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0D3B  082D               	movf	?___flmul+3,w
  2362  0D3C  00D5               	movwf	_scale$1112+3
  2363  0D3D  082C               	movf	?___flmul+2,w
  2364  0D3E  00D4               	movwf	_scale$1112+2
  2365  0D3F  082B               	movf	?___flmul+1,w
  2366  0D40  00D3               	movwf	_scale$1112+1
  2367  0D41  082A               	movf	?___flmul,w
  2368  0D42  00D2               	movwf	_scale$1112
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2371  0D43  300A               	movlw	10
  2372  0D44  00F3               	movwf	___awmod@divisor
  2373  0D45  3000               	movlw	0
  2374  0D46  00F4               	movwf	___awmod@divisor+1
  2375  0D47  0856               	movf	scale@scl,w
  2376  0D48  00F5               	movwf	___awmod@dividend
  2377  0D49  01F6               	clrf	___awmod@dividend+1
  2378  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2379  0D4B  03F6               	decf	___awmod@dividend+1,f
  2380  0D4C  160A  158A  25C0  120A  158A  	fcall	___awmod
  2381  0D51  0873               	movf	?___awmod,w
  2382  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0D54  00C8               	movwf	??_scale
  2385  0D55  3001               	movlw	1
  2386  0D56                     u5955:
  2387  0D56  1003               	clrc
  2388  0D57  0DC8               	rlf	??_scale,f
  2389  0D58  3EFF               	addlw	-1
  2390  0D59  1D03               	skipz
  2391  0D5A  2D56               	goto	u5955
  2392  0D5B  1003               	clrc
  2393  0D5C  0D48               	rlf	??_scale,w
  2394  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2395  0D5E  0084               	movwf	4
  2396  0D5F  160A  158A  2000  120A  158A  	fcall	stringdir
  2397  0D64  00C9               	movwf	??_scale+1
  2398  0D65  160A  158A  2000  120A  158A  	fcall	stringdir
  2399  0D6A  00CA               	movwf	??_scale+2
  2400  0D6B  160A  158A  2000  120A  158A  	fcall	stringdir
  2401  0D70  00CB               	movwf	??_scale+3
  2402  0D71  160A  158A  2000  120A  158A  	fcall	stringdir
  2403  0D76  00CC               	movwf	??_scale+4
  2404  0D77  084C               	movf	??_scale+4,w
  2405  0D78  00AD               	movwf	___flmul@b+3
  2406  0D79  084B               	movf	??_scale+3,w
  2407  0D7A  00AC               	movwf	___flmul@b+2
  2408  0D7B  084A               	movf	??_scale+2,w
  2409  0D7C  00AB               	movwf	___flmul@b+1
  2410  0D7D  0849               	movf	??_scale+1,w
  2411  0D7E  00AA               	movwf	___flmul@b
  2412  0D7F  0855               	movf	_scale$1112+3,w
  2413  0D80  00B1               	movwf	___flmul@a+3
  2414  0D81  0854               	movf	_scale$1112+2,w
  2415  0D82  00B0               	movwf	___flmul@a+2
  2416  0D83  0853               	movf	_scale$1112+1,w
  2417  0D84  00AF               	movwf	___flmul@a+1
  2418  0D85  0852               	movf	_scale$1112,w
  2419  0D86  00AE               	movwf	___flmul@a
  2420  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2421  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0D8E  082D               	movf	?___flmul+3,w
  2424  0D8F  00C7               	movwf	?_scale+3
  2425  0D90  082C               	movf	?___flmul+2,w
  2426  0D91  00C6               	movwf	?_scale+2
  2427  0D92  082B               	movf	?___flmul+1,w
  2428  0D93  00C5               	movwf	?_scale+1
  2429  0D94  082A               	movf	?___flmul,w
  2430  0D95  00C4               	movwf	?_scale
  2431  0D96  2FFF               	goto	l238
  2432  0D97                     l3590:
  2433  0D97  0856               	movf	scale@scl,w
  2434  0D98  3A80               	xorlw	128
  2435  0D99  3E75               	addlw	-139
  2436  0D9A  1C03               	skipc
  2437  0D9B  2D9D               	goto	u5961
  2438  0D9C  2D9E               	goto	u5960
  2439  0D9D                     u5961:
  2440  0D9D  2E26               	goto	l3596
  2441  0D9E                     u5960:
  2442  0D9E                     l3592:
  2443                           
  2444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2445  0D9E  300A               	movlw	10
  2446  0D9F  00F3               	movwf	___awmod@divisor
  2447  0DA0  3000               	movlw	0
  2448  0DA1  00F4               	movwf	___awmod@divisor+1
  2449  0DA2  0856               	movf	scale@scl,w
  2450  0DA3  00F5               	movwf	___awmod@dividend
  2451  0DA4  01F6               	clrf	___awmod@dividend+1
  2452  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2453  0DA6  03F6               	decf	___awmod@dividend+1,f
  2454  0DA7  160A  158A  25C0  120A  158A  	fcall	___awmod
  2455  0DAC  0873               	movf	?___awmod,w
  2456  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0DAF  00C8               	movwf	??_scale
  2459  0DB0  3001               	movlw	1
  2460  0DB1                     u5975:
  2461  0DB1  1003               	clrc
  2462  0DB2  0DC8               	rlf	??_scale,f
  2463  0DB3  3EFF               	addlw	-1
  2464  0DB4  1D03               	skipz
  2465  0DB5  2DB1               	goto	u5975
  2466  0DB6  1003               	clrc
  2467  0DB7  0D48               	rlf	??_scale,w
  2468  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2469  0DB9  0084               	movwf	4
  2470  0DBA  160A  158A  2000  120A  158A  	fcall	stringdir
  2471  0DBF  00C9               	movwf	??_scale+1
  2472  0DC0  160A  158A  2000  120A  158A  	fcall	stringdir
  2473  0DC5  00CA               	movwf	??_scale+2
  2474  0DC6  160A  158A  2000  120A  158A  	fcall	stringdir
  2475  0DCB  00CB               	movwf	??_scale+3
  2476  0DCC  160A  158A  2000  120A  158A  	fcall	stringdir
  2477  0DD1  00CC               	movwf	??_scale+4
  2478  0DD2  084C               	movf	??_scale+4,w
  2479  0DD3  00AD               	movwf	___flmul@b+3
  2480  0DD4  084B               	movf	??_scale+3,w
  2481  0DD5  00AC               	movwf	___flmul@b+2
  2482  0DD6  084A               	movf	??_scale+2,w
  2483  0DD7  00AB               	movwf	___flmul@b+1
  2484  0DD8  0849               	movf	??_scale+1,w
  2485  0DD9  00AA               	movwf	___flmul@b
  2486  0DDA  300A               	movlw	10
  2487  0DDB  00A2               	movwf	___awdiv@divisor
  2488  0DDC  3000               	movlw	0
  2489  0DDD  00A3               	movwf	___awdiv@divisor+1
  2490  0DDE  0856               	movf	scale@scl,w
  2491  0DDF  00A4               	movwf	___awdiv@dividend
  2492  0DE0  01A5               	clrf	___awdiv@dividend+1
  2493  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  2494  0DE2  03A5               	decf	___awdiv@dividend+1,f
  2495  0DE3  160A  158A  2683  120A  158A  	fcall	___awdiv
  2496  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0DEA  0822               	movf	?___awdiv,w
  2499  0DEB  00CD               	movwf	??_scale+5
  2500  0DEC  3001               	movlw	1
  2501  0DED                     u5985:
  2502  0DED  1003               	clrc
  2503  0DEE  0DCD               	rlf	??_scale+5,f
  2504  0DEF  3EFF               	addlw	-1
  2505  0DF0  1D03               	skipz
  2506  0DF1  2DED               	goto	u5985
  2507  0DF2  1003               	clrc
  2508  0DF3  0D4D               	rlf	??_scale+5,w
  2509  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2510  0DF5  0084               	movwf	4
  2511  0DF6  160A  158A  2000  120A  158A  	fcall	stringdir
  2512  0DFB  00CE               	movwf	??_scale+6
  2513  0DFC  160A  158A  2000  120A  158A  	fcall	stringdir
  2514  0E01  00CF               	movwf	??_scale+7
  2515  0E02  160A  158A  2000  120A  158A  	fcall	stringdir
  2516  0E07  00D0               	movwf	??_scale+8
  2517  0E08  160A  158A  2000  120A  158A  	fcall	stringdir
  2518  0E0D  00D1               	movwf	??_scale+9
  2519  0E0E  0851               	movf	??_scale+9,w
  2520  0E0F  00B1               	movwf	___flmul@a+3
  2521  0E10  0850               	movf	??_scale+8,w
  2522  0E11  00B0               	movwf	___flmul@a+2
  2523  0E12  084F               	movf	??_scale+7,w
  2524  0E13  00AF               	movwf	___flmul@a+1
  2525  0E14  084E               	movf	??_scale+6,w
  2526  0E15  00AE               	movwf	___flmul@a
  2527  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2528  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2530  0E1D  082D               	movf	?___flmul+3,w
  2531  0E1E  00C7               	movwf	?_scale+3
  2532  0E1F  082C               	movf	?___flmul+2,w
  2533  0E20  00C6               	movwf	?_scale+2
  2534  0E21  082B               	movf	?___flmul+1,w
  2535  0E22  00C5               	movwf	?_scale+1
  2536  0E23  082A               	movf	?___flmul,w
  2537  0E24  00C4               	movwf	?_scale
  2538  0E25  2FFF               	goto	l238
  2539  0E26                     l3596:
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2542  0E26  0856               	movf	scale@scl,w
  2543  0E27  00C8               	movwf	??_scale
  2544  0E28  3001               	movlw	1
  2545  0E29                     u5995:
  2546  0E29  1003               	clrc
  2547  0E2A  0DC8               	rlf	??_scale,f
  2548  0E2B  3EFF               	addlw	-1
  2549  0E2C  1D03               	skipz
  2550  0E2D  2E29               	goto	u5995
  2551  0E2E  1003               	clrc
  2552  0E2F  0D48               	rlf	??_scale,w
  2553  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2554  0E31  0084               	movwf	4
  2555  0E32  160A  158A  2000  120A  158A  	fcall	stringdir
  2556  0E37  00C9               	movwf	??_scale+1
  2557  0E38  160A  158A  2000  120A  158A  	fcall	stringdir
  2558  0E3D  00CA               	movwf	??_scale+2
  2559  0E3E  160A  158A  2000  120A  158A  	fcall	stringdir
  2560  0E43  00CB               	movwf	??_scale+3
  2561  0E44  160A  158A  2000  120A  158A  	fcall	stringdir
  2562  0E49  00CC               	movwf	??_scale+4
  2563  0E4A  084C               	movf	??_scale+4,w
  2564  0E4B  00C7               	movwf	?_scale+3
  2565  0E4C  084B               	movf	??_scale+3,w
  2566  0E4D  00C6               	movwf	?_scale+2
  2567  0E4E  084A               	movf	??_scale+2,w
  2568  0E4F  00C5               	movwf	?_scale+1
  2569  0E50  0849               	movf	??_scale+1,w
  2570  0E51  00C4               	movwf	?_scale
  2571  0E52  2FFF               	goto	l238
  2572  0E53                     l3600:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2575  0E53  0856               	movf	scale@scl,w
  2576  0E54  3A80               	xorlw	128
  2577  0E55  3E12               	addlw	-238
  2578  0E56  1C03               	skipc
  2579  0E57  2E59               	goto	u6001
  2580  0E58  2E5A               	goto	u6000
  2581  0E59                     u6001:
  2582  0E59  2F44               	goto	l3608
  2583  0E5A                     u6000:
  2584  0E5A                     l3602:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2587  0E5A  300A               	movlw	10
  2588  0E5B  00A2               	movwf	___awdiv@divisor
  2589  0E5C  3000               	movlw	0
  2590  0E5D  00A3               	movwf	___awdiv@divisor+1
  2591  0E5E  0856               	movf	scale@scl,w
  2592  0E5F  00F5               	movwf	___awmod@dividend
  2593  0E60  01F6               	clrf	___awmod@dividend+1
  2594  0E61  1BF5               	btfsc	___awmod@dividend,7
  2595  0E62  03F6               	decf	___awmod@dividend+1,f
  2596  0E63  3064               	movlw	100
  2597  0E64  00F3               	movwf	___awmod@divisor
  2598  0E65  3000               	movlw	0
  2599  0E66  00F4               	movwf	___awmod@divisor+1
  2600  0E67  160A  158A  25C0  120A  158A  	fcall	___awmod
  2601  0E6C  0874               	movf	?___awmod+1,w
  2602  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2603  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2604  0E6F  00A5               	movwf	___awdiv@dividend+1
  2605  0E70  0873               	movf	?___awmod,w
  2606  0E71  00A4               	movwf	___awdiv@dividend
  2607  0E72  160A  158A  2683  120A  158A  	fcall	___awdiv
  2608  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2609  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2610  0E79  0822               	movf	?___awdiv,w
  2611  0E7A  00C8               	movwf	??_scale
  2612  0E7B  3001               	movlw	1
  2613  0E7C                     u6015:
  2614  0E7C  1003               	clrc
  2615  0E7D  0DC8               	rlf	??_scale,f
  2616  0E7E  3EFF               	addlw	-1
  2617  0E7F  1D03               	skipz
  2618  0E80  2E7C               	goto	u6015
  2619  0E81  1003               	clrc
  2620  0E82  0D48               	rlf	??_scale,w
  2621  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2622  0E84  0084               	movwf	4
  2623  0E85  160A  158A  2000  120A  158A  	fcall	stringdir
  2624  0E8A  00C9               	movwf	??_scale+1
  2625  0E8B  160A  158A  2000  120A  158A  	fcall	stringdir
  2626  0E90  00CA               	movwf	??_scale+2
  2627  0E91  160A  158A  2000  120A  158A  	fcall	stringdir
  2628  0E96  00CB               	movwf	??_scale+3
  2629  0E97  160A  158A  2000  120A  158A  	fcall	stringdir
  2630  0E9C  00CC               	movwf	??_scale+4
  2631  0E9D  084C               	movf	??_scale+4,w
  2632  0E9E  00AD               	movwf	___flmul@b+3
  2633  0E9F  084B               	movf	??_scale+3,w
  2634  0EA0  00AC               	movwf	___flmul@b+2
  2635  0EA1  084A               	movf	??_scale+2,w
  2636  0EA2  00AB               	movwf	___flmul@b+1
  2637  0EA3  0849               	movf	??_scale+1,w
  2638  0EA4  00AA               	movwf	___flmul@b
  2639  0EA5  3064               	movlw	100
  2640  0EA6  00A2               	movwf	___awdiv@divisor
  2641  0EA7  3000               	movlw	0
  2642  0EA8  00A3               	movwf	___awdiv@divisor+1
  2643  0EA9  0856               	movf	scale@scl,w
  2644  0EAA  00A4               	movwf	___awdiv@dividend
  2645  0EAB  01A5               	clrf	___awdiv@dividend+1
  2646  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  2647  0EAD  03A5               	decf	___awdiv@dividend+1,f
  2648  0EAE  160A  158A  2683  120A  158A  	fcall	___awdiv
  2649  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2651  0EB5  0822               	movf	?___awdiv,w
  2652  0EB6  00CD               	movwf	??_scale+5
  2653  0EB7  3001               	movlw	1
  2654  0EB8                     u6025:
  2655  0EB8  1003               	clrc
  2656  0EB9  0DCD               	rlf	??_scale+5,f
  2657  0EBA  3EFF               	addlw	-1
  2658  0EBB  1D03               	skipz
  2659  0EBC  2EB8               	goto	u6025
  2660  0EBD  1003               	clrc
  2661  0EBE  0D4D               	rlf	??_scale+5,w
  2662  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2663  0EC0  0084               	movwf	4
  2664  0EC1  160A  158A  2000  120A  158A  	fcall	stringdir
  2665  0EC6  00CE               	movwf	??_scale+6
  2666  0EC7  160A  158A  2000  120A  158A  	fcall	stringdir
  2667  0ECC  00CF               	movwf	??_scale+7
  2668  0ECD  160A  158A  2000  120A  158A  	fcall	stringdir
  2669  0ED2  00D0               	movwf	??_scale+8
  2670  0ED3  160A  158A  2000  120A  158A  	fcall	stringdir
  2671  0ED8  00D1               	movwf	??_scale+9
  2672  0ED9  0851               	movf	??_scale+9,w
  2673  0EDA  00B1               	movwf	___flmul@a+3
  2674  0EDB  0850               	movf	??_scale+8,w
  2675  0EDC  00B0               	movwf	___flmul@a+2
  2676  0EDD  084F               	movf	??_scale+7,w
  2677  0EDE  00AF               	movwf	___flmul@a+1
  2678  0EDF  084E               	movf	??_scale+6,w
  2679  0EE0  00AE               	movwf	___flmul@a
  2680  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2681  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0EE8  082D               	movf	?___flmul+3,w
  2684  0EE9  00D5               	movwf	_scale$1112+3
  2685  0EEA  082C               	movf	?___flmul+2,w
  2686  0EEB  00D4               	movwf	_scale$1112+2
  2687  0EEC  082B               	movf	?___flmul+1,w
  2688  0EED  00D3               	movwf	_scale$1112+1
  2689  0EEE  082A               	movf	?___flmul,w
  2690  0EEF  00D2               	movwf	_scale$1112
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2693  0EF0  300A               	movlw	10
  2694  0EF1  00F3               	movwf	___awmod@divisor
  2695  0EF2  3000               	movlw	0
  2696  0EF3  00F4               	movwf	___awmod@divisor+1
  2697  0EF4  0856               	movf	scale@scl,w
  2698  0EF5  00F5               	movwf	___awmod@dividend
  2699  0EF6  01F6               	clrf	___awmod@dividend+1
  2700  0EF7  1BF5               	btfsc	___awmod@dividend,7
  2701  0EF8  03F6               	decf	___awmod@dividend+1,f
  2702  0EF9  160A  158A  25C0  120A  158A  	fcall	___awmod
  2703  0EFE  0873               	movf	?___awmod,w
  2704  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0F01  00C8               	movwf	??_scale
  2707  0F02  3001               	movlw	1
  2708  0F03                     u6035:
  2709  0F03  1003               	clrc
  2710  0F04  0DC8               	rlf	??_scale,f
  2711  0F05  3EFF               	addlw	-1
  2712  0F06  1D03               	skipz
  2713  0F07  2F03               	goto	u6035
  2714  0F08  1003               	clrc
  2715  0F09  0D48               	rlf	??_scale,w
  2716  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2717  0F0B  0084               	movwf	4
  2718  0F0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2719  0F11  00C9               	movwf	??_scale+1
  2720  0F12  160A  158A  2000  120A  158A  	fcall	stringdir
  2721  0F17  00CA               	movwf	??_scale+2
  2722  0F18  160A  158A  2000  120A  158A  	fcall	stringdir
  2723  0F1D  00CB               	movwf	??_scale+3
  2724  0F1E  160A  158A  2000  120A  158A  	fcall	stringdir
  2725  0F23  00CC               	movwf	??_scale+4
  2726  0F24  084C               	movf	??_scale+4,w
  2727  0F25  00AD               	movwf	___flmul@b+3
  2728  0F26  084B               	movf	??_scale+3,w
  2729  0F27  00AC               	movwf	___flmul@b+2
  2730  0F28  084A               	movf	??_scale+2,w
  2731  0F29  00AB               	movwf	___flmul@b+1
  2732  0F2A  0849               	movf	??_scale+1,w
  2733  0F2B  00AA               	movwf	___flmul@b
  2734  0F2C  0855               	movf	_scale$1112+3,w
  2735  0F2D  00B1               	movwf	___flmul@a+3
  2736  0F2E  0854               	movf	_scale$1112+2,w
  2737  0F2F  00B0               	movwf	___flmul@a+2
  2738  0F30  0853               	movf	_scale$1112+1,w
  2739  0F31  00AF               	movwf	___flmul@a+1
  2740  0F32  0852               	movf	_scale$1112,w
  2741  0F33  00AE               	movwf	___flmul@a
  2742  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2743  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0F3B  082D               	movf	?___flmul+3,w
  2746  0F3C  00C7               	movwf	?_scale+3
  2747  0F3D  082C               	movf	?___flmul+2,w
  2748  0F3E  00C6               	movwf	?_scale+2
  2749  0F3F  082B               	movf	?___flmul+1,w
  2750  0F40  00C5               	movwf	?_scale+1
  2751  0F41  082A               	movf	?___flmul,w
  2752  0F42  00C4               	movwf	?_scale
  2753  0F43  2FFF               	goto	l238
  2754  0F44                     l3608:
  2755  0F44  0856               	movf	scale@scl,w
  2756  0F45  3A80               	xorlw	128
  2757  0F46  3E75               	addlw	-139
  2758  0F47  1C03               	skipc
  2759  0F48  2F4A               	goto	u6041
  2760  0F49  2F4B               	goto	u6040
  2761  0F4A                     u6041:
  2762  0F4A  2FD3               	goto	l3614
  2763  0F4B                     u6040:
  2764  0F4B                     l3610:
  2765                           
  2766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2767  0F4B  300A               	movlw	10
  2768  0F4C  00F3               	movwf	___awmod@divisor
  2769  0F4D  3000               	movlw	0
  2770  0F4E  00F4               	movwf	___awmod@divisor+1
  2771  0F4F  0856               	movf	scale@scl,w
  2772  0F50  00F5               	movwf	___awmod@dividend
  2773  0F51  01F6               	clrf	___awmod@dividend+1
  2774  0F52  1BF5               	btfsc	___awmod@dividend,7
  2775  0F53  03F6               	decf	___awmod@dividend+1,f
  2776  0F54  160A  158A  25C0  120A  158A  	fcall	___awmod
  2777  0F59  0873               	movf	?___awmod,w
  2778  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0F5C  00C8               	movwf	??_scale
  2781  0F5D  3001               	movlw	1
  2782  0F5E                     u6055:
  2783  0F5E  1003               	clrc
  2784  0F5F  0DC8               	rlf	??_scale,f
  2785  0F60  3EFF               	addlw	-1
  2786  0F61  1D03               	skipz
  2787  0F62  2F5E               	goto	u6055
  2788  0F63  1003               	clrc
  2789  0F64  0D48               	rlf	??_scale,w
  2790  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2791  0F66  0084               	movwf	4
  2792  0F67  160A  158A  2000  120A  158A  	fcall	stringdir
  2793  0F6C  00C9               	movwf	??_scale+1
  2794  0F6D  160A  158A  2000  120A  158A  	fcall	stringdir
  2795  0F72  00CA               	movwf	??_scale+2
  2796  0F73  160A  158A  2000  120A  158A  	fcall	stringdir
  2797  0F78  00CB               	movwf	??_scale+3
  2798  0F79  160A  158A  2000  120A  158A  	fcall	stringdir
  2799  0F7E  00CC               	movwf	??_scale+4
  2800  0F7F  084C               	movf	??_scale+4,w
  2801  0F80  00AD               	movwf	___flmul@b+3
  2802  0F81  084B               	movf	??_scale+3,w
  2803  0F82  00AC               	movwf	___flmul@b+2
  2804  0F83  084A               	movf	??_scale+2,w
  2805  0F84  00AB               	movwf	___flmul@b+1
  2806  0F85  0849               	movf	??_scale+1,w
  2807  0F86  00AA               	movwf	___flmul@b
  2808  0F87  300A               	movlw	10
  2809  0F88  00A2               	movwf	___awdiv@divisor
  2810  0F89  3000               	movlw	0
  2811  0F8A  00A3               	movwf	___awdiv@divisor+1
  2812  0F8B  0856               	movf	scale@scl,w
  2813  0F8C  00A4               	movwf	___awdiv@dividend
  2814  0F8D  01A5               	clrf	___awdiv@dividend+1
  2815  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  2816  0F8F  03A5               	decf	___awdiv@dividend+1,f
  2817  0F90  160A  158A  2683  120A  158A  	fcall	___awdiv
  2818  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2820  0F97  0822               	movf	?___awdiv,w
  2821  0F98  00CD               	movwf	??_scale+5
  2822  0F99  3001               	movlw	1
  2823  0F9A                     u6065:
  2824  0F9A  1003               	clrc
  2825  0F9B  0DCD               	rlf	??_scale+5,f
  2826  0F9C  3EFF               	addlw	-1
  2827  0F9D  1D03               	skipz
  2828  0F9E  2F9A               	goto	u6065
  2829  0F9F  1003               	clrc
  2830  0FA0  0D4D               	rlf	??_scale+5,w
  2831  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2832  0FA2  0084               	movwf	4
  2833  0FA3  160A  158A  2000  120A  158A  	fcall	stringdir
  2834  0FA8  00CE               	movwf	??_scale+6
  2835  0FA9  160A  158A  2000  120A  158A  	fcall	stringdir
  2836  0FAE  00CF               	movwf	??_scale+7
  2837  0FAF  160A  158A  2000  120A  158A  	fcall	stringdir
  2838  0FB4  00D0               	movwf	??_scale+8
  2839  0FB5  160A  158A  2000  120A  158A  	fcall	stringdir
  2840  0FBA  00D1               	movwf	??_scale+9
  2841  0FBB  0851               	movf	??_scale+9,w
  2842  0FBC  00B1               	movwf	___flmul@a+3
  2843  0FBD  0850               	movf	??_scale+8,w
  2844  0FBE  00B0               	movwf	___flmul@a+2
  2845  0FBF  084F               	movf	??_scale+7,w
  2846  0FC0  00AF               	movwf	___flmul@a+1
  2847  0FC1  084E               	movf	??_scale+6,w
  2848  0FC2  00AE               	movwf	___flmul@a
  2849  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  2850  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0FCA  082D               	movf	?___flmul+3,w
  2853  0FCB  00C7               	movwf	?_scale+3
  2854  0FCC  082C               	movf	?___flmul+2,w
  2855  0FCD  00C6               	movwf	?_scale+2
  2856  0FCE  082B               	movf	?___flmul+1,w
  2857  0FCF  00C5               	movwf	?_scale+1
  2858  0FD0  082A               	movf	?___flmul,w
  2859  0FD1  00C4               	movwf	?_scale
  2860  0FD2  2FFF               	goto	l238
  2861  0FD3                     l3614:
  2862                           
  2863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  2864  0FD3  0856               	movf	scale@scl,w
  2865  0FD4  00C8               	movwf	??_scale
  2866  0FD5  3001               	movlw	1
  2867  0FD6                     u6075:
  2868  0FD6  1003               	clrc
  2869  0FD7  0DC8               	rlf	??_scale,f
  2870  0FD8  3EFF               	addlw	-1
  2871  0FD9  1D03               	skipz
  2872  0FDA  2FD6               	goto	u6075
  2873  0FDB  1003               	clrc
  2874  0FDC  0D48               	rlf	??_scale,w
  2875  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2876  0FDE  0084               	movwf	4
  2877  0FDF  160A  158A  2000  120A  158A  	fcall	stringdir
  2878  0FE4  00C9               	movwf	??_scale+1
  2879  0FE5  160A  158A  2000  120A  158A  	fcall	stringdir
  2880  0FEA  00CA               	movwf	??_scale+2
  2881  0FEB  160A  158A  2000  120A  158A  	fcall	stringdir
  2882  0FF0  00CB               	movwf	??_scale+3
  2883  0FF1  160A  158A  2000  120A  158A  	fcall	stringdir
  2884  0FF6  00CC               	movwf	??_scale+4
  2885  0FF7  084C               	movf	??_scale+4,w
  2886  0FF8  00C7               	movwf	?_scale+3
  2887  0FF9  084B               	movf	??_scale+3,w
  2888  0FFA  00C6               	movwf	?_scale+2
  2889  0FFB  084A               	movf	??_scale+2,w
  2890  0FFC  00C5               	movwf	?_scale+1
  2891  0FFD  0849               	movf	??_scale+1,w
  2892  0FFE  00C4               	movwf	?_scale
  2893  0FFF                     l238:
  2894  0FFF  0008               	return
  2895  1000                     __end_of_scale:
  2896                           
  2897                           	psect	text3
  2898  1DC0                     __ptext3:	
  2899 ;; *************** function ___awmod *****************
  2900 ;; Defined at:
  2901 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  divisor         2    3[COMMON] int 
  2904 ;;  dividend        2    5[COMMON] int 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  sign            1    1[BANK0 ] unsigned char 
  2907 ;;  counter         1    0[BANK0 ] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  2    3[COMMON] int 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2917 ;;      Params:         4       0       0       0       0
  2918 ;;      Locals:         0       2       0       0       0
  2919 ;;      Temps:          1       0       0       0       0
  2920 ;;      Totals:         5       2       0       0       0
  2921 ;;Total ram usage:        7 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    1
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_scale
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           
  2932                           ;psect for function ___awmod
  2933  1DC0                     ___awmod:
  2934  1DC0                     l3496:	
  2935                           ;incstack = 0
  2936                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2937                           
  2938  1DC0  1283               	bcf	3,5	;RP0=0, select bank0
  2939  1DC1  1303               	bcf	3,6	;RP1=0, select bank0
  2940  1DC2  01A1               	clrf	___awmod@sign
  2941  1DC3                     l3498:
  2942  1DC3  1FF6               	btfss	___awmod@dividend+1,7
  2943  1DC4  2DC6               	goto	u5671
  2944  1DC5  2DC7               	goto	u5670
  2945  1DC6                     u5671:
  2946  1DC6  2DCE               	goto	l3504
  2947  1DC7                     u5670:
  2948  1DC7                     l3500:
  2949  1DC7  09F5               	comf	___awmod@dividend,f
  2950  1DC8  09F6               	comf	___awmod@dividend+1,f
  2951  1DC9  0AF5               	incf	___awmod@dividend,f
  2952  1DCA  1903               	skipnz
  2953  1DCB  0AF6               	incf	___awmod@dividend+1,f
  2954  1DCC                     l3502:
  2955  1DCC  01A1               	clrf	___awmod@sign
  2956  1DCD  0AA1               	incf	___awmod@sign,f
  2957  1DCE                     l3504:
  2958  1DCE  1FF4               	btfss	___awmod@divisor+1,7
  2959  1DCF  2DD1               	goto	u5681
  2960  1DD0  2DD2               	goto	u5680
  2961  1DD1                     u5681:
  2962  1DD1  2DD7               	goto	l3508
  2963  1DD2                     u5680:
  2964  1DD2                     l3506:
  2965  1DD2  09F3               	comf	___awmod@divisor,f
  2966  1DD3  09F4               	comf	___awmod@divisor+1,f
  2967  1DD4  0AF3               	incf	___awmod@divisor,f
  2968  1DD5  1903               	skipnz
  2969  1DD6  0AF4               	incf	___awmod@divisor+1,f
  2970  1DD7                     l3508:
  2971  1DD7  0873               	movf	___awmod@divisor,w
  2972  1DD8  0474               	iorwf	___awmod@divisor+1,w
  2973  1DD9  1903               	btfsc	3,2
  2974  1DDA  2DDC               	goto	u5691
  2975  1DDB  2DDD               	goto	u5690
  2976  1DDC                     u5691:
  2977  1DDC  2E0C               	goto	l3526
  2978  1DDD                     u5690:
  2979  1DDD                     l3510:
  2980  1DDD  01A0               	clrf	___awmod@counter
  2981  1DDE  0AA0               	incf	___awmod@counter,f
  2982  1DDF  2DEB               	goto	l3516
  2983  1DE0                     l3512:
  2984  1DE0  3001               	movlw	1
  2985  1DE1                     u5705:
  2986  1DE1  1003               	clrc
  2987  1DE2  0DF3               	rlf	___awmod@divisor,f
  2988  1DE3  0DF4               	rlf	___awmod@divisor+1,f
  2989  1DE4  3EFF               	addlw	-1
  2990  1DE5  1D03               	skipz
  2991  1DE6  2DE1               	goto	u5705
  2992  1DE7                     l3514:
  2993  1DE7  3001               	movlw	1
  2994  1DE8  00F7               	movwf	??___awmod
  2995  1DE9  0877               	movf	??___awmod,w
  2996  1DEA  07A0               	addwf	___awmod@counter,f
  2997  1DEB                     l3516:
  2998  1DEB  1FF4               	btfss	___awmod@divisor+1,7
  2999  1DEC  2DEE               	goto	u5711
  3000  1DED  2DEF               	goto	u5710
  3001  1DEE                     u5711:
  3002  1DEE  2DE0               	goto	l3512
  3003  1DEF                     u5710:
  3004  1DEF                     l3518:
  3005  1DEF  0874               	movf	___awmod@divisor+1,w
  3006  1DF0  0276               	subwf	___awmod@dividend+1,w
  3007  1DF1  1D03               	skipz
  3008  1DF2  2DF5               	goto	u5725
  3009  1DF3  0873               	movf	___awmod@divisor,w
  3010  1DF4  0275               	subwf	___awmod@dividend,w
  3011  1DF5                     u5725:
  3012  1DF5  1C03               	skipc
  3013  1DF6  2DF8               	goto	u5721
  3014  1DF7  2DF9               	goto	u5720
  3015  1DF8                     u5721:
  3016  1DF8  2DFF               	goto	l3522
  3017  1DF9                     u5720:
  3018  1DF9                     l3520:
  3019  1DF9  0873               	movf	___awmod@divisor,w
  3020  1DFA  02F5               	subwf	___awmod@dividend,f
  3021  1DFB  0874               	movf	___awmod@divisor+1,w
  3022  1DFC  1C03               	skipc
  3023  1DFD  03F6               	decf	___awmod@dividend+1,f
  3024  1DFE  02F6               	subwf	___awmod@dividend+1,f
  3025  1DFF                     l3522:
  3026  1DFF  3001               	movlw	1
  3027  1E00                     u5735:
  3028  1E00  1003               	clrc
  3029  1E01  0CF4               	rrf	___awmod@divisor+1,f
  3030  1E02  0CF3               	rrf	___awmod@divisor,f
  3031  1E03  3EFF               	addlw	-1
  3032  1E04  1D03               	skipz
  3033  1E05  2E00               	goto	u5735
  3034  1E06                     l3524:
  3035  1E06  3001               	movlw	1
  3036  1E07  02A0               	subwf	___awmod@counter,f
  3037  1E08  1D03               	btfss	3,2
  3038  1E09  2E0B               	goto	u5741
  3039  1E0A  2E0C               	goto	u5740
  3040  1E0B                     u5741:
  3041  1E0B  2DEF               	goto	l3518
  3042  1E0C                     u5740:
  3043  1E0C                     l3526:
  3044  1E0C  0821               	movf	___awmod@sign,w
  3045  1E0D  1903               	btfsc	3,2
  3046  1E0E  2E10               	goto	u5751
  3047  1E0F  2E11               	goto	u5750
  3048  1E10                     u5751:
  3049  1E10  2E16               	goto	l3530
  3050  1E11                     u5750:
  3051  1E11                     l3528:
  3052  1E11  09F5               	comf	___awmod@dividend,f
  3053  1E12  09F6               	comf	___awmod@dividend+1,f
  3054  1E13  0AF5               	incf	___awmod@dividend,f
  3055  1E14  1903               	skipnz
  3056  1E15  0AF6               	incf	___awmod@dividend+1,f
  3057  1E16                     l3530:
  3058  1E16  0876               	movf	___awmod@dividend+1,w
  3059  1E17  00F4               	movwf	?___awmod+1
  3060  1E18  0875               	movf	___awmod@dividend,w
  3061  1E19  00F3               	movwf	?___awmod
  3062  1E1A                     l509:
  3063  1E1A  0008               	return
  3064  1E1B                     __end_of___awmod:
  3065                           
  3066                           	psect	text4
  3067  1E83                     __ptext4:	
  3068 ;; *************** function ___awdiv *****************
  3069 ;; Defined at:
  3070 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  divisor         2    2[BANK0 ] int 
  3073 ;;  dividend        2    4[BANK0 ] int 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  quotient        2    8[BANK0 ] int 
  3076 ;;  sign            1    7[BANK0 ] unsigned char 
  3077 ;;  counter         1    6[BANK0 ] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  2    2[BANK0 ] int 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3087 ;;      Params:         0       4       0       0       0
  3088 ;;      Locals:         0       4       0       0       0
  3089 ;;      Temps:          1       0       0       0       0
  3090 ;;      Totals:         1       8       0       0       0
  3091 ;;Total ram usage:        9 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_scale
  3098 ;;		_sprintf
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           
  3103                           ;psect for function ___awdiv
  3104  1E83                     ___awdiv:
  3105  1E83                     l2208:	
  3106                           ;incstack = 0
  3107                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3108                           
  3109  1E83  1283               	bcf	3,5	;RP0=0, select bank0
  3110  1E84  1303               	bcf	3,6	;RP1=0, select bank0
  3111  1E85  01A7               	clrf	___awdiv@sign
  3112  1E86                     l2210:
  3113  1E86  1FA3               	btfss	___awdiv@divisor+1,7
  3114  1E87  2E89               	goto	u2871
  3115  1E88  2E8A               	goto	u2870
  3116  1E89                     u2871:
  3117  1E89  2E91               	goto	l2216
  3118  1E8A                     u2870:
  3119  1E8A                     l2212:
  3120  1E8A  09A2               	comf	___awdiv@divisor,f
  3121  1E8B  09A3               	comf	___awdiv@divisor+1,f
  3122  1E8C  0AA2               	incf	___awdiv@divisor,f
  3123  1E8D  1903               	skipnz
  3124  1E8E  0AA3               	incf	___awdiv@divisor+1,f
  3125  1E8F                     l2214:
  3126  1E8F  01A7               	clrf	___awdiv@sign
  3127  1E90  0AA7               	incf	___awdiv@sign,f
  3128  1E91                     l2216:
  3129  1E91  1FA5               	btfss	___awdiv@dividend+1,7
  3130  1E92  2E94               	goto	u2881
  3131  1E93  2E95               	goto	u2880
  3132  1E94                     u2881:
  3133  1E94  2E9E               	goto	l2222
  3134  1E95                     u2880:
  3135  1E95                     l2218:
  3136  1E95  09A4               	comf	___awdiv@dividend,f
  3137  1E96  09A5               	comf	___awdiv@dividend+1,f
  3138  1E97  0AA4               	incf	___awdiv@dividend,f
  3139  1E98  1903               	skipnz
  3140  1E99  0AA5               	incf	___awdiv@dividend+1,f
  3141  1E9A                     l2220:
  3142  1E9A  3001               	movlw	1
  3143  1E9B  00F8               	movwf	??___awdiv
  3144  1E9C  0878               	movf	??___awdiv,w
  3145  1E9D  06A7               	xorwf	___awdiv@sign,f
  3146  1E9E                     l2222:
  3147  1E9E  01A8               	clrf	___awdiv@quotient
  3148  1E9F  01A9               	clrf	___awdiv@quotient+1
  3149  1EA0                     l2224:
  3150  1EA0  0822               	movf	___awdiv@divisor,w
  3151  1EA1  0423               	iorwf	___awdiv@divisor+1,w
  3152  1EA2  1903               	btfsc	3,2
  3153  1EA3  2EA5               	goto	u2891
  3154  1EA4  2EA6               	goto	u2890
  3155  1EA5                     u2891:
  3156  1EA5  2EDD               	goto	l2244
  3157  1EA6                     u2890:
  3158  1EA6                     l2226:
  3159  1EA6  01A6               	clrf	___awdiv@counter
  3160  1EA7  0AA6               	incf	___awdiv@counter,f
  3161  1EA8  2EB4               	goto	l2232
  3162  1EA9                     l2228:
  3163  1EA9  3001               	movlw	1
  3164  1EAA                     u2905:
  3165  1EAA  1003               	clrc
  3166  1EAB  0DA2               	rlf	___awdiv@divisor,f
  3167  1EAC  0DA3               	rlf	___awdiv@divisor+1,f
  3168  1EAD  3EFF               	addlw	-1
  3169  1EAE  1D03               	skipz
  3170  1EAF  2EAA               	goto	u2905
  3171  1EB0                     l2230:
  3172  1EB0  3001               	movlw	1
  3173  1EB1  00F8               	movwf	??___awdiv
  3174  1EB2  0878               	movf	??___awdiv,w
  3175  1EB3  07A6               	addwf	___awdiv@counter,f
  3176  1EB4                     l2232:
  3177  1EB4  1FA3               	btfss	___awdiv@divisor+1,7
  3178  1EB5  2EB7               	goto	u2911
  3179  1EB6  2EB8               	goto	u2910
  3180  1EB7                     u2911:
  3181  1EB7  2EA9               	goto	l2228
  3182  1EB8                     u2910:
  3183  1EB8                     l2234:
  3184  1EB8  3001               	movlw	1
  3185  1EB9                     u2925:
  3186  1EB9  1003               	clrc
  3187  1EBA  0DA8               	rlf	___awdiv@quotient,f
  3188  1EBB  0DA9               	rlf	___awdiv@quotient+1,f
  3189  1EBC  3EFF               	addlw	-1
  3190  1EBD  1D03               	skipz
  3191  1EBE  2EB9               	goto	u2925
  3192  1EBF  0823               	movf	___awdiv@divisor+1,w
  3193  1EC0  0225               	subwf	___awdiv@dividend+1,w
  3194  1EC1  1D03               	skipz
  3195  1EC2  2EC5               	goto	u2935
  3196  1EC3  0822               	movf	___awdiv@divisor,w
  3197  1EC4  0224               	subwf	___awdiv@dividend,w
  3198  1EC5                     u2935:
  3199  1EC5  1C03               	skipc
  3200  1EC6  2EC8               	goto	u2931
  3201  1EC7  2EC9               	goto	u2930
  3202  1EC8                     u2931:
  3203  1EC8  2ED0               	goto	l2240
  3204  1EC9                     u2930:
  3205  1EC9                     l2236:
  3206  1EC9  0822               	movf	___awdiv@divisor,w
  3207  1ECA  02A4               	subwf	___awdiv@dividend,f
  3208  1ECB  0823               	movf	___awdiv@divisor+1,w
  3209  1ECC  1C03               	skipc
  3210  1ECD  03A5               	decf	___awdiv@dividend+1,f
  3211  1ECE  02A5               	subwf	___awdiv@dividend+1,f
  3212  1ECF                     l2238:
  3213  1ECF  1428               	bsf	___awdiv@quotient,0
  3214  1ED0                     l2240:
  3215  1ED0  3001               	movlw	1
  3216  1ED1                     u2945:
  3217  1ED1  1003               	clrc
  3218  1ED2  0CA3               	rrf	___awdiv@divisor+1,f
  3219  1ED3  0CA2               	rrf	___awdiv@divisor,f
  3220  1ED4  3EFF               	addlw	-1
  3221  1ED5  1D03               	skipz
  3222  1ED6  2ED1               	goto	u2945
  3223  1ED7                     l2242:
  3224  1ED7  3001               	movlw	1
  3225  1ED8  02A6               	subwf	___awdiv@counter,f
  3226  1ED9  1D03               	btfss	3,2
  3227  1EDA  2EDC               	goto	u2951
  3228  1EDB  2EDD               	goto	u2950
  3229  1EDC                     u2951:
  3230  1EDC  2EB8               	goto	l2234
  3231  1EDD                     u2950:
  3232  1EDD                     l2244:
  3233  1EDD  0827               	movf	___awdiv@sign,w
  3234  1EDE  1903               	btfsc	3,2
  3235  1EDF  2EE1               	goto	u2961
  3236  1EE0  2EE2               	goto	u2960
  3237  1EE1                     u2961:
  3238  1EE1  2EE7               	goto	l2248
  3239  1EE2                     u2960:
  3240  1EE2                     l2246:
  3241  1EE2  09A8               	comf	___awdiv@quotient,f
  3242  1EE3  09A9               	comf	___awdiv@quotient+1,f
  3243  1EE4  0AA8               	incf	___awdiv@quotient,f
  3244  1EE5  1903               	skipnz
  3245  1EE6  0AA9               	incf	___awdiv@quotient+1,f
  3246  1EE7                     l2248:
  3247  1EE7  0829               	movf	___awdiv@quotient+1,w
  3248  1EE8  00A3               	movwf	?___awdiv+1
  3249  1EE9  0828               	movf	___awdiv@quotient,w
  3250  1EEA  00A2               	movwf	?___awdiv
  3251  1EEB                     l496:
  3252  1EEB  0008               	return
  3253  1EEC                     __end_of___awdiv:
  3254                           
  3255                           	psect	text5
  3256  1BE6                     __ptext5:	
  3257 ;; *************** function _isdigit *****************
  3258 ;; Defined at:
  3259 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  c               1    wreg     unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  c               1    4[COMMON] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;		None               void
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       0       0       0       0
  3274 ;;      Locals:         2       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0
  3276 ;;      Totals:         2       0       0       0       0
  3277 ;;Total ram usage:        2 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    1
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_sprintf
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           
  3288                           ;psect for function _isdigit
  3289  1BE6                     _isdigit:
  3290                           
  3291                           ;incstack = 0
  3292                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3293                           ;isdigit@c stored from wreg
  3294  1BE6  00F4               	movwf	isdigit@c
  3295  1BE7                     l2734:
  3296  1BE7  01F3               	clrf	_isdigit$941
  3297  1BE8                     l2736:
  3298  1BE8  303A               	movlw	58
  3299  1BE9  0274               	subwf	isdigit@c,w
  3300  1BEA  1803               	skipnc
  3301  1BEB  2BED               	goto	u4281
  3302  1BEC  2BEE               	goto	u4280
  3303  1BED                     u4281:
  3304  1BED  2BF6               	goto	l2742
  3305  1BEE                     u4280:
  3306  1BEE                     l2738:
  3307  1BEE  3030               	movlw	48
  3308  1BEF  0274               	subwf	isdigit@c,w
  3309  1BF0  1C03               	skipc
  3310  1BF1  2BF3               	goto	u4291
  3311  1BF2  2BF4               	goto	u4290
  3312  1BF3                     u4291:
  3313  1BF3  2BF6               	goto	l2742
  3314  1BF4                     u4290:
  3315  1BF4                     l2740:
  3316  1BF4  01F3               	clrf	_isdigit$941
  3317  1BF5  0AF3               	incf	_isdigit$941,f
  3318  1BF6                     l2742:
  3319  1BF6  0C73               	rrf	_isdigit$941,w
  3320  1BF7                     l830:
  3321  1BF7  0008               	return
  3322  1BF8                     __end_of_isdigit:
  3323                           
  3324                           	psect	text6
  3325  104E                     __ptext6:	
  3326 ;; *************** function _fround *****************
  3327 ;; Defined at:
  3328 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  prec            1    wreg     unsigned char 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  prec            1   55[BANK0 ] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  4   36[BANK0 ] unsigned char 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       4       0       0       0
  3343 ;;      Locals:         0       9       0       0       0
  3344 ;;      Temps:          0       7       0       0       0
  3345 ;;      Totals:         0      20       0       0       0
  3346 ;;Total ram usage:       20 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    3
  3349 ;; This function calls:
  3350 ;;		___flmul
  3351 ;;		___lwdiv
  3352 ;;		___lwmod
  3353 ;; This function is called by:
  3354 ;;		_sprintf
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           
  3359                           ;psect for function _fround
  3360  104E                     _fround:
  3361                           
  3362                           ;incstack = 0
  3363                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3364                           ;fround@prec stored from wreg
  3365  104E  1283               	bcf	3,5	;RP0=0, select bank0
  3366  104F  1303               	bcf	3,6	;RP1=0, select bank0
  3367  1050  00D7               	movwf	fround@prec
  3368  1051                     l3560:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3371  1051  306E               	movlw	110
  3372  1052  0257               	subwf	fround@prec,w
  3373  1053  1C03               	skipc
  3374  1054  2856               	goto	u5831
  3375  1055  2857               	goto	u5830
  3376  1056                     u5831:
  3377  1056  2966               	goto	l3568
  3378  1057                     u5830:
  3379  1057                     l3562:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3382  1057  303F               	movlw	63
  3383  1058  00AD               	movwf	___flmul@b+3
  3384  1059  3000               	movlw	0
  3385  105A  00AC               	movwf	___flmul@b+2
  3386  105B  3000               	movlw	0
  3387  105C  00AB               	movwf	___flmul@b+1
  3388  105D  3000               	movlw	0
  3389  105E  00AA               	movwf	___flmul@b
  3390  105F  3064               	movlw	100
  3391  1060  00A0               	movwf	___lwdiv@divisor
  3392  1061  3000               	movlw	0
  3393  1062  00A1               	movwf	___lwdiv@divisor+1
  3394  1063  0857               	movf	fround@prec,w
  3395  1064  00C8               	movwf	??_fround
  3396  1065  01C9               	clrf	??_fround+1
  3397  1066  0848               	movf	??_fround,w
  3398  1067  00A2               	movwf	___lwdiv@dividend
  3399  1068  0849               	movf	??_fround+1,w
  3400  1069  00A3               	movwf	___lwdiv@dividend+1
  3401  106A  160A  118A  2008  160A  118A  	fcall	___lwdiv
  3402  106F  1283               	bcf	3,5	;RP0=0, select bank0
  3403  1070  1303               	bcf	3,6	;RP1=0, select bank0
  3404  1071  0820               	movf	?___lwdiv,w
  3405  1072  00CA               	movwf	??_fround+2
  3406  1073  3001               	movlw	1
  3407  1074                     u5845:
  3408  1074  1003               	clrc
  3409  1075  0DCA               	rlf	??_fround+2,f
  3410  1076  3EFF               	addlw	-1
  3411  1077  1D03               	skipz
  3412  1078  2874               	goto	u5845
  3413  1079  1003               	clrc
  3414  107A  0D4A               	rlf	??_fround+2,w
  3415  107B  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3416  107C  0084               	movwf	4
  3417  107D  160A  158A  2000  160A  118A  	fcall	stringdir
  3418  1082  00CB               	movwf	??_fround+3
  3419  1083  160A  158A  2000  160A  118A  	fcall	stringdir
  3420  1088  00CC               	movwf	??_fround+4
  3421  1089  160A  158A  2000  160A  118A  	fcall	stringdir
  3422  108E  00CD               	movwf	??_fround+5
  3423  108F  160A  158A  2000  160A  118A  	fcall	stringdir
  3424  1094  00CE               	movwf	??_fround+6
  3425  1095  084E               	movf	??_fround+6,w
  3426  1096  00B1               	movwf	___flmul@a+3
  3427  1097  084D               	movf	??_fround+5,w
  3428  1098  00B0               	movwf	___flmul@a+2
  3429  1099  084C               	movf	??_fround+4,w
  3430  109A  00AF               	movwf	___flmul@a+1
  3431  109B  084B               	movf	??_fround+3,w
  3432  109C  00AE               	movwf	___flmul@a
  3433  109D  120A  158A  213C  160A  118A  	fcall	___flmul
  3434  10A2  1283               	bcf	3,5	;RP0=0, select bank0
  3435  10A3  1303               	bcf	3,6	;RP1=0, select bank0
  3436  10A4  082D               	movf	?___flmul+3,w
  3437  10A5  00D6               	movwf	_fround$1110+3
  3438  10A6  082C               	movf	?___flmul+2,w
  3439  10A7  00D5               	movwf	_fround$1110+2
  3440  10A8  082B               	movf	?___flmul+1,w
  3441  10A9  00D4               	movwf	_fround$1110+1
  3442  10AA  082A               	movf	?___flmul,w
  3443  10AB  00D3               	movwf	_fround$1110
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3446  10AC  300A               	movlw	10
  3447  10AD  00A0               	movwf	___lwdiv@divisor
  3448  10AE  3000               	movlw	0
  3449  10AF  00A1               	movwf	___lwdiv@divisor+1
  3450  10B0  0857               	movf	fround@prec,w
  3451  10B1  00C8               	movwf	??_fround
  3452  10B2  01C9               	clrf	??_fround+1
  3453  10B3  0848               	movf	??_fround,w
  3454  10B4  00F5               	movwf	___lwmod@dividend
  3455  10B5  0849               	movf	??_fround+1,w
  3456  10B6  00F6               	movwf	___lwmod@dividend+1
  3457  10B7  3064               	movlw	100
  3458  10B8  00F3               	movwf	___lwmod@divisor
  3459  10B9  3000               	movlw	0
  3460  10BA  00F4               	movwf	___lwmod@divisor+1
  3461  10BB  160A  158A  24E0  160A  118A  	fcall	___lwmod
  3462  10C0  0874               	movf	?___lwmod+1,w
  3463  10C1  1283               	bcf	3,5	;RP0=0, select bank0
  3464  10C2  1303               	bcf	3,6	;RP1=0, select bank0
  3465  10C3  00A3               	movwf	___lwdiv@dividend+1
  3466  10C4  0873               	movf	?___lwmod,w
  3467  10C5  00A2               	movwf	___lwdiv@dividend
  3468  10C6  160A  118A  2008  160A  118A  	fcall	___lwdiv
  3469  10CB  1283               	bcf	3,5	;RP0=0, select bank0
  3470  10CC  1303               	bcf	3,6	;RP1=0, select bank0
  3471  10CD  0820               	movf	?___lwdiv,w
  3472  10CE  00CA               	movwf	??_fround+2
  3473  10CF  3001               	movlw	1
  3474  10D0                     u5855:
  3475  10D0  1003               	clrc
  3476  10D1  0DCA               	rlf	??_fround+2,f
  3477  10D2  3EFF               	addlw	-1
  3478  10D3  1D03               	skipz
  3479  10D4  28D0               	goto	u5855
  3480  10D5  1003               	clrc
  3481  10D6  0D4A               	rlf	??_fround+2,w
  3482  10D7  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3483  10D8  0084               	movwf	4
  3484  10D9  160A  158A  2000  160A  118A  	fcall	stringdir
  3485  10DE  00CB               	movwf	??_fround+3
  3486  10DF  160A  158A  2000  160A  118A  	fcall	stringdir
  3487  10E4  00CC               	movwf	??_fround+4
  3488  10E5  160A  158A  2000  160A  118A  	fcall	stringdir
  3489  10EA  00CD               	movwf	??_fround+5
  3490  10EB  160A  158A  2000  160A  118A  	fcall	stringdir
  3491  10F0  00CE               	movwf	??_fround+6
  3492  10F1  084E               	movf	??_fround+6,w
  3493  10F2  00AD               	movwf	___flmul@b+3
  3494  10F3  084D               	movf	??_fround+5,w
  3495  10F4  00AC               	movwf	___flmul@b+2
  3496  10F5  084C               	movf	??_fround+4,w
  3497  10F6  00AB               	movwf	___flmul@b+1
  3498  10F7  084B               	movf	??_fround+3,w
  3499  10F8  00AA               	movwf	___flmul@b
  3500  10F9  0856               	movf	_fround$1110+3,w
  3501  10FA  00B1               	movwf	___flmul@a+3
  3502  10FB  0855               	movf	_fround$1110+2,w
  3503  10FC  00B0               	movwf	___flmul@a+2
  3504  10FD  0854               	movf	_fround$1110+1,w
  3505  10FE  00AF               	movwf	___flmul@a+1
  3506  10FF  0853               	movf	_fround$1110,w
  3507  1100  00AE               	movwf	___flmul@a
  3508  1101  120A  158A  213C  160A  118A  	fcall	___flmul
  3509  1106  1283               	bcf	3,5	;RP0=0, select bank0
  3510  1107  1303               	bcf	3,6	;RP1=0, select bank0
  3511  1108  082D               	movf	?___flmul+3,w
  3512  1109  00D2               	movwf	_fround$1111+3
  3513  110A  082C               	movf	?___flmul+2,w
  3514  110B  00D1               	movwf	_fround$1111+2
  3515  110C  082B               	movf	?___flmul+1,w
  3516  110D  00D0               	movwf	_fround$1111+1
  3517  110E  082A               	movf	?___flmul,w
  3518  110F  00CF               	movwf	_fround$1111
  3519                           
  3520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3521  1110  300A               	movlw	10
  3522  1111  00F3               	movwf	___lwmod@divisor
  3523  1112  3000               	movlw	0
  3524  1113  00F4               	movwf	___lwmod@divisor+1
  3525  1114  0857               	movf	fround@prec,w
  3526  1115  00C8               	movwf	??_fround
  3527  1116  01C9               	clrf	??_fround+1
  3528  1117  0848               	movf	??_fround,w
  3529  1118  00F5               	movwf	___lwmod@dividend
  3530  1119  0849               	movf	??_fround+1,w
  3531  111A  00F6               	movwf	___lwmod@dividend+1
  3532  111B  160A  158A  24E0  160A  118A  	fcall	___lwmod
  3533  1120  0873               	movf	?___lwmod,w
  3534  1121  1283               	bcf	3,5	;RP0=0, select bank0
  3535  1122  1303               	bcf	3,6	;RP1=0, select bank0
  3536  1123  00CA               	movwf	??_fround+2
  3537  1124  3001               	movlw	1
  3538  1125                     u5865:
  3539  1125  1003               	clrc
  3540  1126  0DCA               	rlf	??_fround+2,f
  3541  1127  3EFF               	addlw	-1
  3542  1128  1D03               	skipz
  3543  1129  2925               	goto	u5865
  3544  112A  1003               	clrc
  3545  112B  0D4A               	rlf	??_fround+2,w
  3546  112C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3547  112D  0084               	movwf	4
  3548  112E  160A  158A  2000  160A  118A  	fcall	stringdir
  3549  1133  00CB               	movwf	??_fround+3
  3550  1134  160A  158A  2000  160A  118A  	fcall	stringdir
  3551  1139  00CC               	movwf	??_fround+4
  3552  113A  160A  158A  2000  160A  118A  	fcall	stringdir
  3553  113F  00CD               	movwf	??_fround+5
  3554  1140  160A  158A  2000  160A  118A  	fcall	stringdir
  3555  1145  00CE               	movwf	??_fround+6
  3556  1146  084E               	movf	??_fround+6,w
  3557  1147  00AD               	movwf	___flmul@b+3
  3558  1148  084D               	movf	??_fround+5,w
  3559  1149  00AC               	movwf	___flmul@b+2
  3560  114A  084C               	movf	??_fround+4,w
  3561  114B  00AB               	movwf	___flmul@b+1
  3562  114C  084B               	movf	??_fround+3,w
  3563  114D  00AA               	movwf	___flmul@b
  3564  114E  0852               	movf	_fround$1111+3,w
  3565  114F  00B1               	movwf	___flmul@a+3
  3566  1150  0851               	movf	_fround$1111+2,w
  3567  1151  00B0               	movwf	___flmul@a+2
  3568  1152  0850               	movf	_fround$1111+1,w
  3569  1153  00AF               	movwf	___flmul@a+1
  3570  1154  084F               	movf	_fround$1111,w
  3571  1155  00AE               	movwf	___flmul@a
  3572  1156  120A  158A  213C  160A  118A  	fcall	___flmul
  3573  115B  1283               	bcf	3,5	;RP0=0, select bank0
  3574  115C  1303               	bcf	3,6	;RP1=0, select bank0
  3575  115D  082D               	movf	?___flmul+3,w
  3576  115E  00C7               	movwf	?_fround+3
  3577  115F  082C               	movf	?___flmul+2,w
  3578  1160  00C6               	movwf	?_fround+2
  3579  1161  082B               	movf	?___flmul+1,w
  3580  1162  00C5               	movwf	?_fround+1
  3581  1163  082A               	movf	?___flmul,w
  3582  1164  00C4               	movwf	?_fround
  3583  1165  2A5A               	goto	l231
  3584  1166                     l3568:
  3585  1166  300B               	movlw	11
  3586  1167  0257               	subwf	fround@prec,w
  3587  1168  1C03               	skipc
  3588  1169  296B               	goto	u5871
  3589  116A  296C               	goto	u5870
  3590  116B                     u5871:
  3591  116B  2A17               	goto	l3574
  3592  116C                     u5870:
  3593  116C                     l3570:
  3594                           
  3595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3596  116C  303F               	movlw	63
  3597  116D  00AD               	movwf	___flmul@b+3
  3598  116E  3000               	movlw	0
  3599  116F  00AC               	movwf	___flmul@b+2
  3600  1170  3000               	movlw	0
  3601  1171  00AB               	movwf	___flmul@b+1
  3602  1172  3000               	movlw	0
  3603  1173  00AA               	movwf	___flmul@b
  3604  1174  300A               	movlw	10
  3605  1175  00A0               	movwf	___lwdiv@divisor
  3606  1176  3000               	movlw	0
  3607  1177  00A1               	movwf	___lwdiv@divisor+1
  3608  1178  0857               	movf	fround@prec,w
  3609  1179  00C8               	movwf	??_fround
  3610  117A  01C9               	clrf	??_fround+1
  3611  117B  0848               	movf	??_fround,w
  3612  117C  00A2               	movwf	___lwdiv@dividend
  3613  117D  0849               	movf	??_fround+1,w
  3614  117E  00A3               	movwf	___lwdiv@dividend+1
  3615  117F  160A  118A  2008  160A  118A  	fcall	___lwdiv
  3616  1184  1283               	bcf	3,5	;RP0=0, select bank0
  3617  1185  1303               	bcf	3,6	;RP1=0, select bank0
  3618  1186  0820               	movf	?___lwdiv,w
  3619  1187  00CA               	movwf	??_fround+2
  3620  1188  3001               	movlw	1
  3621  1189                     u5885:
  3622  1189  1003               	clrc
  3623  118A  0DCA               	rlf	??_fround+2,f
  3624  118B  3EFF               	addlw	-1
  3625  118C  1D03               	skipz
  3626  118D  2989               	goto	u5885
  3627  118E  1003               	clrc
  3628  118F  0D4A               	rlf	??_fround+2,w
  3629  1190  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3630  1191  0084               	movwf	4
  3631  1192  160A  158A  2000  160A  118A  	fcall	stringdir
  3632  1197  00CB               	movwf	??_fround+3
  3633  1198  160A  158A  2000  160A  118A  	fcall	stringdir
  3634  119D  00CC               	movwf	??_fround+4
  3635  119E  160A  158A  2000  160A  118A  	fcall	stringdir
  3636  11A3  00CD               	movwf	??_fround+5
  3637  11A4  160A  158A  2000  160A  118A  	fcall	stringdir
  3638  11A9  00CE               	movwf	??_fround+6
  3639  11AA  084E               	movf	??_fround+6,w
  3640  11AB  00B1               	movwf	___flmul@a+3
  3641  11AC  084D               	movf	??_fround+5,w
  3642  11AD  00B0               	movwf	___flmul@a+2
  3643  11AE  084C               	movf	??_fround+4,w
  3644  11AF  00AF               	movwf	___flmul@a+1
  3645  11B0  084B               	movf	??_fround+3,w
  3646  11B1  00AE               	movwf	___flmul@a
  3647  11B2  120A  158A  213C  160A  118A  	fcall	___flmul
  3648  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  3649  11B8  1303               	bcf	3,6	;RP1=0, select bank0
  3650  11B9  082D               	movf	?___flmul+3,w
  3651  11BA  00D6               	movwf	_fround$1110+3
  3652  11BB  082C               	movf	?___flmul+2,w
  3653  11BC  00D5               	movwf	_fround$1110+2
  3654  11BD  082B               	movf	?___flmul+1,w
  3655  11BE  00D4               	movwf	_fround$1110+1
  3656  11BF  082A               	movf	?___flmul,w
  3657  11C0  00D3               	movwf	_fround$1110
  3658                           
  3659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3660  11C1  300A               	movlw	10
  3661  11C2  00F3               	movwf	___lwmod@divisor
  3662  11C3  3000               	movlw	0
  3663  11C4  00F4               	movwf	___lwmod@divisor+1
  3664  11C5  0857               	movf	fround@prec,w
  3665  11C6  00C8               	movwf	??_fround
  3666  11C7  01C9               	clrf	??_fround+1
  3667  11C8  0848               	movf	??_fround,w
  3668  11C9  00F5               	movwf	___lwmod@dividend
  3669  11CA  0849               	movf	??_fround+1,w
  3670  11CB  00F6               	movwf	___lwmod@dividend+1
  3671  11CC  160A  158A  24E0  160A  118A  	fcall	___lwmod
  3672  11D1  0873               	movf	?___lwmod,w
  3673  11D2  1283               	bcf	3,5	;RP0=0, select bank0
  3674  11D3  1303               	bcf	3,6	;RP1=0, select bank0
  3675  11D4  00CA               	movwf	??_fround+2
  3676  11D5  3001               	movlw	1
  3677  11D6                     u5895:
  3678  11D6  1003               	clrc
  3679  11D7  0DCA               	rlf	??_fround+2,f
  3680  11D8  3EFF               	addlw	-1
  3681  11D9  1D03               	skipz
  3682  11DA  29D6               	goto	u5895
  3683  11DB  1003               	clrc
  3684  11DC  0D4A               	rlf	??_fround+2,w
  3685  11DD  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3686  11DE  0084               	movwf	4
  3687  11DF  160A  158A  2000  160A  118A  	fcall	stringdir
  3688  11E4  00CB               	movwf	??_fround+3
  3689  11E5  160A  158A  2000  160A  118A  	fcall	stringdir
  3690  11EA  00CC               	movwf	??_fround+4
  3691  11EB  160A  158A  2000  160A  118A  	fcall	stringdir
  3692  11F0  00CD               	movwf	??_fround+5
  3693  11F1  160A  158A  2000  160A  118A  	fcall	stringdir
  3694  11F6  00CE               	movwf	??_fround+6
  3695  11F7  084E               	movf	??_fround+6,w
  3696  11F8  00AD               	movwf	___flmul@b+3
  3697  11F9  084D               	movf	??_fround+5,w
  3698  11FA  00AC               	movwf	___flmul@b+2
  3699  11FB  084C               	movf	??_fround+4,w
  3700  11FC  00AB               	movwf	___flmul@b+1
  3701  11FD  084B               	movf	??_fround+3,w
  3702  11FE  00AA               	movwf	___flmul@b
  3703  11FF  0856               	movf	_fround$1110+3,w
  3704  1200  00B1               	movwf	___flmul@a+3
  3705  1201  0855               	movf	_fround$1110+2,w
  3706  1202  00B0               	movwf	___flmul@a+2
  3707  1203  0854               	movf	_fround$1110+1,w
  3708  1204  00AF               	movwf	___flmul@a+1
  3709  1205  0853               	movf	_fround$1110,w
  3710  1206  00AE               	movwf	___flmul@a
  3711  1207  120A  158A  213C  160A  118A  	fcall	___flmul
  3712  120C  1283               	bcf	3,5	;RP0=0, select bank0
  3713  120D  1303               	bcf	3,6	;RP1=0, select bank0
  3714  120E  082D               	movf	?___flmul+3,w
  3715  120F  00C7               	movwf	?_fround+3
  3716  1210  082C               	movf	?___flmul+2,w
  3717  1211  00C6               	movwf	?_fround+2
  3718  1212  082B               	movf	?___flmul+1,w
  3719  1213  00C5               	movwf	?_fround+1
  3720  1214  082A               	movf	?___flmul,w
  3721  1215  00C4               	movwf	?_fround
  3722  1216  2A5A               	goto	l231
  3723  1217                     l3574:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3726  1217  303F               	movlw	63
  3727  1218  00AD               	movwf	___flmul@b+3
  3728  1219  3000               	movlw	0
  3729  121A  00AC               	movwf	___flmul@b+2
  3730  121B  3000               	movlw	0
  3731  121C  00AB               	movwf	___flmul@b+1
  3732  121D  3000               	movlw	0
  3733  121E  00AA               	movwf	___flmul@b
  3734  121F  0857               	movf	fround@prec,w
  3735  1220  00C8               	movwf	??_fround
  3736  1221  3001               	movlw	1
  3737  1222                     u5905:
  3738  1222  1003               	clrc
  3739  1223  0DC8               	rlf	??_fround,f
  3740  1224  3EFF               	addlw	-1
  3741  1225  1D03               	skipz
  3742  1226  2A22               	goto	u5905
  3743  1227  1003               	clrc
  3744  1228  0D48               	rlf	??_fround,w
  3745  1229  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3746  122A  0084               	movwf	4
  3747  122B  160A  158A  2000  160A  118A  	fcall	stringdir
  3748  1230  00C9               	movwf	??_fround+1
  3749  1231  160A  158A  2000  160A  118A  	fcall	stringdir
  3750  1236  00CA               	movwf	??_fround+2
  3751  1237  160A  158A  2000  160A  118A  	fcall	stringdir
  3752  123C  00CB               	movwf	??_fround+3
  3753  123D  160A  158A  2000  160A  118A  	fcall	stringdir
  3754  1242  00CC               	movwf	??_fround+4
  3755  1243  084C               	movf	??_fround+4,w
  3756  1244  00B1               	movwf	___flmul@a+3
  3757  1245  084B               	movf	??_fround+3,w
  3758  1246  00B0               	movwf	___flmul@a+2
  3759  1247  084A               	movf	??_fround+2,w
  3760  1248  00AF               	movwf	___flmul@a+1
  3761  1249  0849               	movf	??_fround+1,w
  3762  124A  00AE               	movwf	___flmul@a
  3763  124B  120A  158A  213C  160A  118A  	fcall	___flmul
  3764  1250  1283               	bcf	3,5	;RP0=0, select bank0
  3765  1251  1303               	bcf	3,6	;RP1=0, select bank0
  3766  1252  082D               	movf	?___flmul+3,w
  3767  1253  00C7               	movwf	?_fround+3
  3768  1254  082C               	movf	?___flmul+2,w
  3769  1255  00C6               	movwf	?_fround+2
  3770  1256  082B               	movf	?___flmul+1,w
  3771  1257  00C5               	movwf	?_fround+1
  3772  1258  082A               	movf	?___flmul,w
  3773  1259  00C4               	movwf	?_fround
  3774  125A                     l231:
  3775  125A  0008               	return
  3776  125B                     __end_of_fround:
  3777                           
  3778                           	psect	text7
  3779  1CE0                     __ptext7:	
  3780 ;; *************** function ___lwmod *****************
  3781 ;; Defined at:
  3782 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  divisor         2    3[COMMON] unsigned int 
  3785 ;;  dividend        2    5[COMMON] unsigned int 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  counter         1    8[COMMON] unsigned char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  2    3[COMMON] unsigned int 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3797 ;;      Params:         4       0       0       0       0
  3798 ;;      Locals:         1       0       0       0       0
  3799 ;;      Temps:          1       0       0       0       0
  3800 ;;      Totals:         6       0       0       0       0
  3801 ;;Total ram usage:        6 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    1
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_fround
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function ___lwmod
  3813  1CE0                     ___lwmod:
  3814  1CE0                     l2316:	
  3815                           ;incstack = 0
  3816                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3817                           
  3818  1CE0  0873               	movf	___lwmod@divisor,w
  3819  1CE1  0474               	iorwf	___lwmod@divisor+1,w
  3820  1CE2  1903               	btfsc	3,2
  3821  1CE3  2CE5               	goto	u3131
  3822  1CE4  2CE6               	goto	u3130
  3823  1CE5                     u3131:
  3824  1CE5  2D15               	goto	l2334
  3825  1CE6                     u3130:
  3826  1CE6                     l2318:
  3827  1CE6  01F8               	clrf	___lwmod@counter
  3828  1CE7  0AF8               	incf	___lwmod@counter,f
  3829  1CE8  2CF4               	goto	l2324
  3830  1CE9                     l2320:
  3831  1CE9  3001               	movlw	1
  3832  1CEA                     u3145:
  3833  1CEA  1003               	clrc
  3834  1CEB  0DF3               	rlf	___lwmod@divisor,f
  3835  1CEC  0DF4               	rlf	___lwmod@divisor+1,f
  3836  1CED  3EFF               	addlw	-1
  3837  1CEE  1D03               	skipz
  3838  1CEF  2CEA               	goto	u3145
  3839  1CF0                     l2322:
  3840  1CF0  3001               	movlw	1
  3841  1CF1  00F7               	movwf	??___lwmod
  3842  1CF2  0877               	movf	??___lwmod,w
  3843  1CF3  07F8               	addwf	___lwmod@counter,f
  3844  1CF4                     l2324:
  3845  1CF4  1FF4               	btfss	___lwmod@divisor+1,7
  3846  1CF5  2CF7               	goto	u3151
  3847  1CF6  2CF8               	goto	u3150
  3848  1CF7                     u3151:
  3849  1CF7  2CE9               	goto	l2320
  3850  1CF8                     u3150:
  3851  1CF8                     l2326:
  3852  1CF8  0874               	movf	___lwmod@divisor+1,w
  3853  1CF9  0276               	subwf	___lwmod@dividend+1,w
  3854  1CFA  1D03               	skipz
  3855  1CFB  2CFE               	goto	u3165
  3856  1CFC  0873               	movf	___lwmod@divisor,w
  3857  1CFD  0275               	subwf	___lwmod@dividend,w
  3858  1CFE                     u3165:
  3859  1CFE  1C03               	skipc
  3860  1CFF  2D01               	goto	u3161
  3861  1D00  2D02               	goto	u3160
  3862  1D01                     u3161:
  3863  1D01  2D08               	goto	l2330
  3864  1D02                     u3160:
  3865  1D02                     l2328:
  3866  1D02  0873               	movf	___lwmod@divisor,w
  3867  1D03  02F5               	subwf	___lwmod@dividend,f
  3868  1D04  0874               	movf	___lwmod@divisor+1,w
  3869  1D05  1C03               	skipc
  3870  1D06  03F6               	decf	___lwmod@dividend+1,f
  3871  1D07  02F6               	subwf	___lwmod@dividend+1,f
  3872  1D08                     l2330:
  3873  1D08  3001               	movlw	1
  3874  1D09                     u3175:
  3875  1D09  1003               	clrc
  3876  1D0A  0CF4               	rrf	___lwmod@divisor+1,f
  3877  1D0B  0CF3               	rrf	___lwmod@divisor,f
  3878  1D0C  3EFF               	addlw	-1
  3879  1D0D  1D03               	skipz
  3880  1D0E  2D09               	goto	u3175
  3881  1D0F                     l2332:
  3882  1D0F  3001               	movlw	1
  3883  1D10  02F8               	subwf	___lwmod@counter,f
  3884  1D11  1D03               	btfss	3,2
  3885  1D12  2D14               	goto	u3181
  3886  1D13  2D15               	goto	u3180
  3887  1D14                     u3181:
  3888  1D14  2CF8               	goto	l2326
  3889  1D15                     u3180:
  3890  1D15                     l2334:
  3891  1D15  0876               	movf	___lwmod@dividend+1,w
  3892  1D16  00F4               	movwf	?___lwmod+1
  3893  1D17  0875               	movf	___lwmod@dividend,w
  3894  1D18  00F3               	movwf	?___lwmod
  3895  1D19                     l659:
  3896  1D19  0008               	return
  3897  1D1A                     __end_of___lwmod:
  3898                           
  3899                           	psect	text8
  3900  1008                     __ptext8:	
  3901 ;; *************** function ___lwdiv *****************
  3902 ;; Defined at:
  3903 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  divisor         2    0[BANK0 ] unsigned int 
  3906 ;;  dividend        2    2[BANK0 ] unsigned int 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  quotient        2    6[BANK0 ] unsigned int 
  3909 ;;  counter         1    5[BANK0 ] unsigned char 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  2    0[BANK0 ] unsigned int 
  3912 ;; Registers used:
  3913 ;;		wreg, status,2, status,0
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3919 ;;      Params:         0       4       0       0       0
  3920 ;;      Locals:         0       3       0       0       0
  3921 ;;      Temps:          0       1       0       0       0
  3922 ;;      Totals:         0       8       0       0       0
  3923 ;;Total ram usage:        8 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    1
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_fround
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           
  3934                           ;psect for function ___lwdiv
  3935  1008                     ___lwdiv:
  3936  1008                     l3534:	
  3937                           ;incstack = 0
  3938                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3939                           
  3940  1008  1283               	bcf	3,5	;RP0=0, select bank0
  3941  1009  1303               	bcf	3,6	;RP1=0, select bank0
  3942  100A  01A6               	clrf	___lwdiv@quotient
  3943  100B  01A7               	clrf	___lwdiv@quotient+1
  3944  100C                     l3536:
  3945  100C  0820               	movf	___lwdiv@divisor,w
  3946  100D  0421               	iorwf	___lwdiv@divisor+1,w
  3947  100E  1903               	btfsc	3,2
  3948  100F  2811               	goto	u5761
  3949  1010  2812               	goto	u5760
  3950  1011                     u5761:
  3951  1011  2849               	goto	l3556
  3952  1012                     u5760:
  3953  1012                     l3538:
  3954  1012  01A5               	clrf	___lwdiv@counter
  3955  1013  0AA5               	incf	___lwdiv@counter,f
  3956  1014  2820               	goto	l3544
  3957  1015                     l3540:
  3958  1015  3001               	movlw	1
  3959  1016                     u5775:
  3960  1016  1003               	clrc
  3961  1017  0DA0               	rlf	___lwdiv@divisor,f
  3962  1018  0DA1               	rlf	___lwdiv@divisor+1,f
  3963  1019  3EFF               	addlw	-1
  3964  101A  1D03               	skipz
  3965  101B  2816               	goto	u5775
  3966  101C                     l3542:
  3967  101C  3001               	movlw	1
  3968  101D  00A4               	movwf	??___lwdiv
  3969  101E  0824               	movf	??___lwdiv,w
  3970  101F  07A5               	addwf	___lwdiv@counter,f
  3971  1020                     l3544:
  3972  1020  1FA1               	btfss	___lwdiv@divisor+1,7
  3973  1021  2823               	goto	u5781
  3974  1022  2824               	goto	u5780
  3975  1023                     u5781:
  3976  1023  2815               	goto	l3540
  3977  1024                     u5780:
  3978  1024                     l3546:
  3979  1024  3001               	movlw	1
  3980  1025                     u5795:
  3981  1025  1003               	clrc
  3982  1026  0DA6               	rlf	___lwdiv@quotient,f
  3983  1027  0DA7               	rlf	___lwdiv@quotient+1,f
  3984  1028  3EFF               	addlw	-1
  3985  1029  1D03               	skipz
  3986  102A  2825               	goto	u5795
  3987  102B  0821               	movf	___lwdiv@divisor+1,w
  3988  102C  0223               	subwf	___lwdiv@dividend+1,w
  3989  102D  1D03               	skipz
  3990  102E  2831               	goto	u5805
  3991  102F  0820               	movf	___lwdiv@divisor,w
  3992  1030  0222               	subwf	___lwdiv@dividend,w
  3993  1031                     u5805:
  3994  1031  1C03               	skipc
  3995  1032  2834               	goto	u5801
  3996  1033  2835               	goto	u5800
  3997  1034                     u5801:
  3998  1034  283C               	goto	l3552
  3999  1035                     u5800:
  4000  1035                     l3548:
  4001  1035  0820               	movf	___lwdiv@divisor,w
  4002  1036  02A2               	subwf	___lwdiv@dividend,f
  4003  1037  0821               	movf	___lwdiv@divisor+1,w
  4004  1038  1C03               	skipc
  4005  1039  03A3               	decf	___lwdiv@dividend+1,f
  4006  103A  02A3               	subwf	___lwdiv@dividend+1,f
  4007  103B                     l3550:
  4008  103B  1426               	bsf	___lwdiv@quotient,0
  4009  103C                     l3552:
  4010  103C  3001               	movlw	1
  4011  103D                     u5815:
  4012  103D  1003               	clrc
  4013  103E  0CA1               	rrf	___lwdiv@divisor+1,f
  4014  103F  0CA0               	rrf	___lwdiv@divisor,f
  4015  1040  3EFF               	addlw	-1
  4016  1041  1D03               	skipz
  4017  1042  283D               	goto	u5815
  4018  1043                     l3554:
  4019  1043  3001               	movlw	1
  4020  1044  02A5               	subwf	___lwdiv@counter,f
  4021  1045  1D03               	btfss	3,2
  4022  1046  2848               	goto	u5821
  4023  1047  2849               	goto	u5820
  4024  1048                     u5821:
  4025  1048  2824               	goto	l3546
  4026  1049                     u5820:
  4027  1049                     l3556:
  4028  1049  0827               	movf	___lwdiv@quotient+1,w
  4029  104A  00A1               	movwf	?___lwdiv+1
  4030  104B  0826               	movf	___lwdiv@quotient,w
  4031  104C  00A0               	movwf	?___lwdiv
  4032  104D                     l649:
  4033  104D  0008               	return
  4034  104E                     __end_of___lwdiv:
  4035                           
  4036                           	psect	text9
  4037  093C                     __ptext9:	
  4038 ;; *************** function ___flmul *****************
  4039 ;; Defined at:
  4040 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  b               4   10[BANK0 ] unsigned int 
  4043 ;;  a               4   14[BANK0 ] unsigned int 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  prod            4   30[BANK0 ] struct .
  4046 ;;  grs             4   24[BANK0 ] unsigned long 
  4047 ;;  temp            2   34[BANK0 ] struct .
  4048 ;;  bexp            1   29[BANK0 ] unsigned char 
  4049 ;;  aexp            1   28[BANK0 ] unsigned char 
  4050 ;;  sign            1   23[BANK0 ] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  4   10[BANK0 ] unsigned char 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4060 ;;      Params:         0       8       0       0       0
  4061 ;;      Locals:         0      13       0       0       0
  4062 ;;      Temps:          0       5       0       0       0
  4063 ;;      Totals:         0      26       0       0       0
  4064 ;;Total ram usage:       26 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    2
  4067 ;; This function calls:
  4068 ;;		__Umul8_16
  4069 ;; This function is called by:
  4070 ;;		_fround
  4071 ;;		_scale
  4072 ;;		_sprintf
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           
  4077                           ;psect for function ___flmul
  4078  093C                     ___flmul:
  4079  093C                     l2532:	
  4080                           ;incstack = 0
  4081                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4082                           
  4083  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4084  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4085  093E  082D               	movf	___flmul@b+3,w
  4086  093F  3980               	andlw	128
  4087  0940  00B2               	movwf	??___flmul
  4088  0941  0832               	movf	??___flmul,w
  4089  0942  00B7               	movwf	___flmul@sign
  4090  0943                     l2534:
  4091  0943  082D               	movf	___flmul@b+3,w
  4092  0944  00B2               	movwf	??___flmul
  4093  0945  0732               	addwf	??___flmul,w
  4094  0946  00B3               	movwf	??___flmul+1
  4095  0947  0833               	movf	??___flmul+1,w
  4096  0948  00BD               	movwf	___flmul@bexp
  4097  0949                     l2536:
  4098  0949  1FAC               	btfss	___flmul@b+2,7
  4099  094A  294C               	goto	u3651
  4100  094B  294D               	goto	u3650
  4101  094C                     u3651:
  4102  094C  294E               	goto	l2540
  4103  094D                     u3650:
  4104  094D                     l2538:
  4105  094D  143D               	bsf	___flmul@bexp,0
  4106  094E                     l2540:
  4107  094E  083D               	movf	___flmul@bexp,w
  4108  094F  1903               	btfsc	3,2
  4109  0950  2952               	goto	u3661
  4110  0951  2953               	goto	u3660
  4111  0952                     u3661:
  4112  0952  2962               	goto	l2548
  4113  0953                     u3660:
  4114  0953                     l2542:
  4115  0953  0A3D               	incf	___flmul@bexp,w
  4116  0954  1D03               	btfss	3,2
  4117  0955  2957               	goto	u3671
  4118  0956  2958               	goto	u3670
  4119  0957                     u3671:
  4120  0957  2960               	goto	l2546
  4121  0958                     u3670:
  4122  0958                     l2544:
  4123  0958  3000               	movlw	0
  4124  0959  00AD               	movwf	___flmul@b+3
  4125  095A  3000               	movlw	0
  4126  095B  00AC               	movwf	___flmul@b+2
  4127  095C  3000               	movlw	0
  4128  095D  00AB               	movwf	___flmul@b+1
  4129  095E  3000               	movlw	0
  4130  095F  00AA               	movwf	___flmul@b
  4131  0960                     l2546:
  4132  0960  17AC               	bsf	___flmul@b+2,7
  4133  0961  296A               	goto	l2550
  4134  0962                     l2548:
  4135  0962  3000               	movlw	0
  4136  0963  00AD               	movwf	___flmul@b+3
  4137  0964  3000               	movlw	0
  4138  0965  00AC               	movwf	___flmul@b+2
  4139  0966  3000               	movlw	0
  4140  0967  00AB               	movwf	___flmul@b+1
  4141  0968  3000               	movlw	0
  4142  0969  00AA               	movwf	___flmul@b
  4143  096A                     l2550:
  4144  096A  0831               	movf	___flmul@a+3,w
  4145  096B  3980               	andlw	128
  4146  096C  00B2               	movwf	??___flmul
  4147  096D  0832               	movf	??___flmul,w
  4148  096E  06B7               	xorwf	___flmul@sign,f
  4149  096F                     l2552:
  4150  096F  0831               	movf	___flmul@a+3,w
  4151  0970  00B2               	movwf	??___flmul
  4152  0971  0732               	addwf	??___flmul,w
  4153  0972  00B3               	movwf	??___flmul+1
  4154  0973  0833               	movf	??___flmul+1,w
  4155  0974  00BC               	movwf	___flmul@aexp
  4156  0975                     l2554:
  4157  0975  1FB0               	btfss	___flmul@a+2,7
  4158  0976  2978               	goto	u3681
  4159  0977  2979               	goto	u3680
  4160  0978                     u3681:
  4161  0978  297A               	goto	l2558
  4162  0979                     u3680:
  4163  0979                     l2556:
  4164  0979  143C               	bsf	___flmul@aexp,0
  4165  097A                     l2558:
  4166  097A  083C               	movf	___flmul@aexp,w
  4167  097B  1903               	btfsc	3,2
  4168  097C  297E               	goto	u3691
  4169  097D  297F               	goto	u3690
  4170  097E                     u3691:
  4171  097E  298E               	goto	l2566
  4172  097F                     u3690:
  4173  097F                     l2560:
  4174  097F  0A3C               	incf	___flmul@aexp,w
  4175  0980  1D03               	btfss	3,2
  4176  0981  2983               	goto	u3701
  4177  0982  2984               	goto	u3700
  4178  0983                     u3701:
  4179  0983  298C               	goto	l2564
  4180  0984                     u3700:
  4181  0984                     l2562:
  4182  0984  3000               	movlw	0
  4183  0985  00B1               	movwf	___flmul@a+3
  4184  0986  3000               	movlw	0
  4185  0987  00B0               	movwf	___flmul@a+2
  4186  0988  3000               	movlw	0
  4187  0989  00AF               	movwf	___flmul@a+1
  4188  098A  3000               	movlw	0
  4189  098B  00AE               	movwf	___flmul@a
  4190  098C                     l2564:
  4191  098C  17B0               	bsf	___flmul@a+2,7
  4192  098D  2996               	goto	l2568
  4193  098E                     l2566:
  4194  098E  3000               	movlw	0
  4195  098F  00B1               	movwf	___flmul@a+3
  4196  0990  3000               	movlw	0
  4197  0991  00B0               	movwf	___flmul@a+2
  4198  0992  3000               	movlw	0
  4199  0993  00AF               	movwf	___flmul@a+1
  4200  0994  3000               	movlw	0
  4201  0995  00AE               	movwf	___flmul@a
  4202  0996                     l2568:
  4203  0996  083C               	movf	___flmul@aexp,w
  4204  0997  1903               	btfsc	3,2
  4205  0998  299A               	goto	u3711
  4206  0999  299B               	goto	u3710
  4207  099A                     u3711:
  4208  099A  29A0               	goto	l2572
  4209  099B                     u3710:
  4210  099B                     l2570:
  4211  099B  083D               	movf	___flmul@bexp,w
  4212  099C  1D03               	btfss	3,2
  4213  099D  299F               	goto	u3721
  4214  099E  29A0               	goto	u3720
  4215  099F                     u3721:
  4216  099F  29A9               	goto	l2576
  4217  09A0                     u3720:
  4218  09A0                     l2572:
  4219  09A0  3000               	movlw	0
  4220  09A1  00AD               	movwf	?___flmul+3
  4221  09A2  3000               	movlw	0
  4222  09A3  00AC               	movwf	?___flmul+2
  4223  09A4  3000               	movlw	0
  4224  09A5  00AB               	movwf	?___flmul+1
  4225  09A6  3000               	movlw	0
  4226  09A7  00AA               	movwf	?___flmul
  4227  09A8  2C9C               	goto	l766
  4228  09A9                     l2576:
  4229  09A9  082A               	movf	___flmul@b,w
  4230  09AA  00B2               	movwf	??___flmul
  4231  09AB  0832               	movf	??___flmul,w
  4232  09AC  00F3               	movwf	__Umul8_16@multiplicand
  4233  09AD  0830               	movf	___flmul@a+2,w
  4234  09AE  160A  158A  24B7  120A  158A  	fcall	__Umul8_16
  4235  09B3  0874               	movf	?__Umul8_16+1,w
  4236  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4237  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4238  09B6  00C3               	movwf	___flmul@temp+1
  4239  09B7  0873               	movf	?__Umul8_16,w
  4240  09B8  00C2               	movwf	___flmul@temp
  4241  09B9                     l2578:
  4242  09B9  0842               	movf	___flmul@temp,w
  4243  09BA  00B2               	movwf	??___flmul
  4244  09BB  01B3               	clrf	??___flmul+1
  4245  09BC  01B4               	clrf	??___flmul+2
  4246  09BD  01B5               	clrf	??___flmul+3
  4247  09BE  0835               	movf	??___flmul+3,w
  4248  09BF  00BB               	movwf	___flmul@grs+3
  4249  09C0  0834               	movf	??___flmul+2,w
  4250  09C1  00BA               	movwf	___flmul@grs+2
  4251  09C2  0833               	movf	??___flmul+1,w
  4252  09C3  00B9               	movwf	___flmul@grs+1
  4253  09C4  0832               	movf	??___flmul,w
  4254  09C5  00B8               	movwf	___flmul@grs
  4255  09C6                     l2580:
  4256  09C6  0843               	movf	___flmul@temp+1,w
  4257  09C7  00B2               	movwf	??___flmul
  4258  09C8  01B3               	clrf	??___flmul+1
  4259  09C9  01B4               	clrf	??___flmul+2
  4260  09CA  01B5               	clrf	??___flmul+3
  4261  09CB  0835               	movf	??___flmul+3,w
  4262  09CC  00C1               	movwf	___flmul@prod+3
  4263  09CD  0834               	movf	??___flmul+2,w
  4264  09CE  00C0               	movwf	___flmul@prod+2
  4265  09CF  0833               	movf	??___flmul+1,w
  4266  09D0  00BF               	movwf	___flmul@prod+1
  4267  09D1  0832               	movf	??___flmul,w
  4268  09D2  00BE               	movwf	___flmul@prod
  4269  09D3  082B               	movf	___flmul@b+1,w
  4270  09D4  00B2               	movwf	??___flmul
  4271  09D5  0832               	movf	??___flmul,w
  4272  09D6  00F3               	movwf	__Umul8_16@multiplicand
  4273  09D7  082F               	movf	___flmul@a+1,w
  4274  09D8  160A  158A  24B7  120A  158A  	fcall	__Umul8_16
  4275  09DD  0874               	movf	?__Umul8_16+1,w
  4276  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4277  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4278  09E0  00C3               	movwf	___flmul@temp+1
  4279  09E1  0873               	movf	?__Umul8_16,w
  4280  09E2  00C2               	movwf	___flmul@temp
  4281  09E3                     l2582:
  4282  09E3  0842               	movf	___flmul@temp,w
  4283  09E4  00B2               	movwf	??___flmul
  4284  09E5  01B3               	clrf	??___flmul+1
  4285  09E6  01B4               	clrf	??___flmul+2
  4286  09E7  01B5               	clrf	??___flmul+3
  4287  09E8  0832               	movf	??___flmul,w
  4288  09E9  07B8               	addwf	___flmul@grs,f
  4289  09EA  0833               	movf	??___flmul+1,w
  4290  09EB  1103               	clrz
  4291  09EC  1803               	skipnc
  4292  09ED  3E01               	addlw	1
  4293  09EE  1903               	skipnz
  4294  09EF  29F1               	goto	u3731
  4295  09F0  07B9               	addwf	___flmul@grs+1,f
  4296  09F1                     u3731:
  4297  09F1  0834               	movf	??___flmul+2,w
  4298  09F2  1103               	clrz
  4299  09F3  1803               	skipnc
  4300  09F4  3E01               	addlw	1
  4301  09F5  1903               	skipnz
  4302  09F6  29F8               	goto	u3732
  4303  09F7  07BA               	addwf	___flmul@grs+2,f
  4304  09F8                     u3732:
  4305  09F8  0835               	movf	??___flmul+3,w
  4306  09F9  1103               	clrz
  4307  09FA  1803               	skipnc
  4308  09FB  3E01               	addlw	1
  4309  09FC  1903               	skipnz
  4310  09FD  29FF               	goto	u3733
  4311  09FE  07BB               	addwf	___flmul@grs+3,f
  4312  09FF                     u3733:
  4313  09FF                     l2584:
  4314  09FF  0843               	movf	___flmul@temp+1,w
  4315  0A00  00B2               	movwf	??___flmul
  4316  0A01  01B3               	clrf	??___flmul+1
  4317  0A02  01B4               	clrf	??___flmul+2
  4318  0A03  01B5               	clrf	??___flmul+3
  4319  0A04  0832               	movf	??___flmul,w
  4320  0A05  07BE               	addwf	___flmul@prod,f
  4321  0A06  0833               	movf	??___flmul+1,w
  4322  0A07  1103               	clrz
  4323  0A08  1803               	skipnc
  4324  0A09  3E01               	addlw	1
  4325  0A0A  1903               	skipnz
  4326  0A0B  2A0D               	goto	u3741
  4327  0A0C  07BF               	addwf	___flmul@prod+1,f
  4328  0A0D                     u3741:
  4329  0A0D  0834               	movf	??___flmul+2,w
  4330  0A0E  1103               	clrz
  4331  0A0F  1803               	skipnc
  4332  0A10  3E01               	addlw	1
  4333  0A11  1903               	skipnz
  4334  0A12  2A14               	goto	u3742
  4335  0A13  07C0               	addwf	___flmul@prod+2,f
  4336  0A14                     u3742:
  4337  0A14  0835               	movf	??___flmul+3,w
  4338  0A15  1103               	clrz
  4339  0A16  1803               	skipnc
  4340  0A17  3E01               	addlw	1
  4341  0A18  1903               	skipnz
  4342  0A19  2A1B               	goto	u3743
  4343  0A1A  07C1               	addwf	___flmul@prod+3,f
  4344  0A1B                     u3743:
  4345  0A1B  082C               	movf	___flmul@b+2,w
  4346  0A1C  00B2               	movwf	??___flmul
  4347  0A1D  0832               	movf	??___flmul,w
  4348  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  4349  0A1F  082E               	movf	___flmul@a,w
  4350  0A20  160A  158A  24B7  120A  158A  	fcall	__Umul8_16
  4351  0A25  0874               	movf	?__Umul8_16+1,w
  4352  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4354  0A28  00C3               	movwf	___flmul@temp+1
  4355  0A29  0873               	movf	?__Umul8_16,w
  4356  0A2A  00C2               	movwf	___flmul@temp
  4357  0A2B                     l2586:
  4358  0A2B  0842               	movf	___flmul@temp,w
  4359  0A2C  00B2               	movwf	??___flmul
  4360  0A2D  01B3               	clrf	??___flmul+1
  4361  0A2E  01B4               	clrf	??___flmul+2
  4362  0A2F  01B5               	clrf	??___flmul+3
  4363  0A30  0832               	movf	??___flmul,w
  4364  0A31  07B8               	addwf	___flmul@grs,f
  4365  0A32  0833               	movf	??___flmul+1,w
  4366  0A33  1103               	clrz
  4367  0A34  1803               	skipnc
  4368  0A35  3E01               	addlw	1
  4369  0A36  1903               	skipnz
  4370  0A37  2A39               	goto	u3751
  4371  0A38  07B9               	addwf	___flmul@grs+1,f
  4372  0A39                     u3751:
  4373  0A39  0834               	movf	??___flmul+2,w
  4374  0A3A  1103               	clrz
  4375  0A3B  1803               	skipnc
  4376  0A3C  3E01               	addlw	1
  4377  0A3D  1903               	skipnz
  4378  0A3E  2A40               	goto	u3752
  4379  0A3F  07BA               	addwf	___flmul@grs+2,f
  4380  0A40                     u3752:
  4381  0A40  0835               	movf	??___flmul+3,w
  4382  0A41  1103               	clrz
  4383  0A42  1803               	skipnc
  4384  0A43  3E01               	addlw	1
  4385  0A44  1903               	skipnz
  4386  0A45  2A47               	goto	u3753
  4387  0A46  07BB               	addwf	___flmul@grs+3,f
  4388  0A47                     u3753:
  4389  0A47                     l2588:
  4390  0A47  0843               	movf	___flmul@temp+1,w
  4391  0A48  00B2               	movwf	??___flmul
  4392  0A49  01B3               	clrf	??___flmul+1
  4393  0A4A  01B4               	clrf	??___flmul+2
  4394  0A4B  01B5               	clrf	??___flmul+3
  4395  0A4C  0832               	movf	??___flmul,w
  4396  0A4D  07BE               	addwf	___flmul@prod,f
  4397  0A4E  0833               	movf	??___flmul+1,w
  4398  0A4F  1103               	clrz
  4399  0A50  1803               	skipnc
  4400  0A51  3E01               	addlw	1
  4401  0A52  1903               	skipnz
  4402  0A53  2A55               	goto	u3761
  4403  0A54  07BF               	addwf	___flmul@prod+1,f
  4404  0A55                     u3761:
  4405  0A55  0834               	movf	??___flmul+2,w
  4406  0A56  1103               	clrz
  4407  0A57  1803               	skipnc
  4408  0A58  3E01               	addlw	1
  4409  0A59  1903               	skipnz
  4410  0A5A  2A5C               	goto	u3762
  4411  0A5B  07C0               	addwf	___flmul@prod+2,f
  4412  0A5C                     u3762:
  4413  0A5C  0835               	movf	??___flmul+3,w
  4414  0A5D  1103               	clrz
  4415  0A5E  1803               	skipnc
  4416  0A5F  3E01               	addlw	1
  4417  0A60  1903               	skipnz
  4418  0A61  2A63               	goto	u3763
  4419  0A62  07C1               	addwf	___flmul@prod+3,f
  4420  0A63                     u3763:
  4421  0A63                     l2590:
  4422  0A63  3008               	movlw	8
  4423  0A64  00B2               	movwf	??___flmul
  4424  0A65                     u3775:
  4425  0A65  1003               	clrc
  4426  0A66  0DB8               	rlf	___flmul@grs,f
  4427  0A67  0DB9               	rlf	___flmul@grs+1,f
  4428  0A68  0DBA               	rlf	___flmul@grs+2,f
  4429  0A69  0DBB               	rlf	___flmul@grs+3,f
  4430  0A6A  0BB2               	decfsz	??___flmul,f
  4431  0A6B  2A65               	goto	u3775
  4432  0A6C                     l2592:
  4433  0A6C  082B               	movf	___flmul@b+1,w
  4434  0A6D  00B2               	movwf	??___flmul
  4435  0A6E  0832               	movf	??___flmul,w
  4436  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  4437  0A70  082E               	movf	___flmul@a,w
  4438  0A71  160A  158A  24B7  120A  158A  	fcall	__Umul8_16
  4439  0A76  0874               	movf	?__Umul8_16+1,w
  4440  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0A79  00C3               	movwf	___flmul@temp+1
  4443  0A7A  0873               	movf	?__Umul8_16,w
  4444  0A7B  00C2               	movwf	___flmul@temp
  4445  0A7C                     l2594:
  4446  0A7C  0842               	movf	___flmul@temp,w
  4447  0A7D  00B2               	movwf	??___flmul
  4448  0A7E  0843               	movf	___flmul@temp+1,w
  4449  0A7F  00B3               	movwf	??___flmul+1
  4450  0A80  01B4               	clrf	??___flmul+2
  4451  0A81  01B5               	clrf	??___flmul+3
  4452  0A82  0832               	movf	??___flmul,w
  4453  0A83  07B8               	addwf	___flmul@grs,f
  4454  0A84  0833               	movf	??___flmul+1,w
  4455  0A85  1103               	clrz
  4456  0A86  1803               	skipnc
  4457  0A87  3E01               	addlw	1
  4458  0A88  1903               	skipnz
  4459  0A89  2A8B               	goto	u3781
  4460  0A8A  07B9               	addwf	___flmul@grs+1,f
  4461  0A8B                     u3781:
  4462  0A8B  0834               	movf	??___flmul+2,w
  4463  0A8C  1103               	clrz
  4464  0A8D  1803               	skipnc
  4465  0A8E  3E01               	addlw	1
  4466  0A8F  1903               	skipnz
  4467  0A90  2A92               	goto	u3782
  4468  0A91  07BA               	addwf	___flmul@grs+2,f
  4469  0A92                     u3782:
  4470  0A92  0835               	movf	??___flmul+3,w
  4471  0A93  1103               	clrz
  4472  0A94  1803               	skipnc
  4473  0A95  3E01               	addlw	1
  4474  0A96  1903               	skipnz
  4475  0A97  2A99               	goto	u3783
  4476  0A98  07BB               	addwf	___flmul@grs+3,f
  4477  0A99                     u3783:
  4478  0A99                     l2596:
  4479  0A99  082A               	movf	___flmul@b,w
  4480  0A9A  00B2               	movwf	??___flmul
  4481  0A9B  0832               	movf	??___flmul,w
  4482  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  4483  0A9D  082F               	movf	___flmul@a+1,w
  4484  0A9E  160A  158A  24B7  120A  158A  	fcall	__Umul8_16
  4485  0AA3  0874               	movf	?__Umul8_16+1,w
  4486  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4487  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4488  0AA6  00C3               	movwf	___flmul@temp+1
  4489  0AA7  0873               	movf	?__Umul8_16,w
  4490  0AA8  00C2               	movwf	___flmul@temp
  4491  0AA9                     l2598:
  4492  0AA9  0842               	movf	___flmul@temp,w
  4493  0AAA  00B2               	movwf	??___flmul
  4494  0AAB  0843               	movf	___flmul@temp+1,w
  4495  0AAC  00B3               	movwf	??___flmul+1
  4496  0AAD  01B4               	clrf	??___flmul+2
  4497  0AAE  01B5               	clrf	??___flmul+3
  4498  0AAF  0832               	movf	??___flmul,w
  4499  0AB0  07B8               	addwf	___flmul@grs,f
  4500  0AB1  0833               	movf	??___flmul+1,w
  4501  0AB2  1103               	clrz
  4502  0AB3  1803               	skipnc
  4503  0AB4  3E01               	addlw	1
  4504  0AB5  1903               	skipnz
  4505  0AB6  2AB8               	goto	u3791
  4506  0AB7  07B9               	addwf	___flmul@grs+1,f
  4507  0AB8                     u3791:
  4508  0AB8  0834               	movf	??___flmul+2,w
  4509  0AB9  1103               	clrz
  4510  0ABA  1803               	skipnc
  4511  0ABB  3E01               	addlw	1
  4512  0ABC  1903               	skipnz
  4513  0ABD  2ABF               	goto	u3792
  4514  0ABE  07BA               	addwf	___flmul@grs+2,f
  4515  0ABF                     u3792:
  4516  0ABF  0835               	movf	??___flmul+3,w
  4517  0AC0  1103               	clrz
  4518  0AC1  1803               	skipnc
  4519  0AC2  3E01               	addlw	1
  4520  0AC3  1903               	skipnz
  4521  0AC4  2AC6               	goto	u3793
  4522  0AC5  07BB               	addwf	___flmul@grs+3,f
  4523  0AC6                     u3793:
  4524  0AC6                     l2600:
  4525  0AC6  3008               	movlw	8
  4526  0AC7  00B2               	movwf	??___flmul
  4527  0AC8                     u3805:
  4528  0AC8  1003               	clrc
  4529  0AC9  0DB8               	rlf	___flmul@grs,f
  4530  0ACA  0DB9               	rlf	___flmul@grs+1,f
  4531  0ACB  0DBA               	rlf	___flmul@grs+2,f
  4532  0ACC  0DBB               	rlf	___flmul@grs+3,f
  4533  0ACD  0BB2               	decfsz	??___flmul,f
  4534  0ACE  2AC8               	goto	u3805
  4535  0ACF  082A               	movf	___flmul@b,w
  4536  0AD0  00B2               	movwf	??___flmul
  4537  0AD1  0832               	movf	??___flmul,w
  4538  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  4539  0AD3  082E               	movf	___flmul@a,w
  4540  0AD4  160A  158A  24B7  120A  158A  	fcall	__Umul8_16
  4541  0AD9  0874               	movf	?__Umul8_16+1,w
  4542  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0ADC  00C3               	movwf	___flmul@temp+1
  4545  0ADD  0873               	movf	?__Umul8_16,w
  4546  0ADE  00C2               	movwf	___flmul@temp
  4547  0ADF                     l2602:
  4548  0ADF  0842               	movf	___flmul@temp,w
  4549  0AE0  00B2               	movwf	??___flmul
  4550  0AE1  0843               	movf	___flmul@temp+1,w
  4551  0AE2  00B3               	movwf	??___flmul+1
  4552  0AE3  01B4               	clrf	??___flmul+2
  4553  0AE4  01B5               	clrf	??___flmul+3
  4554  0AE5  0832               	movf	??___flmul,w
  4555  0AE6  07B8               	addwf	___flmul@grs,f
  4556  0AE7  0833               	movf	??___flmul+1,w
  4557  0AE8  1103               	clrz
  4558  0AE9  1803               	skipnc
  4559  0AEA  3E01               	addlw	1
  4560  0AEB  1903               	skipnz
  4561  0AEC  2AEE               	goto	u3811
  4562  0AED  07B9               	addwf	___flmul@grs+1,f
  4563  0AEE                     u3811:
  4564  0AEE  0834               	movf	??___flmul+2,w
  4565  0AEF  1103               	clrz
  4566  0AF0  1803               	skipnc
  4567  0AF1  3E01               	addlw	1
  4568  0AF2  1903               	skipnz
  4569  0AF3  2AF5               	goto	u3812
  4570  0AF4  07BA               	addwf	___flmul@grs+2,f
  4571  0AF5                     u3812:
  4572  0AF5  0835               	movf	??___flmul+3,w
  4573  0AF6  1103               	clrz
  4574  0AF7  1803               	skipnc
  4575  0AF8  3E01               	addlw	1
  4576  0AF9  1903               	skipnz
  4577  0AFA  2AFC               	goto	u3813
  4578  0AFB  07BB               	addwf	___flmul@grs+3,f
  4579  0AFC                     u3813:
  4580  0AFC                     l2604:
  4581  0AFC  082B               	movf	___flmul@b+1,w
  4582  0AFD  00B2               	movwf	??___flmul
  4583  0AFE  0832               	movf	??___flmul,w
  4584  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  4585  0B00  0830               	movf	___flmul@a+2,w
  4586  0B01  160A  158A  24B7  120A  158A  	fcall	__Umul8_16
  4587  0B06  0874               	movf	?__Umul8_16+1,w
  4588  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4589  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4590  0B09  00C3               	movwf	___flmul@temp+1
  4591  0B0A  0873               	movf	?__Umul8_16,w
  4592  0B0B  00C2               	movwf	___flmul@temp
  4593  0B0C  0842               	movf	___flmul@temp,w
  4594  0B0D  00B2               	movwf	??___flmul
  4595  0B0E  0843               	movf	___flmul@temp+1,w
  4596  0B0F  00B3               	movwf	??___flmul+1
  4597  0B10  01B4               	clrf	??___flmul+2
  4598  0B11  01B5               	clrf	??___flmul+3
  4599  0B12  0832               	movf	??___flmul,w
  4600  0B13  07BE               	addwf	___flmul@prod,f
  4601  0B14  0833               	movf	??___flmul+1,w
  4602  0B15  1103               	clrz
  4603  0B16  1803               	skipnc
  4604  0B17  3E01               	addlw	1
  4605  0B18  1903               	skipnz
  4606  0B19  2B1B               	goto	u3821
  4607  0B1A  07BF               	addwf	___flmul@prod+1,f
  4608  0B1B                     u3821:
  4609  0B1B  0834               	movf	??___flmul+2,w
  4610  0B1C  1103               	clrz
  4611  0B1D  1803               	skipnc
  4612  0B1E  3E01               	addlw	1
  4613  0B1F  1903               	skipnz
  4614  0B20  2B22               	goto	u3822
  4615  0B21  07C0               	addwf	___flmul@prod+2,f
  4616  0B22                     u3822:
  4617  0B22  0835               	movf	??___flmul+3,w
  4618  0B23  1103               	clrz
  4619  0B24  1803               	skipnc
  4620  0B25  3E01               	addlw	1
  4621  0B26  1903               	skipnz
  4622  0B27  2B29               	goto	u3823
  4623  0B28  07C1               	addwf	___flmul@prod+3,f
  4624  0B29                     u3823:
  4625  0B29                     l2606:
  4626  0B29  082C               	movf	___flmul@b+2,w
  4627  0B2A  00B2               	movwf	??___flmul
  4628  0B2B  0832               	movf	??___flmul,w
  4629  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  4630  0B2D  082F               	movf	___flmul@a+1,w
  4631  0B2E  160A  158A  24B7  120A  158A  	fcall	__Umul8_16
  4632  0B33  0874               	movf	?__Umul8_16+1,w
  4633  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4634  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4635  0B36  00C3               	movwf	___flmul@temp+1
  4636  0B37  0873               	movf	?__Umul8_16,w
  4637  0B38  00C2               	movwf	___flmul@temp
  4638  0B39                     l2608:
  4639  0B39  0842               	movf	___flmul@temp,w
  4640  0B3A  00B2               	movwf	??___flmul
  4641  0B3B  0843               	movf	___flmul@temp+1,w
  4642  0B3C  00B3               	movwf	??___flmul+1
  4643  0B3D  01B4               	clrf	??___flmul+2
  4644  0B3E  01B5               	clrf	??___flmul+3
  4645  0B3F  0832               	movf	??___flmul,w
  4646  0B40  07BE               	addwf	___flmul@prod,f
  4647  0B41  0833               	movf	??___flmul+1,w
  4648  0B42  1103               	clrz
  4649  0B43  1803               	skipnc
  4650  0B44  3E01               	addlw	1
  4651  0B45  1903               	skipnz
  4652  0B46  2B48               	goto	u3831
  4653  0B47  07BF               	addwf	___flmul@prod+1,f
  4654  0B48                     u3831:
  4655  0B48  0834               	movf	??___flmul+2,w
  4656  0B49  1103               	clrz
  4657  0B4A  1803               	skipnc
  4658  0B4B  3E01               	addlw	1
  4659  0B4C  1903               	skipnz
  4660  0B4D  2B4F               	goto	u3832
  4661  0B4E  07C0               	addwf	___flmul@prod+2,f
  4662  0B4F                     u3832:
  4663  0B4F  0835               	movf	??___flmul+3,w
  4664  0B50  1103               	clrz
  4665  0B51  1803               	skipnc
  4666  0B52  3E01               	addlw	1
  4667  0B53  1903               	skipnz
  4668  0B54  2B56               	goto	u3833
  4669  0B55  07C1               	addwf	___flmul@prod+3,f
  4670  0B56                     u3833:
  4671  0B56  082C               	movf	___flmul@b+2,w
  4672  0B57  00B2               	movwf	??___flmul
  4673  0B58  0832               	movf	??___flmul,w
  4674  0B59  00F3               	movwf	__Umul8_16@multiplicand
  4675  0B5A  0830               	movf	___flmul@a+2,w
  4676  0B5B  160A  158A  24B7  120A  158A  	fcall	__Umul8_16
  4677  0B60  0874               	movf	?__Umul8_16+1,w
  4678  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4679  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4680  0B63  00C3               	movwf	___flmul@temp+1
  4681  0B64  0873               	movf	?__Umul8_16,w
  4682  0B65  00C2               	movwf	___flmul@temp
  4683  0B66                     l2610:
  4684  0B66  0842               	movf	___flmul@temp,w
  4685  0B67  00B2               	movwf	??___flmul
  4686  0B68  0843               	movf	___flmul@temp+1,w
  4687  0B69  00B3               	movwf	??___flmul+1
  4688  0B6A  01B4               	clrf	??___flmul+2
  4689  0B6B  01B5               	clrf	??___flmul+3
  4690  0B6C  3008               	movlw	8
  4691  0B6D                     u3845:
  4692  0B6D  1003               	clrc
  4693  0B6E  0DB2               	rlf	??___flmul,f
  4694  0B6F  0DB3               	rlf	??___flmul+1,f
  4695  0B70  0DB4               	rlf	??___flmul+2,f
  4696  0B71  0DB5               	rlf	??___flmul+3,f
  4697  0B72                     u3840:
  4698  0B72  3EFF               	addlw	-1
  4699  0B73  1D03               	skipz
  4700  0B74  2B6D               	goto	u3845
  4701  0B75  0832               	movf	??___flmul,w
  4702  0B76  07BE               	addwf	___flmul@prod,f
  4703  0B77  0833               	movf	??___flmul+1,w
  4704  0B78  1103               	clrz
  4705  0B79  1803               	skipnc
  4706  0B7A  3E01               	addlw	1
  4707  0B7B  1903               	skipnz
  4708  0B7C  2B7E               	goto	u3851
  4709  0B7D  07BF               	addwf	___flmul@prod+1,f
  4710  0B7E                     u3851:
  4711  0B7E  0834               	movf	??___flmul+2,w
  4712  0B7F  1103               	clrz
  4713  0B80  1803               	skipnc
  4714  0B81  3E01               	addlw	1
  4715  0B82  1903               	skipnz
  4716  0B83  2B85               	goto	u3852
  4717  0B84  07C0               	addwf	___flmul@prod+2,f
  4718  0B85                     u3852:
  4719  0B85  0835               	movf	??___flmul+3,w
  4720  0B86  1103               	clrz
  4721  0B87  1803               	skipnc
  4722  0B88  3E01               	addlw	1
  4723  0B89  1903               	skipnz
  4724  0B8A  2B8C               	goto	u3853
  4725  0B8B  07C1               	addwf	___flmul@prod+3,f
  4726  0B8C                     u3853:
  4727  0B8C                     l2612:
  4728  0B8C  0838               	movf	___flmul@grs,w
  4729  0B8D  00B2               	movwf	??___flmul
  4730  0B8E  0839               	movf	___flmul@grs+1,w
  4731  0B8F  00B3               	movwf	??___flmul+1
  4732  0B90  083A               	movf	___flmul@grs+2,w
  4733  0B91  00B4               	movwf	??___flmul+2
  4734  0B92  083B               	movf	___flmul@grs+3,w
  4735  0B93  00B5               	movwf	??___flmul+3
  4736  0B94  3018               	movlw	24
  4737  0B95                     u3865:
  4738  0B95  1003               	clrc
  4739  0B96  0CB5               	rrf	??___flmul+3,f
  4740  0B97  0CB4               	rrf	??___flmul+2,f
  4741  0B98  0CB3               	rrf	??___flmul+1,f
  4742  0B99  0CB2               	rrf	??___flmul,f
  4743  0B9A                     u3860:
  4744  0B9A  3EFF               	addlw	-1
  4745  0B9B  1D03               	skipz
  4746  0B9C  2B95               	goto	u3865
  4747  0B9D  0832               	movf	??___flmul,w
  4748  0B9E  07BE               	addwf	___flmul@prod,f
  4749  0B9F  0833               	movf	??___flmul+1,w
  4750  0BA0  1103               	clrz
  4751  0BA1  1803               	skipnc
  4752  0BA2  3E01               	addlw	1
  4753  0BA3  1903               	skipnz
  4754  0BA4  2BA6               	goto	u3871
  4755  0BA5  07BF               	addwf	___flmul@prod+1,f
  4756  0BA6                     u3871:
  4757  0BA6  0834               	movf	??___flmul+2,w
  4758  0BA7  1103               	clrz
  4759  0BA8  1803               	skipnc
  4760  0BA9  3E01               	addlw	1
  4761  0BAA  1903               	skipnz
  4762  0BAB  2BAD               	goto	u3872
  4763  0BAC  07C0               	addwf	___flmul@prod+2,f
  4764  0BAD                     u3872:
  4765  0BAD  0835               	movf	??___flmul+3,w
  4766  0BAE  1103               	clrz
  4767  0BAF  1803               	skipnc
  4768  0BB0  3E01               	addlw	1
  4769  0BB1  1903               	skipnz
  4770  0BB2  2BB4               	goto	u3873
  4771  0BB3  07C1               	addwf	___flmul@prod+3,f
  4772  0BB4                     u3873:
  4773  0BB4                     l2614:
  4774  0BB4  3008               	movlw	8
  4775  0BB5  00B2               	movwf	??___flmul
  4776  0BB6                     u3885:
  4777  0BB6  1003               	clrc
  4778  0BB7  0DB8               	rlf	___flmul@grs,f
  4779  0BB8  0DB9               	rlf	___flmul@grs+1,f
  4780  0BB9  0DBA               	rlf	___flmul@grs+2,f
  4781  0BBA  0DBB               	rlf	___flmul@grs+3,f
  4782  0BBB  0BB2               	decfsz	??___flmul,f
  4783  0BBC  2BB6               	goto	u3885
  4784  0BBD                     l2616:
  4785  0BBD  083D               	movf	___flmul@bexp,w
  4786  0BBE  073C               	addwf	___flmul@aexp,w
  4787  0BBF  00B2               	movwf	??___flmul
  4788  0BC0  01B3               	clrf	??___flmul+1
  4789  0BC1  0DB3               	rlf	??___flmul+1,f
  4790  0BC2  0832               	movf	??___flmul,w
  4791  0BC3  3E82               	addlw	130
  4792  0BC4  00C2               	movwf	___flmul@temp
  4793  0BC5  0833               	movf	??___flmul+1,w
  4794  0BC6  1803               	skipnc
  4795  0BC7  3E01               	addlw	1
  4796  0BC8  3EFF               	addlw	255
  4797  0BC9  00C3               	movwf	___flmul@temp+1
  4798  0BCA  2BE8               	goto	l2628
  4799  0BCB                     l2618:
  4800  0BCB  3001               	movlw	1
  4801  0BCC  00B2               	movwf	??___flmul
  4802  0BCD                     u3895:
  4803  0BCD  1003               	clrc
  4804  0BCE  0DBE               	rlf	___flmul@prod,f
  4805  0BCF  0DBF               	rlf	___flmul@prod+1,f
  4806  0BD0  0DC0               	rlf	___flmul@prod+2,f
  4807  0BD1  0DC1               	rlf	___flmul@prod+3,f
  4808  0BD2  0BB2               	decfsz	??___flmul,f
  4809  0BD3  2BCD               	goto	u3895
  4810  0BD4                     l2620:
  4811  0BD4  1FBB               	btfss	___flmul@grs+3,7
  4812  0BD5  2BD7               	goto	u3901
  4813  0BD6  2BD8               	goto	u3900
  4814  0BD7                     u3901:
  4815  0BD7  2BD9               	goto	l2624
  4816  0BD8                     u3900:
  4817  0BD8                     l2622:
  4818  0BD8  143E               	bsf	___flmul@prod,0
  4819  0BD9                     l2624:
  4820  0BD9  3001               	movlw	1
  4821  0BDA  00B2               	movwf	??___flmul
  4822  0BDB                     u3915:
  4823  0BDB  1003               	clrc
  4824  0BDC  0DB8               	rlf	___flmul@grs,f
  4825  0BDD  0DB9               	rlf	___flmul@grs+1,f
  4826  0BDE  0DBA               	rlf	___flmul@grs+2,f
  4827  0BDF  0DBB               	rlf	___flmul@grs+3,f
  4828  0BE0  0BB2               	decfsz	??___flmul,f
  4829  0BE1  2BDB               	goto	u3915
  4830  0BE2                     l2626:
  4831  0BE2  30FF               	movlw	255
  4832  0BE3  07C2               	addwf	___flmul@temp,f
  4833  0BE4  1803               	skipnc
  4834  0BE5  0AC3               	incf	___flmul@temp+1,f
  4835  0BE6  30FF               	movlw	255
  4836  0BE7  07C3               	addwf	___flmul@temp+1,f
  4837  0BE8                     l2628:
  4838  0BE8  1FC0               	btfss	___flmul@prod+2,7
  4839  0BE9  2BEB               	goto	u3921
  4840  0BEA  2BEC               	goto	u3920
  4841  0BEB                     u3921:
  4842  0BEB  2BCB               	goto	l2618
  4843  0BEC                     u3920:
  4844  0BEC                     l2630:
  4845  0BEC  01BC               	clrf	___flmul@aexp
  4846  0BED                     l2632:
  4847  0BED  1FBB               	btfss	___flmul@grs+3,7
  4848  0BEE  2BF0               	goto	u3931
  4849  0BEF  2BF1               	goto	u3930
  4850  0BF0                     u3931:
  4851  0BF0  2C0D               	goto	l2640
  4852  0BF1                     u3930:
  4853  0BF1                     l2634:
  4854  0BF1  30FF               	movlw	255
  4855  0BF2  0538               	andwf	___flmul@grs,w
  4856  0BF3  00B2               	movwf	??___flmul
  4857  0BF4  30FF               	movlw	255
  4858  0BF5  0539               	andwf	___flmul@grs+1,w
  4859  0BF6  00B3               	movwf	??___flmul+1
  4860  0BF7  30FF               	movlw	255
  4861  0BF8  053A               	andwf	___flmul@grs+2,w
  4862  0BF9  00B4               	movwf	??___flmul+2
  4863  0BFA  307F               	movlw	127
  4864  0BFB  053B               	andwf	___flmul@grs+3,w
  4865  0BFC  00B5               	movwf	??___flmul+3
  4866  0BFD  0835               	movf	??___flmul+3,w
  4867  0BFE  0434               	iorwf	??___flmul+2,w
  4868  0BFF  0433               	iorwf	??___flmul+1,w
  4869  0C00  0432               	iorwf	??___flmul,w
  4870  0C01  1903               	skipnz
  4871  0C02  2C04               	goto	u3941
  4872  0C03  2C05               	goto	u3940
  4873  0C04                     u3941:
  4874  0C04  2C08               	goto	l772
  4875  0C05                     u3940:
  4876  0C05                     l2636:
  4877  0C05  01BC               	clrf	___flmul@aexp
  4878  0C06  0ABC               	incf	___flmul@aexp,f
  4879  0C07  2C0D               	goto	l2640
  4880  0C08                     l772:
  4881  0C08  1C3E               	btfss	___flmul@prod,0
  4882  0C09  2C0B               	goto	u3951
  4883  0C0A  2C0C               	goto	u3950
  4884  0C0B                     u3951:
  4885  0C0B  2C0D               	goto	l2640
  4886  0C0C                     u3950:
  4887  0C0C  2C05               	goto	l2636
  4888  0C0D                     l2640:
  4889  0C0D  083C               	movf	___flmul@aexp,w
  4890  0C0E  1903               	btfsc	3,2
  4891  0C0F  2C11               	goto	u3961
  4892  0C10  2C12               	goto	u3960
  4893  0C11                     u3961:
  4894  0C11  2C43               	goto	l2650
  4895  0C12                     u3960:
  4896  0C12                     l2642:
  4897  0C12  3001               	movlw	1
  4898  0C13  07BE               	addwf	___flmul@prod,f
  4899  0C14  3000               	movlw	0
  4900  0C15  1803               	skipnc
  4901  0C16  3001               	movlw	1
  4902  0C17  07BF               	addwf	___flmul@prod+1,f
  4903  0C18  3000               	movlw	0
  4904  0C19  1803               	skipnc
  4905  0C1A  3001               	movlw	1
  4906  0C1B  07C0               	addwf	___flmul@prod+2,f
  4907  0C1C  3000               	movlw	0
  4908  0C1D  1803               	skipnc
  4909  0C1E  3001               	movlw	1
  4910  0C1F  07C1               	addwf	___flmul@prod+3,f
  4911  0C20                     l2644:
  4912  0C20  1C41               	btfss	___flmul@prod+3,0
  4913  0C21  2C23               	goto	u3971
  4914  0C22  2C24               	goto	u3970
  4915  0C23                     u3971:
  4916  0C23  2C43               	goto	l2650
  4917  0C24                     u3970:
  4918  0C24                     l2646:
  4919  0C24  083E               	movf	___flmul@prod,w
  4920  0C25  00B2               	movwf	??___flmul
  4921  0C26  083F               	movf	___flmul@prod+1,w
  4922  0C27  00B3               	movwf	??___flmul+1
  4923  0C28  0840               	movf	___flmul@prod+2,w
  4924  0C29  00B4               	movwf	??___flmul+2
  4925  0C2A  0841               	movf	___flmul@prod+3,w
  4926  0C2B  00B5               	movwf	??___flmul+3
  4927  0C2C  3001               	movlw	1
  4928  0C2D  00B6               	movwf	??___flmul+4
  4929  0C2E                     u3985:
  4930  0C2E  0D35               	rlf	??___flmul+3,w
  4931  0C2F  0CB5               	rrf	??___flmul+3,f
  4932  0C30  0CB4               	rrf	??___flmul+2,f
  4933  0C31  0CB3               	rrf	??___flmul+1,f
  4934  0C32  0CB2               	rrf	??___flmul,f
  4935  0C33                     u3980:
  4936  0C33  0BB6               	decfsz	??___flmul+4,f
  4937  0C34  2C2E               	goto	u3985
  4938  0C35  0835               	movf	??___flmul+3,w
  4939  0C36  00C1               	movwf	___flmul@prod+3
  4940  0C37  0834               	movf	??___flmul+2,w
  4941  0C38  00C0               	movwf	___flmul@prod+2
  4942  0C39  0833               	movf	??___flmul+1,w
  4943  0C3A  00BF               	movwf	___flmul@prod+1
  4944  0C3B  0832               	movf	??___flmul,w
  4945  0C3C  00BE               	movwf	___flmul@prod
  4946  0C3D                     l2648:
  4947  0C3D  3001               	movlw	1
  4948  0C3E  07C2               	addwf	___flmul@temp,f
  4949  0C3F  1803               	skipnc
  4950  0C40  0AC3               	incf	___flmul@temp+1,f
  4951  0C41  3000               	movlw	0
  4952  0C42  07C3               	addwf	___flmul@temp+1,f
  4953  0C43                     l2650:
  4954  0C43  0843               	movf	___flmul@temp+1,w
  4955  0C44  3A80               	xorlw	128
  4956  0C45  00FF               	movwf	btemp+1
  4957  0C46  3080               	movlw	128
  4958  0C47  027F               	subwf	btemp+1,w
  4959  0C48  1D03               	skipz
  4960  0C49  2C4C               	goto	u3995
  4961  0C4A  30FF               	movlw	255
  4962  0C4B  0242               	subwf	___flmul@temp,w
  4963  0C4C                     u3995:
  4964  0C4C  1C03               	skipc
  4965  0C4D  2C4F               	goto	u3991
  4966  0C4E  2C50               	goto	u3990
  4967  0C4F                     u3991:
  4968  0C4F  2C5B               	goto	l2654
  4969  0C50                     u3990:
  4970  0C50                     l2652:
  4971  0C50  307F               	movlw	127
  4972  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  4973  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  4974  0C53  00C1               	movwf	___flmul@prod+3
  4975  0C54  3080               	movlw	128
  4976  0C55  00C0               	movwf	___flmul@prod+2
  4977  0C56  3000               	movlw	0
  4978  0C57  00BF               	movwf	___flmul@prod+1
  4979  0C58  3000               	movlw	0
  4980  0C59  00BE               	movwf	___flmul@prod
  4981  0C5A  2C90               	goto	l778
  4982  0C5B                     l2654:
  4983  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0C5D  0843               	movf	___flmul@temp+1,w
  4986  0C5E  3A80               	xorlw	128
  4987  0C5F  00FF               	movwf	btemp+1
  4988  0C60  3080               	movlw	128
  4989  0C61  027F               	subwf	btemp+1,w
  4990  0C62  1D03               	skipz
  4991  0C63  2C66               	goto	u4005
  4992  0C64  3001               	movlw	1
  4993  0C65  0242               	subwf	___flmul@temp,w
  4994  0C66                     u4005:
  4995  0C66  1803               	skipnc
  4996  0C67  2C69               	goto	u4001
  4997  0C68  2C6A               	goto	u4000
  4998  0C69                     u4001:
  4999  0C69  2C76               	goto	l2660
  5000  0C6A                     u4000:
  5001  0C6A                     l2656:
  5002  0C6A  3000               	movlw	0
  5003  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5004  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5005  0C6D  00C1               	movwf	___flmul@prod+3
  5006  0C6E  3000               	movlw	0
  5007  0C6F  00C0               	movwf	___flmul@prod+2
  5008  0C70  3000               	movlw	0
  5009  0C71  00BF               	movwf	___flmul@prod+1
  5010  0C72  3000               	movlw	0
  5011  0C73  00BE               	movwf	___flmul@prod
  5012  0C74                     l2658:
  5013  0C74  01B7               	clrf	___flmul@sign
  5014  0C75  2C90               	goto	l778
  5015  0C76                     l2660:
  5016  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5017  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5018  0C78  0842               	movf	___flmul@temp,w
  5019  0C79  00B2               	movwf	??___flmul
  5020  0C7A  0832               	movf	??___flmul,w
  5021  0C7B  00BD               	movwf	___flmul@bexp
  5022  0C7C  30FF               	movlw	255
  5023  0C7D  05BE               	andwf	___flmul@prod,f
  5024  0C7E  30FF               	movlw	255
  5025  0C7F  05BF               	andwf	___flmul@prod+1,f
  5026  0C80  307F               	movlw	127
  5027  0C81  05C0               	andwf	___flmul@prod+2,f
  5028  0C82  3000               	movlw	0
  5029  0C83  05C1               	andwf	___flmul@prod+3,f
  5030  0C84                     l2662:
  5031  0C84  1C3D               	btfss	___flmul@bexp,0
  5032  0C85  2C87               	goto	u4011
  5033  0C86  2C88               	goto	u4010
  5034  0C87                     u4011:
  5035  0C87  2C89               	goto	l2666
  5036  0C88                     u4010:
  5037  0C88                     l2664:
  5038  0C88  17C0               	bsf	___flmul@prod+2,7
  5039  0C89                     l2666:
  5040  0C89  083D               	movf	___flmul@bexp,w
  5041  0C8A  00B2               	movwf	??___flmul
  5042  0C8B  1003               	clrc
  5043  0C8C  0C32               	rrf	??___flmul,w
  5044  0C8D  00B3               	movwf	??___flmul+1
  5045  0C8E  0833               	movf	??___flmul+1,w
  5046  0C8F  00C1               	movwf	___flmul@prod+3
  5047  0C90                     l778:
  5048  0C90  0837               	movf	___flmul@sign,w
  5049  0C91  00B2               	movwf	??___flmul
  5050  0C92  0832               	movf	??___flmul,w
  5051  0C93  04C1               	iorwf	___flmul@prod+3,f
  5052  0C94                     l2668:
  5053  0C94  0841               	movf	___flmul@prod+3,w
  5054  0C95  00AD               	movwf	?___flmul+3
  5055  0C96  0840               	movf	___flmul@prod+2,w
  5056  0C97  00AC               	movwf	?___flmul+2
  5057  0C98  083F               	movf	___flmul@prod+1,w
  5058  0C99  00AB               	movwf	?___flmul+1
  5059  0C9A  083E               	movf	___flmul@prod,w
  5060  0C9B  00AA               	movwf	?___flmul
  5061  0C9C                     l766:
  5062  0C9C  0008               	return
  5063  0C9D                     __end_of___flmul:
  5064                           
  5065                           	psect	text10
  5066  1CB7                     __ptext10:	
  5067 ;; *************** function __Umul8_16 *****************
  5068 ;; Defined at:
  5069 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  multiplier      1    wreg     unsigned char 
  5072 ;;  multiplicand    1    3[COMMON] unsigned char 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5075 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5076 ;;  product         2    0[BANK0 ] unsigned int 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  2    3[COMMON] unsigned int 
  5079 ;; Registers used:
  5080 ;;		wreg, status,2, status,0
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5086 ;;      Params:         2       0       0       0       0
  5087 ;;      Locals:         0       5       0       0       0
  5088 ;;      Temps:          2       0       0       0       0
  5089 ;;      Totals:         4       5       0       0       0
  5090 ;;Total ram usage:        9 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:    1
  5093 ;; This function calls:
  5094 ;;		Nothing
  5095 ;; This function is called by:
  5096 ;;		___flmul
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           
  5101                           ;psect for function __Umul8_16
  5102  1CB7                     __Umul8_16:
  5103                           
  5104                           ;incstack = 0
  5105                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5106                           ;__Umul8_16@multiplier stored from wreg
  5107  1CB7  1283               	bcf	3,5	;RP0=0, select bank0
  5108  1CB8  1303               	bcf	3,6	;RP1=0, select bank0
  5109  1CB9  00A4               	movwf	__Umul8_16@multiplier
  5110  1CBA                     l2194:
  5111  1CBA  01A0               	clrf	__Umul8_16@product
  5112  1CBB  01A1               	clrf	__Umul8_16@product+1
  5113  1CBC                     l2196:
  5114  1CBC  0873               	movf	__Umul8_16@multiplicand,w
  5115  1CBD  00F5               	movwf	??__Umul8_16
  5116  1CBE  01F6               	clrf	??__Umul8_16+1
  5117  1CBF  0875               	movf	??__Umul8_16,w
  5118  1CC0  00A2               	movwf	__Umul8_16@word_mpld
  5119  1CC1  0876               	movf	??__Umul8_16+1,w
  5120  1CC2  00A3               	movwf	__Umul8_16@word_mpld+1
  5121  1CC3                     l2198:
  5122  1CC3  1C24               	btfss	__Umul8_16@multiplier,0
  5123  1CC4  2CC6               	goto	u2841
  5124  1CC5  2CC7               	goto	u2840
  5125  1CC6                     u2841:
  5126  1CC6  2CCD               	goto	l785
  5127  1CC7                     u2840:
  5128  1CC7                     l2200:
  5129  1CC7  0822               	movf	__Umul8_16@word_mpld,w
  5130  1CC8  07A0               	addwf	__Umul8_16@product,f
  5131  1CC9  1803               	skipnc
  5132  1CCA  0AA1               	incf	__Umul8_16@product+1,f
  5133  1CCB  0823               	movf	__Umul8_16@word_mpld+1,w
  5134  1CCC  07A1               	addwf	__Umul8_16@product+1,f
  5135  1CCD                     l785:
  5136  1CCD  3001               	movlw	1
  5137  1CCE                     u2855:
  5138  1CCE  1003               	clrc
  5139  1CCF  0DA2               	rlf	__Umul8_16@word_mpld,f
  5140  1CD0  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5141  1CD1  3EFF               	addlw	-1
  5142  1CD2  1D03               	skipz
  5143  1CD3  2CCE               	goto	u2855
  5144  1CD4  1003               	clrc
  5145  1CD5  0CA4               	rrf	__Umul8_16@multiplier,f
  5146  1CD6                     l2202:
  5147  1CD6  0824               	movf	__Umul8_16@multiplier,w
  5148  1CD7  1D03               	btfss	3,2
  5149  1CD8  2CDA               	goto	u2861
  5150  1CD9  2CDB               	goto	u2860
  5151  1CDA                     u2861:
  5152  1CDA  2CC3               	goto	l2198
  5153  1CDB                     u2860:
  5154  1CDB                     l2204:
  5155  1CDB  0821               	movf	__Umul8_16@product+1,w
  5156  1CDC  00F4               	movwf	?__Umul8_16+1
  5157  1CDD  0820               	movf	__Umul8_16@product,w
  5158  1CDE  00F3               	movwf	?__Umul8_16
  5159  1CDF                     l787:
  5160  1CDF  0008               	return
  5161  1CE0                     __end_of__Umul8_16:
  5162                           
  5163                           	psect	text11
  5164  06F0                     __ptext11:	
  5165 ;; *************** function __tdiv_to_l_ *****************
  5166 ;; Defined at:
  5167 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  f1              4    0[BANK0 ] float 
  5170 ;;  f2              4    4[BANK0 ] float 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  quot            4    8[BANK0 ] unsigned long 
  5173 ;;  exp1            1   13[BANK0 ] unsigned char 
  5174 ;;  cntr            1   12[BANK0 ] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  4    0[BANK0 ] unsigned long 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5184 ;;      Params:         0       8       0       0       0
  5185 ;;      Locals:         0       6       0       0       0
  5186 ;;      Temps:          4       0       0       0       0
  5187 ;;      Totals:         4      14       0       0       0
  5188 ;;Total ram usage:       18 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    1
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_sprintf
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           
  5199                           ;psect for function __tdiv_to_l_
  5200  06F0                     __tdiv_to_l_:
  5201  06F0                     l3618:	
  5202                           ;incstack = 0
  5203                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5204                           
  5205  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  5206  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  5207  06F2  0820               	movf	__tdiv_to_l_@f1,w
  5208  06F3  00F3               	movwf	??__tdiv_to_l_
  5209  06F4  0821               	movf	__tdiv_to_l_@f1+1,w
  5210  06F5  00F4               	movwf	??__tdiv_to_l_+1
  5211  06F6  0822               	movf	__tdiv_to_l_@f1+2,w
  5212  06F7  00F5               	movwf	??__tdiv_to_l_+2
  5213  06F8  1003               	clrc
  5214  06F9  0D74               	rlf	??__tdiv_to_l_+1,w
  5215  06FA  0D75               	rlf	??__tdiv_to_l_+2,w
  5216  06FB  00F6               	movwf	??__tdiv_to_l_+3
  5217  06FC  0876               	movf	??__tdiv_to_l_+3,w
  5218  06FD  00AD               	movwf	__tdiv_to_l_@exp1
  5219  06FE  082D               	movf	__tdiv_to_l_@exp1,w
  5220  06FF  1D03               	btfss	3,2
  5221  0700  2F02               	goto	u6081
  5222  0701  2F03               	goto	u6080
  5223  0702                     u6081:
  5224  0702  2F0C               	goto	l3624
  5225  0703                     u6080:
  5226  0703                     l3620:
  5227  0703  3000               	movlw	0
  5228  0704  00A3               	movwf	?__tdiv_to_l_+3
  5229  0705  3000               	movlw	0
  5230  0706  00A2               	movwf	?__tdiv_to_l_+2
  5231  0707  3000               	movlw	0
  5232  0708  00A1               	movwf	?__tdiv_to_l_+1
  5233  0709  3000               	movlw	0
  5234  070A  00A0               	movwf	?__tdiv_to_l_
  5235  070B  2FAC               	goto	l560
  5236  070C                     l3624:
  5237  070C  0824               	movf	__tdiv_to_l_@f2,w
  5238  070D  00F3               	movwf	??__tdiv_to_l_
  5239  070E  0825               	movf	__tdiv_to_l_@f2+1,w
  5240  070F  00F4               	movwf	??__tdiv_to_l_+1
  5241  0710  0826               	movf	__tdiv_to_l_@f2+2,w
  5242  0711  00F5               	movwf	??__tdiv_to_l_+2
  5243  0712  1003               	clrc
  5244  0713  0D74               	rlf	??__tdiv_to_l_+1,w
  5245  0714  0D75               	rlf	??__tdiv_to_l_+2,w
  5246  0715  00F6               	movwf	??__tdiv_to_l_+3
  5247  0716  0876               	movf	??__tdiv_to_l_+3,w
  5248  0717  00AC               	movwf	__tdiv_to_l_@cntr
  5249  0718  082C               	movf	__tdiv_to_l_@cntr,w
  5250  0719  1D03               	btfss	3,2
  5251  071A  2F1C               	goto	u6091
  5252  071B  2F1D               	goto	u6090
  5253  071C                     u6091:
  5254  071C  2F1E               	goto	l561
  5255  071D                     u6090:
  5256  071D  2F03               	goto	l3620
  5257  071E                     l561:
  5258  071E  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5259  071F                     l3630:
  5260  071F  30FF               	movlw	255
  5261  0720  05A0               	andwf	__tdiv_to_l_@f1,f
  5262  0721  30FF               	movlw	255
  5263  0722  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5264  0723  3000               	movlw	0
  5265  0724  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5266  0725                     l3632:
  5267  0725  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5268  0726  30FF               	movlw	255
  5269  0727  05A4               	andwf	__tdiv_to_l_@f2,f
  5270  0728  30FF               	movlw	255
  5271  0729  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5272  072A  3000               	movlw	0
  5273  072B  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5274  072C  3000               	movlw	0
  5275  072D  00AB               	movwf	__tdiv_to_l_@quot+3
  5276  072E  3000               	movlw	0
  5277  072F  00AA               	movwf	__tdiv_to_l_@quot+2
  5278  0730  3000               	movlw	0
  5279  0731  00A9               	movwf	__tdiv_to_l_@quot+1
  5280  0732  3000               	movlw	0
  5281  0733  00A8               	movwf	__tdiv_to_l_@quot
  5282  0734                     l3634:
  5283  0734  307F               	movlw	127
  5284  0735  02AD               	subwf	__tdiv_to_l_@exp1,f
  5285  0736                     l3636:
  5286  0736  3098               	movlw	152
  5287  0737  072C               	addwf	__tdiv_to_l_@cntr,w
  5288  0738  00F3               	movwf	??__tdiv_to_l_
  5289  0739  0873               	movf	??__tdiv_to_l_,w
  5290  073A  02AD               	subwf	__tdiv_to_l_@exp1,f
  5291  073B  3018               	movlw	24
  5292  073C  00F3               	movwf	??__tdiv_to_l_
  5293  073D  0873               	movf	??__tdiv_to_l_,w
  5294  073E  00AC               	movwf	__tdiv_to_l_@cntr
  5295  073F                     l3638:
  5296  073F  3001               	movlw	1
  5297  0740  00F3               	movwf	??__tdiv_to_l_
  5298  0741                     u6105:
  5299  0741  1003               	clrc
  5300  0742  0DA8               	rlf	__tdiv_to_l_@quot,f
  5301  0743  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5302  0744  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5303  0745  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5304  0746  0BF3               	decfsz	??__tdiv_to_l_,f
  5305  0747  2F41               	goto	u6105
  5306  0748                     l3640:
  5307  0748  0826               	movf	__tdiv_to_l_@f2+2,w
  5308  0749  0222               	subwf	__tdiv_to_l_@f1+2,w
  5309  074A  1D03               	skipz
  5310  074B  2F52               	goto	u6115
  5311  074C  0825               	movf	__tdiv_to_l_@f2+1,w
  5312  074D  0221               	subwf	__tdiv_to_l_@f1+1,w
  5313  074E  1D03               	skipz
  5314  074F  2F52               	goto	u6115
  5315  0750  0824               	movf	__tdiv_to_l_@f2,w
  5316  0751  0220               	subwf	__tdiv_to_l_@f1,w
  5317  0752                     u6115:
  5318  0752  1C03               	skipc
  5319  0753  2F55               	goto	u6111
  5320  0754  2F56               	goto	u6110
  5321  0755                     u6111:
  5322  0755  2F61               	goto	l3646
  5323  0756                     u6110:
  5324  0756                     l3642:
  5325  0756  0824               	movf	__tdiv_to_l_@f2,w
  5326  0757  02A0               	subwf	__tdiv_to_l_@f1,f
  5327  0758  0825               	movf	__tdiv_to_l_@f2+1,w
  5328  0759  1C03               	skipc
  5329  075A  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  5330  075B  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5331  075C  0826               	movf	__tdiv_to_l_@f2+2,w
  5332  075D  1C03               	skipc
  5333  075E  0A26               	incf	__tdiv_to_l_@f2+2,w
  5334  075F  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5335  0760                     l3644:
  5336  0760  1428               	bsf	__tdiv_to_l_@quot,0
  5337  0761                     l3646:
  5338  0761  3001               	movlw	1
  5339  0762                     u6125:
  5340  0762  1003               	clrc
  5341  0763  0DA0               	rlf	__tdiv_to_l_@f1,f
  5342  0764  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5343  0765  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5344  0766  3EFF               	addlw	-1
  5345  0767  1D03               	skipz
  5346  0768  2F62               	goto	u6125
  5347  0769                     l3648:
  5348  0769  3001               	movlw	1
  5349  076A  02AC               	subwf	__tdiv_to_l_@cntr,f
  5350  076B  1D03               	btfss	3,2
  5351  076C  2F6E               	goto	u6131
  5352  076D  2F6F               	goto	u6130
  5353  076E                     u6131:
  5354  076E  2F3F               	goto	l3638
  5355  076F                     u6130:
  5356  076F                     l564:
  5357  076F  1FAD               	btfss	__tdiv_to_l_@exp1,7
  5358  0770  2F72               	goto	u6141
  5359  0771  2F73               	goto	u6140
  5360  0772                     u6141:
  5361  0772  2F8D               	goto	l3658
  5362  0773                     u6140:
  5363  0773                     l3650:
  5364  0773  082D               	movf	__tdiv_to_l_@exp1,w
  5365  0774  3A80               	xorlw	128
  5366  0775  3E97               	addlw	151
  5367  0776  1803               	skipnc
  5368  0777  2F79               	goto	u6151
  5369  0778  2F7A               	goto	u6150
  5370  0779                     u6151:
  5371  0779  2F7B               	goto	l3656
  5372  077A                     u6150:
  5373  077A  2F03               	goto	l3620
  5374  077B                     l3656:
  5375  077B  3001               	movlw	1
  5376  077C                     u6165:
  5377  077C  1003               	clrc
  5378  077D  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  5379  077E  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  5380  077F  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  5381  0780  0CA8               	rrf	__tdiv_to_l_@quot,f
  5382  0781  3EFF               	addlw	-1
  5383  0782  1D03               	skipz
  5384  0783  2F7C               	goto	u6165
  5385  0784  3001               	movlw	1
  5386  0785  00F3               	movwf	??__tdiv_to_l_
  5387  0786  0873               	movf	??__tdiv_to_l_,w
  5388  0787  07AD               	addwf	__tdiv_to_l_@exp1,f
  5389  0788  1D03               	btfss	3,2
  5390  0789  2F8B               	goto	u6171
  5391  078A  2F8C               	goto	u6170
  5392  078B                     u6171:
  5393  078B  2F7B               	goto	l3656
  5394  078C                     u6170:
  5395  078C  2FA4               	goto	l3666
  5396  078D                     l3658:
  5397  078D  3018               	movlw	24
  5398  078E  022D               	subwf	__tdiv_to_l_@exp1,w
  5399  078F  1C03               	skipc
  5400  0790  2F92               	goto	u6181
  5401  0791  2F93               	goto	u6180
  5402  0792                     u6181:
  5403  0792  2F9F               	goto	l571
  5404  0793                     u6180:
  5405  0793  2F03               	goto	l3620
  5406  0794                     l3664:
  5407  0794  3001               	movlw	1
  5408  0795  00F3               	movwf	??__tdiv_to_l_
  5409  0796                     u6195:
  5410  0796  1003               	clrc
  5411  0797  0DA8               	rlf	__tdiv_to_l_@quot,f
  5412  0798  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5413  0799  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5414  079A  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5415  079B  0BF3               	decfsz	??__tdiv_to_l_,f
  5416  079C  2F96               	goto	u6195
  5417  079D  3001               	movlw	1
  5418  079E  02AD               	subwf	__tdiv_to_l_@exp1,f
  5419  079F                     l571:
  5420  079F  082D               	movf	__tdiv_to_l_@exp1,w
  5421  07A0  1D03               	btfss	3,2
  5422  07A1  2FA3               	goto	u6201
  5423  07A2  2FA4               	goto	u6200
  5424  07A3                     u6201:
  5425  07A3  2F94               	goto	l3664
  5426  07A4                     u6200:
  5427  07A4                     l3666:
  5428  07A4  082B               	movf	__tdiv_to_l_@quot+3,w
  5429  07A5  00A3               	movwf	?__tdiv_to_l_+3
  5430  07A6  082A               	movf	__tdiv_to_l_@quot+2,w
  5431  07A7  00A2               	movwf	?__tdiv_to_l_+2
  5432  07A8  0829               	movf	__tdiv_to_l_@quot+1,w
  5433  07A9  00A1               	movwf	?__tdiv_to_l_+1
  5434  07AA  0828               	movf	__tdiv_to_l_@quot,w
  5435  07AB  00A0               	movwf	?__tdiv_to_l_
  5436  07AC                     l560:
  5437  07AC  0008               	return
  5438  07AD                     __end_of__tdiv_to_l_:
  5439                           
  5440                           	psect	text12
  5441  0632                     __ptext12:	
  5442 ;; *************** function __div_to_l_ *****************
  5443 ;; Defined at:
  5444 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  f1              4    0[BANK0 ] unsigned long 
  5447 ;;  f2              4    4[BANK0 ] unsigned long 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  quot            4    8[BANK0 ] unsigned long 
  5450 ;;  exp1            1   13[BANK0 ] unsigned char 
  5451 ;;  cntr            1   12[BANK0 ] unsigned char 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  4    0[BANK0 ] unsigned long 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         0       8       0       0       0
  5462 ;;      Locals:         0       6       0       0       0
  5463 ;;      Temps:          1       0       0       0       0
  5464 ;;      Totals:         1      14       0       0       0
  5465 ;;Total ram usage:       15 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    1
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_sprintf
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           
  5476                           ;psect for function __div_to_l_
  5477  0632                     __div_to_l_:
  5478  0632                     l3670:	
  5479                           ;incstack = 0
  5480                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5481                           
  5482  0632  1003               	clrc
  5483  0633  1283               	bcf	3,5	;RP0=0, select bank0
  5484  0634  1303               	bcf	3,6	;RP1=0, select bank0
  5485  0635  0D22               	rlf	__div_to_l_@f1+2,w
  5486  0636  0D23               	rlf	__div_to_l_@f1+3,w
  5487  0637  00F3               	movwf	??__div_to_l_
  5488  0638  0873               	movf	??__div_to_l_,w
  5489  0639  00AD               	movwf	__div_to_l_@exp1
  5490  063A  082D               	movf	__div_to_l_@exp1,w
  5491  063B  1D03               	btfss	3,2
  5492  063C  2E3E               	goto	u6211
  5493  063D  2E3F               	goto	u6210
  5494  063E                     u6211:
  5495  063E  2E48               	goto	l3676
  5496  063F                     u6210:
  5497  063F                     l3672:
  5498  063F  3000               	movlw	0
  5499  0640  00A3               	movwf	?__div_to_l_+3
  5500  0641  3000               	movlw	0
  5501  0642  00A2               	movwf	?__div_to_l_+2
  5502  0643  3000               	movlw	0
  5503  0644  00A1               	movwf	?__div_to_l_+1
  5504  0645  3000               	movlw	0
  5505  0646  00A0               	movwf	?__div_to_l_
  5506  0647  2EEF               	goto	l513
  5507  0648                     l3676:
  5508  0648  1003               	clrc
  5509  0649  0D26               	rlf	__div_to_l_@f2+2,w
  5510  064A  0D27               	rlf	__div_to_l_@f2+3,w
  5511  064B  00F3               	movwf	??__div_to_l_
  5512  064C  0873               	movf	??__div_to_l_,w
  5513  064D  00AC               	movwf	__div_to_l_@cntr
  5514  064E  082C               	movf	__div_to_l_@cntr,w
  5515  064F  1D03               	btfss	3,2
  5516  0650  2E52               	goto	u6221
  5517  0651  2E53               	goto	u6220
  5518  0652                     u6221:
  5519  0652  2E54               	goto	l514
  5520  0653                     u6220:
  5521  0653  2E3F               	goto	l3672
  5522  0654                     l514:
  5523  0654  17A2               	bsf	__div_to_l_@f1+2,7
  5524  0655                     l3682:
  5525  0655  30FF               	movlw	255
  5526  0656  05A0               	andwf	__div_to_l_@f1,f
  5527  0657  30FF               	movlw	255
  5528  0658  05A1               	andwf	__div_to_l_@f1+1,f
  5529  0659  30FF               	movlw	255
  5530  065A  05A2               	andwf	__div_to_l_@f1+2,f
  5531  065B  3000               	movlw	0
  5532  065C  05A3               	andwf	__div_to_l_@f1+3,f
  5533  065D                     l3684:
  5534  065D  17A6               	bsf	__div_to_l_@f2+2,7
  5535  065E  30FF               	movlw	255
  5536  065F  05A4               	andwf	__div_to_l_@f2,f
  5537  0660  30FF               	movlw	255
  5538  0661  05A5               	andwf	__div_to_l_@f2+1,f
  5539  0662  30FF               	movlw	255
  5540  0663  05A6               	andwf	__div_to_l_@f2+2,f
  5541  0664  3000               	movlw	0
  5542  0665  05A7               	andwf	__div_to_l_@f2+3,f
  5543  0666  3000               	movlw	0
  5544  0667  00AB               	movwf	__div_to_l_@quot+3
  5545  0668  3000               	movlw	0
  5546  0669  00AA               	movwf	__div_to_l_@quot+2
  5547  066A  3000               	movlw	0
  5548  066B  00A9               	movwf	__div_to_l_@quot+1
  5549  066C  3000               	movlw	0
  5550  066D  00A8               	movwf	__div_to_l_@quot
  5551  066E                     l3686:
  5552  066E  307F               	movlw	127
  5553  066F  02AD               	subwf	__div_to_l_@exp1,f
  5554  0670                     l3688:
  5555  0670  30A0               	movlw	160
  5556  0671  072C               	addwf	__div_to_l_@cntr,w
  5557  0672  00F3               	movwf	??__div_to_l_
  5558  0673  0873               	movf	??__div_to_l_,w
  5559  0674  02AD               	subwf	__div_to_l_@exp1,f
  5560  0675  3020               	movlw	32
  5561  0676  00F3               	movwf	??__div_to_l_
  5562  0677  0873               	movf	??__div_to_l_,w
  5563  0678  00AC               	movwf	__div_to_l_@cntr
  5564  0679                     l3690:
  5565  0679  3001               	movlw	1
  5566  067A  00F3               	movwf	??__div_to_l_
  5567  067B                     u6235:
  5568  067B  1003               	clrc
  5569  067C  0DA8               	rlf	__div_to_l_@quot,f
  5570  067D  0DA9               	rlf	__div_to_l_@quot+1,f
  5571  067E  0DAA               	rlf	__div_to_l_@quot+2,f
  5572  067F  0DAB               	rlf	__div_to_l_@quot+3,f
  5573  0680  0BF3               	decfsz	??__div_to_l_,f
  5574  0681  2E7B               	goto	u6235
  5575  0682                     l3692:
  5576  0682  0827               	movf	__div_to_l_@f2+3,w
  5577  0683  0223               	subwf	__div_to_l_@f1+3,w
  5578  0684  1D03               	skipz
  5579  0685  2E90               	goto	u6245
  5580  0686  0826               	movf	__div_to_l_@f2+2,w
  5581  0687  0222               	subwf	__div_to_l_@f1+2,w
  5582  0688  1D03               	skipz
  5583  0689  2E90               	goto	u6245
  5584  068A  0825               	movf	__div_to_l_@f2+1,w
  5585  068B  0221               	subwf	__div_to_l_@f1+1,w
  5586  068C  1D03               	skipz
  5587  068D  2E90               	goto	u6245
  5588  068E  0824               	movf	__div_to_l_@f2,w
  5589  068F  0220               	subwf	__div_to_l_@f1,w
  5590  0690                     u6245:
  5591  0690  1C03               	skipc
  5592  0691  2E93               	goto	u6241
  5593  0692  2E94               	goto	u6240
  5594  0693                     u6241:
  5595  0693  2EA3               	goto	l3698
  5596  0694                     u6240:
  5597  0694                     l3694:
  5598  0694  0824               	movf	__div_to_l_@f2,w
  5599  0695  02A0               	subwf	__div_to_l_@f1,f
  5600  0696  0825               	movf	__div_to_l_@f2+1,w
  5601  0697  1C03               	skipc
  5602  0698  0F25               	incfsz	__div_to_l_@f2+1,w
  5603  0699  02A1               	subwf	__div_to_l_@f1+1,f
  5604  069A  0826               	movf	__div_to_l_@f2+2,w
  5605  069B  1C03               	skipc
  5606  069C  0F26               	incfsz	__div_to_l_@f2+2,w
  5607  069D  02A2               	subwf	__div_to_l_@f1+2,f
  5608  069E  0827               	movf	__div_to_l_@f2+3,w
  5609  069F  1C03               	skipc
  5610  06A0  0F27               	incfsz	__div_to_l_@f2+3,w
  5611  06A1  02A3               	subwf	__div_to_l_@f1+3,f
  5612  06A2                     l3696:
  5613  06A2  1428               	bsf	__div_to_l_@quot,0
  5614  06A3                     l3698:
  5615  06A3  3001               	movlw	1
  5616  06A4  00F3               	movwf	??__div_to_l_
  5617  06A5                     u6255:
  5618  06A5  1003               	clrc
  5619  06A6  0DA0               	rlf	__div_to_l_@f1,f
  5620  06A7  0DA1               	rlf	__div_to_l_@f1+1,f
  5621  06A8  0DA2               	rlf	__div_to_l_@f1+2,f
  5622  06A9  0DA3               	rlf	__div_to_l_@f1+3,f
  5623  06AA  0BF3               	decfsz	??__div_to_l_,f
  5624  06AB  2EA5               	goto	u6255
  5625  06AC                     l3700:
  5626  06AC  3001               	movlw	1
  5627  06AD  02AC               	subwf	__div_to_l_@cntr,f
  5628  06AE  1D03               	btfss	3,2
  5629  06AF  2EB1               	goto	u6261
  5630  06B0  2EB2               	goto	u6260
  5631  06B1                     u6261:
  5632  06B1  2E79               	goto	l3690
  5633  06B2                     u6260:
  5634  06B2                     l517:
  5635  06B2  1FAD               	btfss	__div_to_l_@exp1,7
  5636  06B3  2EB5               	goto	u6271
  5637  06B4  2EB6               	goto	u6270
  5638  06B5                     u6271:
  5639  06B5  2ED0               	goto	l3710
  5640  06B6                     u6270:
  5641  06B6                     l3702:
  5642  06B6  082D               	movf	__div_to_l_@exp1,w
  5643  06B7  3A80               	xorlw	128
  5644  06B8  3E9F               	addlw	159
  5645  06B9  1803               	skipnc
  5646  06BA  2EBC               	goto	u6281
  5647  06BB  2EBD               	goto	u6280
  5648  06BC                     u6281:
  5649  06BC  2EBE               	goto	l3708
  5650  06BD                     u6280:
  5651  06BD  2E3F               	goto	l3672
  5652  06BE                     l3708:
  5653  06BE  3001               	movlw	1
  5654  06BF                     u6295:
  5655  06BF  1003               	clrc
  5656  06C0  0CAB               	rrf	__div_to_l_@quot+3,f
  5657  06C1  0CAA               	rrf	__div_to_l_@quot+2,f
  5658  06C2  0CA9               	rrf	__div_to_l_@quot+1,f
  5659  06C3  0CA8               	rrf	__div_to_l_@quot,f
  5660  06C4  3EFF               	addlw	-1
  5661  06C5  1D03               	skipz
  5662  06C6  2EBF               	goto	u6295
  5663  06C7  3001               	movlw	1
  5664  06C8  00F3               	movwf	??__div_to_l_
  5665  06C9  0873               	movf	??__div_to_l_,w
  5666  06CA  07AD               	addwf	__div_to_l_@exp1,f
  5667  06CB  1D03               	btfss	3,2
  5668  06CC  2ECE               	goto	u6301
  5669  06CD  2ECF               	goto	u6300
  5670  06CE                     u6301:
  5671  06CE  2EBE               	goto	l3708
  5672  06CF                     u6300:
  5673  06CF  2EE7               	goto	l3718
  5674  06D0                     l3710:
  5675  06D0  3020               	movlw	32
  5676  06D1  022D               	subwf	__div_to_l_@exp1,w
  5677  06D2  1C03               	skipc
  5678  06D3  2ED5               	goto	u6311
  5679  06D4  2ED6               	goto	u6310
  5680  06D5                     u6311:
  5681  06D5  2EE2               	goto	l524
  5682  06D6                     u6310:
  5683  06D6  2E3F               	goto	l3672
  5684  06D7                     l3716:
  5685  06D7  3001               	movlw	1
  5686  06D8  00F3               	movwf	??__div_to_l_
  5687  06D9                     u6325:
  5688  06D9  1003               	clrc
  5689  06DA  0DA8               	rlf	__div_to_l_@quot,f
  5690  06DB  0DA9               	rlf	__div_to_l_@quot+1,f
  5691  06DC  0DAA               	rlf	__div_to_l_@quot+2,f
  5692  06DD  0DAB               	rlf	__div_to_l_@quot+3,f
  5693  06DE  0BF3               	decfsz	??__div_to_l_,f
  5694  06DF  2ED9               	goto	u6325
  5695  06E0  3001               	movlw	1
  5696  06E1  02AD               	subwf	__div_to_l_@exp1,f
  5697  06E2                     l524:
  5698  06E2  082D               	movf	__div_to_l_@exp1,w
  5699  06E3  1D03               	btfss	3,2
  5700  06E4  2EE6               	goto	u6331
  5701  06E5  2EE7               	goto	u6330
  5702  06E6                     u6331:
  5703  06E6  2ED7               	goto	l3716
  5704  06E7                     u6330:
  5705  06E7                     l3718:
  5706  06E7  082B               	movf	__div_to_l_@quot+3,w
  5707  06E8  00A3               	movwf	?__div_to_l_+3
  5708  06E9  082A               	movf	__div_to_l_@quot+2,w
  5709  06EA  00A2               	movwf	?__div_to_l_+2
  5710  06EB  0829               	movf	__div_to_l_@quot+1,w
  5711  06EC  00A1               	movwf	?__div_to_l_+1
  5712  06ED  0828               	movf	__div_to_l_@quot,w
  5713  06EE  00A0               	movwf	?__div_to_l_
  5714  06EF                     l513:
  5715  06EF  0008               	return
  5716  06F0                     __end_of__div_to_l_:
  5717                           
  5718                           	psect	text13
  5719  1C42                     __ptext13:	
  5720 ;; *************** function ___wmul *****************
  5721 ;; Defined at:
  5722 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  multiplier      2    3[COMMON] unsigned int 
  5725 ;;  multiplicand    2    5[COMMON] unsigned int 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  product         2    7[COMMON] unsigned int 
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  2    3[COMMON] unsigned int 
  5730 ;; Registers used:
  5731 ;;		wreg, status,2, status,0
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5737 ;;      Params:         4       0       0       0       0
  5738 ;;      Locals:         2       0       0       0       0
  5739 ;;      Temps:          0       0       0       0       0
  5740 ;;      Totals:         6       0       0       0       0
  5741 ;;Total ram usage:        6 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; Hardware stack levels required when called:    1
  5744 ;; This function calls:
  5745 ;;		Nothing
  5746 ;; This function is called by:
  5747 ;;		_sprintf
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           
  5752                           ;psect for function ___wmul
  5753  1C42                     ___wmul:
  5754  1C42                     l2850:	
  5755                           ;incstack = 0
  5756                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5757                           
  5758  1C42  01F7               	clrf	___wmul@product
  5759  1C43  01F8               	clrf	___wmul@product+1
  5760  1C44                     l2852:
  5761  1C44  1C73               	btfss	___wmul@multiplier,0
  5762  1C45  2C47               	goto	u4561
  5763  1C46  2C48               	goto	u4560
  5764  1C47                     u4561:
  5765  1C47  2C4E               	goto	l343
  5766  1C48                     u4560:
  5767  1C48                     l2854:
  5768  1C48  0875               	movf	___wmul@multiplicand,w
  5769  1C49  07F7               	addwf	___wmul@product,f
  5770  1C4A  1803               	skipnc
  5771  1C4B  0AF8               	incf	___wmul@product+1,f
  5772  1C4C  0876               	movf	___wmul@multiplicand+1,w
  5773  1C4D  07F8               	addwf	___wmul@product+1,f
  5774  1C4E                     l343:
  5775  1C4E  3001               	movlw	1
  5776  1C4F                     u4575:
  5777  1C4F  1003               	clrc
  5778  1C50  0DF5               	rlf	___wmul@multiplicand,f
  5779  1C51  0DF6               	rlf	___wmul@multiplicand+1,f
  5780  1C52  3EFF               	addlw	-1
  5781  1C53  1D03               	skipz
  5782  1C54  2C4F               	goto	u4575
  5783  1C55                     l2856:
  5784  1C55  3001               	movlw	1
  5785  1C56                     u4585:
  5786  1C56  1003               	clrc
  5787  1C57  0CF4               	rrf	___wmul@multiplier+1,f
  5788  1C58  0CF3               	rrf	___wmul@multiplier,f
  5789  1C59  3EFF               	addlw	-1
  5790  1C5A  1D03               	skipz
  5791  1C5B  2C56               	goto	u4585
  5792  1C5C                     l2858:
  5793  1C5C  0873               	movf	___wmul@multiplier,w
  5794  1C5D  0474               	iorwf	___wmul@multiplier+1,w
  5795  1C5E  1D03               	btfss	3,2
  5796  1C5F  2C61               	goto	u4591
  5797  1C60  2C62               	goto	u4590
  5798  1C61                     u4591:
  5799  1C61  2C44               	goto	l2852
  5800  1C62                     u4590:
  5801  1C62                     l2860:
  5802  1C62  0878               	movf	___wmul@product+1,w
  5803  1C63  00F4               	movwf	?___wmul+1
  5804  1C64  0877               	movf	___wmul@product,w
  5805  1C65  00F3               	movwf	?___wmul
  5806  1C66                     l345:
  5807  1C66  0008               	return
  5808  1C67                     __end_of___wmul:
  5809                           
  5810                           	psect	text14
  5811  1D6A                     __ptext14:	
  5812 ;; *************** function ___llmod *****************
  5813 ;; Defined at:
  5814 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  divisor         4    0[BANK0 ] unsigned long 
  5817 ;;  dividend        4    4[BANK0 ] unsigned long 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  counter         1    4[COMMON] unsigned char 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  4    0[BANK0 ] unsigned long 
  5822 ;; Registers used:
  5823 ;;		wreg, status,2, status,0
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5829 ;;      Params:         0       8       0       0       0
  5830 ;;      Locals:         1       0       0       0       0
  5831 ;;      Temps:          1       0       0       0       0
  5832 ;;      Totals:         2       8       0       0       0
  5833 ;;Total ram usage:       10 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:    1
  5836 ;; This function calls:
  5837 ;;		Nothing
  5838 ;; This function is called by:
  5839 ;;		_sprintf
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           
  5844                           ;psect for function ___llmod
  5845  1D6A                     ___llmod:
  5846  1D6A                     l3778:	
  5847                           ;incstack = 0
  5848                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5849                           
  5850  1D6A  1283               	bcf	3,5	;RP0=0, select bank0
  5851  1D6B  1303               	bcf	3,6	;RP1=0, select bank0
  5852  1D6C  0823               	movf	___llmod@divisor+3,w
  5853  1D6D  0422               	iorwf	___llmod@divisor+2,w
  5854  1D6E  0421               	iorwf	___llmod@divisor+1,w
  5855  1D6F  0420               	iorwf	___llmod@divisor,w
  5856  1D70  1903               	skipnz
  5857  1D71  2D73               	goto	u6511
  5858  1D72  2D74               	goto	u6510
  5859  1D73                     u6511:
  5860  1D73  2DB7               	goto	l3794
  5861  1D74                     u6510:
  5862  1D74                     l3780:
  5863  1D74  01F4               	clrf	___llmod@counter
  5864  1D75  0AF4               	incf	___llmod@counter,f
  5865  1D76  2D84               	goto	l3784
  5866  1D77                     l3782:
  5867  1D77  3001               	movlw	1
  5868  1D78  00F3               	movwf	??___llmod
  5869  1D79                     u6525:
  5870  1D79  1003               	clrc
  5871  1D7A  0DA0               	rlf	___llmod@divisor,f
  5872  1D7B  0DA1               	rlf	___llmod@divisor+1,f
  5873  1D7C  0DA2               	rlf	___llmod@divisor+2,f
  5874  1D7D  0DA3               	rlf	___llmod@divisor+3,f
  5875  1D7E  0BF3               	decfsz	??___llmod,f
  5876  1D7F  2D79               	goto	u6525
  5877  1D80  3001               	movlw	1
  5878  1D81  00F3               	movwf	??___llmod
  5879  1D82  0873               	movf	??___llmod,w
  5880  1D83  07F4               	addwf	___llmod@counter,f
  5881  1D84                     l3784:
  5882  1D84  1FA3               	btfss	___llmod@divisor+3,7
  5883  1D85  2D87               	goto	u6531
  5884  1D86  2D88               	goto	u6530
  5885  1D87                     u6531:
  5886  1D87  2D77               	goto	l3782
  5887  1D88                     u6530:
  5888  1D88                     l3786:
  5889  1D88  0823               	movf	___llmod@divisor+3,w
  5890  1D89  0227               	subwf	___llmod@dividend+3,w
  5891  1D8A  1D03               	skipz
  5892  1D8B  2D96               	goto	u6545
  5893  1D8C  0822               	movf	___llmod@divisor+2,w
  5894  1D8D  0226               	subwf	___llmod@dividend+2,w
  5895  1D8E  1D03               	skipz
  5896  1D8F  2D96               	goto	u6545
  5897  1D90  0821               	movf	___llmod@divisor+1,w
  5898  1D91  0225               	subwf	___llmod@dividend+1,w
  5899  1D92  1D03               	skipz
  5900  1D93  2D96               	goto	u6545
  5901  1D94  0820               	movf	___llmod@divisor,w
  5902  1D95  0224               	subwf	___llmod@dividend,w
  5903  1D96                     u6545:
  5904  1D96  1C03               	skipc
  5905  1D97  2D99               	goto	u6541
  5906  1D98  2D9A               	goto	u6540
  5907  1D99                     u6541:
  5908  1D99  2DA8               	goto	l3790
  5909  1D9A                     u6540:
  5910  1D9A                     l3788:
  5911  1D9A  0820               	movf	___llmod@divisor,w
  5912  1D9B  02A4               	subwf	___llmod@dividend,f
  5913  1D9C  0821               	movf	___llmod@divisor+1,w
  5914  1D9D  1C03               	skipc
  5915  1D9E  0F21               	incfsz	___llmod@divisor+1,w
  5916  1D9F  02A5               	subwf	___llmod@dividend+1,f
  5917  1DA0  0822               	movf	___llmod@divisor+2,w
  5918  1DA1  1C03               	skipc
  5919  1DA2  0F22               	incfsz	___llmod@divisor+2,w
  5920  1DA3  02A6               	subwf	___llmod@dividend+2,f
  5921  1DA4  0823               	movf	___llmod@divisor+3,w
  5922  1DA5  1C03               	skipc
  5923  1DA6  0F23               	incfsz	___llmod@divisor+3,w
  5924  1DA7  02A7               	subwf	___llmod@dividend+3,f
  5925  1DA8                     l3790:
  5926  1DA8  3001               	movlw	1
  5927  1DA9                     u6555:
  5928  1DA9  1003               	clrc
  5929  1DAA  0CA3               	rrf	___llmod@divisor+3,f
  5930  1DAB  0CA2               	rrf	___llmod@divisor+2,f
  5931  1DAC  0CA1               	rrf	___llmod@divisor+1,f
  5932  1DAD  0CA0               	rrf	___llmod@divisor,f
  5933  1DAE  3EFF               	addlw	-1
  5934  1DAF  1D03               	skipz
  5935  1DB0  2DA9               	goto	u6555
  5936  1DB1                     l3792:
  5937  1DB1  3001               	movlw	1
  5938  1DB2  02F4               	subwf	___llmod@counter,f
  5939  1DB3  1D03               	btfss	3,2
  5940  1DB4  2DB6               	goto	u6561
  5941  1DB5  2DB7               	goto	u6560
  5942  1DB6                     u6561:
  5943  1DB6  2D88               	goto	l3786
  5944  1DB7                     u6560:
  5945  1DB7                     l3794:
  5946  1DB7  0827               	movf	___llmod@dividend+3,w
  5947  1DB8  00A3               	movwf	?___llmod+3
  5948  1DB9  0826               	movf	___llmod@dividend+2,w
  5949  1DBA  00A2               	movwf	?___llmod+2
  5950  1DBB  0825               	movf	___llmod@dividend+1,w
  5951  1DBC  00A1               	movwf	?___llmod+1
  5952  1DBD  0824               	movf	___llmod@dividend,w
  5953  1DBE  00A0               	movwf	?___llmod
  5954  1DBF                     l599:
  5955  1DBF  0008               	return
  5956  1DC0                     __end_of___llmod:
  5957                           
  5958                           	psect	text15
  5959  1E1B                     __ptext15:	
  5960 ;; *************** function ___lldiv *****************
  5961 ;; Defined at:
  5962 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  divisor         4    0[BANK0 ] unsigned long 
  5965 ;;  dividend        4    4[BANK0 ] unsigned long 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  quotient        4    4[COMMON] unsigned long 
  5968 ;;  counter         1    8[COMMON] unsigned char 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  4    0[BANK0 ] unsigned long 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5978 ;;      Params:         0       8       0       0       0
  5979 ;;      Locals:         5       0       0       0       0
  5980 ;;      Temps:          1       0       0       0       0
  5981 ;;      Totals:         6       8       0       0       0
  5982 ;;Total ram usage:       14 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    1
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_sprintf
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           
  5993                           ;psect for function ___lldiv
  5994  1E1B                     ___lldiv:
  5995  1E1B                     l3722:	
  5996                           ;incstack = 0
  5997                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5998                           
  5999  1E1B  3000               	movlw	0
  6000  1E1C  00F7               	movwf	___lldiv@quotient+3
  6001  1E1D  3000               	movlw	0
  6002  1E1E  00F6               	movwf	___lldiv@quotient+2
  6003  1E1F  3000               	movlw	0
  6004  1E20  00F5               	movwf	___lldiv@quotient+1
  6005  1E21  3000               	movlw	0
  6006  1E22  00F4               	movwf	___lldiv@quotient
  6007  1E23  1283               	bcf	3,5	;RP0=0, select bank0
  6008  1E24  1303               	bcf	3,6	;RP1=0, select bank0
  6009  1E25  0823               	movf	___lldiv@divisor+3,w
  6010  1E26  0422               	iorwf	___lldiv@divisor+2,w
  6011  1E27  0421               	iorwf	___lldiv@divisor+1,w
  6012  1E28  0420               	iorwf	___lldiv@divisor,w
  6013  1E29  1903               	skipnz
  6014  1E2A  2E2C               	goto	u6341
  6015  1E2B  2E2D               	goto	u6340
  6016  1E2C                     u6341:
  6017  1E2C  2E7A               	goto	l3742
  6018  1E2D                     u6340:
  6019  1E2D                     l3724:
  6020  1E2D  01F8               	clrf	___lldiv@counter
  6021  1E2E  0AF8               	incf	___lldiv@counter,f
  6022  1E2F  2E3D               	goto	l3728
  6023  1E30                     l3726:
  6024  1E30  3001               	movlw	1
  6025  1E31  00F3               	movwf	??___lldiv
  6026  1E32                     u6355:
  6027  1E32  1003               	clrc
  6028  1E33  0DA0               	rlf	___lldiv@divisor,f
  6029  1E34  0DA1               	rlf	___lldiv@divisor+1,f
  6030  1E35  0DA2               	rlf	___lldiv@divisor+2,f
  6031  1E36  0DA3               	rlf	___lldiv@divisor+3,f
  6032  1E37  0BF3               	decfsz	??___lldiv,f
  6033  1E38  2E32               	goto	u6355
  6034  1E39  3001               	movlw	1
  6035  1E3A  00F3               	movwf	??___lldiv
  6036  1E3B  0873               	movf	??___lldiv,w
  6037  1E3C  07F8               	addwf	___lldiv@counter,f
  6038  1E3D                     l3728:
  6039  1E3D  1FA3               	btfss	___lldiv@divisor+3,7
  6040  1E3E  2E40               	goto	u6361
  6041  1E3F  2E41               	goto	u6360
  6042  1E40                     u6361:
  6043  1E40  2E30               	goto	l3726
  6044  1E41                     u6360:
  6045  1E41                     l3730:
  6046  1E41  3001               	movlw	1
  6047  1E42  00F3               	movwf	??___lldiv
  6048  1E43                     u6375:
  6049  1E43  1003               	clrc
  6050  1E44  0DF4               	rlf	___lldiv@quotient,f
  6051  1E45  0DF5               	rlf	___lldiv@quotient+1,f
  6052  1E46  0DF6               	rlf	___lldiv@quotient+2,f
  6053  1E47  0DF7               	rlf	___lldiv@quotient+3,f
  6054  1E48  0BF3               	decfsz	??___lldiv,f
  6055  1E49  2E43               	goto	u6375
  6056  1E4A                     l3732:
  6057  1E4A  0823               	movf	___lldiv@divisor+3,w
  6058  1E4B  0227               	subwf	___lldiv@dividend+3,w
  6059  1E4C  1D03               	skipz
  6060  1E4D  2E58               	goto	u6385
  6061  1E4E  0822               	movf	___lldiv@divisor+2,w
  6062  1E4F  0226               	subwf	___lldiv@dividend+2,w
  6063  1E50  1D03               	skipz
  6064  1E51  2E58               	goto	u6385
  6065  1E52  0821               	movf	___lldiv@divisor+1,w
  6066  1E53  0225               	subwf	___lldiv@dividend+1,w
  6067  1E54  1D03               	skipz
  6068  1E55  2E58               	goto	u6385
  6069  1E56  0820               	movf	___lldiv@divisor,w
  6070  1E57  0224               	subwf	___lldiv@dividend,w
  6071  1E58                     u6385:
  6072  1E58  1C03               	skipc
  6073  1E59  2E5B               	goto	u6381
  6074  1E5A  2E5C               	goto	u6380
  6075  1E5B                     u6381:
  6076  1E5B  2E6B               	goto	l3738
  6077  1E5C                     u6380:
  6078  1E5C                     l3734:
  6079  1E5C  0820               	movf	___lldiv@divisor,w
  6080  1E5D  02A4               	subwf	___lldiv@dividend,f
  6081  1E5E  0821               	movf	___lldiv@divisor+1,w
  6082  1E5F  1C03               	skipc
  6083  1E60  0F21               	incfsz	___lldiv@divisor+1,w
  6084  1E61  02A5               	subwf	___lldiv@dividend+1,f
  6085  1E62  0822               	movf	___lldiv@divisor+2,w
  6086  1E63  1C03               	skipc
  6087  1E64  0F22               	incfsz	___lldiv@divisor+2,w
  6088  1E65  02A6               	subwf	___lldiv@dividend+2,f
  6089  1E66  0823               	movf	___lldiv@divisor+3,w
  6090  1E67  1C03               	skipc
  6091  1E68  0F23               	incfsz	___lldiv@divisor+3,w
  6092  1E69  02A7               	subwf	___lldiv@dividend+3,f
  6093  1E6A                     l3736:
  6094  1E6A  1474               	bsf	___lldiv@quotient,0
  6095  1E6B                     l3738:
  6096  1E6B  3001               	movlw	1
  6097  1E6C                     u6395:
  6098  1E6C  1003               	clrc
  6099  1E6D  0CA3               	rrf	___lldiv@divisor+3,f
  6100  1E6E  0CA2               	rrf	___lldiv@divisor+2,f
  6101  1E6F  0CA1               	rrf	___lldiv@divisor+1,f
  6102  1E70  0CA0               	rrf	___lldiv@divisor,f
  6103  1E71  3EFF               	addlw	-1
  6104  1E72  1D03               	skipz
  6105  1E73  2E6C               	goto	u6395
  6106  1E74                     l3740:
  6107  1E74  3001               	movlw	1
  6108  1E75  02F8               	subwf	___lldiv@counter,f
  6109  1E76  1D03               	btfss	3,2
  6110  1E77  2E79               	goto	u6401
  6111  1E78  2E7A               	goto	u6400
  6112  1E79                     u6401:
  6113  1E79  2E41               	goto	l3730
  6114  1E7A                     u6400:
  6115  1E7A                     l3742:
  6116  1E7A  0877               	movf	___lldiv@quotient+3,w
  6117  1E7B  00A3               	movwf	?___lldiv+3
  6118  1E7C  0876               	movf	___lldiv@quotient+2,w
  6119  1E7D  00A2               	movwf	?___lldiv+2
  6120  1E7E  0875               	movf	___lldiv@quotient+1,w
  6121  1E7F  00A1               	movwf	?___lldiv+1
  6122  1E80  0874               	movf	___lldiv@quotient,w
  6123  1E81  00A0               	movwf	?___lldiv
  6124  1E82                     l379:
  6125  1E82  0008               	return
  6126  1E83                     __end_of___lldiv:
  6127                           
  6128                           	psect	text16
  6129  0804                     __ptext16:	
  6130 ;; *************** function ___fltol *****************
  6131 ;; Defined at:
  6132 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;  f1              4   55[BANK0 ] unsigned long 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  exp1            1   65[BANK0 ] unsigned char 
  6137 ;;  sign1           1   64[BANK0 ] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  4   55[BANK0 ] long 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6147 ;;      Params:         0       4       0       0       0
  6148 ;;      Locals:         0       2       0       0       0
  6149 ;;      Temps:          0       5       0       0       0
  6150 ;;      Totals:         0      11       0       0       0
  6151 ;;Total ram usage:       11 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    1
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_sprintf
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           
  6162                           ;psect for function ___fltol
  6163  0804                     ___fltol:
  6164  0804                     l2928:	
  6165                           ;incstack = 0
  6166                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6167                           
  6168  0804  1003               	clrc
  6169  0805  1283               	bcf	3,5	;RP0=0, select bank0
  6170  0806  1303               	bcf	3,6	;RP1=0, select bank0
  6171  0807  0D59               	rlf	___fltol@f1+2,w
  6172  0808  0D5A               	rlf	___fltol@f1+3,w
  6173  0809  00DB               	movwf	??___fltol
  6174  080A  085B               	movf	??___fltol,w
  6175  080B  00E1               	movwf	___fltol@exp1
  6176  080C  0861               	movf	___fltol@exp1,w
  6177  080D  1D03               	btfss	3,2
  6178  080E  2810               	goto	u4781
  6179  080F  2811               	goto	u4780
  6180  0810                     u4781:
  6181  0810  281A               	goto	l2934
  6182  0811                     u4780:
  6183  0811                     l2930:
  6184  0811  3000               	movlw	0
  6185  0812  00DA               	movwf	?___fltol+3
  6186  0813  3000               	movlw	0
  6187  0814  00D9               	movwf	?___fltol+2
  6188  0815  3000               	movlw	0
  6189  0816  00D8               	movwf	?___fltol+1
  6190  0817  3000               	movlw	0
  6191  0818  00D7               	movwf	?___fltol
  6192  0819  287F               	goto	l546
  6193  081A                     l2934:
  6194  081A  0857               	movf	___fltol@f1,w
  6195  081B  00DB               	movwf	??___fltol
  6196  081C  0858               	movf	___fltol@f1+1,w
  6197  081D  00DC               	movwf	??___fltol+1
  6198  081E  0859               	movf	___fltol@f1+2,w
  6199  081F  00DD               	movwf	??___fltol+2
  6200  0820  085A               	movf	___fltol@f1+3,w
  6201  0821  00DE               	movwf	??___fltol+3
  6202  0822  301F               	movlw	31
  6203  0823                     u4795:
  6204  0823  1003               	clrc
  6205  0824  0CDE               	rrf	??___fltol+3,f
  6206  0825  0CDD               	rrf	??___fltol+2,f
  6207  0826  0CDC               	rrf	??___fltol+1,f
  6208  0827  0CDB               	rrf	??___fltol,f
  6209  0828                     u4790:
  6210  0828  3EFF               	addlw	-1
  6211  0829  1D03               	skipz
  6212  082A  2823               	goto	u4795
  6213  082B  085B               	movf	??___fltol,w
  6214  082C  00DF               	movwf	??___fltol+4
  6215  082D  085F               	movf	??___fltol+4,w
  6216  082E  00E0               	movwf	___fltol@sign1
  6217  082F                     l2936:
  6218  082F  17D9               	bsf	___fltol@f1+2,7
  6219  0830                     l2938:
  6220  0830  30FF               	movlw	255
  6221  0831  05D7               	andwf	___fltol@f1,f
  6222  0832  30FF               	movlw	255
  6223  0833  05D8               	andwf	___fltol@f1+1,f
  6224  0834  30FF               	movlw	255
  6225  0835  05D9               	andwf	___fltol@f1+2,f
  6226  0836  3000               	movlw	0
  6227  0837  05DA               	andwf	___fltol@f1+3,f
  6228  0838                     l2940:
  6229  0838  3096               	movlw	150
  6230  0839  02E1               	subwf	___fltol@exp1,f
  6231  083A                     l2942:
  6232  083A  1FE1               	btfss	___fltol@exp1,7
  6233  083B  283D               	goto	u4801
  6234  083C  283E               	goto	u4800
  6235  083D                     u4801:
  6236  083D  2858               	goto	l2952
  6237  083E                     u4800:
  6238  083E                     l2944:
  6239  083E  0861               	movf	___fltol@exp1,w
  6240  083F  3A80               	xorlw	128
  6241  0840  3E97               	addlw	151
  6242  0841  1803               	skipnc
  6243  0842  2844               	goto	u4811
  6244  0843  2845               	goto	u4810
  6245  0844                     u4811:
  6246  0844  2846               	goto	l2950
  6247  0845                     u4810:
  6248  0845  2811               	goto	l2930
  6249  0846                     l2950:
  6250  0846  3001               	movlw	1
  6251  0847                     u4825:
  6252  0847  1003               	clrc
  6253  0848  0CDA               	rrf	___fltol@f1+3,f
  6254  0849  0CD9               	rrf	___fltol@f1+2,f
  6255  084A  0CD8               	rrf	___fltol@f1+1,f
  6256  084B  0CD7               	rrf	___fltol@f1,f
  6257  084C  3EFF               	addlw	-1
  6258  084D  1D03               	skipz
  6259  084E  2847               	goto	u4825
  6260  084F  3001               	movlw	1
  6261  0850  00DB               	movwf	??___fltol
  6262  0851  085B               	movf	??___fltol,w
  6263  0852  07E1               	addwf	___fltol@exp1,f
  6264  0853  1D03               	btfss	3,2
  6265  0854  2856               	goto	u4831
  6266  0855  2857               	goto	u4830
  6267  0856                     u4831:
  6268  0856  2846               	goto	l2950
  6269  0857                     u4830:
  6270  0857  286F               	goto	l2960
  6271  0858                     l2952:
  6272  0858  3020               	movlw	32
  6273  0859  0261               	subwf	___fltol@exp1,w
  6274  085A  1C03               	skipc
  6275  085B  285D               	goto	u4841
  6276  085C  285E               	goto	u4840
  6277  085D                     u4841:
  6278  085D  286A               	goto	l553
  6279  085E                     u4840:
  6280  085E  2811               	goto	l2930
  6281  085F                     l2958:
  6282  085F  3001               	movlw	1
  6283  0860  00DB               	movwf	??___fltol
  6284  0861                     u4855:
  6285  0861  1003               	clrc
  6286  0862  0DD7               	rlf	___fltol@f1,f
  6287  0863  0DD8               	rlf	___fltol@f1+1,f
  6288  0864  0DD9               	rlf	___fltol@f1+2,f
  6289  0865  0DDA               	rlf	___fltol@f1+3,f
  6290  0866  0BDB               	decfsz	??___fltol,f
  6291  0867  2861               	goto	u4855
  6292  0868  3001               	movlw	1
  6293  0869  02E1               	subwf	___fltol@exp1,f
  6294  086A                     l553:
  6295  086A  0861               	movf	___fltol@exp1,w
  6296  086B  1D03               	btfss	3,2
  6297  086C  286E               	goto	u4861
  6298  086D  286F               	goto	u4860
  6299  086E                     u4861:
  6300  086E  285F               	goto	l2958
  6301  086F                     u4860:
  6302  086F                     l2960:
  6303  086F  0860               	movf	___fltol@sign1,w
  6304  0870  1903               	btfsc	3,2
  6305  0871  2873               	goto	u4871
  6306  0872  2874               	goto	u4870
  6307  0873                     u4871:
  6308  0873  287F               	goto	l556
  6309  0874                     u4870:
  6310  0874                     l2962:
  6311  0874  09D7               	comf	___fltol@f1,f
  6312  0875  09D8               	comf	___fltol@f1+1,f
  6313  0876  09D9               	comf	___fltol@f1+2,f
  6314  0877  09DA               	comf	___fltol@f1+3,f
  6315  0878  0AD7               	incf	___fltol@f1,f
  6316  0879  1903               	skipnz
  6317  087A  0AD8               	incf	___fltol@f1+1,f
  6318  087B  1903               	skipnz
  6319  087C  0AD9               	incf	___fltol@f1+2,f
  6320  087D  1903               	skipnz
  6321  087E  0ADA               	incf	___fltol@f1+3,f
  6322  087F                     l556:
  6323  087F                     l546:
  6324  087F  0008               	return
  6325  0880                     __end_of___fltol:
  6326                           
  6327                           	psect	text17
  6328  07AD                     __ptext17:	
  6329 ;; *************** function ___flsub *****************
  6330 ;; Defined at:
  6331 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  a               4    0[BANK1 ] long 
  6334 ;;  b               4    4[BANK1 ] long 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;		None
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  4    0[BANK1 ] long 
  6339 ;; Registers used:
  6340 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6346 ;;      Params:         0       0       8       0       0
  6347 ;;      Locals:         0       0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0
  6349 ;;      Totals:         0       0       8       0       0
  6350 ;;Total ram usage:        8 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:    2
  6353 ;; This function calls:
  6354 ;;		___fladd
  6355 ;; This function is called by:
  6356 ;;		_sprintf
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           
  6361                           ;psect for function ___flsub
  6362  07AD                     ___flsub:
  6363  07AD                     l2984:	
  6364                           ;incstack = 0
  6365                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6366                           
  6367  07AD  3080               	movlw	128
  6368  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  6369  07AF  1303               	bcf	3,6	;RP1=0, select bank1
  6370  07B0  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6371  07B1                     l2986:
  6372  07B1  0827               	movf	(___flsub@b+3)^(0+128),w
  6373  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  6374  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  6375  07B4  00DB               	movwf	___fladd@b+3
  6376  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  6377  07B6  1303               	bcf	3,6	;RP1=0, select bank1
  6378  07B7  0826               	movf	(___flsub@b+2)^(0+128),w
  6379  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  6380  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  6381  07BA  00DA               	movwf	___fladd@b+2
  6382  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  6383  07BC  1303               	bcf	3,6	;RP1=0, select bank1
  6384  07BD  0825               	movf	(___flsub@b+1)^(0+128),w
  6385  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  6386  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  6387  07C0  00D9               	movwf	___fladd@b+1
  6388  07C1  1683               	bsf	3,5	;RP0=1, select bank1
  6389  07C2  1303               	bcf	3,6	;RP1=0, select bank1
  6390  07C3  0824               	movf	___flsub@b^(0+128),w
  6391  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  6392  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  6393  07C6  00D8               	movwf	___fladd@b
  6394  07C7  1683               	bsf	3,5	;RP0=1, select bank1
  6395  07C8  1303               	bcf	3,6	;RP1=0, select bank1
  6396  07C9  0823               	movf	(___flsub@a+3)^(0+128),w
  6397  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  6398  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  6399  07CC  00DF               	movwf	___fladd@a+3
  6400  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  6401  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  6402  07CF  0822               	movf	(___flsub@a+2)^(0+128),w
  6403  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  6404  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  6405  07D2  00DE               	movwf	___fladd@a+2
  6406  07D3  1683               	bsf	3,5	;RP0=1, select bank1
  6407  07D4  1303               	bcf	3,6	;RP1=0, select bank1
  6408  07D5  0821               	movf	(___flsub@a+1)^(0+128),w
  6409  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  6410  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  6411  07D8  00DD               	movwf	___fladd@a+1
  6412  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  6413  07DA  1303               	bcf	3,6	;RP1=0, select bank1
  6414  07DB  0820               	movf	___flsub@a^(0+128),w
  6415  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  6416  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  6417  07DE  00DC               	movwf	___fladd@a
  6418  07DF  160A  118A  225B  120A  118A  	fcall	___fladd
  6419  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  6420  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  6421  07E6  085B               	movf	?___fladd+3,w
  6422  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  6423  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  6424  07E9  00A3               	movwf	(?___flsub+3)^(0+128)
  6425  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  6426  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  6427  07EC  085A               	movf	?___fladd+2,w
  6428  07ED  1683               	bsf	3,5	;RP0=1, select bank1
  6429  07EE  1303               	bcf	3,6	;RP1=0, select bank1
  6430  07EF  00A2               	movwf	(?___flsub+2)^(0+128)
  6431  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  6432  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  6433  07F2  0859               	movf	?___fladd+1,w
  6434  07F3  1683               	bsf	3,5	;RP0=1, select bank1
  6435  07F4  1303               	bcf	3,6	;RP1=0, select bank1
  6436  07F5  00A1               	movwf	(?___flsub+1)^(0+128)
  6437  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  6438  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  6439  07F8  0858               	movf	?___fladd,w
  6440  07F9  1683               	bsf	3,5	;RP0=1, select bank1
  6441  07FA  1303               	bcf	3,6	;RP1=0, select bank1
  6442  07FB  00A0               	movwf	?___flsub^(0+128)
  6443  07FC                     l716:
  6444  07FC  0008               	return
  6445  07FD                     __end_of___flsub:
  6446                           
  6447                           	psect	text18
  6448  125B                     __ptext18:	
  6449 ;; *************** function ___fladd *****************
  6450 ;; Defined at:
  6451 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  b               4   56[BANK0 ] long 
  6454 ;;  a               4   60[BANK0 ] long 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  grs             1   75[BANK0 ] unsigned char 
  6457 ;;  bexp            1   74[BANK0 ] unsigned char 
  6458 ;;  aexp            1   73[BANK0 ] unsigned char 
  6459 ;;  signs           1   72[BANK0 ] unsigned char 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  4   56[BANK0 ] unsigned char 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2, status,0, btemp+1
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6469 ;;      Params:         0       8       0       0       0
  6470 ;;      Locals:         0       4       0       0       0
  6471 ;;      Temps:          0       8       0       0       0
  6472 ;;      Totals:         0      20       0       0       0
  6473 ;;Total ram usage:       20 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    1
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_sprintf
  6480 ;;		___flsub
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           
  6485                           ;psect for function ___fladd
  6486  125B                     ___fladd:
  6487  125B                     l2338:	
  6488                           ;incstack = 0
  6489                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6490                           
  6491  125B  1283               	bcf	3,5	;RP0=0, select bank0
  6492  125C  1303               	bcf	3,6	;RP1=0, select bank0
  6493  125D  085B               	movf	___fladd@b+3,w
  6494  125E  3980               	andlw	128
  6495  125F  00E0               	movwf	??___fladd
  6496  1260  0860               	movf	??___fladd,w
  6497  1261  00E8               	movwf	___fladd@signs
  6498  1262                     l2340:
  6499  1262  085B               	movf	___fladd@b+3,w
  6500  1263  00E0               	movwf	??___fladd
  6501  1264  0760               	addwf	??___fladd,w
  6502  1265  00E1               	movwf	??___fladd+1
  6503  1266  0861               	movf	??___fladd+1,w
  6504  1267  00EA               	movwf	___fladd@bexp
  6505  1268                     l2342:
  6506  1268  1FDA               	btfss	___fladd@b+2,7
  6507  1269  2A6B               	goto	u3191
  6508  126A  2A6C               	goto	u3190
  6509  126B                     u3191:
  6510  126B  2A6D               	goto	l2346
  6511  126C                     u3190:
  6512  126C                     l2344:
  6513  126C  146A               	bsf	___fladd@bexp,0
  6514  126D                     l2346:
  6515  126D  086A               	movf	___fladd@bexp,w
  6516  126E  1903               	btfsc	3,2
  6517  126F  2A71               	goto	u3201
  6518  1270  2A72               	goto	u3200
  6519  1271                     u3201:
  6520  1271  2A82               	goto	l2356
  6521  1272                     u3200:
  6522  1272                     l2348:
  6523  1272  0A6A               	incf	___fladd@bexp,w
  6524  1273  1D03               	btfss	3,2
  6525  1274  2A76               	goto	u3211
  6526  1275  2A77               	goto	u3210
  6527  1276                     u3211:
  6528  1276  2A7F               	goto	l2352
  6529  1277                     u3210:
  6530  1277                     l2350:
  6531  1277  3000               	movlw	0
  6532  1278  00DB               	movwf	___fladd@b+3
  6533  1279  3000               	movlw	0
  6534  127A  00DA               	movwf	___fladd@b+2
  6535  127B  3000               	movlw	0
  6536  127C  00D9               	movwf	___fladd@b+1
  6537  127D  3000               	movlw	0
  6538  127E  00D8               	movwf	___fladd@b
  6539  127F                     l2352:
  6540  127F  17DA               	bsf	___fladd@b+2,7
  6541  1280                     l2354:
  6542  1280  01DB               	clrf	___fladd@b+3
  6543  1281  2A8A               	goto	l2358
  6544  1282                     l2356:
  6545  1282  3000               	movlw	0
  6546  1283  00DB               	movwf	___fladd@b+3
  6547  1284  3000               	movlw	0
  6548  1285  00DA               	movwf	___fladd@b+2
  6549  1286  3000               	movlw	0
  6550  1287  00D9               	movwf	___fladd@b+1
  6551  1288  3000               	movlw	0
  6552  1289  00D8               	movwf	___fladd@b
  6553  128A                     l2358:
  6554  128A  085F               	movf	___fladd@a+3,w
  6555  128B  3980               	andlw	128
  6556  128C  00E0               	movwf	??___fladd
  6557  128D  0860               	movf	??___fladd,w
  6558  128E  00E9               	movwf	___fladd@aexp
  6559  128F                     l2360:
  6560  128F  0869               	movf	___fladd@aexp,w
  6561  1290  0668               	xorwf	___fladd@signs,w
  6562  1291  1903               	skipnz
  6563  1292  2A94               	goto	u3221
  6564  1293  2A95               	goto	u3220
  6565  1294                     u3221:
  6566  1294  2A96               	goto	l2364
  6567  1295                     u3220:
  6568  1295                     l2362:
  6569  1295  1768               	bsf	___fladd@signs,6
  6570  1296                     l2364:
  6571  1296  085F               	movf	___fladd@a+3,w
  6572  1297  00E0               	movwf	??___fladd
  6573  1298  0760               	addwf	??___fladd,w
  6574  1299  00E1               	movwf	??___fladd+1
  6575  129A  0861               	movf	??___fladd+1,w
  6576  129B  00E9               	movwf	___fladd@aexp
  6577  129C                     l2366:
  6578  129C  1FDE               	btfss	___fladd@a+2,7
  6579  129D  2A9F               	goto	u3231
  6580  129E  2AA0               	goto	u3230
  6581  129F                     u3231:
  6582  129F  2AA1               	goto	l2370
  6583  12A0                     u3230:
  6584  12A0                     l2368:
  6585  12A0  1469               	bsf	___fladd@aexp,0
  6586  12A1                     l2370:
  6587  12A1  0869               	movf	___fladd@aexp,w
  6588  12A2  1903               	btfsc	3,2
  6589  12A3  2AA5               	goto	u3241
  6590  12A4  2AA6               	goto	u3240
  6591  12A5                     u3241:
  6592  12A5  2AB6               	goto	l2380
  6593  12A6                     u3240:
  6594  12A6                     l2372:
  6595  12A6  0A69               	incf	___fladd@aexp,w
  6596  12A7  1D03               	btfss	3,2
  6597  12A8  2AAA               	goto	u3251
  6598  12A9  2AAB               	goto	u3250
  6599  12AA                     u3251:
  6600  12AA  2AB3               	goto	l2376
  6601  12AB                     u3250:
  6602  12AB                     l2374:
  6603  12AB  3000               	movlw	0
  6604  12AC  00DF               	movwf	___fladd@a+3
  6605  12AD  3000               	movlw	0
  6606  12AE  00DE               	movwf	___fladd@a+2
  6607  12AF  3000               	movlw	0
  6608  12B0  00DD               	movwf	___fladd@a+1
  6609  12B1  3000               	movlw	0
  6610  12B2  00DC               	movwf	___fladd@a
  6611  12B3                     l2376:
  6612  12B3  17DE               	bsf	___fladd@a+2,7
  6613  12B4                     l2378:
  6614  12B4  01DF               	clrf	___fladd@a+3
  6615  12B5  2ABE               	goto	l670
  6616  12B6                     l2380:
  6617  12B6  3000               	movlw	0
  6618  12B7  00DF               	movwf	___fladd@a+3
  6619  12B8  3000               	movlw	0
  6620  12B9  00DE               	movwf	___fladd@a+2
  6621  12BA  3000               	movlw	0
  6622  12BB  00DD               	movwf	___fladd@a+1
  6623  12BC  3000               	movlw	0
  6624  12BD  00DC               	movwf	___fladd@a
  6625  12BE                     l670:
  6626  12BE  086A               	movf	___fladd@bexp,w
  6627  12BF  0269               	subwf	___fladd@aexp,w
  6628  12C0  1803               	skipnc
  6629  12C1  2AC3               	goto	u3261
  6630  12C2  2AC4               	goto	u3260
  6631  12C3                     u3261:
  6632  12C3  2B08               	goto	l2416
  6633  12C4                     u3260:
  6634  12C4                     l2382:
  6635  12C4  1F68               	btfss	___fladd@signs,6
  6636  12C5  2AC7               	goto	u3271
  6637  12C6  2AC8               	goto	u3270
  6638  12C7                     u3271:
  6639  12C7  2ACC               	goto	l2386
  6640  12C8                     u3270:
  6641  12C8                     l2384:
  6642  12C8  3080               	movlw	128
  6643  12C9  00E0               	movwf	??___fladd
  6644  12CA  0860               	movf	??___fladd,w
  6645  12CB  06E8               	xorwf	___fladd@signs,f
  6646  12CC                     l2386:
  6647  12CC  086A               	movf	___fladd@bexp,w
  6648  12CD  00E0               	movwf	??___fladd
  6649  12CE  0860               	movf	??___fladd,w
  6650  12CF  00EB               	movwf	___fladd@grs
  6651  12D0                     l2388:
  6652  12D0  0869               	movf	___fladd@aexp,w
  6653  12D1  00E0               	movwf	??___fladd
  6654  12D2  0860               	movf	??___fladd,w
  6655  12D3  00EA               	movwf	___fladd@bexp
  6656  12D4                     l2390:
  6657  12D4  086B               	movf	___fladd@grs,w
  6658  12D5  00E0               	movwf	??___fladd
  6659  12D6  0860               	movf	??___fladd,w
  6660  12D7  00E9               	movwf	___fladd@aexp
  6661  12D8                     l2392:
  6662  12D8  0858               	movf	___fladd@b,w
  6663  12D9  00E0               	movwf	??___fladd
  6664  12DA  0860               	movf	??___fladd,w
  6665  12DB  00EB               	movwf	___fladd@grs
  6666  12DC                     l2394:
  6667  12DC  085C               	movf	___fladd@a,w
  6668  12DD  00E0               	movwf	??___fladd
  6669  12DE  0860               	movf	??___fladd,w
  6670  12DF  00D8               	movwf	___fladd@b
  6671  12E0                     l2396:
  6672  12E0  086B               	movf	___fladd@grs,w
  6673  12E1  00E0               	movwf	??___fladd
  6674  12E2  0860               	movf	??___fladd,w
  6675  12E3  00DC               	movwf	___fladd@a
  6676  12E4                     l2398:
  6677  12E4  0859               	movf	___fladd@b+1,w
  6678  12E5  00E0               	movwf	??___fladd
  6679  12E6  0860               	movf	??___fladd,w
  6680  12E7  00EB               	movwf	___fladd@grs
  6681  12E8                     l2400:
  6682  12E8  085D               	movf	___fladd@a+1,w
  6683  12E9  00E0               	movwf	??___fladd
  6684  12EA  0860               	movf	??___fladd,w
  6685  12EB  00D9               	movwf	___fladd@b+1
  6686  12EC                     l2402:
  6687  12EC  086B               	movf	___fladd@grs,w
  6688  12ED  00E0               	movwf	??___fladd
  6689  12EE  0860               	movf	??___fladd,w
  6690  12EF  00DD               	movwf	___fladd@a+1
  6691  12F0                     l2404:
  6692  12F0  085A               	movf	___fladd@b+2,w
  6693  12F1  00E0               	movwf	??___fladd
  6694  12F2  0860               	movf	??___fladd,w
  6695  12F3  00EB               	movwf	___fladd@grs
  6696  12F4                     l2406:
  6697  12F4  085E               	movf	___fladd@a+2,w
  6698  12F5  00E0               	movwf	??___fladd
  6699  12F6  0860               	movf	??___fladd,w
  6700  12F7  00DA               	movwf	___fladd@b+2
  6701  12F8                     l2408:
  6702  12F8  086B               	movf	___fladd@grs,w
  6703  12F9  00E0               	movwf	??___fladd
  6704  12FA  0860               	movf	??___fladd,w
  6705  12FB  00DE               	movwf	___fladd@a+2
  6706  12FC                     l2410:
  6707  12FC  085B               	movf	___fladd@b+3,w
  6708  12FD  00E0               	movwf	??___fladd
  6709  12FE  0860               	movf	??___fladd,w
  6710  12FF  00EB               	movwf	___fladd@grs
  6711  1300                     l2412:
  6712  1300  085F               	movf	___fladd@a+3,w
  6713  1301  00E0               	movwf	??___fladd
  6714  1302  0860               	movf	??___fladd,w
  6715  1303  00DB               	movwf	___fladd@b+3
  6716  1304                     l2414:
  6717  1304  086B               	movf	___fladd@grs,w
  6718  1305  00E0               	movwf	??___fladd
  6719  1306  0860               	movf	??___fladd,w
  6720  1307  00DF               	movwf	___fladd@a+3
  6721  1308                     l2416:
  6722  1308  01EB               	clrf	___fladd@grs
  6723  1309                     l2418:
  6724  1309  0869               	movf	___fladd@aexp,w
  6725  130A  00E0               	movwf	??___fladd
  6726  130B  01E1               	clrf	??___fladd+1
  6727  130C  0861               	movf	??___fladd+1,w
  6728  130D  00E3               	movwf	??___fladd+3
  6729  130E  086A               	movf	___fladd@bexp,w
  6730  130F  0260               	subwf	??___fladd,w
  6731  1310  00E2               	movwf	??___fladd+2
  6732  1311  1C03               	skipc
  6733  1312  03E3               	decf	??___fladd+3,f
  6734  1313  0863               	movf	??___fladd+3,w
  6735  1314  3A80               	xorlw	128
  6736  1315  00FF               	movwf	btemp+1
  6737  1316  3080               	movlw	128
  6738  1317  027F               	subwf	btemp+1,w
  6739  1318  1D03               	skipz
  6740  1319  2B1C               	goto	u3285
  6741  131A  301A               	movlw	26
  6742  131B  0262               	subwf	??___fladd+2,w
  6743  131C                     u3285:
  6744  131C  1C03               	skipc
  6745  131D  2B1F               	goto	u3281
  6746  131E  2B20               	goto	u3280
  6747  131F                     u3281:
  6748  131F  2B5D               	goto	l2434
  6749  1320                     u3280:
  6750  1320                     l2420:
  6751  1320  1283               	bcf	3,5	;RP0=0, select bank0
  6752  1321  1303               	bcf	3,6	;RP1=0, select bank0
  6753  1322  085B               	movf	___fladd@b+3,w
  6754  1323  045A               	iorwf	___fladd@b+2,w
  6755  1324  0459               	iorwf	___fladd@b+1,w
  6756  1325  0458               	iorwf	___fladd@b,w
  6757  1326  1D03               	skipz
  6758  1327  2B29               	goto	u3291
  6759  1328  2B2B               	goto	u3290
  6760  1329                     u3291:
  6761  1329  3001               	movlw	1
  6762  132A  2B2C               	goto	u3300
  6763  132B                     u3290:
  6764  132B  3000               	movlw	0
  6765  132C                     u3300:
  6766  132C  00E0               	movwf	??___fladd
  6767  132D  0860               	movf	??___fladd,w
  6768  132E  00EB               	movwf	___fladd@grs
  6769  132F  3000               	movlw	0
  6770  1330  00DB               	movwf	___fladd@b+3
  6771  1331  3000               	movlw	0
  6772  1332  00DA               	movwf	___fladd@b+2
  6773  1333  3000               	movlw	0
  6774  1334  00D9               	movwf	___fladd@b+1
  6775  1335  3000               	movlw	0
  6776  1336  00D8               	movwf	___fladd@b
  6777  1337  0869               	movf	___fladd@aexp,w
  6778  1338  00E0               	movwf	??___fladd
  6779  1339  0860               	movf	??___fladd,w
  6780  133A  00EA               	movwf	___fladd@bexp
  6781  133B  2B65               	goto	l674
  6782  133C                     l676:
  6783  133C  1C6B               	btfss	___fladd@grs,0
  6784  133D  2B3F               	goto	u3311
  6785  133E  2B40               	goto	u3310
  6786  133F                     u3311:
  6787  133F  2B49               	goto	l2424
  6788  1340                     u3310:
  6789  1340                     l2422:
  6790  1340  086B               	movf	___fladd@grs,w
  6791  1341  00E0               	movwf	??___fladd
  6792  1342  1003               	clrc
  6793  1343  0C60               	rrf	??___fladd,w
  6794  1344  3801               	iorlw	1
  6795  1345  00E1               	movwf	??___fladd+1
  6796  1346  0861               	movf	??___fladd+1,w
  6797  1347  00EB               	movwf	___fladd@grs
  6798  1348  2B4B               	goto	l2426
  6799  1349                     l2424:
  6800  1349  1003               	clrc
  6801  134A  0CEB               	rrf	___fladd@grs,f
  6802  134B                     l2426:
  6803  134B  1C58               	btfss	___fladd@b,0
  6804  134C  2B4E               	goto	u3321
  6805  134D  2B4F               	goto	u3320
  6806  134E                     u3321:
  6807  134E  2B50               	goto	l2430
  6808  134F                     u3320:
  6809  134F                     l2428:
  6810  134F  17EB               	bsf	___fladd@grs,7
  6811  1350                     l2430:
  6812  1350  3001               	movlw	1
  6813  1351  00E0               	movwf	??___fladd
  6814  1352                     u3335:
  6815  1352  0D5B               	rlf	___fladd@b+3,w
  6816  1353  0CDB               	rrf	___fladd@b+3,f
  6817  1354  0CDA               	rrf	___fladd@b+2,f
  6818  1355  0CD9               	rrf	___fladd@b+1,f
  6819  1356  0CD8               	rrf	___fladd@b,f
  6820  1357  0BE0               	decfsz	??___fladd& (0+127),f
  6821  1358  2B52               	goto	u3335
  6822  1359                     l2432:
  6823  1359  3001               	movlw	1
  6824  135A  00E0               	movwf	??___fladd
  6825  135B  0860               	movf	??___fladd,w
  6826  135C  07EA               	addwf	___fladd@bexp,f
  6827  135D                     l2434:
  6828  135D  1283               	bcf	3,5	;RP0=0, select bank0
  6829  135E  1303               	bcf	3,6	;RP1=0, select bank0
  6830  135F  0869               	movf	___fladd@aexp,w
  6831  1360  026A               	subwf	___fladd@bexp,w
  6832  1361  1C03               	skipc
  6833  1362  2B64               	goto	u3341
  6834  1363  2B65               	goto	u3340
  6835  1364                     u3341:
  6836  1364  2B3C               	goto	l676
  6837  1365                     u3340:
  6838  1365                     l674:
  6839  1365  1B68               	btfsc	___fladd@signs,6
  6840  1366  2B68               	goto	u3351
  6841  1367  2B69               	goto	u3350
  6842  1368                     u3351:
  6843  1368  2BB4               	goto	l2460
  6844  1369                     u3350:
  6845  1369                     l2436:
  6846  1369  086A               	movf	___fladd@bexp,w
  6847  136A  1D03               	btfss	3,2
  6848  136B  2B6D               	goto	u3361
  6849  136C  2B6E               	goto	u3360
  6850  136D                     u3361:
  6851  136D  2B77               	goto	l2442
  6852  136E                     u3360:
  6853  136E                     l2438:
  6854  136E  3000               	movlw	0
  6855  136F  00DB               	movwf	?___fladd+3
  6856  1370  3000               	movlw	0
  6857  1371  00DA               	movwf	?___fladd+2
  6858  1372  3000               	movlw	0
  6859  1373  00D9               	movwf	?___fladd+1
  6860  1374  3000               	movlw	0
  6861  1375  00D8               	movwf	?___fladd
  6862  1376  2CE2               	goto	l683
  6863  1377                     l2442:
  6864  1377  085C               	movf	___fladd@a,w
  6865  1378  07D8               	addwf	___fladd@b,f
  6866  1379  085D               	movf	___fladd@a+1,w
  6867  137A  1103               	clrz
  6868  137B  1803               	skipnc
  6869  137C  3E01               	addlw	1
  6870  137D  1903               	skipnz
  6871  137E  2B80               	goto	u3371
  6872  137F  07D9               	addwf	___fladd@b+1,f
  6873  1380                     u3371:
  6874  1380  085E               	movf	___fladd@a+2,w
  6875  1381  1103               	clrz
  6876  1382  1803               	skipnc
  6877  1383  3E01               	addlw	1
  6878  1384  1903               	skipnz
  6879  1385  2B87               	goto	u3372
  6880  1386  07DA               	addwf	___fladd@b+2,f
  6881  1387                     u3372:
  6882  1387  085F               	movf	___fladd@a+3,w
  6883  1388  1103               	clrz
  6884  1389  1803               	skipnc
  6885  138A  3E01               	addlw	1
  6886  138B  1903               	skipnz
  6887  138C  2B8E               	goto	u3373
  6888  138D  07DB               	addwf	___fladd@b+3,f
  6889  138E                     u3373:
  6890  138E                     l2444:
  6891  138E  1C5B               	btfss	___fladd@b+3,0
  6892  138F  2B91               	goto	u3381
  6893  1390  2B92               	goto	u3380
  6894  1391                     u3381:
  6895  1391  2C68               	goto	l2494
  6896  1392                     u3380:
  6897  1392                     l2446:
  6898  1392  1C6B               	btfss	___fladd@grs,0
  6899  1393  2B95               	goto	u3391
  6900  1394  2B96               	goto	u3390
  6901  1395                     u3391:
  6902  1395  2B9F               	goto	l2450
  6903  1396                     u3390:
  6904  1396                     l2448:
  6905  1396  086B               	movf	___fladd@grs,w
  6906  1397  00E0               	movwf	??___fladd
  6907  1398  1003               	clrc
  6908  1399  0C60               	rrf	??___fladd,w
  6909  139A  3801               	iorlw	1
  6910  139B  00E1               	movwf	??___fladd+1
  6911  139C  0861               	movf	??___fladd+1,w
  6912  139D  00EB               	movwf	___fladd@grs
  6913  139E  2BA1               	goto	l2452
  6914  139F                     l2450:
  6915  139F  1003               	clrc
  6916  13A0  0CEB               	rrf	___fladd@grs,f
  6917  13A1                     l2452:
  6918  13A1  1C58               	btfss	___fladd@b,0
  6919  13A2  2BA4               	goto	u3401
  6920  13A3  2BA5               	goto	u3400
  6921  13A4                     u3401:
  6922  13A4  2BA6               	goto	l2456
  6923  13A5                     u3400:
  6924  13A5                     l2454:
  6925  13A5  17EB               	bsf	___fladd@grs,7
  6926  13A6                     l2456:
  6927  13A6  3001               	movlw	1
  6928  13A7  00E0               	movwf	??___fladd
  6929  13A8                     u3415:
  6930  13A8  0D5B               	rlf	___fladd@b+3,w
  6931  13A9  0CDB               	rrf	___fladd@b+3,f
  6932  13AA  0CDA               	rrf	___fladd@b+2,f
  6933  13AB  0CD9               	rrf	___fladd@b+1,f
  6934  13AC  0CD8               	rrf	___fladd@b,f
  6935  13AD  0BE0               	decfsz	??___fladd& (0+127),f
  6936  13AE  2BA8               	goto	u3415
  6937  13AF                     l2458:
  6938  13AF  3001               	movlw	1
  6939  13B0  00E0               	movwf	??___fladd
  6940  13B1  0860               	movf	??___fladd,w
  6941  13B2  07EA               	addwf	___fladd@bexp,f
  6942  13B3  2C68               	goto	l2494
  6943  13B4                     l2460:
  6944  13B4  085B               	movf	___fladd@b+3,w
  6945  13B5  3A80               	xorlw	128
  6946  13B6  00FF               	movwf	btemp+1
  6947  13B7  085F               	movf	___fladd@a+3,w
  6948  13B8  3A80               	xorlw	128
  6949  13B9  027F               	subwf	btemp+1,w
  6950  13BA  1D03               	skipz
  6951  13BB  2BC6               	goto	u3423
  6952  13BC  085E               	movf	___fladd@a+2,w
  6953  13BD  025A               	subwf	___fladd@b+2,w
  6954  13BE  1D03               	skipz
  6955  13BF  2BC6               	goto	u3423
  6956  13C0  085D               	movf	___fladd@a+1,w
  6957  13C1  0259               	subwf	___fladd@b+1,w
  6958  13C2  1D03               	skipz
  6959  13C3  2BC6               	goto	u3423
  6960  13C4  085C               	movf	___fladd@a,w
  6961  13C5  0258               	subwf	___fladd@b,w
  6962  13C6                     u3423:
  6963  13C6  1803               	skipnc
  6964  13C7  2BC9               	goto	u3421
  6965  13C8  2BCA               	goto	u3420
  6966  13C9                     u3421:
  6967  13C9  2C22               	goto	l2470
  6968  13CA                     u3420:
  6969  13CA                     l2462:
  6970  13CA  30FF               	movlw	255
  6971  13CB  00E0               	movwf	??___fladd
  6972  13CC  30FF               	movlw	255
  6973  13CD  00E1               	movwf	??___fladd+1
  6974  13CE  30FF               	movlw	255
  6975  13CF  00E2               	movwf	??___fladd+2
  6976  13D0  30FF               	movlw	255
  6977  13D1  00E3               	movwf	??___fladd+3
  6978  13D2  085C               	movf	___fladd@a,w
  6979  13D3  00E4               	movwf	??___fladd+4
  6980  13D4  085D               	movf	___fladd@a+1,w
  6981  13D5  00E5               	movwf	??___fladd+5
  6982  13D6  085E               	movf	___fladd@a+2,w
  6983  13D7  00E6               	movwf	??___fladd+6
  6984  13D8  085F               	movf	___fladd@a+3,w
  6985  13D9  00E7               	movwf	??___fladd+7
  6986  13DA  0858               	movf	___fladd@b,w
  6987  13DB  02E4               	subwf	??___fladd+4,f
  6988  13DC  0859               	movf	___fladd@b+1,w
  6989  13DD  1C03               	skipc
  6990  13DE  0F59               	incfsz	___fladd@b+1,w
  6991  13DF  2BE1               	goto	u3431
  6992  13E0  2BE2               	goto	u3432
  6993  13E1                     u3431:
  6994  13E1  02E5               	subwf	??___fladd+5,f
  6995  13E2                     u3432:
  6996  13E2  085A               	movf	___fladd@b+2,w
  6997  13E3  1C03               	skipc
  6998  13E4  0F5A               	incfsz	___fladd@b+2,w
  6999  13E5  2BE7               	goto	u3433
  7000  13E6  2BE8               	goto	u3434
  7001  13E7                     u3433:
  7002  13E7  02E6               	subwf	??___fladd+6,f
  7003  13E8                     u3434:
  7004  13E8  085B               	movf	___fladd@b+3,w
  7005  13E9  1C03               	skipc
  7006  13EA  0F5B               	incfsz	___fladd@b+3,w
  7007  13EB  2BED               	goto	u3435
  7008  13EC  2BEE               	goto	u3436
  7009  13ED                     u3435:
  7010  13ED  02E7               	subwf	??___fladd+7,f
  7011  13EE                     u3436:
  7012  13EE  0864               	movf	??___fladd+4,w
  7013  13EF  07E0               	addwf	??___fladd,f
  7014  13F0  0865               	movf	??___fladd+5,w
  7015  13F1  1803               	skipnc
  7016  13F2  0F65               	incfsz	??___fladd+5,w
  7017  13F3  2BF5               	goto	u3440
  7018  13F4  2BF6               	goto	u3441
  7019  13F5                     u3440:
  7020  13F5  07E1               	addwf	??___fladd+1,f
  7021  13F6                     u3441:
  7022  13F6  0866               	movf	??___fladd+6,w
  7023  13F7  1803               	skipnc
  7024  13F8  0F66               	incfsz	??___fladd+6,w
  7025  13F9  2BFB               	goto	u3442
  7026  13FA  2BFC               	goto	u3443
  7027  13FB                     u3442:
  7028  13FB  07E2               	addwf	??___fladd+2,f
  7029  13FC                     u3443:
  7030  13FC  0867               	movf	??___fladd+7,w
  7031  13FD  1803               	skipnc
  7032  13FE  0A67               	incf	??___fladd+7,w
  7033  13FF  07E3               	addwf	??___fladd+3,f
  7034  1400  0863               	movf	??___fladd+3,w
  7035  1401  00DB               	movwf	___fladd@b+3
  7036  1402  0862               	movf	??___fladd+2,w
  7037  1403  00DA               	movwf	___fladd@b+2
  7038  1404  0861               	movf	??___fladd+1,w
  7039  1405  00D9               	movwf	___fladd@b+1
  7040  1406  0860               	movf	??___fladd,w
  7041  1407  00D8               	movwf	___fladd@b
  7042  1408                     l2464:
  7043  1408  3080               	movlw	128
  7044  1409  00E0               	movwf	??___fladd
  7045  140A  0860               	movf	??___fladd,w
  7046  140B  06E8               	xorwf	___fladd@signs,f
  7047  140C  09EB               	comf	___fladd@grs,f
  7048  140D  0AEB               	incf	___fladd@grs,f
  7049  140E                     l2466:
  7050  140E  086B               	movf	___fladd@grs,w
  7051  140F  1D03               	btfss	3,2
  7052  1410  2C12               	goto	u3451
  7053  1411  2C13               	goto	u3450
  7054  1412                     u3451:
  7055  1412  2C30               	goto	l691
  7056  1413                     u3450:
  7057  1413                     l2468:
  7058  1413  3001               	movlw	1
  7059  1414  07D8               	addwf	___fladd@b,f
  7060  1415  3000               	movlw	0
  7061  1416  1803               	skipnc
  7062  1417  3001               	movlw	1
  7063  1418  07D9               	addwf	___fladd@b+1,f
  7064  1419  3000               	movlw	0
  7065  141A  1803               	skipnc
  7066  141B  3001               	movlw	1
  7067  141C  07DA               	addwf	___fladd@b+2,f
  7068  141D  3000               	movlw	0
  7069  141E  1803               	skipnc
  7070  141F  3001               	movlw	1
  7071  1420  07DB               	addwf	___fladd@b+3,f
  7072  1421  2C30               	goto	l691
  7073  1422                     l2470:
  7074  1422  085C               	movf	___fladd@a,w
  7075  1423  02D8               	subwf	___fladd@b,f
  7076  1424  085D               	movf	___fladd@a+1,w
  7077  1425  1C03               	skipc
  7078  1426  0F5D               	incfsz	___fladd@a+1,w
  7079  1427  02D9               	subwf	___fladd@b+1,f
  7080  1428  085E               	movf	___fladd@a+2,w
  7081  1429  1C03               	skipc
  7082  142A  0F5E               	incfsz	___fladd@a+2,w
  7083  142B  02DA               	subwf	___fladd@b+2,f
  7084  142C  085F               	movf	___fladd@a+3,w
  7085  142D  1C03               	skipc
  7086  142E  0F5F               	incfsz	___fladd@a+3,w
  7087  142F  02DB               	subwf	___fladd@b+3,f
  7088  1430                     l691:
  7089  1430  085B               	movf	___fladd@b+3,w
  7090  1431  045A               	iorwf	___fladd@b+2,w
  7091  1432  0459               	iorwf	___fladd@b+1,w
  7092  1433  0458               	iorwf	___fladd@b,w
  7093  1434  1D03               	skipz
  7094  1435  2C37               	goto	u3461
  7095  1436  2C38               	goto	u3460
  7096  1437                     u3461:
  7097  1437  2C64               	goto	l2492
  7098  1438                     u3460:
  7099  1438                     l2472:
  7100  1438  086B               	movf	___fladd@grs,w
  7101  1439  1D03               	btfss	3,2
  7102  143A  2C3C               	goto	u3471
  7103  143B  2C3D               	goto	u3470
  7104  143C                     u3471:
  7105  143C  2C64               	goto	l2492
  7106  143D                     u3470:
  7107  143D                     l2474:
  7108  143D  3000               	movlw	0
  7109  143E  00DB               	movwf	?___fladd+3
  7110  143F  3000               	movlw	0
  7111  1440  00DA               	movwf	?___fladd+2
  7112  1441  3000               	movlw	0
  7113  1442  00D9               	movwf	?___fladd+1
  7114  1443  3000               	movlw	0
  7115  1444  00D8               	movwf	?___fladd
  7116  1445  2CE2               	goto	l683
  7117  1446                     l2478:
  7118  1446  3001               	movlw	1
  7119  1447  00E0               	movwf	??___fladd
  7120  1448                     u3485:
  7121  1448  1003               	clrc
  7122  1449  0DD8               	rlf	___fladd@b,f
  7123  144A  0DD9               	rlf	___fladd@b+1,f
  7124  144B  0DDA               	rlf	___fladd@b+2,f
  7125  144C  0DDB               	rlf	___fladd@b+3,f
  7126  144D  0BE0               	decfsz	??___fladd,f
  7127  144E  2C48               	goto	u3485
  7128  144F                     l2480:
  7129  144F  1FEB               	btfss	___fladd@grs,7
  7130  1450  2C52               	goto	u3491
  7131  1451  2C53               	goto	u3490
  7132  1452                     u3491:
  7133  1452  2C54               	goto	l695
  7134  1453                     u3490:
  7135  1453                     l2482:
  7136  1453  1458               	bsf	___fladd@b,0
  7137  1454                     l695:
  7138  1454  1C6B               	btfss	___fladd@grs,0
  7139  1455  2C57               	goto	u3501
  7140  1456  2C58               	goto	u3500
  7141  1457                     u3501:
  7142  1457  2C5B               	goto	l2486
  7143  1458                     u3500:
  7144  1458                     l2484:
  7145  1458  1403               	setc
  7146  1459  0DEB               	rlf	___fladd@grs,f
  7147  145A  2C5D               	goto	l2488
  7148  145B                     l2486:
  7149  145B  1003               	clrc
  7150  145C  0DEB               	rlf	___fladd@grs,f
  7151  145D                     l2488:
  7152  145D  086A               	movf	___fladd@bexp,w
  7153  145E  1903               	btfsc	3,2
  7154  145F  2C61               	goto	u3511
  7155  1460  2C62               	goto	u3510
  7156  1461                     u3511:
  7157  1461  2C64               	goto	l2492
  7158  1462                     u3510:
  7159  1462                     l2490:
  7160  1462  3001               	movlw	1
  7161  1463  02EA               	subwf	___fladd@bexp,f
  7162  1464                     l2492:
  7163  1464  1FDA               	btfss	___fladd@b+2,7
  7164  1465  2C67               	goto	u3521
  7165  1466  2C68               	goto	u3520
  7166  1467                     u3521:
  7167  1467  2C46               	goto	l2478
  7168  1468                     u3520:
  7169  1468                     l2494:
  7170  1468  01E9               	clrf	___fladd@aexp
  7171  1469                     l2496:
  7172  1469  1FEB               	btfss	___fladd@grs,7
  7173  146A  2C6C               	goto	u3531
  7174  146B  2C6D               	goto	u3530
  7175  146C                     u3531:
  7176  146C  2C7B               	goto	l2504
  7177  146D                     u3530:
  7178  146D                     l2498:
  7179  146D  086B               	movf	___fladd@grs,w
  7180  146E  397F               	andlw	127
  7181  146F  1903               	btfsc	3,2
  7182  1470  2C72               	goto	u3541
  7183  1471  2C73               	goto	u3540
  7184  1472                     u3541:
  7185  1472  2C76               	goto	l701
  7186  1473                     u3540:
  7187  1473                     l2500:
  7188  1473  01E9               	clrf	___fladd@aexp
  7189  1474  0AE9               	incf	___fladd@aexp,f
  7190  1475  2C7B               	goto	l2504
  7191  1476                     l701:
  7192  1476  1C58               	btfss	___fladd@b,0
  7193  1477  2C79               	goto	u3551
  7194  1478  2C7A               	goto	u3550
  7195  1479                     u3551:
  7196  1479  2C7B               	goto	l2504
  7197  147A                     u3550:
  7198  147A  2C73               	goto	l2500
  7199  147B                     l2504:
  7200  147B  0869               	movf	___fladd@aexp,w
  7201  147C  1903               	btfsc	3,2
  7202  147D  2C7F               	goto	u3561
  7203  147E  2C80               	goto	u3560
  7204  147F                     u3561:
  7205  147F  2CB4               	goto	l704
  7206  1480                     u3560:
  7207  1480                     l2506:
  7208  1480  3001               	movlw	1
  7209  1481  07D8               	addwf	___fladd@b,f
  7210  1482  3000               	movlw	0
  7211  1483  1803               	skipnc
  7212  1484  3001               	movlw	1
  7213  1485  07D9               	addwf	___fladd@b+1,f
  7214  1486  3000               	movlw	0
  7215  1487  1803               	skipnc
  7216  1488  3001               	movlw	1
  7217  1489  07DA               	addwf	___fladd@b+2,f
  7218  148A  3000               	movlw	0
  7219  148B  1803               	skipnc
  7220  148C  3001               	movlw	1
  7221  148D  07DB               	addwf	___fladd@b+3,f
  7222  148E                     l2508:
  7223  148E  1C5B               	btfss	___fladd@b+3,0
  7224  148F  2C91               	goto	u3571
  7225  1490  2C92               	goto	u3570
  7226  1491                     u3571:
  7227  1491  2CB4               	goto	l704
  7228  1492                     u3570:
  7229  1492                     l2510:
  7230  1492  0858               	movf	___fladd@b,w
  7231  1493  00E0               	movwf	??___fladd
  7232  1494  0859               	movf	___fladd@b+1,w
  7233  1495  00E1               	movwf	??___fladd+1
  7234  1496  085A               	movf	___fladd@b+2,w
  7235  1497  00E2               	movwf	??___fladd+2
  7236  1498  085B               	movf	___fladd@b+3,w
  7237  1499  00E3               	movwf	??___fladd+3
  7238  149A  3001               	movlw	1
  7239  149B  00E4               	movwf	??___fladd+4
  7240  149C                     u3585:
  7241  149C  0D63               	rlf	??___fladd+3,w
  7242  149D  0CE3               	rrf	??___fladd+3,f
  7243  149E  0CE2               	rrf	??___fladd+2,f
  7244  149F  0CE1               	rrf	??___fladd+1,f
  7245  14A0  0CE0               	rrf	??___fladd,f
  7246  14A1                     u3580:
  7247  14A1  0BE4               	decfsz	??___fladd+4,f
  7248  14A2  2C9C               	goto	u3585
  7249  14A3  0863               	movf	??___fladd+3,w
  7250  14A4  00DB               	movwf	___fladd@b+3
  7251  14A5  0862               	movf	??___fladd+2,w
  7252  14A6  00DA               	movwf	___fladd@b+2
  7253  14A7  0861               	movf	??___fladd+1,w
  7254  14A8  00D9               	movwf	___fladd@b+1
  7255  14A9  0860               	movf	??___fladd,w
  7256  14AA  00D8               	movwf	___fladd@b
  7257  14AB  0A6A               	incf	___fladd@bexp,w
  7258  14AC  1903               	btfsc	3,2
  7259  14AD  2CAF               	goto	u3591
  7260  14AE  2CB0               	goto	u3590
  7261  14AF                     u3591:
  7262  14AF  2CB4               	goto	l704
  7263  14B0                     u3590:
  7264  14B0                     l2512:
  7265  14B0  3001               	movlw	1
  7266  14B1  00E0               	movwf	??___fladd
  7267  14B2  0860               	movf	??___fladd,w
  7268  14B3  07EA               	addwf	___fladd@bexp,f
  7269  14B4                     l704:
  7270  14B4  0A6A               	incf	___fladd@bexp,w
  7271  14B5  1903               	btfsc	3,2
  7272  14B6  2CB8               	goto	u3601
  7273  14B7  2CB9               	goto	u3600
  7274  14B8                     u3601:
  7275  14B8  2CBE               	goto	l2516
  7276  14B9                     u3600:
  7277  14B9                     l2514:
  7278  14B9  086A               	movf	___fladd@bexp,w
  7279  14BA  1D03               	btfss	3,2
  7280  14BB  2CBD               	goto	u3611
  7281  14BC  2CBE               	goto	u3610
  7282  14BD                     u3611:
  7283  14BD  2CCC               	goto	l2522
  7284  14BE                     u3610:
  7285  14BE                     l2516:
  7286  14BE  3000               	movlw	0
  7287  14BF  00DB               	movwf	___fladd@b+3
  7288  14C0  3000               	movlw	0
  7289  14C1  00DA               	movwf	___fladd@b+2
  7290  14C2  3000               	movlw	0
  7291  14C3  00D9               	movwf	___fladd@b+1
  7292  14C4  3000               	movlw	0
  7293  14C5  00D8               	movwf	___fladd@b
  7294  14C6                     l2518:
  7295  14C6  086A               	movf	___fladd@bexp,w
  7296  14C7  1D03               	btfss	3,2
  7297  14C8  2CCA               	goto	u3621
  7298  14C9  2CCB               	goto	u3620
  7299  14CA                     u3621:
  7300  14CA  2CCC               	goto	l2522
  7301  14CB                     u3620:
  7302  14CB                     l2520:
  7303  14CB  01E8               	clrf	___fladd@signs
  7304  14CC                     l2522:
  7305  14CC  1C6A               	btfss	___fladd@bexp,0
  7306  14CD  2CCF               	goto	u3631
  7307  14CE  2CD0               	goto	u3630
  7308  14CF                     u3631:
  7309  14CF  2CD2               	goto	l2526
  7310  14D0                     u3630:
  7311  14D0                     l2524:
  7312  14D0  17DA               	bsf	___fladd@b+2,7
  7313  14D1  2CD6               	goto	l712
  7314  14D2                     l2526:
  7315  14D2  307F               	movlw	127
  7316  14D3  00E0               	movwf	??___fladd
  7317  14D4  0860               	movf	??___fladd,w
  7318  14D5  05DA               	andwf	___fladd@b+2,f
  7319  14D6                     l712:
  7320  14D6  086A               	movf	___fladd@bexp,w
  7321  14D7  00E0               	movwf	??___fladd
  7322  14D8  1003               	clrc
  7323  14D9  0C60               	rrf	??___fladd,w
  7324  14DA  00E1               	movwf	??___fladd+1
  7325  14DB  0861               	movf	??___fladd+1,w
  7326  14DC  00DB               	movwf	___fladd@b+3
  7327  14DD                     l2528:
  7328  14DD  1FE8               	btfss	___fladd@signs,7
  7329  14DE  2CE0               	goto	u3641
  7330  14DF  2CE1               	goto	u3640
  7331  14E0                     u3641:
  7332  14E0  2CE2               	goto	l713
  7333  14E1                     u3640:
  7334  14E1                     l2530:
  7335  14E1  17DB               	bsf	___fladd@b+3,7
  7336  14E2                     l713:
  7337  14E2                     l683:
  7338  14E2  0008               	return
  7339  14E3                     __end_of___fladd:
  7340                           
  7341                           	psect	text19
  7342  1BDB                     __ptext19:	
  7343 ;; *************** function ___flneg *****************
  7344 ;; Defined at:
  7345 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;  f1              4    3[COMMON] unsigned char 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  4    3[COMMON] unsigned char 
  7352 ;; Registers used:
  7353 ;;		wreg
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7359 ;;      Params:         4       0       0       0       0
  7360 ;;      Locals:         0       0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0
  7362 ;;      Totals:         4       0       0       0       0
  7363 ;;Total ram usage:        4 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    1
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_sprintf
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function ___flneg
  7375  1BDB                     ___flneg:
  7376  1BDB                     l2920:	
  7377                           ;incstack = 0
  7378                           ; Regs used in ___flneg: [wreg]
  7379                           
  7380  1BDB  0876               	movf	___flneg@f1+3,w
  7381  1BDC  0475               	iorwf	___flneg@f1+2,w
  7382  1BDD  0474               	iorwf	___flneg@f1+1,w
  7383  1BDE  0473               	iorwf	___flneg@f1,w
  7384  1BDF  1903               	skipnz
  7385  1BE0  2BE2               	goto	u4771
  7386  1BE1  2BE3               	goto	u4770
  7387  1BE2                     u4771:
  7388  1BE2  2BE5               	goto	l2924
  7389  1BE3                     u4770:
  7390  1BE3                     l2922:
  7391  1BE3  3080               	movlw	128
  7392  1BE4  06F6               	xorwf	___flneg@f1+3,f
  7393  1BE5                     l2924:
  7394  1BE5                     l542:
  7395  1BE5  0008               	return
  7396  1BE6                     __end_of___flneg:
  7397                           
  7398                           	psect	text20
  7399  1F5C                     __ptext20:	
  7400 ;; *************** function ___flge *****************
  7401 ;; Defined at:
  7402 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  ff1             4    0[BANK0 ] unsigned char 
  7405 ;;  ff2             4    4[BANK0 ] unsigned char 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;		None               void
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7417 ;;      Params:         0       8       0       0       0
  7418 ;;      Locals:         0       0       0       0       0
  7419 ;;      Temps:          4       0       0       0       0
  7420 ;;      Totals:         4       8       0       0       0
  7421 ;;Total ram usage:       12 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    1
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_sprintf
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           
  7432                           ;psect for function ___flge
  7433  1F5C                     ___flge:
  7434  1F5C                     l3758:	
  7435                           ;incstack = 0
  7436                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7437                           
  7438  1F5C  3000               	movlw	0
  7439  1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  7440  1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  7441  1F5F  0520               	andwf	___flge@ff1,w
  7442  1F60  00F3               	movwf	??___flge
  7443  1F61  3000               	movlw	0
  7444  1F62  0521               	andwf	___flge@ff1+1,w
  7445  1F63  00F4               	movwf	??___flge+1
  7446  1F64  3080               	movlw	128
  7447  1F65  0522               	andwf	___flge@ff1+2,w
  7448  1F66  00F5               	movwf	??___flge+2
  7449  1F67  307F               	movlw	127
  7450  1F68  0523               	andwf	___flge@ff1+3,w
  7451  1F69  00F6               	movwf	??___flge+3
  7452  1F6A  0876               	movf	??___flge+3,w
  7453  1F6B  0475               	iorwf	??___flge+2,w
  7454  1F6C  0474               	iorwf	??___flge+1,w
  7455  1F6D  0473               	iorwf	??___flge,w
  7456  1F6E  1D03               	skipz
  7457  1F6F  2F71               	goto	u6441
  7458  1F70  2F72               	goto	u6440
  7459  1F71                     u6441:
  7460  1F71  2F7A               	goto	l534
  7461  1F72                     u6440:
  7462  1F72                     l3760:
  7463  1F72  3000               	movlw	0
  7464  1F73  00A3               	movwf	___flge@ff1+3
  7465  1F74  3000               	movlw	0
  7466  1F75  00A2               	movwf	___flge@ff1+2
  7467  1F76  3000               	movlw	0
  7468  1F77  00A1               	movwf	___flge@ff1+1
  7469  1F78  3000               	movlw	0
  7470  1F79  00A0               	movwf	___flge@ff1
  7471  1F7A                     l534:
  7472  1F7A  3000               	movlw	0
  7473  1F7B  0524               	andwf	___flge@ff2,w
  7474  1F7C  00F3               	movwf	??___flge
  7475  1F7D  3000               	movlw	0
  7476  1F7E  0525               	andwf	___flge@ff2+1,w
  7477  1F7F  00F4               	movwf	??___flge+1
  7478  1F80  3080               	movlw	128
  7479  1F81  0526               	andwf	___flge@ff2+2,w
  7480  1F82  00F5               	movwf	??___flge+2
  7481  1F83  307F               	movlw	127
  7482  1F84  0527               	andwf	___flge@ff2+3,w
  7483  1F85  00F6               	movwf	??___flge+3
  7484  1F86  0876               	movf	??___flge+3,w
  7485  1F87  0475               	iorwf	??___flge+2,w
  7486  1F88  0474               	iorwf	??___flge+1,w
  7487  1F89  0473               	iorwf	??___flge,w
  7488  1F8A  1D03               	skipz
  7489  1F8B  2F8D               	goto	u6451
  7490  1F8C  2F8E               	goto	u6450
  7491  1F8D                     u6451:
  7492  1F8D  2F96               	goto	l3764
  7493  1F8E                     u6450:
  7494  1F8E                     l3762:
  7495  1F8E  3000               	movlw	0
  7496  1F8F  00A7               	movwf	___flge@ff2+3
  7497  1F90  3000               	movlw	0
  7498  1F91  00A6               	movwf	___flge@ff2+2
  7499  1F92  3000               	movlw	0
  7500  1F93  00A5               	movwf	___flge@ff2+1
  7501  1F94  3000               	movlw	0
  7502  1F95  00A4               	movwf	___flge@ff2
  7503  1F96                     l3764:
  7504  1F96  1FA3               	btfss	___flge@ff1+3,7
  7505  1F97  2F99               	goto	u6461
  7506  1F98  2F9A               	goto	u6460
  7507  1F99                     u6461:
  7508  1F99  2FBE               	goto	l3768
  7509  1F9A                     u6460:
  7510  1F9A                     l3766:
  7511  1F9A  3000               	movlw	0
  7512  1F9B  00F3               	movwf	??___flge
  7513  1F9C  3000               	movlw	0
  7514  1F9D  00F4               	movwf	??___flge+1
  7515  1F9E  3000               	movlw	0
  7516  1F9F  00F5               	movwf	??___flge+2
  7517  1FA0  3080               	movlw	128
  7518  1FA1  00F6               	movwf	??___flge+3
  7519  1FA2  0820               	movf	___flge@ff1,w
  7520  1FA3  02F3               	subwf	??___flge,f
  7521  1FA4  0821               	movf	___flge@ff1+1,w
  7522  1FA5  1C03               	skipc
  7523  1FA6  0F21               	incfsz	___flge@ff1+1,w
  7524  1FA7  2FA9               	goto	u6471
  7525  1FA8  2FAA               	goto	u6472
  7526  1FA9                     u6471:
  7527  1FA9  02F4               	subwf	??___flge+1,f
  7528  1FAA                     u6472:
  7529  1FAA  0822               	movf	___flge@ff1+2,w
  7530  1FAB  1C03               	skipc
  7531  1FAC  0F22               	incfsz	___flge@ff1+2,w
  7532  1FAD  2FAF               	goto	u6473
  7533  1FAE  2FB0               	goto	u6474
  7534  1FAF                     u6473:
  7535  1FAF  02F5               	subwf	??___flge+2,f
  7536  1FB0                     u6474:
  7537  1FB0  0823               	movf	___flge@ff1+3,w
  7538  1FB1  1C03               	skipc
  7539  1FB2  0F23               	incfsz	___flge@ff1+3,w
  7540  1FB3  2FB5               	goto	u6475
  7541  1FB4  2FB6               	goto	u6476
  7542  1FB5                     u6475:
  7543  1FB5  02F6               	subwf	??___flge+3,f
  7544  1FB6                     u6476:
  7545  1FB6  0876               	movf	??___flge+3,w
  7546  1FB7  00A3               	movwf	___flge@ff1+3
  7547  1FB8  0875               	movf	??___flge+2,w
  7548  1FB9  00A2               	movwf	___flge@ff1+2
  7549  1FBA  0874               	movf	??___flge+1,w
  7550  1FBB  00A1               	movwf	___flge@ff1+1
  7551  1FBC  0873               	movf	??___flge,w
  7552  1FBD  00A0               	movwf	___flge@ff1
  7553  1FBE                     l3768:
  7554  1FBE  1FA7               	btfss	___flge@ff2+3,7
  7555  1FBF  2FC1               	goto	u6481
  7556  1FC0  2FC2               	goto	u6480
  7557  1FC1                     u6481:
  7558  1FC1  2FE6               	goto	l537
  7559  1FC2                     u6480:
  7560  1FC2                     l3770:
  7561  1FC2  3000               	movlw	0
  7562  1FC3  00F3               	movwf	??___flge
  7563  1FC4  3000               	movlw	0
  7564  1FC5  00F4               	movwf	??___flge+1
  7565  1FC6  3000               	movlw	0
  7566  1FC7  00F5               	movwf	??___flge+2
  7567  1FC8  3080               	movlw	128
  7568  1FC9  00F6               	movwf	??___flge+3
  7569  1FCA  0824               	movf	___flge@ff2,w
  7570  1FCB  02F3               	subwf	??___flge,f
  7571  1FCC  0825               	movf	___flge@ff2+1,w
  7572  1FCD  1C03               	skipc
  7573  1FCE  0F25               	incfsz	___flge@ff2+1,w
  7574  1FCF  2FD1               	goto	u6491
  7575  1FD0  2FD2               	goto	u6492
  7576  1FD1                     u6491:
  7577  1FD1  02F4               	subwf	??___flge+1,f
  7578  1FD2                     u6492:
  7579  1FD2  0826               	movf	___flge@ff2+2,w
  7580  1FD3  1C03               	skipc
  7581  1FD4  0F26               	incfsz	___flge@ff2+2,w
  7582  1FD5  2FD7               	goto	u6493
  7583  1FD6  2FD8               	goto	u6494
  7584  1FD7                     u6493:
  7585  1FD7  02F5               	subwf	??___flge+2,f
  7586  1FD8                     u6494:
  7587  1FD8  0827               	movf	___flge@ff2+3,w
  7588  1FD9  1C03               	skipc
  7589  1FDA  0F27               	incfsz	___flge@ff2+3,w
  7590  1FDB  2FDD               	goto	u6495
  7591  1FDC  2FDE               	goto	u6496
  7592  1FDD                     u6495:
  7593  1FDD  02F6               	subwf	??___flge+3,f
  7594  1FDE                     u6496:
  7595  1FDE  0876               	movf	??___flge+3,w
  7596  1FDF  00A7               	movwf	___flge@ff2+3
  7597  1FE0  0875               	movf	??___flge+2,w
  7598  1FE1  00A6               	movwf	___flge@ff2+2
  7599  1FE2  0874               	movf	??___flge+1,w
  7600  1FE3  00A5               	movwf	___flge@ff2+1
  7601  1FE4  0873               	movf	??___flge,w
  7602  1FE5  00A4               	movwf	___flge@ff2
  7603  1FE6                     l537:
  7604  1FE6  3080               	movlw	128
  7605  1FE7  06A3               	xorwf	___flge@ff1+3,f
  7606  1FE8  3080               	movlw	128
  7607  1FE9  06A7               	xorwf	___flge@ff2+3,f
  7608  1FEA  0827               	movf	___flge@ff2+3,w
  7609  1FEB  0223               	subwf	___flge@ff1+3,w
  7610  1FEC  1D03               	skipz
  7611  1FED  2FF8               	goto	u6505
  7612  1FEE  0826               	movf	___flge@ff2+2,w
  7613  1FEF  0222               	subwf	___flge@ff1+2,w
  7614  1FF0  1D03               	skipz
  7615  1FF1  2FF8               	goto	u6505
  7616  1FF2  0825               	movf	___flge@ff2+1,w
  7617  1FF3  0221               	subwf	___flge@ff1+1,w
  7618  1FF4  1D03               	skipz
  7619  1FF5  2FF8               	goto	u6505
  7620  1FF6  0824               	movf	___flge@ff2,w
  7621  1FF7  0220               	subwf	___flge@ff1,w
  7622  1FF8                     u6505:
  7623  1FF8  1803               	skipnc
  7624  1FF9  2FFB               	goto	u6501
  7625  1FFA  2FFC               	goto	u6500
  7626  1FFB                     u6501:
  7627  1FFB  2FFE               	goto	l3774
  7628  1FFC                     u6500:
  7629  1FFC                     l3772:
  7630  1FFC  1003               	clrc
  7631  1FFD  2FFF               	goto	l538
  7632  1FFE                     l3774:
  7633  1FFE  1403               	setc
  7634  1FFF                     l538:
  7635  1FFF  0008               	return
  7636  2000                     __end_of___flge:
  7637                           
  7638                           	psect	text21
  7639  1D1A                     __ptext21:	
  7640 ;; *************** function ___fleq *****************
  7641 ;; Defined at:
  7642 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;  ff1             4    0[BANK0 ] unsigned char 
  7645 ;;  ff2             4    4[BANK0 ] unsigned char 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;		None               void
  7650 ;; Registers used:
  7651 ;;		wreg, status,2, status,0
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7657 ;;      Params:         0       8       0       0       0
  7658 ;;      Locals:         0       0       0       0       0
  7659 ;;      Temps:          4       0       0       0       0
  7660 ;;      Totals:         4       8       0       0       0
  7661 ;;Total ram usage:       12 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:    1
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_sprintf
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           
  7672                           ;psect for function ___fleq
  7673  1D1A                     ___fleq:
  7674  1D1A                     l3746:	
  7675                           ;incstack = 0
  7676                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7677                           
  7678  1D1A  3000               	movlw	0
  7679  1D1B  1283               	bcf	3,5	;RP0=0, select bank0
  7680  1D1C  1303               	bcf	3,6	;RP1=0, select bank0
  7681  1D1D  0520               	andwf	___fleq@ff1,w
  7682  1D1E  00F3               	movwf	??___fleq
  7683  1D1F  3000               	movlw	0
  7684  1D20  0521               	andwf	___fleq@ff1+1,w
  7685  1D21  00F4               	movwf	??___fleq+1
  7686  1D22  3080               	movlw	128
  7687  1D23  0522               	andwf	___fleq@ff1+2,w
  7688  1D24  00F5               	movwf	??___fleq+2
  7689  1D25  307F               	movlw	127
  7690  1D26  0523               	andwf	___fleq@ff1+3,w
  7691  1D27  00F6               	movwf	??___fleq+3
  7692  1D28  0876               	movf	??___fleq+3,w
  7693  1D29  0475               	iorwf	??___fleq+2,w
  7694  1D2A  0474               	iorwf	??___fleq+1,w
  7695  1D2B  0473               	iorwf	??___fleq,w
  7696  1D2C  1D03               	skipz
  7697  1D2D  2D2F               	goto	u6411
  7698  1D2E  2D30               	goto	u6410
  7699  1D2F                     u6411:
  7700  1D2F  2D38               	goto	l529
  7701  1D30                     u6410:
  7702  1D30                     l3748:
  7703  1D30  3000               	movlw	0
  7704  1D31  00A3               	movwf	___fleq@ff1+3
  7705  1D32  3000               	movlw	0
  7706  1D33  00A2               	movwf	___fleq@ff1+2
  7707  1D34  3000               	movlw	0
  7708  1D35  00A1               	movwf	___fleq@ff1+1
  7709  1D36  3000               	movlw	0
  7710  1D37  00A0               	movwf	___fleq@ff1
  7711  1D38                     l529:
  7712  1D38  3000               	movlw	0
  7713  1D39  0524               	andwf	___fleq@ff2,w
  7714  1D3A  00F3               	movwf	??___fleq
  7715  1D3B  3000               	movlw	0
  7716  1D3C  0525               	andwf	___fleq@ff2+1,w
  7717  1D3D  00F4               	movwf	??___fleq+1
  7718  1D3E  3080               	movlw	128
  7719  1D3F  0526               	andwf	___fleq@ff2+2,w
  7720  1D40  00F5               	movwf	??___fleq+2
  7721  1D41  307F               	movlw	127
  7722  1D42  0527               	andwf	___fleq@ff2+3,w
  7723  1D43  00F6               	movwf	??___fleq+3
  7724  1D44  0876               	movf	??___fleq+3,w
  7725  1D45  0475               	iorwf	??___fleq+2,w
  7726  1D46  0474               	iorwf	??___fleq+1,w
  7727  1D47  0473               	iorwf	??___fleq,w
  7728  1D48  1D03               	skipz
  7729  1D49  2D4B               	goto	u6421
  7730  1D4A  2D4C               	goto	u6420
  7731  1D4B                     u6421:
  7732  1D4B  2D54               	goto	l530
  7733  1D4C                     u6420:
  7734  1D4C                     l3750:
  7735  1D4C  3000               	movlw	0
  7736  1D4D  00A7               	movwf	___fleq@ff2+3
  7737  1D4E  3000               	movlw	0
  7738  1D4F  00A6               	movwf	___fleq@ff2+2
  7739  1D50  3000               	movlw	0
  7740  1D51  00A5               	movwf	___fleq@ff2+1
  7741  1D52  3000               	movlw	0
  7742  1D53  00A4               	movwf	___fleq@ff2
  7743  1D54                     l530:
  7744  1D54  0827               	movf	___fleq@ff2+3,w
  7745  1D55  0623               	xorwf	___fleq@ff1+3,w
  7746  1D56  1D03               	skipz
  7747  1D57  2D62               	goto	u6435
  7748  1D58  0826               	movf	___fleq@ff2+2,w
  7749  1D59  0622               	xorwf	___fleq@ff1+2,w
  7750  1D5A  1D03               	skipz
  7751  1D5B  2D62               	goto	u6435
  7752  1D5C  0825               	movf	___fleq@ff2+1,w
  7753  1D5D  0621               	xorwf	___fleq@ff1+1,w
  7754  1D5E  1D03               	skipz
  7755  1D5F  2D62               	goto	u6435
  7756  1D60  0824               	movf	___fleq@ff2,w
  7757  1D61  0620               	xorwf	___fleq@ff1,w
  7758  1D62                     u6435:
  7759  1D62  1903               	skipnz
  7760  1D63  2D65               	goto	u6431
  7761  1D64  2D66               	goto	u6430
  7762  1D65                     u6431:
  7763  1D65  2D68               	goto	l3754
  7764  1D66                     u6430:
  7765  1D66                     l3752:
  7766  1D66  1003               	clrc
  7767  1D67  2D69               	goto	l531
  7768  1D68                     l3754:
  7769  1D68  1403               	setc
  7770  1D69                     l531:
  7771  1D69  0008               	return
  7772  1D6A                     __end_of___fleq:
  7773                           
  7774                           	psect	text22
  7775  1C21                     __ptext22:	
  7776 ;; *************** function _send_crct *****************
  7777 ;; Defined at:
  7778 ;;		line 167 in file "main5a.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  st              1    wreg     PTR unsigned char 
  7781 ;;		 -> f1(10), 
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;  st              1    7[COMMON] PTR unsigned char 
  7784 ;;		 -> f1(10), 
  7785 ;;  i               2    5[COMMON] int 
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  1    wreg      void 
  7788 ;; Registers used:
  7789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7795 ;;      Params:         0       0       0       0       0
  7796 ;;      Locals:         3       0       0       0       0
  7797 ;;      Temps:          1       0       0       0       0
  7798 ;;      Totals:         4       0       0       0       0
  7799 ;;Total ram usage:        4 bytes
  7800 ;; Hardware stack levels used:    1
  7801 ;; Hardware stack levels required when called:    2
  7802 ;; This function calls:
  7803 ;;		_send_char
  7804 ;; This function is called by:
  7805 ;;		_main
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           
  7810                           ;psect for function _send_crct
  7811  1C21                     _send_crct:
  7812                           
  7813                           ;incstack = 0
  7814                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7815                           ;send_crct@st stored from wreg
  7816  1C21  00F7               	movwf	send_crct@st
  7817  1C22                     l3386:
  7818                           
  7819                           ;main5a.c: 168:     int i = 0;
  7820  1C22  01F5               	clrf	send_crct@i
  7821  1C23  01F6               	clrf	send_crct@i+1
  7822                           
  7823                           ;main5a.c: 169:     while (st[i] != 0){
  7824  1C24  2C36               	goto	l3392
  7825  1C25                     l3388:
  7826                           
  7827                           ;main5a.c: 170:         send_char(st[i]);
  7828  1C25  0875               	movf	send_crct@i,w
  7829  1C26  0777               	addwf	send_crct@st,w
  7830  1C27  00F4               	movwf	??_send_crct
  7831  1C28  0874               	movf	??_send_crct,w
  7832  1C29  0084               	movwf	4
  7833  1C2A  0800               	movf	0,w
  7834  1C2B  160A  158A  23D1  160A  158A  	fcall	_send_char
  7835  1C30                     l3390:
  7836                           
  7837                           ;main5a.c: 171:         i++;
  7838  1C30  3001               	movlw	1
  7839  1C31  07F5               	addwf	send_crct@i,f
  7840  1C32  1803               	skipnc
  7841  1C33  0AF6               	incf	send_crct@i+1,f
  7842  1C34  3000               	movlw	0
  7843  1C35  07F6               	addwf	send_crct@i+1,f
  7844  1C36                     l3392:
  7845                           
  7846                           ;main5a.c: 169:     while (st[i] != 0){
  7847  1C36  0875               	movf	send_crct@i,w
  7848  1C37  0777               	addwf	send_crct@st,w
  7849  1C38  00F4               	movwf	??_send_crct
  7850  1C39  0874               	movf	??_send_crct,w
  7851  1C3A  0084               	movwf	4
  7852  1C3B  1383               	bcf	3,7	;select IRP bank0
  7853  1C3C  0800               	movf	0,w
  7854  1C3D  1D03               	btfss	3,2
  7855  1C3E  2C40               	goto	u5621
  7856  1C3F  2C41               	goto	u5620
  7857  1C40                     u5621:
  7858  1C40  2C25               	goto	l3388
  7859  1C41                     u5620:
  7860  1C41                     l120:
  7861  1C41  0008               	return
  7862  1C42                     __end_of_send_crct:
  7863                           
  7864                           	psect	text23
  7865  1BD1                     __ptext23:	
  7866 ;; *************** function _send_char *****************
  7867 ;; Defined at:
  7868 ;;		line 174 in file "main5a.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;  dato            1    wreg     unsigned char 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;  dato            1    3[COMMON] unsigned char 
  7873 ;; Return value:  Size  Location     Type
  7874 ;;                  1    wreg      void 
  7875 ;; Registers used:
  7876 ;;		wreg
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7882 ;;      Params:         0       0       0       0       0
  7883 ;;      Locals:         1       0       0       0       0
  7884 ;;      Temps:          0       0       0       0       0
  7885 ;;      Totals:         1       0       0       0       0
  7886 ;;Total ram usage:        1 bytes
  7887 ;; Hardware stack levels used:    1
  7888 ;; Hardware stack levels required when called:    1
  7889 ;; This function calls:
  7890 ;;		Nothing
  7891 ;; This function is called by:
  7892 ;;		_send_crct
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           
  7897                           ;psect for function _send_char
  7898  1BD1                     _send_char:
  7899                           
  7900                           ;incstack = 0
  7901                           ; Regs used in _send_char: [wreg]
  7902                           ;send_char@dato stored from wreg
  7903  1BD1  00F3               	movwf	send_char@dato
  7904  1BD2                     l2672:
  7905  1BD2                     l123:	
  7906                           ;main5a.c: 175:     while(!TXIF);
  7907                           
  7908  1BD2  1283               	bcf	3,5	;RP0=0, select bank0
  7909  1BD3  1303               	bcf	3,6	;RP1=0, select bank0
  7910  1BD4  1E0C               	btfss	12,4	;volatile
  7911  1BD5  2BD7               	goto	u4021
  7912  1BD6  2BD8               	goto	u4020
  7913  1BD7                     u4021:
  7914  1BD7  2BD2               	goto	l123
  7915  1BD8                     u4020:
  7916  1BD8                     l2674:
  7917                           
  7918                           ;main5a.c: 176:     TXREG = dato;
  7919  1BD8  0873               	movf	send_char@dato,w
  7920  1BD9  0099               	movwf	25	;volatile
  7921  1BDA                     l126:
  7922  1BDA  0008               	return
  7923  1BDB                     __end_of_send_char:
  7924                           
  7925                           	psect	text24
  7926  1C8E                     __ptext24:	
  7927 ;; *************** function _conv *****************
  7928 ;; Defined at:
  7929 ;;		line 178 in file "main5a.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;  aa              1    wreg     unsigned char 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;  aa              1   22[BANK0 ] unsigned char 
  7934 ;;  result          4   18[BANK0 ] float 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  4   10[BANK0 ] float 
  7937 ;; Registers used:
  7938 ;;		wreg, status,2, status,0, pclath, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7944 ;;      Params:         0       4       0       0       0
  7945 ;;      Locals:         0       5       0       0       0
  7946 ;;      Temps:          0       4       0       0       0
  7947 ;;      Totals:         0      13       0       0       0
  7948 ;;Total ram usage:       13 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    2
  7951 ;; This function calls:
  7952 ;;		___xxtofl
  7953 ;; This function is called by:
  7954 ;;		_main
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           
  7959                           ;psect for function _conv
  7960  1C8E                     _conv:
  7961                           
  7962                           ;incstack = 0
  7963                           ; Regs used in _conv: [wreg+status,2+status,0+pclath+cstack]
  7964                           ;conv@aa stored from wreg
  7965  1C8E  1283               	bcf	3,5	;RP0=0, select bank0
  7966  1C8F  1303               	bcf	3,6	;RP1=0, select bank0
  7967  1C90  00B6               	movwf	conv@aa
  7968  1C91                     l3842:
  7969                           
  7970                           ;main5a.c: 179:     float result;;main5a.c: 180:     result = aa*1;
  7971  1C91  0836               	movf	conv@aa,w
  7972  1C92  00AE               	movwf	??_conv
  7973  1C93  01AF               	clrf	??_conv+1
  7974  1C94  01B0               	clrf	??_conv+2
  7975  1C95  01B1               	clrf	??_conv+3
  7976  1C96  0831               	movf	??_conv+3,w
  7977  1C97  00F6               	movwf	___xxtofl@val+3
  7978  1C98  0830               	movf	??_conv+2,w
  7979  1C99  00F5               	movwf	___xxtofl@val+2
  7980  1C9A  082F               	movf	??_conv+1,w
  7981  1C9B  00F4               	movwf	___xxtofl@val+1
  7982  1C9C  082E               	movf	??_conv,w
  7983  1C9D  00F3               	movwf	___xxtofl@val
  7984  1C9E  3001               	movlw	1
  7985  1C9F  120A  158A  2080  160A  158A  	fcall	___xxtofl
  7986  1CA4  0876               	movf	?___xxtofl+3,w
  7987  1CA5  1283               	bcf	3,5	;RP0=0, select bank0
  7988  1CA6  1303               	bcf	3,6	;RP1=0, select bank0
  7989  1CA7  00B5               	movwf	conv@result+3
  7990  1CA8  0875               	movf	?___xxtofl+2,w
  7991  1CA9  00B4               	movwf	conv@result+2
  7992  1CAA  0874               	movf	?___xxtofl+1,w
  7993  1CAB  00B3               	movwf	conv@result+1
  7994  1CAC  0873               	movf	?___xxtofl,w
  7995  1CAD  00B2               	movwf	conv@result
  7996  1CAE                     l3844:
  7997                           
  7998                           ;main5a.c: 181:     return result;
  7999  1CAE  0835               	movf	conv@result+3,w
  8000  1CAF  00AD               	movwf	?_conv+3
  8001  1CB0  0834               	movf	conv@result+2,w
  8002  1CB1  00AC               	movwf	?_conv+2
  8003  1CB2  0833               	movf	conv@result+1,w
  8004  1CB3  00AB               	movwf	?_conv+1
  8005  1CB4  0832               	movf	conv@result,w
  8006  1CB5  00AA               	movwf	?_conv
  8007  1CB6                     l129:
  8008  1CB6  0008               	return
  8009  1CB7                     __end_of_conv:
  8010                           
  8011                           	psect	text25
  8012  0880                     __ptext25:	
  8013 ;; *************** function ___xxtofl *****************
  8014 ;; Defined at:
  8015 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;  sign            1    wreg     unsigned char 
  8018 ;;  val             4    3[COMMON] long 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  sign            1    4[BANK0 ] unsigned char 
  8021 ;;  arg             4    6[BANK0 ] unsigned long 
  8022 ;;  exp             1    5[BANK0 ] unsigned char 
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  4    3[COMMON] unsigned char 
  8025 ;; Registers used:
  8026 ;;		wreg, status,2, status,0
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8032 ;;      Params:         4       0       0       0       0
  8033 ;;      Locals:         0       6       0       0       0
  8034 ;;      Temps:          0       4       0       0       0
  8035 ;;      Totals:         4      10       0       0       0
  8036 ;;Total ram usage:       14 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; Hardware stack levels required when called:    1
  8039 ;; This function calls:
  8040 ;;		Nothing
  8041 ;; This function is called by:
  8042 ;;		_conv
  8043 ;;		_sprintf
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           
  8048                           ;psect for function ___xxtofl
  8049  0880                     ___xxtofl:
  8050                           
  8051                           ;incstack = 0
  8052                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8053                           ;___xxtofl@sign stored from wreg
  8054  0880  1283               	bcf	3,5	;RP0=0, select bank0
  8055  0881  1303               	bcf	3,6	;RP1=0, select bank0
  8056  0882  00A4               	movwf	___xxtofl@sign
  8057  0883                     l3798:
  8058  0883  0824               	movf	___xxtofl@sign,w
  8059  0884  1903               	btfsc	3,2
  8060  0885  2887               	goto	u6571
  8061  0886  2888               	goto	u6570
  8062  0887                     u6571:
  8063  0887  289C               	goto	l3804
  8064  0888                     u6570:
  8065  0888                     l3800:
  8066  0888  1FF6               	btfss	___xxtofl@val+3,7
  8067  0889  288B               	goto	u6581
  8068  088A  288C               	goto	u6580
  8069  088B                     u6581:
  8070  088B  289C               	goto	l3804
  8071  088C                     u6580:
  8072  088C                     l3802:
  8073  088C  0973               	comf	___xxtofl@val,w
  8074  088D  00A6               	movwf	___xxtofl@arg
  8075  088E  0974               	comf	___xxtofl@val+1,w
  8076  088F  00A7               	movwf	___xxtofl@arg+1
  8077  0890  0975               	comf	___xxtofl@val+2,w
  8078  0891  00A8               	movwf	___xxtofl@arg+2
  8079  0892  0976               	comf	___xxtofl@val+3,w
  8080  0893  00A9               	movwf	___xxtofl@arg+3
  8081  0894  0AA6               	incf	___xxtofl@arg,f
  8082  0895  1903               	skipnz
  8083  0896  0AA7               	incf	___xxtofl@arg+1,f
  8084  0897  1903               	skipnz
  8085  0898  0AA8               	incf	___xxtofl@arg+2,f
  8086  0899  1903               	skipnz
  8087  089A  0AA9               	incf	___xxtofl@arg+3,f
  8088  089B  28A4               	goto	l810
  8089  089C                     l3804:
  8090  089C  0876               	movf	___xxtofl@val+3,w
  8091  089D  00A9               	movwf	___xxtofl@arg+3
  8092  089E  0875               	movf	___xxtofl@val+2,w
  8093  089F  00A8               	movwf	___xxtofl@arg+2
  8094  08A0  0874               	movf	___xxtofl@val+1,w
  8095  08A1  00A7               	movwf	___xxtofl@arg+1
  8096  08A2  0873               	movf	___xxtofl@val,w
  8097  08A3  00A6               	movwf	___xxtofl@arg
  8098  08A4                     l810:
  8099  08A4  0876               	movf	___xxtofl@val+3,w
  8100  08A5  0475               	iorwf	___xxtofl@val+2,w
  8101  08A6  0474               	iorwf	___xxtofl@val+1,w
  8102  08A7  0473               	iorwf	___xxtofl@val,w
  8103  08A8  1D03               	skipz
  8104  08A9  28AB               	goto	u6591
  8105  08AA  28AC               	goto	u6590
  8106  08AB                     u6591:
  8107  08AB  28B5               	goto	l3810
  8108  08AC                     u6590:
  8109  08AC                     l3806:
  8110  08AC  3000               	movlw	0
  8111  08AD  00F6               	movwf	?___xxtofl+3
  8112  08AE  3000               	movlw	0
  8113  08AF  00F5               	movwf	?___xxtofl+2
  8114  08B0  3000               	movlw	0
  8115  08B1  00F4               	movwf	?___xxtofl+1
  8116  08B2  3000               	movlw	0
  8117  08B3  00F3               	movwf	?___xxtofl
  8118  08B4  293B               	goto	l812
  8119  08B5                     l3810:
  8120  08B5  3096               	movlw	150
  8121  08B6  00A0               	movwf	??___xxtofl
  8122  08B7  0820               	movf	??___xxtofl,w
  8123  08B8  00A5               	movwf	___xxtofl@exp
  8124  08B9  28C7               	goto	l3814
  8125  08BA                     l3812:
  8126  08BA  3001               	movlw	1
  8127  08BB  00A0               	movwf	??___xxtofl
  8128  08BC  0820               	movf	??___xxtofl,w
  8129  08BD  07A5               	addwf	___xxtofl@exp,f
  8130  08BE  3001               	movlw	1
  8131  08BF                     u6605:
  8132  08BF  1003               	clrc
  8133  08C0  0CA9               	rrf	___xxtofl@arg+3,f
  8134  08C1  0CA8               	rrf	___xxtofl@arg+2,f
  8135  08C2  0CA7               	rrf	___xxtofl@arg+1,f
  8136  08C3  0CA6               	rrf	___xxtofl@arg,f
  8137  08C4  3EFF               	addlw	-1
  8138  08C5  1D03               	skipz
  8139  08C6  28BF               	goto	u6605
  8140  08C7                     l3814:
  8141  08C7  30FE               	movlw	254
  8142  08C8  0529               	andwf	___xxtofl@arg+3,w
  8143  08C9  1D03               	btfss	3,2
  8144  08CA  28CC               	goto	u6611
  8145  08CB  28CD               	goto	u6610
  8146  08CC                     u6611:
  8147  08CC  28BA               	goto	l3812
  8148  08CD                     u6610:
  8149  08CD  28E9               	goto	l816
  8150  08CE                     l3816:
  8151  08CE  3001               	movlw	1
  8152  08CF  00A0               	movwf	??___xxtofl
  8153  08D0  0820               	movf	??___xxtofl,w
  8154  08D1  07A5               	addwf	___xxtofl@exp,f
  8155  08D2                     l3818:
  8156  08D2  3001               	movlw	1
  8157  08D3  07A6               	addwf	___xxtofl@arg,f
  8158  08D4  3000               	movlw	0
  8159  08D5  1803               	skipnc
  8160  08D6  3001               	movlw	1
  8161  08D7  07A7               	addwf	___xxtofl@arg+1,f
  8162  08D8  3000               	movlw	0
  8163  08D9  1803               	skipnc
  8164  08DA  3001               	movlw	1
  8165  08DB  07A8               	addwf	___xxtofl@arg+2,f
  8166  08DC  3000               	movlw	0
  8167  08DD  1803               	skipnc
  8168  08DE  3001               	movlw	1
  8169  08DF  07A9               	addwf	___xxtofl@arg+3,f
  8170  08E0                     l3820:
  8171  08E0  3001               	movlw	1
  8172  08E1                     u6625:
  8173  08E1  1003               	clrc
  8174  08E2  0CA9               	rrf	___xxtofl@arg+3,f
  8175  08E3  0CA8               	rrf	___xxtofl@arg+2,f
  8176  08E4  0CA7               	rrf	___xxtofl@arg+1,f
  8177  08E5  0CA6               	rrf	___xxtofl@arg,f
  8178  08E6  3EFF               	addlw	-1
  8179  08E7  1D03               	skipz
  8180  08E8  28E1               	goto	u6625
  8181  08E9                     l816:
  8182  08E9  30FF               	movlw	255
  8183  08EA  0529               	andwf	___xxtofl@arg+3,w
  8184  08EB  1D03               	btfss	3,2
  8185  08EC  28EE               	goto	u6631
  8186  08ED  28EF               	goto	u6630
  8187  08EE                     u6631:
  8188  08EE  28CE               	goto	l3816
  8189  08EF                     u6630:
  8190  08EF  28FB               	goto	l3824
  8191  08F0                     l3822:
  8192  08F0  3001               	movlw	1
  8193  08F1  02A5               	subwf	___xxtofl@exp,f
  8194  08F2  3001               	movlw	1
  8195  08F3  00A0               	movwf	??___xxtofl
  8196  08F4                     u6645:
  8197  08F4  1003               	clrc
  8198  08F5  0DA6               	rlf	___xxtofl@arg,f
  8199  08F6  0DA7               	rlf	___xxtofl@arg+1,f
  8200  08F7  0DA8               	rlf	___xxtofl@arg+2,f
  8201  08F8  0DA9               	rlf	___xxtofl@arg+3,f
  8202  08F9  0BA0               	decfsz	??___xxtofl,f
  8203  08FA  28F4               	goto	u6645
  8204  08FB                     l3824:
  8205  08FB  1BA8               	btfsc	___xxtofl@arg+2,7
  8206  08FC  28FE               	goto	u6651
  8207  08FD  28FF               	goto	u6650
  8208  08FE                     u6651:
  8209  08FE  2905               	goto	l823
  8210  08FF                     u6650:
  8211  08FF                     l3826:
  8212  08FF  3002               	movlw	2
  8213  0900  0225               	subwf	___xxtofl@exp,w
  8214  0901  1803               	skipnc
  8215  0902  2904               	goto	u6661
  8216  0903  2905               	goto	u6660
  8217  0904                     u6661:
  8218  0904  28F0               	goto	l3822
  8219  0905                     u6660:
  8220  0905                     l823:
  8221  0905  1825               	btfsc	___xxtofl@exp,0
  8222  0906  2908               	goto	u6671
  8223  0907  2909               	goto	u6670
  8224  0908                     u6671:
  8225  0908  2911               	goto	l824
  8226  0909                     u6670:
  8227  0909                     l3828:
  8228  0909  30FF               	movlw	255
  8229  090A  05A6               	andwf	___xxtofl@arg,f
  8230  090B  30FF               	movlw	255
  8231  090C  05A7               	andwf	___xxtofl@arg+1,f
  8232  090D  307F               	movlw	127
  8233  090E  05A8               	andwf	___xxtofl@arg+2,f
  8234  090F  30FF               	movlw	255
  8235  0910  05A9               	andwf	___xxtofl@arg+3,f
  8236  0911                     l824:
  8237  0911  1003               	clrc
  8238  0912  0CA5               	rrf	___xxtofl@exp,f
  8239  0913                     l3830:
  8240  0913  0825               	movf	___xxtofl@exp,w
  8241  0914  00A0               	movwf	??___xxtofl
  8242  0915  01A1               	clrf	??___xxtofl+1
  8243  0916  01A2               	clrf	??___xxtofl+2
  8244  0917  01A3               	clrf	??___xxtofl+3
  8245  0918  3018               	movlw	24
  8246  0919                     u6685:
  8247  0919  1003               	clrc
  8248  091A  0DA0               	rlf	??___xxtofl,f
  8249  091B  0DA1               	rlf	??___xxtofl+1,f
  8250  091C  0DA2               	rlf	??___xxtofl+2,f
  8251  091D  0DA3               	rlf	??___xxtofl+3,f
  8252  091E                     u6680:
  8253  091E  3EFF               	addlw	-1
  8254  091F  1D03               	skipz
  8255  0920  2919               	goto	u6685
  8256  0921  0820               	movf	??___xxtofl,w
  8257  0922  04A6               	iorwf	___xxtofl@arg,f
  8258  0923  0821               	movf	??___xxtofl+1,w
  8259  0924  04A7               	iorwf	___xxtofl@arg+1,f
  8260  0925  0822               	movf	??___xxtofl+2,w
  8261  0926  04A8               	iorwf	___xxtofl@arg+2,f
  8262  0927  0823               	movf	??___xxtofl+3,w
  8263  0928  04A9               	iorwf	___xxtofl@arg+3,f
  8264  0929                     l3832:
  8265  0929  0824               	movf	___xxtofl@sign,w
  8266  092A  1903               	btfsc	3,2
  8267  092B  292D               	goto	u6691
  8268  092C  292E               	goto	u6690
  8269  092D                     u6691:
  8270  092D  2933               	goto	l3838
  8271  092E                     u6690:
  8272  092E                     l3834:
  8273  092E  1FF6               	btfss	___xxtofl@val+3,7
  8274  092F  2931               	goto	u6701
  8275  0930  2932               	goto	u6700
  8276  0931                     u6701:
  8277  0931  2933               	goto	l3838
  8278  0932                     u6700:
  8279  0932                     l3836:
  8280  0932  17A9               	bsf	___xxtofl@arg+3,7
  8281  0933                     l3838:
  8282  0933  0829               	movf	___xxtofl@arg+3,w
  8283  0934  00F6               	movwf	?___xxtofl+3
  8284  0935  0828               	movf	___xxtofl@arg+2,w
  8285  0936  00F5               	movwf	?___xxtofl+2
  8286  0937  0827               	movf	___xxtofl@arg+1,w
  8287  0938  00F4               	movwf	?___xxtofl+1
  8288  0939  0826               	movf	___xxtofl@arg,w
  8289  093A  00F3               	movwf	?___xxtofl
  8290  093B                     l812:
  8291  093B  0008               	return
  8292  093C                     __end_of___xxtofl:
  8293                           
  8294                           	psect	text26
  8295  1C0C                     __ptext26:	
  8296 ;; *************** function _cfg_usart *****************
  8297 ;; Defined at:
  8298 ;;		line 133 in file "main5a.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		wreg, status,2
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8312 ;;      Params:         0       0       0       0       0
  8313 ;;      Locals:         0       0       0       0       0
  8314 ;;      Temps:          0       0       0       0       0
  8315 ;;      Totals:         0       0       0       0       0
  8316 ;;Total ram usage:        0 bytes
  8317 ;; Hardware stack levels used:    1
  8318 ;; Hardware stack levels required when called:    1
  8319 ;; This function calls:
  8320 ;;		Nothing
  8321 ;; This function is called by:
  8322 ;;		_main
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           
  8327                           ;psect for function _cfg_usart
  8328  1C0C                     _cfg_usart:
  8329  1C0C                     l3056:	
  8330                           ;incstack = 0
  8331                           ; Regs used in _cfg_usart: [wreg+status,2]
  8332                           
  8333                           
  8334                           ;main5a.c: 135:     TXSTAbits.SYNC = 0;
  8335  1C0C  1683               	bsf	3,5	;RP0=1, select bank1
  8336  1C0D  1303               	bcf	3,6	;RP1=0, select bank1
  8337  1C0E  1218               	bcf	24,4	;volatile
  8338                           
  8339                           ;main5a.c: 136:     TXSTAbits.BRGH = 1;
  8340  1C0F  1518               	bsf	24,2	;volatile
  8341                           
  8342                           ;main5a.c: 138:     BAUDCTLbits.BRG16 = 1;
  8343  1C10  1683               	bsf	3,5	;RP0=1, select bank3
  8344  1C11  1703               	bsf	3,6	;RP1=1, select bank3
  8345  1C12  1587               	bsf	7,3	;volatile
  8346  1C13                     l3058:
  8347                           
  8348                           ;main5a.c: 140:     SPBRG = 207;
  8349  1C13  30CF               	movlw	207
  8350  1C14  1683               	bsf	3,5	;RP0=1, select bank1
  8351  1C15  1303               	bcf	3,6	;RP1=0, select bank1
  8352  1C16  0099               	movwf	25	;volatile
  8353  1C17                     l3060:
  8354                           
  8355                           ;main5a.c: 141:     SPBRGH = 0;
  8356  1C17  019A               	clrf	26	;volatile
  8357  1C18                     l3062:
  8358                           
  8359                           ;main5a.c: 143:     RCSTAbits.SPEN = 1;
  8360  1C18  1283               	bcf	3,5	;RP0=0, select bank0
  8361  1C19  1303               	bcf	3,6	;RP1=0, select bank0
  8362  1C1A  1798               	bsf	24,7	;volatile
  8363  1C1B                     l3064:
  8364                           
  8365                           ;main5a.c: 144:     RCSTAbits.RX9 = 0;
  8366  1C1B  1318               	bcf	24,6	;volatile
  8367  1C1C                     l3066:
  8368                           
  8369                           ;main5a.c: 145:     RCSTAbits.CREN = 1;
  8370  1C1C  1618               	bsf	24,4	;volatile
  8371  1C1D                     l3068:
  8372                           
  8373                           ;main5a.c: 147:     TXSTAbits.TXEN = 1;
  8374  1C1D  1683               	bsf	3,5	;RP0=1, select bank1
  8375  1C1E  1303               	bcf	3,6	;RP1=0, select bank1
  8376  1C1F  1698               	bsf	24,5	;volatile
  8377  1C20                     l108:
  8378  1C20  0008               	return
  8379  1C21                     __end_of_cfg_usart:
  8380                           
  8381                           	psect	text27
  8382  1BC3                     __ptext27:	
  8383 ;; *************** function _cfg_iocb *****************
  8384 ;; Defined at:
  8385 ;;		line 157 in file "main5a.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8399 ;;      Params:         0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0
  8402 ;;      Totals:         0       0       0       0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; Hardware stack levels required when called:    1
  8406 ;; This function calls:
  8407 ;;		Nothing
  8408 ;; This function is called by:
  8409 ;;		_main
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           
  8414                           ;psect for function _cfg_iocb
  8415  1BC3                     _cfg_iocb:
  8416  1BC3                     l3052:	
  8417                           ;incstack = 0
  8418                           ; Regs used in _cfg_iocb: [wreg]
  8419                           
  8420                           
  8421                           ;main5a.c: 158:     IOCB = 0X03 ;
  8422  1BC3  3003               	movlw	3
  8423  1BC4  1683               	bsf	3,5	;RP0=1, select bank1
  8424  1BC5  1303               	bcf	3,6	;RP1=0, select bank1
  8425  1BC6  0096               	movwf	22	;volatile
  8426  1BC7                     l3054:
  8427                           
  8428                           ;main5a.c: 159:     INTCONbits.RBIF = 0;
  8429  1BC7  100B               	bcf	11,0	;volatile
  8430  1BC8                     l114:
  8431  1BC8  0008               	return
  8432  1BC9                     __end_of_cfg_iocb:
  8433                           
  8434                           	psect	text28
  8435  1BF8                     __ptext28:	
  8436 ;; *************** function _cfg_io *****************
  8437 ;; Defined at:
  8438 ;;		line 112 in file "main5a.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;		None
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1    wreg      void 
  8445 ;; Registers used:
  8446 ;;		wreg, status,2
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8452 ;;      Params:         0       0       0       0       0
  8453 ;;      Locals:         0       0       0       0       0
  8454 ;;      Temps:          0       0       0       0       0
  8455 ;;      Totals:         0       0       0       0       0
  8456 ;;Total ram usage:        0 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; Hardware stack levels required when called:    1
  8459 ;; This function calls:
  8460 ;;		Nothing
  8461 ;; This function is called by:
  8462 ;;		_main
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           
  8467                           ;psect for function _cfg_io
  8468  1BF8                     _cfg_io:
  8469  1BF8                     l3034:	
  8470                           ;incstack = 0
  8471                           ; Regs used in _cfg_io: [wreg+status,2]
  8472                           
  8473                           
  8474                           ;main5a.c: 113:     ANSEL = 0;
  8475  1BF8  1683               	bsf	3,5	;RP0=1, select bank3
  8476  1BF9  1703               	bsf	3,6	;RP1=1, select bank3
  8477  1BFA  0188               	clrf	8	;volatile
  8478                           
  8479                           ;main5a.c: 114:     ANSELH = 0;
  8480  1BFB  0189               	clrf	9	;volatile
  8481                           
  8482                           ;main5a.c: 116:     TRISA = 0;
  8483  1BFC  1683               	bsf	3,5	;RP0=1, select bank1
  8484  1BFD  1303               	bcf	3,6	;RP1=0, select bank1
  8485  1BFE  0185               	clrf	5	;volatile
  8486                           
  8487                           ;main5a.c: 117:     TRISB = 0;
  8488  1BFF  0186               	clrf	6	;volatile
  8489                           
  8490                           ;main5a.c: 118:     TRISD = 0;
  8491  1C00  0188               	clrf	8	;volatile
  8492  1C01                     l3036:
  8493                           
  8494                           ;main5a.c: 119:     TRISBbits.TRISB0 = 1;
  8495  1C01  1406               	bsf	6,0	;volatile
  8496  1C02                     l3038:
  8497                           
  8498                           ;main5a.c: 120:     TRISBbits.TRISB1 = 1;
  8499  1C02  1486               	bsf	6,1	;volatile
  8500  1C03                     l3040:
  8501                           
  8502                           ;main5a.c: 121:     OPTION_REGbits.nRBPU = 0 ;
  8503  1C03  1381               	bcf	1,7	;volatile
  8504  1C04                     l3042:
  8505                           
  8506                           ;main5a.c: 122:     WPUB = 0x03;
  8507  1C04  3003               	movlw	3
  8508  1C05  0095               	movwf	21	;volatile
  8509  1C06                     l3044:
  8510                           
  8511                           ;main5a.c: 124:     PORTB = 0;
  8512  1C06  1283               	bcf	3,5	;RP0=0, select bank0
  8513  1C07  1303               	bcf	3,6	;RP1=0, select bank0
  8514  1C08  0186               	clrf	6	;volatile
  8515  1C09                     l3046:
  8516                           
  8517                           ;main5a.c: 125:     PORTD = 0;
  8518  1C09  0188               	clrf	8	;volatile
  8519  1C0A                     l3048:
  8520                           
  8521                           ;main5a.c: 126:     PORTA = 0;
  8522  1C0A  0185               	clrf	5	;volatile
  8523  1C0B                     l102:
  8524  1C0B  0008               	return
  8525  1C0C                     __end_of_cfg_io:
  8526                           
  8527                           	psect	text29
  8528  1BC9                     __ptext29:	
  8529 ;; *************** function _cfg_inte *****************
  8530 ;; Defined at:
  8531 ;;		line 150 in file "main5a.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;		None
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;		None
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1    wreg      void 
  8538 ;; Registers used:
  8539 ;;		None
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8545 ;;      Params:         0       0       0       0       0
  8546 ;;      Locals:         0       0       0       0       0
  8547 ;;      Temps:          0       0       0       0       0
  8548 ;;      Totals:         0       0       0       0       0
  8549 ;;Total ram usage:        0 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:    1
  8552 ;; This function calls:
  8553 ;;		Nothing
  8554 ;; This function is called by:
  8555 ;;		_main
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559                           
  8560                           ;psect for function _cfg_inte
  8561  1BC9                     _cfg_inte:
  8562  1BC9                     l3050:	
  8563                           ;incstack = 0
  8564                           ; Regs used in _cfg_inte: []
  8565                           
  8566                           
  8567                           ;main5a.c: 151:     INTCONbits.GIE = 1;
  8568  1BC9  178B               	bsf	11,7	;volatile
  8569                           
  8570                           ;main5a.c: 152:     INTCONbits.PEIE = 1;
  8571  1BCA  170B               	bsf	11,6	;volatile
  8572                           
  8573                           ;main5a.c: 153:     PIE1bits.RCIE = 1;
  8574  1BCB  1683               	bsf	3,5	;RP0=1, select bank1
  8575  1BCC  1303               	bcf	3,6	;RP1=0, select bank1
  8576  1BCD  168C               	bsf	12,5	;volatile
  8577                           
  8578                           ;main5a.c: 154:     INTCONbits.RBIE = 1;
  8579  1BCE  158B               	bsf	11,3	;volatile
  8580                           
  8581                           ;main5a.c: 155:     INTCONbits.RBIF = 0;
  8582  1BCF  100B               	bcf	11,0	;volatile
  8583  1BD0                     l111:
  8584  1BD0  0008               	return
  8585  1BD1                     __end_of_cfg_inte:
  8586                           
  8587                           	psect	text30
  8588  1BBD                     __ptext30:	
  8589 ;; *************** function _cfg_clk *****************
  8590 ;; Defined at:
  8591 ;;		line 129 in file "main5a.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;		None
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  1    wreg      void 
  8598 ;; Registers used:
  8599 ;;		wreg, status,2, status,0
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8605 ;;      Params:         0       0       0       0       0
  8606 ;;      Locals:         0       0       0       0       0
  8607 ;;      Temps:          0       0       0       0       0
  8608 ;;      Totals:         0       0       0       0       0
  8609 ;;Total ram usage:        0 bytes
  8610 ;; Hardware stack levels used:    1
  8611 ;; Hardware stack levels required when called:    1
  8612 ;; This function calls:
  8613 ;;		Nothing
  8614 ;; This function is called by:
  8615 ;;		_main
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           
  8620                           ;psect for function _cfg_clk
  8621  1BBD                     _cfg_clk:
  8622  1BBD                     l3070:	
  8623                           ;incstack = 0
  8624                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  8625                           
  8626                           
  8627                           ;main5a.c: 130:     OSCCONbits.IRCF = 0b111;
  8628  1BBD  3070               	movlw	112
  8629  1BBE  1683               	bsf	3,5	;RP0=1, select bank1
  8630  1BBF  1303               	bcf	3,6	;RP1=0, select bank1
  8631  1BC0  048F               	iorwf	15,f	;volatile
  8632  1BC1                     l3072:
  8633                           
  8634                           ;main5a.c: 131:     OSCCONbits.SCS = 1;
  8635  1BC1  140F               	bsf	15,0	;volatile
  8636  1BC2                     l105:
  8637  1BC2  0008               	return
  8638  1BC3                     __end_of_cfg_clk:
  8639                           
  8640                           	psect	text31
  8641  1C67                     __ptext31:	
  8642 ;; *************** function _isr *****************
  8643 ;; Defined at:
  8644 ;;		line 66 in file "main5a.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;		None
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, status,2, status,0
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8658 ;;      Params:         0       0       0       0       0
  8659 ;;      Locals:         0       0       0       0       0
  8660 ;;      Temps:          3       0       0       0       0
  8661 ;;      Totals:         3       0       0       0       0
  8662 ;;Total ram usage:        3 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; This function calls:
  8665 ;;		Nothing
  8666 ;; This function is called by:
  8667 ;;		Interrupt level 1
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           
  8672                           ;psect for function _isr
  8673  1C67                     _isr:
  8674  1C67                     i1l3394:
  8675                           
  8676                           ;main5a.c: 68:     if(PIR1bits.RCIF){
  8677  1C67  1283               	bcf	3,5	;RP0=0, select bank0
  8678  1C68  1303               	bcf	3,6	;RP1=0, select bank0
  8679  1C69  1E8C               	btfss	12,5	;volatile
  8680  1C6A  2C6C               	goto	u563_21
  8681  1C6B  2C6D               	goto	u563_20
  8682  1C6C                     u563_21:
  8683  1C6C  2C6F               	goto	i1l3398
  8684  1C6D                     u563_20:
  8685  1C6D                     i1l3396:
  8686                           
  8687                           ;main5a.c: 69:         PORTD = RCREG;
  8688  1C6D  081A               	movf	26,w	;volatile
  8689  1C6E  0088               	movwf	8	;volatile
  8690  1C6F                     i1l3398:
  8691                           
  8692                           ;main5a.c: 73:     if(INTCONbits.RBIF){
  8693  1C6F  1C0B               	btfss	11,0	;volatile
  8694  1C70  2C72               	goto	u564_21
  8695  1C71  2C73               	goto	u564_20
  8696  1C72                     u564_21:
  8697  1C72  2C87               	goto	i1l91
  8698  1C73                     u564_20:
  8699  1C73                     i1l3400:
  8700                           
  8701                           ;main5a.c: 74:         if (PORTBbits.RB0 == 0){
  8702  1C73  1806               	btfsc	6,0	;volatile
  8703  1C74  2C76               	goto	u565_21
  8704  1C75  2C77               	goto	u565_20
  8705  1C76                     u565_21:
  8706  1C76  2C7D               	goto	i1l3404
  8707  1C77                     u565_20:
  8708  1C77                     i1l3402:
  8709                           
  8710                           ;main5a.c: 75:             V++;
  8711  1C77  3001               	movlw	1
  8712  1C78  00F0               	movwf	??_isr
  8713  1C79  0870               	movf	??_isr,w
  8714  1C7A  1683               	bsf	3,5	;RP0=1, select bank1
  8715  1C7B  1303               	bcf	3,6	;RP1=0, select bank1
  8716  1C7C  07DF               	addwf	_V^(0+128),f
  8717  1C7D                     i1l3404:
  8718                           
  8719                           ;main5a.c: 77:         if (PORTBbits.RB1 == 0){
  8720  1C7D  1283               	bcf	3,5	;RP0=0, select bank0
  8721  1C7E  1886               	btfsc	6,1	;volatile
  8722  1C7F  2C81               	goto	u566_21
  8723  1C80  2C82               	goto	u566_20
  8724  1C81                     u566_21:
  8725  1C81  2C86               	goto	i1l3408
  8726  1C82                     u566_20:
  8727  1C82                     i1l3406:
  8728                           
  8729                           ;main5a.c: 78:             V--;
  8730  1C82  3001               	movlw	1
  8731  1C83  1683               	bsf	3,5	;RP0=1, select bank1
  8732  1C84  1303               	bcf	3,6	;RP1=0, select bank1
  8733  1C85  02DF               	subwf	_V^(0+128),f
  8734  1C86                     i1l3408:
  8735                           
  8736                           ;main5a.c: 80:         INTCONbits.RBIF = 0;
  8737  1C86  100B               	bcf	11,0	;volatile
  8738  1C87                     i1l91:
  8739  1C87  0872               	movf	??_isr+2,w
  8740  1C88  008A               	movwf	10
  8741  1C89  0E71               	swapf	??_isr+1,w
  8742  1C8A  0083               	movwf	3
  8743  1C8B  0EFE               	swapf	btemp,f
  8744  1C8C  0E7E               	swapf	btemp,w
  8745  1C8D  0009               	retfie
  8746  1C8E                     __end_of_isr:
  8747  007E                     btemp	set	126	;btemp
  8748  007E                     wtemp0	set	126
  8749                           
  8750                           	psect	intentry
  8751  0004                     __pintentry:	
  8752                           ;incstack = 0
  8753                           ; Regs used in _isr: [wreg+status,2+status,0]
  8754                           
  8755  0004                     interrupt_function:
  8756  007E                     saved_w	set	btemp
  8757  0004  00FE               	movwf	btemp
  8758  0005  0E03               	swapf	3,w
  8759  0006  00F1               	movwf	??_isr+1
  8760  0007  080A               	movf	10,w
  8761  0008  00F2               	movwf	??_isr+2
  8762  0009  160A  158A  2C67   	ljmp	_isr
  8763                           
  8764                           	psect	config
  8765                           
  8766                           ;Config register CONFIG1 @ 0x2007
  8767                           ;	Oscillator Selection bits
  8768                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8769                           ;	Watchdog Timer Enable bit
  8770                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8771                           ;	Power-up Timer Enable bit
  8772                           ;	PWRTE = OFF, PWRT disabled
  8773                           ;	RE3/MCLR pin function select bit
  8774                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8775                           ;	Code Protection bit
  8776                           ;	CP = OFF, Program memory code protection is disabled
  8777                           ;	Data Code Protection bit
  8778                           ;	CPD = OFF, Data memory code protection is disabled
  8779                           ;	Brown Out Reset Selection bits
  8780                           ;	BOREN = OFF, BOR disabled
  8781                           ;	Internal External Switchover bit
  8782                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8783                           ;	Fail-Safe Clock Monitor Enabled bit
  8784                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8785                           ;	Low Voltage Programming Enable bit
  8786                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8787                           ;	In-Circuit Debugger Mode bit
  8788                           ;	DEBUG = 0x1, unprogrammed default
  8789  2007                     	org	8199
  8790  2007  20D4               	dw	8404
  8791                           
  8792                           ;Config register CONFIG2 @ 0x2008
  8793                           ;	Brown-out Reset Selection bit
  8794                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8795                           ;	Flash Program Memory Self Write Enable bits
  8796                           ;	WRT = OFF, Write protection off
  8797  2008                     	org	8200
  8798  2008  3FFF               	dw	16383
  8799                           
  8800                           	psect	text1_split_1
  8801  001E                     u6840:
  8802  001E                     l3950:
  8803  001E  1683               	bsf	3,5	;RP0=1, select bank1
  8804  001F  1303               	bcf	3,6	;RP1=0, select bank1
  8805  0020  0850               	movf	(sprintf@fval+3)^(0+128),w
  8806  0021  1283               	bcf	3,5	;RP0=0, select bank0
  8807  0022  1303               	bcf	3,6	;RP1=0, select bank0
  8808  0023  00A3               	movwf	___fleq@ff1+3
  8809  0024  1683               	bsf	3,5	;RP0=1, select bank1
  8810  0025  1303               	bcf	3,6	;RP1=0, select bank1
  8811  0026  084F               	movf	(sprintf@fval+2)^(0+128),w
  8812  0027  1283               	bcf	3,5	;RP0=0, select bank0
  8813  0028  1303               	bcf	3,6	;RP1=0, select bank0
  8814  0029  00A2               	movwf	___fleq@ff1+2
  8815  002A  1683               	bsf	3,5	;RP0=1, select bank1
  8816  002B  1303               	bcf	3,6	;RP1=0, select bank1
  8817  002C  084E               	movf	(sprintf@fval+1)^(0+128),w
  8818  002D  1283               	bcf	3,5	;RP0=0, select bank0
  8819  002E  1303               	bcf	3,6	;RP1=0, select bank0
  8820  002F  00A1               	movwf	___fleq@ff1+1
  8821  0030  1683               	bsf	3,5	;RP0=1, select bank1
  8822  0031  1303               	bcf	3,6	;RP1=0, select bank1
  8823  0032  084D               	movf	sprintf@fval^(0+128),w
  8824  0033  1283               	bcf	3,5	;RP0=0, select bank0
  8825  0034  1303               	bcf	3,6	;RP1=0, select bank0
  8826  0035  00A0               	movwf	___fleq@ff1
  8827  0036  3000               	movlw	0
  8828  0037  00A7               	movwf	___fleq@ff2+3
  8829  0038  3000               	movlw	0
  8830  0039  00A6               	movwf	___fleq@ff2+2
  8831  003A  3000               	movlw	0
  8832  003B  00A5               	movwf	___fleq@ff2+1
  8833  003C  3000               	movlw	0
  8834  003D  00A4               	movwf	___fleq@ff2
  8835  003E  160A  158A  251A  120A  118A  	fcall	___fleq
  8836  0043  1803               	btfsc	3,0
  8837  0044  2846               	goto	u6851
  8838  0045  2847               	goto	u6850
  8839  0046                     u6851:
  8840  0046  2929               	goto	l3970
  8841  0047                     u6850:
  8842  0047                     l3952:
  8843  0047  1683               	bsf	3,5	;RP0=1, select bank1
  8844  0048  1303               	bcf	3,6	;RP1=0, select bank1
  8845  0049  0850               	movf	(sprintf@fval+3)^(0+128),w
  8846  004A  1283               	bcf	3,5	;RP0=0, select bank0
  8847  004B  1303               	bcf	3,6	;RP1=0, select bank0
  8848  004C  00DA               	movwf	___fltol@f1+3
  8849  004D  1683               	bsf	3,5	;RP0=1, select bank1
  8850  004E  1303               	bcf	3,6	;RP1=0, select bank1
  8851  004F  084F               	movf	(sprintf@fval+2)^(0+128),w
  8852  0050  1283               	bcf	3,5	;RP0=0, select bank0
  8853  0051  1303               	bcf	3,6	;RP1=0, select bank0
  8854  0052  00D9               	movwf	___fltol@f1+2
  8855  0053  1683               	bsf	3,5	;RP0=1, select bank1
  8856  0054  1303               	bcf	3,6	;RP1=0, select bank1
  8857  0055  084E               	movf	(sprintf@fval+1)^(0+128),w
  8858  0056  1283               	bcf	3,5	;RP0=0, select bank0
  8859  0057  1303               	bcf	3,6	;RP1=0, select bank0
  8860  0058  00D8               	movwf	___fltol@f1+1
  8861  0059  1683               	bsf	3,5	;RP0=1, select bank1
  8862  005A  1303               	bcf	3,6	;RP1=0, select bank1
  8863  005B  084D               	movf	sprintf@fval^(0+128),w
  8864  005C  1283               	bcf	3,5	;RP0=0, select bank0
  8865  005D  1303               	bcf	3,6	;RP1=0, select bank0
  8866  005E  00D7               	movwf	___fltol@f1
  8867  005F  120A  158A  2004  120A  118A  	fcall	___fltol
  8868  0064  1283               	bcf	3,5	;RP0=0, select bank0
  8869  0065  1303               	bcf	3,6	;RP1=0, select bank0
  8870  0066  085A               	movf	?___fltol+3,w
  8871  0067  0459               	iorwf	?___fltol+2,w
  8872  0068  0458               	iorwf	?___fltol+1,w
  8873  0069  0457               	iorwf	?___fltol,w
  8874  006A  1D03               	skipz
  8875  006B  286D               	goto	u6861
  8876  006C  286E               	goto	u6860
  8877  006D                     u6861:
  8878  006D  2929               	goto	l3970
  8879  006E                     u6860:
  8880  006E                     l3954:
  8881  006E  1683               	bsf	3,5	;RP0=1, select bank1
  8882  006F  1303               	bcf	3,6	;RP1=0, select bank1
  8883  0070  0848               	movf	(sprintf@eexp+1)^(0+128),w
  8884  0071  3A80               	xorlw	128
  8885  0072  00FF               	movwf	btemp+1
  8886  0073  3080               	movlw	128
  8887  0074  027F               	subwf	btemp+1,w
  8888  0075  1D03               	skipz
  8889  0076  2879               	goto	u6875
  8890  0077  3002               	movlw	2
  8891  0078  0247               	subwf	sprintf@eexp^(0+128),w
  8892  0079                     u6875:
  8893  0079  1C03               	skipc
  8894  007A  287C               	goto	u6871
  8895  007B  287D               	goto	u6870
  8896  007C                     u6871:
  8897  007C  2929               	goto	l3970
  8898  007D                     u6870:
  8899  007D                     l3956:
  8900                           
  8901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8902  007D  1683               	bsf	3,5	;RP0=1, select bank1
  8903  007E  1303               	bcf	3,6	;RP1=0, select bank1
  8904  007F  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  8905  0080  1283               	bcf	3,5	;RP0=0, select bank0
  8906  0081  1303               	bcf	3,6	;RP1=0, select bank0
  8907  0082  00A3               	movwf	___flge@ff1+3
  8908  0083  1683               	bsf	3,5	;RP0=1, select bank1
  8909  0084  1303               	bcf	3,6	;RP1=0, select bank1
  8910  0085  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  8911  0086  1283               	bcf	3,5	;RP0=0, select bank0
  8912  0087  1303               	bcf	3,6	;RP1=0, select bank0
  8913  0088  00A2               	movwf	___flge@ff1+2
  8914  0089  1683               	bsf	3,5	;RP0=1, select bank1
  8915  008A  1303               	bcf	3,6	;RP1=0, select bank1
  8916  008B  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  8917  008C  1283               	bcf	3,5	;RP0=0, select bank0
  8918  008D  1303               	bcf	3,6	;RP1=0, select bank0
  8919  008E  00A1               	movwf	___flge@ff1+1
  8920  008F  1683               	bsf	3,5	;RP0=1, select bank1
  8921  0090  1303               	bcf	3,6	;RP1=0, select bank1
  8922  0091  0843               	movf	sprintf@tmpval^(0+128),w
  8923  0092  1283               	bcf	3,5	;RP0=0, select bank0
  8924  0093  1303               	bcf	3,6	;RP1=0, select bank0
  8925  0094  00A0               	movwf	___flge@ff1
  8926  0095  3040               	movlw	64
  8927  0096  00A7               	movwf	___flge@ff2+3
  8928  0097  3089               	movlw	137
  8929  0098  00A6               	movwf	___flge@ff2+2
  8930  0099  3070               	movlw	112
  8931  009A  00A5               	movwf	___flge@ff2+1
  8932  009B  305F               	movlw	95
  8933  009C  00A4               	movwf	___flge@ff2
  8934  009D  160A  158A  275C  120A  118A  	fcall	___flge
  8935  00A2  1803               	btfsc	3,0
  8936  00A3  28A5               	goto	u6881
  8937  00A4  28A6               	goto	u6880
  8938  00A5                     u6881:
  8939  00A5  28AF               	goto	l3960
  8940  00A6                     u6880:
  8941  00A6                     l3958:
  8942                           
  8943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  8944  00A6  30F7               	movlw	247
  8945  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  8946  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  8947  00A9  07C7               	addwf	sprintf@eexp^(0+128),f
  8948  00AA  1803               	skipnc
  8949  00AB  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  8950  00AC  30FF               	movlw	255
  8951  00AD  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  8952                           
  8953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8954  00AE  28B7               	goto	l3962
  8955  00AF                     l3960:
  8956                           
  8957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  8958  00AF  30F8               	movlw	248
  8959  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  8960  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  8961  00B2  07C7               	addwf	sprintf@eexp^(0+128),f
  8962  00B3  1803               	skipnc
  8963  00B4  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  8964  00B5  30FF               	movlw	255
  8965  00B6  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  8966  00B7                     l3962:
  8967                           
  8968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8969  00B7  0847               	movf	sprintf@eexp^(0+128),w
  8970  00B8  120A  158A  249D  120A  118A  	fcall	_scale
  8971  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  8972  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  8973  00BF  0847               	movf	?_scale+3,w
  8974  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  8975  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  8976  00C2  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  8977  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  8978  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  8979  00C5  0846               	movf	?_scale+2,w
  8980  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  8981  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  8982  00C8  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  8983  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  8984  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  8985  00CB  0845               	movf	?_scale+1,w
  8986  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  8987  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  8988  00CE  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  8989  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  8990  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  8991  00D1  0844               	movf	?_scale,w
  8992  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  8993  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  8994  00D4  00C3               	movwf	sprintf@tmpval^(0+128)
  8995  00D5                     l3964:
  8996  00D5  0850               	movf	(sprintf@fval+3)^(0+128),w
  8997  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  8998  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  8999  00D8  00A3               	movwf	__div_to_l_@f1+3
  9000  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  9001  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  9002  00DB  084F               	movf	(sprintf@fval+2)^(0+128),w
  9003  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  9004  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  9005  00DE  00A2               	movwf	__div_to_l_@f1+2
  9006  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  9007  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  9008  00E1  084E               	movf	(sprintf@fval+1)^(0+128),w
  9009  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  9010  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  9011  00E4  00A1               	movwf	__div_to_l_@f1+1
  9012  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  9013  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  9014  00E7  084D               	movf	sprintf@fval^(0+128),w
  9015  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  9016  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  9017  00EA  00A0               	movwf	__div_to_l_@f1
  9018  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  9019  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  9020  00ED  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  9021  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  9022  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  9023  00F0  00A7               	movwf	__div_to_l_@f2+3
  9024  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  9025  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  9026  00F3  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  9027  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  9028  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  9029  00F6  00A6               	movwf	__div_to_l_@f2+2
  9030  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  9031  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  9032  00F9  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  9033  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  9034  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  9035  00FC  00A5               	movwf	__div_to_l_@f2+1
  9036  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  9037  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  9038  00FF  0843               	movf	sprintf@tmpval^(0+128),w
  9039  0100  1283               	bcf	3,5	;RP0=0, select bank0
  9040  0101  1303               	bcf	3,6	;RP1=0, select bank0
  9041  0102  00A4               	movwf	__div_to_l_@f2
  9042  0103  120A  118A  2632  120A  118A  	fcall	__div_to_l_
  9043  0108  1283               	bcf	3,5	;RP0=0, select bank0
  9044  0109  1303               	bcf	3,6	;RP1=0, select bank0
  9045  010A  0823               	movf	?__div_to_l_+3,w
  9046  010B  1683               	bsf	3,5	;RP0=1, select bank1
  9047  010C  1303               	bcf	3,6	;RP1=0, select bank1
  9048  010D  00C2               	movwf	(sprintf@val+3)^(0+128)
  9049  010E  1283               	bcf	3,5	;RP0=0, select bank0
  9050  010F  1303               	bcf	3,6	;RP1=0, select bank0
  9051  0110  0822               	movf	?__div_to_l_+2,w
  9052  0111  1683               	bsf	3,5	;RP0=1, select bank1
  9053  0112  1303               	bcf	3,6	;RP1=0, select bank1
  9054  0113  00C1               	movwf	(sprintf@val+2)^(0+128)
  9055  0114  1283               	bcf	3,5	;RP0=0, select bank0
  9056  0115  1303               	bcf	3,6	;RP1=0, select bank0
  9057  0116  0821               	movf	?__div_to_l_+1,w
  9058  0117  1683               	bsf	3,5	;RP0=1, select bank1
  9059  0118  1303               	bcf	3,6	;RP1=0, select bank1
  9060  0119  00C0               	movwf	(sprintf@val+1)^(0+128)
  9061  011A  1283               	bcf	3,5	;RP0=0, select bank0
  9062  011B  1303               	bcf	3,6	;RP1=0, select bank0
  9063  011C  0820               	movf	?__div_to_l_,w
  9064  011D  1683               	bsf	3,5	;RP0=1, select bank1
  9065  011E  1303               	bcf	3,6	;RP1=0, select bank1
  9066  011F  00BF               	movwf	sprintf@val^(0+128)
  9067  0120                     l3968:
  9068                           
  9069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9070  0120  3000               	movlw	0
  9071  0121  00D0               	movwf	(sprintf@fval+3)^(0+128)
  9072  0122  3000               	movlw	0
  9073  0123  00CF               	movwf	(sprintf@fval+2)^(0+128)
  9074  0124  3000               	movlw	0
  9075  0125  00CE               	movwf	(sprintf@fval+1)^(0+128)
  9076  0126  3000               	movlw	0
  9077  0127  00CD               	movwf	sprintf@fval^(0+128)
  9078                           
  9079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9080  0128  298F               	goto	l3976
  9081  0129                     l3970:
  9082                           
  9083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9084  0129  1683               	bsf	3,5	;RP0=1, select bank1
  9085  012A  1303               	bcf	3,6	;RP1=0, select bank1
  9086  012B  0850               	movf	(sprintf@fval+3)^(0+128),w
  9087  012C  1283               	bcf	3,5	;RP0=0, select bank0
  9088  012D  1303               	bcf	3,6	;RP1=0, select bank0
  9089  012E  00DA               	movwf	___fltol@f1+3
  9090  012F  1683               	bsf	3,5	;RP0=1, select bank1
  9091  0130  1303               	bcf	3,6	;RP1=0, select bank1
  9092  0131  084F               	movf	(sprintf@fval+2)^(0+128),w
  9093  0132  1283               	bcf	3,5	;RP0=0, select bank0
  9094  0133  1303               	bcf	3,6	;RP1=0, select bank0
  9095  0134  00D9               	movwf	___fltol@f1+2
  9096  0135  1683               	bsf	3,5	;RP0=1, select bank1
  9097  0136  1303               	bcf	3,6	;RP1=0, select bank1
  9098  0137  084E               	movf	(sprintf@fval+1)^(0+128),w
  9099  0138  1283               	bcf	3,5	;RP0=0, select bank0
  9100  0139  1303               	bcf	3,6	;RP1=0, select bank0
  9101  013A  00D8               	movwf	___fltol@f1+1
  9102  013B  1683               	bsf	3,5	;RP0=1, select bank1
  9103  013C  1303               	bcf	3,6	;RP1=0, select bank1
  9104  013D  084D               	movf	sprintf@fval^(0+128),w
  9105  013E  1283               	bcf	3,5	;RP0=0, select bank0
  9106  013F  1303               	bcf	3,6	;RP1=0, select bank0
  9107  0140  00D7               	movwf	___fltol@f1
  9108  0141  120A  158A  2004  120A  118A  	fcall	___fltol
  9109  0146  1283               	bcf	3,5	;RP0=0, select bank0
  9110  0147  1303               	bcf	3,6	;RP1=0, select bank0
  9111  0148  085A               	movf	?___fltol+3,w
  9112  0149  1683               	bsf	3,5	;RP0=1, select bank1
  9113  014A  1303               	bcf	3,6	;RP1=0, select bank1
  9114  014B  00C2               	movwf	(sprintf@val+3)^(0+128)
  9115  014C  1283               	bcf	3,5	;RP0=0, select bank0
  9116  014D  1303               	bcf	3,6	;RP1=0, select bank0
  9117  014E  0859               	movf	?___fltol+2,w
  9118  014F  1683               	bsf	3,5	;RP0=1, select bank1
  9119  0150  1303               	bcf	3,6	;RP1=0, select bank1
  9120  0151  00C1               	movwf	(sprintf@val+2)^(0+128)
  9121  0152  1283               	bcf	3,5	;RP0=0, select bank0
  9122  0153  1303               	bcf	3,6	;RP1=0, select bank0
  9123  0154  0858               	movf	?___fltol+1,w
  9124  0155  1683               	bsf	3,5	;RP0=1, select bank1
  9125  0156  1303               	bcf	3,6	;RP1=0, select bank1
  9126  0157  00C0               	movwf	(sprintf@val+1)^(0+128)
  9127  0158  1283               	bcf	3,5	;RP0=0, select bank0
  9128  0159  1303               	bcf	3,6	;RP1=0, select bank0
  9129  015A  0857               	movf	?___fltol,w
  9130  015B  1683               	bsf	3,5	;RP0=1, select bank1
  9131  015C  1303               	bcf	3,6	;RP1=0, select bank1
  9132  015D  00BF               	movwf	sprintf@val^(0+128)
  9133  015E                     l3972:
  9134                           
  9135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9136  015E  0842               	movf	(sprintf@val+3)^(0+128),w
  9137  015F  00F6               	movwf	___xxtofl@val+3
  9138  0160  0841               	movf	(sprintf@val+2)^(0+128),w
  9139  0161  00F5               	movwf	___xxtofl@val+2
  9140  0162  0840               	movf	(sprintf@val+1)^(0+128),w
  9141  0163  00F4               	movwf	___xxtofl@val+1
  9142  0164  083F               	movf	sprintf@val^(0+128),w
  9143  0165  00F3               	movwf	___xxtofl@val
  9144  0166  3000               	movlw	0
  9145  0167  120A  158A  2080  120A  118A  	fcall	___xxtofl
  9146  016C  0876               	movf	?___xxtofl+3,w
  9147  016D  1683               	bsf	3,5	;RP0=1, select bank1
  9148  016E  1303               	bcf	3,6	;RP1=0, select bank1
  9149  016F  00A3               	movwf	(___flsub@a+3)^(0+128)
  9150  0170  0875               	movf	?___xxtofl+2,w
  9151  0171  00A2               	movwf	(___flsub@a+2)^(0+128)
  9152  0172  0874               	movf	?___xxtofl+1,w
  9153  0173  00A1               	movwf	(___flsub@a+1)^(0+128)
  9154  0174  0873               	movf	?___xxtofl,w
  9155  0175  00A0               	movwf	___flsub@a^(0+128)
  9156  0176  0850               	movf	(sprintf@fval+3)^(0+128),w
  9157  0177  00A7               	movwf	(___flsub@b+3)^(0+128)
  9158  0178  084F               	movf	(sprintf@fval+2)^(0+128),w
  9159  0179  00A6               	movwf	(___flsub@b+2)^(0+128)
  9160  017A  084E               	movf	(sprintf@fval+1)^(0+128),w
  9161  017B  00A5               	movwf	(___flsub@b+1)^(0+128)
  9162  017C  084D               	movf	sprintf@fval^(0+128),w
  9163  017D  00A4               	movwf	___flsub@b^(0+128)
  9164  017E  120A  118A  27AD  120A  118A  	fcall	___flsub
  9165  0183  1683               	bsf	3,5	;RP0=1, select bank1
  9166  0184  1303               	bcf	3,6	;RP1=0, select bank1
  9167  0185  0823               	movf	(?___flsub+3)^(0+128),w
  9168  0186  00D0               	movwf	(sprintf@fval+3)^(0+128)
  9169  0187  0822               	movf	(?___flsub+2)^(0+128),w
  9170  0188  00CF               	movwf	(sprintf@fval+2)^(0+128)
  9171  0189  0821               	movf	(?___flsub+1)^(0+128),w
  9172  018A  00CE               	movwf	(sprintf@fval+1)^(0+128)
  9173  018B  0820               	movf	?___flsub^(0+128),w
  9174  018C  00CD               	movwf	sprintf@fval^(0+128)
  9175  018D                     l3974:
  9176                           
  9177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9178  018D  01C7               	clrf	sprintf@eexp^(0+128)
  9179  018E  01C8               	clrf	(sprintf@eexp+1)^(0+128)
  9180  018F                     l3976:
  9181                           
  9182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9183  018F  01D4               	clrf	sprintf@c^(0+128)
  9184  0190  0AD4               	incf	sprintf@c^(0+128),f
  9185  0191                     l3982:
  9186                           
  9187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9188  0191  0854               	movf	sprintf@c^(0+128),w
  9189  0192  00B5               	movwf	??_sprintf^(0+128)
  9190  0193  3001               	movlw	1
  9191  0194                     u6895:
  9192  0194  1003               	clrc
  9193  0195  0DB5               	rlf	??_sprintf^(0+128),f
  9194  0196  3EFF               	addlw	-1
  9195  0197  1D03               	skipz
  9196  0198  2994               	goto	u6895
  9197  0199  1003               	clrc
  9198  019A  0D35               	rlf	??_sprintf^(0+128),w
  9199  019B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9200  019C  0084               	movwf	4
  9201  019D  160A  158A  2000  120A  118A  	fcall	stringdir
  9202  01A2  00B6               	movwf	(??_sprintf+1)^(0+128)
  9203  01A3  160A  158A  2000  120A  118A  	fcall	stringdir
  9204  01A8  00B7               	movwf	((??_sprintf+1)^(0+128)+1)
  9205  01A9  160A  158A  2000  120A  118A  	fcall	stringdir
  9206  01AE  00B8               	movwf	((??_sprintf+1)^(0+128)+2)
  9207  01AF  160A  158A  2000  120A  118A  	fcall	stringdir
  9208  01B4  00B9               	movwf	((??_sprintf+1)^(0+128)+3)
  9209  01B5  0839               	movf	(??_sprintf+4)^(0+128),w
  9210  01B6  0242               	subwf	(sprintf@val+3)^(0+128),w
  9211  01B7  1D03               	skipz
  9212  01B8  29C3               	goto	u6905
  9213  01B9  0838               	movf	(??_sprintf+3)^(0+128),w
  9214  01BA  0241               	subwf	(sprintf@val+2)^(0+128),w
  9215  01BB  1D03               	skipz
  9216  01BC  29C3               	goto	u6905
  9217  01BD  0837               	movf	(??_sprintf+2)^(0+128),w
  9218  01BE  0240               	subwf	(sprintf@val+1)^(0+128),w
  9219  01BF  1D03               	skipz
  9220  01C0  29C3               	goto	u6905
  9221  01C1  0836               	movf	(??_sprintf+1)^(0+128),w
  9222  01C2  023F               	subwf	sprintf@val^(0+128),w
  9223  01C3                     u6905:
  9224  01C3  1803               	skipnc
  9225  01C4  29C6               	goto	u6901
  9226  01C5  29C7               	goto	u6900
  9227  01C6                     u6901:
  9228  01C6  29C8               	goto	l3986
  9229  01C7                     u6900:
  9230  01C7  29D2               	goto	l3988
  9231  01C8                     l3986:
  9232  01C8  3001               	movlw	1
  9233  01C9  00B5               	movwf	??_sprintf^(0+128)
  9234  01CA  0835               	movf	??_sprintf^(0+128),w
  9235  01CB  07D4               	addwf	sprintf@c^(0+128),f
  9236  01CC  300A               	movlw	10
  9237  01CD  0654               	xorwf	sprintf@c^(0+128),w
  9238  01CE  1D03               	btfss	3,2
  9239  01CF  29D1               	goto	u6911
  9240  01D0  29D2               	goto	u6910
  9241  01D1                     u6911:
  9242  01D1  2991               	goto	l3982
  9243  01D2                     u6910:
  9244  01D2                     l3988:
  9245                           
  9246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9247  01D2  0854               	movf	sprintf@c^(0+128),w
  9248  01D3  0751               	addwf	sprintf@prec^(0+128),w
  9249  01D4  00B5               	movwf	??_sprintf^(0+128)
  9250  01D5  0852               	movf	(sprintf@prec+1)^(0+128),w
  9251  01D6  1803               	skipnc
  9252  01D7  0A52               	incf	(sprintf@prec+1)^(0+128),w
  9253  01D8  00B6               	movwf	(??_sprintf^(0+128)+1)
  9254  01D9  0847               	movf	sprintf@eexp^(0+128),w
  9255  01DA  0735               	addwf	??_sprintf^(0+128),w
  9256  01DB  00B7               	movwf	(??_sprintf+2)^(0+128)
  9257  01DC  0848               	movf	(sprintf@eexp+1)^(0+128),w
  9258  01DD  1803               	skipnc
  9259  01DE  0A48               	incf	(sprintf@eexp+1)^(0+128),w
  9260  01DF  0736               	addwf	(??_sprintf+1)^(0+128),w
  9261  01E0  00B8               	movwf	(??_sprintf+3)^(0+128)
  9262  01E1  0837               	movf	(??_sprintf+2)^(0+128),w
  9263  01E2  02CB               	subwf	sprintf@width^(0+128),f
  9264  01E3  0838               	movf	(??_sprintf+3)^(0+128),w
  9265  01E4  1C03               	skipc
  9266  01E5  03CC               	decf	(sprintf@width+1)^(0+128),f
  9267  01E6  02CC               	subwf	(sprintf@width+1)^(0+128),f
  9268                           
  9269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9270  01E7  0851               	movf	sprintf@prec^(0+128),w
  9271  01E8  0452               	iorwf	(sprintf@prec+1)^(0+128),w
  9272  01E9  1903               	btfsc	3,2
  9273  01EA  29EC               	goto	u6921
  9274  01EB  29ED               	goto	u6920
  9275  01EC                     u6921:
  9276  01EC  29F3               	goto	l3992
  9277  01ED                     u6920:
  9278  01ED                     l3990:
  9279                           
  9280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9281  01ED  30FF               	movlw	255
  9282  01EE  07CB               	addwf	sprintf@width^(0+128),f
  9283  01EF  1803               	skipnc
  9284  01F0  0ACC               	incf	(sprintf@width+1)^(0+128),f
  9285  01F1  30FF               	movlw	255
  9286  01F2  07CC               	addwf	(sprintf@width+1)^(0+128),f
  9287  01F3                     l3992:
  9288                           
  9289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9290  01F3  3003               	movlw	3
  9291  01F4  0549               	andwf	sprintf@flag^(0+128),w
  9292  01F5  00B5               	movwf	??_sprintf^(0+128)
  9293  01F6  3000               	movlw	0
  9294  01F7  054A               	andwf	(sprintf@flag+1)^(0+128),w
  9295  01F8  00B6               	movwf	(??_sprintf+1)^(0+128)
  9296  01F9  0835               	movf	??_sprintf^(0+128),w
  9297  01FA  0436               	iorwf	(??_sprintf^(0+128)+1),w
  9298  01FB  1903               	btfsc	3,2
  9299  01FC  29FE               	goto	u6931
  9300  01FD  29FF               	goto	u6930
  9301  01FE                     u6931:
  9302  01FE  2A05               	goto	l3996
  9303  01FF                     u6930:
  9304  01FF                     l3994:
  9305                           
  9306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9307  01FF  30FF               	movlw	255
  9308  0200  07CB               	addwf	sprintf@width^(0+128),f
  9309  0201  1803               	skipnc
  9310  0202  0ACC               	incf	(sprintf@width+1)^(0+128),f
  9311  0203  30FF               	movlw	255
  9312  0204  07CC               	addwf	(sprintf@width+1)^(0+128),f
  9313  0205                     l3996:
  9314                           
  9315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
  9316  0205  1D49               	btfss	sprintf@flag^(0+128),2
  9317  0206  2A08               	goto	u6941
  9318  0207  2A09               	goto	u6940
  9319  0208                     u6941:
  9320  0208  2A55               	goto	l4018
  9321  0209                     u6940:
  9322  0209                     l3998:
  9323                           
  9324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
  9325  0209  3003               	movlw	3
  9326  020A  0549               	andwf	sprintf@flag^(0+128),w
  9327  020B  00B5               	movwf	??_sprintf^(0+128)
  9328  020C  3000               	movlw	0
  9329  020D  054A               	andwf	(sprintf@flag+1)^(0+128),w
  9330  020E  00B6               	movwf	(??_sprintf+1)^(0+128)
  9331  020F  0835               	movf	??_sprintf^(0+128),w
  9332  0210  0436               	iorwf	(??_sprintf^(0+128)+1),w
  9333  0211  1903               	btfsc	3,2
  9334  0212  2A14               	goto	u6951
  9335  0213  2A15               	goto	u6950
  9336  0214                     u6951:
  9337  0214  2A34               	goto	l4010
  9338  0215                     u6950:
  9339  0215                     l4000:
  9340                           
  9341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
  9342  0215  302D               	movlw	45
  9343  0216  00B5               	movwf	??_sprintf^(0+128)
  9344  0217  0853               	movf	sprintf@sp^(0+128),w
  9345  0218  0084               	movwf	4
  9346  0219  0835               	movf	??_sprintf^(0+128),w
  9347  021A  1383               	bcf	3,7	;select IRP bank0
  9348  021B  0080               	movwf	0
  9349  021C                     l4002:
  9350  021C  3001               	movlw	1
  9351  021D  00B5               	movwf	??_sprintf^(0+128)
  9352  021E  0835               	movf	??_sprintf^(0+128),w
  9353  021F  07D3               	addwf	sprintf@sp^(0+128),f
  9354  0220  2A34               	goto	l4010
  9355  0221                     l4004:
  9356                           
  9357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
  9358  0221  3030               	movlw	48
  9359  0222  1683               	bsf	3,5	;RP0=1, select bank1
  9360  0223  1303               	bcf	3,6	;RP1=0, select bank1
  9361  0224  00B5               	movwf	??_sprintf^(0+128)
  9362  0225  0853               	movf	sprintf@sp^(0+128),w
  9363  0226  0084               	movwf	4
  9364  0227  0835               	movf	??_sprintf^(0+128),w
  9365  0228  1383               	bcf	3,7	;select IRP bank0
  9366  0229  0080               	movwf	0
  9367  022A                     l4006:
  9368  022A  3001               	movlw	1
  9369  022B  00B5               	movwf	??_sprintf^(0+128)
  9370  022C  0835               	movf	??_sprintf^(0+128),w
  9371  022D  07D3               	addwf	sprintf@sp^(0+128),f
  9372  022E                     l4008:
  9373                           
  9374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
  9375  022E  30FF               	movlw	255
  9376  022F  07CB               	addwf	sprintf@width^(0+128),f
  9377  0230  1803               	skipnc
  9378  0231  0ACC               	incf	(sprintf@width+1)^(0+128),f
  9379  0232  30FF               	movlw	255
  9380  0233  07CC               	addwf	(sprintf@width+1)^(0+128),f
  9381  0234                     l4010:
  9382                           
  9383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
  9384  0234  084C               	movf	(sprintf@width+1)^(0+128),w
  9385  0235  3A80               	xorlw	128
  9386  0236  00FF               	movwf	btemp+1
  9387  0237  3080               	movlw	128
  9388  0238  027F               	subwf	btemp+1,w
  9389  0239  1D03               	skipz
  9390  023A  2A3D               	goto	u6965
  9391  023B  3001               	movlw	1
  9392  023C  024B               	subwf	sprintf@width^(0+128),w
  9393  023D                     u6965:
  9394  023D  1803               	skipnc
  9395  023E  2A40               	goto	u6961
  9396  023F  2A41               	goto	u6960
  9397  0240                     u6961:
  9398  0240  2A21               	goto	l4004
  9399  0241                     u6960:
  9400  0241  2B22               	goto	l303
  9401  0242                     l4012:
  9402                           
  9403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9404  0242  3020               	movlw	32
  9405  0243  1683               	bsf	3,5	;RP0=1, select bank1
  9406  0244  1303               	bcf	3,6	;RP1=0, select bank1
  9407  0245  00B5               	movwf	??_sprintf^(0+128)
  9408  0246  0853               	movf	sprintf@sp^(0+128),w
  9409  0247  0084               	movwf	4
  9410  0248  0835               	movf	??_sprintf^(0+128),w
  9411  0249  1383               	bcf	3,7	;select IRP bank0
  9412  024A  0080               	movwf	0
  9413  024B                     l4014:
  9414  024B  3001               	movlw	1
  9415  024C  00B5               	movwf	??_sprintf^(0+128)
  9416  024D  0835               	movf	??_sprintf^(0+128),w
  9417  024E  07D3               	addwf	sprintf@sp^(0+128),f
  9418  024F                     l4016:
  9419                           
  9420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
  9421  024F  30FF               	movlw	255
  9422  0250  07CB               	addwf	sprintf@width^(0+128),f
  9423  0251  1803               	skipnc
  9424  0252  0ACC               	incf	(sprintf@width+1)^(0+128),f
  9425  0253  30FF               	movlw	255
  9426  0254  07CC               	addwf	(sprintf@width+1)^(0+128),f
  9427  0255                     l4018:
  9428                           
  9429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9430  0255  084C               	movf	(sprintf@width+1)^(0+128),w
  9431  0256  3A80               	xorlw	128
  9432  0257  00FF               	movwf	btemp+1
  9433  0258  3080               	movlw	128
  9434  0259  027F               	subwf	btemp+1,w
  9435  025A  1D03               	skipz
  9436  025B  2A5E               	goto	u6975
  9437  025C  3001               	movlw	1
  9438  025D  024B               	subwf	sprintf@width^(0+128),w
  9439  025E                     u6975:
  9440  025E  1803               	skipnc
  9441  025F  2A61               	goto	u6971
  9442  0260  2A62               	goto	u6970
  9443  0261                     u6971:
  9444  0261  2A42               	goto	l4012
  9445  0262                     u6970:
  9446  0262                     l4020:
  9447                           
  9448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9449  0262  3003               	movlw	3
  9450  0263  1683               	bsf	3,5	;RP0=1, select bank1
  9451  0264  1303               	bcf	3,6	;RP1=0, select bank1
  9452  0265  0549               	andwf	sprintf@flag^(0+128),w
  9453  0266  00B5               	movwf	??_sprintf^(0+128)
  9454  0267  3000               	movlw	0
  9455  0268  054A               	andwf	(sprintf@flag+1)^(0+128),w
  9456  0269  00B6               	movwf	(??_sprintf+1)^(0+128)
  9457  026A  0835               	movf	??_sprintf^(0+128),w
  9458  026B  0436               	iorwf	(??_sprintf^(0+128)+1),w
  9459  026C  1903               	btfsc	3,2
  9460  026D  2A6F               	goto	u6981
  9461  026E  2A70               	goto	u6980
  9462  026F                     u6981:
  9463  026F  2B22               	goto	l303
  9464  0270                     u6980:
  9465  0270                     l4022:
  9466                           
  9467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9468  0270  302D               	movlw	45
  9469  0271  00B5               	movwf	??_sprintf^(0+128)
  9470  0272  0853               	movf	sprintf@sp^(0+128),w
  9471  0273  0084               	movwf	4
  9472  0274  0835               	movf	??_sprintf^(0+128),w
  9473  0275  1383               	bcf	3,7	;select IRP bank0
  9474  0276  0080               	movwf	0
  9475  0277                     l4024:
  9476  0277  3001               	movlw	1
  9477  0278  00B5               	movwf	??_sprintf^(0+128)
  9478  0279  0835               	movf	??_sprintf^(0+128),w
  9479  027A  07D3               	addwf	sprintf@sp^(0+128),f
  9480  027B  2B22               	goto	l303
  9481  027C                     l4026:
  9482                           
  9483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9484  027C  0854               	movf	sprintf@c^(0+128),w
  9485  027D  00B5               	movwf	??_sprintf^(0+128)
  9486  027E  3001               	movlw	1
  9487  027F                     u6995:
  9488  027F  1003               	clrc
  9489  0280  0DB5               	rlf	??_sprintf^(0+128),f
  9490  0281  3EFF               	addlw	-1
  9491  0282  1D03               	skipz
  9492  0283  2A7F               	goto	u6995
  9493  0284  1003               	clrc
  9494  0285  0D35               	rlf	??_sprintf^(0+128),w
  9495  0286  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9496  0287  0084               	movwf	4
  9497  0288  160A  158A  2000  120A  118A  	fcall	stringdir
  9498  028D  1283               	bcf	3,5	;RP0=0, select bank0
  9499  028E  1303               	bcf	3,6	;RP1=0, select bank0
  9500  028F  00A0               	movwf	___lldiv@divisor
  9501  0290  160A  158A  2000  120A  118A  	fcall	stringdir
  9502  0295  00A1               	movwf	___lldiv@divisor+1
  9503  0296  160A  158A  2000  120A  118A  	fcall	stringdir
  9504  029B  00A2               	movwf	___lldiv@divisor+2
  9505  029C  160A  158A  2000  120A  118A  	fcall	stringdir
  9506  02A1  00A3               	movwf	___lldiv@divisor+3
  9507  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  9508  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  9509  02A4  0842               	movf	(sprintf@val+3)^(0+128),w
  9510  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  9511  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  9512  02A7  00A7               	movwf	___lldiv@dividend+3
  9513  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  9514  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  9515  02AA  0841               	movf	(sprintf@val+2)^(0+128),w
  9516  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  9517  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  9518  02AD  00A6               	movwf	___lldiv@dividend+2
  9519  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  9520  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  9521  02B0  0840               	movf	(sprintf@val+1)^(0+128),w
  9522  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  9523  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  9524  02B3  00A5               	movwf	___lldiv@dividend+1
  9525  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  9526  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  9527  02B6  083F               	movf	sprintf@val^(0+128),w
  9528  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  9529  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  9530  02B9  00A4               	movwf	___lldiv@dividend
  9531  02BA  160A  158A  261B  120A  118A  	fcall	___lldiv
  9532  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  9533  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  9534  02C1  0823               	movf	?___lldiv+3,w
  9535  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  9536  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  9537  02C4  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  9538  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  9539  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  9540  02C7  0822               	movf	?___lldiv+2,w
  9541  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  9542  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  9543  02CA  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  9544  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  9545  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  9546  02CD  0821               	movf	?___lldiv+1,w
  9547  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  9548  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  9549  02D0  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  9550  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  9551  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  9552  02D3  0820               	movf	?___lldiv,w
  9553  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  9554  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  9555  02D6  00C3               	movwf	sprintf@tmpval^(0+128)
  9556  02D7                     l4028:
  9557                           
  9558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9559  02D7  3000               	movlw	0
  9560  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  9561  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  9562  02DA  00A3               	movwf	___llmod@divisor+3
  9563  02DB  3000               	movlw	0
  9564  02DC  00A2               	movwf	___llmod@divisor+2
  9565  02DD  3000               	movlw	0
  9566  02DE  00A1               	movwf	___llmod@divisor+1
  9567  02DF  300A               	movlw	10
  9568  02E0  00A0               	movwf	___llmod@divisor
  9569  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  9570  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  9571  02E3  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  9572  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  9573  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  9574  02E6  00A7               	movwf	___llmod@dividend+3
  9575  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  9576  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  9577  02E9  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  9578  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  9579  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  9580  02EC  00A6               	movwf	___llmod@dividend+2
  9581  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  9582  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  9583  02EF  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  9584  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  9585  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  9586  02F2  00A5               	movwf	___llmod@dividend+1
  9587  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  9588  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  9589  02F5  0843               	movf	sprintf@tmpval^(0+128),w
  9590  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  9591  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  9592  02F8  00A4               	movwf	___llmod@dividend
  9593  02F9  160A  158A  256A  120A  118A  	fcall	___llmod
  9594  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  9595  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  9596  0300  0823               	movf	?___llmod+3,w
  9597  0301  1683               	bsf	3,5	;RP0=1, select bank1
  9598  0302  1303               	bcf	3,6	;RP1=0, select bank1
  9599  0303  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  9600  0304  1283               	bcf	3,5	;RP0=0, select bank0
  9601  0305  1303               	bcf	3,6	;RP1=0, select bank0
  9602  0306  0822               	movf	?___llmod+2,w
  9603  0307  1683               	bsf	3,5	;RP0=1, select bank1
  9604  0308  1303               	bcf	3,6	;RP1=0, select bank1
  9605  0309  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  9606  030A  1283               	bcf	3,5	;RP0=0, select bank0
  9607  030B  1303               	bcf	3,6	;RP1=0, select bank0
  9608  030C  0821               	movf	?___llmod+1,w
  9609  030D  1683               	bsf	3,5	;RP0=1, select bank1
  9610  030E  1303               	bcf	3,6	;RP1=0, select bank1
  9611  030F  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  9612  0310  1283               	bcf	3,5	;RP0=0, select bank0
  9613  0311  1303               	bcf	3,6	;RP1=0, select bank0
  9614  0312  0820               	movf	?___llmod,w
  9615  0313  1683               	bsf	3,5	;RP0=1, select bank1
  9616  0314  1303               	bcf	3,6	;RP1=0, select bank1
  9617  0315  00C3               	movwf	sprintf@tmpval^(0+128)
  9618  0316                     l4030:
  9619                           
  9620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9621  0316  0843               	movf	sprintf@tmpval^(0+128),w
  9622  0317  3E30               	addlw	48
  9623  0318  00B5               	movwf	??_sprintf^(0+128)
  9624  0319  0853               	movf	sprintf@sp^(0+128),w
  9625  031A  0084               	movwf	4
  9626  031B  0835               	movf	??_sprintf^(0+128),w
  9627  031C  1383               	bcf	3,7	;select IRP bank0
  9628  031D  0080               	movwf	0
  9629  031E  3001               	movlw	1
  9630  031F  00B5               	movwf	??_sprintf^(0+128)
  9631  0320  0835               	movf	??_sprintf^(0+128),w
  9632  0321  07D3               	addwf	sprintf@sp^(0+128),f
  9633  0322                     l303:	
  9634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9635                           
  9636                           
  9637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9638  0322  3001               	movlw	1
  9639  0323  1683               	bsf	3,5	;RP0=1, select bank1
  9640  0324  1303               	bcf	3,6	;RP1=0, select bank1
  9641  0325  02D4               	subwf	sprintf@c^(0+128),f
  9642  0326  0A54               	incf	sprintf@c^(0+128),w
  9643  0327  1D03               	btfss	3,2
  9644  0328  2B2A               	goto	u7001
  9645  0329  2B2B               	goto	u7000
  9646  032A                     u7001:
  9647  032A  2A7C               	goto	l4026
  9648  032B                     u7000:
  9649  032B  2B3F               	goto	l4038
  9650  032C                     l4032:
  9651                           
  9652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9653  032C  3030               	movlw	48
  9654  032D  1683               	bsf	3,5	;RP0=1, select bank1
  9655  032E  1303               	bcf	3,6	;RP1=0, select bank1
  9656  032F  00B5               	movwf	??_sprintf^(0+128)
  9657  0330  0853               	movf	sprintf@sp^(0+128),w
  9658  0331  0084               	movwf	4
  9659  0332  0835               	movf	??_sprintf^(0+128),w
  9660  0333  1383               	bcf	3,7	;select IRP bank0
  9661  0334  0080               	movwf	0
  9662  0335                     l4034:
  9663  0335  3001               	movlw	1
  9664  0336  00B5               	movwf	??_sprintf^(0+128)
  9665  0337  0835               	movf	??_sprintf^(0+128),w
  9666  0338  07D3               	addwf	sprintf@sp^(0+128),f
  9667  0339                     l4036:
  9668                           
  9669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9670  0339  30FF               	movlw	255
  9671  033A  07C7               	addwf	sprintf@eexp^(0+128),f
  9672  033B  1803               	skipnc
  9673  033C  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  9674  033D  30FF               	movlw	255
  9675  033E  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  9676  033F                     l4038:
  9677                           
  9678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9679  033F  0848               	movf	(sprintf@eexp+1)^(0+128),w
  9680  0340  3A80               	xorlw	128
  9681  0341  00FF               	movwf	btemp+1
  9682  0342  3080               	movlw	128
  9683  0343  027F               	subwf	btemp+1,w
  9684  0344  1D03               	skipz
  9685  0345  2B48               	goto	u7015
  9686  0346  3001               	movlw	1
  9687  0347  0247               	subwf	sprintf@eexp^(0+128),w
  9688  0348                     u7015:
  9689  0348  1803               	skipnc
  9690  0349  2B4B               	goto	u7011
  9691  034A  2B4C               	goto	u7010
  9692  034B                     u7011:
  9693  034B  2B2C               	goto	l4032
  9694  034C                     u7010:
  9695  034C                     l4040:
  9696                           
  9697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9698  034C  1683               	bsf	3,5	;RP0=1, select bank1
  9699  034D  1303               	bcf	3,6	;RP1=0, select bank1
  9700  034E  0852               	movf	(sprintf@prec+1)^(0+128),w
  9701  034F  3A80               	xorlw	128
  9702  0350  00FF               	movwf	btemp+1
  9703  0351  3080               	movlw	128
  9704  0352  027F               	subwf	btemp+1,w
  9705  0353  1D03               	skipz
  9706  0354  2B57               	goto	u7025
  9707  0355  3009               	movlw	9
  9708  0356  0251               	subwf	sprintf@prec^(0+128),w
  9709  0357                     u7025:
  9710  0357  1C03               	skipc
  9711  0358  2B5A               	goto	u7021
  9712  0359  2B5B               	goto	u7020
  9713  035A                     u7021:
  9714  035A  2B62               	goto	l4044
  9715  035B                     u7020:
  9716  035B                     l4042:
  9717                           
  9718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9719  035B  3008               	movlw	8
  9720  035C  1683               	bsf	3,5	;RP0=1, select bank1
  9721  035D  1303               	bcf	3,6	;RP1=0, select bank1
  9722  035E  00B5               	movwf	??_sprintf^(0+128)
  9723  035F  0835               	movf	??_sprintf^(0+128),w
  9724  0360  00D4               	movwf	sprintf@c^(0+128)
  9725  0361  2B68               	goto	l310
  9726  0362                     l4044:
  9727                           
  9728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9729  0362  1683               	bsf	3,5	;RP0=1, select bank1
  9730  0363  1303               	bcf	3,6	;RP1=0, select bank1
  9731  0364  0851               	movf	sprintf@prec^(0+128),w
  9732  0365  00B5               	movwf	??_sprintf^(0+128)
  9733  0366  0835               	movf	??_sprintf^(0+128),w
  9734  0367  00D4               	movwf	sprintf@c^(0+128)
  9735  0368                     l310:
  9736                           
  9737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9738  0368  0854               	movf	sprintf@c^(0+128),w
  9739  0369  00B5               	movwf	??_sprintf^(0+128)
  9740  036A  01B6               	clrf	(??_sprintf^(0+128)+1)
  9741  036B  0835               	movf	??_sprintf^(0+128),w
  9742  036C  02D1               	subwf	sprintf@prec^(0+128),f
  9743  036D  0836               	movf	(??_sprintf+1)^(0+128),w
  9744  036E  1C03               	skipc
  9745  036F  03D2               	decf	(sprintf@prec+1)^(0+128),f
  9746  0370  02D2               	subwf	(sprintf@prec+1)^(0+128),f
  9747  0371                     l4046:
  9748                           
  9749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9750  0371  0854               	movf	sprintf@c^(0+128),w
  9751  0372  1903               	btfsc	3,2
  9752  0373  2B75               	goto	u7031
  9753  0374  2B76               	goto	u7030
  9754  0375                     u7031:
  9755  0375  2B81               	goto	l4052
  9756  0376                     u7030:
  9757  0376                     l4048:
  9758                           
  9759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9760  0376  302E               	movlw	46
  9761  0377  00B5               	movwf	??_sprintf^(0+128)
  9762  0378  0853               	movf	sprintf@sp^(0+128),w
  9763  0379  0084               	movwf	4
  9764  037A  0835               	movf	??_sprintf^(0+128),w
  9765  037B  1383               	bcf	3,7	;select IRP bank0
  9766  037C  0080               	movwf	0
  9767  037D                     l4050:
  9768  037D  3001               	movlw	1
  9769  037E  00B5               	movwf	??_sprintf^(0+128)
  9770  037F  0835               	movf	??_sprintf^(0+128),w
  9771  0380  07D3               	addwf	sprintf@sp^(0+128),f
  9772  0381                     l4052:
  9773                           
  9774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9775  0381  0854               	movf	sprintf@c^(0+128),w
  9776  0382  120A  158A  249D  120A  118A  	fcall	_scale
  9777  0387  1283               	bcf	3,5	;RP0=0, select bank0
  9778  0388  1303               	bcf	3,6	;RP1=0, select bank0
  9779  0389  0847               	movf	?_scale+3,w
  9780  038A  1683               	bsf	3,5	;RP0=1, select bank1
  9781  038B  1303               	bcf	3,6	;RP1=0, select bank1
  9782  038C  00BD               	movwf	(_sprintf$1113+3)^(0+128)
  9783  038D  1283               	bcf	3,5	;RP0=0, select bank0
  9784  038E  1303               	bcf	3,6	;RP1=0, select bank0
  9785  038F  0846               	movf	?_scale+2,w
  9786  0390  1683               	bsf	3,5	;RP0=1, select bank1
  9787  0391  1303               	bcf	3,6	;RP1=0, select bank1
  9788  0392  00BC               	movwf	(_sprintf$1113+2)^(0+128)
  9789  0393  1283               	bcf	3,5	;RP0=0, select bank0
  9790  0394  1303               	bcf	3,6	;RP1=0, select bank0
  9791  0395  0845               	movf	?_scale+1,w
  9792  0396  1683               	bsf	3,5	;RP0=1, select bank1
  9793  0397  1303               	bcf	3,6	;RP1=0, select bank1
  9794  0398  00BB               	movwf	(_sprintf$1113+1)^(0+128)
  9795  0399  1283               	bcf	3,5	;RP0=0, select bank0
  9796  039A  1303               	bcf	3,6	;RP1=0, select bank0
  9797  039B  0844               	movf	?_scale,w
  9798  039C  1683               	bsf	3,5	;RP0=1, select bank1
  9799  039D  1303               	bcf	3,6	;RP1=0, select bank1
  9800  039E  00BA               	movwf	_sprintf$1113^(0+128)
  9801  039F                     l4054:
  9802                           
  9803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9804  039F  083D               	movf	(_sprintf$1113+3)^(0+128),w
  9805  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  9806  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  9807  03A2  00B1               	movwf	___flmul@a+3
  9808  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  9809  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  9810  03A5  083C               	movf	(_sprintf$1113+2)^(0+128),w
  9811  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  9812  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  9813  03A8  00B0               	movwf	___flmul@a+2
  9814  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  9815  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  9816  03AB  083B               	movf	(_sprintf$1113+1)^(0+128),w
  9817  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  9818  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  9819  03AE  00AF               	movwf	___flmul@a+1
  9820  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  9821  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  9822  03B1  083A               	movf	_sprintf$1113^(0+128),w
  9823  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  9824  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  9825  03B4  00AE               	movwf	___flmul@a
  9826  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  9827  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  9828  03B7  0850               	movf	(sprintf@fval+3)^(0+128),w
  9829  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  9830  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  9831  03BA  00AD               	movwf	___flmul@b+3
  9832  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  9833  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  9834  03BD  084F               	movf	(sprintf@fval+2)^(0+128),w
  9835  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  9836  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  9837  03C0  00AC               	movwf	___flmul@b+2
  9838  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  9839  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  9840  03C3  084E               	movf	(sprintf@fval+1)^(0+128),w
  9841  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  9842  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  9843  03C6  00AB               	movwf	___flmul@b+1
  9844  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  9845  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  9846  03C9  084D               	movf	sprintf@fval^(0+128),w
  9847  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  9848  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  9849  03CC  00AA               	movwf	___flmul@b
  9850  03CD  120A  158A  213C  120A  118A  	fcall	___flmul
  9851  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  9852  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  9853  03D4  082D               	movf	?___flmul+3,w
  9854  03D5  00DA               	movwf	___fltol@f1+3
  9855  03D6  082C               	movf	?___flmul+2,w
  9856  03D7  00D9               	movwf	___fltol@f1+2
  9857  03D8  082B               	movf	?___flmul+1,w
  9858  03D9  00D8               	movwf	___fltol@f1+1
  9859  03DA  082A               	movf	?___flmul,w
  9860  03DB  00D7               	movwf	___fltol@f1
  9861  03DC  120A  158A  2004  120A  118A  	fcall	___fltol
  9862  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  9863  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  9864  03E3  085A               	movf	?___fltol+3,w
  9865  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  9866  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  9867  03E6  00C2               	movwf	(sprintf@val+3)^(0+128)
  9868  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  9869  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  9870  03E9  0859               	movf	?___fltol+2,w
  9871  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  9872  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  9873  03EC  00C1               	movwf	(sprintf@val+2)^(0+128)
  9874  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  9875  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  9876  03EF  0858               	movf	?___fltol+1,w
  9877  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  9878  03F1  1303               	bcf	3,6	;RP1=0, select bank1
  9879  03F2  00C0               	movwf	(sprintf@val+1)^(0+128)
  9880  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  9881  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  9882  03F5  0857               	movf	?___fltol,w
  9883  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  9884  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  9885  03F8  00BF               	movwf	sprintf@val^(0+128)
  9886                           
  9887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9888  03F9  2CFB               	goto	l4064
  9889  03FA                     l4056:
  9890                           
  9891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9892  03FA  0854               	movf	sprintf@c^(0+128),w
  9893  03FB  00B5               	movwf	??_sprintf^(0+128)
  9894  03FC  3001               	movlw	1
  9895  03FD                     u7045:
  9896  03FD  1003               	clrc
  9897  03FE  0DB5               	rlf	??_sprintf^(0+128),f
  9898  03FF  3EFF               	addlw	-1
  9899  0400  1D03               	skipz
  9900  0401  2BFD               	goto	u7045
  9901  0402  1003               	clrc
  9902  0403  0D35               	rlf	??_sprintf^(0+128),w
  9903  0404  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9904  0405  0084               	movwf	4
  9905  0406  160A  158A  2000  120A  118A  	fcall	stringdir
  9906  040B  1283               	bcf	3,5	;RP0=0, select bank0
  9907  040C  1303               	bcf	3,6	;RP1=0, select bank0
  9908  040D  00A0               	movwf	___lldiv@divisor
  9909  040E  160A  158A  2000  120A  118A  	fcall	stringdir
  9910  0413  00A1               	movwf	___lldiv@divisor+1
  9911  0414  160A  158A  2000  120A  118A  	fcall	stringdir
  9912  0419  00A2               	movwf	___lldiv@divisor+2
  9913  041A  160A  158A  2000  120A  118A  	fcall	stringdir
  9914  041F  00A3               	movwf	___lldiv@divisor+3
  9915  0420  1683               	bsf	3,5	;RP0=1, select bank1
  9916  0421  1303               	bcf	3,6	;RP1=0, select bank1
  9917  0422  0842               	movf	(sprintf@val+3)^(0+128),w
  9918  0423  1283               	bcf	3,5	;RP0=0, select bank0
  9919  0424  1303               	bcf	3,6	;RP1=0, select bank0
  9920  0425  00A7               	movwf	___lldiv@dividend+3
  9921  0426  1683               	bsf	3,5	;RP0=1, select bank1
  9922  0427  1303               	bcf	3,6	;RP1=0, select bank1
  9923  0428  0841               	movf	(sprintf@val+2)^(0+128),w
  9924  0429  1283               	bcf	3,5	;RP0=0, select bank0
  9925  042A  1303               	bcf	3,6	;RP1=0, select bank0
  9926  042B  00A6               	movwf	___lldiv@dividend+2
  9927  042C  1683               	bsf	3,5	;RP0=1, select bank1
  9928  042D  1303               	bcf	3,6	;RP1=0, select bank1
  9929  042E  0840               	movf	(sprintf@val+1)^(0+128),w
  9930  042F  1283               	bcf	3,5	;RP0=0, select bank0
  9931  0430  1303               	bcf	3,6	;RP1=0, select bank0
  9932  0431  00A5               	movwf	___lldiv@dividend+1
  9933  0432  1683               	bsf	3,5	;RP0=1, select bank1
  9934  0433  1303               	bcf	3,6	;RP1=0, select bank1
  9935  0434  083F               	movf	sprintf@val^(0+128),w
  9936  0435  1283               	bcf	3,5	;RP0=0, select bank0
  9937  0436  1303               	bcf	3,6	;RP1=0, select bank0
  9938  0437  00A4               	movwf	___lldiv@dividend
  9939  0438  160A  158A  261B  120A  118A  	fcall	___lldiv
  9940  043D  1283               	bcf	3,5	;RP0=0, select bank0
  9941  043E  1303               	bcf	3,6	;RP1=0, select bank0
  9942  043F  0823               	movf	?___lldiv+3,w
  9943  0440  1683               	bsf	3,5	;RP0=1, select bank1
  9944  0441  1303               	bcf	3,6	;RP1=0, select bank1
  9945  0442  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  9946  0443  1283               	bcf	3,5	;RP0=0, select bank0
  9947  0444  1303               	bcf	3,6	;RP1=0, select bank0
  9948  0445  0822               	movf	?___lldiv+2,w
  9949  0446  1683               	bsf	3,5	;RP0=1, select bank1
  9950  0447  1303               	bcf	3,6	;RP1=0, select bank1
  9951  0448  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  9952  0449  1283               	bcf	3,5	;RP0=0, select bank0
  9953  044A  1303               	bcf	3,6	;RP1=0, select bank0
  9954  044B  0821               	movf	?___lldiv+1,w
  9955  044C  1683               	bsf	3,5	;RP0=1, select bank1
  9956  044D  1303               	bcf	3,6	;RP1=0, select bank1
  9957  044E  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  9958  044F  1283               	bcf	3,5	;RP0=0, select bank0
  9959  0450  1303               	bcf	3,6	;RP1=0, select bank0
  9960  0451  0820               	movf	?___lldiv,w
  9961  0452  1683               	bsf	3,5	;RP0=1, select bank1
  9962  0453  1303               	bcf	3,6	;RP1=0, select bank1
  9963  0454  00C3               	movwf	sprintf@tmpval^(0+128)
  9964  0455                     l4058:
  9965                           
  9966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9967  0455  3000               	movlw	0
  9968  0456  1283               	bcf	3,5	;RP0=0, select bank0
  9969  0457  1303               	bcf	3,6	;RP1=0, select bank0
  9970  0458  00A3               	movwf	___llmod@divisor+3
  9971  0459  3000               	movlw	0
  9972  045A  00A2               	movwf	___llmod@divisor+2
  9973  045B  3000               	movlw	0
  9974  045C  00A1               	movwf	___llmod@divisor+1
  9975  045D  300A               	movlw	10
  9976  045E  00A0               	movwf	___llmod@divisor
  9977  045F  1683               	bsf	3,5	;RP0=1, select bank1
  9978  0460  1303               	bcf	3,6	;RP1=0, select bank1
  9979  0461  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  9980  0462  1283               	bcf	3,5	;RP0=0, select bank0
  9981  0463  1303               	bcf	3,6	;RP1=0, select bank0
  9982  0464  00A7               	movwf	___llmod@dividend+3
  9983  0465  1683               	bsf	3,5	;RP0=1, select bank1
  9984  0466  1303               	bcf	3,6	;RP1=0, select bank1
  9985  0467  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  9986  0468  1283               	bcf	3,5	;RP0=0, select bank0
  9987  0469  1303               	bcf	3,6	;RP1=0, select bank0
  9988  046A  00A6               	movwf	___llmod@dividend+2
  9989  046B  1683               	bsf	3,5	;RP0=1, select bank1
  9990  046C  1303               	bcf	3,6	;RP1=0, select bank1
  9991  046D  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  9992  046E  1283               	bcf	3,5	;RP0=0, select bank0
  9993  046F  1303               	bcf	3,6	;RP1=0, select bank0
  9994  0470  00A5               	movwf	___llmod@dividend+1
  9995  0471  1683               	bsf	3,5	;RP0=1, select bank1
  9996  0472  1303               	bcf	3,6	;RP1=0, select bank1
  9997  0473  0843               	movf	sprintf@tmpval^(0+128),w
  9998  0474  1283               	bcf	3,5	;RP0=0, select bank0
  9999  0475  1303               	bcf	3,6	;RP1=0, select bank0
 10000  0476  00A4               	movwf	___llmod@dividend
 10001  0477  160A  158A  256A  120A  118A  	fcall	___llmod
 10002  047C  1283               	bcf	3,5	;RP0=0, select bank0
 10003  047D  1303               	bcf	3,6	;RP1=0, select bank0
 10004  047E  0823               	movf	?___llmod+3,w
 10005  047F  1683               	bsf	3,5	;RP0=1, select bank1
 10006  0480  1303               	bcf	3,6	;RP1=0, select bank1
 10007  0481  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
 10008  0482  1283               	bcf	3,5	;RP0=0, select bank0
 10009  0483  1303               	bcf	3,6	;RP1=0, select bank0
 10010  0484  0822               	movf	?___llmod+2,w
 10011  0485  1683               	bsf	3,5	;RP0=1, select bank1
 10012  0486  1303               	bcf	3,6	;RP1=0, select bank1
 10013  0487  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
 10014  0488  1283               	bcf	3,5	;RP0=0, select bank0
 10015  0489  1303               	bcf	3,6	;RP1=0, select bank0
 10016  048A  0821               	movf	?___llmod+1,w
 10017  048B  1683               	bsf	3,5	;RP0=1, select bank1
 10018  048C  1303               	bcf	3,6	;RP1=0, select bank1
 10019  048D  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
 10020  048E  1283               	bcf	3,5	;RP0=0, select bank0
 10021  048F  1303               	bcf	3,6	;RP1=0, select bank0
 10022  0490  0820               	movf	?___llmod,w
 10023  0491  1683               	bsf	3,5	;RP0=1, select bank1
 10024  0492  1303               	bcf	3,6	;RP1=0, select bank1
 10025  0493  00C3               	movwf	sprintf@tmpval^(0+128)
 10026  0494                     l4060:
 10027                           
 10028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10029  0494  0843               	movf	sprintf@tmpval^(0+128),w
 10030  0495  3E30               	addlw	48
 10031  0496  00B5               	movwf	??_sprintf^(0+128)
 10032  0497  0853               	movf	sprintf@sp^(0+128),w
 10033  0498  0084               	movwf	4
 10034  0499  0835               	movf	??_sprintf^(0+128),w
 10035  049A  1383               	bcf	3,7	;select IRP bank0
 10036  049B  0080               	movwf	0
 10037  049C  3001               	movlw	1
 10038  049D  00B5               	movwf	??_sprintf^(0+128)
 10039  049E  0835               	movf	??_sprintf^(0+128),w
 10040  049F  07D3               	addwf	sprintf@sp^(0+128),f
 10041  04A0                     l4062:
 10042                           
 10043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10044  04A0  0854               	movf	sprintf@c^(0+128),w
 10045  04A1  00B5               	movwf	??_sprintf^(0+128)
 10046  04A2  3001               	movlw	1
 10047  04A3                     u7055:
 10048  04A3  1003               	clrc
 10049  04A4  0DB5               	rlf	??_sprintf^(0+128),f
 10050  04A5  3EFF               	addlw	-1
 10051  04A6  1D03               	skipz
 10052  04A7  2CA3               	goto	u7055
 10053  04A8  1003               	clrc
 10054  04A9  0D35               	rlf	??_sprintf^(0+128),w
 10055  04AA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10056  04AB  0084               	movwf	4
 10057  04AC  160A  158A  2000  120A  118A  	fcall	stringdir
 10058  04B1  1283               	bcf	3,5	;RP0=0, select bank0
 10059  04B2  1303               	bcf	3,6	;RP1=0, select bank0
 10060  04B3  00A0               	movwf	___llmod@divisor
 10061  04B4  160A  158A  2000  120A  118A  	fcall	stringdir
 10062  04B9  00A1               	movwf	___llmod@divisor+1
 10063  04BA  160A  158A  2000  120A  118A  	fcall	stringdir
 10064  04BF  00A2               	movwf	___llmod@divisor+2
 10065  04C0  160A  158A  2000  120A  118A  	fcall	stringdir
 10066  04C5  00A3               	movwf	___llmod@divisor+3
 10067  04C6  1683               	bsf	3,5	;RP0=1, select bank1
 10068  04C7  1303               	bcf	3,6	;RP1=0, select bank1
 10069  04C8  0842               	movf	(sprintf@val+3)^(0+128),w
 10070  04C9  1283               	bcf	3,5	;RP0=0, select bank0
 10071  04CA  1303               	bcf	3,6	;RP1=0, select bank0
 10072  04CB  00A7               	movwf	___llmod@dividend+3
 10073  04CC  1683               	bsf	3,5	;RP0=1, select bank1
 10074  04CD  1303               	bcf	3,6	;RP1=0, select bank1
 10075  04CE  0841               	movf	(sprintf@val+2)^(0+128),w
 10076  04CF  1283               	bcf	3,5	;RP0=0, select bank0
 10077  04D0  1303               	bcf	3,6	;RP1=0, select bank0
 10078  04D1  00A6               	movwf	___llmod@dividend+2
 10079  04D2  1683               	bsf	3,5	;RP0=1, select bank1
 10080  04D3  1303               	bcf	3,6	;RP1=0, select bank1
 10081  04D4  0840               	movf	(sprintf@val+1)^(0+128),w
 10082  04D5  1283               	bcf	3,5	;RP0=0, select bank0
 10083  04D6  1303               	bcf	3,6	;RP1=0, select bank0
 10084  04D7  00A5               	movwf	___llmod@dividend+1
 10085  04D8  1683               	bsf	3,5	;RP0=1, select bank1
 10086  04D9  1303               	bcf	3,6	;RP1=0, select bank1
 10087  04DA  083F               	movf	sprintf@val^(0+128),w
 10088  04DB  1283               	bcf	3,5	;RP0=0, select bank0
 10089  04DC  1303               	bcf	3,6	;RP1=0, select bank0
 10090  04DD  00A4               	movwf	___llmod@dividend
 10091  04DE  160A  158A  256A  120A  118A  	fcall	___llmod
 10092  04E3  1283               	bcf	3,5	;RP0=0, select bank0
 10093  04E4  1303               	bcf	3,6	;RP1=0, select bank0
 10094  04E5  0823               	movf	?___llmod+3,w
 10095  04E6  1683               	bsf	3,5	;RP0=1, select bank1
 10096  04E7  1303               	bcf	3,6	;RP1=0, select bank1
 10097  04E8  00C2               	movwf	(sprintf@val+3)^(0+128)
 10098  04E9  1283               	bcf	3,5	;RP0=0, select bank0
 10099  04EA  1303               	bcf	3,6	;RP1=0, select bank0
 10100  04EB  0822               	movf	?___llmod+2,w
 10101  04EC  1683               	bsf	3,5	;RP0=1, select bank1
 10102  04ED  1303               	bcf	3,6	;RP1=0, select bank1
 10103  04EE  00C1               	movwf	(sprintf@val+2)^(0+128)
 10104  04EF  1283               	bcf	3,5	;RP0=0, select bank0
 10105  04F0  1303               	bcf	3,6	;RP1=0, select bank0
 10106  04F1  0821               	movf	?___llmod+1,w
 10107  04F2  1683               	bsf	3,5	;RP0=1, select bank1
 10108  04F3  1303               	bcf	3,6	;RP1=0, select bank1
 10109  04F4  00C0               	movwf	(sprintf@val+1)^(0+128)
 10110  04F5  1283               	bcf	3,5	;RP0=0, select bank0
 10111  04F6  1303               	bcf	3,6	;RP1=0, select bank0
 10112  04F7  0820               	movf	?___llmod,w
 10113  04F8  1683               	bsf	3,5	;RP0=1, select bank1
 10114  04F9  1303               	bcf	3,6	;RP1=0, select bank1
 10115  04FA  00BF               	movwf	sprintf@val^(0+128)
 10116  04FB                     l4064:
 10117                           
 10118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10119  04FB  3001               	movlw	1
 10120  04FC  02D4               	subwf	sprintf@c^(0+128),f
 10121  04FD  0A54               	incf	sprintf@c^(0+128),w
 10122  04FE  1D03               	btfss	3,2
 10123  04FF  2D01               	goto	u7061
 10124  0500  2D02               	goto	u7060
 10125  0501                     u7061:
 10126  0501  2BFA               	goto	l4056
 10127  0502                     u7060:
 10128  0502  2D14               	goto	l4072
 10129  0503                     l4066:
 10130                           
 10131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10132  0503  3030               	movlw	48
 10133  0504  00B5               	movwf	??_sprintf^(0+128)
 10134  0505  0853               	movf	sprintf@sp^(0+128),w
 10135  0506  0084               	movwf	4
 10136  0507  0835               	movf	??_sprintf^(0+128),w
 10137  0508  1383               	bcf	3,7	;select IRP bank0
 10138  0509  0080               	movwf	0
 10139  050A                     l4068:
 10140  050A  3001               	movlw	1
 10141  050B  00B5               	movwf	??_sprintf^(0+128)
 10142  050C  0835               	movf	??_sprintf^(0+128),w
 10143  050D  07D3               	addwf	sprintf@sp^(0+128),f
 10144  050E                     l4070:
 10145                           
 10146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10147  050E  30FF               	movlw	255
 10148  050F  07D1               	addwf	sprintf@prec^(0+128),f
 10149  0510  1803               	skipnc
 10150  0511  0AD2               	incf	(sprintf@prec+1)^(0+128),f
 10151  0512  30FF               	movlw	255
 10152  0513  07D2               	addwf	(sprintf@prec+1)^(0+128),f
 10153  0514                     l4072:
 10154                           
 10155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10156  0514  0851               	movf	sprintf@prec^(0+128),w
 10157  0515  0452               	iorwf	(sprintf@prec+1)^(0+128),w
 10158  0516  1D03               	btfss	3,2
 10159  0517  2D19               	goto	u7071
 10160  0518  2D1A               	goto	u7070
 10161  0519                     u7071:
 10162  0519  2D03               	goto	l4066
 10163  051A                     u7070:
 10164  051A  2E19               	goto	l4136
 10165  051B                     l4074:
 10166                           
 10167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10168  051B  0851               	movf	sprintf@prec^(0+128),w
 10169  051C  0452               	iorwf	(sprintf@prec+1)^(0+128),w
 10170  051D  1D03               	btfss	3,2
 10171  051E  2D20               	goto	u7081
 10172  051F  2D21               	goto	u7080
 10173  0520                     u7081:
 10174  0520  2D2F               	goto	l318
 10175  0521                     u7080:
 10176  0521                     l4076:
 10177  0521  0842               	movf	(sprintf@val+3)^(0+128),w
 10178  0522  0441               	iorwf	(sprintf@val+2)^(0+128),w
 10179  0523  0440               	iorwf	(sprintf@val+1)^(0+128),w
 10180  0524  043F               	iorwf	sprintf@val^(0+128),w
 10181  0525  1D03               	skipz
 10182  0526  2D28               	goto	u7091
 10183  0527  2D29               	goto	u7090
 10184  0528                     u7091:
 10185  0528  2D2F               	goto	l318
 10186  0529                     u7090:
 10187  0529                     l4078:
 10188                           
 10189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10190  0529  3001               	movlw	1
 10191  052A  07D1               	addwf	sprintf@prec^(0+128),f
 10192  052B  1803               	skipnc
 10193  052C  0AD2               	incf	(sprintf@prec+1)^(0+128),f
 10194  052D  3000               	movlw	0
 10195  052E  07D2               	addwf	(sprintf@prec+1)^(0+128),f
 10196  052F                     l318:
 10197                           
 10198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10199  052F  0852               	movf	(sprintf@prec+1)^(0+128),w
 10200  0530  3A80               	xorlw	128
 10201  0531  3C80               	sublw	128
 10202  0532  1D03               	skipz
 10203  0533  2D36               	goto	u7105
 10204  0534  0851               	movf	sprintf@prec^(0+128),w
 10205  0535  0254               	subwf	sprintf@c^(0+128),w
 10206  0536                     u7105:
 10207  0536  1803               	skipnc
 10208  0537  2D39               	goto	u7101
 10209  0538  2D3A               	goto	u7100
 10210  0539                     u7101:
 10211  0539  2D41               	goto	l4082
 10212  053A                     u7100:
 10213  053A                     l4080:
 10214                           
 10215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10216  053A  1683               	bsf	3,5	;RP0=1, select bank1
 10217  053B  1303               	bcf	3,6	;RP1=0, select bank1
 10218  053C  0851               	movf	sprintf@prec^(0+128),w
 10219  053D  00B5               	movwf	??_sprintf^(0+128)
 10220  053E  0835               	movf	??_sprintf^(0+128),w
 10221  053F  00D4               	movwf	sprintf@c^(0+128)
 10222  0540  2D59               	goto	l4086
 10223  0541                     l4082:
 10224  0541  1683               	bsf	3,5	;RP0=1, select bank1
 10225  0542  1303               	bcf	3,6	;RP1=0, select bank1
 10226  0543  0852               	movf	(sprintf@prec+1)^(0+128),w
 10227  0544  3A80               	xorlw	128
 10228  0545  00B5               	movwf	??_sprintf^(0+128)
 10229  0546  3080               	movlw	128
 10230  0547  0235               	subwf	??_sprintf^(0+128),w
 10231  0548  1D03               	skipz
 10232  0549  2D4C               	goto	u7115
 10233  054A  0854               	movf	sprintf@c^(0+128),w
 10234  054B  0251               	subwf	sprintf@prec^(0+128),w
 10235  054C                     u7115:
 10236  054C  1803               	skipnc
 10237  054D  2D4F               	goto	u7111
 10238  054E  2D50               	goto	u7110
 10239  054F                     u7111:
 10240  054F  2D59               	goto	l4086
 10241  0550                     u7110:
 10242  0550                     l4084:
 10243                           
 10244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10245  0550  1683               	bsf	3,5	;RP0=1, select bank1
 10246  0551  1303               	bcf	3,6	;RP1=0, select bank1
 10247  0552  0854               	movf	sprintf@c^(0+128),w
 10248  0553  00B5               	movwf	??_sprintf^(0+128)
 10249  0554  01B6               	clrf	(??_sprintf^(0+128)+1)
 10250  0555  0835               	movf	??_sprintf^(0+128),w
 10251  0556  00D1               	movwf	sprintf@prec^(0+128)
 10252  0557  0836               	movf	(??_sprintf+1)^(0+128),w
 10253  0558  00D2               	movwf	(sprintf@prec+1)^(0+128)
 10254  0559                     l4086:
 10255                           
 10256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10257  0559  1683               	bsf	3,5	;RP0=1, select bank1
 10258  055A  1303               	bcf	3,6	;RP1=0, select bank1
 10259  055B  084B               	movf	sprintf@width^(0+128),w
 10260  055C  044C               	iorwf	(sprintf@width+1)^(0+128),w
 10261  055D  1903               	btfsc	3,2
 10262  055E  2D60               	goto	u7121
 10263  055F  2D61               	goto	u7120
 10264  0560                     u7121:
 10265  0560  2D73               	goto	l4092
 10266  0561                     u7120:
 10267  0561                     l4088:
 10268  0561  3003               	movlw	3
 10269  0562  0549               	andwf	sprintf@flag^(0+128),w
 10270  0563  00B5               	movwf	??_sprintf^(0+128)
 10271  0564  3000               	movlw	0
 10272  0565  054A               	andwf	(sprintf@flag+1)^(0+128),w
 10273  0566  00B6               	movwf	(??_sprintf+1)^(0+128)
 10274  0567  0835               	movf	??_sprintf^(0+128),w
 10275  0568  0436               	iorwf	(??_sprintf^(0+128)+1),w
 10276  0569  1903               	btfsc	3,2
 10277  056A  2D6C               	goto	u7131
 10278  056B  2D6D               	goto	u7130
 10279  056C                     u7131:
 10280  056C  2D73               	goto	l4092
 10281  056D                     u7130:
 10282  056D                     l4090:
 10283                           
 10284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10285  056D  30FF               	movlw	255
 10286  056E  07CB               	addwf	sprintf@width^(0+128),f
 10287  056F  1803               	skipnc
 10288  0570  0ACC               	incf	(sprintf@width+1)^(0+128),f
 10289  0571  30FF               	movlw	255
 10290  0572  07CC               	addwf	(sprintf@width+1)^(0+128),f
 10291  0573                     l4092:
 10292                           
 10293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10294  0573  1F4A               	btfss	(sprintf@flag+1)^(0+128),6
 10295  0574  2D76               	goto	u7141
 10296  0575  2D77               	goto	u7140
 10297  0576                     u7141:
 10298  0576  2D92               	goto	l4100
 10299  0577                     u7140:
 10300  0577                     l4094:
 10301                           
 10302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10303  0577  0852               	movf	(sprintf@prec+1)^(0+128),w
 10304  0578  3A80               	xorlw	128
 10305  0579  00B5               	movwf	??_sprintf^(0+128)
 10306  057A  084C               	movf	(sprintf@width+1)^(0+128),w
 10307  057B  3A80               	xorlw	128
 10308  057C  0235               	subwf	??_sprintf^(0+128),w
 10309  057D  1D03               	skipz
 10310  057E  2D81               	goto	u7155
 10311  057F  084B               	movf	sprintf@width^(0+128),w
 10312  0580  0251               	subwf	sprintf@prec^(0+128),w
 10313  0581                     u7155:
 10314  0581  1803               	skipnc
 10315  0582  2D84               	goto	u7151
 10316  0583  2D85               	goto	u7150
 10317  0584                     u7151:
 10318  0584  2D8E               	goto	l4098
 10319  0585                     u7150:
 10320  0585                     l4096:
 10321                           
 10322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10323  0585  1683               	bsf	3,5	;RP0=1, select bank1
 10324  0586  1303               	bcf	3,6	;RP1=0, select bank1
 10325  0587  0851               	movf	sprintf@prec^(0+128),w
 10326  0588  02CB               	subwf	sprintf@width^(0+128),f
 10327  0589  0852               	movf	(sprintf@prec+1)^(0+128),w
 10328  058A  1C03               	skipc
 10329  058B  03CC               	decf	(sprintf@width+1)^(0+128),f
 10330  058C  02CC               	subwf	(sprintf@width+1)^(0+128),f
 10331  058D  2D92               	goto	l4100
 10332  058E                     l4098:
 10333                           
 10334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10335  058E  1683               	bsf	3,5	;RP0=1, select bank1
 10336  058F  1303               	bcf	3,6	;RP1=0, select bank1
 10337  0590  01CB               	clrf	sprintf@width^(0+128)
 10338  0591  01CC               	clrf	(sprintf@width+1)^(0+128)
 10339  0592                     l4100:
 10340                           
 10341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10342  0592  084C               	movf	(sprintf@width+1)^(0+128),w
 10343  0593  3A80               	xorlw	128
 10344  0594  3C80               	sublw	128
 10345  0595  1D03               	skipz
 10346  0596  2D99               	goto	u7165
 10347  0597  084B               	movf	sprintf@width^(0+128),w
 10348  0598  0254               	subwf	sprintf@c^(0+128),w
 10349  0599                     u7165:
 10350  0599  1803               	skipnc
 10351  059A  2D9C               	goto	u7161
 10352  059B  2D9D               	goto	u7160
 10353  059C                     u7161:
 10354  059C  2DA9               	goto	l4104
 10355  059D                     u7160:
 10356  059D                     l4102:
 10357                           
 10358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10359  059D  1683               	bsf	3,5	;RP0=1, select bank1
 10360  059E  1303               	bcf	3,6	;RP1=0, select bank1
 10361  059F  0854               	movf	sprintf@c^(0+128),w
 10362  05A0  00B5               	movwf	??_sprintf^(0+128)
 10363  05A1  01B6               	clrf	(??_sprintf^(0+128)+1)
 10364  05A2  0835               	movf	??_sprintf^(0+128),w
 10365  05A3  02CB               	subwf	sprintf@width^(0+128),f
 10366  05A4  0836               	movf	(??_sprintf+1)^(0+128),w
 10367  05A5  1C03               	skipc
 10368  05A6  03CC               	decf	(sprintf@width+1)^(0+128),f
 10369  05A7  02CC               	subwf	(sprintf@width+1)^(0+128),f
 10370  05A8  2DAD               	goto	l4106
 10371  05A9                     l4104:
 10372                           
 10373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10374  05A9  1683               	bsf	3,5	;RP0=1, select bank1
 10375  05AA  1303               	bcf	3,6	;RP1=0, select bank1
 10376  05AB  01CB               	clrf	sprintf@width^(0+128)
 10377  05AC  01CC               	clrf	(sprintf@width+1)^(0+128)
 10378  05AD                     l4106:
 10379                           
 10380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
 10381  05AD  1D49               	btfss	sprintf@flag^(0+128),2
 10382  05AE  2DB0               	goto	u7171
 10383  05AF  2DB1               	goto	u7170
 10384  05B0                     u7171:
 10385  05B0  2DE6               	goto	l4122
 10386  05B1                     u7170:
 10387  05B1                     l4108:
 10388                           
 10389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
 10390  05B1  3003               	movlw	3
 10391  05B2  0549               	andwf	sprintf@flag^(0+128),w
 10392  05B3  00B5               	movwf	??_sprintf^(0+128)
 10393  05B4  3000               	movlw	0
 10394  05B5  054A               	andwf	(sprintf@flag+1)^(0+128),w
 10395  05B6  00B6               	movwf	(??_sprintf+1)^(0+128)
 10396  05B7  0835               	movf	??_sprintf^(0+128),w
 10397  05B8  0436               	iorwf	(??_sprintf^(0+128)+1),w
 10398  05B9  1903               	btfsc	3,2
 10399  05BA  2DBC               	goto	u7181
 10400  05BB  2DBD               	goto	u7180
 10401  05BC                     u7181:
 10402  05BC  2DC8               	goto	l4114
 10403  05BD                     u7180:
 10404  05BD                     l4110:
 10405                           
 10406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
 10407  05BD  302D               	movlw	45
 10408  05BE  00B5               	movwf	??_sprintf^(0+128)
 10409  05BF  0853               	movf	sprintf@sp^(0+128),w
 10410  05C0  0084               	movwf	4
 10411  05C1  0835               	movf	??_sprintf^(0+128),w
 10412  05C2  1383               	bcf	3,7	;select IRP bank0
 10413  05C3  0080               	movwf	0
 10414  05C4                     l4112:
 10415  05C4  3001               	movlw	1
 10416  05C5  00B5               	movwf	??_sprintf^(0+128)
 10417  05C6  0835               	movf	??_sprintf^(0+128),w
 10418  05C7  07D3               	addwf	sprintf@sp^(0+128),f
 10419  05C8                     l4114:
 10420                           
 10421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
 10422  05C8  084B               	movf	sprintf@width^(0+128),w
 10423  05C9  044C               	iorwf	(sprintf@width+1)^(0+128),w
 10424  05CA  1903               	btfsc	3,2
 10425  05CB  2DCD               	goto	u7191
 10426  05CC  2DCE               	goto	u7190
 10427  05CD                     u7191:
 10428  05CD  2E19               	goto	l4136
 10429  05CE                     u7190:
 10430  05CE                     l4116:
 10431                           
 10432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
 10433  05CE  3030               	movlw	48
 10434  05CF  00B5               	movwf	??_sprintf^(0+128)
 10435  05D0  0853               	movf	sprintf@sp^(0+128),w
 10436  05D1  0084               	movwf	4
 10437  05D2  0835               	movf	??_sprintf^(0+128),w
 10438  05D3  1383               	bcf	3,7	;select IRP bank0
 10439  05D4  0080               	movwf	0
 10440  05D5                     l4118:
 10441  05D5  3001               	movlw	1
 10442  05D6  00B5               	movwf	??_sprintf^(0+128)
 10443  05D7  0835               	movf	??_sprintf^(0+128),w
 10444  05D8  07D3               	addwf	sprintf@sp^(0+128),f
 10445  05D9                     l4120:
 10446  05D9  30FF               	movlw	255
 10447  05DA  07CB               	addwf	sprintf@width^(0+128),f
 10448  05DB  1803               	skipnc
 10449  05DC  0ACC               	incf	(sprintf@width+1)^(0+128),f
 10450  05DD  30FF               	movlw	255
 10451  05DE  07CC               	addwf	(sprintf@width+1)^(0+128),f
 10452  05DF  084B               	movf	sprintf@width^(0+128),w
 10453  05E0  044C               	iorwf	(sprintf@width+1)^(0+128),w
 10454  05E1  1D03               	btfss	3,2
 10455  05E2  2DE4               	goto	u7201
 10456  05E3  2DE5               	goto	u7200
 10457  05E4                     u7201:
 10458  05E4  2DCE               	goto	l4116
 10459  05E5                     u7200:
 10460  05E5  2E19               	goto	l4136
 10461  05E6                     l4122:
 10462                           
 10463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10464  05E6  084B               	movf	sprintf@width^(0+128),w
 10465  05E7  044C               	iorwf	(sprintf@width+1)^(0+128),w
 10466  05E8  1903               	btfsc	3,2
 10467  05E9  2DEB               	goto	u7211
 10468  05EA  2DEC               	goto	u7210
 10469  05EB                     u7211:
 10470  05EB  2E03               	goto	l4130
 10471  05EC                     u7210:
 10472  05EC                     l4124:
 10473                           
 10474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10475  05EC  3020               	movlw	32
 10476  05ED  00B5               	movwf	??_sprintf^(0+128)
 10477  05EE  0853               	movf	sprintf@sp^(0+128),w
 10478  05EF  0084               	movwf	4
 10479  05F0  0835               	movf	??_sprintf^(0+128),w
 10480  05F1  1383               	bcf	3,7	;select IRP bank0
 10481  05F2  0080               	movwf	0
 10482  05F3                     l4126:
 10483  05F3  3001               	movlw	1
 10484  05F4  00B5               	movwf	??_sprintf^(0+128)
 10485  05F5  0835               	movf	??_sprintf^(0+128),w
 10486  05F6  07D3               	addwf	sprintf@sp^(0+128),f
 10487  05F7                     l4128:
 10488  05F7  30FF               	movlw	255
 10489  05F8  07CB               	addwf	sprintf@width^(0+128),f
 10490  05F9  1803               	skipnc
 10491  05FA  0ACC               	incf	(sprintf@width+1)^(0+128),f
 10492  05FB  30FF               	movlw	255
 10493  05FC  07CC               	addwf	(sprintf@width+1)^(0+128),f
 10494  05FD  084B               	movf	sprintf@width^(0+128),w
 10495  05FE  044C               	iorwf	(sprintf@width+1)^(0+128),w
 10496  05FF  1D03               	btfss	3,2
 10497  0600  2E02               	goto	u7221
 10498  0601  2E03               	goto	u7220
 10499  0602                     u7221:
 10500  0602  2DEC               	goto	l4124
 10501  0603                     u7220:
 10502  0603                     l4130:
 10503                           
 10504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10505  0603  3003               	movlw	3
 10506  0604  0549               	andwf	sprintf@flag^(0+128),w
 10507  0605  00B5               	movwf	??_sprintf^(0+128)
 10508  0606  3000               	movlw	0
 10509  0607  054A               	andwf	(sprintf@flag+1)^(0+128),w
 10510  0608  00B6               	movwf	(??_sprintf+1)^(0+128)
 10511  0609  0835               	movf	??_sprintf^(0+128),w
 10512  060A  0436               	iorwf	(??_sprintf^(0+128)+1),w
 10513  060B  1903               	btfsc	3,2
 10514  060C  2E0E               	goto	u7231
 10515  060D  2E0F               	goto	u7230
 10516  060E                     u7231:
 10517  060E  2E19               	goto	l4136
 10518  060F                     u7230:
 10519  060F                     l4132:
 10520                           
 10521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10522  060F  302D               	movlw	45
 10523  0610  00B5               	movwf	??_sprintf^(0+128)
 10524  0611  0853               	movf	sprintf@sp^(0+128),w
 10525  0612  0084               	movwf	4
 10526  0613  0835               	movf	??_sprintf^(0+128),w
 10527  0614  1383               	bcf	3,7	;select IRP bank0
 10528  0615  0080               	movwf	0
 10529  0616  160A  118A  2CFA   	goto	l3854
 10530  0619                     l4136:
 10531                           
 10532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10533  0619  3001               	movlw	1
 10534  061A  07A8               	addwf	sprintf@f^(0+128),f
 10535  061B  30FF               	movlw	-1
 10536  061C  0728               	addwf	sprintf@f^(0+128),w
 10537  061D  0084               	movwf	4
 10538  061E  160A  158A  2000  120A  118A  	fcall	stringdir
 10539  0623  00B5               	movwf	??_sprintf^(0+128)
 10540  0624  0835               	movf	??_sprintf^(0+128),w
 10541  0625  00D4               	movwf	sprintf@c^(0+128)
 10542  0626  0854               	movf	sprintf@c^(0+128),w
 10543  0627  1D03               	btfss	3,2
 10544  0628  2E2A               	goto	u7241
 10545  0629  2E2D               	goto	u7240
 10546  062A                     u7241:
 10547  062A  160A  118A  2CED   	goto	l3850
 10548  062D                     u7240:
 10549  062D                     l4138:
 10550                           
 10551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10552  062D  0853               	movf	sprintf@sp^(0+128),w
 10553  062E  0084               	movwf	4
 10554  062F  1383               	bcf	3,7	;select IRP bank0
 10555  0630  0180               	clrf	0
 10556  0631                     l339:
 10557  0631  0008               	return
 10558  0632                     __end_of_sprintf:

Data Sizes:
    Strings     19
    Constant    144
    Data        0
    BSS         23
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     77      77
    BANK1            80     53      78
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->___wmul
    _scale->___awdiv
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___lwmod
    _send_crct->_send_char
    _conv->___xxtofl

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   35443
                                             76 BANK0      1     1      0
                            _cfg_clk
                           _cfg_inte
                             _cfg_io
                           _cfg_iocb
                          _cfg_usart
                               _conv
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    37     13   34577
                                              8 BANK1     45    32     13
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7899
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              8 COMMON     1     1      0
                                              2 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6139
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              0 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              4 COMMON     4     4      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4     721
                                             10 BANK0     13     9      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_iocb                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_inte                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cfg_clk
   _cfg_inte
   _cfg_io
   _cfg_iocb
   _cfg_usart
   _conv
     ___xxtofl
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     35      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A6      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 16 02:29:58 2021

                      _V 00DF                        _v 00EA                        pc 0002  
                     _f1 00E0                       _f2 00D5             ___awdiv@sign 0027  
                     _op 0079                       fsr 0004      ___wmul@multiplicand 0075  
    __Umul8_16@word_mpld 0022                      l102 1C0B                      l111 1BD0  
                    l120 1C41                      l105 1BC2                      l114 1BC8  
                    l123 1BD2                      l108 1C20                      l126 1BDA  
                    l310 0368                      l231 125A                      l303 0322  
                    l129 1CB6                      l251 1504                      l238 0FFF  
                    l318 052F                      l343 1C4E                      l345 1C66  
                    l513 06EF                      l530 1D54                      l514 0654  
                    l266 15C3                      l531 1D69                      l339 0631  
                    l524 06E2                      l701 1476                      l517 06B2  
                    l509 1E1A                      l534 1F7A                      l542 1BE5  
                    l712 14D6                      l704 14B4                      l560 07AC  
                    l529 1D38                      l537 1FE6                      l713 14E2  
                    l553 086A                      l561 071E                      l810 08A4  
                    l538 1FFF                      l546 087F                      l379 1E82  
                    l571 079F                      l812 093B                      l716 07FC  
                    l556 087F                      l564 076F                      l670 12BE  
                    l830 1BF7                      l823 0905                      l824 0911  
                    l816 08E9                      l496 1EEB                      l649 104D  
                    l674 1365                      l691 1430                      l683 14E2  
                    l659 1D19                      l676 133C                      l772 0C08  
                    l766 0C9C                      l695 1454                      l599 1DBF  
                    l785 1CCD                      l778 0C90                      l787 1CDF  
                    _isr 1C67                      fsr0 0004                      indf 0000  
           ___awmod@sign 0021             ___flmul@aexp 003C             ___flmul@bexp 003D  
           ___flmul@sign 0037             ___flmul@temp 0042             ___flmul@prod 003E  
           ___fltol@exp1 0061                     l2200 1CC7                     l2202 1CD6  
                   l2210 1E86                     l2204 1CDB                     l2220 1E9A  
                   l2212 1E8A                     l2230 1EB0                     l2222 1E9E  
                   l2214 1E8F                     l3040 1C03                     l2400 12E8  
                   l2320 1CE9                     l2240 1ED0                     l2232 1EB4  
                   l2224 1EA0                     l2216 1E91                     l2208 1E83  
                   l4000 0215                     l3050 1BC9                     l3042 1C04  
                   l3034 1BF8                     l2410 12FC                     l2402 12EC  
                   l2330 1D08                     l2322 1CF0                     l2242 1ED7  
                   l2234 1EB8                     l2226 1EA6                     l2218 1E95  
                   l4002 021C                     l4010 0234                     l3044 1C06  
                   l3036 1C01                     l3052 1BC3                     l3060 1C17  
                   l2500 1473                     l2420 1320                     l2412 1300  
                   l2404 12F0                     l2340 1262                     l2332 1D0F  
                   l2324 1CF4                     l2316 1CE0                     l2236 1EC9  
                   l2228 1EA9                     l2244 1EDD                     l4100 0592  
                   l4020 0262                     l4012 0242                     l4004 0221  
                   l3070 1BBD                     l3046 1C09                     l3038 1C02  
                   l3054 1BC7                     l3062 1C18                     l2510 1492  
                   l2430 1350                     l2422 1340                     l2414 1304  
                   l2406 12F4                     l2350 1277                     l2342 1268  
                   l2326 1CF8                     l2318 1CE6                     l2334 1D15  
                   l2246 1EE2                     l2238 1ECF                     l4110 05BD  
                   l4102 059D                     l4030 0316                     l4022 0270  
                   l4014 024B                     l4006 022A                     l3072 1BC1  
                   l3048 1C0A                     l3064 1C1B                     l3056 1C0C  
                   l2520 14CB                     l2512 14B0                     l2504 147B  
                   l2432 1359                     l2424 1349                     l2408 12F8  
                   l2416 1308                     l2360 128F                     l2352 127F  
                   l2344 126C                     l2600 0AC6                     l2328 1D02  
                   l2248 1EE7                     l4120 05D9                     l4112 05C4  
                   l4104 05A9                     l4040 034C                     l4032 032C  
                   l4024 0277                     l4016 024F                     l4008 022E  
                   l3066 1C1C                     l3058 1C13                     l2530 14E1  
                   l2522 14CC                     l2514 14B9                     l2506 1480  
                   l2450 139F                     l2442 1377                     l2426 134B  
                   l2434 135D                     l2418 1309                     l2370 12A1  
                   l2362 1295                     l2354 1280                     l2346 126D  
                   l2338 125B                     l2194 1CBA                     l2610 0B66  
                   l2602 0ADF                     l4130 0603                     l4114 05C8  
                   l4122 05E6                     l4106 05AD                     l4050 037D  
                   l4042 035B                     l4034 0335                     l4026 027C  
                   l4018 0255                     l3068 1C1D                     l2524 14D0  
                   l2516 14BE                     l2508 148E                     l2452 13A1  
                   l2444 138E                     l2436 1369                     l2460 13B4  
                   l2428 134F                     l2372 12A6                     l2380 12B6  
                   l2364 1296                     l2348 1272                     l2356 1282  
                   l2196 1CBC                     l2620 0BD4                     l2612 0B8C  
                   l2604 0AFC                     l2540 094E                     l2532 093C  
                   l3500 1DC7                     l4132 060F                     l4124 05EC  
                   l4116 05CE                     l4108 05B1                     l4060 0494  
                   l4052 0381                     l4044 0362                     l4036 0339  
                   l4028 02D7                     l2526 14D2                     l2518 14C6  
                   l2462 13CA                     l2470 1422                     l2454 13A5  
                   l2446 1392                     l2438 136E                     l2390 12D4  
                   l2382 12C4                     l2374 12AB                     l2366 129C  
                   l2358 128A                     l2198 1CC3                     l2630 0BEC  
                   l2622 0BD8                     l2614 0BB4                     l2606 0B29  
                   l2550 096A                     l2542 0953                     l2534 0943  
                   l3510 1DDD                     l3502 1DCC                     l4126 05F3  
                   l4118 05D5                     l4070 050E                     l4062 04A0  
                   l4054 039F                     l4046 0371                     l4038 033F  
                   l2528 14DD                     l2480 144F                     l2472 1438  
                   l2464 1408                     l2456 13A6                     l2448 1396  
                   l2392 12D8                     l2384 12C8                     l2376 12B3  
                   l2368 12A0                     l2640 0C0D                     l2632 0BED  
                   l2624 0BD9                     l2616 0BBD                     l2608 0B39  
                   l2560 097F                     l2552 096F                     l2544 0958  
                   l2536 0949                     l3520 1DF9                     l3512 1DE0  
                   l3504 1DCE                     l3600 0E53                     l4128 05F7  
                   l4080 053A                     l4072 0514                     l4056 03FA  
                   l4064 04FB                     l4048 0376                     l4232 1517  
                   l4136 0619                     l4160 1EFB                     l2490 1462  
                   l2482 1453                     l2474 143D                     l2466 140E  
                   l2458 13AF                     l2394 12DC                     l2386 12CC  
                   l2378 12B4                     l2642 0C12                     l2650 0C43  
                   l2634 0BF1                     l2626 0BE2                     l2618 0BCB  
                   l2570 099B                     l2562 0984                     l2554 0975  
                   l2546 0960                     l2538 094D                     l3530 1E16  
                   l3522 1DFF                     l3514 1DE7                     l3506 1DD2  
                   l3610 0F4B                     l3602 0E5A                     l4090 056D  
                   l4082 0541                     l4066 0503                     l4058 0455  
                   l4074 051B                     l4138 062D                     l4234 15D9  
                   l4170 1F51                     l4162 1F00                     l4154 1EEC  
                   l2484 1458                     l2492 1464                     l2468 1413  
                   l2396 12E0                     l2388 12D0                     l3700 06AC  
                   l3620 0703                     l2660 0C76                     l2652 0C50  
                   l2644 0C20                     l2636 0C05                     l2628 0BE8  
                   l2580 09C6                     l2572 09A0                     l2564 098C  
                   l2556 0979                     l2548 0962                     l3540 1015  
                   l2740 1BF4                     l3524 1E06                     l3516 1DEB  
                   l3508 1DD7                     l4092 0573                     l4084 0550  
                   l4076 0521                     l4068 050A                     l4164 1F05  
                   l4156 1EF1                     l3390 1C30                     l2486 145B  
                   l2478 1446                     l2494 1468                     l2398 12E4  
                   l3702 06B6                     l3710 06D0                     l3630 071F  
                   l2662 0C84                     l2654 0C5B                     l2646 0C24  
                   l2590 0A63                     l2582 09E3                     l2566 098E  
                   l2558 097A                     l3550 103B                     l3542 101C  
                   l3534 1008                     l2742 1BF6                     l2734 1BE7  
                   l3518 1DEF                     l3526 1E0C                     l3614 0FD3  
                   l4094 0577                     l4086 0559                     l4078 0529  
                   l4166 1F25                     l4158 1EF6                     l3800 0888  
                   l2672 1BD2                     l3392 1C36                     l2920 1BDB  
                   l2496 1469                     l2488 145D                     l3640 0748  
                   l3632 0725                     l3624 070C                     l2664 0C88  
                   l2656 0C6A                     l2648 0C3D                     l2592 0A6C  
                   l2584 09FF                     l2576 09A9                     l2568 0996  
                   l3552 103C                     l3544 1020                     l3536 100C  
                   l3560 1051                     l2736 1BE8                     l3528 1E11  
                   l3608 0F44                     l4096 0585                     l4088 0561  
                   l4168 1F4B                     l3810 08B5                     l3802 088C  
                   l2674 1BD8                     l3386 1C22                     l2922 1BE3  
                   l2498 146D                     l2930 0811                     l3730 1E41  
                   l3722 1E1B                     l2850 1C42                     l3650 0773  
                   l3642 0756                     l3634 0734                     l3618 06F0  
                   l2666 0C89                     l2658 0C74                     l2594 0A7C  
                   l2586 0A2B                     l2578 09B9                     l3554 1043  
                   l3546 1024                     l3538 1012                     l3570 116C  
                   l3562 1057                     l2738 1BEE                     l4098 058E  
                   l3820 08E0                     l3812 08BA                     l3804 089C  
                   l3388 1C25                     l2924 1BE5                     l2940 0838  
                   l3740 1E74                     l3732 1E4A                     l3724 1E2D  
                   l2860 1C62                     l2852 1C44                     l3716 06D7  
                   l3708 06BE                     l3644 0760                     l3636 0736  
                   l2668 0C94                     l2596 0A99                     l2588 0A47  
                   l3548 1035                     l3556 1049                     l3580 0CA4  
                   l3900 15E1                     l3830 0913                     l3822 08F0  
                   l3814 08C7                     l3806 08AC                     l3750 1D4C  
                   l2950 0846                     l2942 083A                     l2934 081A  
                   l3734 1E5C                     l3726 1E30                     l3742 1E7A  
                   l2854 1C48                     l3718 06E7                     l3670 0632  
                   l3646 0761                     l3638 073F                     l2598 0AA9  
                   l3574 1217                     l3590 0D97                     l3582 0CA6  
                   l3910 1609                     l3902 15EF                     l3832 0929  
                   l3824 08FB                     l3816 08CE                     l3752 1D66  
                   l3760 1F72                     l2960 086F                     l2944 083E  
                   l2952 0858                     l2936 082F                     l2928 0804  
                   l3736 1E6A                     l3728 1E3D                     l2856 1C55  
                   l3672 063F                     l3664 0794                     l3656 077B  
                   l3648 0769                     l3568 1166                     l3496 1DC0  
                   l3592 0D9E                     l3584 0CAD                     l3920 1678  
                   l3912 1630                     l3904 15F3                     l3834 092E  
                   l3826 08FF                     l3818 08D2                     l3842 1C91  
                   l3754 1D68                     l3746 1D1A                     l3770 1FC2  
                   l3762 1F8E                     l2962 0874                     l2938 0830  
                   l3738 1E6B                     l2858 1C5C                     l3690 0679  
                   l3682 0655                     l3666 07A4                     l3658 078D  
                   l3498 1DC3                     l3578 0CA0                     l3930 16C3  
                   l3922 1683                     l3914 1649                     l3906 15F7  
                   l3850 14ED                     l3836 0932                     l3828 0909  
                   l3844 1CAE                     l3748 1D30                     l3772 1FFC  
                   l3764 1F96                     l3780 1D74                     l3692 0682  
                   l3684 065D                     l3676 0648                     l3596 0E26  
                   l3940 1763                     l3932 16C9                     l3924 1689  
                   l3916 164D                     l3908 1605                     l3852 14F3  
                   l3838 0933                     l3774 1FFE                     l3766 1F9A  
                   l3758 1F5C                     l2958 085F                     l3790 1DA8  
                   l3782 1D77                     l3694 0694                     l3686 066E  
                   l3950 001E                     l3942 178C                     l3934 16E8  
                   l3926 169C                     l3918 1651                     l3870 1545  
                   l3862 1509                     l3854 14FA                     l3768 1FBE  
                   l2984 07AD                     l3792 1DB1                     l3784 1D84  
                   l3696 06A2                     l3688 0670                     l3960 00AF  
                   l3952 0047                     l3936 1733                     l3928 16BF  
                   l3944 1794                     l3880 157B                     l3872 1558  
                   l3864 151C                     l3856 14FF                     l3848 14E6  
                   l2986 07B1                     l3786 1D88                     l3794 1DB7  
                   l3778 1D6A                     l3698 06A3                     l3962 00B7  
                   l3954 006E                     l3970 0129                     l3946 17A3  
                   l3938 175A                     l3890 15AE                     l3882 157F  
                   l3874 155C                     l3866 152C                     l3858 1505  
                   l3788 1D9A                     l3972 015E                     l3964 00D5  
                   l3956 007D                     l3948 17EA                     l3884 1582  
                   l3892 15BF                     l3868 1530                     l3876 156C  
                   l3798 0883                     l3990 01ED                     l3982 0191  
                   l3974 018D                     l3958 00A6                     l3894 15C1  
                   l3886 1597                     l3878 157A                     l3992 01F3  
                   l3976 018F                     l3968 0120                     l3888 15AA  
                   l3994 01FF                     l3986 01C8                     l3898 15C5  
                   l3996 0205                     l3988 01D2                     ?_isr 0070  
                   l3998 0209                     STR_1 1896                     _CONT 007A  
                   _IOCB 0096                     u3200 1272                     u4000 0C6A  
                   u3201 1271                     u4001 0C69                     u3210 1277  
                   u4010 0C88                     u3130 1CE6                     u3211 1276  
                   u4011 0C87                     u3131 1CE5                     u4020 1BD8  
                   u3300 132C                     u3220 1295                     u4021 1BD7  
                   u3221 1294                     u4005 0C66                     u3310 1340  
                   u3230 12A0                     u3150 1CF8                     u3311 133F  
                   u3231 129F                     u3151 1CF7                     u3400 13A5  
                   u3320 134F                     u3240 12A6                     u3160 1D02  
                   u3401 13A4                     u3321 134E                     u3241 12A5  
                   u3161 1D01                     u3145 1CEA                     u3250 12AB  
                   u3251 12AA                     u3500 1458                     u3420 13CA  
                   u3340 1365                     u3260 12C4                     u3180 1D15  
                   u3501 1457                     u3421 13C9                     u3341 1364  
                   u3261 12C3                     u3181 1D14                     u3165 1CFE  
                   u3510 1462                     u3350 1369                     u3270 12C8  
                   u3190 126C                     u3511 1461                     u3431 13E1  
                   u3423 13C6                     u3415 13A8                     u3351 1368  
                   u3335 1352                     u3271 12C7                     u3191 126B  
                   u3175 1D09                     u3600 14B9                     u3520 1468  
                   u3440 13F5                     u3432 13E2                     u3360 136E  
                   u3280 1320                     u6000 0E5A                     u3601 14B8  
                   u3521 1467                     u3441 13F6                     u3433 13E7  
                   u3361 136D                     u3281 131F                     u6001 0E59  
                   u3610 14BE                     u3530 146D                     u3450 1413  
                   u3442 13FB                     u3434 13E8                     u3290 132B  
                   u3611 14BD                     u3531 146C                     u3451 1412  
                   u3443 13FC                     u3435 13ED                     u3371 1380  
                   u3291 1329                     u3620 14CB                     u3540 1473  
                   u3460 1438                     u3436 13EE                     u3380 1392  
                   u3372 1387                     u3700 0984                     u3621 14CA  
                   u3541 1472                     u3461 1437                     u3381 1391  
                   u3373 138E                     u3285 131C                     u3701 0983  
                   u3630 14D0                     u3550 147A                     u3470 143D  
                   u3390 1396                     u6110 0756                     u3710 099B  
                   u2910 1EB8                     u3631 14CF                     u3551 1479  
                   u3471 143C                     u3391 1395                     u6111 0755  
                   u3711 099A                     u2911 1EB7                     u6015 0E7C  
                   u3640 14E1                     u3560 1480                     u6200 07A4  
                   u2840 1CC7                     u3720 09A0                     u4280 1BEE  
                   u6040 0F4B                     u7000 032B                     u3641 14E0  
                   u3561 147F                     u6201 07A3                     u6105 0741  
                   u2841 1CC6                     u3721 099F                     u4281 1BED  
                   u2905 1EAA                     u6041 0F4A                     u6025 0EB8  
                   u7001 032A                     u3570 1492                     u3490 1453  
                   u6210 063F                     u6130 076F                     u3650 094D  
                   u4290 1BF4                     u2930 1EC9                     u7010 034C  
                   u3571 1491                     u3491 1452                     u6211 063E  
                   u6131 076E                     u6115 0752                     u3811 0AEE  
                   u3731 09F1                     u3651 094C                     u4291 1BF3  
                   u2931 1EC8                     u6035 0F03                     u7011 034B  
                   u3580 14A1                     u6300 06CF                     u6220 0653  
                   u6140 0773                     u2860 1CDB                     u3900 0BD8  
                   u3812 0AF5                     u3732 09F8                     u3660 0953  
                   u7100 053A                     u7020 035B                     u3485 1448  
                   u6301 06CE                     u6221 0652                     u6141 0772  
                   u6125 0762                     u2861 1CDA                     u3901 0BD7  
                   u3821 0B1B                     u3813 0AFC                     u3805 0AC8  
                   u3741 0A0D                     u3733 09FF                     u3661 0952  
                   u2925 1EB9                     u7101 0539                     u7021 035A  
                   u3590 14B0                     u6310 06D6                     u6150 077A  
                   u3822 0B22                     u3742 0A14                     u3670 0958  
                   u2950 1EDD                     u2870 1E8A                     u7110 0550  
                   u7030 0376                     u3591 14AF                     u6311 06D5  
                   u6151 0779                     u2855 1CCE                     u3831 0B48  
                   u3823 0B29                     u3751 0A39                     u3743 0A1B  
                   u3671 0957                     u2951 1EDC                     u2935 1EC5  
                   u2871 1E89                     u6055 0F5E                     u7111 054F  
                   u7031 0375                     u7015 0348                     u4800 083E  
                   u6400 1E7A                     u4560 1C48                     u6240 0694  
                   u6080 0703                     u3920 0BEC                     u3840 0B72  
                   u3832 0B4F                     u3752 0A40                     u3680 0979  
                   u2960 1EE2                     u2880 1E95                     u7200 05E5  
                   u7120 0561                     u3585 149C                     u4801 083D  
                   u6401 1E79                     u4561 1C47                     u6241 0693  
                   u6081 0702                     u3921 0BEB                     u3833 0B56  
                   u3761 0A55                     u3753 0A47                     u3681 0978  
                   u2961 1EE1                     u2945 1ED1                     u2881 1E94  
                   u6065 0F9A                     u7201 05E4                     u7121 0560  
                   u7105 0536                     u7025 0357                     u6410 1D30  
                   u4810 0845                     u6330 06E7                     u6170 078C  
                   u6090 071D                     u3930 0BF1                     u3762 0A5C  
                   u3690 097F                     u2890 1EA6                     u7210 05EC  
                   u7130 056D                     u6411 1D2F                     u4811 0844  
                   u6331 06E6                     u6235 067B                     u6171 078B  
                   u6091 071C                     u3931 0BF0                     u3915 0BDB  
                   u3851 0B7E                     u3763 0A63                     u3691 097E  
                   u2891 1EA5                     u6075 0FD6                     u7211 05EB  
                   u7131 056C                     u7115 054C                     u5620 1C41  
                   u6420 1D4C                     u6500 1FFC                     u6340 1E2D  
                   u6260 06B2                     u6180 0793                     u3940 0C05  
                   u3860 0B9A                     u3852 0B85                     u7220 0603  
                   u7140 0577                     u7060 0502                     u5621 1C40  
                   u6421 1D4B                     u6501 1FFB                     u6341 1E2C  
                   u6325 06D9                     u6261 06B1                     u6245 0690  
                   u6181 0792                     u6165 077C                     u3941 0C04  
                   u3853 0B8C                     u3845 0B6D                     u3781 0A8B  
                   u7221 0602                     u7141 0576                     u7061 0501  
                   u7045 03FD                     u6430 1D66                     u4830 0857  
                   u6510 1D74                     u4590 1C62                     u6270 06B6  
                   u3950 0C0C                     u3782 0A92                     u5710 1DEF  
                   u7230 060F                     u7150 0585                     u7070 051A  
                   u6431 1D65                     u4831 0856                     u6511 1D73  
                   u4591 1C61                     u4575 1C4F                     u6271 06B5  
                   u6255 06A5                     u3951 0C0B                     u3871 0BA6  
                   u3791 0AB8                     u3783 0A99                     u3775 0A65  
                   u5711 1DEE                     u7231 060E                     u7151 0584  
                   u7071 0519                     u7055 04A3                     u6440 1F72  
                   u4840 085E                     u6360 1E41                     u6280 06BD  
                   u3960 0C12                     u3872 0BAD                     u3792 0ABF  
                   u5800 1035                     u5720 1DF9                     u7240 062D  
                   u7160 059D                     u7080 0521                     u6505 1FF8  
                   u6441 1F71                     u4841 085D                     u4825 0847  
                   u6361 1E40                     u4585 1C56                     u6281 06BC  
                   u3961 0C11                     u3873 0BB4                     u3865 0B95  
                   u3793 0AC6                     u5801 1034                     u5721 1DF8  
                   u5705 1DE1                     u7241 062A                     u7161 059C  
                   u7081 0520                     u6610 08CD                     u6450 1F8E  
                   u4770 1BE3                     u6530 1D88                     u3970 0C24  
                   u7170 05B1                     u7090 0529                     i1l91 1C87  
                   u6611 08CC                     u6435 1D62                     u6451 1F8D  
                   u4771 1BE2                     u6355 1E32                     u6531 1D87  
                   u6195 0796                     u3971 0C23                     u7171 05B0  
                   u7155 0581                     u7091 0528                     u6700 0932  
                   u6460 1F9A                     u4860 086F                     u4780 0811  
                   u6380 1E5C                     u6540 1D9A                     u3980 0C33  
                   u5820 1049                     u5740 1E0C                     u7180 05BD  
                   u6701 0931                     u6605 08BF                     u6461 1F99  
                   u4861 086E                     u4781 0810                     u6381 1E5B  
                   u6541 1D99                     u6525 1D79                     u3885 0BB6  
                   u5821 1048                     u5805 1031                     u5741 1E0B  
                   u5725 1DF5                     u7181 05BC                     u7165 0599  
                   u6630 08EF                     u4870 0874                     u4790 0828  
                   u3990 0C50                     u5830 1057                     u5750 1E11  
                   u5670 1DC7                     u5910 0CA4                     u7190 05CE  
                   u6710 14F3                     u6631 08EE                     u6471 1FA9  
                   u4871 0873                     u4855 0861                     u6375 1E43  
                   u6295 06BF                     u3991 0C4F                     u3895 0BCD  
                   u5815 103D                     u5831 1056                     u5751 1E10  
                   u5735 1E00                     u5671 1DC6                     u5911 0CA3  
                   u7191 05CD                     u6711 14F2                     u6480 1FC2  
                   u6472 1FAA                     u6560 1DB7                     u5760 1012  
                   u5680 1DD2                     u5920 0CAD                     u6800 16C3  
                   u6720 152C                     u6625 08E1                     u6481 1FC1  
                   u6473 1FAF                     u6385 1E58                     u6561 1DB6  
                   u6545 1D96                     u3985 0C2E                     u5761 1011  
                   u5905 1222                     u5681 1DD1                     u5921 0CAC  
                   u6801 16C2                     u6721 152B                     u7257 1F55  
                   u6650 08FF                     u6570 0888                     u6474 1FB0  
                   u5690 1DDD                     u6810 175A                     u6730 156C  
                   u6651 08FE                     u6571 0887                     u6491 1FD1  
                   u6475 1FB5                     u4795 0823                     u6395 1E6C  
                   u6555 1DA9                     u3995 0C4C                     u5691 1DDC  
                   u6811 1759                     u6731 156B                     u6660 0905  
                   u6580 088C                     u6492 1FD2                     u6476 1FB6  
                   u5780 1024                     u6900 01C7                     u6820 178C  
                   u6740 157A                     u6661 0904                     u6645 08F4  
                   u6581 088B                     u6493 1FD7                     u5781 1023  
                   u5845 1074                     u6901 01C6                     u6821 178B  
                   u6741 1579                     u6670 0909                     u6590 08AC  
                   u6494 1FD8                     u5870 116C                     u6910 01D2  
                   u6830 17A3                     u6750 15BE                     u6671 0908  
                   u6591 08AB                     u6495 1FDD                     u5775 1016  
                   u5871 116B                     u5855 10D0                     u5935 0CCF  
                   u6911 01D1                     u6831 17A2                     u6751 15BD  
                   u6680 091E                     u6496 1FDE                     u5960 0D9E  
                   u6920 01ED                     u6840 001E                     u6760 15EF  
                   u5865 1125                     u5961 0D9D                     u5945 0D0B  
                   u6921 01EC                     u6905 01C3                     u6841 17FA  
                   u6761 15EC                     u6690 092E                     u6930 01FF  
                   u6850 0047                     u6770 15F3                     u6691 092D  
                   u5795 1025                     u5955 0D56                     u6931 01FE  
                   u6851 0046                     u6835 179F                     u6771 15F2  
                   u6940 0209                     u6860 006E                     u6780 1630  
                   u6685 0919                     u5885 1189                     u6941 0208  
                   u6861 006D                     u6845 17F5                     u6781 162F  
                   u6950 0215                     u6870 007D                     u6790 1678  
                   u5895 11D6                     u5975 0DB1                     u6951 0214  
                   u6871 007C                     u6791 1677                     u6960 0241  
                   u6880 00A6                     u5985 0DED                     u6961 0240  
                   u6881 00A5                     u6970 0262                     u5995 0E29  
                   u6971 0261                     u6875 0079                     u6980 0270  
                   u6981 026F                     u6965 023D                     u6975 025E  
                   u6895 0194                     u6995 027F                     _TXIF 0064  
                   _WPUB 0095                     _conv 1C8E                     _main 1EEC  
                   btemp 007E                     start 000C             _sprintf$1113 00BA  
                  ??_isr 0070            ___fltol@sign1 0060                    ?_conv 002A  
        __end_of___fladd 14E3                    ?_main 0070          __end_of___awdiv 1EEC  
        __end_of___flneg 1BE6          __end_of___awmod 1E1B          __end_of___flmul 0C9D  
        __end_of___flsub 07FD          __end_of___fltol 0880                    _ANSEL 0188  
        __end_of___lldiv 1E83          ___awdiv@divisor 0022          __end_of___llmod 1DC0  
        __end_of___lwdiv 104E          __end_of___lwmod 1D1A          ___awdiv@counter 0026  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008          __end_of_cfg_clk 1BC3  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019          __end_of_dpowers 1896                    _scale 0C9D  
        __end_of_isdigit 1BF8                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0632          __initialization 000F  
           __end_of_conv 1CB7             __end_of_main 1F5C                   ??_conv 002E  
                 ??_main 006C     __size_of__tdiv_to_l_ 00BD         ___llmod@dividend 0024  
                 ?_scale 0044         ___awdiv@dividend 0024                   _ANSELH 0189  
                 i1l3400 1C73                   i1l3402 1C77                   i1l3404 1C7D  
                 i1l3406 1C82                   i1l3408 1C86                   i1l3394 1C67  
                 i1l3396 1C6D                   i1l3398 1C6F                   u563_20 1C6D  
                 u563_21 1C6C                   u564_20 1C73                   u564_21 1C72  
                 u565_20 1C77                   u565_21 1C76                   u566_20 1C82  
                 u566_21 1C81                   _SPBRGH 009A         __end_of_cfg_iocb 1BC9  
       __end_of_cfg_inte 1BD1         __end_of___xxtofl 093C         __end_of__powers_ 183A  
                 ___flge 1F5C                   ___fleq 1D1A                ??___fladd 0060  
                 ___wmul 1C42                ??___awdiv 0078                   _cfg_io 1BF8  
              ??___flneg 0077                ??___awmod 0077                ??___flmul 0032  
              ??___flsub 0079                ??___fltol 005B                ??___lldiv 0073  
              ??___llmod 0073                ??___lwdiv 0024                ??___lwmod 0077  
              ??_cfg_clk 0073                   _fround 104E         ___awdiv@quotient 0028  
        ___awmod@divisor 0073          ___awmod@counter 0020                   conv@aa 0036  
              ??_isdigit 0073       __size_of__Umul8_16 0029                   saved_w 007E  
              ??_sprintf 00B5               ___flge@ff1 0020               ___flge@ff2 0024  
           ___xxtofl@arg 0026             ___xxtofl@exp 0025             ___xxtofl@val 0073  
             ___fleq@ff1 0020               ___fleq@ff2 0024  __end_of__initialization 001A  
             ___flneg@f1 0073               ___fltol@f1 0057           __pcstackCOMMON 0070  
     __size_of_cfg_usart 0015            __end_of_scale 1000               __div_to_l_ 0632  
         _OPTION_REGbits 0081          __div_to_l_@exp1 002D          __div_to_l_@cntr 002C  
                ??_scale 0048          __div_to_l_@quot 0028             sprintf@width 00CB  
             __pbssBANK1 00D5            __div_to_l_@f1 0020            __div_to_l_@f2 0024  
      __end_of__Umul8_16 1CE0               __pmaintext 1EEC                  ?___flge 0020  
                ?___fleq 0020                  ?___wmul 0073                  ?_cfg_io 0070  
             __pintentry 0004       __size_of_send_char 000A       __size_of_send_crct 0021  
                ?_fround 0044                ?_cfg_iocb 0070                ?_cfg_inte 0070  
              ?___xxtofl 0073              send_crct@st 0077               __stringtab 1800  
      __end_of_cfg_usart 1C21        __end_of__npowers_ 186E               _scale$1112 0052  
        __size_of___flge 00A4          __size_of___fleq 0050                  ___fladd 125B  
                ___awdiv 1E83                  ___flneg 1BDB                  ___awmod 1DC0  
                ___flmul 093C                  ___flsub 07AD                  ___fltol 0804  
                ___lldiv 1E1B          __size_of___wmul 0025                  ___llmod 1D6A  
        __size_of_cfg_io 0014                  ___lwdiv 1008                  ___lwmod 1CE0  
                _cfg_clk 1BBD          __size_of_fround 020D                  __ptext1 14E3  
                __ptext2 0C9D                  __ptext3 1DC0                  __ptext4 1E83  
                __ptext5 1BE6                  __ptext6 104E                  __ptext7 1CE0  
                __ptext8 1008                  __ptext9 093C              ?__div_to_l_ 0020  
                _dpowers 186E               ??_cfg_iocb 0073               ??_cfg_inte 0073  
                _isdigit 1BE6             __size_of_isr 0027               ??___xxtofl 0020  
       ___awmod@dividend 0075                  _sprintf 14E3                  clrloop0 1001  
   end_of_initialization 001A        __end_of_send_char 1BDB        __end_of_send_crct 1C42  
        ___lldiv@divisor 0020          ___lldiv@counter 0078                _RCSTAbits 0018  
                psplit$0 C002D           __tdiv_to_l_@f1 0020           __tdiv_to_l_@f2 0024  
          send_char@dato 0073            ??__tdiv_to_l_ 0073                _PORTBbits 0006  
            ___fladd@grs 006B            ___xxtofl@sign 0024                _TRISBbits 0086  
             conv@result 0032              ___flmul@grs 0038                _TXSTAbits 0098  
    __size_of__div_to_l_ 00BE           __end_of___flge 2000           __end_of___fleq 1D6A  
         __end_of___wmul 1C67           __end_of_cfg_io 1C0C        pnum$text1_split_1 002D  
            _BAUDCTLbits 0187           __end_of_fround 125B      start_initialization 000F  
    __end_of__tdiv_to_l_ 07AD              __end_of_isr 1C8E          ___llmod@divisor 0020  
        ___llmod@counter 0074                 ??___flge 0073                 ??___fleq 0073  
               ??___wmul 0077                 ??_cfg_io 0073                __Umul8_16 1CB7  
               ??_fround 0048            sprintf@tmpval 00C3                ___fladd@a 005C  
              ___fladd@b 0058               fround@prec 0057                ___flmul@a 002E  
              ___flmul@b 002A              __pbssCOMMON 0079                ___flsub@a 00A0  
              ___flsub@b 00A4                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0        __size_of_cfg_iocb 0006        __size_of_cfg_inte 0008  
      __size_of___xxtofl 00BC              sprintf@flag 00C9              sprintf@eexp 00C7  
            sprintf@fval 00CD              sprintf@prec 00D1                _cfg_usart 1C0C  
              __pnvBANK1 00EA         ___lwdiv@dividend 0022                 ?___fladd 0058  
               ?___awdiv 0022                 ?___flneg 0073                 ?___awmod 0073  
               ?___flmul 002A                 ?___flsub 00A0                 ?___fltol 0057  
               ?___lldiv 0020                 ?___llmod 0020                __npowers_ 183A  
             ?__Umul8_16 0073                 ?___lwdiv 0020                 ?___lwmod 0073  
               ?_cfg_clk 0070                __pstrings 1800              __tdiv_to_l_ 06F0  
             send_crct@i 0075             ??__div_to_l_ 0073                 ?_isdigit 0070  
       ___lwdiv@quotient 0026                 ?_sprintf 00A8           __size_of_scale 0363  
      interrupt_function 0004           ___wmul@product 0077                clear_ram0 1000  
             ?_cfg_usart 0070                 _PIE1bits 008C                _send_char 1BD1  
              _send_crct 1C21                 _PIR1bits 000C       __end_of__div_to_l_ 06F0  
            __stringbase 1805        ___wmul@multiplier 0073               ?_send_char 0070  
             ?_send_crct 0070              ??__Umul8_16 0075         __size_of___fladd 0288  
       __size_of___awdiv 0069         __size_of___flneg 000B         __size_of___awmod 005B  
       __size_of___flmul 0361         __size_of___flsub 0050         __size_of___fltol 007C  
       __size_of___lldiv 0068         __size_of___llmod 0056         __size_of___lwdiv 0046  
       __size_of___lwmod 003A              _fround$1110 0053              _fround$1111 004F  
       __size_of_cfg_clk 0006       __end_of__stringtab 1806              _isdigit$941 0073  
               _cfg_iocb 1BC3               sprintf@val 00BF                 _cfg_inte 1BC9  
               ___xxtofl 0880         __size_of_isdigit 0012          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0025                 __ptext10 1CB7                 __ptext11 06F0  
               __ptext20 1F5C                 __ptext12 0632                 __ptext21 1D1A  
               __ptext13 1C42                 __ptext30 1BBD                 __ptext22 1C21  
               __ptext14 1D6A                 __ptext31 1C67                 __ptext23 1BD1  
               __ptext15 1E1B                 __ptext24 1C8E                 __ptext16 0804  
               __ptext25 0880                 __ptext17 07AD                 __ptext26 1C0C  
               __ptext18 125B                 __ptext27 1BC3                 __ptext19 1BDB  
               __ptext28 1BF8                 __ptext29 1BC9                 __powers_ 1806  
       __size_of_sprintf F14F            __size_of_conv 0029            __size_of_main 0070  
              pnum$text1 000C              ??_cfg_usart 0073               _INTCONbits 000B  
               isdigit@c 0074                 scale@scl 0056                 intlevel1 0000  
              sprintf@ap 00BE         __tdiv_to_l_@exp1 002D         __tdiv_to_l_@cntr 002C  
              sprintf@sp 00D3         __tdiv_to_l_@quot 0028         ___lwmod@dividend 0075  
       ___lldiv@dividend 0024              ??_send_char 0073              ??_send_crct 0074  
              stringcode 1800               _OSCCONbits 008F             ?__tdiv_to_l_ 0020  
 __Umul8_16@multiplicand 0073                 sprintf@c 00D4                 sprintf@f 00A8  
       ___lldiv@quotient 0074          ___lwmod@divisor 0073          ___lwmod@counter 0078  
               stringdir 1800                 stringtab 1800            ___fladd@signs 0068  
           ___fladd@aexp 0069             ___fladd@bexp 006A     __Umul8_16@multiplier 0024  
      __Umul8_16@product 0020  

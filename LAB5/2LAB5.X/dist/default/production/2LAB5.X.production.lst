

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Aug 13 18:16:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240                           
   241                           	psect	strings
   242  1800                     __pstrings:
   243  1800                     stringtab:
   244  1800                     __stringtab:
   245  1800                     stringcode:	
   246                           ;	String table - string pointers are 1 byte each
   247                           
   248  1800                     stringdir:
   249  1800  3018               	movlw	high stringdir
   250  1801  008A               	movwf	10
   251  1802  0804               	movf	4,w
   252  1803  0A84               	incf	4,f
   253  1804  0782               	addwf	2,f
   254  1805                     __stringbase:
   255  1805  3400               	retlw	0
   256  1806                     __end_of__stringtab:
   257  1806                     __powers_:
   258  1806  3400               	retlw	0
   259  1807  3400               	retlw	0
   260  1808  3480               	retlw	128
   261  1809  343F               	retlw	63
   262  180A  3400               	retlw	0
   263  180B  3400               	retlw	0
   264  180C  3420               	retlw	32
   265  180D  3441               	retlw	65
   266  180E  3400               	retlw	0
   267  180F  3400               	retlw	0
   268  1810  34C8               	retlw	200
   269  1811  3442               	retlw	66
   270  1812  3400               	retlw	0
   271  1813  3400               	retlw	0
   272  1814  347A               	retlw	122
   273  1815  3444               	retlw	68
   274  1816  3400               	retlw	0
   275  1817  3440               	retlw	64
   276  1818  341C               	retlw	28
   277  1819  3446               	retlw	70
   278  181A  3400               	retlw	0
   279  181B  3450               	retlw	80
   280  181C  34C3               	retlw	195
   281  181D  3447               	retlw	71
   282  181E  3400               	retlw	0
   283  181F  3424               	retlw	36
   284  1820  3474               	retlw	116
   285  1821  3449               	retlw	73
   286  1822  3480               	retlw	128
   287  1823  3496               	retlw	150
   288  1824  3418               	retlw	24
   289  1825  344B               	retlw	75
   290  1826  3420               	retlw	32
   291  1827  34BC               	retlw	188
   292  1828  34BE               	retlw	190
   293  1829  344C               	retlw	76
   294  182A  3428               	retlw	40
   295  182B  346B               	retlw	107
   296  182C  346E               	retlw	110
   297  182D  344E               	retlw	78
   298  182E  34F9               	retlw	249
   299  182F  3402               	retlw	2
   300  1830  3415               	retlw	21
   301  1831  3450               	retlw	80
   302  1832  34EC               	retlw	236
   303  1833  3478               	retlw	120
   304  1834  34AD               	retlw	173
   305  1835  3460               	retlw	96
   306  1836  34CA               	retlw	202
   307  1837  34F2               	retlw	242
   308  1838  3449               	retlw	73
   309  1839  3471               	retlw	113
   310  183A                     __end_of__powers_:
   311  183A                     __npowers_:
   312  183A  3400               	retlw	0
   313  183B  3400               	retlw	0
   314  183C  3480               	retlw	128
   315  183D  343F               	retlw	63
   316  183E  34CD               	retlw	205
   317  183F  34CC               	retlw	204
   318  1840  34CC               	retlw	204
   319  1841  343D               	retlw	61
   320  1842  340A               	retlw	10
   321  1843  34D7               	retlw	215
   322  1844  3423               	retlw	35
   323  1845  343C               	retlw	60
   324  1846  346F               	retlw	111
   325  1847  3412               	retlw	18
   326  1848  3483               	retlw	131
   327  1849  343A               	retlw	58
   328  184A  3417               	retlw	23
   329  184B  34B7               	retlw	183
   330  184C  34D1               	retlw	209
   331  184D  3438               	retlw	56
   332  184E  34AC               	retlw	172
   333  184F  34C5               	retlw	197
   334  1850  3427               	retlw	39
   335  1851  3437               	retlw	55
   336  1852  34BD               	retlw	189
   337  1853  3437               	retlw	55
   338  1854  3486               	retlw	134
   339  1855  3435               	retlw	53
   340  1856  3495               	retlw	149
   341  1857  34BF               	retlw	191
   342  1858  34D6               	retlw	214
   343  1859  3433               	retlw	51
   344  185A  3477               	retlw	119
   345  185B  34CC               	retlw	204
   346  185C  342B               	retlw	43
   347  185D  3432               	retlw	50
   348  185E  345F               	retlw	95
   349  185F  3470               	retlw	112
   350  1860  3489               	retlw	137
   351  1861  3430               	retlw	48
   352  1862  34FF               	retlw	255
   353  1863  34E6               	retlw	230
   354  1864  34DB               	retlw	219
   355  1865  342E               	retlw	46
   356  1866  3408               	retlw	8
   357  1867  34E5               	retlw	229
   358  1868  343C               	retlw	60
   359  1869  341E               	retlw	30
   360  186A  3460               	retlw	96
   361  186B  3442               	retlw	66
   362  186C  34A2               	retlw	162
   363  186D  340D               	retlw	13
   364  186E                     __end_of__npowers_:
   365  186E                     _dpowers:
   366  186E  3401               	retlw	1
   367  186F  3400               	retlw	0
   368  1870  3400               	retlw	0
   369  1871  3400               	retlw	0
   370  1872  340A               	retlw	10
   371  1873  3400               	retlw	0
   372  1874  3400               	retlw	0
   373  1875  3400               	retlw	0
   374  1876  3464               	retlw	100
   375  1877  3400               	retlw	0
   376  1878  3400               	retlw	0
   377  1879  3400               	retlw	0
   378  187A  34E8               	retlw	232
   379  187B  3403               	retlw	3
   380  187C  3400               	retlw	0
   381  187D  3400               	retlw	0
   382  187E  3410               	retlw	16
   383  187F  3427               	retlw	39
   384  1880  3400               	retlw	0
   385  1881  3400               	retlw	0
   386  1882  34A0               	retlw	160
   387  1883  3486               	retlw	134
   388  1884  3401               	retlw	1
   389  1885  3400               	retlw	0
   390  1886  3440               	retlw	64
   391  1887  3442               	retlw	66
   392  1888  340F               	retlw	15
   393  1889  3400               	retlw	0
   394  188A  3480               	retlw	128
   395  188B  3496               	retlw	150
   396  188C  3498               	retlw	152
   397  188D  3400               	retlw	0
   398  188E  3400               	retlw	0
   399  188F  34E1               	retlw	225
   400  1890  34F5               	retlw	245
   401  1891  3405               	retlw	5
   402  1892  3400               	retlw	0
   403  1893  34CA               	retlw	202
   404  1894  349A               	retlw	154
   405  1895  343B               	retlw	59
   406  1896                     __end_of_dpowers:
   407  1896                     STR_1:
   408  1896  3425               	retlw	37	;'%'
   409  1897  3430               	retlw	48	;'0'
   410  1898  342E               	retlw	46	;'.'
   411  1899  3430               	retlw	48	;'0'
   412  189A  3466               	retlw	102	;'f'
   413  189B  3400               	retlw	0
   414                           
   415                           	psect	nvBANK1
   416  00E3                     __pnvBANK1:
   417  00E3                     _v:
   418  00E3                     	ds	4
   419  0018                     _RCSTAbits	set	24
   420  0005                     _PORTA	set	5
   421  0006                     _PORTB	set	6
   422  0006                     _PORTBbits	set	6
   423  000B                     _INTCONbits	set	11
   424  001A                     _RCREG	set	26
   425  0008                     _PORTD	set	8
   426  0019                     _TXREG	set	25
   427  000C                     _PIR1bits	set	12
   428  0064                     _TXIF	set	100
   429  0096                     _IOCB	set	150
   430  008C                     _PIE1bits	set	140
   431  009A                     _SPBRGH	set	154
   432  0099                     _SPBRG	set	153
   433  0098                     _TXSTAbits	set	152
   434  008F                     _OSCCONbits	set	143
   435  0095                     _WPUB	set	149
   436  0081                     _OPTION_REGbits	set	129
   437  0086                     _TRISBbits	set	134
   438  0088                     _TRISD	set	136
   439  0086                     _TRISB	set	134
   440  0085                     _TRISA	set	133
   441  0187                     _BAUDCTLbits	set	391
   442  0189                     _ANSELH	set	393
   443  0188                     _ANSEL	set	392
   444                           
   445                           	psect	cinit
   446  000F                     start_initialization:	
   447                           ; #config settings
   448                           
   449  000F                     __initialization:
   450                           
   451                           ; Clear objects allocated to COMMON
   452  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   453  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   454                           
   455                           ; Clear objects allocated to BANK1
   456  0011  1383               	bcf	3,7	;select IRP bank0
   457  0012  30CE               	movlw	low __pbssBANK1
   458  0013  0084               	movwf	4
   459  0014  30E3               	movlw	low (__pbssBANK1+21)
   460  0015  160A  158A  2366  120A  118A  	fcall	clear_ram0
   461  001A                     end_of_initialization:	
   462                           ;End of C runtime variable initialization code
   463                           
   464  001A                     __end_of__initialization:
   465  001A  0183               	clrf	3
   466  001B  160A  158A  2E2B   	ljmp	_main	;jump to C main() function
   467                           
   468                           	psect	bssCOMMON
   469  0077                     __pbssCOMMON:
   470  0077                     _op:
   471  0077                     	ds	1
   472  0078                     _CONT:
   473  0078                     	ds	1
   474                           
   475                           	psect	bssBANK1
   476  00CE                     __pbssBANK1:
   477  00CE                     _f2:
   478  00CE                     	ds	10
   479  00D8                     _V:
   480  00D8                     	ds	1
   481  00D9                     _f1:
   482  00D9                     	ds	10
   483                           
   484                           	psect	clrtext
   485  1B66                     clear_ram0:	
   486                           ;	Called with FSR containing the base address, and
   487                           ;	W with the last address+1
   488                           
   489  1B66  0064               	clrwdt	;clear the watchdog before getting into this loop
   490  1B67                     clrloop0:
   491  1B67  0180               	clrf	0	;clear RAM location pointed to by FSR
   492  1B68  0A84               	incf	4,f	;increment pointer
   493  1B69  0604               	xorwf	4,w	;XOR with final address
   494  1B6A  1903               	btfsc	3,2	;have we reached the end yet?
   495  1B6B  3400               	retlw	0	;all done for this memory range, return
   496  1B6C  0604               	xorwf	4,w	;XOR again to restore value
   497  1B6D  2B67               	goto	clrloop0	;do the next byte
   498                           
   499                           	psect	cstackBANK1
   500  00A0                     __pcstackBANK1:
   501  00A0                     ?___flsub:
   502  00A0                     ___flsub@a:	
   503                           ; 4 bytes @ 0x0
   504                           
   505                           
   506                           ; 4 bytes @ 0x0
   507  00A0                     	ds	4
   508  00A4                     ___flsub@b:
   509                           
   510                           ; 4 bytes @ 0x4
   511  00A4                     	ds	4
   512  00A8                     ?_sprintf:
   513  00A8                     sprintf@f:	
   514                           ; 2 bytes @ 0x8
   515                           
   516                           
   517                           ; 1 bytes @ 0x8
   518  00A8                     	ds	5
   519  00AD                     ??_sprintf:
   520                           
   521                           ; 1 bytes @ 0xD
   522  00AD                     	ds	5
   523  00B2                     _sprintf$1113:
   524                           
   525                           ; 4 bytes @ 0x12
   526  00B2                     	ds	4
   527  00B6                     sprintf@ap:
   528                           
   529                           ; 1 bytes @ 0x16
   530  00B6                     	ds	1
   531  00B7                     sprintf@val:
   532                           
   533                           ; 4 bytes @ 0x17
   534  00B7                     	ds	4
   535  00BB                     sprintf@tmpval:
   536                           
   537                           ; 4 bytes @ 0x1B
   538  00BB                     	ds	4
   539  00BF                     sprintf@eexp:
   540                           
   541                           ; 2 bytes @ 0x1F
   542  00BF                     	ds	2
   543  00C1                     sprintf@flag:
   544                           
   545                           ; 2 bytes @ 0x21
   546  00C1                     	ds	2
   547  00C3                     sprintf@width:
   548                           
   549                           ; 2 bytes @ 0x23
   550  00C3                     	ds	2
   551  00C5                     sprintf@fval:
   552                           
   553                           ; 4 bytes @ 0x25
   554  00C5                     	ds	4
   555  00C9                     sprintf@prec:
   556                           
   557                           ; 2 bytes @ 0x29
   558  00C9                     	ds	2
   559  00CB                     sprintf@sp:
   560                           
   561                           ; 1 bytes @ 0x2B
   562  00CB                     	ds	1
   563  00CC                     sprintf@c:
   564                           
   565                           ; 1 bytes @ 0x2C
   566  00CC                     	ds	1
   567  00CD                     ??_main:
   568                           
   569                           ; 1 bytes @ 0x2D
   570  00CD                     	ds	1
   571                           
   572                           	psect	cstackCOMMON
   573  0070                     __pcstackCOMMON:
   574  0070                     ?_isdigit:
   575  0070                     ?_cfg_io:	
   576                           ; 1 bit 
   577                           
   578  0070                     ?_cfg_inte:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_cfg_iocb:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_cfg_usart:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_cfg_clk:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_send_crct:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_send_char:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_isr:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ??_isr:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_main:	
   603                           ; 1 bytes @ 0x0
   604                           
   605                           
   606                           ; 1 bytes @ 0x0
   607  0070                     	ds	5
   608  0075                     ??_cfg_io:
   609  0075                     ??_cfg_inte:	
   610                           ; 1 bytes @ 0x5
   611                           
   612  0075                     ??_cfg_iocb:	
   613                           ; 1 bytes @ 0x5
   614                           
   615  0075                     ??_cfg_usart:	
   616                           ; 1 bytes @ 0x5
   617                           
   618  0075                     ??_cfg_clk:	
   619                           ; 1 bytes @ 0x5
   620                           
   621  0075                     ??_send_char:	
   622                           ; 1 bytes @ 0x5
   623                           
   624  0075                     ??_isdigit:	
   625                           ; 1 bytes @ 0x5
   626                           
   627  0075                     ??__div_to_l_:	
   628                           ; 1 bytes @ 0x5
   629                           
   630  0075                     ??___wmul:	
   631                           ; 1 bytes @ 0x5
   632                           
   633  0075                     ??___lldiv:	
   634                           ; 1 bytes @ 0x5
   635                           
   636  0075                     ??___awmod:	
   637                           ; 1 bytes @ 0x5
   638                           
   639  0075                     ??___flneg:	
   640                           ; 1 bytes @ 0x5
   641                           
   642  0075                     ??___llmod:	
   643                           ; 1 bytes @ 0x5
   644                           
   645  0075                     ??___lwmod:	
   646                           ; 1 bytes @ 0x5
   647                           
   648  0075                     ?__Umul8_16:	
   649                           ; 1 bytes @ 0x5
   650                           
   651  0075                     send_char@dato:	
   652                           ; 2 bytes @ 0x5
   653                           
   654  0075                     __Umul8_16@multiplicand:	
   655                           ; 1 bytes @ 0x5
   656                           
   657  0075                     _isdigit$941:	
   658                           ; 1 bytes @ 0x5
   659                           
   660  0075                     ___wmul@product:	
   661                           ; 1 bytes @ 0x5
   662                           
   663                           
   664                           ; 2 bytes @ 0x5
   665  0075                     	ds	1
   666  0076                     ??_send_crct:
   667  0076                     ??___awdiv:	
   668                           ; 1 bytes @ 0x6
   669                           
   670  0076                     ___llmod@counter:	
   671                           ; 1 bytes @ 0x6
   672                           
   673  0076                     ___lwmod@counter:	
   674                           ; 1 bytes @ 0x6
   675                           
   676  0076                     isdigit@c:	
   677                           ; 1 bytes @ 0x6
   678                           
   679                           
   680                           ; 1 bytes @ 0x6
   681  0076                     	ds	1
   682  0077                     ??___flsub:
   683                           
   684                           	psect	cstackBANK0
   685  0020                     __pcstackBANK0:	
   686                           ; 1 bytes @ 0x7
   687                           
   688  0020                     ?___fleq:
   689  0020                     ?___flge:	
   690                           ; 1 bit 
   691                           
   692  0020                     ??__Umul8_16:	
   693                           ; 1 bit 
   694                           
   695  0020                     ?___wmul:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0020                     ?___awmod:	
   699                           ; 2 bytes @ 0x0
   700                           
   701  0020                     ?___lwmod:	
   702                           ; 2 bytes @ 0x0
   703                           
   704  0020                     ?__tdiv_to_l_:	
   705                           ; 2 bytes @ 0x0
   706                           
   707  0020                     ?__div_to_l_:	
   708                           ; 4 bytes @ 0x0
   709                           
   710  0020                     ?___lldiv:	
   711                           ; 4 bytes @ 0x0
   712                           
   713  0020                     ?___flneg:	
   714                           ; 4 bytes @ 0x0
   715                           
   716  0020                     ?___llmod:	
   717                           ; 4 bytes @ 0x0
   718                           
   719  0020                     ?___xxtofl:	
   720                           ; 4 bytes @ 0x0
   721                           
   722  0020                     send_crct@i:	
   723                           ; 4 bytes @ 0x0
   724                           
   725  0020                     ___wmul@multiplier:	
   726                           ; 2 bytes @ 0x0
   727                           
   728  0020                     ___awmod@divisor:	
   729                           ; 2 bytes @ 0x0
   730                           
   731  0020                     ___lwmod@divisor:	
   732                           ; 2 bytes @ 0x0
   733                           
   734  0020                     ___lldiv@divisor:	
   735                           ; 2 bytes @ 0x0
   736                           
   737  0020                     __div_to_l_@f1:	
   738                           ; 4 bytes @ 0x0
   739                           
   740  0020                     ___fleq@ff1:	
   741                           ; 4 bytes @ 0x0
   742                           
   743  0020                     ___flge@ff1:	
   744                           ; 4 bytes @ 0x0
   745                           
   746  0020                     ___flneg@f1:	
   747                           ; 4 bytes @ 0x0
   748                           
   749  0020                     __tdiv_to_l_@f1:	
   750                           ; 4 bytes @ 0x0
   751                           
   752  0020                     ___llmod@divisor:	
   753                           ; 4 bytes @ 0x0
   754                           
   755  0020                     ___xxtofl@val:	
   756                           ; 4 bytes @ 0x0
   757                           
   758                           
   759                           ; 4 bytes @ 0x0
   760  0020                     	ds	2
   761  0022                     send_crct@st:
   762  0022                     ___wmul@multiplicand:	
   763                           ; 1 bytes @ 0x2
   764                           
   765  0022                     ___awmod@dividend:	
   766                           ; 2 bytes @ 0x2
   767                           
   768  0022                     ___lwmod@dividend:	
   769                           ; 2 bytes @ 0x2
   770                           
   771  0022                     __Umul8_16@product:	
   772                           ; 2 bytes @ 0x2
   773                           
   774                           
   775                           ; 2 bytes @ 0x2
   776  0022                     	ds	2
   777  0024                     ??___xxtofl:
   778  0024                     ?___lwdiv:	
   779                           ; 1 bytes @ 0x4
   780                           
   781  0024                     ___awmod@counter:	
   782                           ; 2 bytes @ 0x4
   783                           
   784  0024                     ___lwdiv@divisor:	
   785                           ; 1 bytes @ 0x4
   786                           
   787  0024                     __Umul8_16@word_mpld:	
   788                           ; 2 bytes @ 0x4
   789                           
   790  0024                     ___lldiv@dividend:	
   791                           ; 2 bytes @ 0x4
   792                           
   793  0024                     __div_to_l_@f2:	
   794                           ; 4 bytes @ 0x4
   795                           
   796  0024                     ___fleq@ff2:	
   797                           ; 4 bytes @ 0x4
   798                           
   799  0024                     ___flge@ff2:	
   800                           ; 4 bytes @ 0x4
   801                           
   802  0024                     __tdiv_to_l_@f2:	
   803                           ; 4 bytes @ 0x4
   804                           
   805  0024                     ___llmod@dividend:	
   806                           ; 4 bytes @ 0x4
   807                           
   808                           
   809                           ; 4 bytes @ 0x4
   810  0024                     	ds	1
   811  0025                     ___awmod@sign:
   812                           
   813                           ; 1 bytes @ 0x5
   814  0025                     	ds	1
   815  0026                     ?___awdiv:
   816  0026                     __Umul8_16@multiplier:	
   817                           ; 2 bytes @ 0x6
   818                           
   819  0026                     ___awdiv@divisor:	
   820                           ; 1 bytes @ 0x6
   821                           
   822  0026                     ___lwdiv@dividend:	
   823                           ; 2 bytes @ 0x6
   824                           
   825                           
   826                           ; 2 bytes @ 0x6
   827  0026                     	ds	2
   828  0028                     ??__tdiv_to_l_:
   829  0028                     ??___fleq:	
   830                           ; 1 bytes @ 0x8
   831                           
   832  0028                     ??___flge:	
   833                           ; 1 bytes @ 0x8
   834                           
   835  0028                     ??___lwdiv:	
   836                           ; 1 bytes @ 0x8
   837                           
   838  0028                     ___xxtofl@sign:	
   839                           ; 1 bytes @ 0x8
   840                           
   841  0028                     ___awdiv@dividend:	
   842                           ; 1 bytes @ 0x8
   843                           
   844  0028                     ___lldiv@quotient:	
   845                           ; 2 bytes @ 0x8
   846                           
   847  0028                     __div_to_l_@quot:	
   848                           ; 4 bytes @ 0x8
   849                           
   850                           
   851                           ; 4 bytes @ 0x8
   852  0028                     	ds	1
   853  0029                     ___xxtofl@exp:
   854  0029                     ___lwdiv@quotient:	
   855                           ; 1 bytes @ 0x9
   856                           
   857                           
   858                           ; 2 bytes @ 0x9
   859  0029                     	ds	1
   860  002A                     ___awdiv@counter:
   861  002A                     ___xxtofl@arg:	
   862                           ; 1 bytes @ 0xA
   863                           
   864                           
   865                           ; 4 bytes @ 0xA
   866  002A                     	ds	1
   867  002B                     ___awdiv@sign:
   868  002B                     ___lwdiv@counter:	
   869                           ; 1 bytes @ 0xB
   870                           
   871                           
   872                           ; 1 bytes @ 0xB
   873  002B                     	ds	1
   874  002C                     ___lldiv@counter:
   875  002C                     __div_to_l_@cntr:	
   876                           ; 1 bytes @ 0xC
   877                           
   878  002C                     ___awdiv@quotient:	
   879                           ; 1 bytes @ 0xC
   880                           
   881  002C                     __tdiv_to_l_@quot:	
   882                           ; 2 bytes @ 0xC
   883                           
   884                           
   885                           ; 4 bytes @ 0xC
   886  002C                     	ds	1
   887  002D                     __div_to_l_@exp1:
   888                           
   889                           ; 1 bytes @ 0xD
   890  002D                     	ds	1
   891  002E                     ?_conv:
   892  002E                     ?___flmul:	
   893                           ; 4 bytes @ 0xE
   894                           
   895  002E                     ___flmul@b:	
   896                           ; 4 bytes @ 0xE
   897                           
   898                           
   899                           ; 4 bytes @ 0xE
   900  002E                     	ds	2
   901  0030                     __tdiv_to_l_@cntr:
   902                           
   903                           ; 1 bytes @ 0x10
   904  0030                     	ds	1
   905  0031                     __tdiv_to_l_@exp1:
   906                           
   907                           ; 1 bytes @ 0x11
   908  0031                     	ds	1
   909  0032                     ??_conv:
   910  0032                     ___flmul@a:	
   911                           ; 1 bytes @ 0x12
   912                           
   913                           
   914                           ; 4 bytes @ 0x12
   915  0032                     	ds	4
   916  0036                     ??___flmul:
   917  0036                     conv@result:	
   918                           ; 1 bytes @ 0x16
   919                           
   920                           
   921                           ; 4 bytes @ 0x16
   922  0036                     	ds	4
   923  003A                     conv@aa:
   924                           
   925                           ; 1 bytes @ 0x1A
   926  003A                     	ds	1
   927  003B                     ___flmul@sign:
   928                           
   929                           ; 1 bytes @ 0x1B
   930  003B                     	ds	1
   931  003C                     ___flmul@aexp:
   932                           
   933                           ; 1 bytes @ 0x1C
   934  003C                     	ds	1
   935  003D                     ___flmul@grs:
   936                           
   937                           ; 4 bytes @ 0x1D
   938  003D                     	ds	4
   939  0041                     ___flmul@bexp:
   940                           
   941                           ; 1 bytes @ 0x21
   942  0041                     	ds	1
   943  0042                     ___flmul@prod:
   944                           
   945                           ; 4 bytes @ 0x22
   946  0042                     	ds	4
   947  0046                     ___flmul@temp:
   948                           
   949                           ; 2 bytes @ 0x26
   950  0046                     	ds	2
   951  0048                     ?_fround:
   952  0048                     ?_scale:	
   953                           ; 4 bytes @ 0x28
   954                           
   955                           
   956                           ; 4 bytes @ 0x28
   957  0048                     	ds	4
   958  004C                     ??_fround:
   959  004C                     ??_scale:	
   960                           ; 1 bytes @ 0x2C
   961                           
   962                           
   963                           ; 1 bytes @ 0x2C
   964  004C                     	ds	7
   965  0053                     _fround$1111:
   966                           
   967                           ; 4 bytes @ 0x33
   968  0053                     	ds	3
   969  0056                     _scale$1112:
   970                           
   971                           ; 4 bytes @ 0x36
   972  0056                     	ds	1
   973  0057                     _fround$1110:
   974                           
   975                           ; 4 bytes @ 0x37
   976  0057                     	ds	3
   977  005A                     scale@scl:
   978                           
   979                           ; 1 bytes @ 0x3A
   980  005A                     	ds	1
   981  005B                     ?___fltol:
   982  005B                     fround@prec:	
   983                           ; 4 bytes @ 0x3B
   984                           
   985  005B                     ___fltol@f1:	
   986                           ; 1 bytes @ 0x3B
   987                           
   988                           
   989                           ; 4 bytes @ 0x3B
   990  005B                     	ds	1
   991  005C                     ?___fladd:
   992  005C                     ___fladd@b:	
   993                           ; 4 bytes @ 0x3C
   994                           
   995                           
   996                           ; 4 bytes @ 0x3C
   997  005C                     	ds	3
   998  005F                     ??___fltol:
   999                           
  1000                           ; 1 bytes @ 0x3F
  1001  005F                     	ds	1
  1002  0060                     ___fladd@a:
  1003                           
  1004                           ; 4 bytes @ 0x40
  1005  0060                     	ds	4
  1006  0064                     ??___fladd:
  1007  0064                     ___fltol@sign1:	
  1008                           ; 1 bytes @ 0x44
  1009                           
  1010                           
  1011                           ; 1 bytes @ 0x44
  1012  0064                     	ds	1
  1013  0065                     ___fltol@exp1:
  1014                           
  1015                           ; 1 bytes @ 0x45
  1016  0065                     	ds	7
  1017  006C                     ___fladd@signs:
  1018                           
  1019                           ; 1 bytes @ 0x4C
  1020  006C                     	ds	1
  1021  006D                     ___fladd@aexp:
  1022                           
  1023                           ; 1 bytes @ 0x4D
  1024  006D                     	ds	1
  1025  006E                     ___fladd@bexp:
  1026                           
  1027                           ; 1 bytes @ 0x4E
  1028  006E                     	ds	1
  1029  006F                     ___fladd@grs:
  1030                           
  1031                           ; 1 bytes @ 0x4F
  1032  006F                     	ds	1
  1033                           
  1034                           	psect	maintext
  1035  1E2B                     __pmaintext:	
  1036 ;;
  1037 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1038 ;;
  1039 ;; *************** function _main *****************
  1040 ;; Defined at:
  1041 ;;		line 89 in file "main5a.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : B00/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0
  1057 ;;      Temps:          0       0       1       0       0
  1058 ;;      Totals:         0       0       1       0       0
  1059 ;;Total ram usage:        1 bytes
  1060 ;; Hardware stack levels required when called:    5
  1061 ;; This function calls:
  1062 ;;		_cfg_clk
  1063 ;;		_cfg_inte
  1064 ;;		_cfg_io
  1065 ;;		_cfg_iocb
  1066 ;;		_cfg_usart
  1067 ;;		_conv
  1068 ;;		_send_crct
  1069 ;;		_sprintf
  1070 ;; This function is called by:
  1071 ;;		Startup code after reset
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _main
  1077  1E2B                     _main:
  1078  1E2B                     l4278:	
  1079                           ;incstack = 0
  1080                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1081                           
  1082                           
  1083                           ;main5a.c: 90:     cfg_io();
  1084  1E2B  160A  158A  2380  160A  158A  	fcall	_cfg_io
  1085  1E30                     l4280:
  1086                           
  1087                           ;main5a.c: 91:     cfg_inte();
  1088  1E30  160A  158A  235E  160A  158A  	fcall	_cfg_inte
  1089  1E35                     l4282:
  1090                           
  1091                           ;main5a.c: 92:     cfg_iocb();
  1092  1E35  160A  158A  2358  160A  158A  	fcall	_cfg_iocb
  1093  1E3A                     l4284:
  1094                           
  1095                           ;main5a.c: 93:     cfg_usart();
  1096  1E3A  160A  158A  2394  160A  158A  	fcall	_cfg_usart
  1097  1E3F                     l4286:
  1098                           
  1099                           ;main5a.c: 94:     cfg_clk();
  1100  1E3F  160A  158A  2352  160A  158A  	fcall	_cfg_clk
  1101  1E44                     l4288:
  1102                           
  1103                           ;main5a.c: 99:       v = conv(V);
  1104  1E44  1683               	bsf	3,5	;RP0=1, select bank1
  1105  1E45  1303               	bcf	3,6	;RP1=0, select bank1
  1106  1E46  0858               	movf	_V^(0+128),w
  1107  1E47  160A  158A  23F5  160A  158A  	fcall	_conv
  1108  1E4C  1283               	bcf	3,5	;RP0=0, select bank0
  1109  1E4D  1303               	bcf	3,6	;RP1=0, select bank0
  1110  1E4E  0831               	movf	?_conv+3,w
  1111  1E4F  1683               	bsf	3,5	;RP0=1, select bank1
  1112  1E50  1303               	bcf	3,6	;RP1=0, select bank1
  1113  1E51  00E6               	movwf	(_v+3)^(0+128)
  1114  1E52  1283               	bcf	3,5	;RP0=0, select bank0
  1115  1E53  1303               	bcf	3,6	;RP1=0, select bank0
  1116  1E54  0830               	movf	?_conv+2,w
  1117  1E55  1683               	bsf	3,5	;RP0=1, select bank1
  1118  1E56  1303               	bcf	3,6	;RP1=0, select bank1
  1119  1E57  00E5               	movwf	(_v+2)^(0+128)
  1120  1E58  1283               	bcf	3,5	;RP0=0, select bank0
  1121  1E59  1303               	bcf	3,6	;RP1=0, select bank0
  1122  1E5A  082F               	movf	?_conv+1,w
  1123  1E5B  1683               	bsf	3,5	;RP0=1, select bank1
  1124  1E5C  1303               	bcf	3,6	;RP1=0, select bank1
  1125  1E5D  00E4               	movwf	(_v+1)^(0+128)
  1126  1E5E  1283               	bcf	3,5	;RP0=0, select bank0
  1127  1E5F  1303               	bcf	3,6	;RP1=0, select bank0
  1128  1E60  082E               	movf	?_conv,w
  1129  1E61  1683               	bsf	3,5	;RP0=1, select bank1
  1130  1E62  1303               	bcf	3,6	;RP1=0, select bank1
  1131  1E63  00E3               	movwf	_v^(0+128)
  1132  1E64                     l4290:
  1133                           
  1134                           ;main5a.c: 101:       sprintf(f1, "%0.0f",v);
  1135  1E64  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1136  1E65  00CD               	movwf	??_main^(0+128)
  1137  1E66  084D               	movf	??_main^(0+128),w
  1138  1E67  00A8               	movwf	sprintf@f^(0+128)
  1139  1E68  0866               	movf	(_v+3)^(0+128),w
  1140  1E69  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1141  1E6A  0865               	movf	(_v+2)^(0+128),w
  1142  1E6B  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1143  1E6C  0864               	movf	(_v+1)^(0+128),w
  1144  1E6D  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1145  1E6E  0863               	movf	_v^(0+128),w
  1146  1E6F  00A9               	movwf	(?_sprintf^(0+128)+1)
  1147  1E70  30D9               	movlw	(low (_f1| 0))& (0+255)
  1148  1E71  120A  158A  249B  160A  158A  	fcall	_sprintf
  1149  1E76                     l4292:
  1150                           
  1151                           ;main5a.c: 103:       TXREG = '\f';
  1152  1E76  300C               	movlw	12
  1153  1E77  1283               	bcf	3,5	;RP0=0, select bank0
  1154  1E78  1303               	bcf	3,6	;RP1=0, select bank0
  1155  1E79  0099               	movwf	25	;volatile
  1156  1E7A                     l4294:
  1157                           
  1158                           ;main5a.c: 104:       send_crct(f1);
  1159  1E7A  30D9               	movlw	(low (_f1| 0))& (0+255)
  1160  1E7B  160A  158A  23A9  160A  158A  	fcall	_send_crct
  1161  1E80                     l4296:
  1162                           
  1163                           ;main5a.c: 106:       _delay((unsigned long)((500)*(4000000/4000000.0)));
  1164  1E80  30A5               	movlw	165
  1165  1E81  1683               	bsf	3,5	;RP0=1, select bank1
  1166  1E82  1303               	bcf	3,6	;RP1=0, select bank1
  1167  1E83  00CD               	movwf	??_main^(0+128)
  1168  1E84                     u7537:
  1169  1E84  0BCD               	decfsz	??_main^(0+128),f
  1170  1E85  2E84               	goto	u7537
  1171  1E86  2E87               	nop2
  1172  1E87  2E44               	goto	l4288
  1173  1E88  120A  118A  280C   	ljmp	start
  1174  1E8B                     __end_of_main:
  1175                           
  1176                           	psect	text1
  1177  0C9B                     __ptext1:	
  1178 ;; *************** function _sprintf *****************
  1179 ;; Defined at:
  1180 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;  sp              1    wreg     PTR unsigned char 
  1183 ;;		 -> f1(10), 
  1184 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1185 ;;		 -> STR_1(6), 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  sp              1   43[BANK1 ] PTR unsigned char 
  1188 ;;		 -> f1(10), 
  1189 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1190 ;;  tmpval          4   27[BANK1 ] struct .
  1191 ;;  val             4   23[BANK1 ] unsigned long 
  1192 ;;  prec            2   41[BANK1 ] int 
  1193 ;;  width           2   35[BANK1 ] int 
  1194 ;;  flag            2   33[BANK1 ] unsigned short 
  1195 ;;  eexp            2   31[BANK1 ] int 
  1196 ;;  cp              2    0        PTR const unsigned char 
  1197 ;;  len             2    0        unsigned int 
  1198 ;;  c               1   44[BANK1 ] unsigned char 
  1199 ;;  ap              1   22[BANK1 ] PTR void [1]
  1200 ;;		 -> ?_sprintf(2), 
  1201 ;;  d               1    0        unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  2    8[BANK1 ] int 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       5       0       0
  1212 ;;      Locals:         0       0      27       0       0
  1213 ;;      Temps:          0       0       5       0       0
  1214 ;;      Totals:         0       0      37       0       0
  1215 ;;Total ram usage:       37 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    4
  1218 ;; This function calls:
  1219 ;;		___awdiv
  1220 ;;		___fladd
  1221 ;;		___fleq
  1222 ;;		___flge
  1223 ;;		___flmul
  1224 ;;		___flneg
  1225 ;;		___flsub
  1226 ;;		___fltol
  1227 ;;		___lldiv
  1228 ;;		___llmod
  1229 ;;		___wmul
  1230 ;;		___xxtofl
  1231 ;;		__div_to_l_
  1232 ;;		__tdiv_to_l_
  1233 ;;		_fround
  1234 ;;		_isdigit
  1235 ;;		_scale
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _sprintf
  1243  0C9B                     _sprintf:
  1244                           
  1245                           ;incstack = 0
  1246                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1247                           ;sprintf@sp stored from wreg
  1248  0C9B  1683               	bsf	3,5	;RP0=1, select bank1
  1249  0C9C  1303               	bcf	3,6	;RP1=0, select bank1
  1250  0C9D  00CB               	movwf	sprintf@sp^(0+128)
  1251  0C9E                     l3972:
  1252                           
  1253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1254  0C9E  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1255  0C9F  00AD               	movwf	??_sprintf^(0+128)
  1256  0CA0  082D               	movf	??_sprintf^(0+128),w
  1257  0CA1  00B6               	movwf	sprintf@ap^(0+128)
  1258  0CA2                     L1:
  1259                           
  1260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1261  0CA2  120A  118A  2E35   	goto	l4260
  1262  0CA5                     l3974:
  1263                           
  1264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1265  0CA5  3025               	movlw	37
  1266  0CA6  064C               	xorwf	sprintf@c^(0+128),w
  1267  0CA7  1903               	btfsc	3,2
  1268  0CA8  2CAA               	goto	u6991
  1269  0CA9  2CAB               	goto	u6990
  1270  0CAA                     u6991:
  1271  0CAA  2CB7               	goto	l3980
  1272  0CAB                     u6990:
  1273  0CAB                     l3976:
  1274                           
  1275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1276  0CAB  084C               	movf	sprintf@c^(0+128),w
  1277  0CAC  00AD               	movwf	??_sprintf^(0+128)
  1278  0CAD  084B               	movf	sprintf@sp^(0+128),w
  1279  0CAE  0084               	movwf	4
  1280  0CAF  082D               	movf	??_sprintf^(0+128),w
  1281  0CB0  1383               	bcf	3,7	;select IRP bank0
  1282  0CB1  0080               	movwf	0
  1283  0CB2                     l3978:
  1284  0CB2  3001               	movlw	1
  1285  0CB3  00AD               	movwf	??_sprintf^(0+128)
  1286  0CB4  082D               	movf	??_sprintf^(0+128),w
  1287  0CB5  07CB               	addwf	sprintf@sp^(0+128),f
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1290  0CB6  2CA2               	goto	L1
  1291  0CB7                     l3980:
  1292                           
  1293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1294  0CB7  01C3               	clrf	sprintf@width^(0+128)
  1295  0CB8  01C4               	clrf	(sprintf@width+1)^(0+128)
  1296                           
  1297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1298  0CB9  01C1               	clrf	sprintf@flag^(0+128)
  1299  0CBA  01C2               	clrf	(sprintf@flag+1)^(0+128)
  1300  0CBB  2CC1               	goto	l3986
  1301  0CBC                     l251:	
  1302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1303                           
  1304                           
  1305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1306  0CBC  1541               	bsf	sprintf@flag^(0+128),2
  1307  0CBD                     l3982:
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  1310  0CBD  3001               	movlw	1
  1311  0CBE  00AD               	movwf	??_sprintf^(0+128)
  1312  0CBF  082D               	movf	??_sprintf^(0+128),w
  1313  0CC0  07A8               	addwf	sprintf@f^(0+128),f
  1314  0CC1                     l3986:	
  1315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1316                           
  1317  0CC1  0828               	movf	sprintf@f^(0+128),w
  1318  0CC2  0084               	movwf	4
  1319  0CC3  160A  158A  2000  120A  158A  	fcall	stringdir
  1320  0CC8  00AD               	movwf	??_sprintf^(0+128)
  1321  0CC9  01AE               	clrf	(??_sprintf^(0+128)+1)
  1322                           
  1323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1324                           ; Switch size 1, requested type "simple"
  1325                           ; Number of cases is 1, Range of values is 0 to 0
  1326                           ; switch strategies available:
  1327                           ; Name         Instructions Cycles
  1328                           ; simple_byte            4     3 (average)
  1329                           ; direct_byte           11     8 (fixed)
  1330                           ; jumptable            260     6 (fixed)
  1331                           ;	Chosen strategy is simple_byte
  1332  0CCA  082E               	movf	(??_sprintf+1)^(0+128),w
  1333  0CCB  3A00               	xorlw	0	; case 0
  1334  0CCC  1903               	skipnz
  1335  0CCD  2CCF               	goto	l4358
  1336  0CCE  2CD4               	goto	l3988
  1337  0CCF                     l4358:
  1338                           
  1339                           ; Switch size 1, requested type "simple"
  1340                           ; Number of cases is 1, Range of values is 48 to 48
  1341                           ; switch strategies available:
  1342                           ; Name         Instructions Cycles
  1343                           ; simple_byte            4     3 (average)
  1344                           ; direct_byte           14    11 (fixed)
  1345                           ; jumptable            263     9 (fixed)
  1346                           ;	Chosen strategy is simple_byte
  1347  0CCF  082D               	movf	??_sprintf^(0+128),w
  1348  0CD0  3A30               	xorlw	48	; case 48
  1349  0CD1  1903               	skipnz
  1350  0CD2  2CBC               	goto	l251
  1351  0CD3  2CD4               	goto	l3988
  1352  0CD4                     l3988:
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1355  0CD4  0828               	movf	sprintf@f^(0+128),w
  1356  0CD5  0084               	movwf	4
  1357  0CD6  160A  158A  2000  120A  158A  	fcall	stringdir
  1358  0CDB  160A  158A  236E  120A  158A  	fcall	_isdigit
  1359  0CE0  1C03               	btfss	3,0
  1360  0CE1  2CE3               	goto	u7001
  1361  0CE2  2CE4               	goto	u7000
  1362  0CE3                     u7001:
  1363  0CE3  2D32               	goto	l4000
  1364  0CE4                     u7000:
  1365  0CE4                     l3990:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1368  0CE4  1683               	bsf	3,5	;RP0=1, select bank1
  1369  0CE5  1303               	bcf	3,6	;RP1=0, select bank1
  1370  0CE6  01C3               	clrf	sprintf@width^(0+128)
  1371  0CE7  01C4               	clrf	(sprintf@width+1)^(0+128)
  1372  0CE8                     l3992:
  1373                           
  1374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1375  0CE8  300A               	movlw	10
  1376  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0CEB  00A0               	movwf	___wmul@multiplier
  1379  0CEC  3000               	movlw	0
  1380  0CED  00A1               	movwf	___wmul@multiplier+1
  1381  0CEE  1683               	bsf	3,5	;RP0=1, select bank1
  1382  0CEF  1303               	bcf	3,6	;RP1=0, select bank1
  1383  0CF0  0844               	movf	(sprintf@width+1)^(0+128),w
  1384  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0CF3  00A3               	movwf	___wmul@multiplicand+1
  1387  0CF4  1683               	bsf	3,5	;RP0=1, select bank1
  1388  0CF5  1303               	bcf	3,6	;RP1=0, select bank1
  1389  0CF6  0843               	movf	sprintf@width^(0+128),w
  1390  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0CF9  00A2               	movwf	___wmul@multiplicand
  1393  0CFA  160A  158A  23CE  120A  158A  	fcall	___wmul
  1394  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  1395  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  1396  0D01  0821               	movf	?___wmul+1,w
  1397  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  1398  0D03  1303               	bcf	3,6	;RP1=0, select bank1
  1399  0D04  00C4               	movwf	(sprintf@width+1)^(0+128)
  1400  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0D07  0820               	movf	?___wmul,w
  1403  0D08  1683               	bsf	3,5	;RP0=1, select bank1
  1404  0D09  1303               	bcf	3,6	;RP1=0, select bank1
  1405  0D0A  00C3               	movwf	sprintf@width^(0+128)
  1406  0D0B                     l3994:
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1409  0D0B  0828               	movf	sprintf@f^(0+128),w
  1410  0D0C  0084               	movwf	4
  1411  0D0D  160A  158A  2000  120A  158A  	fcall	stringdir
  1412  0D12  3ED0               	addlw	208
  1413  0D13  00AD               	movwf	??_sprintf^(0+128)
  1414  0D14  30FF               	movlw	255
  1415  0D15  1803               	skipnc
  1416  0D16  3000               	movlw	0
  1417  0D17  00AE               	movwf	(??_sprintf^(0+128)+1)
  1418  0D18  082D               	movf	??_sprintf^(0+128),w
  1419  0D19  07C3               	addwf	sprintf@width^(0+128),f
  1420  0D1A  1803               	skipnc
  1421  0D1B  0AC4               	incf	(sprintf@width+1)^(0+128),f
  1422  0D1C  082E               	movf	(??_sprintf+1)^(0+128),w
  1423  0D1D  07C4               	addwf	(sprintf@width+1)^(0+128),f
  1424  0D1E                     l3996:
  1425  0D1E  3001               	movlw	1
  1426  0D1F  00AD               	movwf	??_sprintf^(0+128)
  1427  0D20  082D               	movf	??_sprintf^(0+128),w
  1428  0D21  07A8               	addwf	sprintf@f^(0+128),f
  1429  0D22                     l3998:
  1430                           
  1431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1432  0D22  0828               	movf	sprintf@f^(0+128),w
  1433  0D23  0084               	movwf	4
  1434  0D24  160A  158A  2000  120A  158A  	fcall	stringdir
  1435  0D29  160A  158A  236E  120A  158A  	fcall	_isdigit
  1436  0D2E  1803               	btfsc	3,0
  1437  0D2F  2D31               	goto	u7011
  1438  0D30  2D32               	goto	u7010
  1439  0D31                     u7011:
  1440  0D31  2CE8               	goto	l3992
  1441  0D32                     u7010:
  1442  0D32                     l4000:
  1443                           
  1444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1445  0D32  1683               	bsf	3,5	;RP0=1, select bank1
  1446  0D33  1303               	bcf	3,6	;RP1=0, select bank1
  1447  0D34  0828               	movf	sprintf@f^(0+128),w
  1448  0D35  0084               	movwf	4
  1449  0D36  160A  158A  2000  120A  158A  	fcall	stringdir
  1450  0D3B  3A2E               	xorlw	46
  1451  0D3C  1D03               	skipz
  1452  0D3D  2D3F               	goto	u7021
  1453  0D3E  2D40               	goto	u7020
  1454  0D3F                     u7021:
  1455  0D3F  2D93               	goto	l4016
  1456  0D40                     u7020:
  1457  0D40                     l4002:
  1458                           
  1459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1460  0D40  1742               	bsf	(sprintf@flag^(0+128)+1),6
  1461  0D41                     l4004:
  1462                           
  1463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1464  0D41  3001               	movlw	1
  1465  0D42  00AD               	movwf	??_sprintf^(0+128)
  1466  0D43  082D               	movf	??_sprintf^(0+128),w
  1467  0D44  07A8               	addwf	sprintf@f^(0+128),f
  1468  0D45                     l4006:
  1469                           
  1470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1471  0D45  01C9               	clrf	sprintf@prec^(0+128)
  1472  0D46  01CA               	clrf	(sprintf@prec+1)^(0+128)
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1475  0D47  2D82               	goto	l4014
  1476  0D48                     l4008:
  1477                           
  1478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1479  0D48  300A               	movlw	10
  1480  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0D4A  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0D4B  00A0               	movwf	___wmul@multiplier
  1483  0D4C  3000               	movlw	0
  1484  0D4D  00A1               	movwf	___wmul@multiplier+1
  1485  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  1486  0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  1487  0D50  084A               	movf	(sprintf@prec+1)^(0+128),w
  1488  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0D53  00A3               	movwf	___wmul@multiplicand+1
  1491  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  1492  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  1493  0D56  0849               	movf	sprintf@prec^(0+128),w
  1494  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0D58  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0D59  00A2               	movwf	___wmul@multiplicand
  1497  0D5A  160A  158A  23CE  120A  158A  	fcall	___wmul
  1498  0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0D60  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0D61  0821               	movf	?___wmul+1,w
  1501  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  1502  0D63  1303               	bcf	3,6	;RP1=0, select bank1
  1503  0D64  00CA               	movwf	(sprintf@prec+1)^(0+128)
  1504  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0D67  0820               	movf	?___wmul,w
  1507  0D68  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0D69  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0D6A  00C9               	movwf	sprintf@prec^(0+128)
  1510  0D6B                     l4010:
  1511                           
  1512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1513  0D6B  0828               	movf	sprintf@f^(0+128),w
  1514  0D6C  0084               	movwf	4
  1515  0D6D  160A  158A  2000  120A  158A  	fcall	stringdir
  1516  0D72  3ED0               	addlw	208
  1517  0D73  00AD               	movwf	??_sprintf^(0+128)
  1518  0D74  30FF               	movlw	255
  1519  0D75  1803               	skipnc
  1520  0D76  3000               	movlw	0
  1521  0D77  00AE               	movwf	(??_sprintf^(0+128)+1)
  1522  0D78  082D               	movf	??_sprintf^(0+128),w
  1523  0D79  07C9               	addwf	sprintf@prec^(0+128),f
  1524  0D7A  1803               	skipnc
  1525  0D7B  0ACA               	incf	(sprintf@prec+1)^(0+128),f
  1526  0D7C  082E               	movf	(??_sprintf+1)^(0+128),w
  1527  0D7D  07CA               	addwf	(sprintf@prec+1)^(0+128),f
  1528  0D7E                     l4012:
  1529  0D7E  3001               	movlw	1
  1530  0D7F  00AD               	movwf	??_sprintf^(0+128)
  1531  0D80  082D               	movf	??_sprintf^(0+128),w
  1532  0D81  07A8               	addwf	sprintf@f^(0+128),f
  1533  0D82                     l4014:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1536  0D82  0828               	movf	sprintf@f^(0+128),w
  1537  0D83  0084               	movwf	4
  1538  0D84  160A  158A  2000  120A  158A  	fcall	stringdir
  1539  0D89  160A  158A  236E  120A  158A  	fcall	_isdigit
  1540  0D8E  1803               	btfsc	3,0
  1541  0D8F  2D91               	goto	u7031
  1542  0D90  2D92               	goto	u7030
  1543  0D91                     u7031:
  1544  0D91  2D48               	goto	l4008
  1545  0D92                     u7030:
  1546  0D92  2D99               	goto	l4022
  1547  0D93                     l4016:
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1550  0D93  01C9               	clrf	sprintf@prec^(0+128)
  1551  0D94  01CA               	clrf	(sprintf@prec+1)^(0+128)
  1552  0D95                     l4018:
  1553                           
  1554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1555  0D95  1642               	bsf	(sprintf@flag^(0+128)+1),4
  1556  0D96  2D99               	goto	l4022
  1557  0D97                     l266:	
  1558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1559                           
  1560                           
  1561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1562  0D97  1542               	bsf	(sprintf@flag^(0+128)+1),2
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1565  0D98  2DB5               	goto	l4024
  1566  0D99                     l4022:
  1567  0D99  3001               	movlw	1
  1568  0D9A  1683               	bsf	3,5	;RP0=1, select bank1
  1569  0D9B  1303               	bcf	3,6	;RP1=0, select bank1
  1570  0D9C  07A8               	addwf	sprintf@f^(0+128),f
  1571  0D9D  30FF               	movlw	-1
  1572  0D9E  0728               	addwf	sprintf@f^(0+128),w
  1573  0D9F  0084               	movwf	4
  1574  0DA0  160A  158A  2000  120A  158A  	fcall	stringdir
  1575  0DA5  00CC               	movwf	sprintf@c^(0+128)
  1576  0DA6  00AD               	movwf	??_sprintf^(0+128)
  1577  0DA7  01AE               	clrf	(??_sprintf^(0+128)+1)
  1578                           
  1579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1580                           ; Switch size 1, requested type "simple"
  1581                           ; Number of cases is 1, Range of values is 0 to 0
  1582                           ; switch strategies available:
  1583                           ; Name         Instructions Cycles
  1584                           ; simple_byte            4     3 (average)
  1585                           ; direct_byte           11     8 (fixed)
  1586                           ; jumptable            260     6 (fixed)
  1587                           ;	Chosen strategy is simple_byte
  1588  0DA8  082E               	movf	(??_sprintf+1)^(0+128),w
  1589  0DA9  3A00               	xorlw	0	; case 0
  1590  0DAA  1903               	skipnz
  1591  0DAB  2DAD               	goto	l4360
  1592  0DAC  2CA2               	goto	L1
  1593  0DAD                     l4360:
  1594                           
  1595                           ; Switch size 1, requested type "simple"
  1596                           ; Number of cases is 2, Range of values is 0 to 102
  1597                           ; switch strategies available:
  1598                           ; Name         Instructions Cycles
  1599                           ; simple_byte            7     4 (average)
  1600                           ; jumptable            260     6 (fixed)
  1601                           ;	Chosen strategy is simple_byte
  1602  0DAD  082D               	movf	??_sprintf^(0+128),w
  1603  0DAE  3A00               	xorlw	0	; case 0
  1604  0DAF  1903               	skipnz
  1605  0DB0  2FFD               	goto	L3
  1606  0DB1  3A66               	xorlw	102	; case 102
  1607  0DB2  1903               	skipnz
  1608  0DB3  2D97               	goto	l266
  1609  0DB4  2CA2               	goto	L1
  1610  0DB5                     l4024:
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1613  0DB5  3000               	movlw	0
  1614  0DB6  0541               	andwf	sprintf@flag^(0+128),w
  1615  0DB7  00AD               	movwf	??_sprintf^(0+128)
  1616  0DB8  3007               	movlw	7
  1617  0DB9  0542               	andwf	(sprintf@flag+1)^(0+128),w
  1618  0DBA  00AE               	movwf	(??_sprintf+1)^(0+128)
  1619  0DBB  082D               	movf	??_sprintf^(0+128),w
  1620  0DBC  042E               	iorwf	(??_sprintf^(0+128)+1),w
  1621  0DBD  1903               	btfsc	3,2
  1622  0DBE  2DC0               	goto	u7041
  1623  0DBF  2DC3               	goto	u7040
  1624  0DC0                     u7041:
  1625  0DC0  120A  118A  2D37   	goto	l4198
  1626  0DC3                     u7040:
  1627  0DC3                     l4026:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1630  0DC3  1E42               	btfss	(sprintf@flag+1)^(0+128),4
  1631  0DC4  2DC6               	goto	u7051
  1632  0DC5  2DC7               	goto	u7050
  1633  0DC6                     u7051:
  1634  0DC6  2DCB               	goto	l4030
  1635  0DC7                     u7050:
  1636  0DC7                     l4028:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1639  0DC7  3006               	movlw	6
  1640  0DC8  00C9               	movwf	sprintf@prec^(0+128)
  1641  0DC9  3000               	movlw	0
  1642  0DCA  00CA               	movwf	(sprintf@prec^(0+128)+1)
  1643  0DCB                     l4030:
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1646  0DCB  0836               	movf	sprintf@ap^(0+128),w
  1647  0DCC  0084               	movwf	4
  1648  0DCD  1383               	bcf	3,7	;select IRP bank0
  1649  0DCE  0800               	movf	0,w
  1650  0DCF  00C5               	movwf	sprintf@fval^(0+128)
  1651  0DD0  0A84               	incf	4,f
  1652  0DD1  0800               	movf	0,w
  1653  0DD2  00C6               	movwf	(sprintf@fval+1)^(0+128)
  1654  0DD3  0A84               	incf	4,f
  1655  0DD4  0800               	movf	0,w
  1656  0DD5  00C7               	movwf	(sprintf@fval+2)^(0+128)
  1657  0DD6  0A84               	incf	4,f
  1658  0DD7  0800               	movf	0,w
  1659  0DD8  00C8               	movwf	(sprintf@fval+3)^(0+128)
  1660  0DD9                     l4032:
  1661  0DD9  3004               	movlw	4
  1662  0DDA  00AD               	movwf	??_sprintf^(0+128)
  1663  0DDB  082D               	movf	??_sprintf^(0+128),w
  1664  0DDC  07B6               	addwf	sprintf@ap^(0+128),f
  1665  0DDD                     l4034:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1668  0DDD  0848               	movf	(sprintf@fval+3)^(0+128),w
  1669  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0DE0  00A3               	movwf	___flge@ff1+3
  1672  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  1673  0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  1674  0DE3  0847               	movf	(sprintf@fval+2)^(0+128),w
  1675  0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0DE6  00A2               	movwf	___flge@ff1+2
  1678  0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  1679  0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  1680  0DE9  0846               	movf	(sprintf@fval+1)^(0+128),w
  1681  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0DEC  00A1               	movwf	___flge@ff1+1
  1684  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  1685  0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  1686  0DEF  0845               	movf	sprintf@fval^(0+128),w
  1687  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  1688  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  1689  0DF2  00A0               	movwf	___flge@ff1
  1690  0DF3  3000               	movlw	0
  1691  0DF4  00A7               	movwf	___flge@ff2+3
  1692  0DF5  3000               	movlw	0
  1693  0DF6  00A6               	movwf	___flge@ff2+2
  1694  0DF7  3000               	movlw	0
  1695  0DF8  00A5               	movwf	___flge@ff2+1
  1696  0DF9  3000               	movlw	0
  1697  0DFA  00A4               	movwf	___flge@ff2
  1698  0DFB  160A  158A  275C  120A  158A  	fcall	___flge
  1699  0E00  1803               	btfsc	3,0
  1700  0E01  2E03               	goto	u7061
  1701  0E02  2E04               	goto	u7060
  1702  0E03                     u7061:
  1703  0E03  2E3D               	goto	l4040
  1704  0E04                     u7060:
  1705  0E04                     l4036:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1708  0E04  1683               	bsf	3,5	;RP0=1, select bank1
  1709  0E05  1303               	bcf	3,6	;RP1=0, select bank1
  1710  0E06  0848               	movf	(sprintf@fval+3)^(0+128),w
  1711  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0E09  00A3               	movwf	___flneg@f1+3
  1714  0E0A  1683               	bsf	3,5	;RP0=1, select bank1
  1715  0E0B  1303               	bcf	3,6	;RP1=0, select bank1
  1716  0E0C  0847               	movf	(sprintf@fval+2)^(0+128),w
  1717  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0E0F  00A2               	movwf	___flneg@f1+2
  1720  0E10  1683               	bsf	3,5	;RP0=1, select bank1
  1721  0E11  1303               	bcf	3,6	;RP1=0, select bank1
  1722  0E12  0846               	movf	(sprintf@fval+1)^(0+128),w
  1723  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0E15  00A1               	movwf	___flneg@f1+1
  1726  0E16  1683               	bsf	3,5	;RP0=1, select bank1
  1727  0E17  1303               	bcf	3,6	;RP1=0, select bank1
  1728  0E18  0845               	movf	sprintf@fval^(0+128),w
  1729  0E19  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  1731  0E1B  00A0               	movwf	___flneg@f1
  1732  0E1C  120A  118A  27F2  120A  158A  	fcall	___flneg
  1733  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  1734  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  1735  0E23  0823               	movf	?___flneg+3,w
  1736  0E24  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0E25  1303               	bcf	3,6	;RP1=0, select bank1
  1738  0E26  00C8               	movwf	(sprintf@fval+3)^(0+128)
  1739  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  1740  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  1741  0E29  0822               	movf	?___flneg+2,w
  1742  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  1743  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  1744  0E2C  00C7               	movwf	(sprintf@fval+2)^(0+128)
  1745  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  1746  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  1747  0E2F  0821               	movf	?___flneg+1,w
  1748  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  1749  0E31  1303               	bcf	3,6	;RP1=0, select bank1
  1750  0E32  00C6               	movwf	(sprintf@fval+1)^(0+128)
  1751  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  1752  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  1753  0E35  0820               	movf	?___flneg,w
  1754  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  1755  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  1756  0E38  00C5               	movwf	sprintf@fval^(0+128)
  1757  0E39                     l4038:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1760  0E39  3003               	movlw	3
  1761  0E3A  04C1               	iorwf	sprintf@flag^(0+128),f
  1762  0E3B  3000               	movlw	0
  1763  0E3C  04C2               	iorwf	(sprintf@flag+1)^(0+128),f
  1764  0E3D                     l4040:
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1767  0E3D  1683               	bsf	3,5	;RP0=1, select bank1
  1768  0E3E  1303               	bcf	3,6	;RP1=0, select bank1
  1769  0E3F  01BF               	clrf	sprintf@eexp^(0+128)
  1770  0E40  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  1771  0E41                     l4042:
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1774  0E41  0848               	movf	(sprintf@fval+3)^(0+128),w
  1775  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  1776  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  1777  0E44  00A3               	movwf	___fleq@ff1+3
  1778  0E45  1683               	bsf	3,5	;RP0=1, select bank1
  1779  0E46  1303               	bcf	3,6	;RP1=0, select bank1
  1780  0E47  0847               	movf	(sprintf@fval+2)^(0+128),w
  1781  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  1782  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0E4A  00A2               	movwf	___fleq@ff1+2
  1784  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  1785  0E4C  1303               	bcf	3,6	;RP1=0, select bank1
  1786  0E4D  0846               	movf	(sprintf@fval+1)^(0+128),w
  1787  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0E50  00A1               	movwf	___fleq@ff1+1
  1790  0E51  1683               	bsf	3,5	;RP0=1, select bank1
  1791  0E52  1303               	bcf	3,6	;RP1=0, select bank1
  1792  0E53  0845               	movf	sprintf@fval^(0+128),w
  1793  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0E56  00A0               	movwf	___fleq@ff1
  1796  0E57  3000               	movlw	0
  1797  0E58  00A7               	movwf	___fleq@ff2+3
  1798  0E59  3000               	movlw	0
  1799  0E5A  00A6               	movwf	___fleq@ff2+2
  1800  0E5B  3000               	movlw	0
  1801  0E5C  00A5               	movwf	___fleq@ff2+1
  1802  0E5D  3000               	movlw	0
  1803  0E5E  00A4               	movwf	___fleq@ff2
  1804  0E5F  160A  158A  24DA  120A  158A  	fcall	___fleq
  1805  0E64  1803               	btfsc	3,0
  1806  0E65  2E67               	goto	u7071
  1807  0E66  2E68               	goto	u7070
  1808  0E67                     u7071:
  1809  0E67  2F94               	goto	l4068
  1810  0E68                     u7070:
  1811  0E68                     l4044:
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1814  0E68  1003               	clrc
  1815  0E69  1683               	bsf	3,5	;RP0=1, select bank1
  1816  0E6A  1303               	bcf	3,6	;RP1=0, select bank1
  1817  0E6B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  1818  0E6C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  1819  0E6D  3E82               	addlw	130
  1820  0E6E  00BF               	movwf	sprintf@eexp^(0+128)
  1821  0E6F  30FF               	movlw	255
  1822  0E70  1803               	skipnc
  1823  0E71  3000               	movlw	0
  1824  0E72  00C0               	movwf	(sprintf@eexp^(0+128)+1)
  1825  0E73                     l4046:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1828  0E73  30FF               	movlw	255
  1829  0E74  07BF               	addwf	sprintf@eexp^(0+128),f
  1830  0E75  1803               	skipnc
  1831  0E76  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  1832  0E77  30FF               	movlw	255
  1833  0E78  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  1834  0E79                     l4048:
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1837  0E79  3003               	movlw	3
  1838  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0E7C  00A0               	movwf	___wmul@multiplier
  1841  0E7D  3000               	movlw	0
  1842  0E7E  00A1               	movwf	___wmul@multiplier+1
  1843  0E7F  1683               	bsf	3,5	;RP0=1, select bank1
  1844  0E80  1303               	bcf	3,6	;RP1=0, select bank1
  1845  0E81  0840               	movf	(sprintf@eexp+1)^(0+128),w
  1846  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  1847  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  1848  0E84  00A3               	movwf	___wmul@multiplicand+1
  1849  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  1850  0E86  1303               	bcf	3,6	;RP1=0, select bank1
  1851  0E87  083F               	movf	sprintf@eexp^(0+128),w
  1852  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0E8A  00A2               	movwf	___wmul@multiplicand
  1855  0E8B  160A  158A  23CE  120A  158A  	fcall	___wmul
  1856  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0E92  0821               	movf	?___wmul+1,w
  1859  0E93  1683               	bsf	3,5	;RP0=1, select bank1
  1860  0E94  1303               	bcf	3,6	;RP1=0, select bank1
  1861  0E95  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  1862  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0E98  0820               	movf	?___wmul,w
  1865  0E99  1683               	bsf	3,5	;RP0=1, select bank1
  1866  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  1867  0E9B  00BF               	movwf	sprintf@eexp^(0+128)
  1868  0E9C                     l4050:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1871  0E9C  300A               	movlw	10
  1872  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0E9F  00A6               	movwf	___awdiv@divisor
  1875  0EA0  3000               	movlw	0
  1876  0EA1  00A7               	movwf	___awdiv@divisor+1
  1877  0EA2  1683               	bsf	3,5	;RP0=1, select bank1
  1878  0EA3  1303               	bcf	3,6	;RP1=0, select bank1
  1879  0EA4  0840               	movf	(sprintf@eexp+1)^(0+128),w
  1880  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0EA7  00A9               	movwf	___awdiv@dividend+1
  1883  0EA8  1683               	bsf	3,5	;RP0=1, select bank1
  1884  0EA9  1303               	bcf	3,6	;RP1=0, select bank1
  1885  0EAA  083F               	movf	sprintf@eexp^(0+128),w
  1886  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  1887  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  1888  0EAD  00A8               	movwf	___awdiv@dividend
  1889  0EAE  160A  158A  26F3  120A  158A  	fcall	___awdiv
  1890  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0EB5  0827               	movf	?___awdiv+1,w
  1893  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  1894  0EB7  1303               	bcf	3,6	;RP1=0, select bank1
  1895  0EB8  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  1896  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0EBB  0826               	movf	?___awdiv,w
  1899  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  1900  0EBD  1303               	bcf	3,6	;RP1=0, select bank1
  1901  0EBE  00BF               	movwf	sprintf@eexp^(0+128)
  1902  0EBF                     l4052:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1905  0EBF  1FC0               	btfss	(sprintf@eexp+1)^(0+128),7
  1906  0EC0  2EC2               	goto	u7081
  1907  0EC1  2EC3               	goto	u7080
  1908  0EC2                     u7081:
  1909  0EC2  2EC9               	goto	l4056
  1910  0EC3                     u7080:
  1911  0EC3                     l4054:
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1914  0EC3  30FF               	movlw	255
  1915  0EC4  07BF               	addwf	sprintf@eexp^(0+128),f
  1916  0EC5  1803               	skipnc
  1917  0EC6  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  1918  0EC7  30FF               	movlw	255
  1919  0EC8  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  1920  0EC9                     l4056:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1923  0EC9  033F               	decf	sprintf@eexp^(0+128),w
  1924  0ECA  3AFF               	xorlw	255
  1925  0ECB  120A  158A  2138  120A  158A  	fcall	_scale
  1926  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0ED2  084B               	movf	?_scale+3,w
  1929  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  1930  0ED4  1303               	bcf	3,6	;RP1=0, select bank1
  1931  0ED5  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  1932  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0ED8  084A               	movf	?_scale+2,w
  1935  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0EDA  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0EDB  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  1938  0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  1939  0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0EDE  0849               	movf	?_scale+1,w
  1941  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0EE0  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0EE1  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  1944  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0EE4  0848               	movf	?_scale,w
  1947  0EE5  1683               	bsf	3,5	;RP0=1, select bank1
  1948  0EE6  1303               	bcf	3,6	;RP1=0, select bank1
  1949  0EE7  00BB               	movwf	sprintf@tmpval^(0+128)
  1950  0EE8                     l4058:
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1953  0EE8  0848               	movf	(sprintf@fval+3)^(0+128),w
  1954  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0EEB  00B1               	movwf	___flmul@b+3
  1957  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  1958  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  1959  0EEE  0847               	movf	(sprintf@fval+2)^(0+128),w
  1960  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0EF1  00B0               	movwf	___flmul@b+2
  1963  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  1964  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  1965  0EF4  0846               	movf	(sprintf@fval+1)^(0+128),w
  1966  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0EF7  00AF               	movwf	___flmul@b+1
  1969  0EF8  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0EF9  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0EFA  0845               	movf	sprintf@fval^(0+128),w
  1972  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0EFD  00AE               	movwf	___flmul@b
  1975  0EFE  1683               	bsf	3,5	;RP0=1, select bank1
  1976  0EFF  1303               	bcf	3,6	;RP1=0, select bank1
  1977  0F00  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  1978  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0F03  00B5               	movwf	___flmul@a+3
  1981  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  1982  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  1983  0F06  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  1984  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0F09  00B4               	movwf	___flmul@a+2
  1987  0F0A  1683               	bsf	3,5	;RP0=1, select bank1
  1988  0F0B  1303               	bcf	3,6	;RP1=0, select bank1
  1989  0F0C  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  1990  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0F0F  00B3               	movwf	___flmul@a+1
  1993  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  1994  0F11  1303               	bcf	3,6	;RP1=0, select bank1
  1995  0F12  083B               	movf	sprintf@tmpval^(0+128),w
  1996  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  1998  0F15  00B2               	movwf	___flmul@a
  1999  0F16  160A  118A  249F  120A  158A  	fcall	___flmul
  2000  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0F1D  0831               	movf	?___flmul+3,w
  2003  0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  2004  0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  2005  0F20  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2006  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  2008  0F23  0830               	movf	?___flmul+2,w
  2009  0F24  1683               	bsf	3,5	;RP0=1, select bank1
  2010  0F25  1303               	bcf	3,6	;RP1=0, select bank1
  2011  0F26  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2012  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0F29  082F               	movf	?___flmul+1,w
  2015  0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  2016  0F2B  1303               	bcf	3,6	;RP1=0, select bank1
  2017  0F2C  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2018  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2019  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0F2F  082E               	movf	?___flmul,w
  2021  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  2022  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  2023  0F32  00BB               	movwf	sprintf@tmpval^(0+128)
  2024  0F33                     l4060:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2027  0F33  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2028  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0F36  00A3               	movwf	___flge@ff1+3
  2031  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  2032  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  2033  0F39  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2034  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0F3C  00A2               	movwf	___flge@ff1+2
  2037  0F3D  1683               	bsf	3,5	;RP0=1, select bank1
  2038  0F3E  1303               	bcf	3,6	;RP1=0, select bank1
  2039  0F3F  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2040  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0F42  00A1               	movwf	___flge@ff1+1
  2043  0F43  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0F44  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0F45  083B               	movf	sprintf@tmpval^(0+128),w
  2046  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0F48  00A0               	movwf	___flge@ff1
  2049  0F49  303F               	movlw	63
  2050  0F4A  00A7               	movwf	___flge@ff2+3
  2051  0F4B  3080               	movlw	128
  2052  0F4C  00A6               	movwf	___flge@ff2+2
  2053  0F4D  3000               	movlw	0
  2054  0F4E  00A5               	movwf	___flge@ff2+1
  2055  0F4F  3000               	movlw	0
  2056  0F50  00A4               	movwf	___flge@ff2
  2057  0F51  160A  158A  275C  120A  158A  	fcall	___flge
  2058  0F56  1803               	btfsc	3,0
  2059  0F57  2F59               	goto	u7091
  2060  0F58  2F5A               	goto	u7090
  2061  0F59                     u7091:
  2062  0F59  2F63               	goto	l4064
  2063  0F5A                     u7090:
  2064  0F5A                     l4062:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2067  0F5A  30FF               	movlw	255
  2068  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  2069  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  2070  0F5D  07BF               	addwf	sprintf@eexp^(0+128),f
  2071  0F5E  1803               	skipnc
  2072  0F5F  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2073  0F60  30FF               	movlw	255
  2074  0F61  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2075  0F62  2F94               	goto	l4068
  2076  0F63                     l4064:
  2077  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  2078  0F64  1303               	bcf	3,6	;RP1=0, select bank1
  2079  0F65  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2080  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  2081  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  2082  0F68  00A3               	movwf	___flge@ff1+3
  2083  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  2084  0F6A  1303               	bcf	3,6	;RP1=0, select bank1
  2085  0F6B  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2086  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0F6E  00A2               	movwf	___flge@ff1+2
  2089  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  2090  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  2091  0F71  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2092  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0F74  00A1               	movwf	___flge@ff1+1
  2095  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  2096  0F76  1303               	bcf	3,6	;RP1=0, select bank1
  2097  0F77  083B               	movf	sprintf@tmpval^(0+128),w
  2098  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0F7A  00A0               	movwf	___flge@ff1
  2101  0F7B  3041               	movlw	65
  2102  0F7C  00A7               	movwf	___flge@ff2+3
  2103  0F7D  3020               	movlw	32
  2104  0F7E  00A6               	movwf	___flge@ff2+2
  2105  0F7F  3000               	movlw	0
  2106  0F80  00A5               	movwf	___flge@ff2+1
  2107  0F81  3000               	movlw	0
  2108  0F82  00A4               	movwf	___flge@ff2
  2109  0F83  160A  158A  275C  120A  158A  	fcall	___flge
  2110  0F88  1C03               	btfss	3,0
  2111  0F89  2F8B               	goto	u7101
  2112  0F8A  2F8C               	goto	u7100
  2113  0F8B                     u7101:
  2114  0F8B  2F94               	goto	l4068
  2115  0F8C                     u7100:
  2116  0F8C                     l4066:
  2117                           
  2118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2119  0F8C  3001               	movlw	1
  2120  0F8D  1683               	bsf	3,5	;RP0=1, select bank1
  2121  0F8E  1303               	bcf	3,6	;RP1=0, select bank1
  2122  0F8F  07BF               	addwf	sprintf@eexp^(0+128),f
  2123  0F90  1803               	skipnc
  2124  0F91  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2125  0F92  3000               	movlw	0
  2126  0F93  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2127  0F94                     l4068:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2130  0F94  1683               	bsf	3,5	;RP0=1, select bank1
  2131  0F95  1303               	bcf	3,6	;RP1=0, select bank1
  2132  0F96  084A               	movf	(sprintf@prec+1)^(0+128),w
  2133  0F97  3A80               	xorlw	128
  2134  0F98  00FF               	movwf	btemp+1
  2135  0F99  3080               	movlw	128
  2136  0F9A  027F               	subwf	btemp+1,w
  2137  0F9B  1D03               	skipz
  2138  0F9C  2F9F               	goto	u7115
  2139  0F9D  300D               	movlw	13
  2140  0F9E  0249               	subwf	sprintf@prec^(0+128),w
  2141  0F9F                     u7115:
  2142  0F9F  1803               	skipnc
  2143  0FA0  2FA2               	goto	u7111
  2144  0FA1  2FA3               	goto	u7110
  2145  0FA2                     u7111:
  2146  0FA2  2FEA               	goto	l4072
  2147  0FA3                     u7110:
  2148  0FA3                     l4070:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2151  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  2152  0FA4  1303               	bcf	3,6	;RP1=0, select bank1
  2153  0FA5  0849               	movf	sprintf@prec^(0+128),w
  2154  0FA6  160A  118A  200A  120A  158A  	fcall	_fround
  2155  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0FAD  084B               	movf	?_fround+3,w
  2158  0FAE  00DF               	movwf	___fladd@b+3
  2159  0FAF  084A               	movf	?_fround+2,w
  2160  0FB0  00DE               	movwf	___fladd@b+2
  2161  0FB1  0849               	movf	?_fround+1,w
  2162  0FB2  00DD               	movwf	___fladd@b+1
  2163  0FB3  0848               	movf	?_fround,w
  2164  0FB4  00DC               	movwf	___fladd@b
  2165  0FB5  1683               	bsf	3,5	;RP0=1, select bank1
  2166  0FB6  1303               	bcf	3,6	;RP1=0, select bank1
  2167  0FB7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2168  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0FBA  00E3               	movwf	___fladd@a+3
  2171  0FBB  1683               	bsf	3,5	;RP0=1, select bank1
  2172  0FBC  1303               	bcf	3,6	;RP1=0, select bank1
  2173  0FBD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2174  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0FC0  00E2               	movwf	___fladd@a+2
  2177  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2178  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2179  0FC3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2180  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0FC6  00E1               	movwf	___fladd@a+1
  2183  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2184  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2185  0FC9  0845               	movf	sprintf@fval^(0+128),w
  2186  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2188  0FCC  00E0               	movwf	___fladd@a
  2189  0FCD  160A  118A  2217  120A  158A  	fcall	___fladd
  2190  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0FD4  085F               	movf	?___fladd+3,w
  2193  0FD5  1683               	bsf	3,5	;RP0=1, select bank1
  2194  0FD6  1303               	bcf	3,6	;RP1=0, select bank1
  2195  0FD7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2196  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0FDA  085E               	movf	?___fladd+2,w
  2199  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2200  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2201  0FDD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2202  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2203  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2204  0FE0  085D               	movf	?___fladd+1,w
  2205  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2206  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2207  0FE3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2208  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0FE6  085C               	movf	?___fladd,w
  2211  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2212  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2213  0FE9  00C5               	movwf	sprintf@fval^(0+128)
  2214  0FEA                     l4072:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2217  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2219  0FEC  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2220  0FED  3A80               	xorlw	128
  2221  0FEE  00FF               	movwf	btemp+1
  2222  0FEF  3080               	movlw	128
  2223  0FF0  027F               	subwf	btemp+1,w
  2224  0FF1  1D03               	skipz
  2225  0FF2  2FF5               	goto	u7125
  2226  0FF3  300A               	movlw	10
  2227  0FF4  023F               	subwf	sprintf@eexp^(0+128),w
  2228  0FF5                     u7125:
  2229  0FF5  1803               	skipnc
  2230  0FF6  2FFA               	goto	u7121
  2231  0FF7  120A  118A  281E   	goto	u7120
  2232  0FFA                     u7121:
  2233  0FFA  120A  118A  287D   	goto	l4080
  2234  0FFD                     L3:
  2235  0FFD                     L2:
  2236  0FFD  120A  118A  2E49   	ljmp	l4262
  2237                           
  2238                           	psect	text2
  2239  0938                     __ptext2:	
  2240 ;; *************** function _scale *****************
  2241 ;; Defined at:
  2242 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  scl             1    wreg     char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  scl             1   58[BANK0 ] char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  4   40[BANK0 ] char 
  2249 ;; Registers used:
  2250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         0       4       0       0       0
  2257 ;;      Locals:         0       5       0       0       0
  2258 ;;      Temps:          0      10       0       0       0
  2259 ;;      Totals:         0      19       0       0       0
  2260 ;;Total ram usage:       19 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    3
  2263 ;; This function calls:
  2264 ;;		___awdiv
  2265 ;;		___awmod
  2266 ;;		___flmul
  2267 ;; This function is called by:
  2268 ;;		_sprintf
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           
  2273                           ;psect for function _scale
  2274  0938                     _scale:
  2275                           
  2276                           ;incstack = 0
  2277                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2278                           ;scale@scl stored from wreg
  2279  0938  1283               	bcf	3,5	;RP0=0, select bank0
  2280  0939  1303               	bcf	3,6	;RP1=0, select bank0
  2281  093A  00DA               	movwf	scale@scl
  2282  093B                     l3776:
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2285  093B  1FDA               	btfss	scale@scl,7
  2286  093C  293E               	goto	u6401
  2287  093D  293F               	goto	u6400
  2288  093E                     u6401:
  2289  093E  2AEE               	goto	l3798
  2290  093F                     u6400:
  2291  093F                     l3778:
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2294  093F  09DA               	comf	scale@scl,f
  2295  0940  0ADA               	incf	scale@scl,f
  2296  0941                     l3780:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2299  0941  085A               	movf	scale@scl,w
  2300  0942  3A80               	xorlw	128
  2301  0943  3E12               	addlw	-238
  2302  0944  1C03               	skipc
  2303  0945  2947               	goto	u6411
  2304  0946  2948               	goto	u6410
  2305  0947                     u6411:
  2306  0947  2A32               	goto	l3788
  2307  0948                     u6410:
  2308  0948                     l3782:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2311  0948  300A               	movlw	10
  2312  0949  00A6               	movwf	___awdiv@divisor
  2313  094A  3000               	movlw	0
  2314  094B  00A7               	movwf	___awdiv@divisor+1
  2315  094C  085A               	movf	scale@scl,w
  2316  094D  00A2               	movwf	___awmod@dividend
  2317  094E  01A3               	clrf	___awmod@dividend+1
  2318  094F  1BA2               	btfsc	___awmod@dividend,7
  2319  0950  03A3               	decf	___awmod@dividend+1,f
  2320  0951  3064               	movlw	100
  2321  0952  00A0               	movwf	___awmod@divisor
  2322  0953  3000               	movlw	0
  2323  0954  00A1               	movwf	___awmod@divisor+1
  2324  0955  160A  158A  25D0  120A  158A  	fcall	___awmod
  2325  095A  1283               	bcf	3,5	;RP0=0, select bank0
  2326  095B  1303               	bcf	3,6	;RP1=0, select bank0
  2327  095C  0821               	movf	?___awmod+1,w
  2328  095D  00A9               	movwf	___awdiv@dividend+1
  2329  095E  0820               	movf	?___awmod,w
  2330  095F  00A8               	movwf	___awdiv@dividend
  2331  0960  160A  158A  26F3  120A  158A  	fcall	___awdiv
  2332  0965  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0966  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0967  0826               	movf	?___awdiv,w
  2335  0968  00CC               	movwf	??_scale
  2336  0969  3001               	movlw	1
  2337  096A                     u6425:
  2338  096A  1003               	clrc
  2339  096B  0DCC               	rlf	??_scale,f
  2340  096C  3EFF               	addlw	-1
  2341  096D  1D03               	skipz
  2342  096E  296A               	goto	u6425
  2343  096F  1003               	clrc
  2344  0970  0D4C               	rlf	??_scale,w
  2345  0971  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2346  0972  0084               	movwf	4
  2347  0973  160A  158A  2000  120A  158A  	fcall	stringdir
  2348  0978  00CD               	movwf	??_scale+1
  2349  0979  160A  158A  2000  120A  158A  	fcall	stringdir
  2350  097E  00CE               	movwf	??_scale+2
  2351  097F  160A  158A  2000  120A  158A  	fcall	stringdir
  2352  0984  00CF               	movwf	??_scale+3
  2353  0985  160A  158A  2000  120A  158A  	fcall	stringdir
  2354  098A  00D0               	movwf	??_scale+4
  2355  098B  0850               	movf	??_scale+4,w
  2356  098C  00B1               	movwf	___flmul@b+3
  2357  098D  084F               	movf	??_scale+3,w
  2358  098E  00B0               	movwf	___flmul@b+2
  2359  098F  084E               	movf	??_scale+2,w
  2360  0990  00AF               	movwf	___flmul@b+1
  2361  0991  084D               	movf	??_scale+1,w
  2362  0992  00AE               	movwf	___flmul@b
  2363  0993  3064               	movlw	100
  2364  0994  00A6               	movwf	___awdiv@divisor
  2365  0995  3000               	movlw	0
  2366  0996  00A7               	movwf	___awdiv@divisor+1
  2367  0997  085A               	movf	scale@scl,w
  2368  0998  00A8               	movwf	___awdiv@dividend
  2369  0999  01A9               	clrf	___awdiv@dividend+1
  2370  099A  1BA8               	btfsc	___awdiv@dividend,7
  2371  099B  03A9               	decf	___awdiv@dividend+1,f
  2372  099C  160A  158A  26F3  120A  158A  	fcall	___awdiv
  2373  09A1  1283               	bcf	3,5	;RP0=0, select bank0
  2374  09A2  1303               	bcf	3,6	;RP1=0, select bank0
  2375  09A3  0826               	movf	?___awdiv,w
  2376  09A4  00D1               	movwf	??_scale+5
  2377  09A5  3001               	movlw	1
  2378  09A6                     u6435:
  2379  09A6  1003               	clrc
  2380  09A7  0DD1               	rlf	??_scale+5,f
  2381  09A8  3EFF               	addlw	-1
  2382  09A9  1D03               	skipz
  2383  09AA  29A6               	goto	u6435
  2384  09AB  1003               	clrc
  2385  09AC  0D51               	rlf	??_scale+5,w
  2386  09AD  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2387  09AE  0084               	movwf	4
  2388  09AF  160A  158A  2000  120A  158A  	fcall	stringdir
  2389  09B4  00D2               	movwf	??_scale+6
  2390  09B5  160A  158A  2000  120A  158A  	fcall	stringdir
  2391  09BA  00D3               	movwf	??_scale+7
  2392  09BB  160A  158A  2000  120A  158A  	fcall	stringdir
  2393  09C0  00D4               	movwf	??_scale+8
  2394  09C1  160A  158A  2000  120A  158A  	fcall	stringdir
  2395  09C6  00D5               	movwf	??_scale+9
  2396  09C7  0855               	movf	??_scale+9,w
  2397  09C8  00B5               	movwf	___flmul@a+3
  2398  09C9  0854               	movf	??_scale+8,w
  2399  09CA  00B4               	movwf	___flmul@a+2
  2400  09CB  0853               	movf	??_scale+7,w
  2401  09CC  00B3               	movwf	___flmul@a+1
  2402  09CD  0852               	movf	??_scale+6,w
  2403  09CE  00B2               	movwf	___flmul@a
  2404  09CF  160A  118A  249F  120A  158A  	fcall	___flmul
  2405  09D4  1283               	bcf	3,5	;RP0=0, select bank0
  2406  09D5  1303               	bcf	3,6	;RP1=0, select bank0
  2407  09D6  0831               	movf	?___flmul+3,w
  2408  09D7  00D9               	movwf	_scale$1112+3
  2409  09D8  0830               	movf	?___flmul+2,w
  2410  09D9  00D8               	movwf	_scale$1112+2
  2411  09DA  082F               	movf	?___flmul+1,w
  2412  09DB  00D7               	movwf	_scale$1112+1
  2413  09DC  082E               	movf	?___flmul,w
  2414  09DD  00D6               	movwf	_scale$1112
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2417  09DE  300A               	movlw	10
  2418  09DF  00A0               	movwf	___awmod@divisor
  2419  09E0  3000               	movlw	0
  2420  09E1  00A1               	movwf	___awmod@divisor+1
  2421  09E2  085A               	movf	scale@scl,w
  2422  09E3  00A2               	movwf	___awmod@dividend
  2423  09E4  01A3               	clrf	___awmod@dividend+1
  2424  09E5  1BA2               	btfsc	___awmod@dividend,7
  2425  09E6  03A3               	decf	___awmod@dividend+1,f
  2426  09E7  160A  158A  25D0  120A  158A  	fcall	___awmod
  2427  09EC  1283               	bcf	3,5	;RP0=0, select bank0
  2428  09ED  1303               	bcf	3,6	;RP1=0, select bank0
  2429  09EE  0820               	movf	?___awmod,w
  2430  09EF  00CC               	movwf	??_scale
  2431  09F0  3001               	movlw	1
  2432  09F1                     u6445:
  2433  09F1  1003               	clrc
  2434  09F2  0DCC               	rlf	??_scale,f
  2435  09F3  3EFF               	addlw	-1
  2436  09F4  1D03               	skipz
  2437  09F5  29F1               	goto	u6445
  2438  09F6  1003               	clrc
  2439  09F7  0D4C               	rlf	??_scale,w
  2440  09F8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2441  09F9  0084               	movwf	4
  2442  09FA  160A  158A  2000  120A  158A  	fcall	stringdir
  2443  09FF  00CD               	movwf	??_scale+1
  2444  0A00  160A  158A  2000  120A  158A  	fcall	stringdir
  2445  0A05  00CE               	movwf	??_scale+2
  2446  0A06  160A  158A  2000  120A  158A  	fcall	stringdir
  2447  0A0B  00CF               	movwf	??_scale+3
  2448  0A0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2449  0A11  00D0               	movwf	??_scale+4
  2450  0A12  0850               	movf	??_scale+4,w
  2451  0A13  00B1               	movwf	___flmul@b+3
  2452  0A14  084F               	movf	??_scale+3,w
  2453  0A15  00B0               	movwf	___flmul@b+2
  2454  0A16  084E               	movf	??_scale+2,w
  2455  0A17  00AF               	movwf	___flmul@b+1
  2456  0A18  084D               	movf	??_scale+1,w
  2457  0A19  00AE               	movwf	___flmul@b
  2458  0A1A  0859               	movf	_scale$1112+3,w
  2459  0A1B  00B5               	movwf	___flmul@a+3
  2460  0A1C  0858               	movf	_scale$1112+2,w
  2461  0A1D  00B4               	movwf	___flmul@a+2
  2462  0A1E  0857               	movf	_scale$1112+1,w
  2463  0A1F  00B3               	movwf	___flmul@a+1
  2464  0A20  0856               	movf	_scale$1112,w
  2465  0A21  00B2               	movwf	___flmul@a
  2466  0A22  160A  118A  249F  120A  158A  	fcall	___flmul
  2467  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0A29  0831               	movf	?___flmul+3,w
  2470  0A2A  00CB               	movwf	?_scale+3
  2471  0A2B  0830               	movf	?___flmul+2,w
  2472  0A2C  00CA               	movwf	?_scale+2
  2473  0A2D  082F               	movf	?___flmul+1,w
  2474  0A2E  00C9               	movwf	?_scale+1
  2475  0A2F  082E               	movf	?___flmul,w
  2476  0A30  00C8               	movwf	?_scale
  2477  0A31  2C9A               	goto	l238
  2478  0A32                     l3788:
  2479  0A32  085A               	movf	scale@scl,w
  2480  0A33  3A80               	xorlw	128
  2481  0A34  3E75               	addlw	-139
  2482  0A35  1C03               	skipc
  2483  0A36  2A38               	goto	u6451
  2484  0A37  2A39               	goto	u6450
  2485  0A38                     u6451:
  2486  0A38  2AC1               	goto	l3794
  2487  0A39                     u6450:
  2488  0A39                     l3790:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2491  0A39  300A               	movlw	10
  2492  0A3A  00A0               	movwf	___awmod@divisor
  2493  0A3B  3000               	movlw	0
  2494  0A3C  00A1               	movwf	___awmod@divisor+1
  2495  0A3D  085A               	movf	scale@scl,w
  2496  0A3E  00A2               	movwf	___awmod@dividend
  2497  0A3F  01A3               	clrf	___awmod@dividend+1
  2498  0A40  1BA2               	btfsc	___awmod@dividend,7
  2499  0A41  03A3               	decf	___awmod@dividend+1,f
  2500  0A42  160A  158A  25D0  120A  158A  	fcall	___awmod
  2501  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0A49  0820               	movf	?___awmod,w
  2504  0A4A  00CC               	movwf	??_scale
  2505  0A4B  3001               	movlw	1
  2506  0A4C                     u6465:
  2507  0A4C  1003               	clrc
  2508  0A4D  0DCC               	rlf	??_scale,f
  2509  0A4E  3EFF               	addlw	-1
  2510  0A4F  1D03               	skipz
  2511  0A50  2A4C               	goto	u6465
  2512  0A51  1003               	clrc
  2513  0A52  0D4C               	rlf	??_scale,w
  2514  0A53  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2515  0A54  0084               	movwf	4
  2516  0A55  160A  158A  2000  120A  158A  	fcall	stringdir
  2517  0A5A  00CD               	movwf	??_scale+1
  2518  0A5B  160A  158A  2000  120A  158A  	fcall	stringdir
  2519  0A60  00CE               	movwf	??_scale+2
  2520  0A61  160A  158A  2000  120A  158A  	fcall	stringdir
  2521  0A66  00CF               	movwf	??_scale+3
  2522  0A67  160A  158A  2000  120A  158A  	fcall	stringdir
  2523  0A6C  00D0               	movwf	??_scale+4
  2524  0A6D  0850               	movf	??_scale+4,w
  2525  0A6E  00B1               	movwf	___flmul@b+3
  2526  0A6F  084F               	movf	??_scale+3,w
  2527  0A70  00B0               	movwf	___flmul@b+2
  2528  0A71  084E               	movf	??_scale+2,w
  2529  0A72  00AF               	movwf	___flmul@b+1
  2530  0A73  084D               	movf	??_scale+1,w
  2531  0A74  00AE               	movwf	___flmul@b
  2532  0A75  300A               	movlw	10
  2533  0A76  00A6               	movwf	___awdiv@divisor
  2534  0A77  3000               	movlw	0
  2535  0A78  00A7               	movwf	___awdiv@divisor+1
  2536  0A79  085A               	movf	scale@scl,w
  2537  0A7A  00A8               	movwf	___awdiv@dividend
  2538  0A7B  01A9               	clrf	___awdiv@dividend+1
  2539  0A7C  1BA8               	btfsc	___awdiv@dividend,7
  2540  0A7D  03A9               	decf	___awdiv@dividend+1,f
  2541  0A7E  160A  158A  26F3  120A  158A  	fcall	___awdiv
  2542  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0A85  0826               	movf	?___awdiv,w
  2545  0A86  00D1               	movwf	??_scale+5
  2546  0A87  3001               	movlw	1
  2547  0A88                     u6475:
  2548  0A88  1003               	clrc
  2549  0A89  0DD1               	rlf	??_scale+5,f
  2550  0A8A  3EFF               	addlw	-1
  2551  0A8B  1D03               	skipz
  2552  0A8C  2A88               	goto	u6475
  2553  0A8D  1003               	clrc
  2554  0A8E  0D51               	rlf	??_scale+5,w
  2555  0A8F  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2556  0A90  0084               	movwf	4
  2557  0A91  160A  158A  2000  120A  158A  	fcall	stringdir
  2558  0A96  00D2               	movwf	??_scale+6
  2559  0A97  160A  158A  2000  120A  158A  	fcall	stringdir
  2560  0A9C  00D3               	movwf	??_scale+7
  2561  0A9D  160A  158A  2000  120A  158A  	fcall	stringdir
  2562  0AA2  00D4               	movwf	??_scale+8
  2563  0AA3  160A  158A  2000  120A  158A  	fcall	stringdir
  2564  0AA8  00D5               	movwf	??_scale+9
  2565  0AA9  0855               	movf	??_scale+9,w
  2566  0AAA  00B5               	movwf	___flmul@a+3
  2567  0AAB  0854               	movf	??_scale+8,w
  2568  0AAC  00B4               	movwf	___flmul@a+2
  2569  0AAD  0853               	movf	??_scale+7,w
  2570  0AAE  00B3               	movwf	___flmul@a+1
  2571  0AAF  0852               	movf	??_scale+6,w
  2572  0AB0  00B2               	movwf	___flmul@a
  2573  0AB1  160A  118A  249F  120A  158A  	fcall	___flmul
  2574  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0AB7  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0AB8  0831               	movf	?___flmul+3,w
  2577  0AB9  00CB               	movwf	?_scale+3
  2578  0ABA  0830               	movf	?___flmul+2,w
  2579  0ABB  00CA               	movwf	?_scale+2
  2580  0ABC  082F               	movf	?___flmul+1,w
  2581  0ABD  00C9               	movwf	?_scale+1
  2582  0ABE  082E               	movf	?___flmul,w
  2583  0ABF  00C8               	movwf	?_scale
  2584  0AC0  2C9A               	goto	l238
  2585  0AC1                     l3794:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2588  0AC1  085A               	movf	scale@scl,w
  2589  0AC2  00CC               	movwf	??_scale
  2590  0AC3  3001               	movlw	1
  2591  0AC4                     u6485:
  2592  0AC4  1003               	clrc
  2593  0AC5  0DCC               	rlf	??_scale,f
  2594  0AC6  3EFF               	addlw	-1
  2595  0AC7  1D03               	skipz
  2596  0AC8  2AC4               	goto	u6485
  2597  0AC9  1003               	clrc
  2598  0ACA  0D4C               	rlf	??_scale,w
  2599  0ACB  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2600  0ACC  0084               	movwf	4
  2601  0ACD  160A  158A  2000  120A  158A  	fcall	stringdir
  2602  0AD2  00CD               	movwf	??_scale+1
  2603  0AD3  160A  158A  2000  120A  158A  	fcall	stringdir
  2604  0AD8  00CE               	movwf	??_scale+2
  2605  0AD9  160A  158A  2000  120A  158A  	fcall	stringdir
  2606  0ADE  00CF               	movwf	??_scale+3
  2607  0ADF  160A  158A  2000  120A  158A  	fcall	stringdir
  2608  0AE4  00D0               	movwf	??_scale+4
  2609  0AE5  0850               	movf	??_scale+4,w
  2610  0AE6  00CB               	movwf	?_scale+3
  2611  0AE7  084F               	movf	??_scale+3,w
  2612  0AE8  00CA               	movwf	?_scale+2
  2613  0AE9  084E               	movf	??_scale+2,w
  2614  0AEA  00C9               	movwf	?_scale+1
  2615  0AEB  084D               	movf	??_scale+1,w
  2616  0AEC  00C8               	movwf	?_scale
  2617  0AED  2C9A               	goto	l238
  2618  0AEE                     l3798:
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2621  0AEE  085A               	movf	scale@scl,w
  2622  0AEF  3A80               	xorlw	128
  2623  0AF0  3E12               	addlw	-238
  2624  0AF1  1C03               	skipc
  2625  0AF2  2AF4               	goto	u6491
  2626  0AF3  2AF5               	goto	u6490
  2627  0AF4                     u6491:
  2628  0AF4  2BDF               	goto	l3806
  2629  0AF5                     u6490:
  2630  0AF5                     l3800:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2633  0AF5  300A               	movlw	10
  2634  0AF6  00A6               	movwf	___awdiv@divisor
  2635  0AF7  3000               	movlw	0
  2636  0AF8  00A7               	movwf	___awdiv@divisor+1
  2637  0AF9  085A               	movf	scale@scl,w
  2638  0AFA  00A2               	movwf	___awmod@dividend
  2639  0AFB  01A3               	clrf	___awmod@dividend+1
  2640  0AFC  1BA2               	btfsc	___awmod@dividend,7
  2641  0AFD  03A3               	decf	___awmod@dividend+1,f
  2642  0AFE  3064               	movlw	100
  2643  0AFF  00A0               	movwf	___awmod@divisor
  2644  0B00  3000               	movlw	0
  2645  0B01  00A1               	movwf	___awmod@divisor+1
  2646  0B02  160A  158A  25D0  120A  158A  	fcall	___awmod
  2647  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0B09  0821               	movf	?___awmod+1,w
  2650  0B0A  00A9               	movwf	___awdiv@dividend+1
  2651  0B0B  0820               	movf	?___awmod,w
  2652  0B0C  00A8               	movwf	___awdiv@dividend
  2653  0B0D  160A  158A  26F3  120A  158A  	fcall	___awdiv
  2654  0B12  1283               	bcf	3,5	;RP0=0, select bank0
  2655  0B13  1303               	bcf	3,6	;RP1=0, select bank0
  2656  0B14  0826               	movf	?___awdiv,w
  2657  0B15  00CC               	movwf	??_scale
  2658  0B16  3001               	movlw	1
  2659  0B17                     u6505:
  2660  0B17  1003               	clrc
  2661  0B18  0DCC               	rlf	??_scale,f
  2662  0B19  3EFF               	addlw	-1
  2663  0B1A  1D03               	skipz
  2664  0B1B  2B17               	goto	u6505
  2665  0B1C  1003               	clrc
  2666  0B1D  0D4C               	rlf	??_scale,w
  2667  0B1E  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2668  0B1F  0084               	movwf	4
  2669  0B20  160A  158A  2000  120A  158A  	fcall	stringdir
  2670  0B25  00CD               	movwf	??_scale+1
  2671  0B26  160A  158A  2000  120A  158A  	fcall	stringdir
  2672  0B2B  00CE               	movwf	??_scale+2
  2673  0B2C  160A  158A  2000  120A  158A  	fcall	stringdir
  2674  0B31  00CF               	movwf	??_scale+3
  2675  0B32  160A  158A  2000  120A  158A  	fcall	stringdir
  2676  0B37  00D0               	movwf	??_scale+4
  2677  0B38  0850               	movf	??_scale+4,w
  2678  0B39  00B1               	movwf	___flmul@b+3
  2679  0B3A  084F               	movf	??_scale+3,w
  2680  0B3B  00B0               	movwf	___flmul@b+2
  2681  0B3C  084E               	movf	??_scale+2,w
  2682  0B3D  00AF               	movwf	___flmul@b+1
  2683  0B3E  084D               	movf	??_scale+1,w
  2684  0B3F  00AE               	movwf	___flmul@b
  2685  0B40  3064               	movlw	100
  2686  0B41  00A6               	movwf	___awdiv@divisor
  2687  0B42  3000               	movlw	0
  2688  0B43  00A7               	movwf	___awdiv@divisor+1
  2689  0B44  085A               	movf	scale@scl,w
  2690  0B45  00A8               	movwf	___awdiv@dividend
  2691  0B46  01A9               	clrf	___awdiv@dividend+1
  2692  0B47  1BA8               	btfsc	___awdiv@dividend,7
  2693  0B48  03A9               	decf	___awdiv@dividend+1,f
  2694  0B49  160A  158A  26F3  120A  158A  	fcall	___awdiv
  2695  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  2696  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  2697  0B50  0826               	movf	?___awdiv,w
  2698  0B51  00D1               	movwf	??_scale+5
  2699  0B52  3001               	movlw	1
  2700  0B53                     u6515:
  2701  0B53  1003               	clrc
  2702  0B54  0DD1               	rlf	??_scale+5,f
  2703  0B55  3EFF               	addlw	-1
  2704  0B56  1D03               	skipz
  2705  0B57  2B53               	goto	u6515
  2706  0B58  1003               	clrc
  2707  0B59  0D51               	rlf	??_scale+5,w
  2708  0B5A  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2709  0B5B  0084               	movwf	4
  2710  0B5C  160A  158A  2000  120A  158A  	fcall	stringdir
  2711  0B61  00D2               	movwf	??_scale+6
  2712  0B62  160A  158A  2000  120A  158A  	fcall	stringdir
  2713  0B67  00D3               	movwf	??_scale+7
  2714  0B68  160A  158A  2000  120A  158A  	fcall	stringdir
  2715  0B6D  00D4               	movwf	??_scale+8
  2716  0B6E  160A  158A  2000  120A  158A  	fcall	stringdir
  2717  0B73  00D5               	movwf	??_scale+9
  2718  0B74  0855               	movf	??_scale+9,w
  2719  0B75  00B5               	movwf	___flmul@a+3
  2720  0B76  0854               	movf	??_scale+8,w
  2721  0B77  00B4               	movwf	___flmul@a+2
  2722  0B78  0853               	movf	??_scale+7,w
  2723  0B79  00B3               	movwf	___flmul@a+1
  2724  0B7A  0852               	movf	??_scale+6,w
  2725  0B7B  00B2               	movwf	___flmul@a
  2726  0B7C  160A  118A  249F  120A  158A  	fcall	___flmul
  2727  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0B83  0831               	movf	?___flmul+3,w
  2730  0B84  00D9               	movwf	_scale$1112+3
  2731  0B85  0830               	movf	?___flmul+2,w
  2732  0B86  00D8               	movwf	_scale$1112+2
  2733  0B87  082F               	movf	?___flmul+1,w
  2734  0B88  00D7               	movwf	_scale$1112+1
  2735  0B89  082E               	movf	?___flmul,w
  2736  0B8A  00D6               	movwf	_scale$1112
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2739  0B8B  300A               	movlw	10
  2740  0B8C  00A0               	movwf	___awmod@divisor
  2741  0B8D  3000               	movlw	0
  2742  0B8E  00A1               	movwf	___awmod@divisor+1
  2743  0B8F  085A               	movf	scale@scl,w
  2744  0B90  00A2               	movwf	___awmod@dividend
  2745  0B91  01A3               	clrf	___awmod@dividend+1
  2746  0B92  1BA2               	btfsc	___awmod@dividend,7
  2747  0B93  03A3               	decf	___awmod@dividend+1,f
  2748  0B94  160A  158A  25D0  120A  158A  	fcall	___awmod
  2749  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  2750  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  2751  0B9B  0820               	movf	?___awmod,w
  2752  0B9C  00CC               	movwf	??_scale
  2753  0B9D  3001               	movlw	1
  2754  0B9E                     u6525:
  2755  0B9E  1003               	clrc
  2756  0B9F  0DCC               	rlf	??_scale,f
  2757  0BA0  3EFF               	addlw	-1
  2758  0BA1  1D03               	skipz
  2759  0BA2  2B9E               	goto	u6525
  2760  0BA3  1003               	clrc
  2761  0BA4  0D4C               	rlf	??_scale,w
  2762  0BA5  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2763  0BA6  0084               	movwf	4
  2764  0BA7  160A  158A  2000  120A  158A  	fcall	stringdir
  2765  0BAC  00CD               	movwf	??_scale+1
  2766  0BAD  160A  158A  2000  120A  158A  	fcall	stringdir
  2767  0BB2  00CE               	movwf	??_scale+2
  2768  0BB3  160A  158A  2000  120A  158A  	fcall	stringdir
  2769  0BB8  00CF               	movwf	??_scale+3
  2770  0BB9  160A  158A  2000  120A  158A  	fcall	stringdir
  2771  0BBE  00D0               	movwf	??_scale+4
  2772  0BBF  0850               	movf	??_scale+4,w
  2773  0BC0  00B1               	movwf	___flmul@b+3
  2774  0BC1  084F               	movf	??_scale+3,w
  2775  0BC2  00B0               	movwf	___flmul@b+2
  2776  0BC3  084E               	movf	??_scale+2,w
  2777  0BC4  00AF               	movwf	___flmul@b+1
  2778  0BC5  084D               	movf	??_scale+1,w
  2779  0BC6  00AE               	movwf	___flmul@b
  2780  0BC7  0859               	movf	_scale$1112+3,w
  2781  0BC8  00B5               	movwf	___flmul@a+3
  2782  0BC9  0858               	movf	_scale$1112+2,w
  2783  0BCA  00B4               	movwf	___flmul@a+2
  2784  0BCB  0857               	movf	_scale$1112+1,w
  2785  0BCC  00B3               	movwf	___flmul@a+1
  2786  0BCD  0856               	movf	_scale$1112,w
  2787  0BCE  00B2               	movwf	___flmul@a
  2788  0BCF  160A  118A  249F  120A  158A  	fcall	___flmul
  2789  0BD4  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0BD5  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0BD6  0831               	movf	?___flmul+3,w
  2792  0BD7  00CB               	movwf	?_scale+3
  2793  0BD8  0830               	movf	?___flmul+2,w
  2794  0BD9  00CA               	movwf	?_scale+2
  2795  0BDA  082F               	movf	?___flmul+1,w
  2796  0BDB  00C9               	movwf	?_scale+1
  2797  0BDC  082E               	movf	?___flmul,w
  2798  0BDD  00C8               	movwf	?_scale
  2799  0BDE  2C9A               	goto	l238
  2800  0BDF                     l3806:
  2801  0BDF  085A               	movf	scale@scl,w
  2802  0BE0  3A80               	xorlw	128
  2803  0BE1  3E75               	addlw	-139
  2804  0BE2  1C03               	skipc
  2805  0BE3  2BE5               	goto	u6531
  2806  0BE4  2BE6               	goto	u6530
  2807  0BE5                     u6531:
  2808  0BE5  2C6E               	goto	l3812
  2809  0BE6                     u6530:
  2810  0BE6                     l3808:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2813  0BE6  300A               	movlw	10
  2814  0BE7  00A0               	movwf	___awmod@divisor
  2815  0BE8  3000               	movlw	0
  2816  0BE9  00A1               	movwf	___awmod@divisor+1
  2817  0BEA  085A               	movf	scale@scl,w
  2818  0BEB  00A2               	movwf	___awmod@dividend
  2819  0BEC  01A3               	clrf	___awmod@dividend+1
  2820  0BED  1BA2               	btfsc	___awmod@dividend,7
  2821  0BEE  03A3               	decf	___awmod@dividend+1,f
  2822  0BEF  160A  158A  25D0  120A  158A  	fcall	___awmod
  2823  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0BF6  0820               	movf	?___awmod,w
  2826  0BF7  00CC               	movwf	??_scale
  2827  0BF8  3001               	movlw	1
  2828  0BF9                     u6545:
  2829  0BF9  1003               	clrc
  2830  0BFA  0DCC               	rlf	??_scale,f
  2831  0BFB  3EFF               	addlw	-1
  2832  0BFC  1D03               	skipz
  2833  0BFD  2BF9               	goto	u6545
  2834  0BFE  1003               	clrc
  2835  0BFF  0D4C               	rlf	??_scale,w
  2836  0C00  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2837  0C01  0084               	movwf	4
  2838  0C02  160A  158A  2000  120A  158A  	fcall	stringdir
  2839  0C07  00CD               	movwf	??_scale+1
  2840  0C08  160A  158A  2000  120A  158A  	fcall	stringdir
  2841  0C0D  00CE               	movwf	??_scale+2
  2842  0C0E  160A  158A  2000  120A  158A  	fcall	stringdir
  2843  0C13  00CF               	movwf	??_scale+3
  2844  0C14  160A  158A  2000  120A  158A  	fcall	stringdir
  2845  0C19  00D0               	movwf	??_scale+4
  2846  0C1A  0850               	movf	??_scale+4,w
  2847  0C1B  00B1               	movwf	___flmul@b+3
  2848  0C1C  084F               	movf	??_scale+3,w
  2849  0C1D  00B0               	movwf	___flmul@b+2
  2850  0C1E  084E               	movf	??_scale+2,w
  2851  0C1F  00AF               	movwf	___flmul@b+1
  2852  0C20  084D               	movf	??_scale+1,w
  2853  0C21  00AE               	movwf	___flmul@b
  2854  0C22  300A               	movlw	10
  2855  0C23  00A6               	movwf	___awdiv@divisor
  2856  0C24  3000               	movlw	0
  2857  0C25  00A7               	movwf	___awdiv@divisor+1
  2858  0C26  085A               	movf	scale@scl,w
  2859  0C27  00A8               	movwf	___awdiv@dividend
  2860  0C28  01A9               	clrf	___awdiv@dividend+1
  2861  0C29  1BA8               	btfsc	___awdiv@dividend,7
  2862  0C2A  03A9               	decf	___awdiv@dividend+1,f
  2863  0C2B  160A  158A  26F3  120A  158A  	fcall	___awdiv
  2864  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  2865  0C31  1303               	bcf	3,6	;RP1=0, select bank0
  2866  0C32  0826               	movf	?___awdiv,w
  2867  0C33  00D1               	movwf	??_scale+5
  2868  0C34  3001               	movlw	1
  2869  0C35                     u6555:
  2870  0C35  1003               	clrc
  2871  0C36  0DD1               	rlf	??_scale+5,f
  2872  0C37  3EFF               	addlw	-1
  2873  0C38  1D03               	skipz
  2874  0C39  2C35               	goto	u6555
  2875  0C3A  1003               	clrc
  2876  0C3B  0D51               	rlf	??_scale+5,w
  2877  0C3C  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2878  0C3D  0084               	movwf	4
  2879  0C3E  160A  158A  2000  120A  158A  	fcall	stringdir
  2880  0C43  00D2               	movwf	??_scale+6
  2881  0C44  160A  158A  2000  120A  158A  	fcall	stringdir
  2882  0C49  00D3               	movwf	??_scale+7
  2883  0C4A  160A  158A  2000  120A  158A  	fcall	stringdir
  2884  0C4F  00D4               	movwf	??_scale+8
  2885  0C50  160A  158A  2000  120A  158A  	fcall	stringdir
  2886  0C55  00D5               	movwf	??_scale+9
  2887  0C56  0855               	movf	??_scale+9,w
  2888  0C57  00B5               	movwf	___flmul@a+3
  2889  0C58  0854               	movf	??_scale+8,w
  2890  0C59  00B4               	movwf	___flmul@a+2
  2891  0C5A  0853               	movf	??_scale+7,w
  2892  0C5B  00B3               	movwf	___flmul@a+1
  2893  0C5C  0852               	movf	??_scale+6,w
  2894  0C5D  00B2               	movwf	___flmul@a
  2895  0C5E  160A  118A  249F  120A  158A  	fcall	___flmul
  2896  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  2897  0C64  1303               	bcf	3,6	;RP1=0, select bank0
  2898  0C65  0831               	movf	?___flmul+3,w
  2899  0C66  00CB               	movwf	?_scale+3
  2900  0C67  0830               	movf	?___flmul+2,w
  2901  0C68  00CA               	movwf	?_scale+2
  2902  0C69  082F               	movf	?___flmul+1,w
  2903  0C6A  00C9               	movwf	?_scale+1
  2904  0C6B  082E               	movf	?___flmul,w
  2905  0C6C  00C8               	movwf	?_scale
  2906  0C6D  2C9A               	goto	l238
  2907  0C6E                     l3812:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  2910  0C6E  085A               	movf	scale@scl,w
  2911  0C6F  00CC               	movwf	??_scale
  2912  0C70  3001               	movlw	1
  2913  0C71                     u6565:
  2914  0C71  1003               	clrc
  2915  0C72  0DCC               	rlf	??_scale,f
  2916  0C73  3EFF               	addlw	-1
  2917  0C74  1D03               	skipz
  2918  0C75  2C71               	goto	u6565
  2919  0C76  1003               	clrc
  2920  0C77  0D4C               	rlf	??_scale,w
  2921  0C78  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2922  0C79  0084               	movwf	4
  2923  0C7A  160A  158A  2000  120A  158A  	fcall	stringdir
  2924  0C7F  00CD               	movwf	??_scale+1
  2925  0C80  160A  158A  2000  120A  158A  	fcall	stringdir
  2926  0C85  00CE               	movwf	??_scale+2
  2927  0C86  160A  158A  2000  120A  158A  	fcall	stringdir
  2928  0C8B  00CF               	movwf	??_scale+3
  2929  0C8C  160A  158A  2000  120A  158A  	fcall	stringdir
  2930  0C91  00D0               	movwf	??_scale+4
  2931  0C92  0850               	movf	??_scale+4,w
  2932  0C93  00CB               	movwf	?_scale+3
  2933  0C94  084F               	movf	??_scale+3,w
  2934  0C95  00CA               	movwf	?_scale+2
  2935  0C96  084E               	movf	??_scale+2,w
  2936  0C97  00C9               	movwf	?_scale+1
  2937  0C98  084D               	movf	??_scale+1,w
  2938  0C99  00C8               	movwf	?_scale
  2939  0C9A                     l238:
  2940  0C9A  0008               	return
  2941  0C9B                     __end_of_scale:
  2942                           
  2943                           	psect	text3
  2944  1DD0                     __ptext3:	
  2945 ;; *************** function ___awmod *****************
  2946 ;; Defined at:
  2947 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  divisor         2    0[BANK0 ] int 
  2950 ;;  dividend        2    2[BANK0 ] int 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  sign            1    5[BANK0 ] unsigned char 
  2953 ;;  counter         1    4[BANK0 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  2    0[BANK0 ] int 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       4       0       0       0
  2964 ;;      Locals:         0       2       0       0       0
  2965 ;;      Temps:          1       0       0       0       0
  2966 ;;      Totals:         1       6       0       0       0
  2967 ;;Total ram usage:        7 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_scale
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function ___awmod
  2979  1DD0                     ___awmod:
  2980  1DD0                     l3558:	
  2981                           ;incstack = 0
  2982                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2983                           
  2984  1DD0  1283               	bcf	3,5	;RP0=0, select bank0
  2985  1DD1  1303               	bcf	3,6	;RP1=0, select bank0
  2986  1DD2  01A5               	clrf	___awmod@sign
  2987  1DD3                     l3560:
  2988  1DD3  1FA3               	btfss	___awmod@dividend+1,7
  2989  1DD4  2DD6               	goto	u5801
  2990  1DD5  2DD7               	goto	u5800
  2991  1DD6                     u5801:
  2992  1DD6  2DDE               	goto	l3566
  2993  1DD7                     u5800:
  2994  1DD7                     l3562:
  2995  1DD7  09A2               	comf	___awmod@dividend,f
  2996  1DD8  09A3               	comf	___awmod@dividend+1,f
  2997  1DD9  0AA2               	incf	___awmod@dividend,f
  2998  1DDA  1903               	skipnz
  2999  1DDB  0AA3               	incf	___awmod@dividend+1,f
  3000  1DDC                     l3564:
  3001  1DDC  01A5               	clrf	___awmod@sign
  3002  1DDD  0AA5               	incf	___awmod@sign,f
  3003  1DDE                     l3566:
  3004  1DDE  1FA1               	btfss	___awmod@divisor+1,7
  3005  1DDF  2DE1               	goto	u5811
  3006  1DE0  2DE2               	goto	u5810
  3007  1DE1                     u5811:
  3008  1DE1  2DE7               	goto	l3570
  3009  1DE2                     u5810:
  3010  1DE2                     l3568:
  3011  1DE2  09A0               	comf	___awmod@divisor,f
  3012  1DE3  09A1               	comf	___awmod@divisor+1,f
  3013  1DE4  0AA0               	incf	___awmod@divisor,f
  3014  1DE5  1903               	skipnz
  3015  1DE6  0AA1               	incf	___awmod@divisor+1,f
  3016  1DE7                     l3570:
  3017  1DE7  0820               	movf	___awmod@divisor,w
  3018  1DE8  0421               	iorwf	___awmod@divisor+1,w
  3019  1DE9  1903               	btfsc	3,2
  3020  1DEA  2DEC               	goto	u5821
  3021  1DEB  2DED               	goto	u5820
  3022  1DEC                     u5821:
  3023  1DEC  2E1C               	goto	l3588
  3024  1DED                     u5820:
  3025  1DED                     l3572:
  3026  1DED  01A4               	clrf	___awmod@counter
  3027  1DEE  0AA4               	incf	___awmod@counter,f
  3028  1DEF  2DFB               	goto	l3578
  3029  1DF0                     l3574:
  3030  1DF0  3001               	movlw	1
  3031  1DF1                     u5835:
  3032  1DF1  1003               	clrc
  3033  1DF2  0DA0               	rlf	___awmod@divisor,f
  3034  1DF3  0DA1               	rlf	___awmod@divisor+1,f
  3035  1DF4  3EFF               	addlw	-1
  3036  1DF5  1D03               	skipz
  3037  1DF6  2DF1               	goto	u5835
  3038  1DF7                     l3576:
  3039  1DF7  3001               	movlw	1
  3040  1DF8  00F5               	movwf	??___awmod
  3041  1DF9  0875               	movf	??___awmod,w
  3042  1DFA  07A4               	addwf	___awmod@counter,f
  3043  1DFB                     l3578:
  3044  1DFB  1FA1               	btfss	___awmod@divisor+1,7
  3045  1DFC  2DFE               	goto	u5841
  3046  1DFD  2DFF               	goto	u5840
  3047  1DFE                     u5841:
  3048  1DFE  2DF0               	goto	l3574
  3049  1DFF                     u5840:
  3050  1DFF                     l3580:
  3051  1DFF  0821               	movf	___awmod@divisor+1,w
  3052  1E00  0223               	subwf	___awmod@dividend+1,w
  3053  1E01  1D03               	skipz
  3054  1E02  2E05               	goto	u5855
  3055  1E03  0820               	movf	___awmod@divisor,w
  3056  1E04  0222               	subwf	___awmod@dividend,w
  3057  1E05                     u5855:
  3058  1E05  1C03               	skipc
  3059  1E06  2E08               	goto	u5851
  3060  1E07  2E09               	goto	u5850
  3061  1E08                     u5851:
  3062  1E08  2E0F               	goto	l3584
  3063  1E09                     u5850:
  3064  1E09                     l3582:
  3065  1E09  0820               	movf	___awmod@divisor,w
  3066  1E0A  02A2               	subwf	___awmod@dividend,f
  3067  1E0B  0821               	movf	___awmod@divisor+1,w
  3068  1E0C  1C03               	skipc
  3069  1E0D  03A3               	decf	___awmod@dividend+1,f
  3070  1E0E  02A3               	subwf	___awmod@dividend+1,f
  3071  1E0F                     l3584:
  3072  1E0F  3001               	movlw	1
  3073  1E10                     u5865:
  3074  1E10  1003               	clrc
  3075  1E11  0CA1               	rrf	___awmod@divisor+1,f
  3076  1E12  0CA0               	rrf	___awmod@divisor,f
  3077  1E13  3EFF               	addlw	-1
  3078  1E14  1D03               	skipz
  3079  1E15  2E10               	goto	u5865
  3080  1E16                     l3586:
  3081  1E16  3001               	movlw	1
  3082  1E17  02A4               	subwf	___awmod@counter,f
  3083  1E18  1D03               	btfss	3,2
  3084  1E19  2E1B               	goto	u5871
  3085  1E1A  2E1C               	goto	u5870
  3086  1E1B                     u5871:
  3087  1E1B  2DFF               	goto	l3580
  3088  1E1C                     u5870:
  3089  1E1C                     l3588:
  3090  1E1C  0825               	movf	___awmod@sign,w
  3091  1E1D  1903               	btfsc	3,2
  3092  1E1E  2E20               	goto	u5881
  3093  1E1F  2E21               	goto	u5880
  3094  1E20                     u5881:
  3095  1E20  2E26               	goto	l3592
  3096  1E21                     u5880:
  3097  1E21                     l3590:
  3098  1E21  09A2               	comf	___awmod@dividend,f
  3099  1E22  09A3               	comf	___awmod@dividend+1,f
  3100  1E23  0AA2               	incf	___awmod@dividend,f
  3101  1E24  1903               	skipnz
  3102  1E25  0AA3               	incf	___awmod@dividend+1,f
  3103  1E26                     l3592:
  3104  1E26  0823               	movf	___awmod@dividend+1,w
  3105  1E27  00A1               	movwf	?___awmod+1
  3106  1E28  0822               	movf	___awmod@dividend,w
  3107  1E29  00A0               	movwf	?___awmod
  3108  1E2A                     l509:
  3109  1E2A  0008               	return
  3110  1E2B                     __end_of___awmod:
  3111                           
  3112                           	psect	text4
  3113  1EF3                     __ptext4:	
  3114 ;; *************** function ___awdiv *****************
  3115 ;; Defined at:
  3116 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  divisor         2    6[BANK0 ] int 
  3119 ;;  dividend        2    8[BANK0 ] int 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  quotient        2   12[BANK0 ] int 
  3122 ;;  sign            1   11[BANK0 ] unsigned char 
  3123 ;;  counter         1   10[BANK0 ] unsigned char 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  2    6[BANK0 ] int 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3133 ;;      Params:         0       4       0       0       0
  3134 ;;      Locals:         0       4       0       0       0
  3135 ;;      Temps:          1       0       0       0       0
  3136 ;;      Totals:         1       8       0       0       0
  3137 ;;Total ram usage:        9 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_scale
  3144 ;;		_sprintf
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           
  3149                           ;psect for function ___awdiv
  3150  1EF3                     ___awdiv:
  3151  1EF3                     l3514:	
  3152                           ;incstack = 0
  3153                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3154                           
  3155  1EF3  1283               	bcf	3,5	;RP0=0, select bank0
  3156  1EF4  1303               	bcf	3,6	;RP1=0, select bank0
  3157  1EF5  01AB               	clrf	___awdiv@sign
  3158  1EF6                     l3516:
  3159  1EF6  1FA7               	btfss	___awdiv@divisor+1,7
  3160  1EF7  2EF9               	goto	u5701
  3161  1EF8  2EFA               	goto	u5700
  3162  1EF9                     u5701:
  3163  1EF9  2F01               	goto	l3522
  3164  1EFA                     u5700:
  3165  1EFA                     l3518:
  3166  1EFA  09A6               	comf	___awdiv@divisor,f
  3167  1EFB  09A7               	comf	___awdiv@divisor+1,f
  3168  1EFC  0AA6               	incf	___awdiv@divisor,f
  3169  1EFD  1903               	skipnz
  3170  1EFE  0AA7               	incf	___awdiv@divisor+1,f
  3171  1EFF                     l3520:
  3172  1EFF  01AB               	clrf	___awdiv@sign
  3173  1F00  0AAB               	incf	___awdiv@sign,f
  3174  1F01                     l3522:
  3175  1F01  1FA9               	btfss	___awdiv@dividend+1,7
  3176  1F02  2F04               	goto	u5711
  3177  1F03  2F05               	goto	u5710
  3178  1F04                     u5711:
  3179  1F04  2F0E               	goto	l3528
  3180  1F05                     u5710:
  3181  1F05                     l3524:
  3182  1F05  09A8               	comf	___awdiv@dividend,f
  3183  1F06  09A9               	comf	___awdiv@dividend+1,f
  3184  1F07  0AA8               	incf	___awdiv@dividend,f
  3185  1F08  1903               	skipnz
  3186  1F09  0AA9               	incf	___awdiv@dividend+1,f
  3187  1F0A                     l3526:
  3188  1F0A  3001               	movlw	1
  3189  1F0B  00F6               	movwf	??___awdiv
  3190  1F0C  0876               	movf	??___awdiv,w
  3191  1F0D  06AB               	xorwf	___awdiv@sign,f
  3192  1F0E                     l3528:
  3193  1F0E  01AC               	clrf	___awdiv@quotient
  3194  1F0F  01AD               	clrf	___awdiv@quotient+1
  3195  1F10                     l3530:
  3196  1F10  0826               	movf	___awdiv@divisor,w
  3197  1F11  0427               	iorwf	___awdiv@divisor+1,w
  3198  1F12  1903               	btfsc	3,2
  3199  1F13  2F15               	goto	u5721
  3200  1F14  2F16               	goto	u5720
  3201  1F15                     u5721:
  3202  1F15  2F4D               	goto	l3550
  3203  1F16                     u5720:
  3204  1F16                     l3532:
  3205  1F16  01AA               	clrf	___awdiv@counter
  3206  1F17  0AAA               	incf	___awdiv@counter,f
  3207  1F18  2F24               	goto	l3538
  3208  1F19                     l3534:
  3209  1F19  3001               	movlw	1
  3210  1F1A                     u5735:
  3211  1F1A  1003               	clrc
  3212  1F1B  0DA6               	rlf	___awdiv@divisor,f
  3213  1F1C  0DA7               	rlf	___awdiv@divisor+1,f
  3214  1F1D  3EFF               	addlw	-1
  3215  1F1E  1D03               	skipz
  3216  1F1F  2F1A               	goto	u5735
  3217  1F20                     l3536:
  3218  1F20  3001               	movlw	1
  3219  1F21  00F6               	movwf	??___awdiv
  3220  1F22  0876               	movf	??___awdiv,w
  3221  1F23  07AA               	addwf	___awdiv@counter,f
  3222  1F24                     l3538:
  3223  1F24  1FA7               	btfss	___awdiv@divisor+1,7
  3224  1F25  2F27               	goto	u5741
  3225  1F26  2F28               	goto	u5740
  3226  1F27                     u5741:
  3227  1F27  2F19               	goto	l3534
  3228  1F28                     u5740:
  3229  1F28                     l3540:
  3230  1F28  3001               	movlw	1
  3231  1F29                     u5755:
  3232  1F29  1003               	clrc
  3233  1F2A  0DAC               	rlf	___awdiv@quotient,f
  3234  1F2B  0DAD               	rlf	___awdiv@quotient+1,f
  3235  1F2C  3EFF               	addlw	-1
  3236  1F2D  1D03               	skipz
  3237  1F2E  2F29               	goto	u5755
  3238  1F2F  0827               	movf	___awdiv@divisor+1,w
  3239  1F30  0229               	subwf	___awdiv@dividend+1,w
  3240  1F31  1D03               	skipz
  3241  1F32  2F35               	goto	u5765
  3242  1F33  0826               	movf	___awdiv@divisor,w
  3243  1F34  0228               	subwf	___awdiv@dividend,w
  3244  1F35                     u5765:
  3245  1F35  1C03               	skipc
  3246  1F36  2F38               	goto	u5761
  3247  1F37  2F39               	goto	u5760
  3248  1F38                     u5761:
  3249  1F38  2F40               	goto	l3546
  3250  1F39                     u5760:
  3251  1F39                     l3542:
  3252  1F39  0826               	movf	___awdiv@divisor,w
  3253  1F3A  02A8               	subwf	___awdiv@dividend,f
  3254  1F3B  0827               	movf	___awdiv@divisor+1,w
  3255  1F3C  1C03               	skipc
  3256  1F3D  03A9               	decf	___awdiv@dividend+1,f
  3257  1F3E  02A9               	subwf	___awdiv@dividend+1,f
  3258  1F3F                     l3544:
  3259  1F3F  142C               	bsf	___awdiv@quotient,0
  3260  1F40                     l3546:
  3261  1F40  3001               	movlw	1
  3262  1F41                     u5775:
  3263  1F41  1003               	clrc
  3264  1F42  0CA7               	rrf	___awdiv@divisor+1,f
  3265  1F43  0CA6               	rrf	___awdiv@divisor,f
  3266  1F44  3EFF               	addlw	-1
  3267  1F45  1D03               	skipz
  3268  1F46  2F41               	goto	u5775
  3269  1F47                     l3548:
  3270  1F47  3001               	movlw	1
  3271  1F48  02AA               	subwf	___awdiv@counter,f
  3272  1F49  1D03               	btfss	3,2
  3273  1F4A  2F4C               	goto	u5781
  3274  1F4B  2F4D               	goto	u5780
  3275  1F4C                     u5781:
  3276  1F4C  2F28               	goto	l3540
  3277  1F4D                     u5780:
  3278  1F4D                     l3550:
  3279  1F4D  082B               	movf	___awdiv@sign,w
  3280  1F4E  1903               	btfsc	3,2
  3281  1F4F  2F51               	goto	u5791
  3282  1F50  2F52               	goto	u5790
  3283  1F51                     u5791:
  3284  1F51  2F57               	goto	l3554
  3285  1F52                     u5790:
  3286  1F52                     l3552:
  3287  1F52  09AC               	comf	___awdiv@quotient,f
  3288  1F53  09AD               	comf	___awdiv@quotient+1,f
  3289  1F54  0AAC               	incf	___awdiv@quotient,f
  3290  1F55  1903               	skipnz
  3291  1F56  0AAD               	incf	___awdiv@quotient+1,f
  3292  1F57                     l3554:
  3293  1F57  082D               	movf	___awdiv@quotient+1,w
  3294  1F58  00A7               	movwf	?___awdiv+1
  3295  1F59  082C               	movf	___awdiv@quotient,w
  3296  1F5A  00A6               	movwf	?___awdiv
  3297  1F5B                     l496:
  3298  1F5B  0008               	return
  3299  1F5C                     __end_of___awdiv:
  3300                           
  3301                           	psect	text5
  3302  1B6E                     __ptext5:	
  3303 ;; *************** function _isdigit *****************
  3304 ;; Defined at:
  3305 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  c               1    wreg     unsigned char 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  c               1    6[COMMON] unsigned char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;		None               void
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3319 ;;      Params:         0       0       0       0       0
  3320 ;;      Locals:         2       0       0       0       0
  3321 ;;      Temps:          0       0       0       0       0
  3322 ;;      Totals:         2       0       0       0       0
  3323 ;;Total ram usage:        2 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_sprintf
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _isdigit
  3335  1B6E                     _isdigit:
  3336                           
  3337                           ;incstack = 0
  3338                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3339                           ;isdigit@c stored from wreg
  3340  1B6E  00F6               	movwf	isdigit@c
  3341  1B6F                     l2736:
  3342  1B6F  01F5               	clrf	_isdigit$941
  3343  1B70                     l2738:
  3344  1B70  303A               	movlw	58
  3345  1B71  0276               	subwf	isdigit@c,w
  3346  1B72  1803               	skipnc
  3347  1B73  2B75               	goto	u4281
  3348  1B74  2B76               	goto	u4280
  3349  1B75                     u4281:
  3350  1B75  2B7E               	goto	l2744
  3351  1B76                     u4280:
  3352  1B76                     l2740:
  3353  1B76  3030               	movlw	48
  3354  1B77  0276               	subwf	isdigit@c,w
  3355  1B78  1C03               	skipc
  3356  1B79  2B7B               	goto	u4291
  3357  1B7A  2B7C               	goto	u4290
  3358  1B7B                     u4291:
  3359  1B7B  2B7E               	goto	l2744
  3360  1B7C                     u4290:
  3361  1B7C                     l2742:
  3362  1B7C  01F5               	clrf	_isdigit$941
  3363  1B7D  0AF5               	incf	_isdigit$941,f
  3364  1B7E                     l2744:
  3365  1B7E  0C75               	rrf	_isdigit$941,w
  3366  1B7F                     l830:
  3367  1B7F  0008               	return
  3368  1B80                     __end_of_isdigit:
  3369                           
  3370                           	psect	text6
  3371  100A                     __ptext6:	
  3372 ;; *************** function _fround *****************
  3373 ;; Defined at:
  3374 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  prec            1    wreg     unsigned char 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  prec            1   59[BANK0 ] unsigned char 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  4   40[BANK0 ] unsigned char 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3388 ;;      Params:         0       4       0       0       0
  3389 ;;      Locals:         0       9       0       0       0
  3390 ;;      Temps:          0       7       0       0       0
  3391 ;;      Totals:         0      20       0       0       0
  3392 ;;Total ram usage:       20 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    3
  3395 ;; This function calls:
  3396 ;;		___flmul
  3397 ;;		___lwdiv
  3398 ;;		___lwmod
  3399 ;; This function is called by:
  3400 ;;		_sprintf
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function _fround
  3406  100A                     _fround:
  3407                           
  3408                           ;incstack = 0
  3409                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3410                           ;fround@prec stored from wreg
  3411  100A  1283               	bcf	3,5	;RP0=0, select bank0
  3412  100B  1303               	bcf	3,6	;RP1=0, select bank0
  3413  100C  00DB               	movwf	fround@prec
  3414  100D                     l3758:
  3415                           
  3416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3417  100D  306E               	movlw	110
  3418  100E  025B               	subwf	fround@prec,w
  3419  100F  1C03               	skipc
  3420  1010  2812               	goto	u6321
  3421  1011  2813               	goto	u6320
  3422  1012                     u6321:
  3423  1012  2922               	goto	l3766
  3424  1013                     u6320:
  3425  1013                     l3760:
  3426                           
  3427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3428  1013  303F               	movlw	63
  3429  1014  00B1               	movwf	___flmul@b+3
  3430  1015  3000               	movlw	0
  3431  1016  00B0               	movwf	___flmul@b+2
  3432  1017  3000               	movlw	0
  3433  1018  00AF               	movwf	___flmul@b+1
  3434  1019  3000               	movlw	0
  3435  101A  00AE               	movwf	___flmul@b
  3436  101B  3064               	movlw	100
  3437  101C  00A4               	movwf	___lwdiv@divisor
  3438  101D  3000               	movlw	0
  3439  101E  00A5               	movwf	___lwdiv@divisor+1
  3440  101F  085B               	movf	fround@prec,w
  3441  1020  00CC               	movwf	??_fround
  3442  1021  01CD               	clrf	??_fround+1
  3443  1022  084C               	movf	??_fround,w
  3444  1023  00A6               	movwf	___lwdiv@dividend
  3445  1024  084D               	movf	??_fround+1,w
  3446  1025  00A7               	movwf	___lwdiv@dividend+1
  3447  1026  160A  158A  2494  160A  118A  	fcall	___lwdiv
  3448  102B  1283               	bcf	3,5	;RP0=0, select bank0
  3449  102C  1303               	bcf	3,6	;RP1=0, select bank0
  3450  102D  0824               	movf	?___lwdiv,w
  3451  102E  00CE               	movwf	??_fround+2
  3452  102F  3001               	movlw	1
  3453  1030                     u6335:
  3454  1030  1003               	clrc
  3455  1031  0DCE               	rlf	??_fround+2,f
  3456  1032  3EFF               	addlw	-1
  3457  1033  1D03               	skipz
  3458  1034  2830               	goto	u6335
  3459  1035  1003               	clrc
  3460  1036  0D4E               	rlf	??_fround+2,w
  3461  1037  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3462  1038  0084               	movwf	4
  3463  1039  160A  158A  2000  160A  118A  	fcall	stringdir
  3464  103E  00CF               	movwf	??_fround+3
  3465  103F  160A  158A  2000  160A  118A  	fcall	stringdir
  3466  1044  00D0               	movwf	??_fround+4
  3467  1045  160A  158A  2000  160A  118A  	fcall	stringdir
  3468  104A  00D1               	movwf	??_fround+5
  3469  104B  160A  158A  2000  160A  118A  	fcall	stringdir
  3470  1050  00D2               	movwf	??_fround+6
  3471  1051  0852               	movf	??_fround+6,w
  3472  1052  00B5               	movwf	___flmul@a+3
  3473  1053  0851               	movf	??_fround+5,w
  3474  1054  00B4               	movwf	___flmul@a+2
  3475  1055  0850               	movf	??_fround+4,w
  3476  1056  00B3               	movwf	___flmul@a+1
  3477  1057  084F               	movf	??_fround+3,w
  3478  1058  00B2               	movwf	___flmul@a
  3479  1059  160A  118A  249F  160A  118A  	fcall	___flmul
  3480  105E  1283               	bcf	3,5	;RP0=0, select bank0
  3481  105F  1303               	bcf	3,6	;RP1=0, select bank0
  3482  1060  0831               	movf	?___flmul+3,w
  3483  1061  00DA               	movwf	_fround$1110+3
  3484  1062  0830               	movf	?___flmul+2,w
  3485  1063  00D9               	movwf	_fround$1110+2
  3486  1064  082F               	movf	?___flmul+1,w
  3487  1065  00D8               	movwf	_fround$1110+1
  3488  1066  082E               	movf	?___flmul,w
  3489  1067  00D7               	movwf	_fround$1110
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3492  1068  300A               	movlw	10
  3493  1069  00A4               	movwf	___lwdiv@divisor
  3494  106A  3000               	movlw	0
  3495  106B  00A5               	movwf	___lwdiv@divisor+1
  3496  106C  085B               	movf	fround@prec,w
  3497  106D  00CC               	movwf	??_fround
  3498  106E  01CD               	clrf	??_fround+1
  3499  106F  084C               	movf	??_fround,w
  3500  1070  00A2               	movwf	___lwmod@dividend
  3501  1071  084D               	movf	??_fround+1,w
  3502  1072  00A3               	movwf	___lwmod@dividend+1
  3503  1073  3064               	movlw	100
  3504  1074  00A0               	movwf	___lwmod@divisor
  3505  1075  3000               	movlw	0
  3506  1076  00A1               	movwf	___lwmod@divisor+1
  3507  1077  160A  158A  2458  160A  118A  	fcall	___lwmod
  3508  107C  1283               	bcf	3,5	;RP0=0, select bank0
  3509  107D  1303               	bcf	3,6	;RP1=0, select bank0
  3510  107E  0821               	movf	?___lwmod+1,w
  3511  107F  00A7               	movwf	___lwdiv@dividend+1
  3512  1080  0820               	movf	?___lwmod,w
  3513  1081  00A6               	movwf	___lwdiv@dividend
  3514  1082  160A  158A  2494  160A  118A  	fcall	___lwdiv
  3515  1087  1283               	bcf	3,5	;RP0=0, select bank0
  3516  1088  1303               	bcf	3,6	;RP1=0, select bank0
  3517  1089  0824               	movf	?___lwdiv,w
  3518  108A  00CE               	movwf	??_fround+2
  3519  108B  3001               	movlw	1
  3520  108C                     u6345:
  3521  108C  1003               	clrc
  3522  108D  0DCE               	rlf	??_fround+2,f
  3523  108E  3EFF               	addlw	-1
  3524  108F  1D03               	skipz
  3525  1090  288C               	goto	u6345
  3526  1091  1003               	clrc
  3527  1092  0D4E               	rlf	??_fround+2,w
  3528  1093  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3529  1094  0084               	movwf	4
  3530  1095  160A  158A  2000  160A  118A  	fcall	stringdir
  3531  109A  00CF               	movwf	??_fround+3
  3532  109B  160A  158A  2000  160A  118A  	fcall	stringdir
  3533  10A0  00D0               	movwf	??_fround+4
  3534  10A1  160A  158A  2000  160A  118A  	fcall	stringdir
  3535  10A6  00D1               	movwf	??_fround+5
  3536  10A7  160A  158A  2000  160A  118A  	fcall	stringdir
  3537  10AC  00D2               	movwf	??_fround+6
  3538  10AD  0852               	movf	??_fround+6,w
  3539  10AE  00B1               	movwf	___flmul@b+3
  3540  10AF  0851               	movf	??_fround+5,w
  3541  10B0  00B0               	movwf	___flmul@b+2
  3542  10B1  0850               	movf	??_fround+4,w
  3543  10B2  00AF               	movwf	___flmul@b+1
  3544  10B3  084F               	movf	??_fround+3,w
  3545  10B4  00AE               	movwf	___flmul@b
  3546  10B5  085A               	movf	_fround$1110+3,w
  3547  10B6  00B5               	movwf	___flmul@a+3
  3548  10B7  0859               	movf	_fround$1110+2,w
  3549  10B8  00B4               	movwf	___flmul@a+2
  3550  10B9  0858               	movf	_fround$1110+1,w
  3551  10BA  00B3               	movwf	___flmul@a+1
  3552  10BB  0857               	movf	_fround$1110,w
  3553  10BC  00B2               	movwf	___flmul@a
  3554  10BD  160A  118A  249F  160A  118A  	fcall	___flmul
  3555  10C2  1283               	bcf	3,5	;RP0=0, select bank0
  3556  10C3  1303               	bcf	3,6	;RP1=0, select bank0
  3557  10C4  0831               	movf	?___flmul+3,w
  3558  10C5  00D6               	movwf	_fround$1111+3
  3559  10C6  0830               	movf	?___flmul+2,w
  3560  10C7  00D5               	movwf	_fround$1111+2
  3561  10C8  082F               	movf	?___flmul+1,w
  3562  10C9  00D4               	movwf	_fround$1111+1
  3563  10CA  082E               	movf	?___flmul,w
  3564  10CB  00D3               	movwf	_fround$1111
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3567  10CC  300A               	movlw	10
  3568  10CD  00A0               	movwf	___lwmod@divisor
  3569  10CE  3000               	movlw	0
  3570  10CF  00A1               	movwf	___lwmod@divisor+1
  3571  10D0  085B               	movf	fround@prec,w
  3572  10D1  00CC               	movwf	??_fround
  3573  10D2  01CD               	clrf	??_fround+1
  3574  10D3  084C               	movf	??_fround,w
  3575  10D4  00A2               	movwf	___lwmod@dividend
  3576  10D5  084D               	movf	??_fround+1,w
  3577  10D6  00A3               	movwf	___lwmod@dividend+1
  3578  10D7  160A  158A  2458  160A  118A  	fcall	___lwmod
  3579  10DC  1283               	bcf	3,5	;RP0=0, select bank0
  3580  10DD  1303               	bcf	3,6	;RP1=0, select bank0
  3581  10DE  0820               	movf	?___lwmod,w
  3582  10DF  00CE               	movwf	??_fround+2
  3583  10E0  3001               	movlw	1
  3584  10E1                     u6355:
  3585  10E1  1003               	clrc
  3586  10E2  0DCE               	rlf	??_fround+2,f
  3587  10E3  3EFF               	addlw	-1
  3588  10E4  1D03               	skipz
  3589  10E5  28E1               	goto	u6355
  3590  10E6  1003               	clrc
  3591  10E7  0D4E               	rlf	??_fround+2,w
  3592  10E8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3593  10E9  0084               	movwf	4
  3594  10EA  160A  158A  2000  160A  118A  	fcall	stringdir
  3595  10EF  00CF               	movwf	??_fround+3
  3596  10F0  160A  158A  2000  160A  118A  	fcall	stringdir
  3597  10F5  00D0               	movwf	??_fround+4
  3598  10F6  160A  158A  2000  160A  118A  	fcall	stringdir
  3599  10FB  00D1               	movwf	??_fround+5
  3600  10FC  160A  158A  2000  160A  118A  	fcall	stringdir
  3601  1101  00D2               	movwf	??_fround+6
  3602  1102  0852               	movf	??_fround+6,w
  3603  1103  00B1               	movwf	___flmul@b+3
  3604  1104  0851               	movf	??_fround+5,w
  3605  1105  00B0               	movwf	___flmul@b+2
  3606  1106  0850               	movf	??_fround+4,w
  3607  1107  00AF               	movwf	___flmul@b+1
  3608  1108  084F               	movf	??_fround+3,w
  3609  1109  00AE               	movwf	___flmul@b
  3610  110A  0856               	movf	_fround$1111+3,w
  3611  110B  00B5               	movwf	___flmul@a+3
  3612  110C  0855               	movf	_fround$1111+2,w
  3613  110D  00B4               	movwf	___flmul@a+2
  3614  110E  0854               	movf	_fround$1111+1,w
  3615  110F  00B3               	movwf	___flmul@a+1
  3616  1110  0853               	movf	_fround$1111,w
  3617  1111  00B2               	movwf	___flmul@a
  3618  1112  160A  118A  249F  160A  118A  	fcall	___flmul
  3619  1117  1283               	bcf	3,5	;RP0=0, select bank0
  3620  1118  1303               	bcf	3,6	;RP1=0, select bank0
  3621  1119  0831               	movf	?___flmul+3,w
  3622  111A  00CB               	movwf	?_fround+3
  3623  111B  0830               	movf	?___flmul+2,w
  3624  111C  00CA               	movwf	?_fround+2
  3625  111D  082F               	movf	?___flmul+1,w
  3626  111E  00C9               	movwf	?_fround+1
  3627  111F  082E               	movf	?___flmul,w
  3628  1120  00C8               	movwf	?_fround
  3629  1121  2A16               	goto	l231
  3630  1122                     l3766:
  3631  1122  300B               	movlw	11
  3632  1123  025B               	subwf	fround@prec,w
  3633  1124  1C03               	skipc
  3634  1125  2927               	goto	u6361
  3635  1126  2928               	goto	u6360
  3636  1127                     u6361:
  3637  1127  29D3               	goto	l3772
  3638  1128                     u6360:
  3639  1128                     l3768:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3642  1128  303F               	movlw	63
  3643  1129  00B1               	movwf	___flmul@b+3
  3644  112A  3000               	movlw	0
  3645  112B  00B0               	movwf	___flmul@b+2
  3646  112C  3000               	movlw	0
  3647  112D  00AF               	movwf	___flmul@b+1
  3648  112E  3000               	movlw	0
  3649  112F  00AE               	movwf	___flmul@b
  3650  1130  300A               	movlw	10
  3651  1131  00A4               	movwf	___lwdiv@divisor
  3652  1132  3000               	movlw	0
  3653  1133  00A5               	movwf	___lwdiv@divisor+1
  3654  1134  085B               	movf	fround@prec,w
  3655  1135  00CC               	movwf	??_fround
  3656  1136  01CD               	clrf	??_fround+1
  3657  1137  084C               	movf	??_fround,w
  3658  1138  00A6               	movwf	___lwdiv@dividend
  3659  1139  084D               	movf	??_fround+1,w
  3660  113A  00A7               	movwf	___lwdiv@dividend+1
  3661  113B  160A  158A  2494  160A  118A  	fcall	___lwdiv
  3662  1140  1283               	bcf	3,5	;RP0=0, select bank0
  3663  1141  1303               	bcf	3,6	;RP1=0, select bank0
  3664  1142  0824               	movf	?___lwdiv,w
  3665  1143  00CE               	movwf	??_fround+2
  3666  1144  3001               	movlw	1
  3667  1145                     u6375:
  3668  1145  1003               	clrc
  3669  1146  0DCE               	rlf	??_fround+2,f
  3670  1147  3EFF               	addlw	-1
  3671  1148  1D03               	skipz
  3672  1149  2945               	goto	u6375
  3673  114A  1003               	clrc
  3674  114B  0D4E               	rlf	??_fround+2,w
  3675  114C  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3676  114D  0084               	movwf	4
  3677  114E  160A  158A  2000  160A  118A  	fcall	stringdir
  3678  1153  00CF               	movwf	??_fround+3
  3679  1154  160A  158A  2000  160A  118A  	fcall	stringdir
  3680  1159  00D0               	movwf	??_fround+4
  3681  115A  160A  158A  2000  160A  118A  	fcall	stringdir
  3682  115F  00D1               	movwf	??_fround+5
  3683  1160  160A  158A  2000  160A  118A  	fcall	stringdir
  3684  1165  00D2               	movwf	??_fround+6
  3685  1166  0852               	movf	??_fround+6,w
  3686  1167  00B5               	movwf	___flmul@a+3
  3687  1168  0851               	movf	??_fround+5,w
  3688  1169  00B4               	movwf	___flmul@a+2
  3689  116A  0850               	movf	??_fround+4,w
  3690  116B  00B3               	movwf	___flmul@a+1
  3691  116C  084F               	movf	??_fround+3,w
  3692  116D  00B2               	movwf	___flmul@a
  3693  116E  160A  118A  249F  160A  118A  	fcall	___flmul
  3694  1173  1283               	bcf	3,5	;RP0=0, select bank0
  3695  1174  1303               	bcf	3,6	;RP1=0, select bank0
  3696  1175  0831               	movf	?___flmul+3,w
  3697  1176  00DA               	movwf	_fround$1110+3
  3698  1177  0830               	movf	?___flmul+2,w
  3699  1178  00D9               	movwf	_fround$1110+2
  3700  1179  082F               	movf	?___flmul+1,w
  3701  117A  00D8               	movwf	_fround$1110+1
  3702  117B  082E               	movf	?___flmul,w
  3703  117C  00D7               	movwf	_fround$1110
  3704                           
  3705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3706  117D  300A               	movlw	10
  3707  117E  00A0               	movwf	___lwmod@divisor
  3708  117F  3000               	movlw	0
  3709  1180  00A1               	movwf	___lwmod@divisor+1
  3710  1181  085B               	movf	fround@prec,w
  3711  1182  00CC               	movwf	??_fround
  3712  1183  01CD               	clrf	??_fround+1
  3713  1184  084C               	movf	??_fround,w
  3714  1185  00A2               	movwf	___lwmod@dividend
  3715  1186  084D               	movf	??_fround+1,w
  3716  1187  00A3               	movwf	___lwmod@dividend+1
  3717  1188  160A  158A  2458  160A  118A  	fcall	___lwmod
  3718  118D  1283               	bcf	3,5	;RP0=0, select bank0
  3719  118E  1303               	bcf	3,6	;RP1=0, select bank0
  3720  118F  0820               	movf	?___lwmod,w
  3721  1190  00CE               	movwf	??_fround+2
  3722  1191  3001               	movlw	1
  3723  1192                     u6385:
  3724  1192  1003               	clrc
  3725  1193  0DCE               	rlf	??_fround+2,f
  3726  1194  3EFF               	addlw	-1
  3727  1195  1D03               	skipz
  3728  1196  2992               	goto	u6385
  3729  1197  1003               	clrc
  3730  1198  0D4E               	rlf	??_fround+2,w
  3731  1199  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3732  119A  0084               	movwf	4
  3733  119B  160A  158A  2000  160A  118A  	fcall	stringdir
  3734  11A0  00CF               	movwf	??_fround+3
  3735  11A1  160A  158A  2000  160A  118A  	fcall	stringdir
  3736  11A6  00D0               	movwf	??_fround+4
  3737  11A7  160A  158A  2000  160A  118A  	fcall	stringdir
  3738  11AC  00D1               	movwf	??_fround+5
  3739  11AD  160A  158A  2000  160A  118A  	fcall	stringdir
  3740  11B2  00D2               	movwf	??_fround+6
  3741  11B3  0852               	movf	??_fround+6,w
  3742  11B4  00B1               	movwf	___flmul@b+3
  3743  11B5  0851               	movf	??_fround+5,w
  3744  11B6  00B0               	movwf	___flmul@b+2
  3745  11B7  0850               	movf	??_fround+4,w
  3746  11B8  00AF               	movwf	___flmul@b+1
  3747  11B9  084F               	movf	??_fround+3,w
  3748  11BA  00AE               	movwf	___flmul@b
  3749  11BB  085A               	movf	_fround$1110+3,w
  3750  11BC  00B5               	movwf	___flmul@a+3
  3751  11BD  0859               	movf	_fround$1110+2,w
  3752  11BE  00B4               	movwf	___flmul@a+2
  3753  11BF  0858               	movf	_fround$1110+1,w
  3754  11C0  00B3               	movwf	___flmul@a+1
  3755  11C1  0857               	movf	_fround$1110,w
  3756  11C2  00B2               	movwf	___flmul@a
  3757  11C3  160A  118A  249F  160A  118A  	fcall	___flmul
  3758  11C8  1283               	bcf	3,5	;RP0=0, select bank0
  3759  11C9  1303               	bcf	3,6	;RP1=0, select bank0
  3760  11CA  0831               	movf	?___flmul+3,w
  3761  11CB  00CB               	movwf	?_fround+3
  3762  11CC  0830               	movf	?___flmul+2,w
  3763  11CD  00CA               	movwf	?_fround+2
  3764  11CE  082F               	movf	?___flmul+1,w
  3765  11CF  00C9               	movwf	?_fround+1
  3766  11D0  082E               	movf	?___flmul,w
  3767  11D1  00C8               	movwf	?_fround
  3768  11D2  2A16               	goto	l231
  3769  11D3                     l3772:
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3772  11D3  303F               	movlw	63
  3773  11D4  00B1               	movwf	___flmul@b+3
  3774  11D5  3000               	movlw	0
  3775  11D6  00B0               	movwf	___flmul@b+2
  3776  11D7  3000               	movlw	0
  3777  11D8  00AF               	movwf	___flmul@b+1
  3778  11D9  3000               	movlw	0
  3779  11DA  00AE               	movwf	___flmul@b
  3780  11DB  085B               	movf	fround@prec,w
  3781  11DC  00CC               	movwf	??_fround
  3782  11DD  3001               	movlw	1
  3783  11DE                     u6395:
  3784  11DE  1003               	clrc
  3785  11DF  0DCC               	rlf	??_fround,f
  3786  11E0  3EFF               	addlw	-1
  3787  11E1  1D03               	skipz
  3788  11E2  29DE               	goto	u6395
  3789  11E3  1003               	clrc
  3790  11E4  0D4C               	rlf	??_fround,w
  3791  11E5  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3792  11E6  0084               	movwf	4
  3793  11E7  160A  158A  2000  160A  118A  	fcall	stringdir
  3794  11EC  00CD               	movwf	??_fround+1
  3795  11ED  160A  158A  2000  160A  118A  	fcall	stringdir
  3796  11F2  00CE               	movwf	??_fround+2
  3797  11F3  160A  158A  2000  160A  118A  	fcall	stringdir
  3798  11F8  00CF               	movwf	??_fround+3
  3799  11F9  160A  158A  2000  160A  118A  	fcall	stringdir
  3800  11FE  00D0               	movwf	??_fround+4
  3801  11FF  0850               	movf	??_fround+4,w
  3802  1200  00B5               	movwf	___flmul@a+3
  3803  1201  084F               	movf	??_fround+3,w
  3804  1202  00B4               	movwf	___flmul@a+2
  3805  1203  084E               	movf	??_fround+2,w
  3806  1204  00B3               	movwf	___flmul@a+1
  3807  1205  084D               	movf	??_fround+1,w
  3808  1206  00B2               	movwf	___flmul@a
  3809  1207  160A  118A  249F  160A  118A  	fcall	___flmul
  3810  120C  1283               	bcf	3,5	;RP0=0, select bank0
  3811  120D  1303               	bcf	3,6	;RP1=0, select bank0
  3812  120E  0831               	movf	?___flmul+3,w
  3813  120F  00CB               	movwf	?_fround+3
  3814  1210  0830               	movf	?___flmul+2,w
  3815  1211  00CA               	movwf	?_fround+2
  3816  1212  082F               	movf	?___flmul+1,w
  3817  1213  00C9               	movwf	?_fround+1
  3818  1214  082E               	movf	?___flmul,w
  3819  1215  00C8               	movwf	?_fround
  3820  1216                     l231:
  3821  1216  0008               	return
  3822  1217                     __end_of_fround:
  3823                           
  3824                           	psect	text7
  3825  1C58                     __ptext7:	
  3826 ;; *************** function ___lwmod *****************
  3827 ;; Defined at:
  3828 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  divisor         2    0[BANK0 ] unsigned int 
  3831 ;;  dividend        2    2[BANK0 ] unsigned int 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  counter         1    6[COMMON] unsigned char 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  2    0[BANK0 ] unsigned int 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         0       4       0       0       0
  3844 ;;      Locals:         1       0       0       0       0
  3845 ;;      Temps:          1       0       0       0       0
  3846 ;;      Totals:         2       4       0       0       0
  3847 ;;Total ram usage:        6 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    1
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_fround
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function ___lwmod
  3859  1C58                     ___lwmod:
  3860  1C58                     l3596:	
  3861                           ;incstack = 0
  3862                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3863                           
  3864  1C58  1283               	bcf	3,5	;RP0=0, select bank0
  3865  1C59  1303               	bcf	3,6	;RP1=0, select bank0
  3866  1C5A  0820               	movf	___lwmod@divisor,w
  3867  1C5B  0421               	iorwf	___lwmod@divisor+1,w
  3868  1C5C  1903               	btfsc	3,2
  3869  1C5D  2C5F               	goto	u5891
  3870  1C5E  2C60               	goto	u5890
  3871  1C5F                     u5891:
  3872  1C5F  2C8F               	goto	l3614
  3873  1C60                     u5890:
  3874  1C60                     l3598:
  3875  1C60  01F6               	clrf	___lwmod@counter
  3876  1C61  0AF6               	incf	___lwmod@counter,f
  3877  1C62  2C6E               	goto	l3604
  3878  1C63                     l3600:
  3879  1C63  3001               	movlw	1
  3880  1C64                     u5905:
  3881  1C64  1003               	clrc
  3882  1C65  0DA0               	rlf	___lwmod@divisor,f
  3883  1C66  0DA1               	rlf	___lwmod@divisor+1,f
  3884  1C67  3EFF               	addlw	-1
  3885  1C68  1D03               	skipz
  3886  1C69  2C64               	goto	u5905
  3887  1C6A                     l3602:
  3888  1C6A  3001               	movlw	1
  3889  1C6B  00F5               	movwf	??___lwmod
  3890  1C6C  0875               	movf	??___lwmod,w
  3891  1C6D  07F6               	addwf	___lwmod@counter,f
  3892  1C6E                     l3604:
  3893  1C6E  1FA1               	btfss	___lwmod@divisor+1,7
  3894  1C6F  2C71               	goto	u5911
  3895  1C70  2C72               	goto	u5910
  3896  1C71                     u5911:
  3897  1C71  2C63               	goto	l3600
  3898  1C72                     u5910:
  3899  1C72                     l3606:
  3900  1C72  0821               	movf	___lwmod@divisor+1,w
  3901  1C73  0223               	subwf	___lwmod@dividend+1,w
  3902  1C74  1D03               	skipz
  3903  1C75  2C78               	goto	u5925
  3904  1C76  0820               	movf	___lwmod@divisor,w
  3905  1C77  0222               	subwf	___lwmod@dividend,w
  3906  1C78                     u5925:
  3907  1C78  1C03               	skipc
  3908  1C79  2C7B               	goto	u5921
  3909  1C7A  2C7C               	goto	u5920
  3910  1C7B                     u5921:
  3911  1C7B  2C82               	goto	l3610
  3912  1C7C                     u5920:
  3913  1C7C                     l3608:
  3914  1C7C  0820               	movf	___lwmod@divisor,w
  3915  1C7D  02A2               	subwf	___lwmod@dividend,f
  3916  1C7E  0821               	movf	___lwmod@divisor+1,w
  3917  1C7F  1C03               	skipc
  3918  1C80  03A3               	decf	___lwmod@dividend+1,f
  3919  1C81  02A3               	subwf	___lwmod@dividend+1,f
  3920  1C82                     l3610:
  3921  1C82  3001               	movlw	1
  3922  1C83                     u5935:
  3923  1C83  1003               	clrc
  3924  1C84  0CA1               	rrf	___lwmod@divisor+1,f
  3925  1C85  0CA0               	rrf	___lwmod@divisor,f
  3926  1C86  3EFF               	addlw	-1
  3927  1C87  1D03               	skipz
  3928  1C88  2C83               	goto	u5935
  3929  1C89                     l3612:
  3930  1C89  3001               	movlw	1
  3931  1C8A  02F6               	subwf	___lwmod@counter,f
  3932  1C8B  1D03               	btfss	3,2
  3933  1C8C  2C8E               	goto	u5941
  3934  1C8D  2C8F               	goto	u5940
  3935  1C8E                     u5941:
  3936  1C8E  2C72               	goto	l3606
  3937  1C8F                     u5940:
  3938  1C8F                     l3614:
  3939  1C8F  0823               	movf	___lwmod@dividend+1,w
  3940  1C90  00A1               	movwf	?___lwmod+1
  3941  1C91  0822               	movf	___lwmod@dividend,w
  3942  1C92  00A0               	movwf	?___lwmod
  3943  1C93                     l659:
  3944  1C93  0008               	return
  3945  1C94                     __end_of___lwmod:
  3946                           
  3947                           	psect	text8
  3948  1C94                     __ptext8:	
  3949 ;; *************** function ___lwdiv *****************
  3950 ;; Defined at:
  3951 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  divisor         2    4[BANK0 ] unsigned int 
  3954 ;;  dividend        2    6[BANK0 ] unsigned int 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  quotient        2    9[BANK0 ] unsigned int 
  3957 ;;  counter         1   11[BANK0 ] unsigned char 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  2    4[BANK0 ] unsigned int 
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3967 ;;      Params:         0       4       0       0       0
  3968 ;;      Locals:         0       3       0       0       0
  3969 ;;      Temps:          0       1       0       0       0
  3970 ;;      Totals:         0       8       0       0       0
  3971 ;;Total ram usage:        8 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; Hardware stack levels required when called:    1
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_fround
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           
  3982                           ;psect for function ___lwdiv
  3983  1C94                     ___lwdiv:
  3984  1C94                     l2292:	
  3985                           ;incstack = 0
  3986                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3987                           
  3988  1C94  1283               	bcf	3,5	;RP0=0, select bank0
  3989  1C95  1303               	bcf	3,6	;RP1=0, select bank0
  3990  1C96  01A9               	clrf	___lwdiv@quotient
  3991  1C97  01AA               	clrf	___lwdiv@quotient+1
  3992  1C98                     l2294:
  3993  1C98  0824               	movf	___lwdiv@divisor,w
  3994  1C99  0425               	iorwf	___lwdiv@divisor+1,w
  3995  1C9A  1903               	btfsc	3,2
  3996  1C9B  2C9D               	goto	u3061
  3997  1C9C  2C9E               	goto	u3060
  3998  1C9D                     u3061:
  3999  1C9D  2CD5               	goto	l2314
  4000  1C9E                     u3060:
  4001  1C9E                     l2296:
  4002  1C9E  01AB               	clrf	___lwdiv@counter
  4003  1C9F  0AAB               	incf	___lwdiv@counter,f
  4004  1CA0  2CAC               	goto	l2302
  4005  1CA1                     l2298:
  4006  1CA1  3001               	movlw	1
  4007  1CA2                     u3075:
  4008  1CA2  1003               	clrc
  4009  1CA3  0DA4               	rlf	___lwdiv@divisor,f
  4010  1CA4  0DA5               	rlf	___lwdiv@divisor+1,f
  4011  1CA5  3EFF               	addlw	-1
  4012  1CA6  1D03               	skipz
  4013  1CA7  2CA2               	goto	u3075
  4014  1CA8                     l2300:
  4015  1CA8  3001               	movlw	1
  4016  1CA9  00A8               	movwf	??___lwdiv
  4017  1CAA  0828               	movf	??___lwdiv,w
  4018  1CAB  07AB               	addwf	___lwdiv@counter,f
  4019  1CAC                     l2302:
  4020  1CAC  1FA5               	btfss	___lwdiv@divisor+1,7
  4021  1CAD  2CAF               	goto	u3081
  4022  1CAE  2CB0               	goto	u3080
  4023  1CAF                     u3081:
  4024  1CAF  2CA1               	goto	l2298
  4025  1CB0                     u3080:
  4026  1CB0                     l2304:
  4027  1CB0  3001               	movlw	1
  4028  1CB1                     u3095:
  4029  1CB1  1003               	clrc
  4030  1CB2  0DA9               	rlf	___lwdiv@quotient,f
  4031  1CB3  0DAA               	rlf	___lwdiv@quotient+1,f
  4032  1CB4  3EFF               	addlw	-1
  4033  1CB5  1D03               	skipz
  4034  1CB6  2CB1               	goto	u3095
  4035  1CB7  0825               	movf	___lwdiv@divisor+1,w
  4036  1CB8  0227               	subwf	___lwdiv@dividend+1,w
  4037  1CB9  1D03               	skipz
  4038  1CBA  2CBD               	goto	u3105
  4039  1CBB  0824               	movf	___lwdiv@divisor,w
  4040  1CBC  0226               	subwf	___lwdiv@dividend,w
  4041  1CBD                     u3105:
  4042  1CBD  1C03               	skipc
  4043  1CBE  2CC0               	goto	u3101
  4044  1CBF  2CC1               	goto	u3100
  4045  1CC0                     u3101:
  4046  1CC0  2CC8               	goto	l2310
  4047  1CC1                     u3100:
  4048  1CC1                     l2306:
  4049  1CC1  0824               	movf	___lwdiv@divisor,w
  4050  1CC2  02A6               	subwf	___lwdiv@dividend,f
  4051  1CC3  0825               	movf	___lwdiv@divisor+1,w
  4052  1CC4  1C03               	skipc
  4053  1CC5  03A7               	decf	___lwdiv@dividend+1,f
  4054  1CC6  02A7               	subwf	___lwdiv@dividend+1,f
  4055  1CC7                     l2308:
  4056  1CC7  1429               	bsf	___lwdiv@quotient,0
  4057  1CC8                     l2310:
  4058  1CC8  3001               	movlw	1
  4059  1CC9                     u3115:
  4060  1CC9  1003               	clrc
  4061  1CCA  0CA5               	rrf	___lwdiv@divisor+1,f
  4062  1CCB  0CA4               	rrf	___lwdiv@divisor,f
  4063  1CCC  3EFF               	addlw	-1
  4064  1CCD  1D03               	skipz
  4065  1CCE  2CC9               	goto	u3115
  4066  1CCF                     l2312:
  4067  1CCF  3001               	movlw	1
  4068  1CD0  02AB               	subwf	___lwdiv@counter,f
  4069  1CD1  1D03               	btfss	3,2
  4070  1CD2  2CD4               	goto	u3121
  4071  1CD3  2CD5               	goto	u3120
  4072  1CD4                     u3121:
  4073  1CD4  2CB0               	goto	l2304
  4074  1CD5                     u3120:
  4075  1CD5                     l2314:
  4076  1CD5  082A               	movf	___lwdiv@quotient+1,w
  4077  1CD6  00A5               	movwf	?___lwdiv+1
  4078  1CD7  0829               	movf	___lwdiv@quotient,w
  4079  1CD8  00A4               	movwf	?___lwdiv
  4080  1CD9                     l649:
  4081  1CD9  0008               	return
  4082  1CDA                     __end_of___lwdiv:
  4083                           
  4084                           	psect	text9
  4085  149F                     __ptext9:	
  4086 ;; *************** function ___flmul *****************
  4087 ;; Defined at:
  4088 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  b               4   14[BANK0 ] unsigned int 
  4091 ;;  a               4   18[BANK0 ] unsigned int 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  prod            4   34[BANK0 ] struct .
  4094 ;;  grs             4   29[BANK0 ] unsigned long 
  4095 ;;  temp            2   38[BANK0 ] struct .
  4096 ;;  bexp            1   33[BANK0 ] unsigned char 
  4097 ;;  aexp            1   28[BANK0 ] unsigned char 
  4098 ;;  sign            1   27[BANK0 ] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  4   14[BANK0 ] unsigned char 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4108 ;;      Params:         0       8       0       0       0
  4109 ;;      Locals:         0      13       0       0       0
  4110 ;;      Temps:          0       5       0       0       0
  4111 ;;      Totals:         0      26       0       0       0
  4112 ;;Total ram usage:       26 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    2
  4115 ;; This function calls:
  4116 ;;		__Umul8_16
  4117 ;; This function is called by:
  4118 ;;		_fround
  4119 ;;		_scale
  4120 ;;		_sprintf
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function ___flmul
  4126  149F                     ___flmul:
  4127  149F                     l3618:	
  4128                           ;incstack = 0
  4129                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4130                           
  4131  149F  1283               	bcf	3,5	;RP0=0, select bank0
  4132  14A0  1303               	bcf	3,6	;RP1=0, select bank0
  4133  14A1  0831               	movf	___flmul@b+3,w
  4134  14A2  3980               	andlw	128
  4135  14A3  00B6               	movwf	??___flmul
  4136  14A4  0836               	movf	??___flmul,w
  4137  14A5  00BB               	movwf	___flmul@sign
  4138  14A6                     l3620:
  4139  14A6  0831               	movf	___flmul@b+3,w
  4140  14A7  00B6               	movwf	??___flmul
  4141  14A8  0736               	addwf	??___flmul,w
  4142  14A9  00B7               	movwf	??___flmul+1
  4143  14AA  0837               	movf	??___flmul+1,w
  4144  14AB  00C1               	movwf	___flmul@bexp
  4145  14AC                     l3622:
  4146  14AC  1FB0               	btfss	___flmul@b+2,7
  4147  14AD  2CAF               	goto	u5951
  4148  14AE  2CB0               	goto	u5950
  4149  14AF                     u5951:
  4150  14AF  2CB1               	goto	l3626
  4151  14B0                     u5950:
  4152  14B0                     l3624:
  4153  14B0  1441               	bsf	___flmul@bexp,0
  4154  14B1                     l3626:
  4155  14B1  0841               	movf	___flmul@bexp,w
  4156  14B2  1903               	btfsc	3,2
  4157  14B3  2CB5               	goto	u5961
  4158  14B4  2CB6               	goto	u5960
  4159  14B5                     u5961:
  4160  14B5  2CC5               	goto	l3634
  4161  14B6                     u5960:
  4162  14B6                     l3628:
  4163  14B6  0A41               	incf	___flmul@bexp,w
  4164  14B7  1D03               	btfss	3,2
  4165  14B8  2CBA               	goto	u5971
  4166  14B9  2CBB               	goto	u5970
  4167  14BA                     u5971:
  4168  14BA  2CC3               	goto	l3632
  4169  14BB                     u5970:
  4170  14BB                     l3630:
  4171  14BB  3000               	movlw	0
  4172  14BC  00B1               	movwf	___flmul@b+3
  4173  14BD  3000               	movlw	0
  4174  14BE  00B0               	movwf	___flmul@b+2
  4175  14BF  3000               	movlw	0
  4176  14C0  00AF               	movwf	___flmul@b+1
  4177  14C1  3000               	movlw	0
  4178  14C2  00AE               	movwf	___flmul@b
  4179  14C3                     l3632:
  4180  14C3  17B0               	bsf	___flmul@b+2,7
  4181  14C4  2CCD               	goto	l3636
  4182  14C5                     l3634:
  4183  14C5  3000               	movlw	0
  4184  14C6  00B1               	movwf	___flmul@b+3
  4185  14C7  3000               	movlw	0
  4186  14C8  00B0               	movwf	___flmul@b+2
  4187  14C9  3000               	movlw	0
  4188  14CA  00AF               	movwf	___flmul@b+1
  4189  14CB  3000               	movlw	0
  4190  14CC  00AE               	movwf	___flmul@b
  4191  14CD                     l3636:
  4192  14CD  0835               	movf	___flmul@a+3,w
  4193  14CE  3980               	andlw	128
  4194  14CF  00B6               	movwf	??___flmul
  4195  14D0  0836               	movf	??___flmul,w
  4196  14D1  06BB               	xorwf	___flmul@sign,f
  4197  14D2                     l3638:
  4198  14D2  0835               	movf	___flmul@a+3,w
  4199  14D3  00B6               	movwf	??___flmul
  4200  14D4  0736               	addwf	??___flmul,w
  4201  14D5  00B7               	movwf	??___flmul+1
  4202  14D6  0837               	movf	??___flmul+1,w
  4203  14D7  00BC               	movwf	___flmul@aexp
  4204  14D8                     l3640:
  4205  14D8  1FB4               	btfss	___flmul@a+2,7
  4206  14D9  2CDB               	goto	u5981
  4207  14DA  2CDC               	goto	u5980
  4208  14DB                     u5981:
  4209  14DB  2CDD               	goto	l3644
  4210  14DC                     u5980:
  4211  14DC                     l3642:
  4212  14DC  143C               	bsf	___flmul@aexp,0
  4213  14DD                     l3644:
  4214  14DD  083C               	movf	___flmul@aexp,w
  4215  14DE  1903               	btfsc	3,2
  4216  14DF  2CE1               	goto	u5991
  4217  14E0  2CE2               	goto	u5990
  4218  14E1                     u5991:
  4219  14E1  2CF1               	goto	l3652
  4220  14E2                     u5990:
  4221  14E2                     l3646:
  4222  14E2  0A3C               	incf	___flmul@aexp,w
  4223  14E3  1D03               	btfss	3,2
  4224  14E4  2CE6               	goto	u6001
  4225  14E5  2CE7               	goto	u6000
  4226  14E6                     u6001:
  4227  14E6  2CEF               	goto	l3650
  4228  14E7                     u6000:
  4229  14E7                     l3648:
  4230  14E7  3000               	movlw	0
  4231  14E8  00B5               	movwf	___flmul@a+3
  4232  14E9  3000               	movlw	0
  4233  14EA  00B4               	movwf	___flmul@a+2
  4234  14EB  3000               	movlw	0
  4235  14EC  00B3               	movwf	___flmul@a+1
  4236  14ED  3000               	movlw	0
  4237  14EE  00B2               	movwf	___flmul@a
  4238  14EF                     l3650:
  4239  14EF  17B4               	bsf	___flmul@a+2,7
  4240  14F0  2CF9               	goto	l3654
  4241  14F1                     l3652:
  4242  14F1  3000               	movlw	0
  4243  14F2  00B5               	movwf	___flmul@a+3
  4244  14F3  3000               	movlw	0
  4245  14F4  00B4               	movwf	___flmul@a+2
  4246  14F5  3000               	movlw	0
  4247  14F6  00B3               	movwf	___flmul@a+1
  4248  14F7  3000               	movlw	0
  4249  14F8  00B2               	movwf	___flmul@a
  4250  14F9                     l3654:
  4251  14F9  083C               	movf	___flmul@aexp,w
  4252  14FA  1903               	btfsc	3,2
  4253  14FB  2CFD               	goto	u6011
  4254  14FC  2CFE               	goto	u6010
  4255  14FD                     u6011:
  4256  14FD  2D03               	goto	l3658
  4257  14FE                     u6010:
  4258  14FE                     l3656:
  4259  14FE  0841               	movf	___flmul@bexp,w
  4260  14FF  1D03               	btfss	3,2
  4261  1500  2D02               	goto	u6021
  4262  1501  2D03               	goto	u6020
  4263  1502                     u6021:
  4264  1502  2D0C               	goto	l3662
  4265  1503                     u6020:
  4266  1503                     l3658:
  4267  1503  3000               	movlw	0
  4268  1504  00B1               	movwf	?___flmul+3
  4269  1505  3000               	movlw	0
  4270  1506  00B0               	movwf	?___flmul+2
  4271  1507  3000               	movlw	0
  4272  1508  00AF               	movwf	?___flmul+1
  4273  1509  3000               	movlw	0
  4274  150A  00AE               	movwf	?___flmul
  4275  150B  2FFF               	goto	l766
  4276  150C                     l3662:
  4277  150C  082E               	movf	___flmul@b,w
  4278  150D  00B6               	movwf	??___flmul
  4279  150E  0836               	movf	??___flmul,w
  4280  150F  00F5               	movwf	__Umul8_16@multiplicand
  4281  1510  0834               	movf	___flmul@a+2,w
  4282  1511  120A  118A  27C9  160A  118A  	fcall	__Umul8_16
  4283  1516  0876               	movf	?__Umul8_16+1,w
  4284  1517  1283               	bcf	3,5	;RP0=0, select bank0
  4285  1518  1303               	bcf	3,6	;RP1=0, select bank0
  4286  1519  00C7               	movwf	___flmul@temp+1
  4287  151A  0875               	movf	?__Umul8_16,w
  4288  151B  00C6               	movwf	___flmul@temp
  4289  151C                     l3664:
  4290  151C  0846               	movf	___flmul@temp,w
  4291  151D  00B6               	movwf	??___flmul
  4292  151E  01B7               	clrf	??___flmul+1
  4293  151F  01B8               	clrf	??___flmul+2
  4294  1520  01B9               	clrf	??___flmul+3
  4295  1521  0839               	movf	??___flmul+3,w
  4296  1522  00C0               	movwf	___flmul@grs+3
  4297  1523  0838               	movf	??___flmul+2,w
  4298  1524  00BF               	movwf	___flmul@grs+2
  4299  1525  0837               	movf	??___flmul+1,w
  4300  1526  00BE               	movwf	___flmul@grs+1
  4301  1527  0836               	movf	??___flmul,w
  4302  1528  00BD               	movwf	___flmul@grs
  4303  1529                     l3666:
  4304  1529  0847               	movf	___flmul@temp+1,w
  4305  152A  00B6               	movwf	??___flmul
  4306  152B  01B7               	clrf	??___flmul+1
  4307  152C  01B8               	clrf	??___flmul+2
  4308  152D  01B9               	clrf	??___flmul+3
  4309  152E  0839               	movf	??___flmul+3,w
  4310  152F  00C5               	movwf	___flmul@prod+3
  4311  1530  0838               	movf	??___flmul+2,w
  4312  1531  00C4               	movwf	___flmul@prod+2
  4313  1532  0837               	movf	??___flmul+1,w
  4314  1533  00C3               	movwf	___flmul@prod+1
  4315  1534  0836               	movf	??___flmul,w
  4316  1535  00C2               	movwf	___flmul@prod
  4317  1536  082F               	movf	___flmul@b+1,w
  4318  1537  00B6               	movwf	??___flmul
  4319  1538  0836               	movf	??___flmul,w
  4320  1539  00F5               	movwf	__Umul8_16@multiplicand
  4321  153A  0833               	movf	___flmul@a+1,w
  4322  153B  120A  118A  27C9  160A  118A  	fcall	__Umul8_16
  4323  1540  0876               	movf	?__Umul8_16+1,w
  4324  1541  1283               	bcf	3,5	;RP0=0, select bank0
  4325  1542  1303               	bcf	3,6	;RP1=0, select bank0
  4326  1543  00C7               	movwf	___flmul@temp+1
  4327  1544  0875               	movf	?__Umul8_16,w
  4328  1545  00C6               	movwf	___flmul@temp
  4329  1546                     l3668:
  4330  1546  0846               	movf	___flmul@temp,w
  4331  1547  00B6               	movwf	??___flmul
  4332  1548  01B7               	clrf	??___flmul+1
  4333  1549  01B8               	clrf	??___flmul+2
  4334  154A  01B9               	clrf	??___flmul+3
  4335  154B  0836               	movf	??___flmul,w
  4336  154C  07BD               	addwf	___flmul@grs,f
  4337  154D  0837               	movf	??___flmul+1,w
  4338  154E  1103               	clrz
  4339  154F  1803               	skipnc
  4340  1550  3E01               	addlw	1
  4341  1551  1903               	skipnz
  4342  1552  2D54               	goto	u6031
  4343  1553  07BE               	addwf	___flmul@grs+1,f
  4344  1554                     u6031:
  4345  1554  0838               	movf	??___flmul+2,w
  4346  1555  1103               	clrz
  4347  1556  1803               	skipnc
  4348  1557  3E01               	addlw	1
  4349  1558  1903               	skipnz
  4350  1559  2D5B               	goto	u6032
  4351  155A  07BF               	addwf	___flmul@grs+2,f
  4352  155B                     u6032:
  4353  155B  0839               	movf	??___flmul+3,w
  4354  155C  1103               	clrz
  4355  155D  1803               	skipnc
  4356  155E  3E01               	addlw	1
  4357  155F  1903               	skipnz
  4358  1560  2D62               	goto	u6033
  4359  1561  07C0               	addwf	___flmul@grs+3,f
  4360  1562                     u6033:
  4361  1562                     l3670:
  4362  1562  0847               	movf	___flmul@temp+1,w
  4363  1563  00B6               	movwf	??___flmul
  4364  1564  01B7               	clrf	??___flmul+1
  4365  1565  01B8               	clrf	??___flmul+2
  4366  1566  01B9               	clrf	??___flmul+3
  4367  1567  0836               	movf	??___flmul,w
  4368  1568  07C2               	addwf	___flmul@prod,f
  4369  1569  0837               	movf	??___flmul+1,w
  4370  156A  1103               	clrz
  4371  156B  1803               	skipnc
  4372  156C  3E01               	addlw	1
  4373  156D  1903               	skipnz
  4374  156E  2D70               	goto	u6041
  4375  156F  07C3               	addwf	___flmul@prod+1,f
  4376  1570                     u6041:
  4377  1570  0838               	movf	??___flmul+2,w
  4378  1571  1103               	clrz
  4379  1572  1803               	skipnc
  4380  1573  3E01               	addlw	1
  4381  1574  1903               	skipnz
  4382  1575  2D77               	goto	u6042
  4383  1576  07C4               	addwf	___flmul@prod+2,f
  4384  1577                     u6042:
  4385  1577  0839               	movf	??___flmul+3,w
  4386  1578  1103               	clrz
  4387  1579  1803               	skipnc
  4388  157A  3E01               	addlw	1
  4389  157B  1903               	skipnz
  4390  157C  2D7E               	goto	u6043
  4391  157D  07C5               	addwf	___flmul@prod+3,f
  4392  157E                     u6043:
  4393  157E  0830               	movf	___flmul@b+2,w
  4394  157F  00B6               	movwf	??___flmul
  4395  1580  0836               	movf	??___flmul,w
  4396  1581  00F5               	movwf	__Umul8_16@multiplicand
  4397  1582  0832               	movf	___flmul@a,w
  4398  1583  120A  118A  27C9  160A  118A  	fcall	__Umul8_16
  4399  1588  0876               	movf	?__Umul8_16+1,w
  4400  1589  1283               	bcf	3,5	;RP0=0, select bank0
  4401  158A  1303               	bcf	3,6	;RP1=0, select bank0
  4402  158B  00C7               	movwf	___flmul@temp+1
  4403  158C  0875               	movf	?__Umul8_16,w
  4404  158D  00C6               	movwf	___flmul@temp
  4405  158E                     l3672:
  4406  158E  0846               	movf	___flmul@temp,w
  4407  158F  00B6               	movwf	??___flmul
  4408  1590  01B7               	clrf	??___flmul+1
  4409  1591  01B8               	clrf	??___flmul+2
  4410  1592  01B9               	clrf	??___flmul+3
  4411  1593  0836               	movf	??___flmul,w
  4412  1594  07BD               	addwf	___flmul@grs,f
  4413  1595  0837               	movf	??___flmul+1,w
  4414  1596  1103               	clrz
  4415  1597  1803               	skipnc
  4416  1598  3E01               	addlw	1
  4417  1599  1903               	skipnz
  4418  159A  2D9C               	goto	u6051
  4419  159B  07BE               	addwf	___flmul@grs+1,f
  4420  159C                     u6051:
  4421  159C  0838               	movf	??___flmul+2,w
  4422  159D  1103               	clrz
  4423  159E  1803               	skipnc
  4424  159F  3E01               	addlw	1
  4425  15A0  1903               	skipnz
  4426  15A1  2DA3               	goto	u6052
  4427  15A2  07BF               	addwf	___flmul@grs+2,f
  4428  15A3                     u6052:
  4429  15A3  0839               	movf	??___flmul+3,w
  4430  15A4  1103               	clrz
  4431  15A5  1803               	skipnc
  4432  15A6  3E01               	addlw	1
  4433  15A7  1903               	skipnz
  4434  15A8  2DAA               	goto	u6053
  4435  15A9  07C0               	addwf	___flmul@grs+3,f
  4436  15AA                     u6053:
  4437  15AA                     l3674:
  4438  15AA  0847               	movf	___flmul@temp+1,w
  4439  15AB  00B6               	movwf	??___flmul
  4440  15AC  01B7               	clrf	??___flmul+1
  4441  15AD  01B8               	clrf	??___flmul+2
  4442  15AE  01B9               	clrf	??___flmul+3
  4443  15AF  0836               	movf	??___flmul,w
  4444  15B0  07C2               	addwf	___flmul@prod,f
  4445  15B1  0837               	movf	??___flmul+1,w
  4446  15B2  1103               	clrz
  4447  15B3  1803               	skipnc
  4448  15B4  3E01               	addlw	1
  4449  15B5  1903               	skipnz
  4450  15B6  2DB8               	goto	u6061
  4451  15B7  07C3               	addwf	___flmul@prod+1,f
  4452  15B8                     u6061:
  4453  15B8  0838               	movf	??___flmul+2,w
  4454  15B9  1103               	clrz
  4455  15BA  1803               	skipnc
  4456  15BB  3E01               	addlw	1
  4457  15BC  1903               	skipnz
  4458  15BD  2DBF               	goto	u6062
  4459  15BE  07C4               	addwf	___flmul@prod+2,f
  4460  15BF                     u6062:
  4461  15BF  0839               	movf	??___flmul+3,w
  4462  15C0  1103               	clrz
  4463  15C1  1803               	skipnc
  4464  15C2  3E01               	addlw	1
  4465  15C3  1903               	skipnz
  4466  15C4  2DC6               	goto	u6063
  4467  15C5  07C5               	addwf	___flmul@prod+3,f
  4468  15C6                     u6063:
  4469  15C6                     l3676:
  4470  15C6  3008               	movlw	8
  4471  15C7  00B6               	movwf	??___flmul
  4472  15C8                     u6075:
  4473  15C8  1003               	clrc
  4474  15C9  0DBD               	rlf	___flmul@grs,f
  4475  15CA  0DBE               	rlf	___flmul@grs+1,f
  4476  15CB  0DBF               	rlf	___flmul@grs+2,f
  4477  15CC  0DC0               	rlf	___flmul@grs+3,f
  4478  15CD  0BB6               	decfsz	??___flmul,f
  4479  15CE  2DC8               	goto	u6075
  4480  15CF                     l3678:
  4481  15CF  082F               	movf	___flmul@b+1,w
  4482  15D0  00B6               	movwf	??___flmul
  4483  15D1  0836               	movf	??___flmul,w
  4484  15D2  00F5               	movwf	__Umul8_16@multiplicand
  4485  15D3  0832               	movf	___flmul@a,w
  4486  15D4  120A  118A  27C9  160A  118A  	fcall	__Umul8_16
  4487  15D9  0876               	movf	?__Umul8_16+1,w
  4488  15DA  1283               	bcf	3,5	;RP0=0, select bank0
  4489  15DB  1303               	bcf	3,6	;RP1=0, select bank0
  4490  15DC  00C7               	movwf	___flmul@temp+1
  4491  15DD  0875               	movf	?__Umul8_16,w
  4492  15DE  00C6               	movwf	___flmul@temp
  4493  15DF                     l3680:
  4494  15DF  0846               	movf	___flmul@temp,w
  4495  15E0  00B6               	movwf	??___flmul
  4496  15E1  0847               	movf	___flmul@temp+1,w
  4497  15E2  00B7               	movwf	??___flmul+1
  4498  15E3  01B8               	clrf	??___flmul+2
  4499  15E4  01B9               	clrf	??___flmul+3
  4500  15E5  0836               	movf	??___flmul,w
  4501  15E6  07BD               	addwf	___flmul@grs,f
  4502  15E7  0837               	movf	??___flmul+1,w
  4503  15E8  1103               	clrz
  4504  15E9  1803               	skipnc
  4505  15EA  3E01               	addlw	1
  4506  15EB  1903               	skipnz
  4507  15EC  2DEE               	goto	u6081
  4508  15ED  07BE               	addwf	___flmul@grs+1,f
  4509  15EE                     u6081:
  4510  15EE  0838               	movf	??___flmul+2,w
  4511  15EF  1103               	clrz
  4512  15F0  1803               	skipnc
  4513  15F1  3E01               	addlw	1
  4514  15F2  1903               	skipnz
  4515  15F3  2DF5               	goto	u6082
  4516  15F4  07BF               	addwf	___flmul@grs+2,f
  4517  15F5                     u6082:
  4518  15F5  0839               	movf	??___flmul+3,w
  4519  15F6  1103               	clrz
  4520  15F7  1803               	skipnc
  4521  15F8  3E01               	addlw	1
  4522  15F9  1903               	skipnz
  4523  15FA  2DFC               	goto	u6083
  4524  15FB  07C0               	addwf	___flmul@grs+3,f
  4525  15FC                     u6083:
  4526  15FC                     l3682:
  4527  15FC  082E               	movf	___flmul@b,w
  4528  15FD  00B6               	movwf	??___flmul
  4529  15FE  0836               	movf	??___flmul,w
  4530  15FF  00F5               	movwf	__Umul8_16@multiplicand
  4531  1600  0833               	movf	___flmul@a+1,w
  4532  1601  120A  118A  27C9  160A  118A  	fcall	__Umul8_16
  4533  1606  0876               	movf	?__Umul8_16+1,w
  4534  1607  1283               	bcf	3,5	;RP0=0, select bank0
  4535  1608  1303               	bcf	3,6	;RP1=0, select bank0
  4536  1609  00C7               	movwf	___flmul@temp+1
  4537  160A  0875               	movf	?__Umul8_16,w
  4538  160B  00C6               	movwf	___flmul@temp
  4539  160C                     l3684:
  4540  160C  0846               	movf	___flmul@temp,w
  4541  160D  00B6               	movwf	??___flmul
  4542  160E  0847               	movf	___flmul@temp+1,w
  4543  160F  00B7               	movwf	??___flmul+1
  4544  1610  01B8               	clrf	??___flmul+2
  4545  1611  01B9               	clrf	??___flmul+3
  4546  1612  0836               	movf	??___flmul,w
  4547  1613  07BD               	addwf	___flmul@grs,f
  4548  1614  0837               	movf	??___flmul+1,w
  4549  1615  1103               	clrz
  4550  1616  1803               	skipnc
  4551  1617  3E01               	addlw	1
  4552  1618  1903               	skipnz
  4553  1619  2E1B               	goto	u6091
  4554  161A  07BE               	addwf	___flmul@grs+1,f
  4555  161B                     u6091:
  4556  161B  0838               	movf	??___flmul+2,w
  4557  161C  1103               	clrz
  4558  161D  1803               	skipnc
  4559  161E  3E01               	addlw	1
  4560  161F  1903               	skipnz
  4561  1620  2E22               	goto	u6092
  4562  1621  07BF               	addwf	___flmul@grs+2,f
  4563  1622                     u6092:
  4564  1622  0839               	movf	??___flmul+3,w
  4565  1623  1103               	clrz
  4566  1624  1803               	skipnc
  4567  1625  3E01               	addlw	1
  4568  1626  1903               	skipnz
  4569  1627  2E29               	goto	u6093
  4570  1628  07C0               	addwf	___flmul@grs+3,f
  4571  1629                     u6093:
  4572  1629                     l3686:
  4573  1629  3008               	movlw	8
  4574  162A  00B6               	movwf	??___flmul
  4575  162B                     u6105:
  4576  162B  1003               	clrc
  4577  162C  0DBD               	rlf	___flmul@grs,f
  4578  162D  0DBE               	rlf	___flmul@grs+1,f
  4579  162E  0DBF               	rlf	___flmul@grs+2,f
  4580  162F  0DC0               	rlf	___flmul@grs+3,f
  4581  1630  0BB6               	decfsz	??___flmul,f
  4582  1631  2E2B               	goto	u6105
  4583  1632  082E               	movf	___flmul@b,w
  4584  1633  00B6               	movwf	??___flmul
  4585  1634  0836               	movf	??___flmul,w
  4586  1635  00F5               	movwf	__Umul8_16@multiplicand
  4587  1636  0832               	movf	___flmul@a,w
  4588  1637  120A  118A  27C9  160A  118A  	fcall	__Umul8_16
  4589  163C  0876               	movf	?__Umul8_16+1,w
  4590  163D  1283               	bcf	3,5	;RP0=0, select bank0
  4591  163E  1303               	bcf	3,6	;RP1=0, select bank0
  4592  163F  00C7               	movwf	___flmul@temp+1
  4593  1640  0875               	movf	?__Umul8_16,w
  4594  1641  00C6               	movwf	___flmul@temp
  4595  1642                     l3688:
  4596  1642  0846               	movf	___flmul@temp,w
  4597  1643  00B6               	movwf	??___flmul
  4598  1644  0847               	movf	___flmul@temp+1,w
  4599  1645  00B7               	movwf	??___flmul+1
  4600  1646  01B8               	clrf	??___flmul+2
  4601  1647  01B9               	clrf	??___flmul+3
  4602  1648  0836               	movf	??___flmul,w
  4603  1649  07BD               	addwf	___flmul@grs,f
  4604  164A  0837               	movf	??___flmul+1,w
  4605  164B  1103               	clrz
  4606  164C  1803               	skipnc
  4607  164D  3E01               	addlw	1
  4608  164E  1903               	skipnz
  4609  164F  2E51               	goto	u6111
  4610  1650  07BE               	addwf	___flmul@grs+1,f
  4611  1651                     u6111:
  4612  1651  0838               	movf	??___flmul+2,w
  4613  1652  1103               	clrz
  4614  1653  1803               	skipnc
  4615  1654  3E01               	addlw	1
  4616  1655  1903               	skipnz
  4617  1656  2E58               	goto	u6112
  4618  1657  07BF               	addwf	___flmul@grs+2,f
  4619  1658                     u6112:
  4620  1658  0839               	movf	??___flmul+3,w
  4621  1659  1103               	clrz
  4622  165A  1803               	skipnc
  4623  165B  3E01               	addlw	1
  4624  165C  1903               	skipnz
  4625  165D  2E5F               	goto	u6113
  4626  165E  07C0               	addwf	___flmul@grs+3,f
  4627  165F                     u6113:
  4628  165F                     l3690:
  4629  165F  082F               	movf	___flmul@b+1,w
  4630  1660  00B6               	movwf	??___flmul
  4631  1661  0836               	movf	??___flmul,w
  4632  1662  00F5               	movwf	__Umul8_16@multiplicand
  4633  1663  0834               	movf	___flmul@a+2,w
  4634  1664  120A  118A  27C9  160A  118A  	fcall	__Umul8_16
  4635  1669  0876               	movf	?__Umul8_16+1,w
  4636  166A  1283               	bcf	3,5	;RP0=0, select bank0
  4637  166B  1303               	bcf	3,6	;RP1=0, select bank0
  4638  166C  00C7               	movwf	___flmul@temp+1
  4639  166D  0875               	movf	?__Umul8_16,w
  4640  166E  00C6               	movwf	___flmul@temp
  4641  166F  0846               	movf	___flmul@temp,w
  4642  1670  00B6               	movwf	??___flmul
  4643  1671  0847               	movf	___flmul@temp+1,w
  4644  1672  00B7               	movwf	??___flmul+1
  4645  1673  01B8               	clrf	??___flmul+2
  4646  1674  01B9               	clrf	??___flmul+3
  4647  1675  0836               	movf	??___flmul,w
  4648  1676  07C2               	addwf	___flmul@prod,f
  4649  1677  0837               	movf	??___flmul+1,w
  4650  1678  1103               	clrz
  4651  1679  1803               	skipnc
  4652  167A  3E01               	addlw	1
  4653  167B  1903               	skipnz
  4654  167C  2E7E               	goto	u6121
  4655  167D  07C3               	addwf	___flmul@prod+1,f
  4656  167E                     u6121:
  4657  167E  0838               	movf	??___flmul+2,w
  4658  167F  1103               	clrz
  4659  1680  1803               	skipnc
  4660  1681  3E01               	addlw	1
  4661  1682  1903               	skipnz
  4662  1683  2E85               	goto	u6122
  4663  1684  07C4               	addwf	___flmul@prod+2,f
  4664  1685                     u6122:
  4665  1685  0839               	movf	??___flmul+3,w
  4666  1686  1103               	clrz
  4667  1687  1803               	skipnc
  4668  1688  3E01               	addlw	1
  4669  1689  1903               	skipnz
  4670  168A  2E8C               	goto	u6123
  4671  168B  07C5               	addwf	___flmul@prod+3,f
  4672  168C                     u6123:
  4673  168C                     l3692:
  4674  168C  0830               	movf	___flmul@b+2,w
  4675  168D  00B6               	movwf	??___flmul
  4676  168E  0836               	movf	??___flmul,w
  4677  168F  00F5               	movwf	__Umul8_16@multiplicand
  4678  1690  0833               	movf	___flmul@a+1,w
  4679  1691  120A  118A  27C9  160A  118A  	fcall	__Umul8_16
  4680  1696  0876               	movf	?__Umul8_16+1,w
  4681  1697  1283               	bcf	3,5	;RP0=0, select bank0
  4682  1698  1303               	bcf	3,6	;RP1=0, select bank0
  4683  1699  00C7               	movwf	___flmul@temp+1
  4684  169A  0875               	movf	?__Umul8_16,w
  4685  169B  00C6               	movwf	___flmul@temp
  4686  169C                     l3694:
  4687  169C  0846               	movf	___flmul@temp,w
  4688  169D  00B6               	movwf	??___flmul
  4689  169E  0847               	movf	___flmul@temp+1,w
  4690  169F  00B7               	movwf	??___flmul+1
  4691  16A0  01B8               	clrf	??___flmul+2
  4692  16A1  01B9               	clrf	??___flmul+3
  4693  16A2  0836               	movf	??___flmul,w
  4694  16A3  07C2               	addwf	___flmul@prod,f
  4695  16A4  0837               	movf	??___flmul+1,w
  4696  16A5  1103               	clrz
  4697  16A6  1803               	skipnc
  4698  16A7  3E01               	addlw	1
  4699  16A8  1903               	skipnz
  4700  16A9  2EAB               	goto	u6131
  4701  16AA  07C3               	addwf	___flmul@prod+1,f
  4702  16AB                     u6131:
  4703  16AB  0838               	movf	??___flmul+2,w
  4704  16AC  1103               	clrz
  4705  16AD  1803               	skipnc
  4706  16AE  3E01               	addlw	1
  4707  16AF  1903               	skipnz
  4708  16B0  2EB2               	goto	u6132
  4709  16B1  07C4               	addwf	___flmul@prod+2,f
  4710  16B2                     u6132:
  4711  16B2  0839               	movf	??___flmul+3,w
  4712  16B3  1103               	clrz
  4713  16B4  1803               	skipnc
  4714  16B5  3E01               	addlw	1
  4715  16B6  1903               	skipnz
  4716  16B7  2EB9               	goto	u6133
  4717  16B8  07C5               	addwf	___flmul@prod+3,f
  4718  16B9                     u6133:
  4719  16B9  0830               	movf	___flmul@b+2,w
  4720  16BA  00B6               	movwf	??___flmul
  4721  16BB  0836               	movf	??___flmul,w
  4722  16BC  00F5               	movwf	__Umul8_16@multiplicand
  4723  16BD  0834               	movf	___flmul@a+2,w
  4724  16BE  120A  118A  27C9  160A  118A  	fcall	__Umul8_16
  4725  16C3  0876               	movf	?__Umul8_16+1,w
  4726  16C4  1283               	bcf	3,5	;RP0=0, select bank0
  4727  16C5  1303               	bcf	3,6	;RP1=0, select bank0
  4728  16C6  00C7               	movwf	___flmul@temp+1
  4729  16C7  0875               	movf	?__Umul8_16,w
  4730  16C8  00C6               	movwf	___flmul@temp
  4731  16C9                     l3696:
  4732  16C9  0846               	movf	___flmul@temp,w
  4733  16CA  00B6               	movwf	??___flmul
  4734  16CB  0847               	movf	___flmul@temp+1,w
  4735  16CC  00B7               	movwf	??___flmul+1
  4736  16CD  01B8               	clrf	??___flmul+2
  4737  16CE  01B9               	clrf	??___flmul+3
  4738  16CF  3008               	movlw	8
  4739  16D0                     u6145:
  4740  16D0  1003               	clrc
  4741  16D1  0DB6               	rlf	??___flmul,f
  4742  16D2  0DB7               	rlf	??___flmul+1,f
  4743  16D3  0DB8               	rlf	??___flmul+2,f
  4744  16D4  0DB9               	rlf	??___flmul+3,f
  4745  16D5                     u6140:
  4746  16D5  3EFF               	addlw	-1
  4747  16D6  1D03               	skipz
  4748  16D7  2ED0               	goto	u6145
  4749  16D8  0836               	movf	??___flmul,w
  4750  16D9  07C2               	addwf	___flmul@prod,f
  4751  16DA  0837               	movf	??___flmul+1,w
  4752  16DB  1103               	clrz
  4753  16DC  1803               	skipnc
  4754  16DD  3E01               	addlw	1
  4755  16DE  1903               	skipnz
  4756  16DF  2EE1               	goto	u6151
  4757  16E0  07C3               	addwf	___flmul@prod+1,f
  4758  16E1                     u6151:
  4759  16E1  0838               	movf	??___flmul+2,w
  4760  16E2  1103               	clrz
  4761  16E3  1803               	skipnc
  4762  16E4  3E01               	addlw	1
  4763  16E5  1903               	skipnz
  4764  16E6  2EE8               	goto	u6152
  4765  16E7  07C4               	addwf	___flmul@prod+2,f
  4766  16E8                     u6152:
  4767  16E8  0839               	movf	??___flmul+3,w
  4768  16E9  1103               	clrz
  4769  16EA  1803               	skipnc
  4770  16EB  3E01               	addlw	1
  4771  16EC  1903               	skipnz
  4772  16ED  2EEF               	goto	u6153
  4773  16EE  07C5               	addwf	___flmul@prod+3,f
  4774  16EF                     u6153:
  4775  16EF                     l3698:
  4776  16EF  083D               	movf	___flmul@grs,w
  4777  16F0  00B6               	movwf	??___flmul
  4778  16F1  083E               	movf	___flmul@grs+1,w
  4779  16F2  00B7               	movwf	??___flmul+1
  4780  16F3  083F               	movf	___flmul@grs+2,w
  4781  16F4  00B8               	movwf	??___flmul+2
  4782  16F5  0840               	movf	___flmul@grs+3,w
  4783  16F6  00B9               	movwf	??___flmul+3
  4784  16F7  3018               	movlw	24
  4785  16F8                     u6165:
  4786  16F8  1003               	clrc
  4787  16F9  0CB9               	rrf	??___flmul+3,f
  4788  16FA  0CB8               	rrf	??___flmul+2,f
  4789  16FB  0CB7               	rrf	??___flmul+1,f
  4790  16FC  0CB6               	rrf	??___flmul,f
  4791  16FD                     u6160:
  4792  16FD  3EFF               	addlw	-1
  4793  16FE  1D03               	skipz
  4794  16FF  2EF8               	goto	u6165
  4795  1700  0836               	movf	??___flmul,w
  4796  1701  07C2               	addwf	___flmul@prod,f
  4797  1702  0837               	movf	??___flmul+1,w
  4798  1703  1103               	clrz
  4799  1704  1803               	skipnc
  4800  1705  3E01               	addlw	1
  4801  1706  1903               	skipnz
  4802  1707  2F09               	goto	u6171
  4803  1708  07C3               	addwf	___flmul@prod+1,f
  4804  1709                     u6171:
  4805  1709  0838               	movf	??___flmul+2,w
  4806  170A  1103               	clrz
  4807  170B  1803               	skipnc
  4808  170C  3E01               	addlw	1
  4809  170D  1903               	skipnz
  4810  170E  2F10               	goto	u6172
  4811  170F  07C4               	addwf	___flmul@prod+2,f
  4812  1710                     u6172:
  4813  1710  0839               	movf	??___flmul+3,w
  4814  1711  1103               	clrz
  4815  1712  1803               	skipnc
  4816  1713  3E01               	addlw	1
  4817  1714  1903               	skipnz
  4818  1715  2F17               	goto	u6173
  4819  1716  07C5               	addwf	___flmul@prod+3,f
  4820  1717                     u6173:
  4821  1717                     l3700:
  4822  1717  3008               	movlw	8
  4823  1718  00B6               	movwf	??___flmul
  4824  1719                     u6185:
  4825  1719  1003               	clrc
  4826  171A  0DBD               	rlf	___flmul@grs,f
  4827  171B  0DBE               	rlf	___flmul@grs+1,f
  4828  171C  0DBF               	rlf	___flmul@grs+2,f
  4829  171D  0DC0               	rlf	___flmul@grs+3,f
  4830  171E  0BB6               	decfsz	??___flmul,f
  4831  171F  2F19               	goto	u6185
  4832  1720                     l3702:
  4833  1720  0841               	movf	___flmul@bexp,w
  4834  1721  073C               	addwf	___flmul@aexp,w
  4835  1722  00B6               	movwf	??___flmul
  4836  1723  01B7               	clrf	??___flmul+1
  4837  1724  0DB7               	rlf	??___flmul+1,f
  4838  1725  0836               	movf	??___flmul,w
  4839  1726  3E82               	addlw	130
  4840  1727  00C6               	movwf	___flmul@temp
  4841  1728  0837               	movf	??___flmul+1,w
  4842  1729  1803               	skipnc
  4843  172A  3E01               	addlw	1
  4844  172B  3EFF               	addlw	255
  4845  172C  00C7               	movwf	___flmul@temp+1
  4846  172D  2F4B               	goto	l3714
  4847  172E                     l3704:
  4848  172E  3001               	movlw	1
  4849  172F  00B6               	movwf	??___flmul
  4850  1730                     u6195:
  4851  1730  1003               	clrc
  4852  1731  0DC2               	rlf	___flmul@prod,f
  4853  1732  0DC3               	rlf	___flmul@prod+1,f
  4854  1733  0DC4               	rlf	___flmul@prod+2,f
  4855  1734  0DC5               	rlf	___flmul@prod+3,f
  4856  1735  0BB6               	decfsz	??___flmul,f
  4857  1736  2F30               	goto	u6195
  4858  1737                     l3706:
  4859  1737  1FC0               	btfss	___flmul@grs+3,7
  4860  1738  2F3A               	goto	u6201
  4861  1739  2F3B               	goto	u6200
  4862  173A                     u6201:
  4863  173A  2F3C               	goto	l3710
  4864  173B                     u6200:
  4865  173B                     l3708:
  4866  173B  1442               	bsf	___flmul@prod,0
  4867  173C                     l3710:
  4868  173C  3001               	movlw	1
  4869  173D  00B6               	movwf	??___flmul
  4870  173E                     u6215:
  4871  173E  1003               	clrc
  4872  173F  0DBD               	rlf	___flmul@grs,f
  4873  1740  0DBE               	rlf	___flmul@grs+1,f
  4874  1741  0DBF               	rlf	___flmul@grs+2,f
  4875  1742  0DC0               	rlf	___flmul@grs+3,f
  4876  1743  0BB6               	decfsz	??___flmul,f
  4877  1744  2F3E               	goto	u6215
  4878  1745                     l3712:
  4879  1745  30FF               	movlw	255
  4880  1746  07C6               	addwf	___flmul@temp,f
  4881  1747  1803               	skipnc
  4882  1748  0AC7               	incf	___flmul@temp+1,f
  4883  1749  30FF               	movlw	255
  4884  174A  07C7               	addwf	___flmul@temp+1,f
  4885  174B                     l3714:
  4886  174B  1FC4               	btfss	___flmul@prod+2,7
  4887  174C  2F4E               	goto	u6221
  4888  174D  2F4F               	goto	u6220
  4889  174E                     u6221:
  4890  174E  2F2E               	goto	l3704
  4891  174F                     u6220:
  4892  174F                     l3716:
  4893  174F  01BC               	clrf	___flmul@aexp
  4894  1750                     l3718:
  4895  1750  1FC0               	btfss	___flmul@grs+3,7
  4896  1751  2F53               	goto	u6231
  4897  1752  2F54               	goto	u6230
  4898  1753                     u6231:
  4899  1753  2F70               	goto	l3726
  4900  1754                     u6230:
  4901  1754                     l3720:
  4902  1754  30FF               	movlw	255
  4903  1755  053D               	andwf	___flmul@grs,w
  4904  1756  00B6               	movwf	??___flmul
  4905  1757  30FF               	movlw	255
  4906  1758  053E               	andwf	___flmul@grs+1,w
  4907  1759  00B7               	movwf	??___flmul+1
  4908  175A  30FF               	movlw	255
  4909  175B  053F               	andwf	___flmul@grs+2,w
  4910  175C  00B8               	movwf	??___flmul+2
  4911  175D  307F               	movlw	127
  4912  175E  0540               	andwf	___flmul@grs+3,w
  4913  175F  00B9               	movwf	??___flmul+3
  4914  1760  0839               	movf	??___flmul+3,w
  4915  1761  0438               	iorwf	??___flmul+2,w
  4916  1762  0437               	iorwf	??___flmul+1,w
  4917  1763  0436               	iorwf	??___flmul,w
  4918  1764  1903               	skipnz
  4919  1765  2F67               	goto	u6241
  4920  1766  2F68               	goto	u6240
  4921  1767                     u6241:
  4922  1767  2F6B               	goto	l772
  4923  1768                     u6240:
  4924  1768                     l3722:
  4925  1768  01BC               	clrf	___flmul@aexp
  4926  1769  0ABC               	incf	___flmul@aexp,f
  4927  176A  2F70               	goto	l3726
  4928  176B                     l772:
  4929  176B  1C42               	btfss	___flmul@prod,0
  4930  176C  2F6E               	goto	u6251
  4931  176D  2F6F               	goto	u6250
  4932  176E                     u6251:
  4933  176E  2F70               	goto	l3726
  4934  176F                     u6250:
  4935  176F  2F68               	goto	l3722
  4936  1770                     l3726:
  4937  1770  083C               	movf	___flmul@aexp,w
  4938  1771  1903               	btfsc	3,2
  4939  1772  2F74               	goto	u6261
  4940  1773  2F75               	goto	u6260
  4941  1774                     u6261:
  4942  1774  2FA6               	goto	l3736
  4943  1775                     u6260:
  4944  1775                     l3728:
  4945  1775  3001               	movlw	1
  4946  1776  07C2               	addwf	___flmul@prod,f
  4947  1777  3000               	movlw	0
  4948  1778  1803               	skipnc
  4949  1779  3001               	movlw	1
  4950  177A  07C3               	addwf	___flmul@prod+1,f
  4951  177B  3000               	movlw	0
  4952  177C  1803               	skipnc
  4953  177D  3001               	movlw	1
  4954  177E  07C4               	addwf	___flmul@prod+2,f
  4955  177F  3000               	movlw	0
  4956  1780  1803               	skipnc
  4957  1781  3001               	movlw	1
  4958  1782  07C5               	addwf	___flmul@prod+3,f
  4959  1783                     l3730:
  4960  1783  1C45               	btfss	___flmul@prod+3,0
  4961  1784  2F86               	goto	u6271
  4962  1785  2F87               	goto	u6270
  4963  1786                     u6271:
  4964  1786  2FA6               	goto	l3736
  4965  1787                     u6270:
  4966  1787                     l3732:
  4967  1787  0842               	movf	___flmul@prod,w
  4968  1788  00B6               	movwf	??___flmul
  4969  1789  0843               	movf	___flmul@prod+1,w
  4970  178A  00B7               	movwf	??___flmul+1
  4971  178B  0844               	movf	___flmul@prod+2,w
  4972  178C  00B8               	movwf	??___flmul+2
  4973  178D  0845               	movf	___flmul@prod+3,w
  4974  178E  00B9               	movwf	??___flmul+3
  4975  178F  3001               	movlw	1
  4976  1790  00BA               	movwf	??___flmul+4
  4977  1791                     u6285:
  4978  1791  0D39               	rlf	??___flmul+3,w
  4979  1792  0CB9               	rrf	??___flmul+3,f
  4980  1793  0CB8               	rrf	??___flmul+2,f
  4981  1794  0CB7               	rrf	??___flmul+1,f
  4982  1795  0CB6               	rrf	??___flmul,f
  4983  1796                     u6280:
  4984  1796  0BBA               	decfsz	??___flmul+4,f
  4985  1797  2F91               	goto	u6285
  4986  1798  0839               	movf	??___flmul+3,w
  4987  1799  00C5               	movwf	___flmul@prod+3
  4988  179A  0838               	movf	??___flmul+2,w
  4989  179B  00C4               	movwf	___flmul@prod+2
  4990  179C  0837               	movf	??___flmul+1,w
  4991  179D  00C3               	movwf	___flmul@prod+1
  4992  179E  0836               	movf	??___flmul,w
  4993  179F  00C2               	movwf	___flmul@prod
  4994  17A0                     l3734:
  4995  17A0  3001               	movlw	1
  4996  17A1  07C6               	addwf	___flmul@temp,f
  4997  17A2  1803               	skipnc
  4998  17A3  0AC7               	incf	___flmul@temp+1,f
  4999  17A4  3000               	movlw	0
  5000  17A5  07C7               	addwf	___flmul@temp+1,f
  5001  17A6                     l3736:
  5002  17A6  0847               	movf	___flmul@temp+1,w
  5003  17A7  3A80               	xorlw	128
  5004  17A8  00FF               	movwf	btemp+1
  5005  17A9  3080               	movlw	128
  5006  17AA  027F               	subwf	btemp+1,w
  5007  17AB  1D03               	skipz
  5008  17AC  2FAF               	goto	u6295
  5009  17AD  30FF               	movlw	255
  5010  17AE  0246               	subwf	___flmul@temp,w
  5011  17AF                     u6295:
  5012  17AF  1C03               	skipc
  5013  17B0  2FB2               	goto	u6291
  5014  17B1  2FB3               	goto	u6290
  5015  17B2                     u6291:
  5016  17B2  2FBE               	goto	l3740
  5017  17B3                     u6290:
  5018  17B3                     l3738:
  5019  17B3  307F               	movlw	127
  5020  17B4  1283               	bcf	3,5	;RP0=0, select bank0
  5021  17B5  1303               	bcf	3,6	;RP1=0, select bank0
  5022  17B6  00C5               	movwf	___flmul@prod+3
  5023  17B7  3080               	movlw	128
  5024  17B8  00C4               	movwf	___flmul@prod+2
  5025  17B9  3000               	movlw	0
  5026  17BA  00C3               	movwf	___flmul@prod+1
  5027  17BB  3000               	movlw	0
  5028  17BC  00C2               	movwf	___flmul@prod
  5029  17BD  2FF3               	goto	l778
  5030  17BE                     l3740:
  5031  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  5032  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  5033  17C0  0847               	movf	___flmul@temp+1,w
  5034  17C1  3A80               	xorlw	128
  5035  17C2  00FF               	movwf	btemp+1
  5036  17C3  3080               	movlw	128
  5037  17C4  027F               	subwf	btemp+1,w
  5038  17C5  1D03               	skipz
  5039  17C6  2FC9               	goto	u6305
  5040  17C7  3001               	movlw	1
  5041  17C8  0246               	subwf	___flmul@temp,w
  5042  17C9                     u6305:
  5043  17C9  1803               	skipnc
  5044  17CA  2FCC               	goto	u6301
  5045  17CB  2FCD               	goto	u6300
  5046  17CC                     u6301:
  5047  17CC  2FD9               	goto	l3746
  5048  17CD                     u6300:
  5049  17CD                     l3742:
  5050  17CD  3000               	movlw	0
  5051  17CE  1283               	bcf	3,5	;RP0=0, select bank0
  5052  17CF  1303               	bcf	3,6	;RP1=0, select bank0
  5053  17D0  00C5               	movwf	___flmul@prod+3
  5054  17D1  3000               	movlw	0
  5055  17D2  00C4               	movwf	___flmul@prod+2
  5056  17D3  3000               	movlw	0
  5057  17D4  00C3               	movwf	___flmul@prod+1
  5058  17D5  3000               	movlw	0
  5059  17D6  00C2               	movwf	___flmul@prod
  5060  17D7                     l3744:
  5061  17D7  01BB               	clrf	___flmul@sign
  5062  17D8  2FF3               	goto	l778
  5063  17D9                     l3746:
  5064  17D9  1283               	bcf	3,5	;RP0=0, select bank0
  5065  17DA  1303               	bcf	3,6	;RP1=0, select bank0
  5066  17DB  0846               	movf	___flmul@temp,w
  5067  17DC  00B6               	movwf	??___flmul
  5068  17DD  0836               	movf	??___flmul,w
  5069  17DE  00C1               	movwf	___flmul@bexp
  5070  17DF  30FF               	movlw	255
  5071  17E0  05C2               	andwf	___flmul@prod,f
  5072  17E1  30FF               	movlw	255
  5073  17E2  05C3               	andwf	___flmul@prod+1,f
  5074  17E3  307F               	movlw	127
  5075  17E4  05C4               	andwf	___flmul@prod+2,f
  5076  17E5  3000               	movlw	0
  5077  17E6  05C5               	andwf	___flmul@prod+3,f
  5078  17E7                     l3748:
  5079  17E7  1C41               	btfss	___flmul@bexp,0
  5080  17E8  2FEA               	goto	u6311
  5081  17E9  2FEB               	goto	u6310
  5082  17EA                     u6311:
  5083  17EA  2FEC               	goto	l3752
  5084  17EB                     u6310:
  5085  17EB                     l3750:
  5086  17EB  17C4               	bsf	___flmul@prod+2,7
  5087  17EC                     l3752:
  5088  17EC  0841               	movf	___flmul@bexp,w
  5089  17ED  00B6               	movwf	??___flmul
  5090  17EE  1003               	clrc
  5091  17EF  0C36               	rrf	??___flmul,w
  5092  17F0  00B7               	movwf	??___flmul+1
  5093  17F1  0837               	movf	??___flmul+1,w
  5094  17F2  00C5               	movwf	___flmul@prod+3
  5095  17F3                     l778:
  5096  17F3  083B               	movf	___flmul@sign,w
  5097  17F4  00B6               	movwf	??___flmul
  5098  17F5  0836               	movf	??___flmul,w
  5099  17F6  04C5               	iorwf	___flmul@prod+3,f
  5100  17F7                     l3754:
  5101  17F7  0845               	movf	___flmul@prod+3,w
  5102  17F8  00B1               	movwf	?___flmul+3
  5103  17F9  0844               	movf	___flmul@prod+2,w
  5104  17FA  00B0               	movwf	?___flmul+2
  5105  17FB  0843               	movf	___flmul@prod+1,w
  5106  17FC  00AF               	movwf	?___flmul+1
  5107  17FD  0842               	movf	___flmul@prod,w
  5108  17FE  00AE               	movwf	?___flmul
  5109  17FF                     l766:
  5110  17FF  0008               	return
  5111  1800                     __end_of___flmul:
  5112                           
  5113                           	psect	text10
  5114  07C9                     __ptext10:	
  5115 ;; *************** function __Umul8_16 *****************
  5116 ;; Defined at:
  5117 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  multiplier      1    wreg     unsigned char 
  5120 ;;  multiplicand    1    5[COMMON] unsigned char 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  multiplier      1    6[BANK0 ] unsigned char 
  5123 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  5124 ;;  product         2    2[BANK0 ] unsigned int 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  2    5[COMMON] unsigned int 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5134 ;;      Params:         2       0       0       0       0
  5135 ;;      Locals:         0       5       0       0       0
  5136 ;;      Temps:          0       2       0       0       0
  5137 ;;      Totals:         2       7       0       0       0
  5138 ;;Total ram usage:        9 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    1
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		___flmul
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function __Umul8_16
  5150  07C9                     __Umul8_16:
  5151                           
  5152                           ;incstack = 0
  5153                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5154                           ;__Umul8_16@multiplier stored from wreg
  5155  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  5156  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  5157  07CB  00A6               	movwf	__Umul8_16@multiplier
  5158  07CC                     l3500:
  5159  07CC  01A2               	clrf	__Umul8_16@product
  5160  07CD  01A3               	clrf	__Umul8_16@product+1
  5161  07CE                     l3502:
  5162  07CE  0875               	movf	__Umul8_16@multiplicand,w
  5163  07CF  00A0               	movwf	??__Umul8_16
  5164  07D0  01A1               	clrf	??__Umul8_16+1
  5165  07D1  0820               	movf	??__Umul8_16,w
  5166  07D2  00A4               	movwf	__Umul8_16@word_mpld
  5167  07D3  0821               	movf	??__Umul8_16+1,w
  5168  07D4  00A5               	movwf	__Umul8_16@word_mpld+1
  5169  07D5                     l3504:
  5170  07D5  1C26               	btfss	__Umul8_16@multiplier,0
  5171  07D6  2FD8               	goto	u5671
  5172  07D7  2FD9               	goto	u5670
  5173  07D8                     u5671:
  5174  07D8  2FDF               	goto	l785
  5175  07D9                     u5670:
  5176  07D9                     l3506:
  5177  07D9  0824               	movf	__Umul8_16@word_mpld,w
  5178  07DA  07A2               	addwf	__Umul8_16@product,f
  5179  07DB  1803               	skipnc
  5180  07DC  0AA3               	incf	__Umul8_16@product+1,f
  5181  07DD  0825               	movf	__Umul8_16@word_mpld+1,w
  5182  07DE  07A3               	addwf	__Umul8_16@product+1,f
  5183  07DF                     l785:
  5184  07DF  3001               	movlw	1
  5185  07E0                     u5685:
  5186  07E0  1003               	clrc
  5187  07E1  0DA4               	rlf	__Umul8_16@word_mpld,f
  5188  07E2  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  5189  07E3  3EFF               	addlw	-1
  5190  07E4  1D03               	skipz
  5191  07E5  2FE0               	goto	u5685
  5192  07E6  1003               	clrc
  5193  07E7  0CA6               	rrf	__Umul8_16@multiplier,f
  5194  07E8                     l3508:
  5195  07E8  0826               	movf	__Umul8_16@multiplier,w
  5196  07E9  1D03               	btfss	3,2
  5197  07EA  2FEC               	goto	u5691
  5198  07EB  2FED               	goto	u5690
  5199  07EC                     u5691:
  5200  07EC  2FD5               	goto	l3504
  5201  07ED                     u5690:
  5202  07ED                     l3510:
  5203  07ED  0823               	movf	__Umul8_16@product+1,w
  5204  07EE  00F6               	movwf	?__Umul8_16+1
  5205  07EF  0822               	movf	__Umul8_16@product,w
  5206  07F0  00F5               	movwf	?__Umul8_16
  5207  07F1                     l787:
  5208  07F1  0008               	return
  5209  07F2                     __end_of__Umul8_16:
  5210                           
  5211                           	psect	text11
  5212  070C                     __ptext11:	
  5213 ;; *************** function __tdiv_to_l_ *****************
  5214 ;; Defined at:
  5215 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  f1              4    0[BANK0 ] float 
  5218 ;;  f2              4    4[BANK0 ] float 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  quot            4   12[BANK0 ] unsigned long 
  5221 ;;  exp1            1   17[BANK0 ] unsigned char 
  5222 ;;  cntr            1   16[BANK0 ] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  4    0[BANK0 ] unsigned long 
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5232 ;;      Params:         0       8       0       0       0
  5233 ;;      Locals:         0       6       0       0       0
  5234 ;;      Temps:          0       4       0       0       0
  5235 ;;      Totals:         0      18       0       0       0
  5236 ;;Total ram usage:       18 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    1
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		_sprintf
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           
  5247                           ;psect for function __tdiv_to_l_
  5248  070C                     __tdiv_to_l_:
  5249  070C                     l3816:	
  5250                           ;incstack = 0
  5251                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5252                           
  5253  070C  1283               	bcf	3,5	;RP0=0, select bank0
  5254  070D  1303               	bcf	3,6	;RP1=0, select bank0
  5255  070E  0820               	movf	__tdiv_to_l_@f1,w
  5256  070F  00A8               	movwf	??__tdiv_to_l_
  5257  0710  0821               	movf	__tdiv_to_l_@f1+1,w
  5258  0711  00A9               	movwf	??__tdiv_to_l_+1
  5259  0712  0822               	movf	__tdiv_to_l_@f1+2,w
  5260  0713  00AA               	movwf	??__tdiv_to_l_+2
  5261  0714  1003               	clrc
  5262  0715  0D29               	rlf	??__tdiv_to_l_+1,w
  5263  0716  0D2A               	rlf	??__tdiv_to_l_+2,w
  5264  0717  00AB               	movwf	??__tdiv_to_l_+3
  5265  0718  082B               	movf	??__tdiv_to_l_+3,w
  5266  0719  00B1               	movwf	__tdiv_to_l_@exp1
  5267  071A  0831               	movf	__tdiv_to_l_@exp1,w
  5268  071B  1D03               	btfss	3,2
  5269  071C  2F1E               	goto	u6571
  5270  071D  2F1F               	goto	u6570
  5271  071E                     u6571:
  5272  071E  2F28               	goto	l3822
  5273  071F                     u6570:
  5274  071F                     l3818:
  5275  071F  3000               	movlw	0
  5276  0720  00A3               	movwf	?__tdiv_to_l_+3
  5277  0721  3000               	movlw	0
  5278  0722  00A2               	movwf	?__tdiv_to_l_+2
  5279  0723  3000               	movlw	0
  5280  0724  00A1               	movwf	?__tdiv_to_l_+1
  5281  0725  3000               	movlw	0
  5282  0726  00A0               	movwf	?__tdiv_to_l_
  5283  0727  2FC8               	goto	l560
  5284  0728                     l3822:
  5285  0728  0824               	movf	__tdiv_to_l_@f2,w
  5286  0729  00A8               	movwf	??__tdiv_to_l_
  5287  072A  0825               	movf	__tdiv_to_l_@f2+1,w
  5288  072B  00A9               	movwf	??__tdiv_to_l_+1
  5289  072C  0826               	movf	__tdiv_to_l_@f2+2,w
  5290  072D  00AA               	movwf	??__tdiv_to_l_+2
  5291  072E  1003               	clrc
  5292  072F  0D29               	rlf	??__tdiv_to_l_+1,w
  5293  0730  0D2A               	rlf	??__tdiv_to_l_+2,w
  5294  0731  00AB               	movwf	??__tdiv_to_l_+3
  5295  0732  082B               	movf	??__tdiv_to_l_+3,w
  5296  0733  00B0               	movwf	__tdiv_to_l_@cntr
  5297  0734  0830               	movf	__tdiv_to_l_@cntr,w
  5298  0735  1D03               	btfss	3,2
  5299  0736  2F38               	goto	u6581
  5300  0737  2F39               	goto	u6580
  5301  0738                     u6581:
  5302  0738  2F3A               	goto	l561
  5303  0739                     u6580:
  5304  0739  2F1F               	goto	l3818
  5305  073A                     l561:
  5306  073A  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5307  073B                     l3828:
  5308  073B  30FF               	movlw	255
  5309  073C  05A0               	andwf	__tdiv_to_l_@f1,f
  5310  073D  30FF               	movlw	255
  5311  073E  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5312  073F  3000               	movlw	0
  5313  0740  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5314  0741                     l3830:
  5315  0741  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5316  0742  30FF               	movlw	255
  5317  0743  05A4               	andwf	__tdiv_to_l_@f2,f
  5318  0744  30FF               	movlw	255
  5319  0745  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5320  0746  3000               	movlw	0
  5321  0747  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5322  0748  3000               	movlw	0
  5323  0749  00AF               	movwf	__tdiv_to_l_@quot+3
  5324  074A  3000               	movlw	0
  5325  074B  00AE               	movwf	__tdiv_to_l_@quot+2
  5326  074C  3000               	movlw	0
  5327  074D  00AD               	movwf	__tdiv_to_l_@quot+1
  5328  074E  3000               	movlw	0
  5329  074F  00AC               	movwf	__tdiv_to_l_@quot
  5330  0750                     l3832:
  5331  0750  307F               	movlw	127
  5332  0751  02B1               	subwf	__tdiv_to_l_@exp1,f
  5333  0752                     l3834:
  5334  0752  3098               	movlw	152
  5335  0753  0730               	addwf	__tdiv_to_l_@cntr,w
  5336  0754  00A8               	movwf	??__tdiv_to_l_
  5337  0755  0828               	movf	??__tdiv_to_l_,w
  5338  0756  02B1               	subwf	__tdiv_to_l_@exp1,f
  5339  0757  3018               	movlw	24
  5340  0758  00A8               	movwf	??__tdiv_to_l_
  5341  0759  0828               	movf	??__tdiv_to_l_,w
  5342  075A  00B0               	movwf	__tdiv_to_l_@cntr
  5343  075B                     l3836:
  5344  075B  3001               	movlw	1
  5345  075C  00A8               	movwf	??__tdiv_to_l_
  5346  075D                     u6595:
  5347  075D  1003               	clrc
  5348  075E  0DAC               	rlf	__tdiv_to_l_@quot,f
  5349  075F  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  5350  0760  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  5351  0761  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  5352  0762  0BA8               	decfsz	??__tdiv_to_l_,f
  5353  0763  2F5D               	goto	u6595
  5354  0764                     l3838:
  5355  0764  0826               	movf	__tdiv_to_l_@f2+2,w
  5356  0765  0222               	subwf	__tdiv_to_l_@f1+2,w
  5357  0766  1D03               	skipz
  5358  0767  2F6E               	goto	u6605
  5359  0768  0825               	movf	__tdiv_to_l_@f2+1,w
  5360  0769  0221               	subwf	__tdiv_to_l_@f1+1,w
  5361  076A  1D03               	skipz
  5362  076B  2F6E               	goto	u6605
  5363  076C  0824               	movf	__tdiv_to_l_@f2,w
  5364  076D  0220               	subwf	__tdiv_to_l_@f1,w
  5365  076E                     u6605:
  5366  076E  1C03               	skipc
  5367  076F  2F71               	goto	u6601
  5368  0770  2F72               	goto	u6600
  5369  0771                     u6601:
  5370  0771  2F7D               	goto	l3844
  5371  0772                     u6600:
  5372  0772                     l3840:
  5373  0772  0824               	movf	__tdiv_to_l_@f2,w
  5374  0773  02A0               	subwf	__tdiv_to_l_@f1,f
  5375  0774  0825               	movf	__tdiv_to_l_@f2+1,w
  5376  0775  1C03               	skipc
  5377  0776  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  5378  0777  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5379  0778  0826               	movf	__tdiv_to_l_@f2+2,w
  5380  0779  1C03               	skipc
  5381  077A  0A26               	incf	__tdiv_to_l_@f2+2,w
  5382  077B  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5383  077C                     l3842:
  5384  077C  142C               	bsf	__tdiv_to_l_@quot,0
  5385  077D                     l3844:
  5386  077D  3001               	movlw	1
  5387  077E                     u6615:
  5388  077E  1003               	clrc
  5389  077F  0DA0               	rlf	__tdiv_to_l_@f1,f
  5390  0780  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5391  0781  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5392  0782  3EFF               	addlw	-1
  5393  0783  1D03               	skipz
  5394  0784  2F7E               	goto	u6615
  5395  0785                     l3846:
  5396  0785  3001               	movlw	1
  5397  0786  02B0               	subwf	__tdiv_to_l_@cntr,f
  5398  0787  1D03               	btfss	3,2
  5399  0788  2F8A               	goto	u6621
  5400  0789  2F8B               	goto	u6620
  5401  078A                     u6621:
  5402  078A  2F5B               	goto	l3836
  5403  078B                     u6620:
  5404  078B                     l564:
  5405  078B  1FB1               	btfss	__tdiv_to_l_@exp1,7
  5406  078C  2F8E               	goto	u6631
  5407  078D  2F8F               	goto	u6630
  5408  078E                     u6631:
  5409  078E  2FA9               	goto	l3856
  5410  078F                     u6630:
  5411  078F                     l3848:
  5412  078F  0831               	movf	__tdiv_to_l_@exp1,w
  5413  0790  3A80               	xorlw	128
  5414  0791  3E97               	addlw	151
  5415  0792  1803               	skipnc
  5416  0793  2F95               	goto	u6641
  5417  0794  2F96               	goto	u6640
  5418  0795                     u6641:
  5419  0795  2F97               	goto	l3854
  5420  0796                     u6640:
  5421  0796  2F1F               	goto	l3818
  5422  0797                     l3854:
  5423  0797  3001               	movlw	1
  5424  0798                     u6655:
  5425  0798  1003               	clrc
  5426  0799  0CAF               	rrf	__tdiv_to_l_@quot+3,f
  5427  079A  0CAE               	rrf	__tdiv_to_l_@quot+2,f
  5428  079B  0CAD               	rrf	__tdiv_to_l_@quot+1,f
  5429  079C  0CAC               	rrf	__tdiv_to_l_@quot,f
  5430  079D  3EFF               	addlw	-1
  5431  079E  1D03               	skipz
  5432  079F  2F98               	goto	u6655
  5433  07A0  3001               	movlw	1
  5434  07A1  00A8               	movwf	??__tdiv_to_l_
  5435  07A2  0828               	movf	??__tdiv_to_l_,w
  5436  07A3  07B1               	addwf	__tdiv_to_l_@exp1,f
  5437  07A4  1D03               	btfss	3,2
  5438  07A5  2FA7               	goto	u6661
  5439  07A6  2FA8               	goto	u6660
  5440  07A7                     u6661:
  5441  07A7  2F97               	goto	l3854
  5442  07A8                     u6660:
  5443  07A8  2FC0               	goto	l3864
  5444  07A9                     l3856:
  5445  07A9  3018               	movlw	24
  5446  07AA  0231               	subwf	__tdiv_to_l_@exp1,w
  5447  07AB  1C03               	skipc
  5448  07AC  2FAE               	goto	u6671
  5449  07AD  2FAF               	goto	u6670
  5450  07AE                     u6671:
  5451  07AE  2FBB               	goto	l571
  5452  07AF                     u6670:
  5453  07AF  2F1F               	goto	l3818
  5454  07B0                     l3862:
  5455  07B0  3001               	movlw	1
  5456  07B1  00A8               	movwf	??__tdiv_to_l_
  5457  07B2                     u6685:
  5458  07B2  1003               	clrc
  5459  07B3  0DAC               	rlf	__tdiv_to_l_@quot,f
  5460  07B4  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  5461  07B5  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  5462  07B6  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  5463  07B7  0BA8               	decfsz	??__tdiv_to_l_,f
  5464  07B8  2FB2               	goto	u6685
  5465  07B9  3001               	movlw	1
  5466  07BA  02B1               	subwf	__tdiv_to_l_@exp1,f
  5467  07BB                     l571:
  5468  07BB  0831               	movf	__tdiv_to_l_@exp1,w
  5469  07BC  1D03               	btfss	3,2
  5470  07BD  2FBF               	goto	u6691
  5471  07BE  2FC0               	goto	u6690
  5472  07BF                     u6691:
  5473  07BF  2FB0               	goto	l3862
  5474  07C0                     u6690:
  5475  07C0                     l3864:
  5476  07C0  082F               	movf	__tdiv_to_l_@quot+3,w
  5477  07C1  00A3               	movwf	?__tdiv_to_l_+3
  5478  07C2  082E               	movf	__tdiv_to_l_@quot+2,w
  5479  07C3  00A2               	movwf	?__tdiv_to_l_+2
  5480  07C4  082D               	movf	__tdiv_to_l_@quot+1,w
  5481  07C5  00A1               	movwf	?__tdiv_to_l_+1
  5482  07C6  082C               	movf	__tdiv_to_l_@quot,w
  5483  07C7  00A0               	movwf	?__tdiv_to_l_
  5484  07C8                     l560:
  5485  07C8  0008               	return
  5486  07C9                     __end_of__tdiv_to_l_:
  5487                           
  5488                           	psect	text12
  5489  064E                     __ptext12:	
  5490 ;; *************** function __div_to_l_ *****************
  5491 ;; Defined at:
  5492 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  f1              4    0[BANK0 ] unsigned long 
  5495 ;;  f2              4    4[BANK0 ] unsigned long 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  quot            4    8[BANK0 ] unsigned long 
  5498 ;;  exp1            1   13[BANK0 ] unsigned char 
  5499 ;;  cntr            1   12[BANK0 ] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  4    0[BANK0 ] unsigned long 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5509 ;;      Params:         0       8       0       0       0
  5510 ;;      Locals:         0       6       0       0       0
  5511 ;;      Temps:          1       0       0       0       0
  5512 ;;      Totals:         1      14       0       0       0
  5513 ;;Total ram usage:       15 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    1
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_sprintf
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           
  5524                           ;psect for function __div_to_l_
  5525  064E                     __div_to_l_:
  5526  064E                     l2800:	
  5527                           ;incstack = 0
  5528                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5529                           
  5530  064E  1003               	clrc
  5531  064F  1283               	bcf	3,5	;RP0=0, select bank0
  5532  0650  1303               	bcf	3,6	;RP1=0, select bank0
  5533  0651  0D22               	rlf	__div_to_l_@f1+2,w
  5534  0652  0D23               	rlf	__div_to_l_@f1+3,w
  5535  0653  00F5               	movwf	??__div_to_l_
  5536  0654  0875               	movf	??__div_to_l_,w
  5537  0655  00AD               	movwf	__div_to_l_@exp1
  5538  0656  082D               	movf	__div_to_l_@exp1,w
  5539  0657  1D03               	btfss	3,2
  5540  0658  2E5A               	goto	u4431
  5541  0659  2E5B               	goto	u4430
  5542  065A                     u4431:
  5543  065A  2E64               	goto	l2806
  5544  065B                     u4430:
  5545  065B                     l2802:
  5546  065B  3000               	movlw	0
  5547  065C  00A3               	movwf	?__div_to_l_+3
  5548  065D  3000               	movlw	0
  5549  065E  00A2               	movwf	?__div_to_l_+2
  5550  065F  3000               	movlw	0
  5551  0660  00A1               	movwf	?__div_to_l_+1
  5552  0661  3000               	movlw	0
  5553  0662  00A0               	movwf	?__div_to_l_
  5554  0663  2F0B               	goto	l513
  5555  0664                     l2806:
  5556  0664  1003               	clrc
  5557  0665  0D26               	rlf	__div_to_l_@f2+2,w
  5558  0666  0D27               	rlf	__div_to_l_@f2+3,w
  5559  0667  00F5               	movwf	??__div_to_l_
  5560  0668  0875               	movf	??__div_to_l_,w
  5561  0669  00AC               	movwf	__div_to_l_@cntr
  5562  066A  082C               	movf	__div_to_l_@cntr,w
  5563  066B  1D03               	btfss	3,2
  5564  066C  2E6E               	goto	u4441
  5565  066D  2E6F               	goto	u4440
  5566  066E                     u4441:
  5567  066E  2E70               	goto	l514
  5568  066F                     u4440:
  5569  066F  2E5B               	goto	l2802
  5570  0670                     l514:
  5571  0670  17A2               	bsf	__div_to_l_@f1+2,7
  5572  0671                     l2812:
  5573  0671  30FF               	movlw	255
  5574  0672  05A0               	andwf	__div_to_l_@f1,f
  5575  0673  30FF               	movlw	255
  5576  0674  05A1               	andwf	__div_to_l_@f1+1,f
  5577  0675  30FF               	movlw	255
  5578  0676  05A2               	andwf	__div_to_l_@f1+2,f
  5579  0677  3000               	movlw	0
  5580  0678  05A3               	andwf	__div_to_l_@f1+3,f
  5581  0679                     l2814:
  5582  0679  17A6               	bsf	__div_to_l_@f2+2,7
  5583  067A  30FF               	movlw	255
  5584  067B  05A4               	andwf	__div_to_l_@f2,f
  5585  067C  30FF               	movlw	255
  5586  067D  05A5               	andwf	__div_to_l_@f2+1,f
  5587  067E  30FF               	movlw	255
  5588  067F  05A6               	andwf	__div_to_l_@f2+2,f
  5589  0680  3000               	movlw	0
  5590  0681  05A7               	andwf	__div_to_l_@f2+3,f
  5591  0682  3000               	movlw	0
  5592  0683  00AB               	movwf	__div_to_l_@quot+3
  5593  0684  3000               	movlw	0
  5594  0685  00AA               	movwf	__div_to_l_@quot+2
  5595  0686  3000               	movlw	0
  5596  0687  00A9               	movwf	__div_to_l_@quot+1
  5597  0688  3000               	movlw	0
  5598  0689  00A8               	movwf	__div_to_l_@quot
  5599  068A                     l2816:
  5600  068A  307F               	movlw	127
  5601  068B  02AD               	subwf	__div_to_l_@exp1,f
  5602  068C                     l2818:
  5603  068C  30A0               	movlw	160
  5604  068D  072C               	addwf	__div_to_l_@cntr,w
  5605  068E  00F5               	movwf	??__div_to_l_
  5606  068F  0875               	movf	??__div_to_l_,w
  5607  0690  02AD               	subwf	__div_to_l_@exp1,f
  5608  0691  3020               	movlw	32
  5609  0692  00F5               	movwf	??__div_to_l_
  5610  0693  0875               	movf	??__div_to_l_,w
  5611  0694  00AC               	movwf	__div_to_l_@cntr
  5612  0695                     l2820:
  5613  0695  3001               	movlw	1
  5614  0696  00F5               	movwf	??__div_to_l_
  5615  0697                     u4455:
  5616  0697  1003               	clrc
  5617  0698  0DA8               	rlf	__div_to_l_@quot,f
  5618  0699  0DA9               	rlf	__div_to_l_@quot+1,f
  5619  069A  0DAA               	rlf	__div_to_l_@quot+2,f
  5620  069B  0DAB               	rlf	__div_to_l_@quot+3,f
  5621  069C  0BF5               	decfsz	??__div_to_l_,f
  5622  069D  2E97               	goto	u4455
  5623  069E                     l2822:
  5624  069E  0827               	movf	__div_to_l_@f2+3,w
  5625  069F  0223               	subwf	__div_to_l_@f1+3,w
  5626  06A0  1D03               	skipz
  5627  06A1  2EAC               	goto	u4465
  5628  06A2  0826               	movf	__div_to_l_@f2+2,w
  5629  06A3  0222               	subwf	__div_to_l_@f1+2,w
  5630  06A4  1D03               	skipz
  5631  06A5  2EAC               	goto	u4465
  5632  06A6  0825               	movf	__div_to_l_@f2+1,w
  5633  06A7  0221               	subwf	__div_to_l_@f1+1,w
  5634  06A8  1D03               	skipz
  5635  06A9  2EAC               	goto	u4465
  5636  06AA  0824               	movf	__div_to_l_@f2,w
  5637  06AB  0220               	subwf	__div_to_l_@f1,w
  5638  06AC                     u4465:
  5639  06AC  1C03               	skipc
  5640  06AD  2EAF               	goto	u4461
  5641  06AE  2EB0               	goto	u4460
  5642  06AF                     u4461:
  5643  06AF  2EBF               	goto	l2828
  5644  06B0                     u4460:
  5645  06B0                     l2824:
  5646  06B0  0824               	movf	__div_to_l_@f2,w
  5647  06B1  02A0               	subwf	__div_to_l_@f1,f
  5648  06B2  0825               	movf	__div_to_l_@f2+1,w
  5649  06B3  1C03               	skipc
  5650  06B4  0F25               	incfsz	__div_to_l_@f2+1,w
  5651  06B5  02A1               	subwf	__div_to_l_@f1+1,f
  5652  06B6  0826               	movf	__div_to_l_@f2+2,w
  5653  06B7  1C03               	skipc
  5654  06B8  0F26               	incfsz	__div_to_l_@f2+2,w
  5655  06B9  02A2               	subwf	__div_to_l_@f1+2,f
  5656  06BA  0827               	movf	__div_to_l_@f2+3,w
  5657  06BB  1C03               	skipc
  5658  06BC  0F27               	incfsz	__div_to_l_@f2+3,w
  5659  06BD  02A3               	subwf	__div_to_l_@f1+3,f
  5660  06BE                     l2826:
  5661  06BE  1428               	bsf	__div_to_l_@quot,0
  5662  06BF                     l2828:
  5663  06BF  3001               	movlw	1
  5664  06C0  00F5               	movwf	??__div_to_l_
  5665  06C1                     u4475:
  5666  06C1  1003               	clrc
  5667  06C2  0DA0               	rlf	__div_to_l_@f1,f
  5668  06C3  0DA1               	rlf	__div_to_l_@f1+1,f
  5669  06C4  0DA2               	rlf	__div_to_l_@f1+2,f
  5670  06C5  0DA3               	rlf	__div_to_l_@f1+3,f
  5671  06C6  0BF5               	decfsz	??__div_to_l_,f
  5672  06C7  2EC1               	goto	u4475
  5673  06C8                     l2830:
  5674  06C8  3001               	movlw	1
  5675  06C9  02AC               	subwf	__div_to_l_@cntr,f
  5676  06CA  1D03               	btfss	3,2
  5677  06CB  2ECD               	goto	u4481
  5678  06CC  2ECE               	goto	u4480
  5679  06CD                     u4481:
  5680  06CD  2E95               	goto	l2820
  5681  06CE                     u4480:
  5682  06CE                     l517:
  5683  06CE  1FAD               	btfss	__div_to_l_@exp1,7
  5684  06CF  2ED1               	goto	u4491
  5685  06D0  2ED2               	goto	u4490
  5686  06D1                     u4491:
  5687  06D1  2EEC               	goto	l2840
  5688  06D2                     u4490:
  5689  06D2                     l2832:
  5690  06D2  082D               	movf	__div_to_l_@exp1,w
  5691  06D3  3A80               	xorlw	128
  5692  06D4  3E9F               	addlw	159
  5693  06D5  1803               	skipnc
  5694  06D6  2ED8               	goto	u4501
  5695  06D7  2ED9               	goto	u4500
  5696  06D8                     u4501:
  5697  06D8  2EDA               	goto	l2838
  5698  06D9                     u4500:
  5699  06D9  2E5B               	goto	l2802
  5700  06DA                     l2838:
  5701  06DA  3001               	movlw	1
  5702  06DB                     u4515:
  5703  06DB  1003               	clrc
  5704  06DC  0CAB               	rrf	__div_to_l_@quot+3,f
  5705  06DD  0CAA               	rrf	__div_to_l_@quot+2,f
  5706  06DE  0CA9               	rrf	__div_to_l_@quot+1,f
  5707  06DF  0CA8               	rrf	__div_to_l_@quot,f
  5708  06E0  3EFF               	addlw	-1
  5709  06E1  1D03               	skipz
  5710  06E2  2EDB               	goto	u4515
  5711  06E3  3001               	movlw	1
  5712  06E4  00F5               	movwf	??__div_to_l_
  5713  06E5  0875               	movf	??__div_to_l_,w
  5714  06E6  07AD               	addwf	__div_to_l_@exp1,f
  5715  06E7  1D03               	btfss	3,2
  5716  06E8  2EEA               	goto	u4521
  5717  06E9  2EEB               	goto	u4520
  5718  06EA                     u4521:
  5719  06EA  2EDA               	goto	l2838
  5720  06EB                     u4520:
  5721  06EB  2F03               	goto	l2848
  5722  06EC                     l2840:
  5723  06EC  3020               	movlw	32
  5724  06ED  022D               	subwf	__div_to_l_@exp1,w
  5725  06EE  1C03               	skipc
  5726  06EF  2EF1               	goto	u4531
  5727  06F0  2EF2               	goto	u4530
  5728  06F1                     u4531:
  5729  06F1  2EFE               	goto	l524
  5730  06F2                     u4530:
  5731  06F2  2E5B               	goto	l2802
  5732  06F3                     l2846:
  5733  06F3  3001               	movlw	1
  5734  06F4  00F5               	movwf	??__div_to_l_
  5735  06F5                     u4545:
  5736  06F5  1003               	clrc
  5737  06F6  0DA8               	rlf	__div_to_l_@quot,f
  5738  06F7  0DA9               	rlf	__div_to_l_@quot+1,f
  5739  06F8  0DAA               	rlf	__div_to_l_@quot+2,f
  5740  06F9  0DAB               	rlf	__div_to_l_@quot+3,f
  5741  06FA  0BF5               	decfsz	??__div_to_l_,f
  5742  06FB  2EF5               	goto	u4545
  5743  06FC  3001               	movlw	1
  5744  06FD  02AD               	subwf	__div_to_l_@exp1,f
  5745  06FE                     l524:
  5746  06FE  082D               	movf	__div_to_l_@exp1,w
  5747  06FF  1D03               	btfss	3,2
  5748  0700  2F02               	goto	u4551
  5749  0701  2F03               	goto	u4550
  5750  0702                     u4551:
  5751  0702  2EF3               	goto	l2846
  5752  0703                     u4550:
  5753  0703                     l2848:
  5754  0703  082B               	movf	__div_to_l_@quot+3,w
  5755  0704  00A3               	movwf	?__div_to_l_+3
  5756  0705  082A               	movf	__div_to_l_@quot+2,w
  5757  0706  00A2               	movwf	?__div_to_l_+2
  5758  0707  0829               	movf	__div_to_l_@quot+1,w
  5759  0708  00A1               	movwf	?__div_to_l_+1
  5760  0709  0828               	movf	__div_to_l_@quot,w
  5761  070A  00A0               	movwf	?__div_to_l_
  5762  070B                     l513:
  5763  070B  0008               	return
  5764  070C                     __end_of__div_to_l_:
  5765                           
  5766                           	psect	text13
  5767  1BCE                     __ptext13:	
  5768 ;; *************** function ___wmul *****************
  5769 ;; Defined at:
  5770 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5773 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;  product         2    5[COMMON] unsigned int 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  2    0[BANK0 ] unsigned int 
  5778 ;; Registers used:
  5779 ;;		wreg, status,2, status,0
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5785 ;;      Params:         0       4       0       0       0
  5786 ;;      Locals:         2       0       0       0       0
  5787 ;;      Temps:          0       0       0       0       0
  5788 ;;      Totals:         2       4       0       0       0
  5789 ;;Total ram usage:        6 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    1
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_sprintf
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           
  5800                           ;psect for function ___wmul
  5801  1BCE                     ___wmul:
  5802  1BCE                     l3868:	
  5803                           ;incstack = 0
  5804                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5805                           
  5806  1BCE  01F5               	clrf	___wmul@product
  5807  1BCF  01F6               	clrf	___wmul@product+1
  5808  1BD0                     l3870:
  5809  1BD0  1283               	bcf	3,5	;RP0=0, select bank0
  5810  1BD1  1303               	bcf	3,6	;RP1=0, select bank0
  5811  1BD2  1C20               	btfss	___wmul@multiplier,0
  5812  1BD3  2BD5               	goto	u6701
  5813  1BD4  2BD6               	goto	u6700
  5814  1BD5                     u6701:
  5815  1BD5  2BDC               	goto	l343
  5816  1BD6                     u6700:
  5817  1BD6                     l3872:
  5818  1BD6  0822               	movf	___wmul@multiplicand,w
  5819  1BD7  07F5               	addwf	___wmul@product,f
  5820  1BD8  1803               	skipnc
  5821  1BD9  0AF6               	incf	___wmul@product+1,f
  5822  1BDA  0823               	movf	___wmul@multiplicand+1,w
  5823  1BDB  07F6               	addwf	___wmul@product+1,f
  5824  1BDC                     l343:
  5825  1BDC  3001               	movlw	1
  5826  1BDD                     u6715:
  5827  1BDD  1003               	clrc
  5828  1BDE  0DA2               	rlf	___wmul@multiplicand,f
  5829  1BDF  0DA3               	rlf	___wmul@multiplicand+1,f
  5830  1BE0  3EFF               	addlw	-1
  5831  1BE1  1D03               	skipz
  5832  1BE2  2BDD               	goto	u6715
  5833  1BE3                     l3874:
  5834  1BE3  3001               	movlw	1
  5835  1BE4                     u6725:
  5836  1BE4  1003               	clrc
  5837  1BE5  0CA1               	rrf	___wmul@multiplier+1,f
  5838  1BE6  0CA0               	rrf	___wmul@multiplier,f
  5839  1BE7  3EFF               	addlw	-1
  5840  1BE8  1D03               	skipz
  5841  1BE9  2BE4               	goto	u6725
  5842  1BEA                     l3876:
  5843  1BEA  0820               	movf	___wmul@multiplier,w
  5844  1BEB  0421               	iorwf	___wmul@multiplier+1,w
  5845  1BEC  1D03               	btfss	3,2
  5846  1BED  2BEF               	goto	u6731
  5847  1BEE  2BF0               	goto	u6730
  5848  1BEF                     u6731:
  5849  1BEF  2BD0               	goto	l3870
  5850  1BF0                     u6730:
  5851  1BF0                     l3878:
  5852  1BF0  0876               	movf	___wmul@product+1,w
  5853  1BF1  00A1               	movwf	?___wmul+1
  5854  1BF2  0875               	movf	___wmul@product,w
  5855  1BF3  00A0               	movwf	?___wmul
  5856  1BF4                     l345:
  5857  1BF4  0008               	return
  5858  1BF5                     __end_of___wmul:
  5859                           
  5860                           	psect	text14
  5861  1D7A                     __ptext14:	
  5862 ;; *************** function ___llmod *****************
  5863 ;; Defined at:
  5864 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  divisor         4    0[BANK0 ] unsigned long 
  5867 ;;  dividend        4    4[BANK0 ] unsigned long 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  counter         1    6[COMMON] unsigned char 
  5870 ;; Return value:  Size  Location     Type
  5871 ;;                  4    0[BANK0 ] unsigned long 
  5872 ;; Registers used:
  5873 ;;		wreg, status,2, status,0
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5879 ;;      Params:         0       8       0       0       0
  5880 ;;      Locals:         1       0       0       0       0
  5881 ;;      Temps:          1       0       0       0       0
  5882 ;;      Totals:         2       8       0       0       0
  5883 ;;Total ram usage:       10 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; Hardware stack levels required when called:    1
  5886 ;; This function calls:
  5887 ;;		Nothing
  5888 ;; This function is called by:
  5889 ;;		_sprintf
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           
  5894                           ;psect for function ___llmod
  5895  1D7A                     ___llmod:
  5896  1D7A                     l2966:	
  5897                           ;incstack = 0
  5898                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5899                           
  5900  1D7A  1283               	bcf	3,5	;RP0=0, select bank0
  5901  1D7B  1303               	bcf	3,6	;RP1=0, select bank0
  5902  1D7C  0823               	movf	___llmod@divisor+3,w
  5903  1D7D  0422               	iorwf	___llmod@divisor+2,w
  5904  1D7E  0421               	iorwf	___llmod@divisor+1,w
  5905  1D7F  0420               	iorwf	___llmod@divisor,w
  5906  1D80  1903               	skipnz
  5907  1D81  2D83               	goto	u4881
  5908  1D82  2D84               	goto	u4880
  5909  1D83                     u4881:
  5910  1D83  2DC7               	goto	l2982
  5911  1D84                     u4880:
  5912  1D84                     l2968:
  5913  1D84  01F6               	clrf	___llmod@counter
  5914  1D85  0AF6               	incf	___llmod@counter,f
  5915  1D86  2D94               	goto	l2972
  5916  1D87                     l2970:
  5917  1D87  3001               	movlw	1
  5918  1D88  00F5               	movwf	??___llmod
  5919  1D89                     u4895:
  5920  1D89  1003               	clrc
  5921  1D8A  0DA0               	rlf	___llmod@divisor,f
  5922  1D8B  0DA1               	rlf	___llmod@divisor+1,f
  5923  1D8C  0DA2               	rlf	___llmod@divisor+2,f
  5924  1D8D  0DA3               	rlf	___llmod@divisor+3,f
  5925  1D8E  0BF5               	decfsz	??___llmod,f
  5926  1D8F  2D89               	goto	u4895
  5927  1D90  3001               	movlw	1
  5928  1D91  00F5               	movwf	??___llmod
  5929  1D92  0875               	movf	??___llmod,w
  5930  1D93  07F6               	addwf	___llmod@counter,f
  5931  1D94                     l2972:
  5932  1D94  1FA3               	btfss	___llmod@divisor+3,7
  5933  1D95  2D97               	goto	u4901
  5934  1D96  2D98               	goto	u4900
  5935  1D97                     u4901:
  5936  1D97  2D87               	goto	l2970
  5937  1D98                     u4900:
  5938  1D98                     l2974:
  5939  1D98  0823               	movf	___llmod@divisor+3,w
  5940  1D99  0227               	subwf	___llmod@dividend+3,w
  5941  1D9A  1D03               	skipz
  5942  1D9B  2DA6               	goto	u4915
  5943  1D9C  0822               	movf	___llmod@divisor+2,w
  5944  1D9D  0226               	subwf	___llmod@dividend+2,w
  5945  1D9E  1D03               	skipz
  5946  1D9F  2DA6               	goto	u4915
  5947  1DA0  0821               	movf	___llmod@divisor+1,w
  5948  1DA1  0225               	subwf	___llmod@dividend+1,w
  5949  1DA2  1D03               	skipz
  5950  1DA3  2DA6               	goto	u4915
  5951  1DA4  0820               	movf	___llmod@divisor,w
  5952  1DA5  0224               	subwf	___llmod@dividend,w
  5953  1DA6                     u4915:
  5954  1DA6  1C03               	skipc
  5955  1DA7  2DA9               	goto	u4911
  5956  1DA8  2DAA               	goto	u4910
  5957  1DA9                     u4911:
  5958  1DA9  2DB8               	goto	l2978
  5959  1DAA                     u4910:
  5960  1DAA                     l2976:
  5961  1DAA  0820               	movf	___llmod@divisor,w
  5962  1DAB  02A4               	subwf	___llmod@dividend,f
  5963  1DAC  0821               	movf	___llmod@divisor+1,w
  5964  1DAD  1C03               	skipc
  5965  1DAE  0F21               	incfsz	___llmod@divisor+1,w
  5966  1DAF  02A5               	subwf	___llmod@dividend+1,f
  5967  1DB0  0822               	movf	___llmod@divisor+2,w
  5968  1DB1  1C03               	skipc
  5969  1DB2  0F22               	incfsz	___llmod@divisor+2,w
  5970  1DB3  02A6               	subwf	___llmod@dividend+2,f
  5971  1DB4  0823               	movf	___llmod@divisor+3,w
  5972  1DB5  1C03               	skipc
  5973  1DB6  0F23               	incfsz	___llmod@divisor+3,w
  5974  1DB7  02A7               	subwf	___llmod@dividend+3,f
  5975  1DB8                     l2978:
  5976  1DB8  3001               	movlw	1
  5977  1DB9                     u4925:
  5978  1DB9  1003               	clrc
  5979  1DBA  0CA3               	rrf	___llmod@divisor+3,f
  5980  1DBB  0CA2               	rrf	___llmod@divisor+2,f
  5981  1DBC  0CA1               	rrf	___llmod@divisor+1,f
  5982  1DBD  0CA0               	rrf	___llmod@divisor,f
  5983  1DBE  3EFF               	addlw	-1
  5984  1DBF  1D03               	skipz
  5985  1DC0  2DB9               	goto	u4925
  5986  1DC1                     l2980:
  5987  1DC1  3001               	movlw	1
  5988  1DC2  02F6               	subwf	___llmod@counter,f
  5989  1DC3  1D03               	btfss	3,2
  5990  1DC4  2DC6               	goto	u4931
  5991  1DC5  2DC7               	goto	u4930
  5992  1DC6                     u4931:
  5993  1DC6  2D98               	goto	l2974
  5994  1DC7                     u4930:
  5995  1DC7                     l2982:
  5996  1DC7  0827               	movf	___llmod@dividend+3,w
  5997  1DC8  00A3               	movwf	?___llmod+3
  5998  1DC9  0826               	movf	___llmod@dividend+2,w
  5999  1DCA  00A2               	movwf	?___llmod+2
  6000  1DCB  0825               	movf	___llmod@dividend+1,w
  6001  1DCC  00A1               	movwf	?___llmod+1
  6002  1DCD  0824               	movf	___llmod@dividend,w
  6003  1DCE  00A0               	movwf	?___llmod
  6004  1DCF                     l599:
  6005  1DCF  0008               	return
  6006  1DD0                     __end_of___llmod:
  6007                           
  6008                           	psect	text15
  6009  1E8B                     __ptext15:	
  6010 ;; *************** function ___lldiv *****************
  6011 ;; Defined at:
  6012 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  divisor         4    0[BANK0 ] unsigned long 
  6015 ;;  dividend        4    4[BANK0 ] unsigned long 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  quotient        4    8[BANK0 ] unsigned long 
  6018 ;;  counter         1   12[BANK0 ] unsigned char 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  4    0[BANK0 ] unsigned long 
  6021 ;; Registers used:
  6022 ;;		wreg, status,2, status,0
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6028 ;;      Params:         0       8       0       0       0
  6029 ;;      Locals:         0       5       0       0       0
  6030 ;;      Temps:          1       0       0       0       0
  6031 ;;      Totals:         1      13       0       0       0
  6032 ;;Total ram usage:       14 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; Hardware stack levels required when called:    1
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_sprintf
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           
  6043                           ;psect for function ___lldiv
  6044  1E8B                     ___lldiv:
  6045  1E8B                     l2866:	
  6046                           ;incstack = 0
  6047                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6048                           
  6049  1E8B  3000               	movlw	0
  6050  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
  6051  1E8D  1303               	bcf	3,6	;RP1=0, select bank0
  6052  1E8E  00AB               	movwf	___lldiv@quotient+3
  6053  1E8F  3000               	movlw	0
  6054  1E90  00AA               	movwf	___lldiv@quotient+2
  6055  1E91  3000               	movlw	0
  6056  1E92  00A9               	movwf	___lldiv@quotient+1
  6057  1E93  3000               	movlw	0
  6058  1E94  00A8               	movwf	___lldiv@quotient
  6059  1E95  0823               	movf	___lldiv@divisor+3,w
  6060  1E96  0422               	iorwf	___lldiv@divisor+2,w
  6061  1E97  0421               	iorwf	___lldiv@divisor+1,w
  6062  1E98  0420               	iorwf	___lldiv@divisor,w
  6063  1E99  1903               	skipnz
  6064  1E9A  2E9C               	goto	u4601
  6065  1E9B  2E9D               	goto	u4600
  6066  1E9C                     u4601:
  6067  1E9C  2EEA               	goto	l2886
  6068  1E9D                     u4600:
  6069  1E9D                     l2868:
  6070  1E9D  01AC               	clrf	___lldiv@counter
  6071  1E9E  0AAC               	incf	___lldiv@counter,f
  6072  1E9F  2EAD               	goto	l2872
  6073  1EA0                     l2870:
  6074  1EA0  3001               	movlw	1
  6075  1EA1  00F5               	movwf	??___lldiv
  6076  1EA2                     u4615:
  6077  1EA2  1003               	clrc
  6078  1EA3  0DA0               	rlf	___lldiv@divisor,f
  6079  1EA4  0DA1               	rlf	___lldiv@divisor+1,f
  6080  1EA5  0DA2               	rlf	___lldiv@divisor+2,f
  6081  1EA6  0DA3               	rlf	___lldiv@divisor+3,f
  6082  1EA7  0BF5               	decfsz	??___lldiv,f
  6083  1EA8  2EA2               	goto	u4615
  6084  1EA9  3001               	movlw	1
  6085  1EAA  00F5               	movwf	??___lldiv
  6086  1EAB  0875               	movf	??___lldiv,w
  6087  1EAC  07AC               	addwf	___lldiv@counter,f
  6088  1EAD                     l2872:
  6089  1EAD  1FA3               	btfss	___lldiv@divisor+3,7
  6090  1EAE  2EB0               	goto	u4621
  6091  1EAF  2EB1               	goto	u4620
  6092  1EB0                     u4621:
  6093  1EB0  2EA0               	goto	l2870
  6094  1EB1                     u4620:
  6095  1EB1                     l2874:
  6096  1EB1  3001               	movlw	1
  6097  1EB2  00F5               	movwf	??___lldiv
  6098  1EB3                     u4635:
  6099  1EB3  1003               	clrc
  6100  1EB4  0DA8               	rlf	___lldiv@quotient,f
  6101  1EB5  0DA9               	rlf	___lldiv@quotient+1,f
  6102  1EB6  0DAA               	rlf	___lldiv@quotient+2,f
  6103  1EB7  0DAB               	rlf	___lldiv@quotient+3,f
  6104  1EB8  0BF5               	decfsz	??___lldiv,f
  6105  1EB9  2EB3               	goto	u4635
  6106  1EBA                     l2876:
  6107  1EBA  0823               	movf	___lldiv@divisor+3,w
  6108  1EBB  0227               	subwf	___lldiv@dividend+3,w
  6109  1EBC  1D03               	skipz
  6110  1EBD  2EC8               	goto	u4645
  6111  1EBE  0822               	movf	___lldiv@divisor+2,w
  6112  1EBF  0226               	subwf	___lldiv@dividend+2,w
  6113  1EC0  1D03               	skipz
  6114  1EC1  2EC8               	goto	u4645
  6115  1EC2  0821               	movf	___lldiv@divisor+1,w
  6116  1EC3  0225               	subwf	___lldiv@dividend+1,w
  6117  1EC4  1D03               	skipz
  6118  1EC5  2EC8               	goto	u4645
  6119  1EC6  0820               	movf	___lldiv@divisor,w
  6120  1EC7  0224               	subwf	___lldiv@dividend,w
  6121  1EC8                     u4645:
  6122  1EC8  1C03               	skipc
  6123  1EC9  2ECB               	goto	u4641
  6124  1ECA  2ECC               	goto	u4640
  6125  1ECB                     u4641:
  6126  1ECB  2EDB               	goto	l2882
  6127  1ECC                     u4640:
  6128  1ECC                     l2878:
  6129  1ECC  0820               	movf	___lldiv@divisor,w
  6130  1ECD  02A4               	subwf	___lldiv@dividend,f
  6131  1ECE  0821               	movf	___lldiv@divisor+1,w
  6132  1ECF  1C03               	skipc
  6133  1ED0  0F21               	incfsz	___lldiv@divisor+1,w
  6134  1ED1  02A5               	subwf	___lldiv@dividend+1,f
  6135  1ED2  0822               	movf	___lldiv@divisor+2,w
  6136  1ED3  1C03               	skipc
  6137  1ED4  0F22               	incfsz	___lldiv@divisor+2,w
  6138  1ED5  02A6               	subwf	___lldiv@dividend+2,f
  6139  1ED6  0823               	movf	___lldiv@divisor+3,w
  6140  1ED7  1C03               	skipc
  6141  1ED8  0F23               	incfsz	___lldiv@divisor+3,w
  6142  1ED9  02A7               	subwf	___lldiv@dividend+3,f
  6143  1EDA                     l2880:
  6144  1EDA  1428               	bsf	___lldiv@quotient,0
  6145  1EDB                     l2882:
  6146  1EDB  3001               	movlw	1
  6147  1EDC                     u4655:
  6148  1EDC  1003               	clrc
  6149  1EDD  0CA3               	rrf	___lldiv@divisor+3,f
  6150  1EDE  0CA2               	rrf	___lldiv@divisor+2,f
  6151  1EDF  0CA1               	rrf	___lldiv@divisor+1,f
  6152  1EE0  0CA0               	rrf	___lldiv@divisor,f
  6153  1EE1  3EFF               	addlw	-1
  6154  1EE2  1D03               	skipz
  6155  1EE3  2EDC               	goto	u4655
  6156  1EE4                     l2884:
  6157  1EE4  3001               	movlw	1
  6158  1EE5  02AC               	subwf	___lldiv@counter,f
  6159  1EE6  1D03               	btfss	3,2
  6160  1EE7  2EE9               	goto	u4661
  6161  1EE8  2EEA               	goto	u4660
  6162  1EE9                     u4661:
  6163  1EE9  2EB1               	goto	l2874
  6164  1EEA                     u4660:
  6165  1EEA                     l2886:
  6166  1EEA  082B               	movf	___lldiv@quotient+3,w
  6167  1EEB  00A3               	movwf	?___lldiv+3
  6168  1EEC  082A               	movf	___lldiv@quotient+2,w
  6169  1EED  00A2               	movwf	?___lldiv+2
  6170  1EEE  0829               	movf	___lldiv@quotient+1,w
  6171  1EEF  00A1               	movwf	?___lldiv+1
  6172  1EF0  0828               	movf	___lldiv@quotient,w
  6173  1EF1  00A0               	movwf	?___lldiv
  6174  1EF2                     l379:
  6175  1EF2  0008               	return
  6176  1EF3                     __end_of___lldiv:
  6177                           
  6178                           	psect	text16
  6179  0800                     __ptext16:	
  6180 ;; *************** function ___fltol *****************
  6181 ;; Defined at:
  6182 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  f1              4   59[BANK0 ] unsigned long 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  exp1            1   69[BANK0 ] unsigned char 
  6187 ;;  sign1           1   68[BANK0 ] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  4   59[BANK0 ] long 
  6190 ;; Registers used:
  6191 ;;		wreg, status,2, status,0
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6197 ;;      Params:         0       4       0       0       0
  6198 ;;      Locals:         0       2       0       0       0
  6199 ;;      Temps:          0       5       0       0       0
  6200 ;;      Totals:         0      11       0       0       0
  6201 ;;Total ram usage:       11 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; Hardware stack levels required when called:    1
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_sprintf
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           
  6212                           ;psect for function ___fltol
  6213  0800                     ___fltol:
  6214  0800                     l2930:	
  6215                           ;incstack = 0
  6216                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6217                           
  6218  0800  1003               	clrc
  6219  0801  1283               	bcf	3,5	;RP0=0, select bank0
  6220  0802  1303               	bcf	3,6	;RP1=0, select bank0
  6221  0803  0D5D               	rlf	___fltol@f1+2,w
  6222  0804  0D5E               	rlf	___fltol@f1+3,w
  6223  0805  00DF               	movwf	??___fltol
  6224  0806  085F               	movf	??___fltol,w
  6225  0807  00E5               	movwf	___fltol@exp1
  6226  0808  0865               	movf	___fltol@exp1,w
  6227  0809  1D03               	btfss	3,2
  6228  080A  280C               	goto	u4781
  6229  080B  280D               	goto	u4780
  6230  080C                     u4781:
  6231  080C  2816               	goto	l2936
  6232  080D                     u4780:
  6233  080D                     l2932:
  6234  080D  3000               	movlw	0
  6235  080E  00DE               	movwf	?___fltol+3
  6236  080F  3000               	movlw	0
  6237  0810  00DD               	movwf	?___fltol+2
  6238  0811  3000               	movlw	0
  6239  0812  00DC               	movwf	?___fltol+1
  6240  0813  3000               	movlw	0
  6241  0814  00DB               	movwf	?___fltol
  6242  0815  287B               	goto	l546
  6243  0816                     l2936:
  6244  0816  085B               	movf	___fltol@f1,w
  6245  0817  00DF               	movwf	??___fltol
  6246  0818  085C               	movf	___fltol@f1+1,w
  6247  0819  00E0               	movwf	??___fltol+1
  6248  081A  085D               	movf	___fltol@f1+2,w
  6249  081B  00E1               	movwf	??___fltol+2
  6250  081C  085E               	movf	___fltol@f1+3,w
  6251  081D  00E2               	movwf	??___fltol+3
  6252  081E  301F               	movlw	31
  6253  081F                     u4795:
  6254  081F  1003               	clrc
  6255  0820  0CE2               	rrf	??___fltol+3,f
  6256  0821  0CE1               	rrf	??___fltol+2,f
  6257  0822  0CE0               	rrf	??___fltol+1,f
  6258  0823  0CDF               	rrf	??___fltol,f
  6259  0824                     u4790:
  6260  0824  3EFF               	addlw	-1
  6261  0825  1D03               	skipz
  6262  0826  281F               	goto	u4795
  6263  0827  085F               	movf	??___fltol,w
  6264  0828  00E3               	movwf	??___fltol+4
  6265  0829  0863               	movf	??___fltol+4,w
  6266  082A  00E4               	movwf	___fltol@sign1
  6267  082B                     l2938:
  6268  082B  17DD               	bsf	___fltol@f1+2,7
  6269  082C                     l2940:
  6270  082C  30FF               	movlw	255
  6271  082D  05DB               	andwf	___fltol@f1,f
  6272  082E  30FF               	movlw	255
  6273  082F  05DC               	andwf	___fltol@f1+1,f
  6274  0830  30FF               	movlw	255
  6275  0831  05DD               	andwf	___fltol@f1+2,f
  6276  0832  3000               	movlw	0
  6277  0833  05DE               	andwf	___fltol@f1+3,f
  6278  0834                     l2942:
  6279  0834  3096               	movlw	150
  6280  0835  02E5               	subwf	___fltol@exp1,f
  6281  0836                     l2944:
  6282  0836  1FE5               	btfss	___fltol@exp1,7
  6283  0837  2839               	goto	u4801
  6284  0838  283A               	goto	u4800
  6285  0839                     u4801:
  6286  0839  2854               	goto	l2954
  6287  083A                     u4800:
  6288  083A                     l2946:
  6289  083A  0865               	movf	___fltol@exp1,w
  6290  083B  3A80               	xorlw	128
  6291  083C  3E97               	addlw	151
  6292  083D  1803               	skipnc
  6293  083E  2840               	goto	u4811
  6294  083F  2841               	goto	u4810
  6295  0840                     u4811:
  6296  0840  2842               	goto	l2952
  6297  0841                     u4810:
  6298  0841  280D               	goto	l2932
  6299  0842                     l2952:
  6300  0842  3001               	movlw	1
  6301  0843                     u4825:
  6302  0843  1003               	clrc
  6303  0844  0CDE               	rrf	___fltol@f1+3,f
  6304  0845  0CDD               	rrf	___fltol@f1+2,f
  6305  0846  0CDC               	rrf	___fltol@f1+1,f
  6306  0847  0CDB               	rrf	___fltol@f1,f
  6307  0848  3EFF               	addlw	-1
  6308  0849  1D03               	skipz
  6309  084A  2843               	goto	u4825
  6310  084B  3001               	movlw	1
  6311  084C  00DF               	movwf	??___fltol
  6312  084D  085F               	movf	??___fltol,w
  6313  084E  07E5               	addwf	___fltol@exp1,f
  6314  084F  1D03               	btfss	3,2
  6315  0850  2852               	goto	u4831
  6316  0851  2853               	goto	u4830
  6317  0852                     u4831:
  6318  0852  2842               	goto	l2952
  6319  0853                     u4830:
  6320  0853  286B               	goto	l2962
  6321  0854                     l2954:
  6322  0854  3020               	movlw	32
  6323  0855  0265               	subwf	___fltol@exp1,w
  6324  0856  1C03               	skipc
  6325  0857  2859               	goto	u4841
  6326  0858  285A               	goto	u4840
  6327  0859                     u4841:
  6328  0859  2866               	goto	l553
  6329  085A                     u4840:
  6330  085A  280D               	goto	l2932
  6331  085B                     l2960:
  6332  085B  3001               	movlw	1
  6333  085C  00DF               	movwf	??___fltol
  6334  085D                     u4855:
  6335  085D  1003               	clrc
  6336  085E  0DDB               	rlf	___fltol@f1,f
  6337  085F  0DDC               	rlf	___fltol@f1+1,f
  6338  0860  0DDD               	rlf	___fltol@f1+2,f
  6339  0861  0DDE               	rlf	___fltol@f1+3,f
  6340  0862  0BDF               	decfsz	??___fltol,f
  6341  0863  285D               	goto	u4855
  6342  0864  3001               	movlw	1
  6343  0865  02E5               	subwf	___fltol@exp1,f
  6344  0866                     l553:
  6345  0866  0865               	movf	___fltol@exp1,w
  6346  0867  1D03               	btfss	3,2
  6347  0868  286A               	goto	u4861
  6348  0869  286B               	goto	u4860
  6349  086A                     u4861:
  6350  086A  285B               	goto	l2960
  6351  086B                     u4860:
  6352  086B                     l2962:
  6353  086B  0864               	movf	___fltol@sign1,w
  6354  086C  1903               	btfsc	3,2
  6355  086D  286F               	goto	u4871
  6356  086E  2870               	goto	u4870
  6357  086F                     u4871:
  6358  086F  287B               	goto	l556
  6359  0870                     u4870:
  6360  0870                     l2964:
  6361  0870  09DB               	comf	___fltol@f1,f
  6362  0871  09DC               	comf	___fltol@f1+1,f
  6363  0872  09DD               	comf	___fltol@f1+2,f
  6364  0873  09DE               	comf	___fltol@f1+3,f
  6365  0874  0ADB               	incf	___fltol@f1,f
  6366  0875  1903               	skipnz
  6367  0876  0ADC               	incf	___fltol@f1+1,f
  6368  0877  1903               	skipnz
  6369  0878  0ADD               	incf	___fltol@f1+2,f
  6370  0879  1903               	skipnz
  6371  087A  0ADE               	incf	___fltol@f1+3,f
  6372  087B                     l556:
  6373  087B                     l546:
  6374  087B  0008               	return
  6375  087C                     __end_of___fltol:
  6376                           
  6377                           	psect	text17
  6378  1D2A                     __ptext17:	
  6379 ;; *************** function ___flsub *****************
  6380 ;; Defined at:
  6381 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  a               4    0[BANK1 ] long 
  6384 ;;  b               4    4[BANK1 ] long 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;		None
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  4    0[BANK1 ] long 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6396 ;;      Params:         0       0       8       0       0
  6397 ;;      Locals:         0       0       0       0       0
  6398 ;;      Temps:          0       0       0       0       0
  6399 ;;      Totals:         0       0       8       0       0
  6400 ;;Total ram usage:        8 bytes
  6401 ;; Hardware stack levels used:    1
  6402 ;; Hardware stack levels required when called:    2
  6403 ;; This function calls:
  6404 ;;		___fladd
  6405 ;; This function is called by:
  6406 ;;		_sprintf
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           
  6411                           ;psect for function ___flsub
  6412  1D2A                     ___flsub:
  6413  1D2A                     l2986:	
  6414                           ;incstack = 0
  6415                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6416                           
  6417  1D2A  3080               	movlw	128
  6418  1D2B  1683               	bsf	3,5	;RP0=1, select bank1
  6419  1D2C  1303               	bcf	3,6	;RP1=0, select bank1
  6420  1D2D  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6421  1D2E                     l2988:
  6422  1D2E  0827               	movf	(___flsub@b+3)^(0+128),w
  6423  1D2F  1283               	bcf	3,5	;RP0=0, select bank0
  6424  1D30  1303               	bcf	3,6	;RP1=0, select bank0
  6425  1D31  00DF               	movwf	___fladd@b+3
  6426  1D32  1683               	bsf	3,5	;RP0=1, select bank1
  6427  1D33  1303               	bcf	3,6	;RP1=0, select bank1
  6428  1D34  0826               	movf	(___flsub@b+2)^(0+128),w
  6429  1D35  1283               	bcf	3,5	;RP0=0, select bank0
  6430  1D36  1303               	bcf	3,6	;RP1=0, select bank0
  6431  1D37  00DE               	movwf	___fladd@b+2
  6432  1D38  1683               	bsf	3,5	;RP0=1, select bank1
  6433  1D39  1303               	bcf	3,6	;RP1=0, select bank1
  6434  1D3A  0825               	movf	(___flsub@b+1)^(0+128),w
  6435  1D3B  1283               	bcf	3,5	;RP0=0, select bank0
  6436  1D3C  1303               	bcf	3,6	;RP1=0, select bank0
  6437  1D3D  00DD               	movwf	___fladd@b+1
  6438  1D3E  1683               	bsf	3,5	;RP0=1, select bank1
  6439  1D3F  1303               	bcf	3,6	;RP1=0, select bank1
  6440  1D40  0824               	movf	___flsub@b^(0+128),w
  6441  1D41  1283               	bcf	3,5	;RP0=0, select bank0
  6442  1D42  1303               	bcf	3,6	;RP1=0, select bank0
  6443  1D43  00DC               	movwf	___fladd@b
  6444  1D44  1683               	bsf	3,5	;RP0=1, select bank1
  6445  1D45  1303               	bcf	3,6	;RP1=0, select bank1
  6446  1D46  0823               	movf	(___flsub@a+3)^(0+128),w
  6447  1D47  1283               	bcf	3,5	;RP0=0, select bank0
  6448  1D48  1303               	bcf	3,6	;RP1=0, select bank0
  6449  1D49  00E3               	movwf	___fladd@a+3
  6450  1D4A  1683               	bsf	3,5	;RP0=1, select bank1
  6451  1D4B  1303               	bcf	3,6	;RP1=0, select bank1
  6452  1D4C  0822               	movf	(___flsub@a+2)^(0+128),w
  6453  1D4D  1283               	bcf	3,5	;RP0=0, select bank0
  6454  1D4E  1303               	bcf	3,6	;RP1=0, select bank0
  6455  1D4F  00E2               	movwf	___fladd@a+2
  6456  1D50  1683               	bsf	3,5	;RP0=1, select bank1
  6457  1D51  1303               	bcf	3,6	;RP1=0, select bank1
  6458  1D52  0821               	movf	(___flsub@a+1)^(0+128),w
  6459  1D53  1283               	bcf	3,5	;RP0=0, select bank0
  6460  1D54  1303               	bcf	3,6	;RP1=0, select bank0
  6461  1D55  00E1               	movwf	___fladd@a+1
  6462  1D56  1683               	bsf	3,5	;RP0=1, select bank1
  6463  1D57  1303               	bcf	3,6	;RP1=0, select bank1
  6464  1D58  0820               	movf	___flsub@a^(0+128),w
  6465  1D59  1283               	bcf	3,5	;RP0=0, select bank0
  6466  1D5A  1303               	bcf	3,6	;RP1=0, select bank0
  6467  1D5B  00E0               	movwf	___fladd@a
  6468  1D5C  160A  118A  2217  160A  158A  	fcall	___fladd
  6469  1D61  1283               	bcf	3,5	;RP0=0, select bank0
  6470  1D62  1303               	bcf	3,6	;RP1=0, select bank0
  6471  1D63  085F               	movf	?___fladd+3,w
  6472  1D64  1683               	bsf	3,5	;RP0=1, select bank1
  6473  1D65  1303               	bcf	3,6	;RP1=0, select bank1
  6474  1D66  00A3               	movwf	(?___flsub+3)^(0+128)
  6475  1D67  1283               	bcf	3,5	;RP0=0, select bank0
  6476  1D68  1303               	bcf	3,6	;RP1=0, select bank0
  6477  1D69  085E               	movf	?___fladd+2,w
  6478  1D6A  1683               	bsf	3,5	;RP0=1, select bank1
  6479  1D6B  1303               	bcf	3,6	;RP1=0, select bank1
  6480  1D6C  00A2               	movwf	(?___flsub+2)^(0+128)
  6481  1D6D  1283               	bcf	3,5	;RP0=0, select bank0
  6482  1D6E  1303               	bcf	3,6	;RP1=0, select bank0
  6483  1D6F  085D               	movf	?___fladd+1,w
  6484  1D70  1683               	bsf	3,5	;RP0=1, select bank1
  6485  1D71  1303               	bcf	3,6	;RP1=0, select bank1
  6486  1D72  00A1               	movwf	(?___flsub+1)^(0+128)
  6487  1D73  1283               	bcf	3,5	;RP0=0, select bank0
  6488  1D74  1303               	bcf	3,6	;RP1=0, select bank0
  6489  1D75  085C               	movf	?___fladd,w
  6490  1D76  1683               	bsf	3,5	;RP0=1, select bank1
  6491  1D77  1303               	bcf	3,6	;RP1=0, select bank1
  6492  1D78  00A0               	movwf	?___flsub^(0+128)
  6493  1D79                     l716:
  6494  1D79  0008               	return
  6495  1D7A                     __end_of___flsub:
  6496                           
  6497                           	psect	text18
  6498  1217                     __ptext18:	
  6499 ;; *************** function ___fladd *****************
  6500 ;; Defined at:
  6501 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  b               4   60[BANK0 ] long 
  6504 ;;  a               4   64[BANK0 ] long 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  grs             1   79[BANK0 ] unsigned char 
  6507 ;;  bexp            1   78[BANK0 ] unsigned char 
  6508 ;;  aexp            1   77[BANK0 ] unsigned char 
  6509 ;;  signs           1   76[BANK0 ] unsigned char 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  4   60[BANK0 ] unsigned char 
  6512 ;; Registers used:
  6513 ;;		wreg, status,2, status,0, btemp+1
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6519 ;;      Params:         0       8       0       0       0
  6520 ;;      Locals:         0       4       0       0       0
  6521 ;;      Temps:          0       8       0       0       0
  6522 ;;      Totals:         0      20       0       0       0
  6523 ;;Total ram usage:       20 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    1
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_sprintf
  6530 ;;		___flsub
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           
  6535                           ;psect for function ___fladd
  6536  1217                     ___fladd:
  6537  1217                     l2340:	
  6538                           ;incstack = 0
  6539                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6540                           
  6541  1217  1283               	bcf	3,5	;RP0=0, select bank0
  6542  1218  1303               	bcf	3,6	;RP1=0, select bank0
  6543  1219  085F               	movf	___fladd@b+3,w
  6544  121A  3980               	andlw	128
  6545  121B  00E4               	movwf	??___fladd
  6546  121C  0864               	movf	??___fladd,w
  6547  121D  00EC               	movwf	___fladd@signs
  6548  121E                     l2342:
  6549  121E  085F               	movf	___fladd@b+3,w
  6550  121F  00E4               	movwf	??___fladd
  6551  1220  0764               	addwf	??___fladd,w
  6552  1221  00E5               	movwf	??___fladd+1
  6553  1222  0865               	movf	??___fladd+1,w
  6554  1223  00EE               	movwf	___fladd@bexp
  6555  1224                     l2344:
  6556  1224  1FDE               	btfss	___fladd@b+2,7
  6557  1225  2A27               	goto	u3191
  6558  1226  2A28               	goto	u3190
  6559  1227                     u3191:
  6560  1227  2A29               	goto	l2348
  6561  1228                     u3190:
  6562  1228                     l2346:
  6563  1228  146E               	bsf	___fladd@bexp,0
  6564  1229                     l2348:
  6565  1229  086E               	movf	___fladd@bexp,w
  6566  122A  1903               	btfsc	3,2
  6567  122B  2A2D               	goto	u3201
  6568  122C  2A2E               	goto	u3200
  6569  122D                     u3201:
  6570  122D  2A3E               	goto	l2358
  6571  122E                     u3200:
  6572  122E                     l2350:
  6573  122E  0A6E               	incf	___fladd@bexp,w
  6574  122F  1D03               	btfss	3,2
  6575  1230  2A32               	goto	u3211
  6576  1231  2A33               	goto	u3210
  6577  1232                     u3211:
  6578  1232  2A3B               	goto	l2354
  6579  1233                     u3210:
  6580  1233                     l2352:
  6581  1233  3000               	movlw	0
  6582  1234  00DF               	movwf	___fladd@b+3
  6583  1235  3000               	movlw	0
  6584  1236  00DE               	movwf	___fladd@b+2
  6585  1237  3000               	movlw	0
  6586  1238  00DD               	movwf	___fladd@b+1
  6587  1239  3000               	movlw	0
  6588  123A  00DC               	movwf	___fladd@b
  6589  123B                     l2354:
  6590  123B  17DE               	bsf	___fladd@b+2,7
  6591  123C                     l2356:
  6592  123C  01DF               	clrf	___fladd@b+3
  6593  123D  2A46               	goto	l2360
  6594  123E                     l2358:
  6595  123E  3000               	movlw	0
  6596  123F  00DF               	movwf	___fladd@b+3
  6597  1240  3000               	movlw	0
  6598  1241  00DE               	movwf	___fladd@b+2
  6599  1242  3000               	movlw	0
  6600  1243  00DD               	movwf	___fladd@b+1
  6601  1244  3000               	movlw	0
  6602  1245  00DC               	movwf	___fladd@b
  6603  1246                     l2360:
  6604  1246  0863               	movf	___fladd@a+3,w
  6605  1247  3980               	andlw	128
  6606  1248  00E4               	movwf	??___fladd
  6607  1249  0864               	movf	??___fladd,w
  6608  124A  00ED               	movwf	___fladd@aexp
  6609  124B                     l2362:
  6610  124B  086D               	movf	___fladd@aexp,w
  6611  124C  066C               	xorwf	___fladd@signs,w
  6612  124D  1903               	skipnz
  6613  124E  2A50               	goto	u3221
  6614  124F  2A51               	goto	u3220
  6615  1250                     u3221:
  6616  1250  2A52               	goto	l2366
  6617  1251                     u3220:
  6618  1251                     l2364:
  6619  1251  176C               	bsf	___fladd@signs,6
  6620  1252                     l2366:
  6621  1252  0863               	movf	___fladd@a+3,w
  6622  1253  00E4               	movwf	??___fladd
  6623  1254  0764               	addwf	??___fladd,w
  6624  1255  00E5               	movwf	??___fladd+1
  6625  1256  0865               	movf	??___fladd+1,w
  6626  1257  00ED               	movwf	___fladd@aexp
  6627  1258                     l2368:
  6628  1258  1FE2               	btfss	___fladd@a+2,7
  6629  1259  2A5B               	goto	u3231
  6630  125A  2A5C               	goto	u3230
  6631  125B                     u3231:
  6632  125B  2A5D               	goto	l2372
  6633  125C                     u3230:
  6634  125C                     l2370:
  6635  125C  146D               	bsf	___fladd@aexp,0
  6636  125D                     l2372:
  6637  125D  086D               	movf	___fladd@aexp,w
  6638  125E  1903               	btfsc	3,2
  6639  125F  2A61               	goto	u3241
  6640  1260  2A62               	goto	u3240
  6641  1261                     u3241:
  6642  1261  2A72               	goto	l2382
  6643  1262                     u3240:
  6644  1262                     l2374:
  6645  1262  0A6D               	incf	___fladd@aexp,w
  6646  1263  1D03               	btfss	3,2
  6647  1264  2A66               	goto	u3251
  6648  1265  2A67               	goto	u3250
  6649  1266                     u3251:
  6650  1266  2A6F               	goto	l2378
  6651  1267                     u3250:
  6652  1267                     l2376:
  6653  1267  3000               	movlw	0
  6654  1268  00E3               	movwf	___fladd@a+3
  6655  1269  3000               	movlw	0
  6656  126A  00E2               	movwf	___fladd@a+2
  6657  126B  3000               	movlw	0
  6658  126C  00E1               	movwf	___fladd@a+1
  6659  126D  3000               	movlw	0
  6660  126E  00E0               	movwf	___fladd@a
  6661  126F                     l2378:
  6662  126F  17E2               	bsf	___fladd@a+2,7
  6663  1270                     l2380:
  6664  1270  01E3               	clrf	___fladd@a+3
  6665  1271  2A7A               	goto	l670
  6666  1272                     l2382:
  6667  1272  3000               	movlw	0
  6668  1273  00E3               	movwf	___fladd@a+3
  6669  1274  3000               	movlw	0
  6670  1275  00E2               	movwf	___fladd@a+2
  6671  1276  3000               	movlw	0
  6672  1277  00E1               	movwf	___fladd@a+1
  6673  1278  3000               	movlw	0
  6674  1279  00E0               	movwf	___fladd@a
  6675  127A                     l670:
  6676  127A  086E               	movf	___fladd@bexp,w
  6677  127B  026D               	subwf	___fladd@aexp,w
  6678  127C  1803               	skipnc
  6679  127D  2A7F               	goto	u3261
  6680  127E  2A80               	goto	u3260
  6681  127F                     u3261:
  6682  127F  2AC4               	goto	l2418
  6683  1280                     u3260:
  6684  1280                     l2384:
  6685  1280  1F6C               	btfss	___fladd@signs,6
  6686  1281  2A83               	goto	u3271
  6687  1282  2A84               	goto	u3270
  6688  1283                     u3271:
  6689  1283  2A88               	goto	l2388
  6690  1284                     u3270:
  6691  1284                     l2386:
  6692  1284  3080               	movlw	128
  6693  1285  00E4               	movwf	??___fladd
  6694  1286  0864               	movf	??___fladd,w
  6695  1287  06EC               	xorwf	___fladd@signs,f
  6696  1288                     l2388:
  6697  1288  086E               	movf	___fladd@bexp,w
  6698  1289  00E4               	movwf	??___fladd
  6699  128A  0864               	movf	??___fladd,w
  6700  128B  00EF               	movwf	___fladd@grs
  6701  128C                     l2390:
  6702  128C  086D               	movf	___fladd@aexp,w
  6703  128D  00E4               	movwf	??___fladd
  6704  128E  0864               	movf	??___fladd,w
  6705  128F  00EE               	movwf	___fladd@bexp
  6706  1290                     l2392:
  6707  1290  086F               	movf	___fladd@grs,w
  6708  1291  00E4               	movwf	??___fladd
  6709  1292  0864               	movf	??___fladd,w
  6710  1293  00ED               	movwf	___fladd@aexp
  6711  1294                     l2394:
  6712  1294  085C               	movf	___fladd@b,w
  6713  1295  00E4               	movwf	??___fladd
  6714  1296  0864               	movf	??___fladd,w
  6715  1297  00EF               	movwf	___fladd@grs
  6716  1298                     l2396:
  6717  1298  0860               	movf	___fladd@a,w
  6718  1299  00E4               	movwf	??___fladd
  6719  129A  0864               	movf	??___fladd,w
  6720  129B  00DC               	movwf	___fladd@b
  6721  129C                     l2398:
  6722  129C  086F               	movf	___fladd@grs,w
  6723  129D  00E4               	movwf	??___fladd
  6724  129E  0864               	movf	??___fladd,w
  6725  129F  00E0               	movwf	___fladd@a
  6726  12A0                     l2400:
  6727  12A0  085D               	movf	___fladd@b+1,w
  6728  12A1  00E4               	movwf	??___fladd
  6729  12A2  0864               	movf	??___fladd,w
  6730  12A3  00EF               	movwf	___fladd@grs
  6731  12A4                     l2402:
  6732  12A4  0861               	movf	___fladd@a+1,w
  6733  12A5  00E4               	movwf	??___fladd
  6734  12A6  0864               	movf	??___fladd,w
  6735  12A7  00DD               	movwf	___fladd@b+1
  6736  12A8                     l2404:
  6737  12A8  086F               	movf	___fladd@grs,w
  6738  12A9  00E4               	movwf	??___fladd
  6739  12AA  0864               	movf	??___fladd,w
  6740  12AB  00E1               	movwf	___fladd@a+1
  6741  12AC                     l2406:
  6742  12AC  085E               	movf	___fladd@b+2,w
  6743  12AD  00E4               	movwf	??___fladd
  6744  12AE  0864               	movf	??___fladd,w
  6745  12AF  00EF               	movwf	___fladd@grs
  6746  12B0                     l2408:
  6747  12B0  0862               	movf	___fladd@a+2,w
  6748  12B1  00E4               	movwf	??___fladd
  6749  12B2  0864               	movf	??___fladd,w
  6750  12B3  00DE               	movwf	___fladd@b+2
  6751  12B4                     l2410:
  6752  12B4  086F               	movf	___fladd@grs,w
  6753  12B5  00E4               	movwf	??___fladd
  6754  12B6  0864               	movf	??___fladd,w
  6755  12B7  00E2               	movwf	___fladd@a+2
  6756  12B8                     l2412:
  6757  12B8  085F               	movf	___fladd@b+3,w
  6758  12B9  00E4               	movwf	??___fladd
  6759  12BA  0864               	movf	??___fladd,w
  6760  12BB  00EF               	movwf	___fladd@grs
  6761  12BC                     l2414:
  6762  12BC  0863               	movf	___fladd@a+3,w
  6763  12BD  00E4               	movwf	??___fladd
  6764  12BE  0864               	movf	??___fladd,w
  6765  12BF  00DF               	movwf	___fladd@b+3
  6766  12C0                     l2416:
  6767  12C0  086F               	movf	___fladd@grs,w
  6768  12C1  00E4               	movwf	??___fladd
  6769  12C2  0864               	movf	??___fladd,w
  6770  12C3  00E3               	movwf	___fladd@a+3
  6771  12C4                     l2418:
  6772  12C4  01EF               	clrf	___fladd@grs
  6773  12C5                     l2420:
  6774  12C5  086D               	movf	___fladd@aexp,w
  6775  12C6  00E4               	movwf	??___fladd
  6776  12C7  01E5               	clrf	??___fladd+1
  6777  12C8  0865               	movf	??___fladd+1,w
  6778  12C9  00E7               	movwf	??___fladd+3
  6779  12CA  086E               	movf	___fladd@bexp,w
  6780  12CB  0264               	subwf	??___fladd,w
  6781  12CC  00E6               	movwf	??___fladd+2
  6782  12CD  1C03               	skipc
  6783  12CE  03E7               	decf	??___fladd+3,f
  6784  12CF  0867               	movf	??___fladd+3,w
  6785  12D0  3A80               	xorlw	128
  6786  12D1  00FF               	movwf	btemp+1
  6787  12D2  3080               	movlw	128
  6788  12D3  027F               	subwf	btemp+1,w
  6789  12D4  1D03               	skipz
  6790  12D5  2AD8               	goto	u3285
  6791  12D6  301A               	movlw	26
  6792  12D7  0266               	subwf	??___fladd+2,w
  6793  12D8                     u3285:
  6794  12D8  1C03               	skipc
  6795  12D9  2ADB               	goto	u3281
  6796  12DA  2ADC               	goto	u3280
  6797  12DB                     u3281:
  6798  12DB  2B19               	goto	l2436
  6799  12DC                     u3280:
  6800  12DC                     l2422:
  6801  12DC  1283               	bcf	3,5	;RP0=0, select bank0
  6802  12DD  1303               	bcf	3,6	;RP1=0, select bank0
  6803  12DE  085F               	movf	___fladd@b+3,w
  6804  12DF  045E               	iorwf	___fladd@b+2,w
  6805  12E0  045D               	iorwf	___fladd@b+1,w
  6806  12E1  045C               	iorwf	___fladd@b,w
  6807  12E2  1D03               	skipz
  6808  12E3  2AE5               	goto	u3291
  6809  12E4  2AE7               	goto	u3290
  6810  12E5                     u3291:
  6811  12E5  3001               	movlw	1
  6812  12E6  2AE8               	goto	u3300
  6813  12E7                     u3290:
  6814  12E7  3000               	movlw	0
  6815  12E8                     u3300:
  6816  12E8  00E4               	movwf	??___fladd
  6817  12E9  0864               	movf	??___fladd,w
  6818  12EA  00EF               	movwf	___fladd@grs
  6819  12EB  3000               	movlw	0
  6820  12EC  00DF               	movwf	___fladd@b+3
  6821  12ED  3000               	movlw	0
  6822  12EE  00DE               	movwf	___fladd@b+2
  6823  12EF  3000               	movlw	0
  6824  12F0  00DD               	movwf	___fladd@b+1
  6825  12F1  3000               	movlw	0
  6826  12F2  00DC               	movwf	___fladd@b
  6827  12F3  086D               	movf	___fladd@aexp,w
  6828  12F4  00E4               	movwf	??___fladd
  6829  12F5  0864               	movf	??___fladd,w
  6830  12F6  00EE               	movwf	___fladd@bexp
  6831  12F7  2B21               	goto	l674
  6832  12F8                     l676:
  6833  12F8  1C6F               	btfss	___fladd@grs,0
  6834  12F9  2AFB               	goto	u3311
  6835  12FA  2AFC               	goto	u3310
  6836  12FB                     u3311:
  6837  12FB  2B05               	goto	l2426
  6838  12FC                     u3310:
  6839  12FC                     l2424:
  6840  12FC  086F               	movf	___fladd@grs,w
  6841  12FD  00E4               	movwf	??___fladd
  6842  12FE  1003               	clrc
  6843  12FF  0C64               	rrf	??___fladd,w
  6844  1300  3801               	iorlw	1
  6845  1301  00E5               	movwf	??___fladd+1
  6846  1302  0865               	movf	??___fladd+1,w
  6847  1303  00EF               	movwf	___fladd@grs
  6848  1304  2B07               	goto	l2428
  6849  1305                     l2426:
  6850  1305  1003               	clrc
  6851  1306  0CEF               	rrf	___fladd@grs,f
  6852  1307                     l2428:
  6853  1307  1C5C               	btfss	___fladd@b,0
  6854  1308  2B0A               	goto	u3321
  6855  1309  2B0B               	goto	u3320
  6856  130A                     u3321:
  6857  130A  2B0C               	goto	l2432
  6858  130B                     u3320:
  6859  130B                     l2430:
  6860  130B  17EF               	bsf	___fladd@grs,7
  6861  130C                     l2432:
  6862  130C  3001               	movlw	1
  6863  130D  00E4               	movwf	??___fladd
  6864  130E                     u3335:
  6865  130E  0D5F               	rlf	___fladd@b+3,w
  6866  130F  0CDF               	rrf	___fladd@b+3,f
  6867  1310  0CDE               	rrf	___fladd@b+2,f
  6868  1311  0CDD               	rrf	___fladd@b+1,f
  6869  1312  0CDC               	rrf	___fladd@b,f
  6870  1313  0BE4               	decfsz	??___fladd& (0+127),f
  6871  1314  2B0E               	goto	u3335
  6872  1315                     l2434:
  6873  1315  3001               	movlw	1
  6874  1316  00E4               	movwf	??___fladd
  6875  1317  0864               	movf	??___fladd,w
  6876  1318  07EE               	addwf	___fladd@bexp,f
  6877  1319                     l2436:
  6878  1319  1283               	bcf	3,5	;RP0=0, select bank0
  6879  131A  1303               	bcf	3,6	;RP1=0, select bank0
  6880  131B  086D               	movf	___fladd@aexp,w
  6881  131C  026E               	subwf	___fladd@bexp,w
  6882  131D  1C03               	skipc
  6883  131E  2B20               	goto	u3341
  6884  131F  2B21               	goto	u3340
  6885  1320                     u3341:
  6886  1320  2AF8               	goto	l676
  6887  1321                     u3340:
  6888  1321                     l674:
  6889  1321  1B6C               	btfsc	___fladd@signs,6
  6890  1322  2B24               	goto	u3351
  6891  1323  2B25               	goto	u3350
  6892  1324                     u3351:
  6893  1324  2B70               	goto	l2462
  6894  1325                     u3350:
  6895  1325                     l2438:
  6896  1325  086E               	movf	___fladd@bexp,w
  6897  1326  1D03               	btfss	3,2
  6898  1327  2B29               	goto	u3361
  6899  1328  2B2A               	goto	u3360
  6900  1329                     u3361:
  6901  1329  2B33               	goto	l2444
  6902  132A                     u3360:
  6903  132A                     l2440:
  6904  132A  3000               	movlw	0
  6905  132B  00DF               	movwf	?___fladd+3
  6906  132C  3000               	movlw	0
  6907  132D  00DE               	movwf	?___fladd+2
  6908  132E  3000               	movlw	0
  6909  132F  00DD               	movwf	?___fladd+1
  6910  1330  3000               	movlw	0
  6911  1331  00DC               	movwf	?___fladd
  6912  1332  2C9E               	goto	l683
  6913  1333                     l2444:
  6914  1333  0860               	movf	___fladd@a,w
  6915  1334  07DC               	addwf	___fladd@b,f
  6916  1335  0861               	movf	___fladd@a+1,w
  6917  1336  1103               	clrz
  6918  1337  1803               	skipnc
  6919  1338  3E01               	addlw	1
  6920  1339  1903               	skipnz
  6921  133A  2B3C               	goto	u3371
  6922  133B  07DD               	addwf	___fladd@b+1,f
  6923  133C                     u3371:
  6924  133C  0862               	movf	___fladd@a+2,w
  6925  133D  1103               	clrz
  6926  133E  1803               	skipnc
  6927  133F  3E01               	addlw	1
  6928  1340  1903               	skipnz
  6929  1341  2B43               	goto	u3372
  6930  1342  07DE               	addwf	___fladd@b+2,f
  6931  1343                     u3372:
  6932  1343  0863               	movf	___fladd@a+3,w
  6933  1344  1103               	clrz
  6934  1345  1803               	skipnc
  6935  1346  3E01               	addlw	1
  6936  1347  1903               	skipnz
  6937  1348  2B4A               	goto	u3373
  6938  1349  07DF               	addwf	___fladd@b+3,f
  6939  134A                     u3373:
  6940  134A                     l2446:
  6941  134A  1C5F               	btfss	___fladd@b+3,0
  6942  134B  2B4D               	goto	u3381
  6943  134C  2B4E               	goto	u3380
  6944  134D                     u3381:
  6945  134D  2C24               	goto	l2496
  6946  134E                     u3380:
  6947  134E                     l2448:
  6948  134E  1C6F               	btfss	___fladd@grs,0
  6949  134F  2B51               	goto	u3391
  6950  1350  2B52               	goto	u3390
  6951  1351                     u3391:
  6952  1351  2B5B               	goto	l2452
  6953  1352                     u3390:
  6954  1352                     l2450:
  6955  1352  086F               	movf	___fladd@grs,w
  6956  1353  00E4               	movwf	??___fladd
  6957  1354  1003               	clrc
  6958  1355  0C64               	rrf	??___fladd,w
  6959  1356  3801               	iorlw	1
  6960  1357  00E5               	movwf	??___fladd+1
  6961  1358  0865               	movf	??___fladd+1,w
  6962  1359  00EF               	movwf	___fladd@grs
  6963  135A  2B5D               	goto	l2454
  6964  135B                     l2452:
  6965  135B  1003               	clrc
  6966  135C  0CEF               	rrf	___fladd@grs,f
  6967  135D                     l2454:
  6968  135D  1C5C               	btfss	___fladd@b,0
  6969  135E  2B60               	goto	u3401
  6970  135F  2B61               	goto	u3400
  6971  1360                     u3401:
  6972  1360  2B62               	goto	l2458
  6973  1361                     u3400:
  6974  1361                     l2456:
  6975  1361  17EF               	bsf	___fladd@grs,7
  6976  1362                     l2458:
  6977  1362  3001               	movlw	1
  6978  1363  00E4               	movwf	??___fladd
  6979  1364                     u3415:
  6980  1364  0D5F               	rlf	___fladd@b+3,w
  6981  1365  0CDF               	rrf	___fladd@b+3,f
  6982  1366  0CDE               	rrf	___fladd@b+2,f
  6983  1367  0CDD               	rrf	___fladd@b+1,f
  6984  1368  0CDC               	rrf	___fladd@b,f
  6985  1369  0BE4               	decfsz	??___fladd& (0+127),f
  6986  136A  2B64               	goto	u3415
  6987  136B                     l2460:
  6988  136B  3001               	movlw	1
  6989  136C  00E4               	movwf	??___fladd
  6990  136D  0864               	movf	??___fladd,w
  6991  136E  07EE               	addwf	___fladd@bexp,f
  6992  136F  2C24               	goto	l2496
  6993  1370                     l2462:
  6994  1370  085F               	movf	___fladd@b+3,w
  6995  1371  3A80               	xorlw	128
  6996  1372  00FF               	movwf	btemp+1
  6997  1373  0863               	movf	___fladd@a+3,w
  6998  1374  3A80               	xorlw	128
  6999  1375  027F               	subwf	btemp+1,w
  7000  1376  1D03               	skipz
  7001  1377  2B82               	goto	u3423
  7002  1378  0862               	movf	___fladd@a+2,w
  7003  1379  025E               	subwf	___fladd@b+2,w
  7004  137A  1D03               	skipz
  7005  137B  2B82               	goto	u3423
  7006  137C  0861               	movf	___fladd@a+1,w
  7007  137D  025D               	subwf	___fladd@b+1,w
  7008  137E  1D03               	skipz
  7009  137F  2B82               	goto	u3423
  7010  1380  0860               	movf	___fladd@a,w
  7011  1381  025C               	subwf	___fladd@b,w
  7012  1382                     u3423:
  7013  1382  1803               	skipnc
  7014  1383  2B85               	goto	u3421
  7015  1384  2B86               	goto	u3420
  7016  1385                     u3421:
  7017  1385  2BDE               	goto	l2472
  7018  1386                     u3420:
  7019  1386                     l2464:
  7020  1386  30FF               	movlw	255
  7021  1387  00E4               	movwf	??___fladd
  7022  1388  30FF               	movlw	255
  7023  1389  00E5               	movwf	??___fladd+1
  7024  138A  30FF               	movlw	255
  7025  138B  00E6               	movwf	??___fladd+2
  7026  138C  30FF               	movlw	255
  7027  138D  00E7               	movwf	??___fladd+3
  7028  138E  0860               	movf	___fladd@a,w
  7029  138F  00E8               	movwf	??___fladd+4
  7030  1390  0861               	movf	___fladd@a+1,w
  7031  1391  00E9               	movwf	??___fladd+5
  7032  1392  0862               	movf	___fladd@a+2,w
  7033  1393  00EA               	movwf	??___fladd+6
  7034  1394  0863               	movf	___fladd@a+3,w
  7035  1395  00EB               	movwf	??___fladd+7
  7036  1396  085C               	movf	___fladd@b,w
  7037  1397  02E8               	subwf	??___fladd+4,f
  7038  1398  085D               	movf	___fladd@b+1,w
  7039  1399  1C03               	skipc
  7040  139A  0F5D               	incfsz	___fladd@b+1,w
  7041  139B  2B9D               	goto	u3431
  7042  139C  2B9E               	goto	u3432
  7043  139D                     u3431:
  7044  139D  02E9               	subwf	??___fladd+5,f
  7045  139E                     u3432:
  7046  139E  085E               	movf	___fladd@b+2,w
  7047  139F  1C03               	skipc
  7048  13A0  0F5E               	incfsz	___fladd@b+2,w
  7049  13A1  2BA3               	goto	u3433
  7050  13A2  2BA4               	goto	u3434
  7051  13A3                     u3433:
  7052  13A3  02EA               	subwf	??___fladd+6,f
  7053  13A4                     u3434:
  7054  13A4  085F               	movf	___fladd@b+3,w
  7055  13A5  1C03               	skipc
  7056  13A6  0F5F               	incfsz	___fladd@b+3,w
  7057  13A7  2BA9               	goto	u3435
  7058  13A8  2BAA               	goto	u3436
  7059  13A9                     u3435:
  7060  13A9  02EB               	subwf	??___fladd+7,f
  7061  13AA                     u3436:
  7062  13AA  0868               	movf	??___fladd+4,w
  7063  13AB  07E4               	addwf	??___fladd,f
  7064  13AC  0869               	movf	??___fladd+5,w
  7065  13AD  1803               	skipnc
  7066  13AE  0F69               	incfsz	??___fladd+5,w
  7067  13AF  2BB1               	goto	u3440
  7068  13B0  2BB2               	goto	u3441
  7069  13B1                     u3440:
  7070  13B1  07E5               	addwf	??___fladd+1,f
  7071  13B2                     u3441:
  7072  13B2  086A               	movf	??___fladd+6,w
  7073  13B3  1803               	skipnc
  7074  13B4  0F6A               	incfsz	??___fladd+6,w
  7075  13B5  2BB7               	goto	u3442
  7076  13B6  2BB8               	goto	u3443
  7077  13B7                     u3442:
  7078  13B7  07E6               	addwf	??___fladd+2,f
  7079  13B8                     u3443:
  7080  13B8  086B               	movf	??___fladd+7,w
  7081  13B9  1803               	skipnc
  7082  13BA  0A6B               	incf	??___fladd+7,w
  7083  13BB  07E7               	addwf	??___fladd+3,f
  7084  13BC  0867               	movf	??___fladd+3,w
  7085  13BD  00DF               	movwf	___fladd@b+3
  7086  13BE  0866               	movf	??___fladd+2,w
  7087  13BF  00DE               	movwf	___fladd@b+2
  7088  13C0  0865               	movf	??___fladd+1,w
  7089  13C1  00DD               	movwf	___fladd@b+1
  7090  13C2  0864               	movf	??___fladd,w
  7091  13C3  00DC               	movwf	___fladd@b
  7092  13C4                     l2466:
  7093  13C4  3080               	movlw	128
  7094  13C5  00E4               	movwf	??___fladd
  7095  13C6  0864               	movf	??___fladd,w
  7096  13C7  06EC               	xorwf	___fladd@signs,f
  7097  13C8  09EF               	comf	___fladd@grs,f
  7098  13C9  0AEF               	incf	___fladd@grs,f
  7099  13CA                     l2468:
  7100  13CA  086F               	movf	___fladd@grs,w
  7101  13CB  1D03               	btfss	3,2
  7102  13CC  2BCE               	goto	u3451
  7103  13CD  2BCF               	goto	u3450
  7104  13CE                     u3451:
  7105  13CE  2BEC               	goto	l691
  7106  13CF                     u3450:
  7107  13CF                     l2470:
  7108  13CF  3001               	movlw	1
  7109  13D0  07DC               	addwf	___fladd@b,f
  7110  13D1  3000               	movlw	0
  7111  13D2  1803               	skipnc
  7112  13D3  3001               	movlw	1
  7113  13D4  07DD               	addwf	___fladd@b+1,f
  7114  13D5  3000               	movlw	0
  7115  13D6  1803               	skipnc
  7116  13D7  3001               	movlw	1
  7117  13D8  07DE               	addwf	___fladd@b+2,f
  7118  13D9  3000               	movlw	0
  7119  13DA  1803               	skipnc
  7120  13DB  3001               	movlw	1
  7121  13DC  07DF               	addwf	___fladd@b+3,f
  7122  13DD  2BEC               	goto	l691
  7123  13DE                     l2472:
  7124  13DE  0860               	movf	___fladd@a,w
  7125  13DF  02DC               	subwf	___fladd@b,f
  7126  13E0  0861               	movf	___fladd@a+1,w
  7127  13E1  1C03               	skipc
  7128  13E2  0F61               	incfsz	___fladd@a+1,w
  7129  13E3  02DD               	subwf	___fladd@b+1,f
  7130  13E4  0862               	movf	___fladd@a+2,w
  7131  13E5  1C03               	skipc
  7132  13E6  0F62               	incfsz	___fladd@a+2,w
  7133  13E7  02DE               	subwf	___fladd@b+2,f
  7134  13E8  0863               	movf	___fladd@a+3,w
  7135  13E9  1C03               	skipc
  7136  13EA  0F63               	incfsz	___fladd@a+3,w
  7137  13EB  02DF               	subwf	___fladd@b+3,f
  7138  13EC                     l691:
  7139  13EC  085F               	movf	___fladd@b+3,w
  7140  13ED  045E               	iorwf	___fladd@b+2,w
  7141  13EE  045D               	iorwf	___fladd@b+1,w
  7142  13EF  045C               	iorwf	___fladd@b,w
  7143  13F0  1D03               	skipz
  7144  13F1  2BF3               	goto	u3461
  7145  13F2  2BF4               	goto	u3460
  7146  13F3                     u3461:
  7147  13F3  2C20               	goto	l2494
  7148  13F4                     u3460:
  7149  13F4                     l2474:
  7150  13F4  086F               	movf	___fladd@grs,w
  7151  13F5  1D03               	btfss	3,2
  7152  13F6  2BF8               	goto	u3471
  7153  13F7  2BF9               	goto	u3470
  7154  13F8                     u3471:
  7155  13F8  2C20               	goto	l2494
  7156  13F9                     u3470:
  7157  13F9                     l2476:
  7158  13F9  3000               	movlw	0
  7159  13FA  00DF               	movwf	?___fladd+3
  7160  13FB  3000               	movlw	0
  7161  13FC  00DE               	movwf	?___fladd+2
  7162  13FD  3000               	movlw	0
  7163  13FE  00DD               	movwf	?___fladd+1
  7164  13FF  3000               	movlw	0
  7165  1400  00DC               	movwf	?___fladd
  7166  1401  2C9E               	goto	l683
  7167  1402                     l2480:
  7168  1402  3001               	movlw	1
  7169  1403  00E4               	movwf	??___fladd
  7170  1404                     u3485:
  7171  1404  1003               	clrc
  7172  1405  0DDC               	rlf	___fladd@b,f
  7173  1406  0DDD               	rlf	___fladd@b+1,f
  7174  1407  0DDE               	rlf	___fladd@b+2,f
  7175  1408  0DDF               	rlf	___fladd@b+3,f
  7176  1409  0BE4               	decfsz	??___fladd,f
  7177  140A  2C04               	goto	u3485
  7178  140B                     l2482:
  7179  140B  1FEF               	btfss	___fladd@grs,7
  7180  140C  2C0E               	goto	u3491
  7181  140D  2C0F               	goto	u3490
  7182  140E                     u3491:
  7183  140E  2C10               	goto	l695
  7184  140F                     u3490:
  7185  140F                     l2484:
  7186  140F  145C               	bsf	___fladd@b,0
  7187  1410                     l695:
  7188  1410  1C6F               	btfss	___fladd@grs,0
  7189  1411  2C13               	goto	u3501
  7190  1412  2C14               	goto	u3500
  7191  1413                     u3501:
  7192  1413  2C17               	goto	l2488
  7193  1414                     u3500:
  7194  1414                     l2486:
  7195  1414  1403               	setc
  7196  1415  0DEF               	rlf	___fladd@grs,f
  7197  1416  2C19               	goto	l2490
  7198  1417                     l2488:
  7199  1417  1003               	clrc
  7200  1418  0DEF               	rlf	___fladd@grs,f
  7201  1419                     l2490:
  7202  1419  086E               	movf	___fladd@bexp,w
  7203  141A  1903               	btfsc	3,2
  7204  141B  2C1D               	goto	u3511
  7205  141C  2C1E               	goto	u3510
  7206  141D                     u3511:
  7207  141D  2C20               	goto	l2494
  7208  141E                     u3510:
  7209  141E                     l2492:
  7210  141E  3001               	movlw	1
  7211  141F  02EE               	subwf	___fladd@bexp,f
  7212  1420                     l2494:
  7213  1420  1FDE               	btfss	___fladd@b+2,7
  7214  1421  2C23               	goto	u3521
  7215  1422  2C24               	goto	u3520
  7216  1423                     u3521:
  7217  1423  2C02               	goto	l2480
  7218  1424                     u3520:
  7219  1424                     l2496:
  7220  1424  01ED               	clrf	___fladd@aexp
  7221  1425                     l2498:
  7222  1425  1FEF               	btfss	___fladd@grs,7
  7223  1426  2C28               	goto	u3531
  7224  1427  2C29               	goto	u3530
  7225  1428                     u3531:
  7226  1428  2C37               	goto	l2506
  7227  1429                     u3530:
  7228  1429                     l2500:
  7229  1429  086F               	movf	___fladd@grs,w
  7230  142A  397F               	andlw	127
  7231  142B  1903               	btfsc	3,2
  7232  142C  2C2E               	goto	u3541
  7233  142D  2C2F               	goto	u3540
  7234  142E                     u3541:
  7235  142E  2C32               	goto	l701
  7236  142F                     u3540:
  7237  142F                     l2502:
  7238  142F  01ED               	clrf	___fladd@aexp
  7239  1430  0AED               	incf	___fladd@aexp,f
  7240  1431  2C37               	goto	l2506
  7241  1432                     l701:
  7242  1432  1C5C               	btfss	___fladd@b,0
  7243  1433  2C35               	goto	u3551
  7244  1434  2C36               	goto	u3550
  7245  1435                     u3551:
  7246  1435  2C37               	goto	l2506
  7247  1436                     u3550:
  7248  1436  2C2F               	goto	l2502
  7249  1437                     l2506:
  7250  1437  086D               	movf	___fladd@aexp,w
  7251  1438  1903               	btfsc	3,2
  7252  1439  2C3B               	goto	u3561
  7253  143A  2C3C               	goto	u3560
  7254  143B                     u3561:
  7255  143B  2C70               	goto	l704
  7256  143C                     u3560:
  7257  143C                     l2508:
  7258  143C  3001               	movlw	1
  7259  143D  07DC               	addwf	___fladd@b,f
  7260  143E  3000               	movlw	0
  7261  143F  1803               	skipnc
  7262  1440  3001               	movlw	1
  7263  1441  07DD               	addwf	___fladd@b+1,f
  7264  1442  3000               	movlw	0
  7265  1443  1803               	skipnc
  7266  1444  3001               	movlw	1
  7267  1445  07DE               	addwf	___fladd@b+2,f
  7268  1446  3000               	movlw	0
  7269  1447  1803               	skipnc
  7270  1448  3001               	movlw	1
  7271  1449  07DF               	addwf	___fladd@b+3,f
  7272  144A                     l2510:
  7273  144A  1C5F               	btfss	___fladd@b+3,0
  7274  144B  2C4D               	goto	u3571
  7275  144C  2C4E               	goto	u3570
  7276  144D                     u3571:
  7277  144D  2C70               	goto	l704
  7278  144E                     u3570:
  7279  144E                     l2512:
  7280  144E  085C               	movf	___fladd@b,w
  7281  144F  00E4               	movwf	??___fladd
  7282  1450  085D               	movf	___fladd@b+1,w
  7283  1451  00E5               	movwf	??___fladd+1
  7284  1452  085E               	movf	___fladd@b+2,w
  7285  1453  00E6               	movwf	??___fladd+2
  7286  1454  085F               	movf	___fladd@b+3,w
  7287  1455  00E7               	movwf	??___fladd+3
  7288  1456  3001               	movlw	1
  7289  1457  00E8               	movwf	??___fladd+4
  7290  1458                     u3585:
  7291  1458  0D67               	rlf	??___fladd+3,w
  7292  1459  0CE7               	rrf	??___fladd+3,f
  7293  145A  0CE6               	rrf	??___fladd+2,f
  7294  145B  0CE5               	rrf	??___fladd+1,f
  7295  145C  0CE4               	rrf	??___fladd,f
  7296  145D                     u3580:
  7297  145D  0BE8               	decfsz	??___fladd+4,f
  7298  145E  2C58               	goto	u3585
  7299  145F  0867               	movf	??___fladd+3,w
  7300  1460  00DF               	movwf	___fladd@b+3
  7301  1461  0866               	movf	??___fladd+2,w
  7302  1462  00DE               	movwf	___fladd@b+2
  7303  1463  0865               	movf	??___fladd+1,w
  7304  1464  00DD               	movwf	___fladd@b+1
  7305  1465  0864               	movf	??___fladd,w
  7306  1466  00DC               	movwf	___fladd@b
  7307  1467  0A6E               	incf	___fladd@bexp,w
  7308  1468  1903               	btfsc	3,2
  7309  1469  2C6B               	goto	u3591
  7310  146A  2C6C               	goto	u3590
  7311  146B                     u3591:
  7312  146B  2C70               	goto	l704
  7313  146C                     u3590:
  7314  146C                     l2514:
  7315  146C  3001               	movlw	1
  7316  146D  00E4               	movwf	??___fladd
  7317  146E  0864               	movf	??___fladd,w
  7318  146F  07EE               	addwf	___fladd@bexp,f
  7319  1470                     l704:
  7320  1470  0A6E               	incf	___fladd@bexp,w
  7321  1471  1903               	btfsc	3,2
  7322  1472  2C74               	goto	u3601
  7323  1473  2C75               	goto	u3600
  7324  1474                     u3601:
  7325  1474  2C7A               	goto	l2518
  7326  1475                     u3600:
  7327  1475                     l2516:
  7328  1475  086E               	movf	___fladd@bexp,w
  7329  1476  1D03               	btfss	3,2
  7330  1477  2C79               	goto	u3611
  7331  1478  2C7A               	goto	u3610
  7332  1479                     u3611:
  7333  1479  2C88               	goto	l2524
  7334  147A                     u3610:
  7335  147A                     l2518:
  7336  147A  3000               	movlw	0
  7337  147B  00DF               	movwf	___fladd@b+3
  7338  147C  3000               	movlw	0
  7339  147D  00DE               	movwf	___fladd@b+2
  7340  147E  3000               	movlw	0
  7341  147F  00DD               	movwf	___fladd@b+1
  7342  1480  3000               	movlw	0
  7343  1481  00DC               	movwf	___fladd@b
  7344  1482                     l2520:
  7345  1482  086E               	movf	___fladd@bexp,w
  7346  1483  1D03               	btfss	3,2
  7347  1484  2C86               	goto	u3621
  7348  1485  2C87               	goto	u3620
  7349  1486                     u3621:
  7350  1486  2C88               	goto	l2524
  7351  1487                     u3620:
  7352  1487                     l2522:
  7353  1487  01EC               	clrf	___fladd@signs
  7354  1488                     l2524:
  7355  1488  1C6E               	btfss	___fladd@bexp,0
  7356  1489  2C8B               	goto	u3631
  7357  148A  2C8C               	goto	u3630
  7358  148B                     u3631:
  7359  148B  2C8E               	goto	l2528
  7360  148C                     u3630:
  7361  148C                     l2526:
  7362  148C  17DE               	bsf	___fladd@b+2,7
  7363  148D  2C92               	goto	l712
  7364  148E                     l2528:
  7365  148E  307F               	movlw	127
  7366  148F  00E4               	movwf	??___fladd
  7367  1490  0864               	movf	??___fladd,w
  7368  1491  05DE               	andwf	___fladd@b+2,f
  7369  1492                     l712:
  7370  1492  086E               	movf	___fladd@bexp,w
  7371  1493  00E4               	movwf	??___fladd
  7372  1494  1003               	clrc
  7373  1495  0C64               	rrf	??___fladd,w
  7374  1496  00E5               	movwf	??___fladd+1
  7375  1497  0865               	movf	??___fladd+1,w
  7376  1498  00DF               	movwf	___fladd@b+3
  7377  1499                     l2530:
  7378  1499  1FEC               	btfss	___fladd@signs,7
  7379  149A  2C9C               	goto	u3641
  7380  149B  2C9D               	goto	u3640
  7381  149C                     u3641:
  7382  149C  2C9E               	goto	l713
  7383  149D                     u3640:
  7384  149D                     l2532:
  7385  149D  17DF               	bsf	___fladd@b+3,7
  7386  149E                     l713:
  7387  149E                     l683:
  7388  149E  0008               	return
  7389  149F                     __end_of___fladd:
  7390                           
  7391                           	psect	text19
  7392  07F2                     __ptext19:	
  7393 ;; *************** function ___flneg *****************
  7394 ;; Defined at:
  7395 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;  f1              4    0[BANK0 ] unsigned char 
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  4    0[BANK0 ] unsigned char 
  7402 ;; Registers used:
  7403 ;;		wreg
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7409 ;;      Params:         0       4       0       0       0
  7410 ;;      Locals:         0       0       0       0       0
  7411 ;;      Temps:          0       0       0       0       0
  7412 ;;      Totals:         0       4       0       0       0
  7413 ;;Total ram usage:        4 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; Hardware stack levels required when called:    1
  7416 ;; This function calls:
  7417 ;;		Nothing
  7418 ;; This function is called by:
  7419 ;;		_sprintf
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           
  7424                           ;psect for function ___flneg
  7425  07F2                     ___flneg:
  7426  07F2                     l3914:	
  7427                           ;incstack = 0
  7428                           ; Regs used in ___flneg: [wreg]
  7429                           
  7430  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  7431  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  7432  07F4  0823               	movf	___flneg@f1+3,w
  7433  07F5  0422               	iorwf	___flneg@f1+2,w
  7434  07F6  0421               	iorwf	___flneg@f1+1,w
  7435  07F7  0420               	iorwf	___flneg@f1,w
  7436  07F8  1903               	skipnz
  7437  07F9  2FFB               	goto	u6841
  7438  07FA  2FFC               	goto	u6840
  7439  07FB                     u6841:
  7440  07FB  2FFE               	goto	l3918
  7441  07FC                     u6840:
  7442  07FC                     l3916:
  7443  07FC  3080               	movlw	128
  7444  07FD  06A3               	xorwf	___flneg@f1+3,f
  7445  07FE                     l3918:
  7446  07FE                     l542:
  7447  07FE  0008               	return
  7448  07FF                     __end_of___flneg:
  7449                           
  7450                           	psect	text20
  7451  1F5C                     __ptext20:	
  7452 ;; *************** function ___flge *****************
  7453 ;; Defined at:
  7454 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  ff1             4    0[BANK0 ] unsigned char 
  7457 ;;  ff2             4    4[BANK0 ] unsigned char 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;		None
  7460 ;; Return value:  Size  Location     Type
  7461 ;;		None               void
  7462 ;; Registers used:
  7463 ;;		wreg, status,2, status,0
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7469 ;;      Params:         0       8       0       0       0
  7470 ;;      Locals:         0       0       0       0       0
  7471 ;;      Temps:          0       4       0       0       0
  7472 ;;      Totals:         0      12       0       0       0
  7473 ;;Total ram usage:       12 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    1
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_sprintf
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function ___flge
  7485  1F5C                     ___flge:
  7486  1F5C                     l3894:	
  7487                           ;incstack = 0
  7488                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7489                           
  7490  1F5C  3000               	movlw	0
  7491  1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  7492  1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  7493  1F5F  0520               	andwf	___flge@ff1,w
  7494  1F60  00A8               	movwf	??___flge
  7495  1F61  3000               	movlw	0
  7496  1F62  0521               	andwf	___flge@ff1+1,w
  7497  1F63  00A9               	movwf	??___flge+1
  7498  1F64  3080               	movlw	128
  7499  1F65  0522               	andwf	___flge@ff1+2,w
  7500  1F66  00AA               	movwf	??___flge+2
  7501  1F67  307F               	movlw	127
  7502  1F68  0523               	andwf	___flge@ff1+3,w
  7503  1F69  00AB               	movwf	??___flge+3
  7504  1F6A  082B               	movf	??___flge+3,w
  7505  1F6B  042A               	iorwf	??___flge+2,w
  7506  1F6C  0429               	iorwf	??___flge+1,w
  7507  1F6D  0428               	iorwf	??___flge,w
  7508  1F6E  1D03               	skipz
  7509  1F6F  2F71               	goto	u6771
  7510  1F70  2F72               	goto	u6770
  7511  1F71                     u6771:
  7512  1F71  2F7A               	goto	l534
  7513  1F72                     u6770:
  7514  1F72                     l3896:
  7515  1F72  3000               	movlw	0
  7516  1F73  00A3               	movwf	___flge@ff1+3
  7517  1F74  3000               	movlw	0
  7518  1F75  00A2               	movwf	___flge@ff1+2
  7519  1F76  3000               	movlw	0
  7520  1F77  00A1               	movwf	___flge@ff1+1
  7521  1F78  3000               	movlw	0
  7522  1F79  00A0               	movwf	___flge@ff1
  7523  1F7A                     l534:
  7524  1F7A  3000               	movlw	0
  7525  1F7B  0524               	andwf	___flge@ff2,w
  7526  1F7C  00A8               	movwf	??___flge
  7527  1F7D  3000               	movlw	0
  7528  1F7E  0525               	andwf	___flge@ff2+1,w
  7529  1F7F  00A9               	movwf	??___flge+1
  7530  1F80  3080               	movlw	128
  7531  1F81  0526               	andwf	___flge@ff2+2,w
  7532  1F82  00AA               	movwf	??___flge+2
  7533  1F83  307F               	movlw	127
  7534  1F84  0527               	andwf	___flge@ff2+3,w
  7535  1F85  00AB               	movwf	??___flge+3
  7536  1F86  082B               	movf	??___flge+3,w
  7537  1F87  042A               	iorwf	??___flge+2,w
  7538  1F88  0429               	iorwf	??___flge+1,w
  7539  1F89  0428               	iorwf	??___flge,w
  7540  1F8A  1D03               	skipz
  7541  1F8B  2F8D               	goto	u6781
  7542  1F8C  2F8E               	goto	u6780
  7543  1F8D                     u6781:
  7544  1F8D  2F96               	goto	l3900
  7545  1F8E                     u6780:
  7546  1F8E                     l3898:
  7547  1F8E  3000               	movlw	0
  7548  1F8F  00A7               	movwf	___flge@ff2+3
  7549  1F90  3000               	movlw	0
  7550  1F91  00A6               	movwf	___flge@ff2+2
  7551  1F92  3000               	movlw	0
  7552  1F93  00A5               	movwf	___flge@ff2+1
  7553  1F94  3000               	movlw	0
  7554  1F95  00A4               	movwf	___flge@ff2
  7555  1F96                     l3900:
  7556  1F96  1FA3               	btfss	___flge@ff1+3,7
  7557  1F97  2F99               	goto	u6791
  7558  1F98  2F9A               	goto	u6790
  7559  1F99                     u6791:
  7560  1F99  2FBE               	goto	l3904
  7561  1F9A                     u6790:
  7562  1F9A                     l3902:
  7563  1F9A  3000               	movlw	0
  7564  1F9B  00A8               	movwf	??___flge
  7565  1F9C  3000               	movlw	0
  7566  1F9D  00A9               	movwf	??___flge+1
  7567  1F9E  3000               	movlw	0
  7568  1F9F  00AA               	movwf	??___flge+2
  7569  1FA0  3080               	movlw	128
  7570  1FA1  00AB               	movwf	??___flge+3
  7571  1FA2  0820               	movf	___flge@ff1,w
  7572  1FA3  02A8               	subwf	??___flge,f
  7573  1FA4  0821               	movf	___flge@ff1+1,w
  7574  1FA5  1C03               	skipc
  7575  1FA6  0F21               	incfsz	___flge@ff1+1,w
  7576  1FA7  2FA9               	goto	u6801
  7577  1FA8  2FAA               	goto	u6802
  7578  1FA9                     u6801:
  7579  1FA9  02A9               	subwf	??___flge+1,f
  7580  1FAA                     u6802:
  7581  1FAA  0822               	movf	___flge@ff1+2,w
  7582  1FAB  1C03               	skipc
  7583  1FAC  0F22               	incfsz	___flge@ff1+2,w
  7584  1FAD  2FAF               	goto	u6803
  7585  1FAE  2FB0               	goto	u6804
  7586  1FAF                     u6803:
  7587  1FAF  02AA               	subwf	??___flge+2,f
  7588  1FB0                     u6804:
  7589  1FB0  0823               	movf	___flge@ff1+3,w
  7590  1FB1  1C03               	skipc
  7591  1FB2  0F23               	incfsz	___flge@ff1+3,w
  7592  1FB3  2FB5               	goto	u6805
  7593  1FB4  2FB6               	goto	u6806
  7594  1FB5                     u6805:
  7595  1FB5  02AB               	subwf	??___flge+3,f
  7596  1FB6                     u6806:
  7597  1FB6  082B               	movf	??___flge+3,w
  7598  1FB7  00A3               	movwf	___flge@ff1+3
  7599  1FB8  082A               	movf	??___flge+2,w
  7600  1FB9  00A2               	movwf	___flge@ff1+2
  7601  1FBA  0829               	movf	??___flge+1,w
  7602  1FBB  00A1               	movwf	___flge@ff1+1
  7603  1FBC  0828               	movf	??___flge,w
  7604  1FBD  00A0               	movwf	___flge@ff1
  7605  1FBE                     l3904:
  7606  1FBE  1FA7               	btfss	___flge@ff2+3,7
  7607  1FBF  2FC1               	goto	u6811
  7608  1FC0  2FC2               	goto	u6810
  7609  1FC1                     u6811:
  7610  1FC1  2FE6               	goto	l537
  7611  1FC2                     u6810:
  7612  1FC2                     l3906:
  7613  1FC2  3000               	movlw	0
  7614  1FC3  00A8               	movwf	??___flge
  7615  1FC4  3000               	movlw	0
  7616  1FC5  00A9               	movwf	??___flge+1
  7617  1FC6  3000               	movlw	0
  7618  1FC7  00AA               	movwf	??___flge+2
  7619  1FC8  3080               	movlw	128
  7620  1FC9  00AB               	movwf	??___flge+3
  7621  1FCA  0824               	movf	___flge@ff2,w
  7622  1FCB  02A8               	subwf	??___flge,f
  7623  1FCC  0825               	movf	___flge@ff2+1,w
  7624  1FCD  1C03               	skipc
  7625  1FCE  0F25               	incfsz	___flge@ff2+1,w
  7626  1FCF  2FD1               	goto	u6821
  7627  1FD0  2FD2               	goto	u6822
  7628  1FD1                     u6821:
  7629  1FD1  02A9               	subwf	??___flge+1,f
  7630  1FD2                     u6822:
  7631  1FD2  0826               	movf	___flge@ff2+2,w
  7632  1FD3  1C03               	skipc
  7633  1FD4  0F26               	incfsz	___flge@ff2+2,w
  7634  1FD5  2FD7               	goto	u6823
  7635  1FD6  2FD8               	goto	u6824
  7636  1FD7                     u6823:
  7637  1FD7  02AA               	subwf	??___flge+2,f
  7638  1FD8                     u6824:
  7639  1FD8  0827               	movf	___flge@ff2+3,w
  7640  1FD9  1C03               	skipc
  7641  1FDA  0F27               	incfsz	___flge@ff2+3,w
  7642  1FDB  2FDD               	goto	u6825
  7643  1FDC  2FDE               	goto	u6826
  7644  1FDD                     u6825:
  7645  1FDD  02AB               	subwf	??___flge+3,f
  7646  1FDE                     u6826:
  7647  1FDE  082B               	movf	??___flge+3,w
  7648  1FDF  00A7               	movwf	___flge@ff2+3
  7649  1FE0  082A               	movf	??___flge+2,w
  7650  1FE1  00A6               	movwf	___flge@ff2+2
  7651  1FE2  0829               	movf	??___flge+1,w
  7652  1FE3  00A5               	movwf	___flge@ff2+1
  7653  1FE4  0828               	movf	??___flge,w
  7654  1FE5  00A4               	movwf	___flge@ff2
  7655  1FE6                     l537:
  7656  1FE6  3080               	movlw	128
  7657  1FE7  06A3               	xorwf	___flge@ff1+3,f
  7658  1FE8  3080               	movlw	128
  7659  1FE9  06A7               	xorwf	___flge@ff2+3,f
  7660  1FEA  0827               	movf	___flge@ff2+3,w
  7661  1FEB  0223               	subwf	___flge@ff1+3,w
  7662  1FEC  1D03               	skipz
  7663  1FED  2FF8               	goto	u6835
  7664  1FEE  0826               	movf	___flge@ff2+2,w
  7665  1FEF  0222               	subwf	___flge@ff1+2,w
  7666  1FF0  1D03               	skipz
  7667  1FF1  2FF8               	goto	u6835
  7668  1FF2  0825               	movf	___flge@ff2+1,w
  7669  1FF3  0221               	subwf	___flge@ff1+1,w
  7670  1FF4  1D03               	skipz
  7671  1FF5  2FF8               	goto	u6835
  7672  1FF6  0824               	movf	___flge@ff2,w
  7673  1FF7  0220               	subwf	___flge@ff1,w
  7674  1FF8                     u6835:
  7675  1FF8  1803               	skipnc
  7676  1FF9  2FFB               	goto	u6831
  7677  1FFA  2FFC               	goto	u6830
  7678  1FFB                     u6831:
  7679  1FFB  2FFE               	goto	l3910
  7680  1FFC                     u6830:
  7681  1FFC                     l3908:
  7682  1FFC  1003               	clrc
  7683  1FFD  2FFF               	goto	l538
  7684  1FFE                     l3910:
  7685  1FFE  1403               	setc
  7686  1FFF                     l538:
  7687  1FFF  0008               	return
  7688  2000                     __end_of___flge:
  7689                           
  7690                           	psect	text21
  7691  1CDA                     __ptext21:	
  7692 ;; *************** function ___fleq *****************
  7693 ;; Defined at:
  7694 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;  ff1             4    0[BANK0 ] unsigned char 
  7697 ;;  ff2             4    4[BANK0 ] unsigned char 
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;		None
  7700 ;; Return value:  Size  Location     Type
  7701 ;;		None               void
  7702 ;; Registers used:
  7703 ;;		wreg, status,2, status,0
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7709 ;;      Params:         0       8       0       0       0
  7710 ;;      Locals:         0       0       0       0       0
  7711 ;;      Temps:          0       4       0       0       0
  7712 ;;      Totals:         0      12       0       0       0
  7713 ;;Total ram usage:       12 bytes
  7714 ;; Hardware stack levels used:    1
  7715 ;; Hardware stack levels required when called:    1
  7716 ;; This function calls:
  7717 ;;		Nothing
  7718 ;; This function is called by:
  7719 ;;		_sprintf
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           
  7724                           ;psect for function ___fleq
  7725  1CDA                     ___fleq:
  7726  1CDA                     l3882:	
  7727                           ;incstack = 0
  7728                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7729                           
  7730  1CDA  3000               	movlw	0
  7731  1CDB  1283               	bcf	3,5	;RP0=0, select bank0
  7732  1CDC  1303               	bcf	3,6	;RP1=0, select bank0
  7733  1CDD  0520               	andwf	___fleq@ff1,w
  7734  1CDE  00A8               	movwf	??___fleq
  7735  1CDF  3000               	movlw	0
  7736  1CE0  0521               	andwf	___fleq@ff1+1,w
  7737  1CE1  00A9               	movwf	??___fleq+1
  7738  1CE2  3080               	movlw	128
  7739  1CE3  0522               	andwf	___fleq@ff1+2,w
  7740  1CE4  00AA               	movwf	??___fleq+2
  7741  1CE5  307F               	movlw	127
  7742  1CE6  0523               	andwf	___fleq@ff1+3,w
  7743  1CE7  00AB               	movwf	??___fleq+3
  7744  1CE8  082B               	movf	??___fleq+3,w
  7745  1CE9  042A               	iorwf	??___fleq+2,w
  7746  1CEA  0429               	iorwf	??___fleq+1,w
  7747  1CEB  0428               	iorwf	??___fleq,w
  7748  1CEC  1D03               	skipz
  7749  1CED  2CEF               	goto	u6741
  7750  1CEE  2CF0               	goto	u6740
  7751  1CEF                     u6741:
  7752  1CEF  2CF8               	goto	l529
  7753  1CF0                     u6740:
  7754  1CF0                     l3884:
  7755  1CF0  3000               	movlw	0
  7756  1CF1  00A3               	movwf	___fleq@ff1+3
  7757  1CF2  3000               	movlw	0
  7758  1CF3  00A2               	movwf	___fleq@ff1+2
  7759  1CF4  3000               	movlw	0
  7760  1CF5  00A1               	movwf	___fleq@ff1+1
  7761  1CF6  3000               	movlw	0
  7762  1CF7  00A0               	movwf	___fleq@ff1
  7763  1CF8                     l529:
  7764  1CF8  3000               	movlw	0
  7765  1CF9  0524               	andwf	___fleq@ff2,w
  7766  1CFA  00A8               	movwf	??___fleq
  7767  1CFB  3000               	movlw	0
  7768  1CFC  0525               	andwf	___fleq@ff2+1,w
  7769  1CFD  00A9               	movwf	??___fleq+1
  7770  1CFE  3080               	movlw	128
  7771  1CFF  0526               	andwf	___fleq@ff2+2,w
  7772  1D00  00AA               	movwf	??___fleq+2
  7773  1D01  307F               	movlw	127
  7774  1D02  0527               	andwf	___fleq@ff2+3,w
  7775  1D03  00AB               	movwf	??___fleq+3
  7776  1D04  082B               	movf	??___fleq+3,w
  7777  1D05  042A               	iorwf	??___fleq+2,w
  7778  1D06  0429               	iorwf	??___fleq+1,w
  7779  1D07  0428               	iorwf	??___fleq,w
  7780  1D08  1D03               	skipz
  7781  1D09  2D0B               	goto	u6751
  7782  1D0A  2D0C               	goto	u6750
  7783  1D0B                     u6751:
  7784  1D0B  2D14               	goto	l530
  7785  1D0C                     u6750:
  7786  1D0C                     l3886:
  7787  1D0C  3000               	movlw	0
  7788  1D0D  00A7               	movwf	___fleq@ff2+3
  7789  1D0E  3000               	movlw	0
  7790  1D0F  00A6               	movwf	___fleq@ff2+2
  7791  1D10  3000               	movlw	0
  7792  1D11  00A5               	movwf	___fleq@ff2+1
  7793  1D12  3000               	movlw	0
  7794  1D13  00A4               	movwf	___fleq@ff2
  7795  1D14                     l530:
  7796  1D14  0827               	movf	___fleq@ff2+3,w
  7797  1D15  0623               	xorwf	___fleq@ff1+3,w
  7798  1D16  1D03               	skipz
  7799  1D17  2D22               	goto	u6765
  7800  1D18  0826               	movf	___fleq@ff2+2,w
  7801  1D19  0622               	xorwf	___fleq@ff1+2,w
  7802  1D1A  1D03               	skipz
  7803  1D1B  2D22               	goto	u6765
  7804  1D1C  0825               	movf	___fleq@ff2+1,w
  7805  1D1D  0621               	xorwf	___fleq@ff1+1,w
  7806  1D1E  1D03               	skipz
  7807  1D1F  2D22               	goto	u6765
  7808  1D20  0824               	movf	___fleq@ff2,w
  7809  1D21  0620               	xorwf	___fleq@ff1,w
  7810  1D22                     u6765:
  7811  1D22  1903               	skipnz
  7812  1D23  2D25               	goto	u6761
  7813  1D24  2D26               	goto	u6760
  7814  1D25                     u6761:
  7815  1D25  2D28               	goto	l3890
  7816  1D26                     u6760:
  7817  1D26                     l3888:
  7818  1D26  1003               	clrc
  7819  1D27  2D29               	goto	l531
  7820  1D28                     l3890:
  7821  1D28  1403               	setc
  7822  1D29                     l531:
  7823  1D29  0008               	return
  7824  1D2A                     __end_of___fleq:
  7825                           
  7826                           	psect	text22
  7827  1BA9                     __ptext22:	
  7828 ;; *************** function _send_crct *****************
  7829 ;; Defined at:
  7830 ;;		line 168 in file "main5a.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;  st              1    wreg     PTR unsigned char 
  7833 ;;		 -> f1(10), 
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;  st              1    2[BANK0 ] PTR unsigned char 
  7836 ;;		 -> f1(10), 
  7837 ;;  i               2    0[BANK0 ] int 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      void 
  7840 ;; Registers used:
  7841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7847 ;;      Params:         0       0       0       0       0
  7848 ;;      Locals:         0       3       0       0       0
  7849 ;;      Temps:          1       0       0       0       0
  7850 ;;      Totals:         1       3       0       0       0
  7851 ;;Total ram usage:        4 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    2
  7854 ;; This function calls:
  7855 ;;		_send_char
  7856 ;; This function is called by:
  7857 ;;		_main
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           
  7862                           ;psect for function _send_crct
  7863  1BA9                     _send_crct:
  7864                           
  7865                           ;incstack = 0
  7866                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7867                           ;send_crct@st stored from wreg
  7868  1BA9  1283               	bcf	3,5	;RP0=0, select bank0
  7869  1BAA  1303               	bcf	3,6	;RP1=0, select bank0
  7870  1BAB  00A2               	movwf	send_crct@st
  7871  1BAC                     l3388:
  7872                           
  7873                           ;main5a.c: 169:     int i = 0;
  7874  1BAC  01A0               	clrf	send_crct@i
  7875  1BAD  01A1               	clrf	send_crct@i+1
  7876                           
  7877                           ;main5a.c: 170:     while (st[i] != 0){
  7878  1BAE  2BC2               	goto	l3394
  7879  1BAF                     l3390:
  7880                           
  7881                           ;main5a.c: 171:         send_char(st[i]);
  7882  1BAF  0820               	movf	send_crct@i,w
  7883  1BB0  0722               	addwf	send_crct@st,w
  7884  1BB1  00F6               	movwf	??_send_crct
  7885  1BB2  0876               	movf	??_send_crct,w
  7886  1BB3  0084               	movwf	4
  7887  1BB4  0800               	movf	0,w
  7888  1BB5  160A  118A  2000  160A  158A  	fcall	_send_char
  7889  1BBA                     l3392:
  7890                           
  7891                           ;main5a.c: 172:         i++;
  7892  1BBA  3001               	movlw	1
  7893  1BBB  1283               	bcf	3,5	;RP0=0, select bank0
  7894  1BBC  1303               	bcf	3,6	;RP1=0, select bank0
  7895  1BBD  07A0               	addwf	send_crct@i,f
  7896  1BBE  1803               	skipnc
  7897  1BBF  0AA1               	incf	send_crct@i+1,f
  7898  1BC0  3000               	movlw	0
  7899  1BC1  07A1               	addwf	send_crct@i+1,f
  7900  1BC2                     l3394:
  7901                           
  7902                           ;main5a.c: 170:     while (st[i] != 0){
  7903  1BC2  0820               	movf	send_crct@i,w
  7904  1BC3  0722               	addwf	send_crct@st,w
  7905  1BC4  00F6               	movwf	??_send_crct
  7906  1BC5  0876               	movf	??_send_crct,w
  7907  1BC6  0084               	movwf	4
  7908  1BC7  1383               	bcf	3,7	;select IRP bank0
  7909  1BC8  0800               	movf	0,w
  7910  1BC9  1D03               	btfss	3,2
  7911  1BCA  2BCC               	goto	u5621
  7912  1BCB  2BCD               	goto	u5620
  7913  1BCC                     u5621:
  7914  1BCC  2BAF               	goto	l3390
  7915  1BCD                     u5620:
  7916  1BCD                     l120:
  7917  1BCD  0008               	return
  7918  1BCE                     __end_of_send_crct:
  7919                           
  7920                           	psect	text23
  7921  1000                     __ptext23:	
  7922 ;; *************** function _send_char *****************
  7923 ;; Defined at:
  7924 ;;		line 175 in file "main5a.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  dato            1    wreg     unsigned char 
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;  dato            1    5[COMMON] unsigned char 
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  1    wreg      void 
  7931 ;; Registers used:
  7932 ;;		wreg
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7938 ;;      Params:         0       0       0       0       0
  7939 ;;      Locals:         1       0       0       0       0
  7940 ;;      Temps:          0       0       0       0       0
  7941 ;;      Totals:         1       0       0       0       0
  7942 ;;Total ram usage:        1 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:    1
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_send_crct
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           
  7953                           ;psect for function _send_char
  7954  1000                     _send_char:
  7955                           
  7956                           ;incstack = 0
  7957                           ; Regs used in _send_char: [wreg]
  7958                           ;send_char@dato stored from wreg
  7959  1000  00F5               	movwf	send_char@dato
  7960  1001                     l2674:
  7961  1001                     l123:	
  7962                           ;main5a.c: 176:     while(!TXIF);
  7963                           
  7964  1001  1283               	bcf	3,5	;RP0=0, select bank0
  7965  1002  1303               	bcf	3,6	;RP1=0, select bank0
  7966  1003  1E0C               	btfss	12,4	;volatile
  7967  1004  2806               	goto	u4021
  7968  1005  2807               	goto	u4020
  7969  1006                     u4021:
  7970  1006  2801               	goto	l123
  7971  1007                     u4020:
  7972  1007                     l2676:
  7973                           
  7974                           ;main5a.c: 177:     TXREG = dato;
  7975  1007  0875               	movf	send_char@dato,w
  7976  1008  0099               	movwf	25	;volatile
  7977  1009                     l126:
  7978  1009  0008               	return
  7979  100A                     __end_of_send_char:
  7980                           
  7981                           	psect	text24
  7982  1BF5                     __ptext24:	
  7983 ;; *************** function _conv *****************
  7984 ;; Defined at:
  7985 ;;		line 179 in file "main5a.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  aa              1    wreg     unsigned char 
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;  aa              1   26[BANK0 ] unsigned char 
  7990 ;;  result          4   22[BANK0 ] float 
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  4   14[BANK0 ] float 
  7993 ;; Registers used:
  7994 ;;		wreg, status,2, status,0, pclath, cstack
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8000 ;;      Params:         0       4       0       0       0
  8001 ;;      Locals:         0       5       0       0       0
  8002 ;;      Temps:          0       4       0       0       0
  8003 ;;      Totals:         0      13       0       0       0
  8004 ;;Total ram usage:       13 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; Hardware stack levels required when called:    2
  8007 ;; This function calls:
  8008 ;;		___xxtofl
  8009 ;; This function is called by:
  8010 ;;		_main
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           
  8015                           ;psect for function _conv
  8016  1BF5                     _conv:
  8017                           
  8018                           ;incstack = 0
  8019                           ; Regs used in _conv: [wreg+status,2+status,0+pclath+cstack]
  8020                           ;conv@aa stored from wreg
  8021  1BF5  1283               	bcf	3,5	;RP0=0, select bank0
  8022  1BF6  1303               	bcf	3,6	;RP1=0, select bank0
  8023  1BF7  00BA               	movwf	conv@aa
  8024  1BF8                     l3966:
  8025                           
  8026                           ;main5a.c: 180:     float result;;main5a.c: 181:     result = aa*1;
  8027  1BF8  083A               	movf	conv@aa,w
  8028  1BF9  00B2               	movwf	??_conv
  8029  1BFA  01B3               	clrf	??_conv+1
  8030  1BFB  01B4               	clrf	??_conv+2
  8031  1BFC  01B5               	clrf	??_conv+3
  8032  1BFD  0835               	movf	??_conv+3,w
  8033  1BFE  00A3               	movwf	___xxtofl@val+3
  8034  1BFF  0834               	movf	??_conv+2,w
  8035  1C00  00A2               	movwf	___xxtofl@val+2
  8036  1C01  0833               	movf	??_conv+1,w
  8037  1C02  00A1               	movwf	___xxtofl@val+1
  8038  1C03  0832               	movf	??_conv,w
  8039  1C04  00A0               	movwf	___xxtofl@val
  8040  1C05  3001               	movlw	1
  8041  1C06  120A  158A  207C  160A  158A  	fcall	___xxtofl
  8042  1C0B  1283               	bcf	3,5	;RP0=0, select bank0
  8043  1C0C  1303               	bcf	3,6	;RP1=0, select bank0
  8044  1C0D  0823               	movf	?___xxtofl+3,w
  8045  1C0E  00B9               	movwf	conv@result+3
  8046  1C0F  0822               	movf	?___xxtofl+2,w
  8047  1C10  00B8               	movwf	conv@result+2
  8048  1C11  0821               	movf	?___xxtofl+1,w
  8049  1C12  00B7               	movwf	conv@result+1
  8050  1C13  0820               	movf	?___xxtofl,w
  8051  1C14  00B6               	movwf	conv@result
  8052  1C15                     l3968:
  8053                           
  8054                           ;main5a.c: 182:     return result;
  8055  1C15  0839               	movf	conv@result+3,w
  8056  1C16  00B1               	movwf	?_conv+3
  8057  1C17  0838               	movf	conv@result+2,w
  8058  1C18  00B0               	movwf	?_conv+2
  8059  1C19  0837               	movf	conv@result+1,w
  8060  1C1A  00AF               	movwf	?_conv+1
  8061  1C1B  0836               	movf	conv@result,w
  8062  1C1C  00AE               	movwf	?_conv
  8063  1C1D                     l129:
  8064  1C1D  0008               	return
  8065  1C1E                     __end_of_conv:
  8066                           
  8067                           	psect	text25
  8068  087C                     __ptext25:	
  8069 ;; *************** function ___xxtofl *****************
  8070 ;; Defined at:
  8071 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  sign            1    wreg     unsigned char 
  8074 ;;  val             4    0[BANK0 ] long 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;  sign            1    8[BANK0 ] unsigned char 
  8077 ;;  arg             4   10[BANK0 ] unsigned long 
  8078 ;;  exp             1    9[BANK0 ] unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  4    0[BANK0 ] unsigned char 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8088 ;;      Params:         0       4       0       0       0
  8089 ;;      Locals:         0       6       0       0       0
  8090 ;;      Temps:          0       4       0       0       0
  8091 ;;      Totals:         0      14       0       0       0
  8092 ;;Total ram usage:       14 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    1
  8095 ;; This function calls:
  8096 ;;		Nothing
  8097 ;; This function is called by:
  8098 ;;		_conv
  8099 ;;		_sprintf
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           
  8104                           ;psect for function ___xxtofl
  8105  087C                     ___xxtofl:
  8106                           
  8107                           ;incstack = 0
  8108                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8109                           ;___xxtofl@sign stored from wreg
  8110  087C  1283               	bcf	3,5	;RP0=0, select bank0
  8111  087D  1303               	bcf	3,6	;RP1=0, select bank0
  8112  087E  00A8               	movwf	___xxtofl@sign
  8113  087F                     l3922:
  8114  087F  0828               	movf	___xxtofl@sign,w
  8115  0880  1903               	btfsc	3,2
  8116  0881  2883               	goto	u6851
  8117  0882  2884               	goto	u6850
  8118  0883                     u6851:
  8119  0883  2898               	goto	l3928
  8120  0884                     u6850:
  8121  0884                     l3924:
  8122  0884  1FA3               	btfss	___xxtofl@val+3,7
  8123  0885  2887               	goto	u6861
  8124  0886  2888               	goto	u6860
  8125  0887                     u6861:
  8126  0887  2898               	goto	l3928
  8127  0888                     u6860:
  8128  0888                     l3926:
  8129  0888  0920               	comf	___xxtofl@val,w
  8130  0889  00AA               	movwf	___xxtofl@arg
  8131  088A  0921               	comf	___xxtofl@val+1,w
  8132  088B  00AB               	movwf	___xxtofl@arg+1
  8133  088C  0922               	comf	___xxtofl@val+2,w
  8134  088D  00AC               	movwf	___xxtofl@arg+2
  8135  088E  0923               	comf	___xxtofl@val+3,w
  8136  088F  00AD               	movwf	___xxtofl@arg+3
  8137  0890  0AAA               	incf	___xxtofl@arg,f
  8138  0891  1903               	skipnz
  8139  0892  0AAB               	incf	___xxtofl@arg+1,f
  8140  0893  1903               	skipnz
  8141  0894  0AAC               	incf	___xxtofl@arg+2,f
  8142  0895  1903               	skipnz
  8143  0896  0AAD               	incf	___xxtofl@arg+3,f
  8144  0897  28A0               	goto	l810
  8145  0898                     l3928:
  8146  0898  0823               	movf	___xxtofl@val+3,w
  8147  0899  00AD               	movwf	___xxtofl@arg+3
  8148  089A  0822               	movf	___xxtofl@val+2,w
  8149  089B  00AC               	movwf	___xxtofl@arg+2
  8150  089C  0821               	movf	___xxtofl@val+1,w
  8151  089D  00AB               	movwf	___xxtofl@arg+1
  8152  089E  0820               	movf	___xxtofl@val,w
  8153  089F  00AA               	movwf	___xxtofl@arg
  8154  08A0                     l810:
  8155  08A0  0823               	movf	___xxtofl@val+3,w
  8156  08A1  0422               	iorwf	___xxtofl@val+2,w
  8157  08A2  0421               	iorwf	___xxtofl@val+1,w
  8158  08A3  0420               	iorwf	___xxtofl@val,w
  8159  08A4  1D03               	skipz
  8160  08A5  28A7               	goto	u6871
  8161  08A6  28A8               	goto	u6870
  8162  08A7                     u6871:
  8163  08A7  28B1               	goto	l3934
  8164  08A8                     u6870:
  8165  08A8                     l3930:
  8166  08A8  3000               	movlw	0
  8167  08A9  00A3               	movwf	?___xxtofl+3
  8168  08AA  3000               	movlw	0
  8169  08AB  00A2               	movwf	?___xxtofl+2
  8170  08AC  3000               	movlw	0
  8171  08AD  00A1               	movwf	?___xxtofl+1
  8172  08AE  3000               	movlw	0
  8173  08AF  00A0               	movwf	?___xxtofl
  8174  08B0  2937               	goto	l812
  8175  08B1                     l3934:
  8176  08B1  3096               	movlw	150
  8177  08B2  00A4               	movwf	??___xxtofl
  8178  08B3  0824               	movf	??___xxtofl,w
  8179  08B4  00A9               	movwf	___xxtofl@exp
  8180  08B5  28C3               	goto	l3938
  8181  08B6                     l3936:
  8182  08B6  3001               	movlw	1
  8183  08B7  00A4               	movwf	??___xxtofl
  8184  08B8  0824               	movf	??___xxtofl,w
  8185  08B9  07A9               	addwf	___xxtofl@exp,f
  8186  08BA  3001               	movlw	1
  8187  08BB                     u6885:
  8188  08BB  1003               	clrc
  8189  08BC  0CAD               	rrf	___xxtofl@arg+3,f
  8190  08BD  0CAC               	rrf	___xxtofl@arg+2,f
  8191  08BE  0CAB               	rrf	___xxtofl@arg+1,f
  8192  08BF  0CAA               	rrf	___xxtofl@arg,f
  8193  08C0  3EFF               	addlw	-1
  8194  08C1  1D03               	skipz
  8195  08C2  28BB               	goto	u6885
  8196  08C3                     l3938:
  8197  08C3  30FE               	movlw	254
  8198  08C4  052D               	andwf	___xxtofl@arg+3,w
  8199  08C5  1D03               	btfss	3,2
  8200  08C6  28C8               	goto	u6891
  8201  08C7  28C9               	goto	u6890
  8202  08C8                     u6891:
  8203  08C8  28B6               	goto	l3936
  8204  08C9                     u6890:
  8205  08C9  28E5               	goto	l816
  8206  08CA                     l3940:
  8207  08CA  3001               	movlw	1
  8208  08CB  00A4               	movwf	??___xxtofl
  8209  08CC  0824               	movf	??___xxtofl,w
  8210  08CD  07A9               	addwf	___xxtofl@exp,f
  8211  08CE                     l3942:
  8212  08CE  3001               	movlw	1
  8213  08CF  07AA               	addwf	___xxtofl@arg,f
  8214  08D0  3000               	movlw	0
  8215  08D1  1803               	skipnc
  8216  08D2  3001               	movlw	1
  8217  08D3  07AB               	addwf	___xxtofl@arg+1,f
  8218  08D4  3000               	movlw	0
  8219  08D5  1803               	skipnc
  8220  08D6  3001               	movlw	1
  8221  08D7  07AC               	addwf	___xxtofl@arg+2,f
  8222  08D8  3000               	movlw	0
  8223  08D9  1803               	skipnc
  8224  08DA  3001               	movlw	1
  8225  08DB  07AD               	addwf	___xxtofl@arg+3,f
  8226  08DC                     l3944:
  8227  08DC  3001               	movlw	1
  8228  08DD                     u6905:
  8229  08DD  1003               	clrc
  8230  08DE  0CAD               	rrf	___xxtofl@arg+3,f
  8231  08DF  0CAC               	rrf	___xxtofl@arg+2,f
  8232  08E0  0CAB               	rrf	___xxtofl@arg+1,f
  8233  08E1  0CAA               	rrf	___xxtofl@arg,f
  8234  08E2  3EFF               	addlw	-1
  8235  08E3  1D03               	skipz
  8236  08E4  28DD               	goto	u6905
  8237  08E5                     l816:
  8238  08E5  30FF               	movlw	255
  8239  08E6  052D               	andwf	___xxtofl@arg+3,w
  8240  08E7  1D03               	btfss	3,2
  8241  08E8  28EA               	goto	u6911
  8242  08E9  28EB               	goto	u6910
  8243  08EA                     u6911:
  8244  08EA  28CA               	goto	l3940
  8245  08EB                     u6910:
  8246  08EB  28F7               	goto	l3948
  8247  08EC                     l3946:
  8248  08EC  3001               	movlw	1
  8249  08ED  02A9               	subwf	___xxtofl@exp,f
  8250  08EE  3001               	movlw	1
  8251  08EF  00A4               	movwf	??___xxtofl
  8252  08F0                     u6925:
  8253  08F0  1003               	clrc
  8254  08F1  0DAA               	rlf	___xxtofl@arg,f
  8255  08F2  0DAB               	rlf	___xxtofl@arg+1,f
  8256  08F3  0DAC               	rlf	___xxtofl@arg+2,f
  8257  08F4  0DAD               	rlf	___xxtofl@arg+3,f
  8258  08F5  0BA4               	decfsz	??___xxtofl,f
  8259  08F6  28F0               	goto	u6925
  8260  08F7                     l3948:
  8261  08F7  1BAC               	btfsc	___xxtofl@arg+2,7
  8262  08F8  28FA               	goto	u6931
  8263  08F9  28FB               	goto	u6930
  8264  08FA                     u6931:
  8265  08FA  2901               	goto	l823
  8266  08FB                     u6930:
  8267  08FB                     l3950:
  8268  08FB  3002               	movlw	2
  8269  08FC  0229               	subwf	___xxtofl@exp,w
  8270  08FD  1803               	skipnc
  8271  08FE  2900               	goto	u6941
  8272  08FF  2901               	goto	u6940
  8273  0900                     u6941:
  8274  0900  28EC               	goto	l3946
  8275  0901                     u6940:
  8276  0901                     l823:
  8277  0901  1829               	btfsc	___xxtofl@exp,0
  8278  0902  2904               	goto	u6951
  8279  0903  2905               	goto	u6950
  8280  0904                     u6951:
  8281  0904  290D               	goto	l824
  8282  0905                     u6950:
  8283  0905                     l3952:
  8284  0905  30FF               	movlw	255
  8285  0906  05AA               	andwf	___xxtofl@arg,f
  8286  0907  30FF               	movlw	255
  8287  0908  05AB               	andwf	___xxtofl@arg+1,f
  8288  0909  307F               	movlw	127
  8289  090A  05AC               	andwf	___xxtofl@arg+2,f
  8290  090B  30FF               	movlw	255
  8291  090C  05AD               	andwf	___xxtofl@arg+3,f
  8292  090D                     l824:
  8293  090D  1003               	clrc
  8294  090E  0CA9               	rrf	___xxtofl@exp,f
  8295  090F                     l3954:
  8296  090F  0829               	movf	___xxtofl@exp,w
  8297  0910  00A4               	movwf	??___xxtofl
  8298  0911  01A5               	clrf	??___xxtofl+1
  8299  0912  01A6               	clrf	??___xxtofl+2
  8300  0913  01A7               	clrf	??___xxtofl+3
  8301  0914  3018               	movlw	24
  8302  0915                     u6965:
  8303  0915  1003               	clrc
  8304  0916  0DA4               	rlf	??___xxtofl,f
  8305  0917  0DA5               	rlf	??___xxtofl+1,f
  8306  0918  0DA6               	rlf	??___xxtofl+2,f
  8307  0919  0DA7               	rlf	??___xxtofl+3,f
  8308  091A                     u6960:
  8309  091A  3EFF               	addlw	-1
  8310  091B  1D03               	skipz
  8311  091C  2915               	goto	u6965
  8312  091D  0824               	movf	??___xxtofl,w
  8313  091E  04AA               	iorwf	___xxtofl@arg,f
  8314  091F  0825               	movf	??___xxtofl+1,w
  8315  0920  04AB               	iorwf	___xxtofl@arg+1,f
  8316  0921  0826               	movf	??___xxtofl+2,w
  8317  0922  04AC               	iorwf	___xxtofl@arg+2,f
  8318  0923  0827               	movf	??___xxtofl+3,w
  8319  0924  04AD               	iorwf	___xxtofl@arg+3,f
  8320  0925                     l3956:
  8321  0925  0828               	movf	___xxtofl@sign,w
  8322  0926  1903               	btfsc	3,2
  8323  0927  2929               	goto	u6971
  8324  0928  292A               	goto	u6970
  8325  0929                     u6971:
  8326  0929  292F               	goto	l3962
  8327  092A                     u6970:
  8328  092A                     l3958:
  8329  092A  1FA3               	btfss	___xxtofl@val+3,7
  8330  092B  292D               	goto	u6981
  8331  092C  292E               	goto	u6980
  8332  092D                     u6981:
  8333  092D  292F               	goto	l3962
  8334  092E                     u6980:
  8335  092E                     l3960:
  8336  092E  17AD               	bsf	___xxtofl@arg+3,7
  8337  092F                     l3962:
  8338  092F  082D               	movf	___xxtofl@arg+3,w
  8339  0930  00A3               	movwf	?___xxtofl+3
  8340  0931  082C               	movf	___xxtofl@arg+2,w
  8341  0932  00A2               	movwf	?___xxtofl+2
  8342  0933  082B               	movf	___xxtofl@arg+1,w
  8343  0934  00A1               	movwf	?___xxtofl+1
  8344  0935  082A               	movf	___xxtofl@arg,w
  8345  0936  00A0               	movwf	?___xxtofl
  8346  0937                     l812:
  8347  0937  0008               	return
  8348  0938                     __end_of___xxtofl:
  8349                           
  8350                           	psect	text26
  8351  1B94                     __ptext26:	
  8352 ;; *************** function _cfg_usart *****************
  8353 ;; Defined at:
  8354 ;;		line 134 in file "main5a.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;		None
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;		None
  8359 ;; Return value:  Size  Location     Type
  8360 ;;                  1    wreg      void 
  8361 ;; Registers used:
  8362 ;;		wreg, status,2
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8368 ;;      Params:         0       0       0       0       0
  8369 ;;      Locals:         0       0       0       0       0
  8370 ;;      Temps:          0       0       0       0       0
  8371 ;;      Totals:         0       0       0       0       0
  8372 ;;Total ram usage:        0 bytes
  8373 ;; Hardware stack levels used:    1
  8374 ;; Hardware stack levels required when called:    1
  8375 ;; This function calls:
  8376 ;;		Nothing
  8377 ;; This function is called by:
  8378 ;;		_main
  8379 ;; This function uses a non-reentrant model
  8380 ;;
  8381                           
  8382                           
  8383                           ;psect for function _cfg_usart
  8384  1B94                     _cfg_usart:
  8385  1B94                     l3058:	
  8386                           ;incstack = 0
  8387                           ; Regs used in _cfg_usart: [wreg+status,2]
  8388                           
  8389                           
  8390                           ;main5a.c: 136:     TXSTAbits.SYNC = 0;
  8391  1B94  1683               	bsf	3,5	;RP0=1, select bank1
  8392  1B95  1303               	bcf	3,6	;RP1=0, select bank1
  8393  1B96  1218               	bcf	24,4	;volatile
  8394                           
  8395                           ;main5a.c: 137:     TXSTAbits.BRGH = 1;
  8396  1B97  1518               	bsf	24,2	;volatile
  8397                           
  8398                           ;main5a.c: 139:     BAUDCTLbits.BRG16 = 1;
  8399  1B98  1683               	bsf	3,5	;RP0=1, select bank3
  8400  1B99  1703               	bsf	3,6	;RP1=1, select bank3
  8401  1B9A  1587               	bsf	7,3	;volatile
  8402  1B9B                     l3060:
  8403                           
  8404                           ;main5a.c: 141:     SPBRG = 207;
  8405  1B9B  30CF               	movlw	207
  8406  1B9C  1683               	bsf	3,5	;RP0=1, select bank1
  8407  1B9D  1303               	bcf	3,6	;RP1=0, select bank1
  8408  1B9E  0099               	movwf	25	;volatile
  8409  1B9F                     l3062:
  8410                           
  8411                           ;main5a.c: 142:     SPBRGH = 0;
  8412  1B9F  019A               	clrf	26	;volatile
  8413  1BA0                     l3064:
  8414                           
  8415                           ;main5a.c: 144:     RCSTAbits.SPEN = 1;
  8416  1BA0  1283               	bcf	3,5	;RP0=0, select bank0
  8417  1BA1  1303               	bcf	3,6	;RP1=0, select bank0
  8418  1BA2  1798               	bsf	24,7	;volatile
  8419  1BA3                     l3066:
  8420                           
  8421                           ;main5a.c: 145:     RCSTAbits.RX9 = 0;
  8422  1BA3  1318               	bcf	24,6	;volatile
  8423  1BA4                     l3068:
  8424                           
  8425                           ;main5a.c: 146:     RCSTAbits.CREN = 1;
  8426  1BA4  1618               	bsf	24,4	;volatile
  8427  1BA5                     l3070:
  8428                           
  8429                           ;main5a.c: 148:     TXSTAbits.TXEN = 1;
  8430  1BA5  1683               	bsf	3,5	;RP0=1, select bank1
  8431  1BA6  1303               	bcf	3,6	;RP1=0, select bank1
  8432  1BA7  1698               	bsf	24,5	;volatile
  8433  1BA8                     l108:
  8434  1BA8  0008               	return
  8435  1BA9                     __end_of_cfg_usart:
  8436                           
  8437                           	psect	text27
  8438  1B58                     __ptext27:	
  8439 ;; *************** function _cfg_iocb *****************
  8440 ;; Defined at:
  8441 ;;		line 158 in file "main5a.c"
  8442 ;; Parameters:    Size  Location     Type
  8443 ;;		None
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;		None
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  1    wreg      void 
  8448 ;; Registers used:
  8449 ;;		wreg
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8455 ;;      Params:         0       0       0       0       0
  8456 ;;      Locals:         0       0       0       0       0
  8457 ;;      Temps:          0       0       0       0       0
  8458 ;;      Totals:         0       0       0       0       0
  8459 ;;Total ram usage:        0 bytes
  8460 ;; Hardware stack levels used:    1
  8461 ;; Hardware stack levels required when called:    1
  8462 ;; This function calls:
  8463 ;;		Nothing
  8464 ;; This function is called by:
  8465 ;;		_main
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           
  8470                           ;psect for function _cfg_iocb
  8471  1B58                     _cfg_iocb:
  8472  1B58                     l3054:	
  8473                           ;incstack = 0
  8474                           ; Regs used in _cfg_iocb: [wreg]
  8475                           
  8476                           
  8477                           ;main5a.c: 159:     IOCB = 0X03 ;
  8478  1B58  3003               	movlw	3
  8479  1B59  1683               	bsf	3,5	;RP0=1, select bank1
  8480  1B5A  1303               	bcf	3,6	;RP1=0, select bank1
  8481  1B5B  0096               	movwf	22	;volatile
  8482  1B5C                     l3056:
  8483                           
  8484                           ;main5a.c: 160:     INTCONbits.RBIF = 0;
  8485  1B5C  100B               	bcf	11,0	;volatile
  8486  1B5D                     l114:
  8487  1B5D  0008               	return
  8488  1B5E                     __end_of_cfg_iocb:
  8489                           
  8490                           	psect	text28
  8491  1B80                     __ptext28:	
  8492 ;; *************** function _cfg_io *****************
  8493 ;; Defined at:
  8494 ;;		line 113 in file "main5a.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;		None
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  1    wreg      void 
  8501 ;; Registers used:
  8502 ;;		wreg, status,2
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8508 ;;      Params:         0       0       0       0       0
  8509 ;;      Locals:         0       0       0       0       0
  8510 ;;      Temps:          0       0       0       0       0
  8511 ;;      Totals:         0       0       0       0       0
  8512 ;;Total ram usage:        0 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:    1
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_main
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           
  8523                           ;psect for function _cfg_io
  8524  1B80                     _cfg_io:
  8525  1B80                     l3036:	
  8526                           ;incstack = 0
  8527                           ; Regs used in _cfg_io: [wreg+status,2]
  8528                           
  8529                           
  8530                           ;main5a.c: 114:     ANSEL = 0;
  8531  1B80  1683               	bsf	3,5	;RP0=1, select bank3
  8532  1B81  1703               	bsf	3,6	;RP1=1, select bank3
  8533  1B82  0188               	clrf	8	;volatile
  8534                           
  8535                           ;main5a.c: 115:     ANSELH = 0;
  8536  1B83  0189               	clrf	9	;volatile
  8537                           
  8538                           ;main5a.c: 117:     TRISA = 0;
  8539  1B84  1683               	bsf	3,5	;RP0=1, select bank1
  8540  1B85  1303               	bcf	3,6	;RP1=0, select bank1
  8541  1B86  0185               	clrf	5	;volatile
  8542                           
  8543                           ;main5a.c: 118:     TRISB = 0;
  8544  1B87  0186               	clrf	6	;volatile
  8545                           
  8546                           ;main5a.c: 119:     TRISD = 0;
  8547  1B88  0188               	clrf	8	;volatile
  8548  1B89                     l3038:
  8549                           
  8550                           ;main5a.c: 120:     TRISBbits.TRISB0 = 1;
  8551  1B89  1406               	bsf	6,0	;volatile
  8552  1B8A                     l3040:
  8553                           
  8554                           ;main5a.c: 121:     TRISBbits.TRISB1 = 1;
  8555  1B8A  1486               	bsf	6,1	;volatile
  8556  1B8B                     l3042:
  8557                           
  8558                           ;main5a.c: 122:     OPTION_REGbits.nRBPU = 0 ;
  8559  1B8B  1381               	bcf	1,7	;volatile
  8560  1B8C                     l3044:
  8561                           
  8562                           ;main5a.c: 123:     WPUB = 0x03;
  8563  1B8C  3003               	movlw	3
  8564  1B8D  0095               	movwf	21	;volatile
  8565  1B8E                     l3046:
  8566                           
  8567                           ;main5a.c: 125:     PORTB = 0;
  8568  1B8E  1283               	bcf	3,5	;RP0=0, select bank0
  8569  1B8F  1303               	bcf	3,6	;RP1=0, select bank0
  8570  1B90  0186               	clrf	6	;volatile
  8571  1B91                     l3048:
  8572                           
  8573                           ;main5a.c: 126:     PORTD = 0;
  8574  1B91  0188               	clrf	8	;volatile
  8575  1B92                     l3050:
  8576                           
  8577                           ;main5a.c: 127:     PORTA = 0;
  8578  1B92  0185               	clrf	5	;volatile
  8579  1B93                     l102:
  8580  1B93  0008               	return
  8581  1B94                     __end_of_cfg_io:
  8582                           
  8583                           	psect	text29
  8584  1B5E                     __ptext29:	
  8585 ;; *************** function _cfg_inte *****************
  8586 ;; Defined at:
  8587 ;;		line 151 in file "main5a.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;		None
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		None
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8601 ;;      Params:         0       0       0       0       0
  8602 ;;      Locals:         0       0       0       0       0
  8603 ;;      Temps:          0       0       0       0       0
  8604 ;;      Totals:         0       0       0       0       0
  8605 ;;Total ram usage:        0 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:    1
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_main
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           
  8616                           ;psect for function _cfg_inte
  8617  1B5E                     _cfg_inte:
  8618  1B5E                     l3052:	
  8619                           ;incstack = 0
  8620                           ; Regs used in _cfg_inte: []
  8621                           
  8622                           
  8623                           ;main5a.c: 152:     INTCONbits.GIE = 1;
  8624  1B5E  178B               	bsf	11,7	;volatile
  8625                           
  8626                           ;main5a.c: 153:     INTCONbits.PEIE = 1;
  8627  1B5F  170B               	bsf	11,6	;volatile
  8628                           
  8629                           ;main5a.c: 154:     PIE1bits.RCIE = 1;
  8630  1B60  1683               	bsf	3,5	;RP0=1, select bank1
  8631  1B61  1303               	bcf	3,6	;RP1=0, select bank1
  8632  1B62  168C               	bsf	12,5	;volatile
  8633                           
  8634                           ;main5a.c: 155:     INTCONbits.RBIE = 1;
  8635  1B63  158B               	bsf	11,3	;volatile
  8636                           
  8637                           ;main5a.c: 156:     INTCONbits.RBIF = 0;
  8638  1B64  100B               	bcf	11,0	;volatile
  8639  1B65                     l111:
  8640  1B65  0008               	return
  8641  1B66                     __end_of_cfg_inte:
  8642                           
  8643                           	psect	text30
  8644  1B52                     __ptext30:	
  8645 ;; *************** function _cfg_clk *****************
  8646 ;; Defined at:
  8647 ;;		line 130 in file "main5a.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;		None
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;		None
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg, status,2, status,0
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8661 ;;      Params:         0       0       0       0       0
  8662 ;;      Locals:         0       0       0       0       0
  8663 ;;      Temps:          0       0       0       0       0
  8664 ;;      Totals:         0       0       0       0       0
  8665 ;;Total ram usage:        0 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:    1
  8668 ;; This function calls:
  8669 ;;		Nothing
  8670 ;; This function is called by:
  8671 ;;		_main
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           
  8676                           ;psect for function _cfg_clk
  8677  1B52                     _cfg_clk:
  8678  1B52                     l3072:	
  8679                           ;incstack = 0
  8680                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  8681                           
  8682                           
  8683                           ;main5a.c: 131:     OSCCONbits.IRCF = 0b111;
  8684  1B52  3070               	movlw	112
  8685  1B53  1683               	bsf	3,5	;RP0=1, select bank1
  8686  1B54  1303               	bcf	3,6	;RP1=0, select bank1
  8687  1B55  048F               	iorwf	15,f	;volatile
  8688  1B56                     l3074:
  8689                           
  8690                           ;main5a.c: 132:     OSCCONbits.SCS = 1;
  8691  1B56  140F               	bsf	15,0	;volatile
  8692  1B57                     l105:
  8693  1B57  0008               	return
  8694  1B58                     __end_of_cfg_clk:
  8695                           
  8696                           	psect	text31
  8697  1C1E                     __ptext31:	
  8698 ;; *************** function _isr *****************
  8699 ;; Defined at:
  8700 ;;		line 66 in file "main5a.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;		None
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;		None
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		wreg, status,2, status,0
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8714 ;;      Params:         0       0       0       0       0
  8715 ;;      Locals:         0       0       0       0       0
  8716 ;;      Temps:          5       0       0       0       0
  8717 ;;      Totals:         5       0       0       0       0
  8718 ;;Total ram usage:        5 bytes
  8719 ;; Hardware stack levels used:    1
  8720 ;; This function calls:
  8721 ;;		Nothing
  8722 ;; This function is called by:
  8723 ;;		Interrupt level 1
  8724 ;; This function uses a non-reentrant model
  8725 ;;
  8726                           
  8727                           
  8728                           ;psect for function _isr
  8729  1C1E                     _isr:
  8730  1C1E                     i1l3396:
  8731                           
  8732                           ;main5a.c: 68:     if(PIR1bits.RCIF){
  8733  1C1E  1283               	bcf	3,5	;RP0=0, select bank0
  8734  1C1F  1303               	bcf	3,6	;RP1=0, select bank0
  8735  1C20  1E8C               	btfss	12,5	;volatile
  8736  1C21  2C23               	goto	u563_21
  8737  1C22  2C24               	goto	u563_20
  8738  1C23                     u563_21:
  8739  1C23  2C37               	goto	i1l3400
  8740  1C24                     u563_20:
  8741  1C24                     i1l3398:
  8742                           
  8743                           ;main5a.c: 69:         TXREG = 12;
  8744  1C24  300C               	movlw	12
  8745  1C25  0099               	movwf	25	;volatile
  8746                           
  8747                           ;main5a.c: 70:         TXREG = 0X0D;
  8748  1C26  300D               	movlw	13
  8749  1C27  0099               	movwf	25	;volatile
  8750                           
  8751                           ;main5a.c: 71:         PORTD = RCREG;
  8752  1C28  081A               	movf	26,w	;volatile
  8753  1C29  0088               	movwf	8	;volatile
  8754                           
  8755                           ;main5a.c: 72:         _delay((unsigned long)((4000)*(4000000/4000.0)));
  8756  1C2A  3015               	movlw	21
  8757  1C2B  00F2               	movwf	??_isr+2
  8758  1C2C  304B               	movlw	75
  8759  1C2D  00F1               	movwf	??_isr+1
  8760  1C2E  30BE               	movlw	190
  8761  1C2F  00F0               	movwf	??_isr
  8762  1C30                     u754_27:
  8763  1C30  0BF0               	decfsz	??_isr,f
  8764  1C31  2C30               	goto	u754_27
  8765  1C32  0BF1               	decfsz	??_isr+1,f
  8766  1C33  2C30               	goto	u754_27
  8767  1C34  0BF2               	decfsz	??_isr+2,f
  8768  1C35  2C30               	goto	u754_27
  8769  1C36  0000               	nop
  8770  1C37                     i1l3400:
  8771                           
  8772                           ;main5a.c: 75:     if(INTCONbits.RBIF){
  8773  1C37  1C0B               	btfss	11,0	;volatile
  8774  1C38  2C3A               	goto	u564_21
  8775  1C39  2C3B               	goto	u564_20
  8776  1C3A                     u564_21:
  8777  1C3A  2C51               	goto	i1l91
  8778  1C3B                     u564_20:
  8779  1C3B                     i1l3402:
  8780                           
  8781                           ;main5a.c: 76:         if (PORTBbits.RB0 == 0){
  8782  1C3B  1283               	bcf	3,5	;RP0=0, select bank0
  8783  1C3C  1303               	bcf	3,6	;RP1=0, select bank0
  8784  1C3D  1806               	btfsc	6,0	;volatile
  8785  1C3E  2C40               	goto	u565_21
  8786  1C3F  2C41               	goto	u565_20
  8787  1C40                     u565_21:
  8788  1C40  2C47               	goto	i1l3406
  8789  1C41                     u565_20:
  8790  1C41                     i1l3404:
  8791                           
  8792                           ;main5a.c: 77:             V++;
  8793  1C41  3001               	movlw	1
  8794  1C42  00F0               	movwf	??_isr
  8795  1C43  0870               	movf	??_isr,w
  8796  1C44  1683               	bsf	3,5	;RP0=1, select bank1
  8797  1C45  1303               	bcf	3,6	;RP1=0, select bank1
  8798  1C46  07D8               	addwf	_V^(0+128),f
  8799  1C47                     i1l3406:
  8800                           
  8801                           ;main5a.c: 79:         if (PORTBbits.RB1 == 0){
  8802  1C47  1283               	bcf	3,5	;RP0=0, select bank0
  8803  1C48  1886               	btfsc	6,1	;volatile
  8804  1C49  2C4B               	goto	u566_21
  8805  1C4A  2C4C               	goto	u566_20
  8806  1C4B                     u566_21:
  8807  1C4B  2C50               	goto	i1l3410
  8808  1C4C                     u566_20:
  8809  1C4C                     i1l3408:
  8810                           
  8811                           ;main5a.c: 80:             V--;
  8812  1C4C  3001               	movlw	1
  8813  1C4D  1683               	bsf	3,5	;RP0=1, select bank1
  8814  1C4E  1303               	bcf	3,6	;RP1=0, select bank1
  8815  1C4F  02D8               	subwf	_V^(0+128),f
  8816  1C50                     i1l3410:
  8817                           
  8818                           ;main5a.c: 82:         INTCONbits.RBIF = 0;
  8819  1C50  100B               	bcf	11,0	;volatile
  8820  1C51                     i1l91:
  8821  1C51  0874               	movf	??_isr+4,w
  8822  1C52  008A               	movwf	10
  8823  1C53  0E73               	swapf	??_isr+3,w
  8824  1C54  0083               	movwf	3
  8825  1C55  0EFE               	swapf	btemp,f
  8826  1C56  0E7E               	swapf	btemp,w
  8827  1C57  0009               	retfie
  8828  1C58                     __end_of_isr:
  8829  007E                     btemp	set	126	;btemp
  8830  007E                     wtemp0	set	126
  8831                           
  8832                           	psect	intentry
  8833  0004                     __pintentry:	
  8834                           ;incstack = 0
  8835                           ; Regs used in _isr: [wreg+status,2+status,0]
  8836                           
  8837  0004                     interrupt_function:
  8838  007E                     saved_w	set	btemp
  8839  0004  00FE               	movwf	btemp
  8840  0005  0E03               	swapf	3,w
  8841  0006  00F3               	movwf	??_isr+3
  8842  0007  080A               	movf	10,w
  8843  0008  00F4               	movwf	??_isr+4
  8844  0009  160A  158A  2C1E   	ljmp	_isr
  8845                           
  8846                           	psect	config
  8847                           
  8848                           ;Config register CONFIG1 @ 0x2007
  8849                           ;	Oscillator Selection bits
  8850                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8851                           ;	Watchdog Timer Enable bit
  8852                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8853                           ;	Power-up Timer Enable bit
  8854                           ;	PWRTE = OFF, PWRT disabled
  8855                           ;	RE3/MCLR pin function select bit
  8856                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8857                           ;	Code Protection bit
  8858                           ;	CP = OFF, Program memory code protection is disabled
  8859                           ;	Data Code Protection bit
  8860                           ;	CPD = OFF, Data memory code protection is disabled
  8861                           ;	Brown Out Reset Selection bits
  8862                           ;	BOREN = OFF, BOR disabled
  8863                           ;	Internal External Switchover bit
  8864                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8865                           ;	Fail-Safe Clock Monitor Enabled bit
  8866                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8867                           ;	Low Voltage Programming Enable bit
  8868                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8869                           ;	In-Circuit Debugger Mode bit
  8870                           ;	DEBUG = 0x1, unprogrammed default
  8871  2007                     	org	8199
  8872  2007  20D4               	dw	8404
  8873                           
  8874                           ;Config register CONFIG2 @ 0x2008
  8875                           ;	Brown-out Reset Selection bit
  8876                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8877                           ;	Flash Program Memory Self Write Enable bits
  8878                           ;	WRT = OFF, Write protection off
  8879  2008                     	org	8200
  8880  2008  3FFF               	dw	16383
  8881                           
  8882                           	psect	text1_split_1
  8883  001E                     u7120:
  8884  001E                     l4074:
  8885  001E  1683               	bsf	3,5	;RP0=1, select bank1
  8886  001F  1303               	bcf	3,6	;RP1=0, select bank1
  8887  0020  0848               	movf	(sprintf@fval+3)^(0+128),w
  8888  0021  1283               	bcf	3,5	;RP0=0, select bank0
  8889  0022  1303               	bcf	3,6	;RP1=0, select bank0
  8890  0023  00A3               	movwf	___fleq@ff1+3
  8891  0024  1683               	bsf	3,5	;RP0=1, select bank1
  8892  0025  1303               	bcf	3,6	;RP1=0, select bank1
  8893  0026  0847               	movf	(sprintf@fval+2)^(0+128),w
  8894  0027  1283               	bcf	3,5	;RP0=0, select bank0
  8895  0028  1303               	bcf	3,6	;RP1=0, select bank0
  8896  0029  00A2               	movwf	___fleq@ff1+2
  8897  002A  1683               	bsf	3,5	;RP0=1, select bank1
  8898  002B  1303               	bcf	3,6	;RP1=0, select bank1
  8899  002C  0846               	movf	(sprintf@fval+1)^(0+128),w
  8900  002D  1283               	bcf	3,5	;RP0=0, select bank0
  8901  002E  1303               	bcf	3,6	;RP1=0, select bank0
  8902  002F  00A1               	movwf	___fleq@ff1+1
  8903  0030  1683               	bsf	3,5	;RP0=1, select bank1
  8904  0031  1303               	bcf	3,6	;RP1=0, select bank1
  8905  0032  0845               	movf	sprintf@fval^(0+128),w
  8906  0033  1283               	bcf	3,5	;RP0=0, select bank0
  8907  0034  1303               	bcf	3,6	;RP1=0, select bank0
  8908  0035  00A0               	movwf	___fleq@ff1
  8909  0036  3000               	movlw	0
  8910  0037  00A7               	movwf	___fleq@ff2+3
  8911  0038  3000               	movlw	0
  8912  0039  00A6               	movwf	___fleq@ff2+2
  8913  003A  3000               	movlw	0
  8914  003B  00A5               	movwf	___fleq@ff2+1
  8915  003C  3000               	movlw	0
  8916  003D  00A4               	movwf	___fleq@ff2
  8917  003E  160A  158A  24DA  120A  118A  	fcall	___fleq
  8918  0043  1803               	btfsc	3,0
  8919  0044  2846               	goto	u7131
  8920  0045  2847               	goto	u7130
  8921  0046                     u7131:
  8922  0046  2929               	goto	l4094
  8923  0047                     u7130:
  8924  0047                     l4076:
  8925  0047  1683               	bsf	3,5	;RP0=1, select bank1
  8926  0048  1303               	bcf	3,6	;RP1=0, select bank1
  8927  0049  0848               	movf	(sprintf@fval+3)^(0+128),w
  8928  004A  1283               	bcf	3,5	;RP0=0, select bank0
  8929  004B  1303               	bcf	3,6	;RP1=0, select bank0
  8930  004C  00DE               	movwf	___fltol@f1+3
  8931  004D  1683               	bsf	3,5	;RP0=1, select bank1
  8932  004E  1303               	bcf	3,6	;RP1=0, select bank1
  8933  004F  0847               	movf	(sprintf@fval+2)^(0+128),w
  8934  0050  1283               	bcf	3,5	;RP0=0, select bank0
  8935  0051  1303               	bcf	3,6	;RP1=0, select bank0
  8936  0052  00DD               	movwf	___fltol@f1+2
  8937  0053  1683               	bsf	3,5	;RP0=1, select bank1
  8938  0054  1303               	bcf	3,6	;RP1=0, select bank1
  8939  0055  0846               	movf	(sprintf@fval+1)^(0+128),w
  8940  0056  1283               	bcf	3,5	;RP0=0, select bank0
  8941  0057  1303               	bcf	3,6	;RP1=0, select bank0
  8942  0058  00DC               	movwf	___fltol@f1+1
  8943  0059  1683               	bsf	3,5	;RP0=1, select bank1
  8944  005A  1303               	bcf	3,6	;RP1=0, select bank1
  8945  005B  0845               	movf	sprintf@fval^(0+128),w
  8946  005C  1283               	bcf	3,5	;RP0=0, select bank0
  8947  005D  1303               	bcf	3,6	;RP1=0, select bank0
  8948  005E  00DB               	movwf	___fltol@f1
  8949  005F  120A  158A  2000  120A  118A  	fcall	___fltol
  8950  0064  1283               	bcf	3,5	;RP0=0, select bank0
  8951  0065  1303               	bcf	3,6	;RP1=0, select bank0
  8952  0066  085E               	movf	?___fltol+3,w
  8953  0067  045D               	iorwf	?___fltol+2,w
  8954  0068  045C               	iorwf	?___fltol+1,w
  8955  0069  045B               	iorwf	?___fltol,w
  8956  006A  1D03               	skipz
  8957  006B  286D               	goto	u7141
  8958  006C  286E               	goto	u7140
  8959  006D                     u7141:
  8960  006D  2929               	goto	l4094
  8961  006E                     u7140:
  8962  006E                     l4078:
  8963  006E  1683               	bsf	3,5	;RP0=1, select bank1
  8964  006F  1303               	bcf	3,6	;RP1=0, select bank1
  8965  0070  0840               	movf	(sprintf@eexp+1)^(0+128),w
  8966  0071  3A80               	xorlw	128
  8967  0072  00FF               	movwf	btemp+1
  8968  0073  3080               	movlw	128
  8969  0074  027F               	subwf	btemp+1,w
  8970  0075  1D03               	skipz
  8971  0076  2879               	goto	u7155
  8972  0077  3002               	movlw	2
  8973  0078  023F               	subwf	sprintf@eexp^(0+128),w
  8974  0079                     u7155:
  8975  0079  1C03               	skipc
  8976  007A  287C               	goto	u7151
  8977  007B  287D               	goto	u7150
  8978  007C                     u7151:
  8979  007C  2929               	goto	l4094
  8980  007D                     u7150:
  8981  007D                     l4080:
  8982                           
  8983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8984  007D  1683               	bsf	3,5	;RP0=1, select bank1
  8985  007E  1303               	bcf	3,6	;RP1=0, select bank1
  8986  007F  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  8987  0080  1283               	bcf	3,5	;RP0=0, select bank0
  8988  0081  1303               	bcf	3,6	;RP1=0, select bank0
  8989  0082  00A3               	movwf	___flge@ff1+3
  8990  0083  1683               	bsf	3,5	;RP0=1, select bank1
  8991  0084  1303               	bcf	3,6	;RP1=0, select bank1
  8992  0085  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  8993  0086  1283               	bcf	3,5	;RP0=0, select bank0
  8994  0087  1303               	bcf	3,6	;RP1=0, select bank0
  8995  0088  00A2               	movwf	___flge@ff1+2
  8996  0089  1683               	bsf	3,5	;RP0=1, select bank1
  8997  008A  1303               	bcf	3,6	;RP1=0, select bank1
  8998  008B  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  8999  008C  1283               	bcf	3,5	;RP0=0, select bank0
  9000  008D  1303               	bcf	3,6	;RP1=0, select bank0
  9001  008E  00A1               	movwf	___flge@ff1+1
  9002  008F  1683               	bsf	3,5	;RP0=1, select bank1
  9003  0090  1303               	bcf	3,6	;RP1=0, select bank1
  9004  0091  083B               	movf	sprintf@tmpval^(0+128),w
  9005  0092  1283               	bcf	3,5	;RP0=0, select bank0
  9006  0093  1303               	bcf	3,6	;RP1=0, select bank0
  9007  0094  00A0               	movwf	___flge@ff1
  9008  0095  3040               	movlw	64
  9009  0096  00A7               	movwf	___flge@ff2+3
  9010  0097  3089               	movlw	137
  9011  0098  00A6               	movwf	___flge@ff2+2
  9012  0099  3070               	movlw	112
  9013  009A  00A5               	movwf	___flge@ff2+1
  9014  009B  305F               	movlw	95
  9015  009C  00A4               	movwf	___flge@ff2
  9016  009D  160A  158A  275C  120A  118A  	fcall	___flge
  9017  00A2  1803               	btfsc	3,0
  9018  00A3  28A5               	goto	u7161
  9019  00A4  28A6               	goto	u7160
  9020  00A5                     u7161:
  9021  00A5  28AF               	goto	l4084
  9022  00A6                     u7160:
  9023  00A6                     l4082:
  9024                           
  9025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9026  00A6  30F7               	movlw	247
  9027  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  9028  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  9029  00A9  07BF               	addwf	sprintf@eexp^(0+128),f
  9030  00AA  1803               	skipnc
  9031  00AB  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  9032  00AC  30FF               	movlw	255
  9033  00AD  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  9034                           
  9035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9036  00AE  28B7               	goto	l4086
  9037  00AF                     l4084:
  9038                           
  9039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9040  00AF  30F8               	movlw	248
  9041  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  9042  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  9043  00B2  07BF               	addwf	sprintf@eexp^(0+128),f
  9044  00B3  1803               	skipnc
  9045  00B4  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  9046  00B5  30FF               	movlw	255
  9047  00B6  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  9048  00B7                     l4086:
  9049                           
  9050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9051  00B7  083F               	movf	sprintf@eexp^(0+128),w
  9052  00B8  120A  158A  2138  120A  118A  	fcall	_scale
  9053  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  9054  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  9055  00BF  084B               	movf	?_scale+3,w
  9056  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  9057  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  9058  00C2  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  9059  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  9060  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  9061  00C5  084A               	movf	?_scale+2,w
  9062  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  9063  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  9064  00C8  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  9065  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  9066  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  9067  00CB  0849               	movf	?_scale+1,w
  9068  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  9069  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  9070  00CE  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  9071  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  9072  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  9073  00D1  0848               	movf	?_scale,w
  9074  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  9075  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  9076  00D4  00BB               	movwf	sprintf@tmpval^(0+128)
  9077  00D5                     l4088:
  9078  00D5  0848               	movf	(sprintf@fval+3)^(0+128),w
  9079  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  9080  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  9081  00D8  00A3               	movwf	__div_to_l_@f1+3
  9082  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  9083  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  9084  00DB  0847               	movf	(sprintf@fval+2)^(0+128),w
  9085  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  9086  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  9087  00DE  00A2               	movwf	__div_to_l_@f1+2
  9088  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  9089  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  9090  00E1  0846               	movf	(sprintf@fval+1)^(0+128),w
  9091  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  9092  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  9093  00E4  00A1               	movwf	__div_to_l_@f1+1
  9094  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  9095  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  9096  00E7  0845               	movf	sprintf@fval^(0+128),w
  9097  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  9098  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  9099  00EA  00A0               	movwf	__div_to_l_@f1
  9100  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  9101  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  9102  00ED  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  9103  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  9104  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  9105  00F0  00A7               	movwf	__div_to_l_@f2+3
  9106  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  9107  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  9108  00F3  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  9109  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  9110  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  9111  00F6  00A6               	movwf	__div_to_l_@f2+2
  9112  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  9113  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  9114  00F9  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  9115  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  9116  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  9117  00FC  00A5               	movwf	__div_to_l_@f2+1
  9118  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  9119  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  9120  00FF  083B               	movf	sprintf@tmpval^(0+128),w
  9121  0100  1283               	bcf	3,5	;RP0=0, select bank0
  9122  0101  1303               	bcf	3,6	;RP1=0, select bank0
  9123  0102  00A4               	movwf	__div_to_l_@f2
  9124  0103  120A  118A  264E  120A  118A  	fcall	__div_to_l_
  9125  0108  1283               	bcf	3,5	;RP0=0, select bank0
  9126  0109  1303               	bcf	3,6	;RP1=0, select bank0
  9127  010A  0823               	movf	?__div_to_l_+3,w
  9128  010B  1683               	bsf	3,5	;RP0=1, select bank1
  9129  010C  1303               	bcf	3,6	;RP1=0, select bank1
  9130  010D  00BA               	movwf	(sprintf@val+3)^(0+128)
  9131  010E  1283               	bcf	3,5	;RP0=0, select bank0
  9132  010F  1303               	bcf	3,6	;RP1=0, select bank0
  9133  0110  0822               	movf	?__div_to_l_+2,w
  9134  0111  1683               	bsf	3,5	;RP0=1, select bank1
  9135  0112  1303               	bcf	3,6	;RP1=0, select bank1
  9136  0113  00B9               	movwf	(sprintf@val+2)^(0+128)
  9137  0114  1283               	bcf	3,5	;RP0=0, select bank0
  9138  0115  1303               	bcf	3,6	;RP1=0, select bank0
  9139  0116  0821               	movf	?__div_to_l_+1,w
  9140  0117  1683               	bsf	3,5	;RP0=1, select bank1
  9141  0118  1303               	bcf	3,6	;RP1=0, select bank1
  9142  0119  00B8               	movwf	(sprintf@val+1)^(0+128)
  9143  011A  1283               	bcf	3,5	;RP0=0, select bank0
  9144  011B  1303               	bcf	3,6	;RP1=0, select bank0
  9145  011C  0820               	movf	?__div_to_l_,w
  9146  011D  1683               	bsf	3,5	;RP0=1, select bank1
  9147  011E  1303               	bcf	3,6	;RP1=0, select bank1
  9148  011F  00B7               	movwf	sprintf@val^(0+128)
  9149  0120                     l4092:
  9150                           
  9151                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9152  0120  3000               	movlw	0
  9153  0121  00C8               	movwf	(sprintf@fval+3)^(0+128)
  9154  0122  3000               	movlw	0
  9155  0123  00C7               	movwf	(sprintf@fval+2)^(0+128)
  9156  0124  3000               	movlw	0
  9157  0125  00C6               	movwf	(sprintf@fval+1)^(0+128)
  9158  0126  3000               	movlw	0
  9159  0127  00C5               	movwf	sprintf@fval^(0+128)
  9160                           
  9161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9162  0128  29AB               	goto	l4100
  9163  0129                     l4094:
  9164                           
  9165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9166  0129  1683               	bsf	3,5	;RP0=1, select bank1
  9167  012A  1303               	bcf	3,6	;RP1=0, select bank1
  9168  012B  0848               	movf	(sprintf@fval+3)^(0+128),w
  9169  012C  1283               	bcf	3,5	;RP0=0, select bank0
  9170  012D  1303               	bcf	3,6	;RP1=0, select bank0
  9171  012E  00DE               	movwf	___fltol@f1+3
  9172  012F  1683               	bsf	3,5	;RP0=1, select bank1
  9173  0130  1303               	bcf	3,6	;RP1=0, select bank1
  9174  0131  0847               	movf	(sprintf@fval+2)^(0+128),w
  9175  0132  1283               	bcf	3,5	;RP0=0, select bank0
  9176  0133  1303               	bcf	3,6	;RP1=0, select bank0
  9177  0134  00DD               	movwf	___fltol@f1+2
  9178  0135  1683               	bsf	3,5	;RP0=1, select bank1
  9179  0136  1303               	bcf	3,6	;RP1=0, select bank1
  9180  0137  0846               	movf	(sprintf@fval+1)^(0+128),w
  9181  0138  1283               	bcf	3,5	;RP0=0, select bank0
  9182  0139  1303               	bcf	3,6	;RP1=0, select bank0
  9183  013A  00DC               	movwf	___fltol@f1+1
  9184  013B  1683               	bsf	3,5	;RP0=1, select bank1
  9185  013C  1303               	bcf	3,6	;RP1=0, select bank1
  9186  013D  0845               	movf	sprintf@fval^(0+128),w
  9187  013E  1283               	bcf	3,5	;RP0=0, select bank0
  9188  013F  1303               	bcf	3,6	;RP1=0, select bank0
  9189  0140  00DB               	movwf	___fltol@f1
  9190  0141  120A  158A  2000  120A  118A  	fcall	___fltol
  9191  0146  1283               	bcf	3,5	;RP0=0, select bank0
  9192  0147  1303               	bcf	3,6	;RP1=0, select bank0
  9193  0148  085E               	movf	?___fltol+3,w
  9194  0149  1683               	bsf	3,5	;RP0=1, select bank1
  9195  014A  1303               	bcf	3,6	;RP1=0, select bank1
  9196  014B  00BA               	movwf	(sprintf@val+3)^(0+128)
  9197  014C  1283               	bcf	3,5	;RP0=0, select bank0
  9198  014D  1303               	bcf	3,6	;RP1=0, select bank0
  9199  014E  085D               	movf	?___fltol+2,w
  9200  014F  1683               	bsf	3,5	;RP0=1, select bank1
  9201  0150  1303               	bcf	3,6	;RP1=0, select bank1
  9202  0151  00B9               	movwf	(sprintf@val+2)^(0+128)
  9203  0152  1283               	bcf	3,5	;RP0=0, select bank0
  9204  0153  1303               	bcf	3,6	;RP1=0, select bank0
  9205  0154  085C               	movf	?___fltol+1,w
  9206  0155  1683               	bsf	3,5	;RP0=1, select bank1
  9207  0156  1303               	bcf	3,6	;RP1=0, select bank1
  9208  0157  00B8               	movwf	(sprintf@val+1)^(0+128)
  9209  0158  1283               	bcf	3,5	;RP0=0, select bank0
  9210  0159  1303               	bcf	3,6	;RP1=0, select bank0
  9211  015A  085B               	movf	?___fltol,w
  9212  015B  1683               	bsf	3,5	;RP0=1, select bank1
  9213  015C  1303               	bcf	3,6	;RP1=0, select bank1
  9214  015D  00B7               	movwf	sprintf@val^(0+128)
  9215  015E                     l4096:
  9216                           
  9217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9218  015E  083A               	movf	(sprintf@val+3)^(0+128),w
  9219  015F  1283               	bcf	3,5	;RP0=0, select bank0
  9220  0160  1303               	bcf	3,6	;RP1=0, select bank0
  9221  0161  00A3               	movwf	___xxtofl@val+3
  9222  0162  1683               	bsf	3,5	;RP0=1, select bank1
  9223  0163  1303               	bcf	3,6	;RP1=0, select bank1
  9224  0164  0839               	movf	(sprintf@val+2)^(0+128),w
  9225  0165  1283               	bcf	3,5	;RP0=0, select bank0
  9226  0166  1303               	bcf	3,6	;RP1=0, select bank0
  9227  0167  00A2               	movwf	___xxtofl@val+2
  9228  0168  1683               	bsf	3,5	;RP0=1, select bank1
  9229  0169  1303               	bcf	3,6	;RP1=0, select bank1
  9230  016A  0838               	movf	(sprintf@val+1)^(0+128),w
  9231  016B  1283               	bcf	3,5	;RP0=0, select bank0
  9232  016C  1303               	bcf	3,6	;RP1=0, select bank0
  9233  016D  00A1               	movwf	___xxtofl@val+1
  9234  016E  1683               	bsf	3,5	;RP0=1, select bank1
  9235  016F  1303               	bcf	3,6	;RP1=0, select bank1
  9236  0170  0837               	movf	sprintf@val^(0+128),w
  9237  0171  1283               	bcf	3,5	;RP0=0, select bank0
  9238  0172  1303               	bcf	3,6	;RP1=0, select bank0
  9239  0173  00A0               	movwf	___xxtofl@val
  9240  0174  3000               	movlw	0
  9241  0175  120A  158A  207C  120A  118A  	fcall	___xxtofl
  9242  017A  1283               	bcf	3,5	;RP0=0, select bank0
  9243  017B  1303               	bcf	3,6	;RP1=0, select bank0
  9244  017C  0823               	movf	?___xxtofl+3,w
  9245  017D  1683               	bsf	3,5	;RP0=1, select bank1
  9246  017E  1303               	bcf	3,6	;RP1=0, select bank1
  9247  017F  00A3               	movwf	(___flsub@a+3)^(0+128)
  9248  0180  1283               	bcf	3,5	;RP0=0, select bank0
  9249  0181  1303               	bcf	3,6	;RP1=0, select bank0
  9250  0182  0822               	movf	?___xxtofl+2,w
  9251  0183  1683               	bsf	3,5	;RP0=1, select bank1
  9252  0184  1303               	bcf	3,6	;RP1=0, select bank1
  9253  0185  00A2               	movwf	(___flsub@a+2)^(0+128)
  9254  0186  1283               	bcf	3,5	;RP0=0, select bank0
  9255  0187  1303               	bcf	3,6	;RP1=0, select bank0
  9256  0188  0821               	movf	?___xxtofl+1,w
  9257  0189  1683               	bsf	3,5	;RP0=1, select bank1
  9258  018A  1303               	bcf	3,6	;RP1=0, select bank1
  9259  018B  00A1               	movwf	(___flsub@a+1)^(0+128)
  9260  018C  1283               	bcf	3,5	;RP0=0, select bank0
  9261  018D  1303               	bcf	3,6	;RP1=0, select bank0
  9262  018E  0820               	movf	?___xxtofl,w
  9263  018F  1683               	bsf	3,5	;RP0=1, select bank1
  9264  0190  1303               	bcf	3,6	;RP1=0, select bank1
  9265  0191  00A0               	movwf	___flsub@a^(0+128)
  9266  0192  0848               	movf	(sprintf@fval+3)^(0+128),w
  9267  0193  00A7               	movwf	(___flsub@b+3)^(0+128)
  9268  0194  0847               	movf	(sprintf@fval+2)^(0+128),w
  9269  0195  00A6               	movwf	(___flsub@b+2)^(0+128)
  9270  0196  0846               	movf	(sprintf@fval+1)^(0+128),w
  9271  0197  00A5               	movwf	(___flsub@b+1)^(0+128)
  9272  0198  0845               	movf	sprintf@fval^(0+128),w
  9273  0199  00A4               	movwf	___flsub@b^(0+128)
  9274  019A  160A  158A  252A  120A  118A  	fcall	___flsub
  9275  019F  1683               	bsf	3,5	;RP0=1, select bank1
  9276  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  9277  01A1  0823               	movf	(?___flsub+3)^(0+128),w
  9278  01A2  00C8               	movwf	(sprintf@fval+3)^(0+128)
  9279  01A3  0822               	movf	(?___flsub+2)^(0+128),w
  9280  01A4  00C7               	movwf	(sprintf@fval+2)^(0+128)
  9281  01A5  0821               	movf	(?___flsub+1)^(0+128),w
  9282  01A6  00C6               	movwf	(sprintf@fval+1)^(0+128)
  9283  01A7  0820               	movf	?___flsub^(0+128),w
  9284  01A8  00C5               	movwf	sprintf@fval^(0+128)
  9285  01A9                     l4098:
  9286                           
  9287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9288  01A9  01BF               	clrf	sprintf@eexp^(0+128)
  9289  01AA  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  9290  01AB                     l4100:
  9291                           
  9292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9293  01AB  01CC               	clrf	sprintf@c^(0+128)
  9294  01AC  0ACC               	incf	sprintf@c^(0+128),f
  9295  01AD                     l4106:
  9296                           
  9297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9298  01AD  084C               	movf	sprintf@c^(0+128),w
  9299  01AE  00AD               	movwf	??_sprintf^(0+128)
  9300  01AF  3001               	movlw	1
  9301  01B0                     u7175:
  9302  01B0  1003               	clrc
  9303  01B1  0DAD               	rlf	??_sprintf^(0+128),f
  9304  01B2  3EFF               	addlw	-1
  9305  01B3  1D03               	skipz
  9306  01B4  29B0               	goto	u7175
  9307  01B5  1003               	clrc
  9308  01B6  0D2D               	rlf	??_sprintf^(0+128),w
  9309  01B7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9310  01B8  0084               	movwf	4
  9311  01B9  160A  158A  2000  120A  118A  	fcall	stringdir
  9312  01BE  00AE               	movwf	(??_sprintf+1)^(0+128)
  9313  01BF  160A  158A  2000  120A  118A  	fcall	stringdir
  9314  01C4  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  9315  01C5  160A  158A  2000  120A  118A  	fcall	stringdir
  9316  01CA  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  9317  01CB  160A  158A  2000  120A  118A  	fcall	stringdir
  9318  01D0  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  9319  01D1  0831               	movf	(??_sprintf+4)^(0+128),w
  9320  01D2  023A               	subwf	(sprintf@val+3)^(0+128),w
  9321  01D3  1D03               	skipz
  9322  01D4  29DF               	goto	u7185
  9323  01D5  0830               	movf	(??_sprintf+3)^(0+128),w
  9324  01D6  0239               	subwf	(sprintf@val+2)^(0+128),w
  9325  01D7  1D03               	skipz
  9326  01D8  29DF               	goto	u7185
  9327  01D9  082F               	movf	(??_sprintf+2)^(0+128),w
  9328  01DA  0238               	subwf	(sprintf@val+1)^(0+128),w
  9329  01DB  1D03               	skipz
  9330  01DC  29DF               	goto	u7185
  9331  01DD  082E               	movf	(??_sprintf+1)^(0+128),w
  9332  01DE  0237               	subwf	sprintf@val^(0+128),w
  9333  01DF                     u7185:
  9334  01DF  1803               	skipnc
  9335  01E0  29E2               	goto	u7181
  9336  01E1  29E3               	goto	u7180
  9337  01E2                     u7181:
  9338  01E2  29E4               	goto	l4110
  9339  01E3                     u7180:
  9340  01E3  29EE               	goto	l4112
  9341  01E4                     l4110:
  9342  01E4  3001               	movlw	1
  9343  01E5  00AD               	movwf	??_sprintf^(0+128)
  9344  01E6  082D               	movf	??_sprintf^(0+128),w
  9345  01E7  07CC               	addwf	sprintf@c^(0+128),f
  9346  01E8  300A               	movlw	10
  9347  01E9  064C               	xorwf	sprintf@c^(0+128),w
  9348  01EA  1D03               	btfss	3,2
  9349  01EB  29ED               	goto	u7191
  9350  01EC  29EE               	goto	u7190
  9351  01ED                     u7191:
  9352  01ED  29AD               	goto	l4106
  9353  01EE                     u7190:
  9354  01EE                     l4112:
  9355                           
  9356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9357  01EE  084C               	movf	sprintf@c^(0+128),w
  9358  01EF  0749               	addwf	sprintf@prec^(0+128),w
  9359  01F0  00AD               	movwf	??_sprintf^(0+128)
  9360  01F1  084A               	movf	(sprintf@prec+1)^(0+128),w
  9361  01F2  1803               	skipnc
  9362  01F3  0A4A               	incf	(sprintf@prec+1)^(0+128),w
  9363  01F4  00AE               	movwf	(??_sprintf^(0+128)+1)
  9364  01F5  083F               	movf	sprintf@eexp^(0+128),w
  9365  01F6  072D               	addwf	??_sprintf^(0+128),w
  9366  01F7  00AF               	movwf	(??_sprintf+2)^(0+128)
  9367  01F8  0840               	movf	(sprintf@eexp+1)^(0+128),w
  9368  01F9  1803               	skipnc
  9369  01FA  0A40               	incf	(sprintf@eexp+1)^(0+128),w
  9370  01FB  072E               	addwf	(??_sprintf+1)^(0+128),w
  9371  01FC  00B0               	movwf	(??_sprintf+3)^(0+128)
  9372  01FD  082F               	movf	(??_sprintf+2)^(0+128),w
  9373  01FE  02C3               	subwf	sprintf@width^(0+128),f
  9374  01FF  0830               	movf	(??_sprintf+3)^(0+128),w
  9375  0200  1C03               	skipc
  9376  0201  03C4               	decf	(sprintf@width+1)^(0+128),f
  9377  0202  02C4               	subwf	(sprintf@width+1)^(0+128),f
  9378                           
  9379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9380  0203  0849               	movf	sprintf@prec^(0+128),w
  9381  0204  044A               	iorwf	(sprintf@prec+1)^(0+128),w
  9382  0205  1903               	btfsc	3,2
  9383  0206  2A08               	goto	u7201
  9384  0207  2A09               	goto	u7200
  9385  0208                     u7201:
  9386  0208  2A0F               	goto	l4116
  9387  0209                     u7200:
  9388  0209                     l4114:
  9389                           
  9390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9391  0209  30FF               	movlw	255
  9392  020A  07C3               	addwf	sprintf@width^(0+128),f
  9393  020B  1803               	skipnc
  9394  020C  0AC4               	incf	(sprintf@width+1)^(0+128),f
  9395  020D  30FF               	movlw	255
  9396  020E  07C4               	addwf	(sprintf@width+1)^(0+128),f
  9397  020F                     l4116:
  9398                           
  9399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9400  020F  3003               	movlw	3
  9401  0210  0541               	andwf	sprintf@flag^(0+128),w
  9402  0211  00AD               	movwf	??_sprintf^(0+128)
  9403  0212  3000               	movlw	0
  9404  0213  0542               	andwf	(sprintf@flag+1)^(0+128),w
  9405  0214  00AE               	movwf	(??_sprintf+1)^(0+128)
  9406  0215  082D               	movf	??_sprintf^(0+128),w
  9407  0216  042E               	iorwf	(??_sprintf^(0+128)+1),w
  9408  0217  1903               	btfsc	3,2
  9409  0218  2A1A               	goto	u7211
  9410  0219  2A1B               	goto	u7210
  9411  021A                     u7211:
  9412  021A  2A21               	goto	l4120
  9413  021B                     u7210:
  9414  021B                     l4118:
  9415                           
  9416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9417  021B  30FF               	movlw	255
  9418  021C  07C3               	addwf	sprintf@width^(0+128),f
  9419  021D  1803               	skipnc
  9420  021E  0AC4               	incf	(sprintf@width+1)^(0+128),f
  9421  021F  30FF               	movlw	255
  9422  0220  07C4               	addwf	(sprintf@width+1)^(0+128),f
  9423  0221                     l4120:
  9424                           
  9425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
  9426  0221  1D41               	btfss	sprintf@flag^(0+128),2
  9427  0222  2A24               	goto	u7221
  9428  0223  2A25               	goto	u7220
  9429  0224                     u7221:
  9430  0224  2A71               	goto	l4142
  9431  0225                     u7220:
  9432  0225                     l4122:
  9433                           
  9434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
  9435  0225  3003               	movlw	3
  9436  0226  0541               	andwf	sprintf@flag^(0+128),w
  9437  0227  00AD               	movwf	??_sprintf^(0+128)
  9438  0228  3000               	movlw	0
  9439  0229  0542               	andwf	(sprintf@flag+1)^(0+128),w
  9440  022A  00AE               	movwf	(??_sprintf+1)^(0+128)
  9441  022B  082D               	movf	??_sprintf^(0+128),w
  9442  022C  042E               	iorwf	(??_sprintf^(0+128)+1),w
  9443  022D  1903               	btfsc	3,2
  9444  022E  2A30               	goto	u7231
  9445  022F  2A31               	goto	u7230
  9446  0230                     u7231:
  9447  0230  2A50               	goto	l4134
  9448  0231                     u7230:
  9449  0231                     l4124:
  9450                           
  9451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
  9452  0231  302D               	movlw	45
  9453  0232  00AD               	movwf	??_sprintf^(0+128)
  9454  0233  084B               	movf	sprintf@sp^(0+128),w
  9455  0234  0084               	movwf	4
  9456  0235  082D               	movf	??_sprintf^(0+128),w
  9457  0236  1383               	bcf	3,7	;select IRP bank0
  9458  0237  0080               	movwf	0
  9459  0238                     l4126:
  9460  0238  3001               	movlw	1
  9461  0239  00AD               	movwf	??_sprintf^(0+128)
  9462  023A  082D               	movf	??_sprintf^(0+128),w
  9463  023B  07CB               	addwf	sprintf@sp^(0+128),f
  9464  023C  2A50               	goto	l4134
  9465  023D                     l4128:
  9466                           
  9467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
  9468  023D  3030               	movlw	48
  9469  023E  1683               	bsf	3,5	;RP0=1, select bank1
  9470  023F  1303               	bcf	3,6	;RP1=0, select bank1
  9471  0240  00AD               	movwf	??_sprintf^(0+128)
  9472  0241  084B               	movf	sprintf@sp^(0+128),w
  9473  0242  0084               	movwf	4
  9474  0243  082D               	movf	??_sprintf^(0+128),w
  9475  0244  1383               	bcf	3,7	;select IRP bank0
  9476  0245  0080               	movwf	0
  9477  0246                     l4130:
  9478  0246  3001               	movlw	1
  9479  0247  00AD               	movwf	??_sprintf^(0+128)
  9480  0248  082D               	movf	??_sprintf^(0+128),w
  9481  0249  07CB               	addwf	sprintf@sp^(0+128),f
  9482  024A                     l4132:
  9483                           
  9484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
  9485  024A  30FF               	movlw	255
  9486  024B  07C3               	addwf	sprintf@width^(0+128),f
  9487  024C  1803               	skipnc
  9488  024D  0AC4               	incf	(sprintf@width+1)^(0+128),f
  9489  024E  30FF               	movlw	255
  9490  024F  07C4               	addwf	(sprintf@width+1)^(0+128),f
  9491  0250                     l4134:
  9492                           
  9493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
  9494  0250  0844               	movf	(sprintf@width+1)^(0+128),w
  9495  0251  3A80               	xorlw	128
  9496  0252  00FF               	movwf	btemp+1
  9497  0253  3080               	movlw	128
  9498  0254  027F               	subwf	btemp+1,w
  9499  0255  1D03               	skipz
  9500  0256  2A59               	goto	u7245
  9501  0257  3001               	movlw	1
  9502  0258  0243               	subwf	sprintf@width^(0+128),w
  9503  0259                     u7245:
  9504  0259  1803               	skipnc
  9505  025A  2A5C               	goto	u7241
  9506  025B  2A5D               	goto	u7240
  9507  025C                     u7241:
  9508  025C  2A3D               	goto	l4128
  9509  025D                     u7240:
  9510  025D  2B3E               	goto	l303
  9511  025E                     l4136:
  9512                           
  9513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9514  025E  3020               	movlw	32
  9515  025F  1683               	bsf	3,5	;RP0=1, select bank1
  9516  0260  1303               	bcf	3,6	;RP1=0, select bank1
  9517  0261  00AD               	movwf	??_sprintf^(0+128)
  9518  0262  084B               	movf	sprintf@sp^(0+128),w
  9519  0263  0084               	movwf	4
  9520  0264  082D               	movf	??_sprintf^(0+128),w
  9521  0265  1383               	bcf	3,7	;select IRP bank0
  9522  0266  0080               	movwf	0
  9523  0267                     l4138:
  9524  0267  3001               	movlw	1
  9525  0268  00AD               	movwf	??_sprintf^(0+128)
  9526  0269  082D               	movf	??_sprintf^(0+128),w
  9527  026A  07CB               	addwf	sprintf@sp^(0+128),f
  9528  026B                     l4140:
  9529                           
  9530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
  9531  026B  30FF               	movlw	255
  9532  026C  07C3               	addwf	sprintf@width^(0+128),f
  9533  026D  1803               	skipnc
  9534  026E  0AC4               	incf	(sprintf@width+1)^(0+128),f
  9535  026F  30FF               	movlw	255
  9536  0270  07C4               	addwf	(sprintf@width+1)^(0+128),f
  9537  0271                     l4142:
  9538                           
  9539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9540  0271  0844               	movf	(sprintf@width+1)^(0+128),w
  9541  0272  3A80               	xorlw	128
  9542  0273  00FF               	movwf	btemp+1
  9543  0274  3080               	movlw	128
  9544  0275  027F               	subwf	btemp+1,w
  9545  0276  1D03               	skipz
  9546  0277  2A7A               	goto	u7255
  9547  0278  3001               	movlw	1
  9548  0279  0243               	subwf	sprintf@width^(0+128),w
  9549  027A                     u7255:
  9550  027A  1803               	skipnc
  9551  027B  2A7D               	goto	u7251
  9552  027C  2A7E               	goto	u7250
  9553  027D                     u7251:
  9554  027D  2A5E               	goto	l4136
  9555  027E                     u7250:
  9556  027E                     l4144:
  9557                           
  9558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9559  027E  3003               	movlw	3
  9560  027F  1683               	bsf	3,5	;RP0=1, select bank1
  9561  0280  1303               	bcf	3,6	;RP1=0, select bank1
  9562  0281  0541               	andwf	sprintf@flag^(0+128),w
  9563  0282  00AD               	movwf	??_sprintf^(0+128)
  9564  0283  3000               	movlw	0
  9565  0284  0542               	andwf	(sprintf@flag+1)^(0+128),w
  9566  0285  00AE               	movwf	(??_sprintf+1)^(0+128)
  9567  0286  082D               	movf	??_sprintf^(0+128),w
  9568  0287  042E               	iorwf	(??_sprintf^(0+128)+1),w
  9569  0288  1903               	btfsc	3,2
  9570  0289  2A8B               	goto	u7261
  9571  028A  2A8C               	goto	u7260
  9572  028B                     u7261:
  9573  028B  2B3E               	goto	l303
  9574  028C                     u7260:
  9575  028C                     l4146:
  9576                           
  9577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9578  028C  302D               	movlw	45
  9579  028D  00AD               	movwf	??_sprintf^(0+128)
  9580  028E  084B               	movf	sprintf@sp^(0+128),w
  9581  028F  0084               	movwf	4
  9582  0290  082D               	movf	??_sprintf^(0+128),w
  9583  0291  1383               	bcf	3,7	;select IRP bank0
  9584  0292  0080               	movwf	0
  9585  0293                     l4148:
  9586  0293  3001               	movlw	1
  9587  0294  00AD               	movwf	??_sprintf^(0+128)
  9588  0295  082D               	movf	??_sprintf^(0+128),w
  9589  0296  07CB               	addwf	sprintf@sp^(0+128),f
  9590  0297  2B3E               	goto	l303
  9591  0298                     l4150:
  9592                           
  9593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9594  0298  084C               	movf	sprintf@c^(0+128),w
  9595  0299  00AD               	movwf	??_sprintf^(0+128)
  9596  029A  3001               	movlw	1
  9597  029B                     u7275:
  9598  029B  1003               	clrc
  9599  029C  0DAD               	rlf	??_sprintf^(0+128),f
  9600  029D  3EFF               	addlw	-1
  9601  029E  1D03               	skipz
  9602  029F  2A9B               	goto	u7275
  9603  02A0  1003               	clrc
  9604  02A1  0D2D               	rlf	??_sprintf^(0+128),w
  9605  02A2  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9606  02A3  0084               	movwf	4
  9607  02A4  160A  158A  2000  120A  118A  	fcall	stringdir
  9608  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  9609  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  9610  02AB  00A0               	movwf	___lldiv@divisor
  9611  02AC  160A  158A  2000  120A  118A  	fcall	stringdir
  9612  02B1  00A1               	movwf	___lldiv@divisor+1
  9613  02B2  160A  158A  2000  120A  118A  	fcall	stringdir
  9614  02B7  00A2               	movwf	___lldiv@divisor+2
  9615  02B8  160A  158A  2000  120A  118A  	fcall	stringdir
  9616  02BD  00A3               	movwf	___lldiv@divisor+3
  9617  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  9618  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  9619  02C0  083A               	movf	(sprintf@val+3)^(0+128),w
  9620  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  9621  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  9622  02C3  00A7               	movwf	___lldiv@dividend+3
  9623  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  9624  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  9625  02C6  0839               	movf	(sprintf@val+2)^(0+128),w
  9626  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  9627  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  9628  02C9  00A6               	movwf	___lldiv@dividend+2
  9629  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  9630  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  9631  02CC  0838               	movf	(sprintf@val+1)^(0+128),w
  9632  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  9633  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  9634  02CF  00A5               	movwf	___lldiv@dividend+1
  9635  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  9636  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  9637  02D2  0837               	movf	sprintf@val^(0+128),w
  9638  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  9639  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  9640  02D5  00A4               	movwf	___lldiv@dividend
  9641  02D6  160A  158A  268B  120A  118A  	fcall	___lldiv
  9642  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  9643  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  9644  02DD  0823               	movf	?___lldiv+3,w
  9645  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  9646  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  9647  02E0  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  9648  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  9649  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  9650  02E3  0822               	movf	?___lldiv+2,w
  9651  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  9652  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  9653  02E6  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  9654  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  9655  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  9656  02E9  0821               	movf	?___lldiv+1,w
  9657  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  9658  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  9659  02EC  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  9660  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  9661  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  9662  02EF  0820               	movf	?___lldiv,w
  9663  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  9664  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  9665  02F2  00BB               	movwf	sprintf@tmpval^(0+128)
  9666  02F3                     l4152:
  9667                           
  9668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9669  02F3  3000               	movlw	0
  9670  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  9671  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  9672  02F6  00A3               	movwf	___llmod@divisor+3
  9673  02F7  3000               	movlw	0
  9674  02F8  00A2               	movwf	___llmod@divisor+2
  9675  02F9  3000               	movlw	0
  9676  02FA  00A1               	movwf	___llmod@divisor+1
  9677  02FB  300A               	movlw	10
  9678  02FC  00A0               	movwf	___llmod@divisor
  9679  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  9680  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  9681  02FF  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  9682  0300  1283               	bcf	3,5	;RP0=0, select bank0
  9683  0301  1303               	bcf	3,6	;RP1=0, select bank0
  9684  0302  00A7               	movwf	___llmod@dividend+3
  9685  0303  1683               	bsf	3,5	;RP0=1, select bank1
  9686  0304  1303               	bcf	3,6	;RP1=0, select bank1
  9687  0305  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  9688  0306  1283               	bcf	3,5	;RP0=0, select bank0
  9689  0307  1303               	bcf	3,6	;RP1=0, select bank0
  9690  0308  00A6               	movwf	___llmod@dividend+2
  9691  0309  1683               	bsf	3,5	;RP0=1, select bank1
  9692  030A  1303               	bcf	3,6	;RP1=0, select bank1
  9693  030B  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  9694  030C  1283               	bcf	3,5	;RP0=0, select bank0
  9695  030D  1303               	bcf	3,6	;RP1=0, select bank0
  9696  030E  00A5               	movwf	___llmod@dividend+1
  9697  030F  1683               	bsf	3,5	;RP0=1, select bank1
  9698  0310  1303               	bcf	3,6	;RP1=0, select bank1
  9699  0311  083B               	movf	sprintf@tmpval^(0+128),w
  9700  0312  1283               	bcf	3,5	;RP0=0, select bank0
  9701  0313  1303               	bcf	3,6	;RP1=0, select bank0
  9702  0314  00A4               	movwf	___llmod@dividend
  9703  0315  160A  158A  257A  120A  118A  	fcall	___llmod
  9704  031A  1283               	bcf	3,5	;RP0=0, select bank0
  9705  031B  1303               	bcf	3,6	;RP1=0, select bank0
  9706  031C  0823               	movf	?___llmod+3,w
  9707  031D  1683               	bsf	3,5	;RP0=1, select bank1
  9708  031E  1303               	bcf	3,6	;RP1=0, select bank1
  9709  031F  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  9710  0320  1283               	bcf	3,5	;RP0=0, select bank0
  9711  0321  1303               	bcf	3,6	;RP1=0, select bank0
  9712  0322  0822               	movf	?___llmod+2,w
  9713  0323  1683               	bsf	3,5	;RP0=1, select bank1
  9714  0324  1303               	bcf	3,6	;RP1=0, select bank1
  9715  0325  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  9716  0326  1283               	bcf	3,5	;RP0=0, select bank0
  9717  0327  1303               	bcf	3,6	;RP1=0, select bank0
  9718  0328  0821               	movf	?___llmod+1,w
  9719  0329  1683               	bsf	3,5	;RP0=1, select bank1
  9720  032A  1303               	bcf	3,6	;RP1=0, select bank1
  9721  032B  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  9722  032C  1283               	bcf	3,5	;RP0=0, select bank0
  9723  032D  1303               	bcf	3,6	;RP1=0, select bank0
  9724  032E  0820               	movf	?___llmod,w
  9725  032F  1683               	bsf	3,5	;RP0=1, select bank1
  9726  0330  1303               	bcf	3,6	;RP1=0, select bank1
  9727  0331  00BB               	movwf	sprintf@tmpval^(0+128)
  9728  0332                     l4154:
  9729                           
  9730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9731  0332  083B               	movf	sprintf@tmpval^(0+128),w
  9732  0333  3E30               	addlw	48
  9733  0334  00AD               	movwf	??_sprintf^(0+128)
  9734  0335  084B               	movf	sprintf@sp^(0+128),w
  9735  0336  0084               	movwf	4
  9736  0337  082D               	movf	??_sprintf^(0+128),w
  9737  0338  1383               	bcf	3,7	;select IRP bank0
  9738  0339  0080               	movwf	0
  9739  033A  3001               	movlw	1
  9740  033B  00AD               	movwf	??_sprintf^(0+128)
  9741  033C  082D               	movf	??_sprintf^(0+128),w
  9742  033D  07CB               	addwf	sprintf@sp^(0+128),f
  9743  033E                     l303:	
  9744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9745                           
  9746                           
  9747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9748  033E  3001               	movlw	1
  9749  033F  1683               	bsf	3,5	;RP0=1, select bank1
  9750  0340  1303               	bcf	3,6	;RP1=0, select bank1
  9751  0341  02CC               	subwf	sprintf@c^(0+128),f
  9752  0342  0A4C               	incf	sprintf@c^(0+128),w
  9753  0343  1D03               	btfss	3,2
  9754  0344  2B46               	goto	u7281
  9755  0345  2B47               	goto	u7280
  9756  0346                     u7281:
  9757  0346  2A98               	goto	l4150
  9758  0347                     u7280:
  9759  0347  2B5B               	goto	l4162
  9760  0348                     l4156:
  9761                           
  9762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9763  0348  3030               	movlw	48
  9764  0349  1683               	bsf	3,5	;RP0=1, select bank1
  9765  034A  1303               	bcf	3,6	;RP1=0, select bank1
  9766  034B  00AD               	movwf	??_sprintf^(0+128)
  9767  034C  084B               	movf	sprintf@sp^(0+128),w
  9768  034D  0084               	movwf	4
  9769  034E  082D               	movf	??_sprintf^(0+128),w
  9770  034F  1383               	bcf	3,7	;select IRP bank0
  9771  0350  0080               	movwf	0
  9772  0351                     l4158:
  9773  0351  3001               	movlw	1
  9774  0352  00AD               	movwf	??_sprintf^(0+128)
  9775  0353  082D               	movf	??_sprintf^(0+128),w
  9776  0354  07CB               	addwf	sprintf@sp^(0+128),f
  9777  0355                     l4160:
  9778                           
  9779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9780  0355  30FF               	movlw	255
  9781  0356  07BF               	addwf	sprintf@eexp^(0+128),f
  9782  0357  1803               	skipnc
  9783  0358  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  9784  0359  30FF               	movlw	255
  9785  035A  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  9786  035B                     l4162:
  9787                           
  9788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9789  035B  0840               	movf	(sprintf@eexp+1)^(0+128),w
  9790  035C  3A80               	xorlw	128
  9791  035D  00FF               	movwf	btemp+1
  9792  035E  3080               	movlw	128
  9793  035F  027F               	subwf	btemp+1,w
  9794  0360  1D03               	skipz
  9795  0361  2B64               	goto	u7295
  9796  0362  3001               	movlw	1
  9797  0363  023F               	subwf	sprintf@eexp^(0+128),w
  9798  0364                     u7295:
  9799  0364  1803               	skipnc
  9800  0365  2B67               	goto	u7291
  9801  0366  2B68               	goto	u7290
  9802  0367                     u7291:
  9803  0367  2B48               	goto	l4156
  9804  0368                     u7290:
  9805  0368                     l4164:
  9806                           
  9807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9808  0368  1683               	bsf	3,5	;RP0=1, select bank1
  9809  0369  1303               	bcf	3,6	;RP1=0, select bank1
  9810  036A  084A               	movf	(sprintf@prec+1)^(0+128),w
  9811  036B  3A80               	xorlw	128
  9812  036C  00FF               	movwf	btemp+1
  9813  036D  3080               	movlw	128
  9814  036E  027F               	subwf	btemp+1,w
  9815  036F  1D03               	skipz
  9816  0370  2B73               	goto	u7305
  9817  0371  3009               	movlw	9
  9818  0372  0249               	subwf	sprintf@prec^(0+128),w
  9819  0373                     u7305:
  9820  0373  1C03               	skipc
  9821  0374  2B76               	goto	u7301
  9822  0375  2B77               	goto	u7300
  9823  0376                     u7301:
  9824  0376  2B7E               	goto	l4168
  9825  0377                     u7300:
  9826  0377                     l4166:
  9827                           
  9828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9829  0377  3008               	movlw	8
  9830  0378  1683               	bsf	3,5	;RP0=1, select bank1
  9831  0379  1303               	bcf	3,6	;RP1=0, select bank1
  9832  037A  00AD               	movwf	??_sprintf^(0+128)
  9833  037B  082D               	movf	??_sprintf^(0+128),w
  9834  037C  00CC               	movwf	sprintf@c^(0+128)
  9835  037D  2B84               	goto	l310
  9836  037E                     l4168:
  9837                           
  9838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9839  037E  1683               	bsf	3,5	;RP0=1, select bank1
  9840  037F  1303               	bcf	3,6	;RP1=0, select bank1
  9841  0380  0849               	movf	sprintf@prec^(0+128),w
  9842  0381  00AD               	movwf	??_sprintf^(0+128)
  9843  0382  082D               	movf	??_sprintf^(0+128),w
  9844  0383  00CC               	movwf	sprintf@c^(0+128)
  9845  0384                     l310:
  9846                           
  9847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9848  0384  084C               	movf	sprintf@c^(0+128),w
  9849  0385  00AD               	movwf	??_sprintf^(0+128)
  9850  0386  01AE               	clrf	(??_sprintf^(0+128)+1)
  9851  0387  082D               	movf	??_sprintf^(0+128),w
  9852  0388  02C9               	subwf	sprintf@prec^(0+128),f
  9853  0389  082E               	movf	(??_sprintf+1)^(0+128),w
  9854  038A  1C03               	skipc
  9855  038B  03CA               	decf	(sprintf@prec+1)^(0+128),f
  9856  038C  02CA               	subwf	(sprintf@prec+1)^(0+128),f
  9857  038D                     l4170:
  9858                           
  9859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9860  038D  084C               	movf	sprintf@c^(0+128),w
  9861  038E  1903               	btfsc	3,2
  9862  038F  2B91               	goto	u7311
  9863  0390  2B92               	goto	u7310
  9864  0391                     u7311:
  9865  0391  2B9D               	goto	l4176
  9866  0392                     u7310:
  9867  0392                     l4172:
  9868                           
  9869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9870  0392  302E               	movlw	46
  9871  0393  00AD               	movwf	??_sprintf^(0+128)
  9872  0394  084B               	movf	sprintf@sp^(0+128),w
  9873  0395  0084               	movwf	4
  9874  0396  082D               	movf	??_sprintf^(0+128),w
  9875  0397  1383               	bcf	3,7	;select IRP bank0
  9876  0398  0080               	movwf	0
  9877  0399                     l4174:
  9878  0399  3001               	movlw	1
  9879  039A  00AD               	movwf	??_sprintf^(0+128)
  9880  039B  082D               	movf	??_sprintf^(0+128),w
  9881  039C  07CB               	addwf	sprintf@sp^(0+128),f
  9882  039D                     l4176:
  9883                           
  9884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9885  039D  084C               	movf	sprintf@c^(0+128),w
  9886  039E  120A  158A  2138  120A  118A  	fcall	_scale
  9887  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  9888  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  9889  03A5  084B               	movf	?_scale+3,w
  9890  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  9891  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  9892  03A8  00B5               	movwf	(_sprintf$1113+3)^(0+128)
  9893  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  9894  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  9895  03AB  084A               	movf	?_scale+2,w
  9896  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  9897  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  9898  03AE  00B4               	movwf	(_sprintf$1113+2)^(0+128)
  9899  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  9900  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  9901  03B1  0849               	movf	?_scale+1,w
  9902  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  9903  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  9904  03B4  00B3               	movwf	(_sprintf$1113+1)^(0+128)
  9905  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  9906  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  9907  03B7  0848               	movf	?_scale,w
  9908  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  9909  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  9910  03BA  00B2               	movwf	_sprintf$1113^(0+128)
  9911  03BB                     l4178:
  9912                           
  9913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9914  03BB  0835               	movf	(_sprintf$1113+3)^(0+128),w
  9915  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  9916  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  9917  03BE  00B5               	movwf	___flmul@a+3
  9918  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  9919  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  9920  03C1  0834               	movf	(_sprintf$1113+2)^(0+128),w
  9921  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  9922  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  9923  03C4  00B4               	movwf	___flmul@a+2
  9924  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  9925  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  9926  03C7  0833               	movf	(_sprintf$1113+1)^(0+128),w
  9927  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  9928  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  9929  03CA  00B3               	movwf	___flmul@a+1
  9930  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  9931  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  9932  03CD  0832               	movf	_sprintf$1113^(0+128),w
  9933  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  9934  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  9935  03D0  00B2               	movwf	___flmul@a
  9936  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  9937  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  9938  03D3  0848               	movf	(sprintf@fval+3)^(0+128),w
  9939  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  9940  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  9941  03D6  00B1               	movwf	___flmul@b+3
  9942  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  9943  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  9944  03D9  0847               	movf	(sprintf@fval+2)^(0+128),w
  9945  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  9946  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  9947  03DC  00B0               	movwf	___flmul@b+2
  9948  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  9949  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  9950  03DF  0846               	movf	(sprintf@fval+1)^(0+128),w
  9951  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  9952  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  9953  03E2  00AF               	movwf	___flmul@b+1
  9954  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  9955  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  9956  03E5  0845               	movf	sprintf@fval^(0+128),w
  9957  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  9958  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  9959  03E8  00AE               	movwf	___flmul@b
  9960  03E9  160A  118A  249F  120A  118A  	fcall	___flmul
  9961  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  9962  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  9963  03F0  0831               	movf	?___flmul+3,w
  9964  03F1  00DE               	movwf	___fltol@f1+3
  9965  03F2  0830               	movf	?___flmul+2,w
  9966  03F3  00DD               	movwf	___fltol@f1+2
  9967  03F4  082F               	movf	?___flmul+1,w
  9968  03F5  00DC               	movwf	___fltol@f1+1
  9969  03F6  082E               	movf	?___flmul,w
  9970  03F7  00DB               	movwf	___fltol@f1
  9971  03F8  120A  158A  2000  120A  118A  	fcall	___fltol
  9972  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  9973  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  9974  03FF  085E               	movf	?___fltol+3,w
  9975  0400  1683               	bsf	3,5	;RP0=1, select bank1
  9976  0401  1303               	bcf	3,6	;RP1=0, select bank1
  9977  0402  00BA               	movwf	(sprintf@val+3)^(0+128)
  9978  0403  1283               	bcf	3,5	;RP0=0, select bank0
  9979  0404  1303               	bcf	3,6	;RP1=0, select bank0
  9980  0405  085D               	movf	?___fltol+2,w
  9981  0406  1683               	bsf	3,5	;RP0=1, select bank1
  9982  0407  1303               	bcf	3,6	;RP1=0, select bank1
  9983  0408  00B9               	movwf	(sprintf@val+2)^(0+128)
  9984  0409  1283               	bcf	3,5	;RP0=0, select bank0
  9985  040A  1303               	bcf	3,6	;RP1=0, select bank0
  9986  040B  085C               	movf	?___fltol+1,w
  9987  040C  1683               	bsf	3,5	;RP0=1, select bank1
  9988  040D  1303               	bcf	3,6	;RP1=0, select bank1
  9989  040E  00B8               	movwf	(sprintf@val+1)^(0+128)
  9990  040F  1283               	bcf	3,5	;RP0=0, select bank0
  9991  0410  1303               	bcf	3,6	;RP1=0, select bank0
  9992  0411  085B               	movf	?___fltol,w
  9993  0412  1683               	bsf	3,5	;RP0=1, select bank1
  9994  0413  1303               	bcf	3,6	;RP1=0, select bank1
  9995  0414  00B7               	movwf	sprintf@val^(0+128)
  9996                           
  9997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9998  0415  2D17               	goto	l4188
  9999  0416                     l4180:
 10000                           
 10001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10002  0416  084C               	movf	sprintf@c^(0+128),w
 10003  0417  00AD               	movwf	??_sprintf^(0+128)
 10004  0418  3001               	movlw	1
 10005  0419                     u7325:
 10006  0419  1003               	clrc
 10007  041A  0DAD               	rlf	??_sprintf^(0+128),f
 10008  041B  3EFF               	addlw	-1
 10009  041C  1D03               	skipz
 10010  041D  2C19               	goto	u7325
 10011  041E  1003               	clrc
 10012  041F  0D2D               	rlf	??_sprintf^(0+128),w
 10013  0420  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10014  0421  0084               	movwf	4
 10015  0422  160A  158A  2000  120A  118A  	fcall	stringdir
 10016  0427  1283               	bcf	3,5	;RP0=0, select bank0
 10017  0428  1303               	bcf	3,6	;RP1=0, select bank0
 10018  0429  00A0               	movwf	___lldiv@divisor
 10019  042A  160A  158A  2000  120A  118A  	fcall	stringdir
 10020  042F  00A1               	movwf	___lldiv@divisor+1
 10021  0430  160A  158A  2000  120A  118A  	fcall	stringdir
 10022  0435  00A2               	movwf	___lldiv@divisor+2
 10023  0436  160A  158A  2000  120A  118A  	fcall	stringdir
 10024  043B  00A3               	movwf	___lldiv@divisor+3
 10025  043C  1683               	bsf	3,5	;RP0=1, select bank1
 10026  043D  1303               	bcf	3,6	;RP1=0, select bank1
 10027  043E  083A               	movf	(sprintf@val+3)^(0+128),w
 10028  043F  1283               	bcf	3,5	;RP0=0, select bank0
 10029  0440  1303               	bcf	3,6	;RP1=0, select bank0
 10030  0441  00A7               	movwf	___lldiv@dividend+3
 10031  0442  1683               	bsf	3,5	;RP0=1, select bank1
 10032  0443  1303               	bcf	3,6	;RP1=0, select bank1
 10033  0444  0839               	movf	(sprintf@val+2)^(0+128),w
 10034  0445  1283               	bcf	3,5	;RP0=0, select bank0
 10035  0446  1303               	bcf	3,6	;RP1=0, select bank0
 10036  0447  00A6               	movwf	___lldiv@dividend+2
 10037  0448  1683               	bsf	3,5	;RP0=1, select bank1
 10038  0449  1303               	bcf	3,6	;RP1=0, select bank1
 10039  044A  0838               	movf	(sprintf@val+1)^(0+128),w
 10040  044B  1283               	bcf	3,5	;RP0=0, select bank0
 10041  044C  1303               	bcf	3,6	;RP1=0, select bank0
 10042  044D  00A5               	movwf	___lldiv@dividend+1
 10043  044E  1683               	bsf	3,5	;RP0=1, select bank1
 10044  044F  1303               	bcf	3,6	;RP1=0, select bank1
 10045  0450  0837               	movf	sprintf@val^(0+128),w
 10046  0451  1283               	bcf	3,5	;RP0=0, select bank0
 10047  0452  1303               	bcf	3,6	;RP1=0, select bank0
 10048  0453  00A4               	movwf	___lldiv@dividend
 10049  0454  160A  158A  268B  120A  118A  	fcall	___lldiv
 10050  0459  1283               	bcf	3,5	;RP0=0, select bank0
 10051  045A  1303               	bcf	3,6	;RP1=0, select bank0
 10052  045B  0823               	movf	?___lldiv+3,w
 10053  045C  1683               	bsf	3,5	;RP0=1, select bank1
 10054  045D  1303               	bcf	3,6	;RP1=0, select bank1
 10055  045E  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10056  045F  1283               	bcf	3,5	;RP0=0, select bank0
 10057  0460  1303               	bcf	3,6	;RP1=0, select bank0
 10058  0461  0822               	movf	?___lldiv+2,w
 10059  0462  1683               	bsf	3,5	;RP0=1, select bank1
 10060  0463  1303               	bcf	3,6	;RP1=0, select bank1
 10061  0464  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10062  0465  1283               	bcf	3,5	;RP0=0, select bank0
 10063  0466  1303               	bcf	3,6	;RP1=0, select bank0
 10064  0467  0821               	movf	?___lldiv+1,w
 10065  0468  1683               	bsf	3,5	;RP0=1, select bank1
 10066  0469  1303               	bcf	3,6	;RP1=0, select bank1
 10067  046A  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10068  046B  1283               	bcf	3,5	;RP0=0, select bank0
 10069  046C  1303               	bcf	3,6	;RP1=0, select bank0
 10070  046D  0820               	movf	?___lldiv,w
 10071  046E  1683               	bsf	3,5	;RP0=1, select bank1
 10072  046F  1303               	bcf	3,6	;RP1=0, select bank1
 10073  0470  00BB               	movwf	sprintf@tmpval^(0+128)
 10074  0471                     l4182:
 10075                           
 10076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10077  0471  3000               	movlw	0
 10078  0472  1283               	bcf	3,5	;RP0=0, select bank0
 10079  0473  1303               	bcf	3,6	;RP1=0, select bank0
 10080  0474  00A3               	movwf	___llmod@divisor+3
 10081  0475  3000               	movlw	0
 10082  0476  00A2               	movwf	___llmod@divisor+2
 10083  0477  3000               	movlw	0
 10084  0478  00A1               	movwf	___llmod@divisor+1
 10085  0479  300A               	movlw	10
 10086  047A  00A0               	movwf	___llmod@divisor
 10087  047B  1683               	bsf	3,5	;RP0=1, select bank1
 10088  047C  1303               	bcf	3,6	;RP1=0, select bank1
 10089  047D  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10090  047E  1283               	bcf	3,5	;RP0=0, select bank0
 10091  047F  1303               	bcf	3,6	;RP1=0, select bank0
 10092  0480  00A7               	movwf	___llmod@dividend+3
 10093  0481  1683               	bsf	3,5	;RP0=1, select bank1
 10094  0482  1303               	bcf	3,6	;RP1=0, select bank1
 10095  0483  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10096  0484  1283               	bcf	3,5	;RP0=0, select bank0
 10097  0485  1303               	bcf	3,6	;RP1=0, select bank0
 10098  0486  00A6               	movwf	___llmod@dividend+2
 10099  0487  1683               	bsf	3,5	;RP0=1, select bank1
 10100  0488  1303               	bcf	3,6	;RP1=0, select bank1
 10101  0489  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10102  048A  1283               	bcf	3,5	;RP0=0, select bank0
 10103  048B  1303               	bcf	3,6	;RP1=0, select bank0
 10104  048C  00A5               	movwf	___llmod@dividend+1
 10105  048D  1683               	bsf	3,5	;RP0=1, select bank1
 10106  048E  1303               	bcf	3,6	;RP1=0, select bank1
 10107  048F  083B               	movf	sprintf@tmpval^(0+128),w
 10108  0490  1283               	bcf	3,5	;RP0=0, select bank0
 10109  0491  1303               	bcf	3,6	;RP1=0, select bank0
 10110  0492  00A4               	movwf	___llmod@dividend
 10111  0493  160A  158A  257A  120A  118A  	fcall	___llmod
 10112  0498  1283               	bcf	3,5	;RP0=0, select bank0
 10113  0499  1303               	bcf	3,6	;RP1=0, select bank0
 10114  049A  0823               	movf	?___llmod+3,w
 10115  049B  1683               	bsf	3,5	;RP0=1, select bank1
 10116  049C  1303               	bcf	3,6	;RP1=0, select bank1
 10117  049D  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10118  049E  1283               	bcf	3,5	;RP0=0, select bank0
 10119  049F  1303               	bcf	3,6	;RP1=0, select bank0
 10120  04A0  0822               	movf	?___llmod+2,w
 10121  04A1  1683               	bsf	3,5	;RP0=1, select bank1
 10122  04A2  1303               	bcf	3,6	;RP1=0, select bank1
 10123  04A3  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10124  04A4  1283               	bcf	3,5	;RP0=0, select bank0
 10125  04A5  1303               	bcf	3,6	;RP1=0, select bank0
 10126  04A6  0821               	movf	?___llmod+1,w
 10127  04A7  1683               	bsf	3,5	;RP0=1, select bank1
 10128  04A8  1303               	bcf	3,6	;RP1=0, select bank1
 10129  04A9  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10130  04AA  1283               	bcf	3,5	;RP0=0, select bank0
 10131  04AB  1303               	bcf	3,6	;RP1=0, select bank0
 10132  04AC  0820               	movf	?___llmod,w
 10133  04AD  1683               	bsf	3,5	;RP0=1, select bank1
 10134  04AE  1303               	bcf	3,6	;RP1=0, select bank1
 10135  04AF  00BB               	movwf	sprintf@tmpval^(0+128)
 10136  04B0                     l4184:
 10137                           
 10138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10139  04B0  083B               	movf	sprintf@tmpval^(0+128),w
 10140  04B1  3E30               	addlw	48
 10141  04B2  00AD               	movwf	??_sprintf^(0+128)
 10142  04B3  084B               	movf	sprintf@sp^(0+128),w
 10143  04B4  0084               	movwf	4
 10144  04B5  082D               	movf	??_sprintf^(0+128),w
 10145  04B6  1383               	bcf	3,7	;select IRP bank0
 10146  04B7  0080               	movwf	0
 10147  04B8  3001               	movlw	1
 10148  04B9  00AD               	movwf	??_sprintf^(0+128)
 10149  04BA  082D               	movf	??_sprintf^(0+128),w
 10150  04BB  07CB               	addwf	sprintf@sp^(0+128),f
 10151  04BC                     l4186:
 10152                           
 10153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10154  04BC  084C               	movf	sprintf@c^(0+128),w
 10155  04BD  00AD               	movwf	??_sprintf^(0+128)
 10156  04BE  3001               	movlw	1
 10157  04BF                     u7335:
 10158  04BF  1003               	clrc
 10159  04C0  0DAD               	rlf	??_sprintf^(0+128),f
 10160  04C1  3EFF               	addlw	-1
 10161  04C2  1D03               	skipz
 10162  04C3  2CBF               	goto	u7335
 10163  04C4  1003               	clrc
 10164  04C5  0D2D               	rlf	??_sprintf^(0+128),w
 10165  04C6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10166  04C7  0084               	movwf	4
 10167  04C8  160A  158A  2000  120A  118A  	fcall	stringdir
 10168  04CD  1283               	bcf	3,5	;RP0=0, select bank0
 10169  04CE  1303               	bcf	3,6	;RP1=0, select bank0
 10170  04CF  00A0               	movwf	___llmod@divisor
 10171  04D0  160A  158A  2000  120A  118A  	fcall	stringdir
 10172  04D5  00A1               	movwf	___llmod@divisor+1
 10173  04D6  160A  158A  2000  120A  118A  	fcall	stringdir
 10174  04DB  00A2               	movwf	___llmod@divisor+2
 10175  04DC  160A  158A  2000  120A  118A  	fcall	stringdir
 10176  04E1  00A3               	movwf	___llmod@divisor+3
 10177  04E2  1683               	bsf	3,5	;RP0=1, select bank1
 10178  04E3  1303               	bcf	3,6	;RP1=0, select bank1
 10179  04E4  083A               	movf	(sprintf@val+3)^(0+128),w
 10180  04E5  1283               	bcf	3,5	;RP0=0, select bank0
 10181  04E6  1303               	bcf	3,6	;RP1=0, select bank0
 10182  04E7  00A7               	movwf	___llmod@dividend+3
 10183  04E8  1683               	bsf	3,5	;RP0=1, select bank1
 10184  04E9  1303               	bcf	3,6	;RP1=0, select bank1
 10185  04EA  0839               	movf	(sprintf@val+2)^(0+128),w
 10186  04EB  1283               	bcf	3,5	;RP0=0, select bank0
 10187  04EC  1303               	bcf	3,6	;RP1=0, select bank0
 10188  04ED  00A6               	movwf	___llmod@dividend+2
 10189  04EE  1683               	bsf	3,5	;RP0=1, select bank1
 10190  04EF  1303               	bcf	3,6	;RP1=0, select bank1
 10191  04F0  0838               	movf	(sprintf@val+1)^(0+128),w
 10192  04F1  1283               	bcf	3,5	;RP0=0, select bank0
 10193  04F2  1303               	bcf	3,6	;RP1=0, select bank0
 10194  04F3  00A5               	movwf	___llmod@dividend+1
 10195  04F4  1683               	bsf	3,5	;RP0=1, select bank1
 10196  04F5  1303               	bcf	3,6	;RP1=0, select bank1
 10197  04F6  0837               	movf	sprintf@val^(0+128),w
 10198  04F7  1283               	bcf	3,5	;RP0=0, select bank0
 10199  04F8  1303               	bcf	3,6	;RP1=0, select bank0
 10200  04F9  00A4               	movwf	___llmod@dividend
 10201  04FA  160A  158A  257A  120A  118A  	fcall	___llmod
 10202  04FF  1283               	bcf	3,5	;RP0=0, select bank0
 10203  0500  1303               	bcf	3,6	;RP1=0, select bank0
 10204  0501  0823               	movf	?___llmod+3,w
 10205  0502  1683               	bsf	3,5	;RP0=1, select bank1
 10206  0503  1303               	bcf	3,6	;RP1=0, select bank1
 10207  0504  00BA               	movwf	(sprintf@val+3)^(0+128)
 10208  0505  1283               	bcf	3,5	;RP0=0, select bank0
 10209  0506  1303               	bcf	3,6	;RP1=0, select bank0
 10210  0507  0822               	movf	?___llmod+2,w
 10211  0508  1683               	bsf	3,5	;RP0=1, select bank1
 10212  0509  1303               	bcf	3,6	;RP1=0, select bank1
 10213  050A  00B9               	movwf	(sprintf@val+2)^(0+128)
 10214  050B  1283               	bcf	3,5	;RP0=0, select bank0
 10215  050C  1303               	bcf	3,6	;RP1=0, select bank0
 10216  050D  0821               	movf	?___llmod+1,w
 10217  050E  1683               	bsf	3,5	;RP0=1, select bank1
 10218  050F  1303               	bcf	3,6	;RP1=0, select bank1
 10219  0510  00B8               	movwf	(sprintf@val+1)^(0+128)
 10220  0511  1283               	bcf	3,5	;RP0=0, select bank0
 10221  0512  1303               	bcf	3,6	;RP1=0, select bank0
 10222  0513  0820               	movf	?___llmod,w
 10223  0514  1683               	bsf	3,5	;RP0=1, select bank1
 10224  0515  1303               	bcf	3,6	;RP1=0, select bank1
 10225  0516  00B7               	movwf	sprintf@val^(0+128)
 10226  0517                     l4188:
 10227                           
 10228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10229  0517  3001               	movlw	1
 10230  0518  02CC               	subwf	sprintf@c^(0+128),f
 10231  0519  0A4C               	incf	sprintf@c^(0+128),w
 10232  051A  1D03               	btfss	3,2
 10233  051B  2D1D               	goto	u7341
 10234  051C  2D1E               	goto	u7340
 10235  051D                     u7341:
 10236  051D  2C16               	goto	l4180
 10237  051E                     u7340:
 10238  051E  2D30               	goto	l4196
 10239  051F                     l4190:
 10240                           
 10241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10242  051F  3030               	movlw	48
 10243  0520  00AD               	movwf	??_sprintf^(0+128)
 10244  0521  084B               	movf	sprintf@sp^(0+128),w
 10245  0522  0084               	movwf	4
 10246  0523  082D               	movf	??_sprintf^(0+128),w
 10247  0524  1383               	bcf	3,7	;select IRP bank0
 10248  0525  0080               	movwf	0
 10249  0526                     l4192:
 10250  0526  3001               	movlw	1
 10251  0527  00AD               	movwf	??_sprintf^(0+128)
 10252  0528  082D               	movf	??_sprintf^(0+128),w
 10253  0529  07CB               	addwf	sprintf@sp^(0+128),f
 10254  052A                     l4194:
 10255                           
 10256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10257  052A  30FF               	movlw	255
 10258  052B  07C9               	addwf	sprintf@prec^(0+128),f
 10259  052C  1803               	skipnc
 10260  052D  0ACA               	incf	(sprintf@prec+1)^(0+128),f
 10261  052E  30FF               	movlw	255
 10262  052F  07CA               	addwf	(sprintf@prec+1)^(0+128),f
 10263  0530                     l4196:
 10264                           
 10265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10266  0530  0849               	movf	sprintf@prec^(0+128),w
 10267  0531  044A               	iorwf	(sprintf@prec+1)^(0+128),w
 10268  0532  1D03               	btfss	3,2
 10269  0533  2D35               	goto	u7351
 10270  0534  2D36               	goto	u7350
 10271  0535                     u7351:
 10272  0535  2D1F               	goto	l4190
 10273  0536                     u7350:
 10274  0536  2E35               	goto	l4260
 10275  0537                     l4198:
 10276                           
 10277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10278  0537  0849               	movf	sprintf@prec^(0+128),w
 10279  0538  044A               	iorwf	(sprintf@prec+1)^(0+128),w
 10280  0539  1D03               	btfss	3,2
 10281  053A  2D3C               	goto	u7361
 10282  053B  2D3D               	goto	u7360
 10283  053C                     u7361:
 10284  053C  2D4B               	goto	l318
 10285  053D                     u7360:
 10286  053D                     l4200:
 10287  053D  083A               	movf	(sprintf@val+3)^(0+128),w
 10288  053E  0439               	iorwf	(sprintf@val+2)^(0+128),w
 10289  053F  0438               	iorwf	(sprintf@val+1)^(0+128),w
 10290  0540  0437               	iorwf	sprintf@val^(0+128),w
 10291  0541  1D03               	skipz
 10292  0542  2D44               	goto	u7371
 10293  0543  2D45               	goto	u7370
 10294  0544                     u7371:
 10295  0544  2D4B               	goto	l318
 10296  0545                     u7370:
 10297  0545                     l4202:
 10298                           
 10299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10300  0545  3001               	movlw	1
 10301  0546  07C9               	addwf	sprintf@prec^(0+128),f
 10302  0547  1803               	skipnc
 10303  0548  0ACA               	incf	(sprintf@prec+1)^(0+128),f
 10304  0549  3000               	movlw	0
 10305  054A  07CA               	addwf	(sprintf@prec+1)^(0+128),f
 10306  054B                     l318:
 10307                           
 10308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10309  054B  084A               	movf	(sprintf@prec+1)^(0+128),w
 10310  054C  3A80               	xorlw	128
 10311  054D  3C80               	sublw	128
 10312  054E  1D03               	skipz
 10313  054F  2D52               	goto	u7385
 10314  0550  0849               	movf	sprintf@prec^(0+128),w
 10315  0551  024C               	subwf	sprintf@c^(0+128),w
 10316  0552                     u7385:
 10317  0552  1803               	skipnc
 10318  0553  2D55               	goto	u7381
 10319  0554  2D56               	goto	u7380
 10320  0555                     u7381:
 10321  0555  2D5D               	goto	l4206
 10322  0556                     u7380:
 10323  0556                     l4204:
 10324                           
 10325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10326  0556  1683               	bsf	3,5	;RP0=1, select bank1
 10327  0557  1303               	bcf	3,6	;RP1=0, select bank1
 10328  0558  0849               	movf	sprintf@prec^(0+128),w
 10329  0559  00AD               	movwf	??_sprintf^(0+128)
 10330  055A  082D               	movf	??_sprintf^(0+128),w
 10331  055B  00CC               	movwf	sprintf@c^(0+128)
 10332  055C  2D75               	goto	l4210
 10333  055D                     l4206:
 10334  055D  1683               	bsf	3,5	;RP0=1, select bank1
 10335  055E  1303               	bcf	3,6	;RP1=0, select bank1
 10336  055F  084A               	movf	(sprintf@prec+1)^(0+128),w
 10337  0560  3A80               	xorlw	128
 10338  0561  00AD               	movwf	??_sprintf^(0+128)
 10339  0562  3080               	movlw	128
 10340  0563  022D               	subwf	??_sprintf^(0+128),w
 10341  0564  1D03               	skipz
 10342  0565  2D68               	goto	u7395
 10343  0566  084C               	movf	sprintf@c^(0+128),w
 10344  0567  0249               	subwf	sprintf@prec^(0+128),w
 10345  0568                     u7395:
 10346  0568  1803               	skipnc
 10347  0569  2D6B               	goto	u7391
 10348  056A  2D6C               	goto	u7390
 10349  056B                     u7391:
 10350  056B  2D75               	goto	l4210
 10351  056C                     u7390:
 10352  056C                     l4208:
 10353                           
 10354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10355  056C  1683               	bsf	3,5	;RP0=1, select bank1
 10356  056D  1303               	bcf	3,6	;RP1=0, select bank1
 10357  056E  084C               	movf	sprintf@c^(0+128),w
 10358  056F  00AD               	movwf	??_sprintf^(0+128)
 10359  0570  01AE               	clrf	(??_sprintf^(0+128)+1)
 10360  0571  082D               	movf	??_sprintf^(0+128),w
 10361  0572  00C9               	movwf	sprintf@prec^(0+128)
 10362  0573  082E               	movf	(??_sprintf+1)^(0+128),w
 10363  0574  00CA               	movwf	(sprintf@prec+1)^(0+128)
 10364  0575                     l4210:
 10365                           
 10366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10367  0575  1683               	bsf	3,5	;RP0=1, select bank1
 10368  0576  1303               	bcf	3,6	;RP1=0, select bank1
 10369  0577  0843               	movf	sprintf@width^(0+128),w
 10370  0578  0444               	iorwf	(sprintf@width+1)^(0+128),w
 10371  0579  1903               	btfsc	3,2
 10372  057A  2D7C               	goto	u7401
 10373  057B  2D7D               	goto	u7400
 10374  057C                     u7401:
 10375  057C  2D8F               	goto	l4216
 10376  057D                     u7400:
 10377  057D                     l4212:
 10378  057D  3003               	movlw	3
 10379  057E  0541               	andwf	sprintf@flag^(0+128),w
 10380  057F  00AD               	movwf	??_sprintf^(0+128)
 10381  0580  3000               	movlw	0
 10382  0581  0542               	andwf	(sprintf@flag+1)^(0+128),w
 10383  0582  00AE               	movwf	(??_sprintf+1)^(0+128)
 10384  0583  082D               	movf	??_sprintf^(0+128),w
 10385  0584  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10386  0585  1903               	btfsc	3,2
 10387  0586  2D88               	goto	u7411
 10388  0587  2D89               	goto	u7410
 10389  0588                     u7411:
 10390  0588  2D8F               	goto	l4216
 10391  0589                     u7410:
 10392  0589                     l4214:
 10393                           
 10394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10395  0589  30FF               	movlw	255
 10396  058A  07C3               	addwf	sprintf@width^(0+128),f
 10397  058B  1803               	skipnc
 10398  058C  0AC4               	incf	(sprintf@width+1)^(0+128),f
 10399  058D  30FF               	movlw	255
 10400  058E  07C4               	addwf	(sprintf@width+1)^(0+128),f
 10401  058F                     l4216:
 10402                           
 10403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10404  058F  1F42               	btfss	(sprintf@flag+1)^(0+128),6
 10405  0590  2D92               	goto	u7421
 10406  0591  2D93               	goto	u7420
 10407  0592                     u7421:
 10408  0592  2DAE               	goto	l4224
 10409  0593                     u7420:
 10410  0593                     l4218:
 10411                           
 10412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10413  0593  084A               	movf	(sprintf@prec+1)^(0+128),w
 10414  0594  3A80               	xorlw	128
 10415  0595  00AD               	movwf	??_sprintf^(0+128)
 10416  0596  0844               	movf	(sprintf@width+1)^(0+128),w
 10417  0597  3A80               	xorlw	128
 10418  0598  022D               	subwf	??_sprintf^(0+128),w
 10419  0599  1D03               	skipz
 10420  059A  2D9D               	goto	u7435
 10421  059B  0843               	movf	sprintf@width^(0+128),w
 10422  059C  0249               	subwf	sprintf@prec^(0+128),w
 10423  059D                     u7435:
 10424  059D  1803               	skipnc
 10425  059E  2DA0               	goto	u7431
 10426  059F  2DA1               	goto	u7430
 10427  05A0                     u7431:
 10428  05A0  2DAA               	goto	l4222
 10429  05A1                     u7430:
 10430  05A1                     l4220:
 10431                           
 10432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10433  05A1  1683               	bsf	3,5	;RP0=1, select bank1
 10434  05A2  1303               	bcf	3,6	;RP1=0, select bank1
 10435  05A3  0849               	movf	sprintf@prec^(0+128),w
 10436  05A4  02C3               	subwf	sprintf@width^(0+128),f
 10437  05A5  084A               	movf	(sprintf@prec+1)^(0+128),w
 10438  05A6  1C03               	skipc
 10439  05A7  03C4               	decf	(sprintf@width+1)^(0+128),f
 10440  05A8  02C4               	subwf	(sprintf@width+1)^(0+128),f
 10441  05A9  2DAE               	goto	l4224
 10442  05AA                     l4222:
 10443                           
 10444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10445  05AA  1683               	bsf	3,5	;RP0=1, select bank1
 10446  05AB  1303               	bcf	3,6	;RP1=0, select bank1
 10447  05AC  01C3               	clrf	sprintf@width^(0+128)
 10448  05AD  01C4               	clrf	(sprintf@width+1)^(0+128)
 10449  05AE                     l4224:
 10450                           
 10451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10452  05AE  0844               	movf	(sprintf@width+1)^(0+128),w
 10453  05AF  3A80               	xorlw	128
 10454  05B0  3C80               	sublw	128
 10455  05B1  1D03               	skipz
 10456  05B2  2DB5               	goto	u7445
 10457  05B3  0843               	movf	sprintf@width^(0+128),w
 10458  05B4  024C               	subwf	sprintf@c^(0+128),w
 10459  05B5                     u7445:
 10460  05B5  1803               	skipnc
 10461  05B6  2DB8               	goto	u7441
 10462  05B7  2DB9               	goto	u7440
 10463  05B8                     u7441:
 10464  05B8  2DC5               	goto	l4228
 10465  05B9                     u7440:
 10466  05B9                     l4226:
 10467                           
 10468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10469  05B9  1683               	bsf	3,5	;RP0=1, select bank1
 10470  05BA  1303               	bcf	3,6	;RP1=0, select bank1
 10471  05BB  084C               	movf	sprintf@c^(0+128),w
 10472  05BC  00AD               	movwf	??_sprintf^(0+128)
 10473  05BD  01AE               	clrf	(??_sprintf^(0+128)+1)
 10474  05BE  082D               	movf	??_sprintf^(0+128),w
 10475  05BF  02C3               	subwf	sprintf@width^(0+128),f
 10476  05C0  082E               	movf	(??_sprintf+1)^(0+128),w
 10477  05C1  1C03               	skipc
 10478  05C2  03C4               	decf	(sprintf@width+1)^(0+128),f
 10479  05C3  02C4               	subwf	(sprintf@width+1)^(0+128),f
 10480  05C4  2DC9               	goto	l4230
 10481  05C5                     l4228:
 10482                           
 10483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10484  05C5  1683               	bsf	3,5	;RP0=1, select bank1
 10485  05C6  1303               	bcf	3,6	;RP1=0, select bank1
 10486  05C7  01C3               	clrf	sprintf@width^(0+128)
 10487  05C8  01C4               	clrf	(sprintf@width+1)^(0+128)
 10488  05C9                     l4230:
 10489                           
 10490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
 10491  05C9  1D41               	btfss	sprintf@flag^(0+128),2
 10492  05CA  2DCC               	goto	u7451
 10493  05CB  2DCD               	goto	u7450
 10494  05CC                     u7451:
 10495  05CC  2E02               	goto	l4246
 10496  05CD                     u7450:
 10497  05CD                     l4232:
 10498                           
 10499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
 10500  05CD  3003               	movlw	3
 10501  05CE  0541               	andwf	sprintf@flag^(0+128),w
 10502  05CF  00AD               	movwf	??_sprintf^(0+128)
 10503  05D0  3000               	movlw	0
 10504  05D1  0542               	andwf	(sprintf@flag+1)^(0+128),w
 10505  05D2  00AE               	movwf	(??_sprintf+1)^(0+128)
 10506  05D3  082D               	movf	??_sprintf^(0+128),w
 10507  05D4  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10508  05D5  1903               	btfsc	3,2
 10509  05D6  2DD8               	goto	u7461
 10510  05D7  2DD9               	goto	u7460
 10511  05D8                     u7461:
 10512  05D8  2DE4               	goto	l4238
 10513  05D9                     u7460:
 10514  05D9                     l4234:
 10515                           
 10516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
 10517  05D9  302D               	movlw	45
 10518  05DA  00AD               	movwf	??_sprintf^(0+128)
 10519  05DB  084B               	movf	sprintf@sp^(0+128),w
 10520  05DC  0084               	movwf	4
 10521  05DD  082D               	movf	??_sprintf^(0+128),w
 10522  05DE  1383               	bcf	3,7	;select IRP bank0
 10523  05DF  0080               	movwf	0
 10524  05E0                     l4236:
 10525  05E0  3001               	movlw	1
 10526  05E1  00AD               	movwf	??_sprintf^(0+128)
 10527  05E2  082D               	movf	??_sprintf^(0+128),w
 10528  05E3  07CB               	addwf	sprintf@sp^(0+128),f
 10529  05E4                     l4238:
 10530                           
 10531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
 10532  05E4  0843               	movf	sprintf@width^(0+128),w
 10533  05E5  0444               	iorwf	(sprintf@width+1)^(0+128),w
 10534  05E6  1903               	btfsc	3,2
 10535  05E7  2DE9               	goto	u7471
 10536  05E8  2DEA               	goto	u7470
 10537  05E9                     u7471:
 10538  05E9  2E35               	goto	l4260
 10539  05EA                     u7470:
 10540  05EA                     l4240:
 10541                           
 10542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
 10543  05EA  3030               	movlw	48
 10544  05EB  00AD               	movwf	??_sprintf^(0+128)
 10545  05EC  084B               	movf	sprintf@sp^(0+128),w
 10546  05ED  0084               	movwf	4
 10547  05EE  082D               	movf	??_sprintf^(0+128),w
 10548  05EF  1383               	bcf	3,7	;select IRP bank0
 10549  05F0  0080               	movwf	0
 10550  05F1                     l4242:
 10551  05F1  3001               	movlw	1
 10552  05F2  00AD               	movwf	??_sprintf^(0+128)
 10553  05F3  082D               	movf	??_sprintf^(0+128),w
 10554  05F4  07CB               	addwf	sprintf@sp^(0+128),f
 10555  05F5                     l4244:
 10556  05F5  30FF               	movlw	255
 10557  05F6  07C3               	addwf	sprintf@width^(0+128),f
 10558  05F7  1803               	skipnc
 10559  05F8  0AC4               	incf	(sprintf@width+1)^(0+128),f
 10560  05F9  30FF               	movlw	255
 10561  05FA  07C4               	addwf	(sprintf@width+1)^(0+128),f
 10562  05FB  0843               	movf	sprintf@width^(0+128),w
 10563  05FC  0444               	iorwf	(sprintf@width+1)^(0+128),w
 10564  05FD  1D03               	btfss	3,2
 10565  05FE  2E00               	goto	u7481
 10566  05FF  2E01               	goto	u7480
 10567  0600                     u7481:
 10568  0600  2DEA               	goto	l4240
 10569  0601                     u7480:
 10570  0601  2E35               	goto	l4260
 10571  0602                     l4246:
 10572                           
 10573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10574  0602  0843               	movf	sprintf@width^(0+128),w
 10575  0603  0444               	iorwf	(sprintf@width+1)^(0+128),w
 10576  0604  1903               	btfsc	3,2
 10577  0605  2E07               	goto	u7491
 10578  0606  2E08               	goto	u7490
 10579  0607                     u7491:
 10580  0607  2E1F               	goto	l4254
 10581  0608                     u7490:
 10582  0608                     l4248:
 10583                           
 10584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10585  0608  3020               	movlw	32
 10586  0609  00AD               	movwf	??_sprintf^(0+128)
 10587  060A  084B               	movf	sprintf@sp^(0+128),w
 10588  060B  0084               	movwf	4
 10589  060C  082D               	movf	??_sprintf^(0+128),w
 10590  060D  1383               	bcf	3,7	;select IRP bank0
 10591  060E  0080               	movwf	0
 10592  060F                     l4250:
 10593  060F  3001               	movlw	1
 10594  0610  00AD               	movwf	??_sprintf^(0+128)
 10595  0611  082D               	movf	??_sprintf^(0+128),w
 10596  0612  07CB               	addwf	sprintf@sp^(0+128),f
 10597  0613                     l4252:
 10598  0613  30FF               	movlw	255
 10599  0614  07C3               	addwf	sprintf@width^(0+128),f
 10600  0615  1803               	skipnc
 10601  0616  0AC4               	incf	(sprintf@width+1)^(0+128),f
 10602  0617  30FF               	movlw	255
 10603  0618  07C4               	addwf	(sprintf@width+1)^(0+128),f
 10604  0619  0843               	movf	sprintf@width^(0+128),w
 10605  061A  0444               	iorwf	(sprintf@width+1)^(0+128),w
 10606  061B  1D03               	btfss	3,2
 10607  061C  2E1E               	goto	u7501
 10608  061D  2E1F               	goto	u7500
 10609  061E                     u7501:
 10610  061E  2E08               	goto	l4248
 10611  061F                     u7500:
 10612  061F                     l4254:
 10613                           
 10614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10615  061F  3003               	movlw	3
 10616  0620  0541               	andwf	sprintf@flag^(0+128),w
 10617  0621  00AD               	movwf	??_sprintf^(0+128)
 10618  0622  3000               	movlw	0
 10619  0623  0542               	andwf	(sprintf@flag+1)^(0+128),w
 10620  0624  00AE               	movwf	(??_sprintf+1)^(0+128)
 10621  0625  082D               	movf	??_sprintf^(0+128),w
 10622  0626  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10623  0627  1903               	btfsc	3,2
 10624  0628  2E2A               	goto	u7511
 10625  0629  2E2B               	goto	u7510
 10626  062A                     u7511:
 10627  062A  2E35               	goto	l4260
 10628  062B                     u7510:
 10629  062B                     l4256:
 10630                           
 10631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10632  062B  302D               	movlw	45
 10633  062C  00AD               	movwf	??_sprintf^(0+128)
 10634  062D  084B               	movf	sprintf@sp^(0+128),w
 10635  062E  0084               	movwf	4
 10636  062F  082D               	movf	??_sprintf^(0+128),w
 10637  0630  1383               	bcf	3,7	;select IRP bank0
 10638  0631  0080               	movwf	0
 10639  0632  120A  158A  2CB2   	goto	l3978
 10640  0635                     l4260:
 10641                           
 10642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10643  0635  3001               	movlw	1
 10644  0636  07A8               	addwf	sprintf@f^(0+128),f
 10645  0637  30FF               	movlw	-1
 10646  0638  0728               	addwf	sprintf@f^(0+128),w
 10647  0639  0084               	movwf	4
 10648  063A  160A  158A  2000  120A  118A  	fcall	stringdir
 10649  063F  00AD               	movwf	??_sprintf^(0+128)
 10650  0640  082D               	movf	??_sprintf^(0+128),w
 10651  0641  00CC               	movwf	sprintf@c^(0+128)
 10652  0642  084C               	movf	sprintf@c^(0+128),w
 10653  0643  1D03               	btfss	3,2
 10654  0644  2E46               	goto	u7521
 10655  0645  2E49               	goto	u7520
 10656  0646                     u7521:
 10657  0646  120A  158A  2CA5   	goto	l3974
 10658  0649                     u7520:
 10659  0649                     l4262:
 10660                           
 10661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10662  0649  084B               	movf	sprintf@sp^(0+128),w
 10663  064A  0084               	movwf	4
 10664  064B  1383               	bcf	3,7	;select IRP bank0
 10665  064C  0180               	clrf	0
 10666  064D                     l339:
 10667  064D  0008               	return
 10668  064E                     __end_of_sprintf:

Data Sizes:
    Strings     6
    Constant    144
    Data        0
    BSS         23
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     80      80
    BANK1            80     46      71
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 


Critical Paths under _main in COMMON

    _main->_send_crct
    _sprintf->___awdiv
    _sprintf->___llmod
    _sprintf->___wmul
    _sprintf->_isdigit
    _scale->___awdiv
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    ___flmul->___awdiv
    ___flmul->___lwmod
    _send_crct->_send_char

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   39710
                                             45 BANK1      1     1      0
                            _cfg_clk
                           _cfg_inte
                             _cfg_io
                           _cfg_iocb
                          _cfg_usart
                               _conv
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   38844
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9540
                                             40 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              5 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              6 COMMON     1     1      0
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7433
                                             40 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              4 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5693
                                             14 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              5 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              0 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              5 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              5 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              5 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             59 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             60 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4     721
                                             14 BANK0     13     9      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_iocb                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_inte                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cfg_clk
   _cfg_inte
   _cfg_io
   _cfg_iocb
   _cfg_usart
   _conv
     ___xxtofl
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Aug 13 18:16:12 2021

                      _V 00D8                        _v 00E3                        pc 0002  
                     _f1 00D9                       _f2 00CE             ___awdiv@sign 002B  
                     _op 0077                       fsr 0004      ___wmul@multiplicand 0022  
    __Umul8_16@word_mpld 0024                      l102 1B93                      l111 1B65  
                    l120 1BCD                      l105 1B57                      l114 1B5D  
                    l123 1001                      l108 1BA8                      l126 1009  
                    l310 0384                      l231 1216                      l303 033E  
                    l129 1C1D                      l251 0CBC                      l238 0C9A  
                    l318 054B                      l343 1BDC                      l345 1BF4  
                    l513 070B                      l530 1D14                      l514 0670  
                    l266 0D97                      l531 1D29                      l339 064D  
                    l524 06FE                      l701 1432                      l517 06CE  
                    l509 1E2A                      l534 1F7A                      l542 07FE  
                    l712 1492                      l704 1470                      l560 07C8  
                    l529 1CF8                      l537 1FE6                      l713 149E  
                    l553 0866                      l561 073A                      l810 08A0  
                    l538 1FFF                      l546 087B                      l379 1EF2  
                    l571 07BB                      l812 0937                      l716 1D79  
                    l556 087B                      l564 078B                      l670 127A  
                    l830 1B7F                      l823 0901                      l824 090D  
                    l816 08E5                      l496 1F5B                      l649 1CD9  
                    l674 1321                      l691 13EC                      l683 149E  
                    l659 1C93                      l676 12F8                      l772 176B  
                    l766 17FF                      l695 1410                      l599 1DCF  
                    l785 07DF                      l778 17F3                      l787 07F1  
                    _isr 1C1E                      fsr0 0004                      indf 0000  
           ___awmod@sign 0025             ___flmul@aexp 003C             ___flmul@bexp 0041  
           ___flmul@sign 003B             ___flmul@temp 0046             ___flmul@prod 0042  
           ___fltol@exp1 0065                     l2300 1CA8                     l2310 1CC8  
                   l2302 1CAC                     l3040 1B8A                     l2400 12A0  
                   l2312 1CCF                     l2304 1CB0                     l4000 0D32  
                   l3050 1B92                     l3042 1B8B                     l2410 12B4  
                   l2402 12A4                     l2306 1CC1                     l2314 1CD5  
                   l4010 0D6B                     l4002 0D40                     l3052 1B5E  
                   l3044 1B8C                     l3036 1B80                     l3060 1B9B  
                   l2500 1429                     l2420 12C5                     l2412 12B8  
                   l2404 12A8                     l2340 1217                     l2308 1CC7  
                   l4100 01AB                     l4012 0D7E                     l4004 0D41  
                   l3046 1B8E                     l3038 1B89                     l3054 1B58  
                   l3070 1BA5                     l3062 1B9F                     l2510 144A  
                   l2502 142F                     l2430 130B                     l2422 12DC  
                   l2414 12BC                     l2406 12AC                     l2350 122E  
                   l2342 121E                     l4110 01E4                     l4030 0DCB  
                   l4022 0D99                     l4014 0D82                     l4006 0D45  
                   l3072 1B52                     l3048 1B91                     l3056 1B5C  
                   l3064 1BA0                     l2520 1482                     l2512 144E  
                   l2440 132A                     l2432 130C                     l2424 12FC  
                   l2416 12C0                     l2408 12B0                     l2360 1246  
                   l2352 1233                     l2344 1224                     l4200 053D  
                   l4120 0221                     l4112 01EE                     l4040 0E3D  
                   l4032 0DD9                     l4024 0DB5                     l4008 0D48  
                   l4016 0D93                     l3074 1B56                     l3066 1BA3  
                   l3058 1B94                     l2530 1499                     l2522 1487  
                   l2514 146C                     l2506 1437                     l2450 1352  
                   l2434 1315                     l2426 1305                     l2418 12C4  
                   l2370 125C                     l2362 124B                     l2354 123B  
                   l2346 1228                     l4210 0575                     l4202 0545  
                   l4130 0246                     l4122 0225                     l4114 0209  
                   l4106 01AD                     l4050 0E9C                     l4042 0E41  
                   l4034 0DDD                     l4026 0DC3                     l4018 0D95  
                   l3068 1BA4                     l2532 149D                     l2524 1488  
                   l2516 1475                     l2508 143C                     l2460 136B  
                   l2452 135B                     l2444 1333                     l2428 1307  
                   l2436 1319                     l2380 1270                     l2372 125D  
                   l2364 1251                     l2356 123C                     l2348 1229  
                   l3500 07CC                     l2292 1C94                     l4220 05A1  
                   l4212 057D                     l4204 0556                     l4140 026B  
                   l4132 024A                     l4124 0231                     l4116 020F  
                   l4060 0F33                     l4052 0EBF                     l4044 0E68  
                   l4036 0E04                     l4028 0DC7                     l2526 148C  
                   l2518 147A                     l2470 13CF                     l2454 135D  
                   l2446 134A                     l2438 1325                     l2462 1370  
                   l2390 128C                     l2374 1262                     l2382 1272  
                   l2366 1252                     l2358 123E                     l3510 07ED  
                   l3502 07CE                     l2294 1C98                     l4230 05C9  
                   l4222 05AA                     l4214 0589                     l4206 055D  
                   l4150 0298                     l4126 0238                     l4134 0250  
                   l4142 0271                     l4118 021B                     l4070 0FA3  
                   l4062 0F5A                     l4054 0EC3                     l4046 0E73  
                   l4038 0E39                     l2528 148E                     l2480 1402  
                   l2464 1386                     l2472 13DE                     l2456 1361  
                   l2448 134E                     l2392 1290                     l2384 1280  
                   l2376 1267                     l2368 1258                     l2800 064E  
                   l3504 07D5                     l2296 1C9E                     l3600 1C63  
                   l3520 1EFF                     l4240 05EA                     l4232 05CD  
                   l4224 05AE                     l4216 058F                     l4208 056C  
                   l4160 0355                     l4152 02F3                     l4144 027E  
                   l4136 025E                     l4128 023D                     l4080 007D  
                   l4072 0FEA                     l4064 0F63                     l4056 0EC9  
                   l4048 0E79                     l2490 1419                     l2482 140B  
                   l2474 13F4                     l2466 13C4                     l2458 1362  
                   l2394 1294                     l2386 1284                     l2378 126F  
                   l2802 065B                     l3506 07D9                     l2298 1CA1  
                   l3610 1C82                     l3602 1C6A                     l3530 1F10  
                   l3522 1F01                     l3514 1EF3                     l4250 060F  
                   l4242 05F1                     l4234 05D9                     l4226 05B9  
                   l4218 0593                     l4170 038D                     l4162 035B  
                   l4154 0332                     l4146 028C                     l4138 0267  
                   l4082 00A6                     l4074 001E                     l4066 0F8C  
                   l4058 0EE8                     l2492 141E                     l2484 140F  
                   l2476 13F9                     l2468 13CA                     l2396 1298  
                   l2388 1288                     l2820 0695                     l2812 0671  
                   l3508 07E8                     l3700 1717                     l3620 14A6  
                   l3612 1C89                     l3604 1C6E                     l2740 1B76  
                   l3540 1F28                     l3532 1F16                     l3524 1F05  
                   l3516 1EF6                     l4252 0613                     l4244 05F5  
                   l4236 05E0                     l4228 05C5                     l4180 0416  
                   l4172 0392                     l4164 0368                     l4156 0348  
                   l4148 0293                     l4092 0120                     l4084 00AF  
                   l4076 0047                     l4068 0F94                     l4260 0635  
                   l3390 1BAF                     l2486 1414                     l2494 1420  
                   l2398 129C                     l2830 06C8                     l2822 069E  
                   l2814 0679                     l2806 0664                     l3710 173C  
                   l3702 1720                     l3630 14BB                     l3622 14AC  
                   l3606 1C72                     l3614 1C8F                     l2742 1B7C  
                   l3542 1F39                     l3534 1F19                     l3550 1F4D  
                   l3526 1F0A                     l3518 1EFA                     l4254 061F  
                   l4238 05E4                     l4246 0602                     l4190 051F  
                   l4182 0471                     l4174 0399                     l4166 0377  
                   l4158 0351                     l4086 00B7                     l4078 006E  
                   l4094 0129                     l4262 0649                     l3392 1BBA  
                   l2488 1417                     l2496 1424                     l2832 06D2  
                   l2840 06EC                     l2824 06B0                     l2816 068A  
                   l3720 1754                     l3712 1745                     l3704 172E  
                   l3640 14D8                     l3632 14C3                     l3624 14B0  
                   l3608 1C7C                     l2744 1B7E                     l2736 1B6F  
                   l3552 1F52                     l3544 1F3F                     l3536 1F20  
                   l3528 1F0E                     l3560 1DD3                     l3800 0AF5  
                   l4256 062B                     l4248 0608                     l4192 0526  
                   l4184 04B0                     l4176 039D                     l4168 037E  
                   l4096 015E                     l4088 00D5                     l4360 0DAD  
                   l4280 1E30                     l2674 1001                     l3394 1BC2  
                   l2498 1425                     l2930 0800                     l2826 06BE  
                   l2818 068C                     l3730 1783                     l3722 1768  
                   l3706 1737                     l3714 174B                     l3650 14EF  
                   l3642 14DC                     l3634 14C5                     l3626 14B1  
                   l3618 149F                     l2738 1B70                     l3554 1F57  
                   l3546 1F40                     l3538 1F24                     l3570 1DE7  
                   l3562 1DD7                     l4194 052A                     l4186 04BC  
                   l4178 03BB                     l4098 01A9                     l4290 1E64  
                   l4282 1E35                     l2676 1007                     l3388 1BAC  
                   l3900 1F96                     l2940 082C                     l2932 080D  
                   l2828 06BF                     l3740 17BE                     l3732 1787  
                   l3716 174F                     l3708 173B                     l3652 14F1  
                   l3644 14DD                     l3636 14CD                     l3628 14B6  
                   l3548 1F47                     l3580 1DFF                     l3572 1DED  
                   l3564 1DDC                     l3812 0C6E                     l4196 0530  
                   l4188 0517                     l4292 1E76                     l4284 1E3A  
                   l3910 1FFE                     l3902 1F9A                     l2942 0834  
                   l2870 1EA0                     l2846 06F3                     l2838 06DA  
                   l3830 0741                     l3822 0728                     l3750 17EB  
                   l3742 17CD                     l3734 17A0                     l3726 1770  
                   l3718 1750                     l3670 1562                     l3662 150C  
                   l3654 14F9                     l3646 14E2                     l3638 14D2  
                   l3590 1E21                     l3582 1E09                     l3574 1DF0  
                   l3566 1DDE                     l3558 1DD0                     l3806 0BDF  
                   l4198 0537                     l4358 0CCF                     l4294 1E7A  
                   l4286 1E3F                     l4278 1E2B                     l3904 1FBE  
                   l2960 085B                     l2952 0842                     l2944 0836  
                   l2936 0816                     l2880 1EDA                     l2872 1EAD  
                   l2848 0703                     l3840 0772                     l3832 0750  
                   l3816 070C                     l3752 17EC                     l3744 17D7  
                   l3728 1775                     l3736 17A6                     l3680 15DF  
                   l3672 158E                     l3664 151C                     l3656 14FE  
                   l3648 14E7                     l3760 1013                     l3592 1E26  
                   l3584 1E0F                     l3576 1DF7                     l3568 1DE2  
                   l3808 0BE6                     l4296 1E80                     l4288 1E44  
                   l3930 08A8                     l3922 087F                     l3906 1FC2  
                   l3914 07F2                     l2962 086B                     l2946 083A  
                   l2954 0854                     l2938 082B                     l2882 1EDB  
                   l2874 1EB1                     l2866 1E8B                     l2970 1D87  
                   l3842 077C                     l3834 0752                     l3818 071F  
                   l3754 17F7                     l3746 17D9                     l3738 17B3  
                   l3690 165F                     l3682 15FC                     l3674 15AA  
                   l3666 1529                     l3658 1503                     l3586 1E16  
                   l3578 1DFB                     l3940 08CA                     l3924 0884  
                   l3908 1FFC                     l3916 07FC                     l2964 0870  
                   l2884 1EE4                     l2876 1EBA                     l2868 1E9D  
                   l2980 1DC1                     l2972 1D94                     l3844 077D  
                   l3836 075B                     l3828 073B                     l3748 17E7  
                   l3692 168C                     l3684 160C                     l3676 15C6  
                   l3668 1546                     l3596 1C58                     l3772 11D3  
                   l3588 1E1C                     l3780 0941                     l3950 08FB  
                   l3942 08CE                     l3934 08B1                     l3926 0888  
                   l3918 07FE                     l2878 1ECC                     l2886 1EEA  
                   l2974 1D98                     l2982 1DC7                     l2966 1D7A  
                   l3870 1BD0                     l3862 07B0                     l3854 0797  
                   l3846 0785                     l3838 0764                     l3694 169C  
                   l3686 1629                     l3678 15CF                     l3598 1C60  
                   l3766 1122                     l3758 100D                     l3790 0A39  
                   l3782 0948                     l3960 092E                     l3952 0905  
                   l3944 08DC                     l3936 08B6                     l3928 0898  
                   l2976 1DAA                     l2968 1D84                     l3872 1BD6  
                   l3864 07C0                     l3848 078F                     l3856 07A9  
                   l3696 16C9                     l3688 1642                     l3768 1128  
                   l3776 093B                     l3962 092F                     l3954 090F  
                   l3946 08EC                     l3938 08C3                     l3890 1D28  
                   l3882 1CDA                     l2986 1D2A                     l2978 1DB8  
                   l3874 1BE3                     l3698 16EF                     l3794 0AC1  
                   l3778 093F                     l3956 0925                     l3948 08F7  
                   l3884 1CF0                     l2988 1D2E                     l3876 1BEA  
                   l3868 1BCE                     l3788 0A32                     l3980 0CB7  
                   l3972 0C9E                     l3958 092A                     l3966 1BF8  
                   l3886 1D0C                     l3894 1F5C                     l3878 1BF0  
                   l3798 0AEE                     l3990 0CE4                     l3982 0CBD  
                   l3974 0CA5                     l3968 1C15                     l3888 1D26  
                   l3896 1F72                     l3992 0CE8                     l3976 0CAB  
                   l3898 1F8E                     l3994 0D0B                     l3986 0CC1  
                   l3978 0CB2                     l3996 0D1E                     l3988 0CD4  
                   ?_isr 0070                     l3998 0D22                     STR_1 1896  
                   _CONT 0078                     u3100 1CC1                     _IOCB 0096  
                   u3101 1CC0                     u3200 122E                     u3120 1CD5  
                   u3201 122D                     u3121 1CD4                     u3105 1CBD  
                   u3210 1233                     u3211 1232                     u3115 1CC9  
                   u4020 1007                     u3300 12E8                     u3220 1251  
                   u3060 1C9E                     u4021 1006                     u3221 1250  
                   u3061 1C9D                     u3310 12FC                     u3230 125C  
                   u3311 12FB                     u3231 125B                     u3400 1361  
                   u3320 130B                     u3240 1262                     u3080 1CB0  
                   u3401 1360                     u3321 130A                     u3241 1261  
                   u3081 1CAF                     u3250 1267                     u3251 1266  
                   u3075 1CA2                     u3500 1414                     u3420 1386  
                   u3340 1321                     u3260 1280                     u3501 1413  
                   u3421 1385                     u3341 1320                     u3261 127F  
                   u3510 141E                     u3350 1325                     u3270 1284  
                   u3190 1228                     u3511 141D                     u3431 139D  
                   u3423 1382                     u3415 1364                     u3351 1324  
                   u3335 130E                     u3271 1283                     u3191 1227  
                   u3095 1CB1                     u3600 1475                     u3520 1424  
                   u3440 13B1                     u3432 139E                     u3360 132A  
                   u3280 12DC                     u6000 14E7                     u3601 1474  
                   u3521 1423                     u3441 13B2                     u3433 13A3  
                   u3361 1329                     u3281 12DB                     u6001 14E6  
                   u3610 147A                     u3530 1429                     u3450 13CF  
                   u3442 13B7                     u3434 13A4                     u3290 12E7  
                   u6010 14FE                     u3611 1479                     u3531 1428  
                   u3451 13CE                     u3443 13B8                     u3435 13A9  
                   u3371 133C                     u3291 12E5                     u6011 14FD  
                   u3620 1487                     u3540 142F                     u3460 13F4  
                   u3436 13AA                     u3380 134E                     u3372 1343  
                   u4500 06D9                     u6020 1503                     u3621 1486  
                   u3541 142E                     u3461 13F3                     u3381 134D  
                   u3373 134A                     u3285 12D8                     u4501 06D8  
                   u6021 1502                     u3630 148C                     u3550 1436  
                   u3470 13F9                     u3390 1352                     u4430 065B  
                   u3631 148B                     u3551 1435                     u3471 13F8  
                   u3391 1351                     u4431 065A                     u6111 1651  
                   u6031 1554                     u3640 149D                     u3560 143C  
                   u4600 1E9D                     u4520 06EB                     u4440 066F  
                   u6200 173B                     u6112 1658                     u6032 155B  
                   u4280 1B76                     u7000 0CE4                     u3641 149C  
                   u3561 143B                     u4601 1E9C                     u4521 06EA  
                   u4441 066E                     u6201 173A                     u6121 167E  
                   u6113 165F                     u6105 162B                     u6041 1570  
                   u6033 1562                     u4281 1B75                     u7001 0CE3  
                   u3570 144E                     u3490 140F                     u4530 06F2  
                   u6122 1685                     u6042 1577                     u4290 1B7C  
                   u7010 0D32                     u3571 144D                     u3491 140E  
                   u4531 06F1                     u4515 06DB                     u6131 16AB  
                   u6123 168C                     u6051 159C                     u6043 157E  
                   u4291 1B7B                     u7011 0D31                     u3580 145D  
                   u4620 1EB1                     u4460 06B0                     u6300 17CD  
                   u6220 174F                     u6140 16D5                     u6132 16B2  
                   u6052 15A3                     u7100 0F8C                     u7020 0D40  
                   u3485 1404                     u4621 1EB0                     u4461 06AF  
                   u6301 17CC                     u6221 174E                     u6133 16B9  
                   u6061 15B8                     u6053 15AA                     u7101 0F8B  
                   u7021 0D3F                     u3590 146C                     u4550 0703  
                   u6310 17EB                     u6230 1754                     u6062 15BF  
                   u7110 0FA3                     u7030 0D92                     u3591 146B  
                   u4615 1EA2                     u4551 0702                     u4455 0697  
                   u6311 17EA                     u6231 1753                     u6215 173E  
                   u6151 16E1                     u6063 15C6                     u7111 0FA2  
                   u7031 0D91                     u4800 083A                     u4640 1ECC  
                   u4480 06CE                     u6240 1768                     u6160 16FD  
                   u6152 16E8                     u6320 1013                     u6400 093F  
                   u7200 0209                     u7120 001E                     u7040 0DC3  
                   u3585 1458                     u4801 0839                     u4641 1ECB  
                   u4545 06F5                     u4481 06CD                     u4465 06AC  
                   u6305 17C9                     u6241 1767                     u6153 16EF  
                   u6145 16D0                     u6081 15EE                     u6321 1012  
                   u6401 093E                     u7201 0208                     u7121 0FFA  
                   u7041 0DC0                     u4810 0841                     u4490 06D2  
                   u6250 176F                     u6082 15F5                     u6410 0948  
                   u7210 021B                     u7130 0047                     u7050 0DC7  
                   u4811 0840                     u4635 1EB3                     u4491 06D1  
                   u4475 06C1                     u6251 176E                     u6171 1709  
                   u6091 161B                     u6083 15FC                     u6075 15C8  
                   u6411 0947                     u7211 021A                     u7131 0046  
                   u7115 0F9F                     u7051 0DC6                     u5620 1BCD  
                   u4660 1EEA                     u4900 1D98                     u6260 1775  
                   u6172 1710                     u6092 1622                     u5700 1EFA  
                   u7300 0377                     u7220 0225                     u7140 006E  
                   u7060 0E04                     u5621 1BCC                     u4661 1EE9  
                   u4645 1EC8                     u4901 1D97                     u6261 1774  
                   u6173 1717                     u6165 16F8                     u6093 1629  
                   u5701 1EF9                     u7301 0376                     u7221 0224  
                   u7141 006D                     u7125 0FF5                     u7061 0E03  
                   u4830 0853                     u4910 1DAA                     u6270 1787  
                   u5710 1F05                     u7310 0392                     u7230 0231  
                   u7150 007D                     u7070 0E68                     u4831 0852  
                   u4655 1EDC                     u4911 1DA9                     u6271 1786  
                   u6335 1030                     u5711 1F04                     u7311 0391  
                   u7231 0230                     u7151 007C                     u7071 0E67  
                   u4840 085A                     u6600 0772                     u6280 1796  
                   u6360 1128                     u5720 1F16                     u5800 1DD7  
                   u7400 057D                     u7240 025D                     u7160 00A6  
                   u7080 0EC3                     u4841 0859                     u4825 0843  
                   u6601 0771                     u6185 1719                     u6361 1127  
                   u6345 108C                     u5721 1F15                     u5801 1DD6  
                   u6505 0B17                     u6425 096A                     u7401 057C  
                   u7305 0373                     u7241 025C                     u7161 00A5  
                   u7081 0EC2                     u4930 1DC7                     u6290 17B3  
                   u5810 1DE2                     u6530 0BE6                     u6450 0A39  
                   u7410 0589                     u7250 027E                     u7090 0F5A  
                   i1l91 1C51                     u4931 1DC6                     u4915 1DA6  
                   u6291 17B2                     u6195 1730                     u6355 10E1  
                   u5811 1DE1                     u6531 0BE5                     u6515 0B53  
                   u6451 0A38                     u6435 09A6                     u7411 0588  
                   u7251 027D                     u7155 0079                     u7091 0F59  
                   u4860 086B                     u4780 080D                     u6700 1BD6  
                   u6620 078B                     u5740 1F28                     u5820 1DED  
                   u7500 061F                     u7420 0593                     u7340 051E  
                   u7260 028C                     u7180 01E3                     u4861 086A  
                   u4781 080C                     u4925 1DB9                     u6701 1BD5  
                   u6621 078A                     u6605 076E                     u6285 1791  
                   u5741 1F27                     u5821 1DEC                     u6525 0B9E  
                   u6445 09F1                     u7501 061E                     u7421 0592  
                   u7341 051D                     u7325 0419                     u7261 028B  
                   u7245 0259                     u7181 01E2                     u4870 0870  
                   u4790 0824                     u6630 078F                     u5670 07D9  
                   u5910 1C72                     u7510 062B                     u7430 05A1  
                   u7350 0536                     u7190 01EE                     u4871 086F  
                   u4855 085D                     u6631 078E                     u6615 077E  
                   u5671 07D8                     u6295 17AF                     u5911 1C71  
                   u6375 1145                     u5735 1F1A                     u7511 062A  
                   u7431 05A0                     u7351 0535                     u7335 04BF  
                   u7255 027A                     u7191 01ED                     u7175 01B0  
                   u4880 1D84                     u6640 0796                     u5920 1C7C  
                   u5760 1F39                     u5840 1DFF                     u7520 0649  
                   u7440 05B9                     u7360 053D                     u7280 0347  
                   u6801 1FA9                     u4881 1D83                     u6641 0795  
                   u5921 1C7B                     u5905 1C64                     u6385 1192  
                   u5761 1F38                     u5841 1DFE                     u6545 0BF9  
                   u6465 0A4C                     u7521 0646                     u7441 05B8  
                   u7361 053C                     u7281 0346                     u7185 01DF  
                   u6810 1FC2                     u6802 1FAA                     u6730 1BF0  
                   u6570 071F                     u5690 07ED                     u5850 1E09  
                   u6490 0AF5                     u7450 05CD                     u7370 0545  
                   u7290 0368                     u6811 1FC1                     u6803 1FAF  
                   u4795 081F                     u6731 1BEF                     u6715 1BDD  
                   u6571 071E                     u5691 07EC                     u6395 11DE  
                   u5755 1F29                     u5851 1E08                     u5835 1DF1  
                   u6555 0C35                     u6491 0AF4                     u6475 0A88  
                   u7451 05CC                     u7435 059D                     u7371 0544  
                   u7291 0367                     u7275 029B                     u6740 1CF0  
                   u6804 1FB0                     u6660 07A8                     u6580 0739  
                   u5940 1C8F                     u5780 1F4D                     u7460 05D9  
                   u7380 0556                     u6741 1CEF                     u6821 1FD1  
                   u6805 1FB5                     u6725 1BE4                     u6661 07A7  
                   u6581 0738                     u5685 07E0                     u5941 1C8E  
                   u5925 1C78                     u5781 1F4C                     u5765 1F35  
                   u6565 0C71                     u6485 0AC4                     u7461 05D8  
                   u7445 05B5                     u7381 0555                     u6910 08EB  
                   u6750 1D0C                     u6830 1FFC                     u6822 1FD2  
                   u6806 1FB6                     u6670 07AF                     u5950 14B0  
                   u5790 1F52                     u5870 1E1C                     u7470 05EA  
                   u7390 056C                     u6911 08EA                     u6751 1D0B  
                   u6831 1FFB                     u6823 1FD7                     u4895 1D89  
                   u6671 07AE                     u6655 0798                     u5951 14AF  
                   u5935 1C83                     u5791 1F51                     u5775 1F41  
                   u5871 1E1B                     u5855 1E05                     u7471 05E9  
                   u7391 056B                     u7295 0364                     u6760 1D26  
                   u6824 1FD8                     u6840 07FC                     u5960 14B6  
                   u5880 1E21                     u7480 0601                     u6905 08DD  
                   u6761 1D25                     u6825 1FDD                     u6841 07FB  
                   u5961 14B5                     u5881 1E20                     u5865 1E10  
                   u7481 0600                     u7385 0552                     u7537 1E84  
                   u6930 08FB                     u6850 0884                     u6826 1FDE  
                   u6770 1F72                     u6690 07C0                     u5970 14BB  
                   u5890 1C60                     u7490 0608                     u6931 08FA  
                   u6851 0883                     u6835 1FF8                     u6771 1F71  
                   u6691 07BF                     u6595 075D                     u5971 14BA  
                   u5891 1C5F                     u7491 0607                     u7395 0568  
                   u6940 0901                     u6860 0888                     u6780 1F8E  
                   u5980 14DC                     u6941 0900                     u6925 08F0  
                   u6861 0887                     u6765 1D22                     u6781 1F8D  
                   u6685 07B2                     u5981 14DB                     u6950 0905  
                   u6870 08A8                     u6790 1F9A                     u5990 14E2  
                   u6951 0904                     u6871 08A7                     u6791 1F99  
                   u5991 14E1                     u6960 091A                     u6970 092A  
                   u6890 08C9                     u6971 0929                     u6891 08C8  
                   u6980 092E                     u6981 092D                     u6965 0915  
                   u6885 08BB                     u6990 0CAB                     u6991 0CAA  
                   _TXIF 0064                     _WPUB 0095                     _conv 1BF5  
                   _main 1E2B                     btemp 007E                     start 000C  
           _sprintf$1113 00B2                    ??_isr 0070            ___fltol@sign1 0064  
                  ?_conv 002E          __end_of___fladd 149F                    ?_main 0070  
        __end_of___awdiv 1F5C          __end_of___flneg 07FF          __end_of___awmod 1E2B  
        __end_of___flmul 1800          __end_of___flsub 1D7A          __end_of___fltol 087C  
                  _ANSEL 0188          __end_of___lldiv 1EF3          ___awdiv@divisor 0026  
        __end_of___llmod 1DD0          __end_of___lwdiv 1CDA          __end_of___lwmod 1C94  
        ___awdiv@counter 002A                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
        __end_of_cfg_clk 1B58                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019          __end_of_dpowers 1896  
                  _scale 0938          __end_of_isdigit 1B80                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 064E  
        __initialization 000F             __end_of_conv 1C1E             __end_of_main 1E8B  
                 ??_conv 0032                   ??_main 00CD     __size_of__tdiv_to_l_ 00BD  
       ___llmod@dividend 0024                   ?_scale 0048         ___awdiv@dividend 0028  
                 _ANSELH 0189                   i1l3400 1C37                   i1l3410 1C50  
                 i1l3402 1C3B                   i1l3404 1C41                   i1l3406 1C47  
                 i1l3408 1C4C                   i1l3396 1C1E                   i1l3398 1C24  
                 u563_20 1C24                   u563_21 1C23                   u564_20 1C3B  
                 u564_21 1C3A                   u565_20 1C41                   u565_21 1C40  
                 u566_20 1C4C                   u566_21 1C4B                   u754_27 1C30  
                 _SPBRGH 009A         __end_of_cfg_iocb 1B5E         __end_of_cfg_inte 1B66  
       __end_of___xxtofl 0938         __end_of__powers_ 183A                   ___flge 1F5C  
                 ___fleq 1CDA                ??___fladd 0064                   ___wmul 1BCE  
              ??___awdiv 0076                   _cfg_io 1B80                ??___flneg 0075  
              ??___awmod 0075                ??___flmul 0036                ??___flsub 0077  
              ??___fltol 005F                ??___lldiv 0075                ??___llmod 0075  
              ??___lwdiv 0028                ??___lwmod 0075                ??_cfg_clk 0075  
                 _fround 100A         ___awdiv@quotient 002C          ___awmod@divisor 0020  
        ___awmod@counter 0024                   conv@aa 003A                ??_isdigit 0075  
     __size_of__Umul8_16 0029                   saved_w 007E                ??_sprintf 00AD  
             ___flge@ff1 0020               ___flge@ff2 0024             ___xxtofl@arg 002A  
           ___xxtofl@exp 0029             ___xxtofl@val 0020               ___fleq@ff1 0020  
             ___fleq@ff2 0024  __end_of__initialization 001A               ___flneg@f1 0020  
             ___fltol@f1 005B           __pcstackCOMMON 0070       __size_of_cfg_usart 0015  
          __end_of_scale 0C9B               __div_to_l_ 064E           _OPTION_REGbits 0081  
        __div_to_l_@exp1 002D          __div_to_l_@cntr 002C                  ??_scale 004C  
        __div_to_l_@quot 0028             sprintf@width 00C3               __pbssBANK1 00CE  
          __div_to_l_@f1 0020            __div_to_l_@f2 0024        __end_of__Umul8_16 07F2  
             __pmaintext 1E2B                  ?___flge 0020                  ?___fleq 0020  
                ?___wmul 0020                  ?_cfg_io 0070               __pintentry 0004  
     __size_of_send_char 000A       __size_of_send_crct 0025                  ?_fround 0048  
              ?_cfg_iocb 0070                ?_cfg_inte 0070                ?___xxtofl 0020  
            send_crct@st 0022               __stringtab 1800        __end_of_cfg_usart 1BA9  
      __end_of__npowers_ 186E               _scale$1112 0056          __size_of___flge 00A4  
        __size_of___fleq 0050                  ___fladd 1217                  ___awdiv 1EF3  
                ___flneg 07F2                  ___awmod 1DD0                  ___flmul 149F  
                ___flsub 1D2A                  ___fltol 0800                  ___lldiv 1E8B  
        __size_of___wmul 0027                  ___llmod 1D7A          __size_of_cfg_io 0014  
                ___lwdiv 1C94                  ___lwmod 1C58                  _cfg_clk 1B52  
        __size_of_fround 020D                  __ptext1 0C9B                  __ptext2 0938  
                __ptext3 1DD0                  __ptext4 1EF3                  __ptext5 1B6E  
                __ptext6 100A                  __ptext7 1C58                  __ptext8 1C94  
                __ptext9 149F              ?__div_to_l_ 0020                  _dpowers 186E  
             ??_cfg_iocb 0075               ??_cfg_inte 0075                  _isdigit 1B6E  
           __size_of_isr 003A               ??___xxtofl 0024         ___awmod@dividend 0022  
                _sprintf 0C9B                  clrloop0 1B67     end_of_initialization 001A  
      __end_of_send_char 100A        __end_of_send_crct 1BCE          ___lldiv@divisor 0020  
        ___lldiv@counter 002C                _RCSTAbits 0018                  psplit$0 C002D  
         __tdiv_to_l_@f1 0020           __tdiv_to_l_@f2 0024            send_char@dato 0075  
          ??__tdiv_to_l_ 0028                _PORTBbits 0006              ___fladd@grs 006F  
          ___xxtofl@sign 0028                _TRISBbits 0086               conv@result 0036  
            ___flmul@grs 003D                _TXSTAbits 0098      __size_of__div_to_l_ 00BE  
         __end_of___flge 2000           __end_of___fleq 1D2A           __end_of___wmul 1BF5  
         __end_of_cfg_io 1B94        pnum$text1_split_1 002D              _BAUDCTLbits 0187  
         __end_of_fround 1217      start_initialization 000F      __end_of__tdiv_to_l_ 07C9  
            __end_of_isr 1C58          ___llmod@divisor 0020          ___llmod@counter 0076  
               ??___flge 0028                 ??___fleq 0028                 ??___wmul 0075  
               ??_cfg_io 0075                __Umul8_16 07C9                 ??_fround 004C  
          sprintf@tmpval 00BB                ___fladd@a 0060                ___fladd@b 005C  
             fround@prec 005B                ___flmul@a 0032                ___flmul@b 002E  
            __pbssCOMMON 0077                ___flsub@a 00A0                ___flsub@b 00A4  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of_cfg_iocb 0006        __size_of_cfg_inte 0008        __size_of___xxtofl 00BC  
            sprintf@flag 00C1              sprintf@eexp 00BF              sprintf@fval 00C5  
            sprintf@prec 00C9                _cfg_usart 1B94                __pnvBANK1 00E3  
       ___lwdiv@dividend 0026                 ?___fladd 005C                 ?___awdiv 0026  
               ?___flneg 0020                 ?___awmod 0020                 ?___flmul 002E  
               ?___flsub 00A0                 ?___fltol 005B                 ?___lldiv 0020  
               ?___llmod 0020                __npowers_ 183A               ?__Umul8_16 0075  
               ?___lwdiv 0024                 ?___lwmod 0020                 ?_cfg_clk 0070  
              __pstrings 1800              __tdiv_to_l_ 070C               send_crct@i 0020  
           ??__div_to_l_ 0075                 ?_isdigit 0070         ___lwdiv@quotient 0029  
               ?_sprintf 00A8           __size_of_scale 0363        interrupt_function 0004  
         ___wmul@product 0075                clear_ram0 1B66               ?_cfg_usart 0070  
               _PIE1bits 008C                _send_char 1000                _send_crct 1BA9  
               _PIR1bits 000C       __end_of__div_to_l_ 070C              __stringbase 1805  
      ___wmul@multiplier 0020               ?_send_char 0070               ?_send_crct 0070  
            ??__Umul8_16 0020         __size_of___fladd 0288         __size_of___awdiv 0069  
       __size_of___flneg 000D         __size_of___awmod 005B         __size_of___flmul 0361  
       __size_of___flsub 0050         __size_of___fltol 007C         __size_of___lldiv 0068  
       __size_of___llmod 0056         __size_of___lwdiv 0046         __size_of___lwmod 003C  
            _fround$1110 0057              _fround$1111 0053         __size_of_cfg_clk 0006  
     __end_of__stringtab 1806              _isdigit$941 0075                 _cfg_iocb 1B58  
             sprintf@val 00B7                 _cfg_inte 1B5E                 ___xxtofl 087C  
       __size_of_isdigit 0012          ___lwdiv@divisor 0024          ___lwdiv@counter 002B  
               __ptext10 07C9                 __ptext11 070C                 __ptext20 1F5C  
               __ptext12 064E                 __ptext21 1CDA                 __ptext13 1BCE  
               __ptext30 1B52                 __ptext22 1BA9                 __ptext14 1D7A  
               __ptext31 1C1E                 __ptext23 1000                 __ptext15 1E8B  
               __ptext24 1BF5                 __ptext16 0800                 __ptext25 087C  
               __ptext17 1D2A                 __ptext26 1B94                 __ptext18 1217  
               __ptext27 1B58                 __ptext19 07F2                 __ptext28 1B80  
               __ptext29 1B5E                 __powers_ 1806         __size_of_sprintf F9B3  
          __size_of_conv 0029            __size_of_main 0060                pnum$text1 000C  
            ??_cfg_usart 0075               _INTCONbits 000B                 isdigit@c 0076  
               scale@scl 005A                 intlevel1 0000                sprintf@ap 00B6  
       __tdiv_to_l_@exp1 0031         __tdiv_to_l_@cntr 0030                sprintf@sp 00CB  
       __tdiv_to_l_@quot 002C         ___lwmod@dividend 0022         ___lldiv@dividend 0024  
            ??_send_char 0075              ??_send_crct 0076                stringcode 1800  
             _OSCCONbits 008F             ?__tdiv_to_l_ 0020   __Umul8_16@multiplicand 0075  
               sprintf@c 00CC                 sprintf@f 00A8         ___lldiv@quotient 0028  
        ___lwmod@divisor 0020          ___lwmod@counter 0076                 stringdir 1800  
               stringtab 1800            ___fladd@signs 006C             ___fladd@aexp 006D  
           ___fladd@bexp 006E     __Umul8_16@multiplier 0026        __Umul8_16@product 0022  

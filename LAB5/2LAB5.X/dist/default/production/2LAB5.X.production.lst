

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 15 23:05:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  008F                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  0105                     	;# 
   147  0107                     	;# 
   148  0108                     	;# 
   149  0109                     	;# 
   150  010C                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0185                     	;# 
   156  0187                     	;# 
   157  0188                     	;# 
   158  0189                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  008F                     	;# 
   206  0090                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  0105                     	;# 
   225  0107                     	;# 
   226  0108                     	;# 
   227  0109                     	;# 
   228  010C                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  0185                     	;# 
   234  0187                     	;# 
   235  0188                     	;# 
   236  0189                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239                           
   240                           	psect	strings
   241  1000                     __pstrings:
   242  1000                     stringtab:
   243  1000                     __stringtab:
   244  1000                     stringcode:	
   245                           ;	String table - string pointers are 1 byte each
   246                           
   247  1000                     stringdir:
   248  1000  3010               	movlw	high stringdir
   249  1001  008A               	movwf	10
   250  1002  0804               	movf	4,w
   251  1003  0A84               	incf	4,f
   252  1004  0782               	addwf	2,f
   253  1005                     __stringbase:
   254  1005  3400               	retlw	0
   255  1006                     __end_of__stringtab:
   256  1006                     __powers_:
   257  1006  3400               	retlw	0
   258  1007  3400               	retlw	0
   259  1008  3480               	retlw	128
   260  1009  343F               	retlw	63
   261  100A  3400               	retlw	0
   262  100B  3400               	retlw	0
   263  100C  3420               	retlw	32
   264  100D  3441               	retlw	65
   265  100E  3400               	retlw	0
   266  100F  3400               	retlw	0
   267  1010  34C8               	retlw	200
   268  1011  3442               	retlw	66
   269  1012  3400               	retlw	0
   270  1013  3400               	retlw	0
   271  1014  347A               	retlw	122
   272  1015  3444               	retlw	68
   273  1016  3400               	retlw	0
   274  1017  3440               	retlw	64
   275  1018  341C               	retlw	28
   276  1019  3446               	retlw	70
   277  101A  3400               	retlw	0
   278  101B  3450               	retlw	80
   279  101C  34C3               	retlw	195
   280  101D  3447               	retlw	71
   281  101E  3400               	retlw	0
   282  101F  3424               	retlw	36
   283  1020  3474               	retlw	116
   284  1021  3449               	retlw	73
   285  1022  3480               	retlw	128
   286  1023  3496               	retlw	150
   287  1024  3418               	retlw	24
   288  1025  344B               	retlw	75
   289  1026  3420               	retlw	32
   290  1027  34BC               	retlw	188
   291  1028  34BE               	retlw	190
   292  1029  344C               	retlw	76
   293  102A  3428               	retlw	40
   294  102B  346B               	retlw	107
   295  102C  346E               	retlw	110
   296  102D  344E               	retlw	78
   297  102E  34F9               	retlw	249
   298  102F  3402               	retlw	2
   299  1030  3415               	retlw	21
   300  1031  3450               	retlw	80
   301  1032  34EC               	retlw	236
   302  1033  3478               	retlw	120
   303  1034  34AD               	retlw	173
   304  1035  3460               	retlw	96
   305  1036  34CA               	retlw	202
   306  1037  34F2               	retlw	242
   307  1038  3449               	retlw	73
   308  1039  3471               	retlw	113
   309  103A                     __end_of__powers_:
   310  103A                     __npowers_:
   311  103A  3400               	retlw	0
   312  103B  3400               	retlw	0
   313  103C  3480               	retlw	128
   314  103D  343F               	retlw	63
   315  103E  34CD               	retlw	205
   316  103F  34CC               	retlw	204
   317  1040  34CC               	retlw	204
   318  1041  343D               	retlw	61
   319  1042  340A               	retlw	10
   320  1043  34D7               	retlw	215
   321  1044  3423               	retlw	35
   322  1045  343C               	retlw	60
   323  1046  346F               	retlw	111
   324  1047  3412               	retlw	18
   325  1048  3483               	retlw	131
   326  1049  343A               	retlw	58
   327  104A  3417               	retlw	23
   328  104B  34B7               	retlw	183
   329  104C  34D1               	retlw	209
   330  104D  3438               	retlw	56
   331  104E  34AC               	retlw	172
   332  104F  34C5               	retlw	197
   333  1050  3427               	retlw	39
   334  1051  3437               	retlw	55
   335  1052  34BD               	retlw	189
   336  1053  3437               	retlw	55
   337  1054  3486               	retlw	134
   338  1055  3435               	retlw	53
   339  1056  3495               	retlw	149
   340  1057  34BF               	retlw	191
   341  1058  34D6               	retlw	214
   342  1059  3433               	retlw	51
   343  105A  3477               	retlw	119
   344  105B  34CC               	retlw	204
   345  105C  342B               	retlw	43
   346  105D  3432               	retlw	50
   347  105E  345F               	retlw	95
   348  105F  3470               	retlw	112
   349  1060  3489               	retlw	137
   350  1061  3430               	retlw	48
   351  1062  34FF               	retlw	255
   352  1063  34E6               	retlw	230
   353  1064  34DB               	retlw	219
   354  1065  342E               	retlw	46
   355  1066  3408               	retlw	8
   356  1067  34E5               	retlw	229
   357  1068  343C               	retlw	60
   358  1069  341E               	retlw	30
   359  106A  3460               	retlw	96
   360  106B  3442               	retlw	66
   361  106C  34A2               	retlw	162
   362  106D  340D               	retlw	13
   363  106E                     __end_of__npowers_:
   364  106E                     _dpowers:
   365  106E  3401               	retlw	1
   366  106F  3400               	retlw	0
   367  1070  3400               	retlw	0
   368  1071  3400               	retlw	0
   369  1072  340A               	retlw	10
   370  1073  3400               	retlw	0
   371  1074  3400               	retlw	0
   372  1075  3400               	retlw	0
   373  1076  3464               	retlw	100
   374  1077  3400               	retlw	0
   375  1078  3400               	retlw	0
   376  1079  3400               	retlw	0
   377  107A  34E8               	retlw	232
   378  107B  3403               	retlw	3
   379  107C  3400               	retlw	0
   380  107D  3400               	retlw	0
   381  107E  3410               	retlw	16
   382  107F  3427               	retlw	39
   383  1080  3400               	retlw	0
   384  1081  3400               	retlw	0
   385  1082  34A0               	retlw	160
   386  1083  3486               	retlw	134
   387  1084  3401               	retlw	1
   388  1085  3400               	retlw	0
   389  1086  3440               	retlw	64
   390  1087  3442               	retlw	66
   391  1088  340F               	retlw	15
   392  1089  3400               	retlw	0
   393  108A  3480               	retlw	128
   394  108B  3496               	retlw	150
   395  108C  3498               	retlw	152
   396  108D  3400               	retlw	0
   397  108E  3400               	retlw	0
   398  108F  34E1               	retlw	225
   399  1090  34F5               	retlw	245
   400  1091  3405               	retlw	5
   401  1092  3400               	retlw	0
   402  1093  34CA               	retlw	202
   403  1094  349A               	retlw	154
   404  1095  343B               	retlw	59
   405  1096                     __end_of_dpowers:
   406  1096                     STR_1:
   407  1096  3425               	retlw	37	;'%'
   408  1097  3466               	retlw	102	;'f'
   409  1098  3400               	retlw	0
   410                           
   411                           	psect	nvBANK1
   412  00DF                     __pnvBANK1:
   413  00DF                     _v:
   414  00DF                     	ds	4
   415  00E3                     _vint:
   416  00E3                     	ds	2
   417  0018                     _RCSTAbits	set	24
   418  0005                     _PORTA	set	5
   419  0006                     _PORTB	set	6
   420  0006                     _PORTBbits	set	6
   421  000B                     _INTCONbits	set	11
   422  001A                     _RCREG	set	26
   423  0008                     _PORTD	set	8
   424  0019                     _TXREG	set	25
   425  000C                     _PIR1bits	set	12
   426  0064                     _TXIF	set	100
   427  0096                     _IOCB	set	150
   428  008C                     _PIE1bits	set	140
   429  009A                     _SPBRGH	set	154
   430  0099                     _SPBRG	set	153
   431  0098                     _TXSTAbits	set	152
   432  008F                     _OSCCONbits	set	143
   433  0095                     _WPUB	set	149
   434  0081                     _OPTION_REGbits	set	129
   435  0086                     _TRISBbits	set	134
   436  0088                     _TRISD	set	136
   437  0086                     _TRISB	set	134
   438  0085                     _TRISA	set	133
   439  0187                     _BAUDCTLbits	set	391
   440  0189                     _ANSELH	set	393
   441  0188                     _ANSEL	set	392
   442                           
   443                           	psect	cinit
   444  000F                     start_initialization:	
   445                           ; #config settings
   446                           
   447  000F                     __initialization:
   448                           
   449                           ; Clear objects allocated to COMMON
   450  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   451  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   452                           
   453                           ; Clear objects allocated to BANK1
   454  0011  1383               	bcf	3,7	;select IRP bank0
   455  0012  30CA               	movlw	low __pbssBANK1
   456  0013  0084               	movwf	4
   457  0014  30DF               	movlw	low (__pbssBANK1+21)
   458  0015  160A  158A  250E  120A  118A  	fcall	clear_ram0
   459  001A                     end_of_initialization:	
   460                           ;End of C runtime variable initialization code
   461                           
   462  001A                     __end_of__initialization:
   463  001A  0183               	clrf	3
   464  001B  120A  158A  2800   	ljmp	_main	;jump to C main() function
   465                           
   466                           	psect	bssCOMMON
   467  0077                     __pbssCOMMON:
   468  0077                     _op:
   469  0077                     	ds	1
   470  0078                     _CONT:
   471  0078                     	ds	1
   472                           
   473                           	psect	bssBANK1
   474  00CA                     __pbssBANK1:
   475  00CA                     _f2:
   476  00CA                     	ds	10
   477  00D4                     _V:
   478  00D4                     	ds	1
   479  00D5                     _f1:
   480  00D5                     	ds	10
   481                           
   482                           	psect	clrtext
   483  1D0E                     clear_ram0:	
   484                           ;	Called with FSR containing the base address, and
   485                           ;	W with the last address+1
   486                           
   487  1D0E  0064               	clrwdt	;clear the watchdog before getting into this loop
   488  1D0F                     clrloop0:
   489  1D0F  0180               	clrf	0	;clear RAM location pointed to by FSR
   490  1D10  0A84               	incf	4,f	;increment pointer
   491  1D11  0604               	xorwf	4,w	;XOR with final address
   492  1D12  1903               	btfsc	3,2	;have we reached the end yet?
   493  1D13  3400               	retlw	0	;all done for this memory range, return
   494  1D14  0604               	xorwf	4,w	;XOR again to restore value
   495  1D15  2D0F               	goto	clrloop0	;do the next byte
   496                           
   497                           	psect	cstackBANK1
   498  00A0                     __pcstackBANK1:
   499  00A0                     ?___flsub:
   500  00A0                     ___flsub@a:	
   501                           ; 4 bytes @ 0x0
   502                           
   503                           
   504                           ; 4 bytes @ 0x0
   505  00A0                     	ds	4
   506  00A4                     ___flsub@b:
   507                           
   508                           ; 4 bytes @ 0x4
   509  00A4                     	ds	4
   510  00A8                     ?_sprintf:
   511  00A8                     sprintf@f:	
   512                           ; 2 bytes @ 0x8
   513                           
   514                           
   515                           ; 1 bytes @ 0x8
   516  00A8                     	ds	3
   517  00AB                     ??_sprintf:
   518                           
   519                           ; 1 bytes @ 0xB
   520  00AB                     	ds	5
   521  00B0                     _sprintf$1114:
   522                           
   523                           ; 4 bytes @ 0x10
   524  00B0                     	ds	4
   525  00B4                     sprintf@ap:
   526                           
   527                           ; 1 bytes @ 0x14
   528  00B4                     	ds	1
   529  00B5                     sprintf@flag:
   530                           
   531                           ; 2 bytes @ 0x15
   532  00B5                     	ds	2
   533  00B7                     sprintf@prec:
   534                           
   535                           ; 2 bytes @ 0x17
   536  00B7                     	ds	2
   537  00B9                     sprintf@val:
   538                           
   539                           ; 4 bytes @ 0x19
   540  00B9                     	ds	4
   541  00BD                     sprintf@eexp:
   542                           
   543                           ; 2 bytes @ 0x1D
   544  00BD                     	ds	2
   545  00BF                     sprintf@sp:
   546                           
   547                           ; 1 bytes @ 0x1F
   548  00BF                     	ds	1
   549  00C0                     sprintf@tmpval:
   550                           
   551                           ; 4 bytes @ 0x20
   552  00C0                     	ds	4
   553  00C4                     sprintf@fval:
   554                           
   555                           ; 4 bytes @ 0x24
   556  00C4                     	ds	4
   557  00C8                     sprintf@c:
   558                           
   559                           ; 1 bytes @ 0x28
   560  00C8                     	ds	1
   561  00C9                     ??_main:
   562                           
   563                           ; 1 bytes @ 0x29
   564  00C9                     	ds	1
   565                           
   566                           	psect	cstackCOMMON
   567  0070                     __pcstackCOMMON:
   568  0070                     ?_cfg_io:
   569  0070                     ?_cfg_inte:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_cfg_iocb:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_cfg_usart:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_cfg_clk:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_send_crct:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_send_char:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_isr:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ??_isr:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_main:	
   594                           ; 1 bytes @ 0x0
   595                           
   596                           
   597                           ; 1 bytes @ 0x0
   598  0070                     	ds	5
   599  0075                     ??_cfg_io:
   600  0075                     ??_cfg_inte:	
   601                           ; 1 bytes @ 0x5
   602                           
   603  0075                     ??_cfg_iocb:	
   604                           ; 1 bytes @ 0x5
   605                           
   606  0075                     ??_cfg_usart:	
   607                           ; 1 bytes @ 0x5
   608                           
   609  0075                     ??_cfg_clk:	
   610                           ; 1 bytes @ 0x5
   611                           
   612  0075                     ??_send_char:	
   613                           ; 1 bytes @ 0x5
   614                           
   615  0075                     ??__div_to_l_:	
   616                           ; 1 bytes @ 0x5
   617                           
   618  0075                     ??___wmul:	
   619                           ; 1 bytes @ 0x5
   620                           
   621  0075                     ??___lldiv:	
   622                           ; 1 bytes @ 0x5
   623                           
   624  0075                     ??___awmod:	
   625                           ; 1 bytes @ 0x5
   626                           
   627  0075                     ??___flneg:	
   628                           ; 1 bytes @ 0x5
   629                           
   630  0075                     ??___llmod:	
   631                           ; 1 bytes @ 0x5
   632                           
   633  0075                     ??___lwmod:	
   634                           ; 1 bytes @ 0x5
   635                           
   636  0075                     ?__Umul8_16:	
   637                           ; 1 bytes @ 0x5
   638                           
   639  0075                     send_char@dato:	
   640                           ; 2 bytes @ 0x5
   641                           
   642  0075                     __Umul8_16@multiplicand:	
   643                           ; 1 bytes @ 0x5
   644                           
   645  0075                     ___wmul@product:	
   646                           ; 1 bytes @ 0x5
   647                           
   648                           
   649                           ; 2 bytes @ 0x5
   650  0075                     	ds	1
   651  0076                     ??_send_crct:
   652  0076                     ??___awdiv:	
   653                           ; 1 bytes @ 0x6
   654                           
   655  0076                     ___llmod@counter:	
   656                           ; 1 bytes @ 0x6
   657                           
   658  0076                     ___lwmod@counter:	
   659                           ; 1 bytes @ 0x6
   660                           
   661                           
   662                           ; 1 bytes @ 0x6
   663  0076                     	ds	1
   664  0077                     ??_conv2:
   665  0077                     ??___flsub:	
   666                           ; 1 bytes @ 0x7
   667                           
   668                           
   669                           	psect	cstackBANK0
   670  0020                     __pcstackBANK0:	
   671                           ; 1 bytes @ 0x7
   672                           
   673  0020                     ?___fleq:
   674  0020                     ?___flge:	
   675                           ; 1 bit 
   676                           
   677  0020                     ??__Umul8_16:	
   678                           ; 1 bit 
   679                           
   680  0020                     ?___wmul:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0020                     ?___awmod:	
   684                           ; 2 bytes @ 0x0
   685                           
   686  0020                     ?___lwmod:	
   687                           ; 2 bytes @ 0x0
   688                           
   689  0020                     ?__tdiv_to_l_:	
   690                           ; 2 bytes @ 0x0
   691                           
   692  0020                     ?__div_to_l_:	
   693                           ; 4 bytes @ 0x0
   694                           
   695  0020                     ?___lldiv:	
   696                           ; 4 bytes @ 0x0
   697                           
   698  0020                     ?___flneg:	
   699                           ; 4 bytes @ 0x0
   700                           
   701  0020                     ?___llmod:	
   702                           ; 4 bytes @ 0x0
   703                           
   704  0020                     ?___xxtofl:	
   705                           ; 4 bytes @ 0x0
   706                           
   707  0020                     send_crct@i:	
   708                           ; 4 bytes @ 0x0
   709                           
   710  0020                     ___wmul@multiplier:	
   711                           ; 2 bytes @ 0x0
   712                           
   713  0020                     ___awmod@divisor:	
   714                           ; 2 bytes @ 0x0
   715                           
   716  0020                     ___lwmod@divisor:	
   717                           ; 2 bytes @ 0x0
   718                           
   719  0020                     ___lldiv@divisor:	
   720                           ; 2 bytes @ 0x0
   721                           
   722  0020                     __div_to_l_@f1:	
   723                           ; 4 bytes @ 0x0
   724                           
   725  0020                     ___fleq@ff1:	
   726                           ; 4 bytes @ 0x0
   727                           
   728  0020                     ___flge@ff1:	
   729                           ; 4 bytes @ 0x0
   730                           
   731  0020                     ___flneg@f1:	
   732                           ; 4 bytes @ 0x0
   733                           
   734  0020                     __tdiv_to_l_@f1:	
   735                           ; 4 bytes @ 0x0
   736                           
   737  0020                     ___llmod@divisor:	
   738                           ; 4 bytes @ 0x0
   739                           
   740  0020                     ___xxtofl@val:	
   741                           ; 4 bytes @ 0x0
   742                           
   743                           
   744                           ; 4 bytes @ 0x0
   745  0020                     	ds	2
   746  0022                     send_crct@st:
   747  0022                     ___wmul@multiplicand:	
   748                           ; 1 bytes @ 0x2
   749                           
   750  0022                     ___awmod@dividend:	
   751                           ; 2 bytes @ 0x2
   752                           
   753  0022                     ___lwmod@dividend:	
   754                           ; 2 bytes @ 0x2
   755                           
   756  0022                     __Umul8_16@product:	
   757                           ; 2 bytes @ 0x2
   758                           
   759                           
   760                           ; 2 bytes @ 0x2
   761  0022                     	ds	2
   762  0024                     ??___xxtofl:
   763  0024                     ?___lwdiv:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0024                     ___awmod@counter:	
   767                           ; 2 bytes @ 0x4
   768                           
   769  0024                     ___lwdiv@divisor:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0024                     __Umul8_16@word_mpld:	
   773                           ; 2 bytes @ 0x4
   774                           
   775  0024                     ___lldiv@dividend:	
   776                           ; 2 bytes @ 0x4
   777                           
   778  0024                     __div_to_l_@f2:	
   779                           ; 4 bytes @ 0x4
   780                           
   781  0024                     ___fleq@ff2:	
   782                           ; 4 bytes @ 0x4
   783                           
   784  0024                     ___flge@ff2:	
   785                           ; 4 bytes @ 0x4
   786                           
   787  0024                     __tdiv_to_l_@f2:	
   788                           ; 4 bytes @ 0x4
   789                           
   790  0024                     ___llmod@dividend:	
   791                           ; 4 bytes @ 0x4
   792                           
   793                           
   794                           ; 4 bytes @ 0x4
   795  0024                     	ds	1
   796  0025                     ___awmod@sign:
   797                           
   798                           ; 1 bytes @ 0x5
   799  0025                     	ds	1
   800  0026                     ?___awdiv:
   801  0026                     __Umul8_16@multiplier:	
   802                           ; 2 bytes @ 0x6
   803                           
   804  0026                     ___awdiv@divisor:	
   805                           ; 1 bytes @ 0x6
   806                           
   807  0026                     ___lwdiv@dividend:	
   808                           ; 2 bytes @ 0x6
   809                           
   810                           
   811                           ; 2 bytes @ 0x6
   812  0026                     	ds	2
   813  0028                     ??__tdiv_to_l_:
   814  0028                     ??___fleq:	
   815                           ; 1 bytes @ 0x8
   816                           
   817  0028                     ??___flge:	
   818                           ; 1 bytes @ 0x8
   819                           
   820  0028                     ??___lwdiv:	
   821                           ; 1 bytes @ 0x8
   822                           
   823  0028                     ___xxtofl@sign:	
   824                           ; 1 bytes @ 0x8
   825                           
   826  0028                     ___awdiv@dividend:	
   827                           ; 1 bytes @ 0x8
   828                           
   829  0028                     ___lldiv@quotient:	
   830                           ; 2 bytes @ 0x8
   831                           
   832  0028                     __div_to_l_@quot:	
   833                           ; 4 bytes @ 0x8
   834                           
   835                           
   836                           ; 4 bytes @ 0x8
   837  0028                     	ds	1
   838  0029                     ___xxtofl@exp:
   839  0029                     ___lwdiv@quotient:	
   840                           ; 1 bytes @ 0x9
   841                           
   842                           
   843                           ; 2 bytes @ 0x9
   844  0029                     	ds	1
   845  002A                     ___awdiv@counter:
   846  002A                     ___xxtofl@arg:	
   847                           ; 1 bytes @ 0xA
   848                           
   849                           
   850                           ; 4 bytes @ 0xA
   851  002A                     	ds	1
   852  002B                     ___awdiv@sign:
   853  002B                     ___lwdiv@counter:	
   854                           ; 1 bytes @ 0xB
   855                           
   856                           
   857                           ; 1 bytes @ 0xB
   858  002B                     	ds	1
   859  002C                     ___lldiv@counter:
   860  002C                     __div_to_l_@cntr:	
   861                           ; 1 bytes @ 0xC
   862                           
   863  002C                     ___awdiv@quotient:	
   864                           ; 1 bytes @ 0xC
   865                           
   866  002C                     __tdiv_to_l_@quot:	
   867                           ; 2 bytes @ 0xC
   868                           
   869                           
   870                           ; 4 bytes @ 0xC
   871  002C                     	ds	1
   872  002D                     __div_to_l_@exp1:
   873                           
   874                           ; 1 bytes @ 0xD
   875  002D                     	ds	1
   876  002E                     ?_conv:
   877  002E                     ?___flmul:	
   878                           ; 4 bytes @ 0xE
   879                           
   880  002E                     ___flmul@b:	
   881                           ; 4 bytes @ 0xE
   882                           
   883                           
   884                           ; 4 bytes @ 0xE
   885  002E                     	ds	2
   886  0030                     __tdiv_to_l_@cntr:
   887                           
   888                           ; 1 bytes @ 0x10
   889  0030                     	ds	1
   890  0031                     __tdiv_to_l_@exp1:
   891                           
   892                           ; 1 bytes @ 0x11
   893  0031                     	ds	1
   894  0032                     ??_conv:
   895  0032                     ___flmul@a:	
   896                           ; 1 bytes @ 0x12
   897                           
   898                           
   899                           ; 4 bytes @ 0x12
   900  0032                     	ds	4
   901  0036                     ??___flmul:
   902  0036                     conv@result:	
   903                           ; 1 bytes @ 0x16
   904                           
   905                           
   906                           ; 4 bytes @ 0x16
   907  0036                     	ds	4
   908  003A                     conv@aa:
   909                           
   910                           ; 1 bytes @ 0x1A
   911  003A                     	ds	1
   912  003B                     ___flmul@sign:
   913                           
   914                           ; 1 bytes @ 0x1B
   915  003B                     	ds	1
   916  003C                     ___flmul@aexp:
   917                           
   918                           ; 1 bytes @ 0x1C
   919  003C                     	ds	1
   920  003D                     ___flmul@grs:
   921                           
   922                           ; 4 bytes @ 0x1D
   923  003D                     	ds	4
   924  0041                     ___flmul@bexp:
   925                           
   926                           ; 1 bytes @ 0x21
   927  0041                     	ds	1
   928  0042                     ___flmul@prod:
   929                           
   930                           ; 4 bytes @ 0x22
   931  0042                     	ds	4
   932  0046                     ___flmul@temp:
   933                           
   934                           ; 2 bytes @ 0x26
   935  0046                     	ds	2
   936  0048                     ?_fround:
   937  0048                     ?_scale:	
   938                           ; 4 bytes @ 0x28
   939                           
   940                           
   941                           ; 4 bytes @ 0x28
   942  0048                     	ds	4
   943  004C                     ??_fround:
   944  004C                     ??_scale:	
   945                           ; 1 bytes @ 0x2C
   946                           
   947                           
   948                           ; 1 bytes @ 0x2C
   949  004C                     	ds	7
   950  0053                     _fround$1112:
   951                           
   952                           ; 4 bytes @ 0x33
   953  0053                     	ds	3
   954  0056                     _scale$1113:
   955                           
   956                           ; 4 bytes @ 0x36
   957  0056                     	ds	1
   958  0057                     _fround$1111:
   959                           
   960                           ; 4 bytes @ 0x37
   961  0057                     	ds	3
   962  005A                     scale@scl:
   963                           
   964                           ; 1 bytes @ 0x3A
   965  005A                     	ds	1
   966  005B                     ?___fltol:
   967  005B                     fround@prec:	
   968                           ; 4 bytes @ 0x3B
   969                           
   970  005B                     ___fltol@f1:	
   971                           ; 1 bytes @ 0x3B
   972                           
   973                           
   974                           ; 4 bytes @ 0x3B
   975  005B                     	ds	1
   976  005C                     ?___fladd:
   977  005C                     ___fladd@b:	
   978                           ; 4 bytes @ 0x3C
   979                           
   980                           
   981                           ; 4 bytes @ 0x3C
   982  005C                     	ds	3
   983  005F                     ??___fltol:
   984                           
   985                           ; 1 bytes @ 0x3F
   986  005F                     	ds	1
   987  0060                     ___fladd@a:
   988                           
   989                           ; 4 bytes @ 0x40
   990  0060                     	ds	4
   991  0064                     ??___fladd:
   992  0064                     ___fltol@sign1:	
   993                           ; 1 bytes @ 0x44
   994                           
   995                           
   996                           ; 1 bytes @ 0x44
   997  0064                     	ds	1
   998  0065                     ___fltol@exp1:
   999                           
  1000                           ; 1 bytes @ 0x45
  1001  0065                     	ds	1
  1002  0066                     ?_conv2:
  1003  0066                     conv2@aa:	
  1004                           ; 2 bytes @ 0x46
  1005                           
  1006                           
  1007                           ; 4 bytes @ 0x46
  1008  0066                     	ds	4
  1009  006A                     conv2@res:
  1010                           
  1011                           ; 2 bytes @ 0x4A
  1012  006A                     	ds	2
  1013  006C                     ___fladd@signs:
  1014                           
  1015                           ; 1 bytes @ 0x4C
  1016  006C                     	ds	1
  1017  006D                     ___fladd@aexp:
  1018                           
  1019                           ; 1 bytes @ 0x4D
  1020  006D                     	ds	1
  1021  006E                     ___fladd@bexp:
  1022                           
  1023                           ; 1 bytes @ 0x4E
  1024  006E                     	ds	1
  1025  006F                     ___fladd@grs:
  1026                           
  1027                           ; 1 bytes @ 0x4F
  1028  006F                     	ds	1
  1029                           
  1030                           	psect	maintext
  1031  0800                     __pmaintext:	
  1032 ;;
  1033 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1034 ;;
  1035 ;; *************** function _main *****************
  1036 ;; Defined at:
  1037 ;;		line 91 in file "main5a.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : B00/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          0       0       1       0       0
  1054 ;;      Totals:         0       0       1       0       0
  1055 ;;Total ram usage:        1 bytes
  1056 ;; Hardware stack levels required when called:    5
  1057 ;; This function calls:
  1058 ;;		_cfg_clk
  1059 ;;		_cfg_inte
  1060 ;;		_cfg_io
  1061 ;;		_cfg_iocb
  1062 ;;		_cfg_usart
  1063 ;;		_conv
  1064 ;;		_conv2
  1065 ;;		_send_crct
  1066 ;;		_sprintf
  1067 ;; This function is called by:
  1068 ;;		Startup code after reset
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function _main
  1074  0800                     _main:
  1075  0800                     l3777:	
  1076                           ;incstack = 0
  1077                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1078                           
  1079                           
  1080                           ;main5a.c: 92:     cfg_io();
  1081  0800  160A  158A  2520  120A  158A  	fcall	_cfg_io
  1082  0805                     l3779:
  1083                           
  1084                           ;main5a.c: 93:     cfg_inte();
  1085  0805  160A  158A  2506  120A  158A  	fcall	_cfg_inte
  1086  080A                     l3781:
  1087                           
  1088                           ;main5a.c: 94:     cfg_iocb();
  1089  080A  160A  158A  2500  120A  158A  	fcall	_cfg_iocb
  1090  080F                     l3783:
  1091                           
  1092                           ;main5a.c: 95:     cfg_usart();
  1093  080F  160A  158A  2534  120A  158A  	fcall	_cfg_usart
  1094  0814                     l3785:
  1095                           
  1096                           ;main5a.c: 96:     cfg_clk();
  1097  0814  160A  158A  24FA  120A  158A  	fcall	_cfg_clk
  1098  0819                     l3787:
  1099                           
  1100                           ;main5a.c: 101:       v = conv(V);
  1101  0819  1683               	bsf	3,5	;RP0=1, select bank1
  1102  081A  1303               	bcf	3,6	;RP1=0, select bank1
  1103  081B  0854               	movf	_V^(0+128),w
  1104  081C  160A  158A  2570  120A  158A  	fcall	_conv
  1105  0821  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0822  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0823  0831               	movf	?_conv+3,w
  1108  0824  1683               	bsf	3,5	;RP0=1, select bank1
  1109  0825  1303               	bcf	3,6	;RP1=0, select bank1
  1110  0826  00E2               	movwf	(_v+3)^(0+128)
  1111  0827  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0828  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0829  0830               	movf	?_conv+2,w
  1114  082A  1683               	bsf	3,5	;RP0=1, select bank1
  1115  082B  1303               	bcf	3,6	;RP1=0, select bank1
  1116  082C  00E1               	movwf	(_v+2)^(0+128)
  1117  082D  1283               	bcf	3,5	;RP0=0, select bank0
  1118  082E  1303               	bcf	3,6	;RP1=0, select bank0
  1119  082F  082F               	movf	?_conv+1,w
  1120  0830  1683               	bsf	3,5	;RP0=1, select bank1
  1121  0831  1303               	bcf	3,6	;RP1=0, select bank1
  1122  0832  00E0               	movwf	(_v+1)^(0+128)
  1123  0833  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0834  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0835  082E               	movf	?_conv,w
  1126  0836  1683               	bsf	3,5	;RP0=1, select bank1
  1127  0837  1303               	bcf	3,6	;RP1=0, select bank1
  1128  0838  00DF               	movwf	_v^(0+128)
  1129  0839                     l3789:
  1130                           
  1131                           ;main5a.c: 102:       vint = conv2(v);
  1132  0839  0862               	movf	(_v+3)^(0+128),w
  1133  083A  1283               	bcf	3,5	;RP0=0, select bank0
  1134  083B  1303               	bcf	3,6	;RP1=0, select bank0
  1135  083C  00E9               	movwf	conv2@aa+3
  1136  083D  1683               	bsf	3,5	;RP0=1, select bank1
  1137  083E  1303               	bcf	3,6	;RP1=0, select bank1
  1138  083F  0861               	movf	(_v+2)^(0+128),w
  1139  0840  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0841  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0842  00E8               	movwf	conv2@aa+2
  1142  0843  1683               	bsf	3,5	;RP0=1, select bank1
  1143  0844  1303               	bcf	3,6	;RP1=0, select bank1
  1144  0845  0860               	movf	(_v+1)^(0+128),w
  1145  0846  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0847  1303               	bcf	3,6	;RP1=0, select bank0
  1147  0848  00E7               	movwf	conv2@aa+1
  1148  0849  1683               	bsf	3,5	;RP0=1, select bank1
  1149  084A  1303               	bcf	3,6	;RP1=0, select bank1
  1150  084B  085F               	movf	_v^(0+128),w
  1151  084C  1283               	bcf	3,5	;RP0=0, select bank0
  1152  084D  1303               	bcf	3,6	;RP1=0, select bank0
  1153  084E  00E6               	movwf	conv2@aa
  1154  084F  160A  158A  25C2  120A  158A  	fcall	_conv2
  1155  0854  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0855  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0856  0867               	movf	?_conv2+1,w
  1158  0857  1683               	bsf	3,5	;RP0=1, select bank1
  1159  0858  1303               	bcf	3,6	;RP1=0, select bank1
  1160  0859  00E4               	movwf	(_vint+1)^(0+128)
  1161  085A  1283               	bcf	3,5	;RP0=0, select bank0
  1162  085B  1303               	bcf	3,6	;RP1=0, select bank0
  1163  085C  0866               	movf	?_conv2,w
  1164  085D  1683               	bsf	3,5	;RP0=1, select bank1
  1165  085E  1303               	bcf	3,6	;RP1=0, select bank1
  1166  085F  00E3               	movwf	_vint^(0+128)
  1167  0860                     l3791:
  1168                           
  1169                           ;main5a.c: 104:       sprintf(f1, "%f",vint);
  1170  0860  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1171  0861  00C9               	movwf	??_main^(0+128)
  1172  0862  0849               	movf	??_main^(0+128),w
  1173  0863  00A8               	movwf	sprintf@f^(0+128)
  1174  0864  0864               	movf	(_vint+1)^(0+128),w
  1175  0865  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1176  0866  0863               	movf	_vint^(0+128),w
  1177  0867  00A9               	movwf	(?_sprintf^(0+128)+1)
  1178  0868  30D5               	movlw	(low (_f1| 0))& (0+255)
  1179  0869  120A  118A  201E  120A  158A  	fcall	_sprintf
  1180  086E                     l3793:
  1181                           
  1182                           ;main5a.c: 108:       send_crct(f1);
  1183  086E  30D5               	movlw	(low (_f1| 0))& (0+255)
  1184  086F  160A  118A  2099  120A  158A  	fcall	_send_crct
  1185  0874                     l3795:
  1186                           
  1187                           ;main5a.c: 110:       _delay((unsigned long)((500)*(4000000/4000000.0)));
  1188  0874  30A5               	movlw	165
  1189  0875  1683               	bsf	3,5	;RP0=1, select bank1
  1190  0876  1303               	bcf	3,6	;RP1=0, select bank1
  1191  0877  00C9               	movwf	??_main^(0+128)
  1192  0878                     u6687:
  1193  0878  0BC9               	decfsz	??_main^(0+128),f
  1194  0879  2878               	goto	u6687
  1195  087A  287B               	nop2
  1196  087B  2819               	goto	l3787
  1197  087C  120A  118A  280C   	ljmp	start
  1198  087F                     __end_of_main:
  1199                           
  1200                           	psect	text1
  1201  001E                     __ptext1:	
  1202 ;; *************** function _sprintf *****************
  1203 ;; Defined at:
  1204 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  sp              1    wreg     PTR unsigned char 
  1207 ;;		 -> f1(10), 
  1208 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1209 ;;		 -> STR_1(3), 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  sp              1   31[BANK1 ] PTR unsigned char 
  1212 ;;		 -> f1(10), 
  1213 ;;  fval            4   36[BANK1 ] PTR unsigned char 
  1214 ;;  tmpval          4   32[BANK1 ] struct .
  1215 ;;  val             4   25[BANK1 ] unsigned long 
  1216 ;;  eexp            2   29[BANK1 ] int 
  1217 ;;  prec            2   23[BANK1 ] int 
  1218 ;;  flag            2   21[BANK1 ] unsigned short 
  1219 ;;  cp              2    0        PTR const unsigned char 
  1220 ;;  len             2    0        unsigned int 
  1221 ;;  width           2    0        int 
  1222 ;;  c               1   40[BANK1 ] unsigned char 
  1223 ;;  ap              1   20[BANK1 ] PTR void [1]
  1224 ;;		 -> ?_sprintf(2), 
  1225 ;;  d               1    0        unsigned char 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  2    8[BANK1 ] int 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         0       0       3       0       0
  1236 ;;      Locals:         0       0      25       0       0
  1237 ;;      Temps:          0       0       5       0       0
  1238 ;;      Totals:         0       0      33       0       0
  1239 ;;Total ram usage:       33 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    4
  1242 ;; This function calls:
  1243 ;;		___awdiv
  1244 ;;		___fladd
  1245 ;;		___fleq
  1246 ;;		___flge
  1247 ;;		___flmul
  1248 ;;		___flneg
  1249 ;;		___flsub
  1250 ;;		___fltol
  1251 ;;		___lldiv
  1252 ;;		___llmod
  1253 ;;		___wmul
  1254 ;;		___xxtofl
  1255 ;;		__div_to_l_
  1256 ;;		__tdiv_to_l_
  1257 ;;		_fround
  1258 ;;		_scale
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           
  1265                           ;psect for function _sprintf
  1266  001E                     _sprintf:
  1267                           
  1268                           ;incstack = 0
  1269                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1270                           ;sprintf@sp stored from wreg
  1271  001E  1683               	bsf	3,5	;RP0=1, select bank1
  1272  001F  1303               	bcf	3,6	;RP1=0, select bank1
  1273  0020  00BF               	movwf	sprintf@sp^(0+128)
  1274  0021                     l3605:
  1275                           
  1276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1277  0021  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1278  0022  00AB               	movwf	??_sprintf^(0+128)
  1279  0023  082B               	movf	??_sprintf^(0+128),w
  1280  0024  00B4               	movwf	sprintf@ap^(0+128)
  1281                           
  1282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1283  0025  2F1B               	goto	l3765
  1284  0026                     l3607:
  1285                           
  1286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1287  0026  3025               	movlw	37
  1288  0027  0648               	xorwf	sprintf@c^(0+128),w
  1289  0028  1903               	btfsc	3,2
  1290  0029  282B               	goto	u6411
  1291  002A  282C               	goto	u6410
  1292  002B                     u6411:
  1293  002B  2838               	goto	l3613
  1294  002C                     u6410:
  1295  002C                     l3609:
  1296                           
  1297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1298  002C  0848               	movf	sprintf@c^(0+128),w
  1299  002D  00AB               	movwf	??_sprintf^(0+128)
  1300  002E  083F               	movf	sprintf@sp^(0+128),w
  1301  002F  0084               	movwf	4
  1302  0030  082B               	movf	??_sprintf^(0+128),w
  1303  0031  1383               	bcf	3,7	;select IRP bank0
  1304  0032  0080               	movwf	0
  1305  0033                     l3611:
  1306  0033  3001               	movlw	1
  1307  0034  00AB               	movwf	??_sprintf^(0+128)
  1308  0035  082B               	movf	??_sprintf^(0+128),w
  1309  0036  07BF               	addwf	sprintf@sp^(0+128),f
  1310                           
  1311                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1312  0037  2F1B               	goto	l3765
  1313  0038                     l3613:
  1314                           
  1315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1316  0038  01B5               	clrf	sprintf@flag^(0+128)
  1317  0039  01B6               	clrf	(sprintf@flag+1)^(0+128)
  1318                           
  1319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1320  003A  283D               	goto	l3617
  1321  003B                     l257:	
  1322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1323                           
  1324                           
  1325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1326  003B  1536               	bsf	(sprintf@flag^(0+128)+1),2
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1329  003C  2857               	goto	l3619
  1330  003D                     l3617:
  1331  003D  3001               	movlw	1
  1332  003E  07A8               	addwf	sprintf@f^(0+128),f
  1333  003F  30FF               	movlw	-1
  1334  0040  0728               	addwf	sprintf@f^(0+128),w
  1335  0041  0084               	movwf	4
  1336  0042  160A  118A  2000  120A  118A  	fcall	stringdir
  1337  0047  00C8               	movwf	sprintf@c^(0+128)
  1338  0048  00AB               	movwf	??_sprintf^(0+128)
  1339  0049  01AC               	clrf	(??_sprintf^(0+128)+1)
  1340                           
  1341                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1342                           ; Switch size 1, requested type "simple"
  1343                           ; Number of cases is 1, Range of values is 0 to 0
  1344                           ; switch strategies available:
  1345                           ; Name         Instructions Cycles
  1346                           ; simple_byte            4     3 (average)
  1347                           ; direct_byte           11     8 (fixed)
  1348                           ; jumptable            260     6 (fixed)
  1349                           ;	Chosen strategy is simple_byte
  1350  004A  082C               	movf	(??_sprintf+1)^(0+128),w
  1351  004B  3A00               	xorlw	0	; case 0
  1352  004C  1903               	skipnz
  1353  004D  284F               	goto	l3827
  1354  004E  2F1B               	goto	l3765
  1355  004F                     l3827:
  1356                           
  1357                           ; Switch size 1, requested type "simple"
  1358                           ; Number of cases is 2, Range of values is 0 to 102
  1359                           ; switch strategies available:
  1360                           ; Name         Instructions Cycles
  1361                           ; simple_byte            7     4 (average)
  1362                           ; jumptable            260     6 (fixed)
  1363                           ;	Chosen strategy is simple_byte
  1364  004F  082B               	movf	??_sprintf^(0+128),w
  1365  0050  3A00               	xorlw	0	; case 0
  1366  0051  1903               	skipnz
  1367  0052  2F2D               	goto	l3767
  1368  0053  3A66               	xorlw	102	; case 102
  1369  0054  1903               	skipnz
  1370  0055  283B               	goto	l257
  1371  0056  2F1B               	goto	l3765
  1372  0057                     l3619:
  1373                           
  1374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1375  0057  3000               	movlw	0
  1376  0058  0535               	andwf	sprintf@flag^(0+128),w
  1377  0059  00AB               	movwf	??_sprintf^(0+128)
  1378  005A  3007               	movlw	7
  1379  005B  0536               	andwf	(sprintf@flag+1)^(0+128),w
  1380  005C  00AC               	movwf	(??_sprintf+1)^(0+128)
  1381  005D  082B               	movf	??_sprintf^(0+128),w
  1382  005E  042C               	iorwf	(??_sprintf^(0+128)+1),w
  1383  005F  1903               	btfsc	3,2
  1384  0060  2862               	goto	u6421
  1385  0061  2863               	goto	u6420
  1386  0062                     u6421:
  1387  0062  2F07               	goto	l3759
  1388  0063                     u6420:
  1389  0063                     l3621:
  1390                           
  1391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1392  0063  3006               	movlw	6
  1393  0064  00B7               	movwf	sprintf@prec^(0+128)
  1394  0065  3000               	movlw	0
  1395  0066  00B8               	movwf	(sprintf@prec^(0+128)+1)
  1396  0067                     l3623:
  1397                           
  1398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1399  0067  0834               	movf	sprintf@ap^(0+128),w
  1400  0068  0084               	movwf	4
  1401  0069  1383               	bcf	3,7	;select IRP bank0
  1402  006A  0800               	movf	0,w
  1403  006B  00C4               	movwf	sprintf@fval^(0+128)
  1404  006C  0A84               	incf	4,f
  1405  006D  0800               	movf	0,w
  1406  006E  00C5               	movwf	(sprintf@fval+1)^(0+128)
  1407  006F  0A84               	incf	4,f
  1408  0070  0800               	movf	0,w
  1409  0071  00C6               	movwf	(sprintf@fval+2)^(0+128)
  1410  0072  0A84               	incf	4,f
  1411  0073  0800               	movf	0,w
  1412  0074  00C7               	movwf	(sprintf@fval+3)^(0+128)
  1413  0075                     l3625:
  1414  0075  3004               	movlw	4
  1415  0076  00AB               	movwf	??_sprintf^(0+128)
  1416  0077  082B               	movf	??_sprintf^(0+128),w
  1417  0078  07B4               	addwf	sprintf@ap^(0+128),f
  1418  0079                     l3627:
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1421  0079  0847               	movf	(sprintf@fval+3)^(0+128),w
  1422  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1423  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1424  007C  00A3               	movwf	___flge@ff1+3
  1425  007D  1683               	bsf	3,5	;RP0=1, select bank1
  1426  007E  1303               	bcf	3,6	;RP1=0, select bank1
  1427  007F  0846               	movf	(sprintf@fval+2)^(0+128),w
  1428  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0082  00A2               	movwf	___flge@ff1+2
  1431  0083  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0084  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0085  0845               	movf	(sprintf@fval+1)^(0+128),w
  1434  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0088  00A1               	movwf	___flge@ff1+1
  1437  0089  1683               	bsf	3,5	;RP0=1, select bank1
  1438  008A  1303               	bcf	3,6	;RP1=0, select bank1
  1439  008B  0844               	movf	sprintf@fval^(0+128),w
  1440  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1441  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1442  008E  00A0               	movwf	___flge@ff1
  1443  008F  3000               	movlw	0
  1444  0090  00A7               	movwf	___flge@ff2+3
  1445  0091  3000               	movlw	0
  1446  0092  00A6               	movwf	___flge@ff2+2
  1447  0093  3000               	movlw	0
  1448  0094  00A5               	movwf	___flge@ff2+1
  1449  0095  3000               	movlw	0
  1450  0096  00A4               	movwf	___flge@ff2
  1451  0097  160A  118A  220B  120A  118A  	fcall	___flge
  1452  009C  1803               	btfsc	3,0
  1453  009D  289F               	goto	u6431
  1454  009E  28A0               	goto	u6430
  1455  009F                     u6431:
  1456  009F  28D9               	goto	l3633
  1457  00A0                     u6430:
  1458  00A0                     l3629:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1461  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  1462  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  1463  00A2  0847               	movf	(sprintf@fval+3)^(0+128),w
  1464  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1465  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1466  00A5  00A3               	movwf	___flneg@f1+3
  1467  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1468  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1469  00A8  0846               	movf	(sprintf@fval+2)^(0+128),w
  1470  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1471  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1472  00AB  00A2               	movwf	___flneg@f1+2
  1473  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  1474  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  1475  00AE  0845               	movf	(sprintf@fval+1)^(0+128),w
  1476  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1477  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1478  00B1  00A1               	movwf	___flneg@f1+1
  1479  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1480  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  1481  00B4  0844               	movf	sprintf@fval^(0+128),w
  1482  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1483  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1484  00B7  00A0               	movwf	___flneg@f1
  1485  00B8  120A  118A  27F0  120A  118A  	fcall	___flneg
  1486  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1487  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1488  00BF  0823               	movf	?___flneg+3,w
  1489  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  1490  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  1491  00C2  00C7               	movwf	(sprintf@fval+3)^(0+128)
  1492  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1493  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1494  00C5  0822               	movf	?___flneg+2,w
  1495  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1496  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1497  00C8  00C6               	movwf	(sprintf@fval+2)^(0+128)
  1498  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1499  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1500  00CB  0821               	movf	?___flneg+1,w
  1501  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  1502  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  1503  00CE  00C5               	movwf	(sprintf@fval+1)^(0+128)
  1504  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1505  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1506  00D1  0820               	movf	?___flneg,w
  1507  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  1508  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  1509  00D4  00C4               	movwf	sprintf@fval^(0+128)
  1510  00D5                     l3631:
  1511                           
  1512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1513  00D5  3003               	movlw	3
  1514  00D6  04B5               	iorwf	sprintf@flag^(0+128),f
  1515  00D7  3000               	movlw	0
  1516  00D8  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  1517  00D9                     l3633:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1520  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1521  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1522  00DB  01BD               	clrf	sprintf@eexp^(0+128)
  1523  00DC  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  1524  00DD                     l3635:
  1525                           
  1526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1527  00DD  0847               	movf	(sprintf@fval+3)^(0+128),w
  1528  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1529  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1530  00E0  00A3               	movwf	___fleq@ff1+3
  1531  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1532  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1533  00E3  0846               	movf	(sprintf@fval+2)^(0+128),w
  1534  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1535  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1536  00E6  00A2               	movwf	___fleq@ff1+2
  1537  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1538  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1539  00E9  0845               	movf	(sprintf@fval+1)^(0+128),w
  1540  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1541  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1542  00EC  00A1               	movwf	___fleq@ff1+1
  1543  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  1544  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  1545  00EF  0844               	movf	sprintf@fval^(0+128),w
  1546  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1547  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1548  00F2  00A0               	movwf	___fleq@ff1
  1549  00F3  3000               	movlw	0
  1550  00F4  00A7               	movwf	___fleq@ff2+3
  1551  00F5  3000               	movlw	0
  1552  00F6  00A6               	movwf	___fleq@ff2+2
  1553  00F7  3000               	movlw	0
  1554  00F8  00A5               	movwf	___fleq@ff2+1
  1555  00F9  3000               	movlw	0
  1556  00FA  00A4               	movwf	___fleq@ff2
  1557  00FB  160A  158A  26AF  120A  118A  	fcall	___fleq
  1558  0100  1803               	btfsc	3,0
  1559  0101  2903               	goto	u6441
  1560  0102  2904               	goto	u6440
  1561  0103                     u6441:
  1562  0103  2A30               	goto	l3661
  1563  0104                     u6440:
  1564  0104                     l3637:
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1567  0104  1003               	clrc
  1568  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1569  0106  1303               	bcf	3,6	;RP1=0, select bank1
  1570  0107  0D46               	rlf	(sprintf@fval+2)^(0+128),w
  1571  0108  0D47               	rlf	(sprintf@fval+3)^(0+128),w
  1572  0109  3E82               	addlw	130
  1573  010A  00BD               	movwf	sprintf@eexp^(0+128)
  1574  010B  30FF               	movlw	255
  1575  010C  1803               	skipnc
  1576  010D  3000               	movlw	0
  1577  010E  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  1578  010F                     l3639:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1581  010F  30FF               	movlw	255
  1582  0110  07BD               	addwf	sprintf@eexp^(0+128),f
  1583  0111  1803               	skipnc
  1584  0112  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  1585  0113  30FF               	movlw	255
  1586  0114  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  1587  0115                     l3641:
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1590  0115  3003               	movlw	3
  1591  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1593  0118  00A0               	movwf	___wmul@multiplier
  1594  0119  3000               	movlw	0
  1595  011A  00A1               	movwf	___wmul@multiplier+1
  1596  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1597  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1598  011D  083E               	movf	(sprintf@eexp+1)^(0+128),w
  1599  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1600  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1601  0120  00A3               	movwf	___wmul@multiplicand+1
  1602  0121  1683               	bsf	3,5	;RP0=1, select bank1
  1603  0122  1303               	bcf	3,6	;RP1=0, select bank1
  1604  0123  083D               	movf	sprintf@eexp^(0+128),w
  1605  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0126  00A2               	movwf	___wmul@multiplicand
  1608  0127  160A  158A  2549  120A  118A  	fcall	___wmul
  1609  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1610  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1611  012E  0821               	movf	?___wmul+1,w
  1612  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1613  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1614  0131  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  1615  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1616  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0134  0820               	movf	?___wmul,w
  1618  0135  1683               	bsf	3,5	;RP0=1, select bank1
  1619  0136  1303               	bcf	3,6	;RP1=0, select bank1
  1620  0137  00BD               	movwf	sprintf@eexp^(0+128)
  1621  0138                     l3643:
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1624  0138  300A               	movlw	10
  1625  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1626  013A  1303               	bcf	3,6	;RP1=0, select bank0
  1627  013B  00A6               	movwf	___awdiv@divisor
  1628  013C  3000               	movlw	0
  1629  013D  00A7               	movwf	___awdiv@divisor+1
  1630  013E  1683               	bsf	3,5	;RP0=1, select bank1
  1631  013F  1303               	bcf	3,6	;RP1=0, select bank1
  1632  0140  083E               	movf	(sprintf@eexp+1)^(0+128),w
  1633  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1634  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1635  0143  00A9               	movwf	___awdiv@dividend+1
  1636  0144  1683               	bsf	3,5	;RP0=1, select bank1
  1637  0145  1303               	bcf	3,6	;RP1=0, select bank1
  1638  0146  083D               	movf	sprintf@eexp^(0+128),w
  1639  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0149  00A8               	movwf	___awdiv@dividend
  1642  014A  160A  118A  2126  120A  118A  	fcall	___awdiv
  1643  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0151  0827               	movf	?___awdiv+1,w
  1646  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1647  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1648  0154  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  1649  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1651  0157  0826               	movf	?___awdiv,w
  1652  0158  1683               	bsf	3,5	;RP0=1, select bank1
  1653  0159  1303               	bcf	3,6	;RP1=0, select bank1
  1654  015A  00BD               	movwf	sprintf@eexp^(0+128)
  1655  015B                     l3645:
  1656                           
  1657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1658  015B  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  1659  015C  295E               	goto	u6451
  1660  015D  295F               	goto	u6450
  1661  015E                     u6451:
  1662  015E  2965               	goto	l3649
  1663  015F                     u6450:
  1664  015F                     l3647:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1667  015F  30FF               	movlw	255
  1668  0160  07BD               	addwf	sprintf@eexp^(0+128),f
  1669  0161  1803               	skipnc
  1670  0162  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  1671  0163  30FF               	movlw	255
  1672  0164  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  1673  0165                     l3649:
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1676  0165  033D               	decf	sprintf@eexp^(0+128),w
  1677  0166  3AFF               	xorlw	255
  1678  0167  120A  158A  249D  120A  118A  	fcall	_scale
  1679  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1680  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1681  016E  084B               	movf	?_scale+3,w
  1682  016F  1683               	bsf	3,5	;RP0=1, select bank1
  1683  0170  1303               	bcf	3,6	;RP1=0, select bank1
  1684  0171  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  1685  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0174  084A               	movf	?_scale+2,w
  1688  0175  1683               	bsf	3,5	;RP0=1, select bank1
  1689  0176  1303               	bcf	3,6	;RP1=0, select bank1
  1690  0177  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  1691  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1693  017A  0849               	movf	?_scale+1,w
  1694  017B  1683               	bsf	3,5	;RP0=1, select bank1
  1695  017C  1303               	bcf	3,6	;RP1=0, select bank1
  1696  017D  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  1697  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1698  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0180  0848               	movf	?_scale,w
  1700  0181  1683               	bsf	3,5	;RP0=1, select bank1
  1701  0182  1303               	bcf	3,6	;RP1=0, select bank1
  1702  0183  00C0               	movwf	sprintf@tmpval^(0+128)
  1703  0184                     l3651:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1706  0184  0847               	movf	(sprintf@fval+3)^(0+128),w
  1707  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0187  00B1               	movwf	___flmul@b+3
  1710  0188  1683               	bsf	3,5	;RP0=1, select bank1
  1711  0189  1303               	bcf	3,6	;RP1=0, select bank1
  1712  018A  0846               	movf	(sprintf@fval+2)^(0+128),w
  1713  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1714  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1715  018D  00B0               	movwf	___flmul@b+2
  1716  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1717  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1718  0190  0845               	movf	(sprintf@fval+1)^(0+128),w
  1719  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1720  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1721  0193  00AF               	movwf	___flmul@b+1
  1722  0194  1683               	bsf	3,5	;RP0=1, select bank1
  1723  0195  1303               	bcf	3,6	;RP1=0, select bank1
  1724  0196  0844               	movf	sprintf@fval^(0+128),w
  1725  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1726  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1727  0199  00AE               	movwf	___flmul@b
  1728  019A  1683               	bsf	3,5	;RP0=1, select bank1
  1729  019B  1303               	bcf	3,6	;RP1=0, select bank1
  1730  019C  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  1731  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1732  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1733  019F  00B5               	movwf	___flmul@a+3
  1734  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  1735  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  1736  01A2  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  1737  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1738  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1739  01A5  00B4               	movwf	___flmul@a+2
  1740  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1741  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1742  01A8  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  1743  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1744  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1745  01AB  00B3               	movwf	___flmul@a+1
  1746  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1747  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  1748  01AE  0840               	movf	sprintf@tmpval^(0+128),w
  1749  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1750  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1751  01B1  00B2               	movwf	___flmul@a
  1752  01B2  120A  158A  213C  120A  118A  	fcall	___flmul
  1753  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1754  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1755  01B9  0831               	movf	?___flmul+3,w
  1756  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  1757  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  1758  01BC  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  1759  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1760  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1761  01BF  0830               	movf	?___flmul+2,w
  1762  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  1763  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  1764  01C2  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  1765  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1766  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1767  01C5  082F               	movf	?___flmul+1,w
  1768  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  1769  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  1770  01C8  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  1771  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1772  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1773  01CB  082E               	movf	?___flmul,w
  1774  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  1775  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  1776  01CE  00C0               	movwf	sprintf@tmpval^(0+128)
  1777  01CF                     l3653:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  1780  01CF  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  1781  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1782  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1783  01D2  00A3               	movwf	___flge@ff1+3
  1784  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1785  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1786  01D5  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  1787  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1788  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1789  01D8  00A2               	movwf	___flge@ff1+2
  1790  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  1791  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  1792  01DB  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  1793  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1794  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1795  01DE  00A1               	movwf	___flge@ff1+1
  1796  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  1797  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  1798  01E1  0840               	movf	sprintf@tmpval^(0+128),w
  1799  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1800  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1801  01E4  00A0               	movwf	___flge@ff1
  1802  01E5  303F               	movlw	63
  1803  01E6  00A7               	movwf	___flge@ff2+3
  1804  01E7  3080               	movlw	128
  1805  01E8  00A6               	movwf	___flge@ff2+2
  1806  01E9  3000               	movlw	0
  1807  01EA  00A5               	movwf	___flge@ff2+1
  1808  01EB  3000               	movlw	0
  1809  01EC  00A4               	movwf	___flge@ff2
  1810  01ED  160A  118A  220B  120A  118A  	fcall	___flge
  1811  01F2  1803               	btfsc	3,0
  1812  01F3  29F5               	goto	u6461
  1813  01F4  29F6               	goto	u6460
  1814  01F5                     u6461:
  1815  01F5  29FF               	goto	l3657
  1816  01F6                     u6460:
  1817  01F6                     l3655:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  1820  01F6  30FF               	movlw	255
  1821  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  1822  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  1823  01F9  07BD               	addwf	sprintf@eexp^(0+128),f
  1824  01FA  1803               	skipnc
  1825  01FB  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  1826  01FC  30FF               	movlw	255
  1827  01FD  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  1828  01FE  2A30               	goto	l3661
  1829  01FF                     l3657:
  1830  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1831  0200  1303               	bcf	3,6	;RP1=0, select bank1
  1832  0201  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  1833  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0204  00A3               	movwf	___flge@ff1+3
  1836  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1837  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1838  0207  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  1839  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1841  020A  00A2               	movwf	___flge@ff1+2
  1842  020B  1683               	bsf	3,5	;RP0=1, select bank1
  1843  020C  1303               	bcf	3,6	;RP1=0, select bank1
  1844  020D  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  1845  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1846  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0210  00A1               	movwf	___flge@ff1+1
  1848  0211  1683               	bsf	3,5	;RP0=1, select bank1
  1849  0212  1303               	bcf	3,6	;RP1=0, select bank1
  1850  0213  0840               	movf	sprintf@tmpval^(0+128),w
  1851  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0216  00A0               	movwf	___flge@ff1
  1854  0217  3041               	movlw	65
  1855  0218  00A7               	movwf	___flge@ff2+3
  1856  0219  3020               	movlw	32
  1857  021A  00A6               	movwf	___flge@ff2+2
  1858  021B  3000               	movlw	0
  1859  021C  00A5               	movwf	___flge@ff2+1
  1860  021D  3000               	movlw	0
  1861  021E  00A4               	movwf	___flge@ff2
  1862  021F  160A  118A  220B  120A  118A  	fcall	___flge
  1863  0224  1C03               	btfss	3,0
  1864  0225  2A27               	goto	u6471
  1865  0226  2A28               	goto	u6470
  1866  0227                     u6471:
  1867  0227  2A30               	goto	l3661
  1868  0228                     u6470:
  1869  0228                     l3659:
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  1872  0228  3001               	movlw	1
  1873  0229  1683               	bsf	3,5	;RP0=1, select bank1
  1874  022A  1303               	bcf	3,6	;RP1=0, select bank1
  1875  022B  07BD               	addwf	sprintf@eexp^(0+128),f
  1876  022C  1803               	skipnc
  1877  022D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  1878  022E  3000               	movlw	0
  1879  022F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  1880  0230                     l3661:
  1881  0230                     l3663:	
  1882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  1883                           
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  1886  0230  3006               	movlw	6
  1887  0231  160A  118A  236B  120A  118A  	fcall	_fround
  1888  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0238  084B               	movf	?_fround+3,w
  1891  0239  00DF               	movwf	___fladd@b+3
  1892  023A  084A               	movf	?_fround+2,w
  1893  023B  00DE               	movwf	___fladd@b+2
  1894  023C  0849               	movf	?_fround+1,w
  1895  023D  00DD               	movwf	___fladd@b+1
  1896  023E  0848               	movf	?_fround,w
  1897  023F  00DC               	movwf	___fladd@b
  1898  0240  1683               	bsf	3,5	;RP0=1, select bank1
  1899  0241  1303               	bcf	3,6	;RP1=0, select bank1
  1900  0242  0847               	movf	(sprintf@fval+3)^(0+128),w
  1901  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0245  00E3               	movwf	___fladd@a+3
  1904  0246  1683               	bsf	3,5	;RP0=1, select bank1
  1905  0247  1303               	bcf	3,6	;RP1=0, select bank1
  1906  0248  0846               	movf	(sprintf@fval+2)^(0+128),w
  1907  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1908  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1909  024B  00E2               	movwf	___fladd@a+2
  1910  024C  1683               	bsf	3,5	;RP0=1, select bank1
  1911  024D  1303               	bcf	3,6	;RP1=0, select bank1
  1912  024E  0845               	movf	(sprintf@fval+1)^(0+128),w
  1913  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0251  00E1               	movwf	___fladd@a+1
  1916  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1917  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1918  0254  0844               	movf	sprintf@fval^(0+128),w
  1919  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1920  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1921  0257  00E0               	movwf	___fladd@a
  1922  0258  160A  118A  2578  120A  118A  	fcall	___fladd
  1923  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1924  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1925  025F  085F               	movf	?___fladd+3,w
  1926  0260  1683               	bsf	3,5	;RP0=1, select bank1
  1927  0261  1303               	bcf	3,6	;RP1=0, select bank1
  1928  0262  00C7               	movwf	(sprintf@fval+3)^(0+128)
  1929  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0265  085E               	movf	?___fladd+2,w
  1932  0266  1683               	bsf	3,5	;RP0=1, select bank1
  1933  0267  1303               	bcf	3,6	;RP1=0, select bank1
  1934  0268  00C6               	movwf	(sprintf@fval+2)^(0+128)
  1935  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1936  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1937  026B  085D               	movf	?___fladd+1,w
  1938  026C  1683               	bsf	3,5	;RP0=1, select bank1
  1939  026D  1303               	bcf	3,6	;RP1=0, select bank1
  1940  026E  00C5               	movwf	(sprintf@fval+1)^(0+128)
  1941  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1943  0271  085C               	movf	?___fladd,w
  1944  0272  1683               	bsf	3,5	;RP0=1, select bank1
  1945  0273  1303               	bcf	3,6	;RP1=0, select bank1
  1946  0274  00C4               	movwf	sprintf@fval^(0+128)
  1947  0275                     l3665:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1950  0275  083E               	movf	(sprintf@eexp+1)^(0+128),w
  1951  0276  3A80               	xorlw	128
  1952  0277  00FF               	movwf	btemp+1
  1953  0278  3080               	movlw	128
  1954  0279  027F               	subwf	btemp+1,w
  1955  027A  1D03               	skipz
  1956  027B  2A7E               	goto	u6485
  1957  027C  300A               	movlw	10
  1958  027D  023D               	subwf	sprintf@eexp^(0+128),w
  1959  027E                     u6485:
  1960  027E  1803               	skipnc
  1961  027F  2A81               	goto	u6481
  1962  0280  2A82               	goto	u6480
  1963  0281                     u6481:
  1964  0281  2AE1               	goto	l3673
  1965  0282                     u6480:
  1966  0282                     l3667:
  1967  0282  1683               	bsf	3,5	;RP0=1, select bank1
  1968  0283  1303               	bcf	3,6	;RP1=0, select bank1
  1969  0284  0847               	movf	(sprintf@fval+3)^(0+128),w
  1970  0285  1283               	bcf	3,5	;RP0=0, select bank0
  1971  0286  1303               	bcf	3,6	;RP1=0, select bank0
  1972  0287  00A3               	movwf	___fleq@ff1+3
  1973  0288  1683               	bsf	3,5	;RP0=1, select bank1
  1974  0289  1303               	bcf	3,6	;RP1=0, select bank1
  1975  028A  0846               	movf	(sprintf@fval+2)^(0+128),w
  1976  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1977  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1978  028D  00A2               	movwf	___fleq@ff1+2
  1979  028E  1683               	bsf	3,5	;RP0=1, select bank1
  1980  028F  1303               	bcf	3,6	;RP1=0, select bank1
  1981  0290  0845               	movf	(sprintf@fval+1)^(0+128),w
  1982  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0293  00A1               	movwf	___fleq@ff1+1
  1985  0294  1683               	bsf	3,5	;RP0=1, select bank1
  1986  0295  1303               	bcf	3,6	;RP1=0, select bank1
  1987  0296  0844               	movf	sprintf@fval^(0+128),w
  1988  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0299  00A0               	movwf	___fleq@ff1
  1991  029A  3000               	movlw	0
  1992  029B  00A7               	movwf	___fleq@ff2+3
  1993  029C  3000               	movlw	0
  1994  029D  00A6               	movwf	___fleq@ff2+2
  1995  029E  3000               	movlw	0
  1996  029F  00A5               	movwf	___fleq@ff2+1
  1997  02A0  3000               	movlw	0
  1998  02A1  00A4               	movwf	___fleq@ff2
  1999  02A2  160A  158A  26AF  120A  118A  	fcall	___fleq
  2000  02A7  1803               	btfsc	3,0
  2001  02A8  2AAA               	goto	u6491
  2002  02A9  2AAB               	goto	u6490
  2003  02AA                     u6491:
  2004  02AA  2B8D               	goto	l3687
  2005  02AB                     u6490:
  2006  02AB                     l3669:
  2007  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  2008  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  2009  02AD  0847               	movf	(sprintf@fval+3)^(0+128),w
  2010  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2011  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2012  02B0  00DE               	movwf	___fltol@f1+3
  2013  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2014  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  2015  02B3  0846               	movf	(sprintf@fval+2)^(0+128),w
  2016  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2017  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2018  02B6  00DD               	movwf	___fltol@f1+2
  2019  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2020  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2021  02B9  0845               	movf	(sprintf@fval+1)^(0+128),w
  2022  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2023  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2024  02BC  00DC               	movwf	___fltol@f1+1
  2025  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2026  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2027  02BF  0844               	movf	sprintf@fval^(0+128),w
  2028  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2029  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2030  02C2  00DB               	movwf	___fltol@f1
  2031  02C3  160A  118A  218F  120A  118A  	fcall	___fltol
  2032  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2033  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2034  02CA  085E               	movf	?___fltol+3,w
  2035  02CB  045D               	iorwf	?___fltol+2,w
  2036  02CC  045C               	iorwf	?___fltol+1,w
  2037  02CD  045B               	iorwf	?___fltol,w
  2038  02CE  1D03               	skipz
  2039  02CF  2AD1               	goto	u6501
  2040  02D0  2AD2               	goto	u6500
  2041  02D1                     u6501:
  2042  02D1  2B8D               	goto	l3687
  2043  02D2                     u6500:
  2044  02D2                     l3671:
  2045  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2046  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2047  02D4  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2048  02D5  3A80               	xorlw	128
  2049  02D6  00FF               	movwf	btemp+1
  2050  02D7  3080               	movlw	128
  2051  02D8  027F               	subwf	btemp+1,w
  2052  02D9  1D03               	skipz
  2053  02DA  2ADD               	goto	u6515
  2054  02DB  3002               	movlw	2
  2055  02DC  023D               	subwf	sprintf@eexp^(0+128),w
  2056  02DD                     u6515:
  2057  02DD  1C03               	skipc
  2058  02DE  2AE0               	goto	u6511
  2059  02DF  2AE1               	goto	u6510
  2060  02E0                     u6511:
  2061  02E0  2B8D               	goto	l3687
  2062  02E1                     u6510:
  2063  02E1                     l3673:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2066  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2067  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  2068  02E3  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2069  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2070  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2071  02E6  00A3               	movwf	___flge@ff1+3
  2072  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2073  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2074  02E9  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2075  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2076  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2077  02EC  00A2               	movwf	___flge@ff1+2
  2078  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  2079  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  2080  02EF  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2081  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2082  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2083  02F2  00A1               	movwf	___flge@ff1+1
  2084  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2085  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  2086  02F5  0840               	movf	sprintf@tmpval^(0+128),w
  2087  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2088  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2089  02F8  00A0               	movwf	___flge@ff1
  2090  02F9  3040               	movlw	64
  2091  02FA  00A7               	movwf	___flge@ff2+3
  2092  02FB  3089               	movlw	137
  2093  02FC  00A6               	movwf	___flge@ff2+2
  2094  02FD  3070               	movlw	112
  2095  02FE  00A5               	movwf	___flge@ff2+1
  2096  02FF  305F               	movlw	95
  2097  0300  00A4               	movwf	___flge@ff2
  2098  0301  160A  118A  220B  120A  118A  	fcall	___flge
  2099  0306  1803               	btfsc	3,0
  2100  0307  2B09               	goto	u6521
  2101  0308  2B0A               	goto	u6520
  2102  0309                     u6521:
  2103  0309  2B13               	goto	l3677
  2104  030A                     u6520:
  2105  030A                     l3675:
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2108  030A  30F7               	movlw	247
  2109  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2110  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2111  030D  07BD               	addwf	sprintf@eexp^(0+128),f
  2112  030E  1803               	skipnc
  2113  030F  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2114  0310  30FF               	movlw	255
  2115  0311  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2118  0312  2B1B               	goto	l3679
  2119  0313                     l3677:
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2122  0313  30F8               	movlw	248
  2123  0314  1683               	bsf	3,5	;RP0=1, select bank1
  2124  0315  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0316  07BD               	addwf	sprintf@eexp^(0+128),f
  2126  0317  1803               	skipnc
  2127  0318  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2128  0319  30FF               	movlw	255
  2129  031A  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2130  031B                     l3679:
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2133  031B  083D               	movf	sprintf@eexp^(0+128),w
  2134  031C  120A  158A  249D  120A  118A  	fcall	_scale
  2135  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0322  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0323  084B               	movf	?_scale+3,w
  2138  0324  1683               	bsf	3,5	;RP0=1, select bank1
  2139  0325  1303               	bcf	3,6	;RP1=0, select bank1
  2140  0326  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2141  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2142  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2143  0329  084A               	movf	?_scale+2,w
  2144  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2145  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2146  032C  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2147  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2148  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2149  032F  0849               	movf	?_scale+1,w
  2150  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2151  0331  1303               	bcf	3,6	;RP1=0, select bank1
  2152  0332  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2153  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2155  0335  0848               	movf	?_scale,w
  2156  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2158  0338  00C0               	movwf	sprintf@tmpval^(0+128)
  2159  0339                     l3681:
  2160  0339  0847               	movf	(sprintf@fval+3)^(0+128),w
  2161  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2162  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2163  033C  00A3               	movwf	__div_to_l_@f1+3
  2164  033D  1683               	bsf	3,5	;RP0=1, select bank1
  2165  033E  1303               	bcf	3,6	;RP1=0, select bank1
  2166  033F  0846               	movf	(sprintf@fval+2)^(0+128),w
  2167  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0342  00A2               	movwf	__div_to_l_@f1+2
  2170  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2171  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2172  0345  0845               	movf	(sprintf@fval+1)^(0+128),w
  2173  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0348  00A1               	movwf	__div_to_l_@f1+1
  2176  0349  1683               	bsf	3,5	;RP0=1, select bank1
  2177  034A  1303               	bcf	3,6	;RP1=0, select bank1
  2178  034B  0844               	movf	sprintf@fval^(0+128),w
  2179  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2180  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2181  034E  00A0               	movwf	__div_to_l_@f1
  2182  034F  1683               	bsf	3,5	;RP0=1, select bank1
  2183  0350  1303               	bcf	3,6	;RP1=0, select bank1
  2184  0351  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2185  0352  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0353  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0354  00A7               	movwf	__div_to_l_@f2+3
  2188  0355  1683               	bsf	3,5	;RP0=1, select bank1
  2189  0356  1303               	bcf	3,6	;RP1=0, select bank1
  2190  0357  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2191  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2193  035A  00A6               	movwf	__div_to_l_@f2+2
  2194  035B  1683               	bsf	3,5	;RP0=1, select bank1
  2195  035C  1303               	bcf	3,6	;RP1=0, select bank1
  2196  035D  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2197  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2198  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0360  00A5               	movwf	__div_to_l_@f2+1
  2200  0361  1683               	bsf	3,5	;RP0=1, select bank1
  2201  0362  1303               	bcf	3,6	;RP1=0, select bank1
  2202  0363  0840               	movf	sprintf@tmpval^(0+128),w
  2203  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0366  00A4               	movwf	__div_to_l_@f2
  2206  0367  120A  118A  2732  120A  118A  	fcall	__div_to_l_
  2207  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2208  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2209  036E  0823               	movf	?__div_to_l_+3,w
  2210  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2211  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2212  0371  00BC               	movwf	(sprintf@val+3)^(0+128)
  2213  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0374  0822               	movf	?__div_to_l_+2,w
  2216  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2217  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2218  0377  00BB               	movwf	(sprintf@val+2)^(0+128)
  2219  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2221  037A  0821               	movf	?__div_to_l_+1,w
  2222  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2223  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2224  037D  00BA               	movwf	(sprintf@val+1)^(0+128)
  2225  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2226  037F  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0380  0820               	movf	?__div_to_l_,w
  2228  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0382  1303               	bcf	3,6	;RP1=0, select bank1
  2230  0383  00B9               	movwf	sprintf@val^(0+128)
  2231  0384                     l3685:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2234  0384  3000               	movlw	0
  2235  0385  00C7               	movwf	(sprintf@fval+3)^(0+128)
  2236  0386  3000               	movlw	0
  2237  0387  00C6               	movwf	(sprintf@fval+2)^(0+128)
  2238  0388  3000               	movlw	0
  2239  0389  00C5               	movwf	(sprintf@fval+1)^(0+128)
  2240  038A  3000               	movlw	0
  2241  038B  00C4               	movwf	sprintf@fval^(0+128)
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2244  038C  2C0F               	goto	l3693
  2245  038D                     l3687:
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2248  038D  1683               	bsf	3,5	;RP0=1, select bank1
  2249  038E  1303               	bcf	3,6	;RP1=0, select bank1
  2250  038F  0847               	movf	(sprintf@fval+3)^(0+128),w
  2251  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0391  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0392  00DE               	movwf	___fltol@f1+3
  2254  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0394  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0395  0846               	movf	(sprintf@fval+2)^(0+128),w
  2257  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0398  00DD               	movwf	___fltol@f1+2
  2260  0399  1683               	bsf	3,5	;RP0=1, select bank1
  2261  039A  1303               	bcf	3,6	;RP1=0, select bank1
  2262  039B  0845               	movf	(sprintf@fval+1)^(0+128),w
  2263  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2264  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2265  039E  00DC               	movwf	___fltol@f1+1
  2266  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2267  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2268  03A1  0844               	movf	sprintf@fval^(0+128),w
  2269  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2270  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2271  03A4  00DB               	movwf	___fltol@f1
  2272  03A5  160A  118A  218F  120A  118A  	fcall	___fltol
  2273  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2274  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2275  03AC  085E               	movf	?___fltol+3,w
  2276  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2277  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2278  03AF  00BC               	movwf	(sprintf@val+3)^(0+128)
  2279  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2280  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2281  03B2  085D               	movf	?___fltol+2,w
  2282  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2283  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2284  03B5  00BB               	movwf	(sprintf@val+2)^(0+128)
  2285  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2286  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2287  03B8  085C               	movf	?___fltol+1,w
  2288  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2289  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2290  03BB  00BA               	movwf	(sprintf@val+1)^(0+128)
  2291  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2292  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2293  03BE  085B               	movf	?___fltol,w
  2294  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2295  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2296  03C1  00B9               	movwf	sprintf@val^(0+128)
  2297  03C2                     l3689:
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2300  03C2  083C               	movf	(sprintf@val+3)^(0+128),w
  2301  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2302  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2303  03C5  00A3               	movwf	___xxtofl@val+3
  2304  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2305  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2306  03C8  083B               	movf	(sprintf@val+2)^(0+128),w
  2307  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2308  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2309  03CB  00A2               	movwf	___xxtofl@val+2
  2310  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  2311  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  2312  03CE  083A               	movf	(sprintf@val+1)^(0+128),w
  2313  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2314  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2315  03D1  00A1               	movwf	___xxtofl@val+1
  2316  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2317  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2318  03D4  0839               	movf	sprintf@val^(0+128),w
  2319  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2320  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2321  03D7  00A0               	movwf	___xxtofl@val
  2322  03D8  3000               	movlw	0
  2323  03D9  160A  118A  22AF  120A  118A  	fcall	___xxtofl
  2324  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2325  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2326  03E0  0823               	movf	?___xxtofl+3,w
  2327  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2328  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  2329  03E3  00A3               	movwf	(___flsub@a+3)^(0+128)
  2330  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2331  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2332  03E6  0822               	movf	?___xxtofl+2,w
  2333  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2334  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2335  03E9  00A2               	movwf	(___flsub@a+2)^(0+128)
  2336  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2337  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2338  03EC  0821               	movf	?___xxtofl+1,w
  2339  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2340  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2341  03EF  00A1               	movwf	(___flsub@a+1)^(0+128)
  2342  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2343  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2344  03F2  0820               	movf	?___xxtofl,w
  2345  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2346  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2347  03F5  00A0               	movwf	___flsub@a^(0+128)
  2348  03F6  0847               	movf	(sprintf@fval+3)^(0+128),w
  2349  03F7  00A7               	movwf	(___flsub@b+3)^(0+128)
  2350  03F8  0846               	movf	(sprintf@fval+2)^(0+128),w
  2351  03F9  00A6               	movwf	(___flsub@b+2)^(0+128)
  2352  03FA  0845               	movf	(sprintf@fval+1)^(0+128),w
  2353  03FB  00A5               	movwf	(___flsub@b+1)^(0+128)
  2354  03FC  0844               	movf	sprintf@fval^(0+128),w
  2355  03FD  00A4               	movwf	___flsub@b^(0+128)
  2356  03FE  160A  158A  26FF  120A  118A  	fcall	___flsub
  2357  0403  1683               	bsf	3,5	;RP0=1, select bank1
  2358  0404  1303               	bcf	3,6	;RP1=0, select bank1
  2359  0405  0823               	movf	(?___flsub+3)^(0+128),w
  2360  0406  00C7               	movwf	(sprintf@fval+3)^(0+128)
  2361  0407  0822               	movf	(?___flsub+2)^(0+128),w
  2362  0408  00C6               	movwf	(sprintf@fval+2)^(0+128)
  2363  0409  0821               	movf	(?___flsub+1)^(0+128),w
  2364  040A  00C5               	movwf	(sprintf@fval+1)^(0+128)
  2365  040B  0820               	movf	?___flsub^(0+128),w
  2366  040C  00C4               	movwf	sprintf@fval^(0+128)
  2367  040D                     l3691:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2370  040D  01BD               	clrf	sprintf@eexp^(0+128)
  2371  040E  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2372  040F                     l3693:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2375  040F  01C8               	clrf	sprintf@c^(0+128)
  2376  0410  0AC8               	incf	sprintf@c^(0+128),f
  2377  0411                     l3699:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2380  0411  0848               	movf	sprintf@c^(0+128),w
  2381  0412  00AB               	movwf	??_sprintf^(0+128)
  2382  0413  3001               	movlw	1
  2383  0414                     u6535:
  2384  0414  1003               	clrc
  2385  0415  0DAB               	rlf	??_sprintf^(0+128),f
  2386  0416  3EFF               	addlw	-1
  2387  0417  1D03               	skipz
  2388  0418  2C14               	goto	u6535
  2389  0419  1003               	clrc
  2390  041A  0D2B               	rlf	??_sprintf^(0+128),w
  2391  041B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2392  041C  0084               	movwf	4
  2393  041D  160A  118A  2000  120A  118A  	fcall	stringdir
  2394  0422  00AC               	movwf	(??_sprintf+1)^(0+128)
  2395  0423  160A  118A  2000  120A  118A  	fcall	stringdir
  2396  0428  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
  2397  0429  160A  118A  2000  120A  118A  	fcall	stringdir
  2398  042E  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
  2399  042F  160A  118A  2000  120A  118A  	fcall	stringdir
  2400  0434  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
  2401  0435  082F               	movf	(??_sprintf+4)^(0+128),w
  2402  0436  023C               	subwf	(sprintf@val+3)^(0+128),w
  2403  0437  1D03               	skipz
  2404  0438  2C43               	goto	u6545
  2405  0439  082E               	movf	(??_sprintf+3)^(0+128),w
  2406  043A  023B               	subwf	(sprintf@val+2)^(0+128),w
  2407  043B  1D03               	skipz
  2408  043C  2C43               	goto	u6545
  2409  043D  082D               	movf	(??_sprintf+2)^(0+128),w
  2410  043E  023A               	subwf	(sprintf@val+1)^(0+128),w
  2411  043F  1D03               	skipz
  2412  0440  2C43               	goto	u6545
  2413  0441  082C               	movf	(??_sprintf+1)^(0+128),w
  2414  0442  0239               	subwf	sprintf@val^(0+128),w
  2415  0443                     u6545:
  2416  0443  1803               	skipnc
  2417  0444  2C46               	goto	u6541
  2418  0445  2C47               	goto	u6540
  2419  0446                     u6541:
  2420  0446  2C48               	goto	l3703
  2421  0447                     u6540:
  2422  0447  2C52               	goto	l3705
  2423  0448                     l3703:
  2424  0448  3001               	movlw	1
  2425  0449  00AB               	movwf	??_sprintf^(0+128)
  2426  044A  082B               	movf	??_sprintf^(0+128),w
  2427  044B  07C8               	addwf	sprintf@c^(0+128),f
  2428  044C  300A               	movlw	10
  2429  044D  0648               	xorwf	sprintf@c^(0+128),w
  2430  044E  1D03               	btfss	3,2
  2431  044F  2C51               	goto	u6551
  2432  0450  2C52               	goto	u6550
  2433  0451                     u6551:
  2434  0451  2C11               	goto	l3699
  2435  0452                     u6550:
  2436  0452                     l3705:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2439  0452  3003               	movlw	3
  2440  0453  0535               	andwf	sprintf@flag^(0+128),w
  2441  0454  00AB               	movwf	??_sprintf^(0+128)
  2442  0455  3000               	movlw	0
  2443  0456  0536               	andwf	(sprintf@flag+1)^(0+128),w
  2444  0457  00AC               	movwf	(??_sprintf+1)^(0+128)
  2445  0458  082B               	movf	??_sprintf^(0+128),w
  2446  0459  042C               	iorwf	(??_sprintf^(0+128)+1),w
  2447  045A  1903               	btfsc	3,2
  2448  045B  2C5D               	goto	u6561
  2449  045C  2C5E               	goto	u6560
  2450  045D                     u6561:
  2451  045D  2D10               	goto	l282
  2452  045E                     u6560:
  2453  045E                     l3707:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2456  045E  302D               	movlw	45
  2457  045F  00AB               	movwf	??_sprintf^(0+128)
  2458  0460  083F               	movf	sprintf@sp^(0+128),w
  2459  0461  0084               	movwf	4
  2460  0462  082B               	movf	??_sprintf^(0+128),w
  2461  0463  1383               	bcf	3,7	;select IRP bank0
  2462  0464  0080               	movwf	0
  2463  0465                     l3709:
  2464  0465  3001               	movlw	1
  2465  0466  00AB               	movwf	??_sprintf^(0+128)
  2466  0467  082B               	movf	??_sprintf^(0+128),w
  2467  0468  07BF               	addwf	sprintf@sp^(0+128),f
  2468  0469  2D10               	goto	l282
  2469  046A                     l3711:
  2470                           
  2471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2472  046A  0848               	movf	sprintf@c^(0+128),w
  2473  046B  00AB               	movwf	??_sprintf^(0+128)
  2474  046C  3001               	movlw	1
  2475  046D                     u6575:
  2476  046D  1003               	clrc
  2477  046E  0DAB               	rlf	??_sprintf^(0+128),f
  2478  046F  3EFF               	addlw	-1
  2479  0470  1D03               	skipz
  2480  0471  2C6D               	goto	u6575
  2481  0472  1003               	clrc
  2482  0473  0D2B               	rlf	??_sprintf^(0+128),w
  2483  0474  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2484  0475  0084               	movwf	4
  2485  0476  160A  118A  2000  120A  118A  	fcall	stringdir
  2486  047B  1283               	bcf	3,5	;RP0=0, select bank0
  2487  047C  1303               	bcf	3,6	;RP1=0, select bank0
  2488  047D  00A0               	movwf	___lldiv@divisor
  2489  047E  160A  118A  2000  120A  118A  	fcall	stringdir
  2490  0483  00A1               	movwf	___lldiv@divisor+1
  2491  0484  160A  118A  2000  120A  118A  	fcall	stringdir
  2492  0489  00A2               	movwf	___lldiv@divisor+2
  2493  048A  160A  118A  2000  120A  118A  	fcall	stringdir
  2494  048F  00A3               	movwf	___lldiv@divisor+3
  2495  0490  1683               	bsf	3,5	;RP0=1, select bank1
  2496  0491  1303               	bcf	3,6	;RP1=0, select bank1
  2497  0492  083C               	movf	(sprintf@val+3)^(0+128),w
  2498  0493  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0494  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0495  00A7               	movwf	___lldiv@dividend+3
  2501  0496  1683               	bsf	3,5	;RP0=1, select bank1
  2502  0497  1303               	bcf	3,6	;RP1=0, select bank1
  2503  0498  083B               	movf	(sprintf@val+2)^(0+128),w
  2504  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2505  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2506  049B  00A6               	movwf	___lldiv@dividend+2
  2507  049C  1683               	bsf	3,5	;RP0=1, select bank1
  2508  049D  1303               	bcf	3,6	;RP1=0, select bank1
  2509  049E  083A               	movf	(sprintf@val+1)^(0+128),w
  2510  049F  1283               	bcf	3,5	;RP0=0, select bank0
  2511  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2512  04A1  00A5               	movwf	___lldiv@dividend+1
  2513  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2514  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  2515  04A4  0839               	movf	sprintf@val^(0+128),w
  2516  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2517  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2518  04A7  00A4               	movwf	___lldiv@dividend
  2519  04A8  160A  118A  20BE  120A  118A  	fcall	___lldiv
  2520  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  2521  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  2522  04AF  0823               	movf	?___lldiv+3,w
  2523  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  2524  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  2525  04B2  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2526  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2527  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2528  04B5  0822               	movf	?___lldiv+2,w
  2529  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  2530  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  2531  04B8  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2532  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2533  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2534  04BB  0821               	movf	?___lldiv+1,w
  2535  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2536  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2537  04BE  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2538  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2539  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2540  04C1  0820               	movf	?___lldiv,w
  2541  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2542  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  2543  04C4  00C0               	movwf	sprintf@tmpval^(0+128)
  2544  04C5                     l3713:
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2547  04C5  3000               	movlw	0
  2548  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2549  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2550  04C8  00A3               	movwf	___llmod@divisor+3
  2551  04C9  3000               	movlw	0
  2552  04CA  00A2               	movwf	___llmod@divisor+2
  2553  04CB  3000               	movlw	0
  2554  04CC  00A1               	movwf	___llmod@divisor+1
  2555  04CD  300A               	movlw	10
  2556  04CE  00A0               	movwf	___llmod@divisor
  2557  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2558  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2559  04D1  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2560  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2561  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2562  04D4  00A7               	movwf	___llmod@dividend+3
  2563  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2564  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2565  04D7  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2566  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2567  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2568  04DA  00A6               	movwf	___llmod@dividend+2
  2569  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2570  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2571  04DD  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2572  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2573  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2574  04E0  00A5               	movwf	___llmod@dividend+1
  2575  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  2576  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  2577  04E3  0840               	movf	sprintf@tmpval^(0+128),w
  2578  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2579  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2580  04E6  00A4               	movwf	___llmod@dividend
  2581  04E7  160A  158A  274F  120A  118A  	fcall	___llmod
  2582  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2583  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2584  04EE  0823               	movf	?___llmod+3,w
  2585  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2586  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2587  04F1  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2588  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2589  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2590  04F4  0822               	movf	?___llmod+2,w
  2591  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2592  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2593  04F7  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2594  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2595  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2596  04FA  0821               	movf	?___llmod+1,w
  2597  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  2598  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  2599  04FD  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2600  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2601  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2602  0500  0820               	movf	?___llmod,w
  2603  0501  1683               	bsf	3,5	;RP0=1, select bank1
  2604  0502  1303               	bcf	3,6	;RP1=0, select bank1
  2605  0503  00C0               	movwf	sprintf@tmpval^(0+128)
  2606  0504                     l3715:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2609  0504  0840               	movf	sprintf@tmpval^(0+128),w
  2610  0505  3E30               	addlw	48
  2611  0506  00AB               	movwf	??_sprintf^(0+128)
  2612  0507  083F               	movf	sprintf@sp^(0+128),w
  2613  0508  0084               	movwf	4
  2614  0509  082B               	movf	??_sprintf^(0+128),w
  2615  050A  1383               	bcf	3,7	;select IRP bank0
  2616  050B  0080               	movwf	0
  2617  050C  3001               	movlw	1
  2618  050D  00AB               	movwf	??_sprintf^(0+128)
  2619  050E  082B               	movf	??_sprintf^(0+128),w
  2620  050F  07BF               	addwf	sprintf@sp^(0+128),f
  2621  0510                     l282:	
  2622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  2623                           
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2626  0510  3001               	movlw	1
  2627  0511  02C8               	subwf	sprintf@c^(0+128),f
  2628  0512  0A48               	incf	sprintf@c^(0+128),w
  2629  0513  1D03               	btfss	3,2
  2630  0514  2D16               	goto	u6581
  2631  0515  2D17               	goto	u6580
  2632  0516                     u6581:
  2633  0516  2C6A               	goto	l3711
  2634  0517                     u6580:
  2635  0517  2D2B               	goto	l3723
  2636  0518                     l3717:
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2639  0518  3030               	movlw	48
  2640  0519  1683               	bsf	3,5	;RP0=1, select bank1
  2641  051A  1303               	bcf	3,6	;RP1=0, select bank1
  2642  051B  00AB               	movwf	??_sprintf^(0+128)
  2643  051C  083F               	movf	sprintf@sp^(0+128),w
  2644  051D  0084               	movwf	4
  2645  051E  082B               	movf	??_sprintf^(0+128),w
  2646  051F  1383               	bcf	3,7	;select IRP bank0
  2647  0520  0080               	movwf	0
  2648  0521                     l3719:
  2649  0521  3001               	movlw	1
  2650  0522  00AB               	movwf	??_sprintf^(0+128)
  2651  0523  082B               	movf	??_sprintf^(0+128),w
  2652  0524  07BF               	addwf	sprintf@sp^(0+128),f
  2653  0525                     l3721:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2656  0525  30FF               	movlw	255
  2657  0526  07BD               	addwf	sprintf@eexp^(0+128),f
  2658  0527  1803               	skipnc
  2659  0528  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2660  0529  30FF               	movlw	255
  2661  052A  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2662  052B                     l3723:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2665  052B  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2666  052C  3A80               	xorlw	128
  2667  052D  00FF               	movwf	btemp+1
  2668  052E  3080               	movlw	128
  2669  052F  027F               	subwf	btemp+1,w
  2670  0530  1D03               	skipz
  2671  0531  2D34               	goto	u6595
  2672  0532  3001               	movlw	1
  2673  0533  023D               	subwf	sprintf@eexp^(0+128),w
  2674  0534                     u6595:
  2675  0534  1803               	skipnc
  2676  0535  2D37               	goto	u6591
  2677  0536  2D38               	goto	u6590
  2678  0537                     u6591:
  2679  0537  2D18               	goto	l3717
  2680  0538                     u6590:
  2681  0538                     l3725:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2684  0538  1683               	bsf	3,5	;RP0=1, select bank1
  2685  0539  1303               	bcf	3,6	;RP1=0, select bank1
  2686  053A  0838               	movf	(sprintf@prec+1)^(0+128),w
  2687  053B  3A80               	xorlw	128
  2688  053C  00FF               	movwf	btemp+1
  2689  053D  3080               	movlw	128
  2690  053E  027F               	subwf	btemp+1,w
  2691  053F  1D03               	skipz
  2692  0540  2D43               	goto	u6605
  2693  0541  3009               	movlw	9
  2694  0542  0237               	subwf	sprintf@prec^(0+128),w
  2695  0543                     u6605:
  2696  0543  1C03               	skipc
  2697  0544  2D46               	goto	u6601
  2698  0545  2D47               	goto	u6600
  2699  0546                     u6601:
  2700  0546  2D4E               	goto	l3729
  2701  0547                     u6600:
  2702  0547                     l3727:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2705  0547  3008               	movlw	8
  2706  0548  1683               	bsf	3,5	;RP0=1, select bank1
  2707  0549  1303               	bcf	3,6	;RP1=0, select bank1
  2708  054A  00AB               	movwf	??_sprintf^(0+128)
  2709  054B  082B               	movf	??_sprintf^(0+128),w
  2710  054C  00C8               	movwf	sprintf@c^(0+128)
  2711  054D  2D54               	goto	l289
  2712  054E                     l3729:
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2715  054E  1683               	bsf	3,5	;RP0=1, select bank1
  2716  054F  1303               	bcf	3,6	;RP1=0, select bank1
  2717  0550  0837               	movf	sprintf@prec^(0+128),w
  2718  0551  00AB               	movwf	??_sprintf^(0+128)
  2719  0552  082B               	movf	??_sprintf^(0+128),w
  2720  0553  00C8               	movwf	sprintf@c^(0+128)
  2721  0554                     l289:
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2724  0554  0848               	movf	sprintf@c^(0+128),w
  2725  0555  00AB               	movwf	??_sprintf^(0+128)
  2726  0556  01AC               	clrf	(??_sprintf^(0+128)+1)
  2727  0557  082B               	movf	??_sprintf^(0+128),w
  2728  0558  02B7               	subwf	sprintf@prec^(0+128),f
  2729  0559  082C               	movf	(??_sprintf+1)^(0+128),w
  2730  055A  1C03               	skipc
  2731  055B  03B8               	decf	(sprintf@prec+1)^(0+128),f
  2732  055C  02B8               	subwf	(sprintf@prec+1)^(0+128),f
  2733  055D                     l3731:
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2736  055D  0848               	movf	sprintf@c^(0+128),w
  2737  055E  1903               	btfsc	3,2
  2738  055F  2D61               	goto	u6611
  2739  0560  2D62               	goto	u6610
  2740  0561                     u6611:
  2741  0561  2D6D               	goto	l3737
  2742  0562                     u6610:
  2743  0562                     l3733:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  2746  0562  302E               	movlw	46
  2747  0563  00AB               	movwf	??_sprintf^(0+128)
  2748  0564  083F               	movf	sprintf@sp^(0+128),w
  2749  0565  0084               	movwf	4
  2750  0566  082B               	movf	??_sprintf^(0+128),w
  2751  0567  1383               	bcf	3,7	;select IRP bank0
  2752  0568  0080               	movwf	0
  2753  0569                     l3735:
  2754  0569  3001               	movlw	1
  2755  056A  00AB               	movwf	??_sprintf^(0+128)
  2756  056B  082B               	movf	??_sprintf^(0+128),w
  2757  056C  07BF               	addwf	sprintf@sp^(0+128),f
  2758  056D                     l3737:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2761  056D  0848               	movf	sprintf@c^(0+128),w
  2762  056E  120A  158A  249D  120A  118A  	fcall	_scale
  2763  0573  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0574  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0575  084B               	movf	?_scale+3,w
  2766  0576  1683               	bsf	3,5	;RP0=1, select bank1
  2767  0577  1303               	bcf	3,6	;RP1=0, select bank1
  2768  0578  00B3               	movwf	(_sprintf$1114+3)^(0+128)
  2769  0579  1283               	bcf	3,5	;RP0=0, select bank0
  2770  057A  1303               	bcf	3,6	;RP1=0, select bank0
  2771  057B  084A               	movf	?_scale+2,w
  2772  057C  1683               	bsf	3,5	;RP0=1, select bank1
  2773  057D  1303               	bcf	3,6	;RP1=0, select bank1
  2774  057E  00B2               	movwf	(_sprintf$1114+2)^(0+128)
  2775  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0581  0849               	movf	?_scale+1,w
  2778  0582  1683               	bsf	3,5	;RP0=1, select bank1
  2779  0583  1303               	bcf	3,6	;RP1=0, select bank1
  2780  0584  00B1               	movwf	(_sprintf$1114+1)^(0+128)
  2781  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0587  0848               	movf	?_scale,w
  2784  0588  1683               	bsf	3,5	;RP0=1, select bank1
  2785  0589  1303               	bcf	3,6	;RP1=0, select bank1
  2786  058A  00B0               	movwf	_sprintf$1114^(0+128)
  2787  058B                     l3739:
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2790  058B  0833               	movf	(_sprintf$1114+3)^(0+128),w
  2791  058C  1283               	bcf	3,5	;RP0=0, select bank0
  2792  058D  1303               	bcf	3,6	;RP1=0, select bank0
  2793  058E  00B5               	movwf	___flmul@a+3
  2794  058F  1683               	bsf	3,5	;RP0=1, select bank1
  2795  0590  1303               	bcf	3,6	;RP1=0, select bank1
  2796  0591  0832               	movf	(_sprintf$1114+2)^(0+128),w
  2797  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2799  0594  00B4               	movwf	___flmul@a+2
  2800  0595  1683               	bsf	3,5	;RP0=1, select bank1
  2801  0596  1303               	bcf	3,6	;RP1=0, select bank1
  2802  0597  0831               	movf	(_sprintf$1114+1)^(0+128),w
  2803  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2805  059A  00B3               	movwf	___flmul@a+1
  2806  059B  1683               	bsf	3,5	;RP0=1, select bank1
  2807  059C  1303               	bcf	3,6	;RP1=0, select bank1
  2808  059D  0830               	movf	_sprintf$1114^(0+128),w
  2809  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2810  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2811  05A0  00B2               	movwf	___flmul@a
  2812  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  2813  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  2814  05A3  0847               	movf	(sprintf@fval+3)^(0+128),w
  2815  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2816  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2817  05A6  00B1               	movwf	___flmul@b+3
  2818  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  2819  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  2820  05A9  0846               	movf	(sprintf@fval+2)^(0+128),w
  2821  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2822  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2823  05AC  00B0               	movwf	___flmul@b+2
  2824  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  2825  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  2826  05AF  0845               	movf	(sprintf@fval+1)^(0+128),w
  2827  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2828  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2829  05B2  00AF               	movwf	___flmul@b+1
  2830  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  2831  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  2832  05B5  0844               	movf	sprintf@fval^(0+128),w
  2833  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2834  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2835  05B8  00AE               	movwf	___flmul@b
  2836  05B9  120A  158A  213C  120A  118A  	fcall	___flmul
  2837  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2838  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2839  05C0  0831               	movf	?___flmul+3,w
  2840  05C1  00DE               	movwf	___fltol@f1+3
  2841  05C2  0830               	movf	?___flmul+2,w
  2842  05C3  00DD               	movwf	___fltol@f1+2
  2843  05C4  082F               	movf	?___flmul+1,w
  2844  05C5  00DC               	movwf	___fltol@f1+1
  2845  05C6  082E               	movf	?___flmul,w
  2846  05C7  00DB               	movwf	___fltol@f1
  2847  05C8  160A  118A  218F  120A  118A  	fcall	___fltol
  2848  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2849  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2850  05CF  085E               	movf	?___fltol+3,w
  2851  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  2852  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  2853  05D2  00BC               	movwf	(sprintf@val+3)^(0+128)
  2854  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2855  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2856  05D5  085D               	movf	?___fltol+2,w
  2857  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  2858  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  2859  05D8  00BB               	movwf	(sprintf@val+2)^(0+128)
  2860  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2861  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2862  05DB  085C               	movf	?___fltol+1,w
  2863  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  2864  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  2865  05DE  00BA               	movwf	(sprintf@val+1)^(0+128)
  2866  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  2867  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  2868  05E1  085B               	movf	?___fltol,w
  2869  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  2870  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  2871  05E4  00B9               	movwf	sprintf@val^(0+128)
  2872                           
  2873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  2874  05E5  2EE7               	goto	l3749
  2875  05E6                     l3741:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  2878  05E6  0848               	movf	sprintf@c^(0+128),w
  2879  05E7  00AB               	movwf	??_sprintf^(0+128)
  2880  05E8  3001               	movlw	1
  2881  05E9                     u6625:
  2882  05E9  1003               	clrc
  2883  05EA  0DAB               	rlf	??_sprintf^(0+128),f
  2884  05EB  3EFF               	addlw	-1
  2885  05EC  1D03               	skipz
  2886  05ED  2DE9               	goto	u6625
  2887  05EE  1003               	clrc
  2888  05EF  0D2B               	rlf	??_sprintf^(0+128),w
  2889  05F0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2890  05F1  0084               	movwf	4
  2891  05F2  160A  118A  2000  120A  118A  	fcall	stringdir
  2892  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  2893  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  2894  05F9  00A0               	movwf	___lldiv@divisor
  2895  05FA  160A  118A  2000  120A  118A  	fcall	stringdir
  2896  05FF  00A1               	movwf	___lldiv@divisor+1
  2897  0600  160A  118A  2000  120A  118A  	fcall	stringdir
  2898  0605  00A2               	movwf	___lldiv@divisor+2
  2899  0606  160A  118A  2000  120A  118A  	fcall	stringdir
  2900  060B  00A3               	movwf	___lldiv@divisor+3
  2901  060C  1683               	bsf	3,5	;RP0=1, select bank1
  2902  060D  1303               	bcf	3,6	;RP1=0, select bank1
  2903  060E  083C               	movf	(sprintf@val+3)^(0+128),w
  2904  060F  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0610  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0611  00A7               	movwf	___lldiv@dividend+3
  2907  0612  1683               	bsf	3,5	;RP0=1, select bank1
  2908  0613  1303               	bcf	3,6	;RP1=0, select bank1
  2909  0614  083B               	movf	(sprintf@val+2)^(0+128),w
  2910  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0617  00A6               	movwf	___lldiv@dividend+2
  2913  0618  1683               	bsf	3,5	;RP0=1, select bank1
  2914  0619  1303               	bcf	3,6	;RP1=0, select bank1
  2915  061A  083A               	movf	(sprintf@val+1)^(0+128),w
  2916  061B  1283               	bcf	3,5	;RP0=0, select bank0
  2917  061C  1303               	bcf	3,6	;RP1=0, select bank0
  2918  061D  00A5               	movwf	___lldiv@dividend+1
  2919  061E  1683               	bsf	3,5	;RP0=1, select bank1
  2920  061F  1303               	bcf	3,6	;RP1=0, select bank1
  2921  0620  0839               	movf	sprintf@val^(0+128),w
  2922  0621  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0622  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0623  00A4               	movwf	___lldiv@dividend
  2925  0624  160A  118A  20BE  120A  118A  	fcall	___lldiv
  2926  0629  1283               	bcf	3,5	;RP0=0, select bank0
  2927  062A  1303               	bcf	3,6	;RP1=0, select bank0
  2928  062B  0823               	movf	?___lldiv+3,w
  2929  062C  1683               	bsf	3,5	;RP0=1, select bank1
  2930  062D  1303               	bcf	3,6	;RP1=0, select bank1
  2931  062E  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2932  062F  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0630  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0631  0822               	movf	?___lldiv+2,w
  2935  0632  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0633  1303               	bcf	3,6	;RP1=0, select bank1
  2937  0634  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2938  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0637  0821               	movf	?___lldiv+1,w
  2941  0638  1683               	bsf	3,5	;RP0=1, select bank1
  2942  0639  1303               	bcf	3,6	;RP1=0, select bank1
  2943  063A  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2944  063B  1283               	bcf	3,5	;RP0=0, select bank0
  2945  063C  1303               	bcf	3,6	;RP1=0, select bank0
  2946  063D  0820               	movf	?___lldiv,w
  2947  063E  1683               	bsf	3,5	;RP0=1, select bank1
  2948  063F  1303               	bcf	3,6	;RP1=0, select bank1
  2949  0640  00C0               	movwf	sprintf@tmpval^(0+128)
  2950  0641                     l3743:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  2953  0641  3000               	movlw	0
  2954  0642  1283               	bcf	3,5	;RP0=0, select bank0
  2955  0643  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0644  00A3               	movwf	___llmod@divisor+3
  2957  0645  3000               	movlw	0
  2958  0646  00A2               	movwf	___llmod@divisor+2
  2959  0647  3000               	movlw	0
  2960  0648  00A1               	movwf	___llmod@divisor+1
  2961  0649  300A               	movlw	10
  2962  064A  00A0               	movwf	___llmod@divisor
  2963  064B  1683               	bsf	3,5	;RP0=1, select bank1
  2964  064C  1303               	bcf	3,6	;RP1=0, select bank1
  2965  064D  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2966  064E  1283               	bcf	3,5	;RP0=0, select bank0
  2967  064F  1303               	bcf	3,6	;RP1=0, select bank0
  2968  0650  00A7               	movwf	___llmod@dividend+3
  2969  0651  1683               	bsf	3,5	;RP0=1, select bank1
  2970  0652  1303               	bcf	3,6	;RP1=0, select bank1
  2971  0653  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2972  0654  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0655  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0656  00A6               	movwf	___llmod@dividend+2
  2975  0657  1683               	bsf	3,5	;RP0=1, select bank1
  2976  0658  1303               	bcf	3,6	;RP1=0, select bank1
  2977  0659  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2978  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2979  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2980  065C  00A5               	movwf	___llmod@dividend+1
  2981  065D  1683               	bsf	3,5	;RP0=1, select bank1
  2982  065E  1303               	bcf	3,6	;RP1=0, select bank1
  2983  065F  0840               	movf	sprintf@tmpval^(0+128),w
  2984  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2985  0661  1303               	bcf	3,6	;RP1=0, select bank0
  2986  0662  00A4               	movwf	___llmod@dividend
  2987  0663  160A  158A  274F  120A  118A  	fcall	___llmod
  2988  0668  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0669  1303               	bcf	3,6	;RP1=0, select bank0
  2990  066A  0823               	movf	?___llmod+3,w
  2991  066B  1683               	bsf	3,5	;RP0=1, select bank1
  2992  066C  1303               	bcf	3,6	;RP1=0, select bank1
  2993  066D  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2994  066E  1283               	bcf	3,5	;RP0=0, select bank0
  2995  066F  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0670  0822               	movf	?___llmod+2,w
  2997  0671  1683               	bsf	3,5	;RP0=1, select bank1
  2998  0672  1303               	bcf	3,6	;RP1=0, select bank1
  2999  0673  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  3000  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0676  0821               	movf	?___llmod+1,w
  3003  0677  1683               	bsf	3,5	;RP0=1, select bank1
  3004  0678  1303               	bcf	3,6	;RP1=0, select bank1
  3005  0679  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  3006  067A  1283               	bcf	3,5	;RP0=0, select bank0
  3007  067B  1303               	bcf	3,6	;RP1=0, select bank0
  3008  067C  0820               	movf	?___llmod,w
  3009  067D  1683               	bsf	3,5	;RP0=1, select bank1
  3010  067E  1303               	bcf	3,6	;RP1=0, select bank1
  3011  067F  00C0               	movwf	sprintf@tmpval^(0+128)
  3012  0680                     l3745:
  3013                           
  3014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3015  0680  0840               	movf	sprintf@tmpval^(0+128),w
  3016  0681  3E30               	addlw	48
  3017  0682  00AB               	movwf	??_sprintf^(0+128)
  3018  0683  083F               	movf	sprintf@sp^(0+128),w
  3019  0684  0084               	movwf	4
  3020  0685  082B               	movf	??_sprintf^(0+128),w
  3021  0686  1383               	bcf	3,7	;select IRP bank0
  3022  0687  0080               	movwf	0
  3023  0688  3001               	movlw	1
  3024  0689  00AB               	movwf	??_sprintf^(0+128)
  3025  068A  082B               	movf	??_sprintf^(0+128),w
  3026  068B  07BF               	addwf	sprintf@sp^(0+128),f
  3027  068C                     l3747:
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3030  068C  0848               	movf	sprintf@c^(0+128),w
  3031  068D  00AB               	movwf	??_sprintf^(0+128)
  3032  068E  3001               	movlw	1
  3033  068F                     u6635:
  3034  068F  1003               	clrc
  3035  0690  0DAB               	rlf	??_sprintf^(0+128),f
  3036  0691  3EFF               	addlw	-1
  3037  0692  1D03               	skipz
  3038  0693  2E8F               	goto	u6635
  3039  0694  1003               	clrc
  3040  0695  0D2B               	rlf	??_sprintf^(0+128),w
  3041  0696  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3042  0697  0084               	movwf	4
  3043  0698  160A  118A  2000  120A  118A  	fcall	stringdir
  3044  069D  1283               	bcf	3,5	;RP0=0, select bank0
  3045  069E  1303               	bcf	3,6	;RP1=0, select bank0
  3046  069F  00A0               	movwf	___llmod@divisor
  3047  06A0  160A  118A  2000  120A  118A  	fcall	stringdir
  3048  06A5  00A1               	movwf	___llmod@divisor+1
  3049  06A6  160A  118A  2000  120A  118A  	fcall	stringdir
  3050  06AB  00A2               	movwf	___llmod@divisor+2
  3051  06AC  160A  118A  2000  120A  118A  	fcall	stringdir
  3052  06B1  00A3               	movwf	___llmod@divisor+3
  3053  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  3054  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  3055  06B4  083C               	movf	(sprintf@val+3)^(0+128),w
  3056  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  3057  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  3058  06B7  00A7               	movwf	___llmod@dividend+3
  3059  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  3060  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  3061  06BA  083B               	movf	(sprintf@val+2)^(0+128),w
  3062  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3063  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3064  06BD  00A6               	movwf	___llmod@dividend+2
  3065  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  3066  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  3067  06C0  083A               	movf	(sprintf@val+1)^(0+128),w
  3068  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3069  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3070  06C3  00A5               	movwf	___llmod@dividend+1
  3071  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  3072  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  3073  06C6  0839               	movf	sprintf@val^(0+128),w
  3074  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  3075  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  3076  06C9  00A4               	movwf	___llmod@dividend
  3077  06CA  160A  158A  274F  120A  118A  	fcall	___llmod
  3078  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3079  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3080  06D1  0823               	movf	?___llmod+3,w
  3081  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  3082  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  3083  06D4  00BC               	movwf	(sprintf@val+3)^(0+128)
  3084  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  3085  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  3086  06D7  0822               	movf	?___llmod+2,w
  3087  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  3088  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  3089  06DA  00BB               	movwf	(sprintf@val+2)^(0+128)
  3090  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  3091  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  3092  06DD  0821               	movf	?___llmod+1,w
  3093  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  3094  06DF  1303               	bcf	3,6	;RP1=0, select bank1
  3095  06E0  00BA               	movwf	(sprintf@val+1)^(0+128)
  3096  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  3097  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  3098  06E3  0820               	movf	?___llmod,w
  3099  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  3100  06E5  1303               	bcf	3,6	;RP1=0, select bank1
  3101  06E6  00B9               	movwf	sprintf@val^(0+128)
  3102  06E7                     l3749:
  3103                           
  3104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3105  06E7  3001               	movlw	1
  3106  06E8  02C8               	subwf	sprintf@c^(0+128),f
  3107  06E9  0A48               	incf	sprintf@c^(0+128),w
  3108  06EA  1D03               	btfss	3,2
  3109  06EB  2EED               	goto	u6641
  3110  06EC  2EEE               	goto	u6640
  3111  06ED                     u6641:
  3112  06ED  2DE6               	goto	l3741
  3113  06EE                     u6640:
  3114  06EE  2F00               	goto	l3757
  3115  06EF                     l3751:
  3116                           
  3117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3118  06EF  3030               	movlw	48
  3119  06F0  00AB               	movwf	??_sprintf^(0+128)
  3120  06F1  083F               	movf	sprintf@sp^(0+128),w
  3121  06F2  0084               	movwf	4
  3122  06F3  082B               	movf	??_sprintf^(0+128),w
  3123  06F4  1383               	bcf	3,7	;select IRP bank0
  3124  06F5  0080               	movwf	0
  3125  06F6                     l3753:
  3126  06F6  3001               	movlw	1
  3127  06F7  00AB               	movwf	??_sprintf^(0+128)
  3128  06F8  082B               	movf	??_sprintf^(0+128),w
  3129  06F9  07BF               	addwf	sprintf@sp^(0+128),f
  3130  06FA                     l3755:
  3131                           
  3132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3133  06FA  30FF               	movlw	255
  3134  06FB  07B7               	addwf	sprintf@prec^(0+128),f
  3135  06FC  1803               	skipnc
  3136  06FD  0AB8               	incf	(sprintf@prec+1)^(0+128),f
  3137  06FE  30FF               	movlw	255
  3138  06FF  07B8               	addwf	(sprintf@prec+1)^(0+128),f
  3139  0700                     l3757:
  3140                           
  3141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3142  0700  0837               	movf	sprintf@prec^(0+128),w
  3143  0701  0438               	iorwf	(sprintf@prec+1)^(0+128),w
  3144  0702  1D03               	btfss	3,2
  3145  0703  2F05               	goto	u6651
  3146  0704  2F06               	goto	u6650
  3147  0705                     u6651:
  3148  0705  2EEF               	goto	l3751
  3149  0706                     u6650:
  3150  0706  2F1B               	goto	l3765
  3151  0707                     l3759:
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3154  0707  3003               	movlw	3
  3155  0708  0535               	andwf	sprintf@flag^(0+128),w
  3156  0709  00AB               	movwf	??_sprintf^(0+128)
  3157  070A  3000               	movlw	0
  3158  070B  0536               	andwf	(sprintf@flag+1)^(0+128),w
  3159  070C  00AC               	movwf	(??_sprintf+1)^(0+128)
  3160  070D  082B               	movf	??_sprintf^(0+128),w
  3161  070E  042C               	iorwf	(??_sprintf^(0+128)+1),w
  3162  070F  1903               	btfsc	3,2
  3163  0710  2F12               	goto	u6661
  3164  0711  2F13               	goto	u6660
  3165  0712                     u6661:
  3166  0712  2F1B               	goto	l3765
  3167  0713                     u6660:
  3168  0713                     l3761:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3171  0713  302D               	movlw	45
  3172  0714  00AB               	movwf	??_sprintf^(0+128)
  3173  0715  083F               	movf	sprintf@sp^(0+128),w
  3174  0716  0084               	movwf	4
  3175  0717  082B               	movf	??_sprintf^(0+128),w
  3176  0718  1383               	bcf	3,7	;select IRP bank0
  3177  0719  0080               	movwf	0
  3178  071A  2833               	goto	l3611
  3179  071B                     l3765:
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3182  071B  3001               	movlw	1
  3183  071C  07A8               	addwf	sprintf@f^(0+128),f
  3184  071D  30FF               	movlw	-1
  3185  071E  0728               	addwf	sprintf@f^(0+128),w
  3186  071F  0084               	movwf	4
  3187  0720  160A  118A  2000  120A  118A  	fcall	stringdir
  3188  0725  00AB               	movwf	??_sprintf^(0+128)
  3189  0726  082B               	movf	??_sprintf^(0+128),w
  3190  0727  00C8               	movwf	sprintf@c^(0+128)
  3191  0728  0848               	movf	sprintf@c^(0+128),w
  3192  0729  1D03               	btfss	3,2
  3193  072A  2F2C               	goto	u6671
  3194  072B  2F2D               	goto	u6670
  3195  072C                     u6671:
  3196  072C  2826               	goto	l3607
  3197  072D                     u6670:
  3198  072D                     l3767:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3201  072D  083F               	movf	sprintf@sp^(0+128),w
  3202  072E  0084               	movwf	4
  3203  072F  1383               	bcf	3,7	;select IRP bank0
  3204  0730  0180               	clrf	0
  3205  0731                     l299:
  3206  0731  0008               	return
  3207  0732                     __end_of_sprintf:
  3208                           
  3209                           	psect	text2
  3210  0C9D                     __ptext2:	
  3211 ;; *************** function _scale *****************
  3212 ;; Defined at:
  3213 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  scl             1    wreg     char 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  scl             1   58[BANK0 ] char 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  4   40[BANK0 ] char 
  3220 ;; Registers used:
  3221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3227 ;;      Params:         0       4       0       0       0
  3228 ;;      Locals:         0       5       0       0       0
  3229 ;;      Temps:          0      10       0       0       0
  3230 ;;      Totals:         0      19       0       0       0
  3231 ;;Total ram usage:       19 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    3
  3234 ;; This function calls:
  3235 ;;		___awdiv
  3236 ;;		___awmod
  3237 ;;		___flmul
  3238 ;; This function is called by:
  3239 ;;		_sprintf
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _scale
  3245  0C9D                     _scale:
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3249                           ;scale@scl stored from wreg
  3250  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0C9F  00DA               	movwf	scale@scl
  3253  0CA0                     l3403:
  3254                           
  3255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3256  0CA0  1FDA               	btfss	scale@scl,7
  3257  0CA1  2CA3               	goto	u5821
  3258  0CA2  2CA4               	goto	u5820
  3259  0CA3                     u5821:
  3260  0CA3  2E53               	goto	l3425
  3261  0CA4                     u5820:
  3262  0CA4                     l3405:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3265  0CA4  09DA               	comf	scale@scl,f
  3266  0CA5  0ADA               	incf	scale@scl,f
  3267  0CA6                     l3407:
  3268                           
  3269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3270  0CA6  085A               	movf	scale@scl,w
  3271  0CA7  3A80               	xorlw	128
  3272  0CA8  3E12               	addlw	-238
  3273  0CA9  1C03               	skipc
  3274  0CAA  2CAC               	goto	u5831
  3275  0CAB  2CAD               	goto	u5830
  3276  0CAC                     u5831:
  3277  0CAC  2D97               	goto	l3415
  3278  0CAD                     u5830:
  3279  0CAD                     l3409:
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3282  0CAD  300A               	movlw	10
  3283  0CAE  00A6               	movwf	___awdiv@divisor
  3284  0CAF  3000               	movlw	0
  3285  0CB0  00A7               	movwf	___awdiv@divisor+1
  3286  0CB1  085A               	movf	scale@scl,w
  3287  0CB2  00A2               	movwf	___awmod@dividend
  3288  0CB3  01A3               	clrf	___awmod@dividend+1
  3289  0CB4  1BA2               	btfsc	___awmod@dividend,7
  3290  0CB5  03A3               	decf	___awmod@dividend+1,f
  3291  0CB6  3064               	movlw	100
  3292  0CB7  00A0               	movwf	___awmod@divisor
  3293  0CB8  3000               	movlw	0
  3294  0CB9  00A1               	movwf	___awmod@divisor+1
  3295  0CBA  160A  158A  27A5  120A  158A  	fcall	___awmod
  3296  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0CC1  0821               	movf	?___awmod+1,w
  3299  0CC2  00A9               	movwf	___awdiv@dividend+1
  3300  0CC3  0820               	movf	?___awmod,w
  3301  0CC4  00A8               	movwf	___awdiv@dividend
  3302  0CC5  160A  118A  2126  120A  158A  	fcall	___awdiv
  3303  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3305  0CCC  0826               	movf	?___awdiv,w
  3306  0CCD  00CC               	movwf	??_scale
  3307  0CCE  3001               	movlw	1
  3308  0CCF                     u5845:
  3309  0CCF  1003               	clrc
  3310  0CD0  0DCC               	rlf	??_scale,f
  3311  0CD1  3EFF               	addlw	-1
  3312  0CD2  1D03               	skipz
  3313  0CD3  2CCF               	goto	u5845
  3314  0CD4  1003               	clrc
  3315  0CD5  0D4C               	rlf	??_scale,w
  3316  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3317  0CD7  0084               	movwf	4
  3318  0CD8  160A  118A  2000  120A  158A  	fcall	stringdir
  3319  0CDD  00CD               	movwf	??_scale+1
  3320  0CDE  160A  118A  2000  120A  158A  	fcall	stringdir
  3321  0CE3  00CE               	movwf	??_scale+2
  3322  0CE4  160A  118A  2000  120A  158A  	fcall	stringdir
  3323  0CE9  00CF               	movwf	??_scale+3
  3324  0CEA  160A  118A  2000  120A  158A  	fcall	stringdir
  3325  0CEF  00D0               	movwf	??_scale+4
  3326  0CF0  0850               	movf	??_scale+4,w
  3327  0CF1  00B1               	movwf	___flmul@b+3
  3328  0CF2  084F               	movf	??_scale+3,w
  3329  0CF3  00B0               	movwf	___flmul@b+2
  3330  0CF4  084E               	movf	??_scale+2,w
  3331  0CF5  00AF               	movwf	___flmul@b+1
  3332  0CF6  084D               	movf	??_scale+1,w
  3333  0CF7  00AE               	movwf	___flmul@b
  3334  0CF8  3064               	movlw	100
  3335  0CF9  00A6               	movwf	___awdiv@divisor
  3336  0CFA  3000               	movlw	0
  3337  0CFB  00A7               	movwf	___awdiv@divisor+1
  3338  0CFC  085A               	movf	scale@scl,w
  3339  0CFD  00A8               	movwf	___awdiv@dividend
  3340  0CFE  01A9               	clrf	___awdiv@dividend+1
  3341  0CFF  1BA8               	btfsc	___awdiv@dividend,7
  3342  0D00  03A9               	decf	___awdiv@dividend+1,f
  3343  0D01  160A  118A  2126  120A  158A  	fcall	___awdiv
  3344  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3346  0D08  0826               	movf	?___awdiv,w
  3347  0D09  00D1               	movwf	??_scale+5
  3348  0D0A  3001               	movlw	1
  3349  0D0B                     u5855:
  3350  0D0B  1003               	clrc
  3351  0D0C  0DD1               	rlf	??_scale+5,f
  3352  0D0D  3EFF               	addlw	-1
  3353  0D0E  1D03               	skipz
  3354  0D0F  2D0B               	goto	u5855
  3355  0D10  1003               	clrc
  3356  0D11  0D51               	rlf	??_scale+5,w
  3357  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3358  0D13  0084               	movwf	4
  3359  0D14  160A  118A  2000  120A  158A  	fcall	stringdir
  3360  0D19  00D2               	movwf	??_scale+6
  3361  0D1A  160A  118A  2000  120A  158A  	fcall	stringdir
  3362  0D1F  00D3               	movwf	??_scale+7
  3363  0D20  160A  118A  2000  120A  158A  	fcall	stringdir
  3364  0D25  00D4               	movwf	??_scale+8
  3365  0D26  160A  118A  2000  120A  158A  	fcall	stringdir
  3366  0D2B  00D5               	movwf	??_scale+9
  3367  0D2C  0855               	movf	??_scale+9,w
  3368  0D2D  00B5               	movwf	___flmul@a+3
  3369  0D2E  0854               	movf	??_scale+8,w
  3370  0D2F  00B4               	movwf	___flmul@a+2
  3371  0D30  0853               	movf	??_scale+7,w
  3372  0D31  00B3               	movwf	___flmul@a+1
  3373  0D32  0852               	movf	??_scale+6,w
  3374  0D33  00B2               	movwf	___flmul@a
  3375  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3376  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3378  0D3B  0831               	movf	?___flmul+3,w
  3379  0D3C  00D9               	movwf	_scale$1113+3
  3380  0D3D  0830               	movf	?___flmul+2,w
  3381  0D3E  00D8               	movwf	_scale$1113+2
  3382  0D3F  082F               	movf	?___flmul+1,w
  3383  0D40  00D7               	movwf	_scale$1113+1
  3384  0D41  082E               	movf	?___flmul,w
  3385  0D42  00D6               	movwf	_scale$1113
  3386                           
  3387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3388  0D43  300A               	movlw	10
  3389  0D44  00A0               	movwf	___awmod@divisor
  3390  0D45  3000               	movlw	0
  3391  0D46  00A1               	movwf	___awmod@divisor+1
  3392  0D47  085A               	movf	scale@scl,w
  3393  0D48  00A2               	movwf	___awmod@dividend
  3394  0D49  01A3               	clrf	___awmod@dividend+1
  3395  0D4A  1BA2               	btfsc	___awmod@dividend,7
  3396  0D4B  03A3               	decf	___awmod@dividend+1,f
  3397  0D4C  160A  158A  27A5  120A  158A  	fcall	___awmod
  3398  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  3400  0D53  0820               	movf	?___awmod,w
  3401  0D54  00CC               	movwf	??_scale
  3402  0D55  3001               	movlw	1
  3403  0D56                     u5865:
  3404  0D56  1003               	clrc
  3405  0D57  0DCC               	rlf	??_scale,f
  3406  0D58  3EFF               	addlw	-1
  3407  0D59  1D03               	skipz
  3408  0D5A  2D56               	goto	u5865
  3409  0D5B  1003               	clrc
  3410  0D5C  0D4C               	rlf	??_scale,w
  3411  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3412  0D5E  0084               	movwf	4
  3413  0D5F  160A  118A  2000  120A  158A  	fcall	stringdir
  3414  0D64  00CD               	movwf	??_scale+1
  3415  0D65  160A  118A  2000  120A  158A  	fcall	stringdir
  3416  0D6A  00CE               	movwf	??_scale+2
  3417  0D6B  160A  118A  2000  120A  158A  	fcall	stringdir
  3418  0D70  00CF               	movwf	??_scale+3
  3419  0D71  160A  118A  2000  120A  158A  	fcall	stringdir
  3420  0D76  00D0               	movwf	??_scale+4
  3421  0D77  0850               	movf	??_scale+4,w
  3422  0D78  00B1               	movwf	___flmul@b+3
  3423  0D79  084F               	movf	??_scale+3,w
  3424  0D7A  00B0               	movwf	___flmul@b+2
  3425  0D7B  084E               	movf	??_scale+2,w
  3426  0D7C  00AF               	movwf	___flmul@b+1
  3427  0D7D  084D               	movf	??_scale+1,w
  3428  0D7E  00AE               	movwf	___flmul@b
  3429  0D7F  0859               	movf	_scale$1113+3,w
  3430  0D80  00B5               	movwf	___flmul@a+3
  3431  0D81  0858               	movf	_scale$1113+2,w
  3432  0D82  00B4               	movwf	___flmul@a+2
  3433  0D83  0857               	movf	_scale$1113+1,w
  3434  0D84  00B3               	movwf	___flmul@a+1
  3435  0D85  0856               	movf	_scale$1113,w
  3436  0D86  00B2               	movwf	___flmul@a
  3437  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3438  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0D8E  0831               	movf	?___flmul+3,w
  3441  0D8F  00CB               	movwf	?_scale+3
  3442  0D90  0830               	movf	?___flmul+2,w
  3443  0D91  00CA               	movwf	?_scale+2
  3444  0D92  082F               	movf	?___flmul+1,w
  3445  0D93  00C9               	movwf	?_scale+1
  3446  0D94  082E               	movf	?___flmul,w
  3447  0D95  00C8               	movwf	?_scale
  3448  0D96  2FFF               	goto	l243
  3449  0D97                     l3415:
  3450  0D97  085A               	movf	scale@scl,w
  3451  0D98  3A80               	xorlw	128
  3452  0D99  3E75               	addlw	-139
  3453  0D9A  1C03               	skipc
  3454  0D9B  2D9D               	goto	u5871
  3455  0D9C  2D9E               	goto	u5870
  3456  0D9D                     u5871:
  3457  0D9D  2E26               	goto	l3421
  3458  0D9E                     u5870:
  3459  0D9E                     l3417:
  3460                           
  3461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3462  0D9E  300A               	movlw	10
  3463  0D9F  00A0               	movwf	___awmod@divisor
  3464  0DA0  3000               	movlw	0
  3465  0DA1  00A1               	movwf	___awmod@divisor+1
  3466  0DA2  085A               	movf	scale@scl,w
  3467  0DA3  00A2               	movwf	___awmod@dividend
  3468  0DA4  01A3               	clrf	___awmod@dividend+1
  3469  0DA5  1BA2               	btfsc	___awmod@dividend,7
  3470  0DA6  03A3               	decf	___awmod@dividend+1,f
  3471  0DA7  160A  158A  27A5  120A  158A  	fcall	___awmod
  3472  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  3473  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  3474  0DAE  0820               	movf	?___awmod,w
  3475  0DAF  00CC               	movwf	??_scale
  3476  0DB0  3001               	movlw	1
  3477  0DB1                     u5885:
  3478  0DB1  1003               	clrc
  3479  0DB2  0DCC               	rlf	??_scale,f
  3480  0DB3  3EFF               	addlw	-1
  3481  0DB4  1D03               	skipz
  3482  0DB5  2DB1               	goto	u5885
  3483  0DB6  1003               	clrc
  3484  0DB7  0D4C               	rlf	??_scale,w
  3485  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3486  0DB9  0084               	movwf	4
  3487  0DBA  160A  118A  2000  120A  158A  	fcall	stringdir
  3488  0DBF  00CD               	movwf	??_scale+1
  3489  0DC0  160A  118A  2000  120A  158A  	fcall	stringdir
  3490  0DC5  00CE               	movwf	??_scale+2
  3491  0DC6  160A  118A  2000  120A  158A  	fcall	stringdir
  3492  0DCB  00CF               	movwf	??_scale+3
  3493  0DCC  160A  118A  2000  120A  158A  	fcall	stringdir
  3494  0DD1  00D0               	movwf	??_scale+4
  3495  0DD2  0850               	movf	??_scale+4,w
  3496  0DD3  00B1               	movwf	___flmul@b+3
  3497  0DD4  084F               	movf	??_scale+3,w
  3498  0DD5  00B0               	movwf	___flmul@b+2
  3499  0DD6  084E               	movf	??_scale+2,w
  3500  0DD7  00AF               	movwf	___flmul@b+1
  3501  0DD8  084D               	movf	??_scale+1,w
  3502  0DD9  00AE               	movwf	___flmul@b
  3503  0DDA  300A               	movlw	10
  3504  0DDB  00A6               	movwf	___awdiv@divisor
  3505  0DDC  3000               	movlw	0
  3506  0DDD  00A7               	movwf	___awdiv@divisor+1
  3507  0DDE  085A               	movf	scale@scl,w
  3508  0DDF  00A8               	movwf	___awdiv@dividend
  3509  0DE0  01A9               	clrf	___awdiv@dividend+1
  3510  0DE1  1BA8               	btfsc	___awdiv@dividend,7
  3511  0DE2  03A9               	decf	___awdiv@dividend+1,f
  3512  0DE3  160A  118A  2126  120A  158A  	fcall	___awdiv
  3513  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0DEA  0826               	movf	?___awdiv,w
  3516  0DEB  00D1               	movwf	??_scale+5
  3517  0DEC  3001               	movlw	1
  3518  0DED                     u5895:
  3519  0DED  1003               	clrc
  3520  0DEE  0DD1               	rlf	??_scale+5,f
  3521  0DEF  3EFF               	addlw	-1
  3522  0DF0  1D03               	skipz
  3523  0DF1  2DED               	goto	u5895
  3524  0DF2  1003               	clrc
  3525  0DF3  0D51               	rlf	??_scale+5,w
  3526  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3527  0DF5  0084               	movwf	4
  3528  0DF6  160A  118A  2000  120A  158A  	fcall	stringdir
  3529  0DFB  00D2               	movwf	??_scale+6
  3530  0DFC  160A  118A  2000  120A  158A  	fcall	stringdir
  3531  0E01  00D3               	movwf	??_scale+7
  3532  0E02  160A  118A  2000  120A  158A  	fcall	stringdir
  3533  0E07  00D4               	movwf	??_scale+8
  3534  0E08  160A  118A  2000  120A  158A  	fcall	stringdir
  3535  0E0D  00D5               	movwf	??_scale+9
  3536  0E0E  0855               	movf	??_scale+9,w
  3537  0E0F  00B5               	movwf	___flmul@a+3
  3538  0E10  0854               	movf	??_scale+8,w
  3539  0E11  00B4               	movwf	___flmul@a+2
  3540  0E12  0853               	movf	??_scale+7,w
  3541  0E13  00B3               	movwf	___flmul@a+1
  3542  0E14  0852               	movf	??_scale+6,w
  3543  0E15  00B2               	movwf	___flmul@a
  3544  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3545  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0E1D  0831               	movf	?___flmul+3,w
  3548  0E1E  00CB               	movwf	?_scale+3
  3549  0E1F  0830               	movf	?___flmul+2,w
  3550  0E20  00CA               	movwf	?_scale+2
  3551  0E21  082F               	movf	?___flmul+1,w
  3552  0E22  00C9               	movwf	?_scale+1
  3553  0E23  082E               	movf	?___flmul,w
  3554  0E24  00C8               	movwf	?_scale
  3555  0E25  2FFF               	goto	l243
  3556  0E26                     l3421:
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3559  0E26  085A               	movf	scale@scl,w
  3560  0E27  00CC               	movwf	??_scale
  3561  0E28  3001               	movlw	1
  3562  0E29                     u5905:
  3563  0E29  1003               	clrc
  3564  0E2A  0DCC               	rlf	??_scale,f
  3565  0E2B  3EFF               	addlw	-1
  3566  0E2C  1D03               	skipz
  3567  0E2D  2E29               	goto	u5905
  3568  0E2E  1003               	clrc
  3569  0E2F  0D4C               	rlf	??_scale,w
  3570  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3571  0E31  0084               	movwf	4
  3572  0E32  160A  118A  2000  120A  158A  	fcall	stringdir
  3573  0E37  00CD               	movwf	??_scale+1
  3574  0E38  160A  118A  2000  120A  158A  	fcall	stringdir
  3575  0E3D  00CE               	movwf	??_scale+2
  3576  0E3E  160A  118A  2000  120A  158A  	fcall	stringdir
  3577  0E43  00CF               	movwf	??_scale+3
  3578  0E44  160A  118A  2000  120A  158A  	fcall	stringdir
  3579  0E49  00D0               	movwf	??_scale+4
  3580  0E4A  0850               	movf	??_scale+4,w
  3581  0E4B  00CB               	movwf	?_scale+3
  3582  0E4C  084F               	movf	??_scale+3,w
  3583  0E4D  00CA               	movwf	?_scale+2
  3584  0E4E  084E               	movf	??_scale+2,w
  3585  0E4F  00C9               	movwf	?_scale+1
  3586  0E50  084D               	movf	??_scale+1,w
  3587  0E51  00C8               	movwf	?_scale
  3588  0E52  2FFF               	goto	l243
  3589  0E53                     l3425:
  3590                           
  3591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3592  0E53  085A               	movf	scale@scl,w
  3593  0E54  3A80               	xorlw	128
  3594  0E55  3E12               	addlw	-238
  3595  0E56  1C03               	skipc
  3596  0E57  2E59               	goto	u5911
  3597  0E58  2E5A               	goto	u5910
  3598  0E59                     u5911:
  3599  0E59  2F44               	goto	l3433
  3600  0E5A                     u5910:
  3601  0E5A                     l3427:
  3602                           
  3603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3604  0E5A  300A               	movlw	10
  3605  0E5B  00A6               	movwf	___awdiv@divisor
  3606  0E5C  3000               	movlw	0
  3607  0E5D  00A7               	movwf	___awdiv@divisor+1
  3608  0E5E  085A               	movf	scale@scl,w
  3609  0E5F  00A2               	movwf	___awmod@dividend
  3610  0E60  01A3               	clrf	___awmod@dividend+1
  3611  0E61  1BA2               	btfsc	___awmod@dividend,7
  3612  0E62  03A3               	decf	___awmod@dividend+1,f
  3613  0E63  3064               	movlw	100
  3614  0E64  00A0               	movwf	___awmod@divisor
  3615  0E65  3000               	movlw	0
  3616  0E66  00A1               	movwf	___awmod@divisor+1
  3617  0E67  160A  158A  27A5  120A  158A  	fcall	___awmod
  3618  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  3619  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  3620  0E6E  0821               	movf	?___awmod+1,w
  3621  0E6F  00A9               	movwf	___awdiv@dividend+1
  3622  0E70  0820               	movf	?___awmod,w
  3623  0E71  00A8               	movwf	___awdiv@dividend
  3624  0E72  160A  118A  2126  120A  158A  	fcall	___awdiv
  3625  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3627  0E79  0826               	movf	?___awdiv,w
  3628  0E7A  00CC               	movwf	??_scale
  3629  0E7B  3001               	movlw	1
  3630  0E7C                     u5925:
  3631  0E7C  1003               	clrc
  3632  0E7D  0DCC               	rlf	??_scale,f
  3633  0E7E  3EFF               	addlw	-1
  3634  0E7F  1D03               	skipz
  3635  0E80  2E7C               	goto	u5925
  3636  0E81  1003               	clrc
  3637  0E82  0D4C               	rlf	??_scale,w
  3638  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3639  0E84  0084               	movwf	4
  3640  0E85  160A  118A  2000  120A  158A  	fcall	stringdir
  3641  0E8A  00CD               	movwf	??_scale+1
  3642  0E8B  160A  118A  2000  120A  158A  	fcall	stringdir
  3643  0E90  00CE               	movwf	??_scale+2
  3644  0E91  160A  118A  2000  120A  158A  	fcall	stringdir
  3645  0E96  00CF               	movwf	??_scale+3
  3646  0E97  160A  118A  2000  120A  158A  	fcall	stringdir
  3647  0E9C  00D0               	movwf	??_scale+4
  3648  0E9D  0850               	movf	??_scale+4,w
  3649  0E9E  00B1               	movwf	___flmul@b+3
  3650  0E9F  084F               	movf	??_scale+3,w
  3651  0EA0  00B0               	movwf	___flmul@b+2
  3652  0EA1  084E               	movf	??_scale+2,w
  3653  0EA2  00AF               	movwf	___flmul@b+1
  3654  0EA3  084D               	movf	??_scale+1,w
  3655  0EA4  00AE               	movwf	___flmul@b
  3656  0EA5  3064               	movlw	100
  3657  0EA6  00A6               	movwf	___awdiv@divisor
  3658  0EA7  3000               	movlw	0
  3659  0EA8  00A7               	movwf	___awdiv@divisor+1
  3660  0EA9  085A               	movf	scale@scl,w
  3661  0EAA  00A8               	movwf	___awdiv@dividend
  3662  0EAB  01A9               	clrf	___awdiv@dividend+1
  3663  0EAC  1BA8               	btfsc	___awdiv@dividend,7
  3664  0EAD  03A9               	decf	___awdiv@dividend+1,f
  3665  0EAE  160A  118A  2126  120A  158A  	fcall	___awdiv
  3666  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0EB5  0826               	movf	?___awdiv,w
  3669  0EB6  00D1               	movwf	??_scale+5
  3670  0EB7  3001               	movlw	1
  3671  0EB8                     u5935:
  3672  0EB8  1003               	clrc
  3673  0EB9  0DD1               	rlf	??_scale+5,f
  3674  0EBA  3EFF               	addlw	-1
  3675  0EBB  1D03               	skipz
  3676  0EBC  2EB8               	goto	u5935
  3677  0EBD  1003               	clrc
  3678  0EBE  0D51               	rlf	??_scale+5,w
  3679  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3680  0EC0  0084               	movwf	4
  3681  0EC1  160A  118A  2000  120A  158A  	fcall	stringdir
  3682  0EC6  00D2               	movwf	??_scale+6
  3683  0EC7  160A  118A  2000  120A  158A  	fcall	stringdir
  3684  0ECC  00D3               	movwf	??_scale+7
  3685  0ECD  160A  118A  2000  120A  158A  	fcall	stringdir
  3686  0ED2  00D4               	movwf	??_scale+8
  3687  0ED3  160A  118A  2000  120A  158A  	fcall	stringdir
  3688  0ED8  00D5               	movwf	??_scale+9
  3689  0ED9  0855               	movf	??_scale+9,w
  3690  0EDA  00B5               	movwf	___flmul@a+3
  3691  0EDB  0854               	movf	??_scale+8,w
  3692  0EDC  00B4               	movwf	___flmul@a+2
  3693  0EDD  0853               	movf	??_scale+7,w
  3694  0EDE  00B3               	movwf	___flmul@a+1
  3695  0EDF  0852               	movf	??_scale+6,w
  3696  0EE0  00B2               	movwf	___flmul@a
  3697  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3698  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3699  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3700  0EE8  0831               	movf	?___flmul+3,w
  3701  0EE9  00D9               	movwf	_scale$1113+3
  3702  0EEA  0830               	movf	?___flmul+2,w
  3703  0EEB  00D8               	movwf	_scale$1113+2
  3704  0EEC  082F               	movf	?___flmul+1,w
  3705  0EED  00D7               	movwf	_scale$1113+1
  3706  0EEE  082E               	movf	?___flmul,w
  3707  0EEF  00D6               	movwf	_scale$1113
  3708                           
  3709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3710  0EF0  300A               	movlw	10
  3711  0EF1  00A0               	movwf	___awmod@divisor
  3712  0EF2  3000               	movlw	0
  3713  0EF3  00A1               	movwf	___awmod@divisor+1
  3714  0EF4  085A               	movf	scale@scl,w
  3715  0EF5  00A2               	movwf	___awmod@dividend
  3716  0EF6  01A3               	clrf	___awmod@dividend+1
  3717  0EF7  1BA2               	btfsc	___awmod@dividend,7
  3718  0EF8  03A3               	decf	___awmod@dividend+1,f
  3719  0EF9  160A  158A  27A5  120A  158A  	fcall	___awmod
  3720  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  3721  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  3722  0F00  0820               	movf	?___awmod,w
  3723  0F01  00CC               	movwf	??_scale
  3724  0F02  3001               	movlw	1
  3725  0F03                     u5945:
  3726  0F03  1003               	clrc
  3727  0F04  0DCC               	rlf	??_scale,f
  3728  0F05  3EFF               	addlw	-1
  3729  0F06  1D03               	skipz
  3730  0F07  2F03               	goto	u5945
  3731  0F08  1003               	clrc
  3732  0F09  0D4C               	rlf	??_scale,w
  3733  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3734  0F0B  0084               	movwf	4
  3735  0F0C  160A  118A  2000  120A  158A  	fcall	stringdir
  3736  0F11  00CD               	movwf	??_scale+1
  3737  0F12  160A  118A  2000  120A  158A  	fcall	stringdir
  3738  0F17  00CE               	movwf	??_scale+2
  3739  0F18  160A  118A  2000  120A  158A  	fcall	stringdir
  3740  0F1D  00CF               	movwf	??_scale+3
  3741  0F1E  160A  118A  2000  120A  158A  	fcall	stringdir
  3742  0F23  00D0               	movwf	??_scale+4
  3743  0F24  0850               	movf	??_scale+4,w
  3744  0F25  00B1               	movwf	___flmul@b+3
  3745  0F26  084F               	movf	??_scale+3,w
  3746  0F27  00B0               	movwf	___flmul@b+2
  3747  0F28  084E               	movf	??_scale+2,w
  3748  0F29  00AF               	movwf	___flmul@b+1
  3749  0F2A  084D               	movf	??_scale+1,w
  3750  0F2B  00AE               	movwf	___flmul@b
  3751  0F2C  0859               	movf	_scale$1113+3,w
  3752  0F2D  00B5               	movwf	___flmul@a+3
  3753  0F2E  0858               	movf	_scale$1113+2,w
  3754  0F2F  00B4               	movwf	___flmul@a+2
  3755  0F30  0857               	movf	_scale$1113+1,w
  3756  0F31  00B3               	movwf	___flmul@a+1
  3757  0F32  0856               	movf	_scale$1113,w
  3758  0F33  00B2               	movwf	___flmul@a
  3759  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3760  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0F3B  0831               	movf	?___flmul+3,w
  3763  0F3C  00CB               	movwf	?_scale+3
  3764  0F3D  0830               	movf	?___flmul+2,w
  3765  0F3E  00CA               	movwf	?_scale+2
  3766  0F3F  082F               	movf	?___flmul+1,w
  3767  0F40  00C9               	movwf	?_scale+1
  3768  0F41  082E               	movf	?___flmul,w
  3769  0F42  00C8               	movwf	?_scale
  3770  0F43  2FFF               	goto	l243
  3771  0F44                     l3433:
  3772  0F44  085A               	movf	scale@scl,w
  3773  0F45  3A80               	xorlw	128
  3774  0F46  3E75               	addlw	-139
  3775  0F47  1C03               	skipc
  3776  0F48  2F4A               	goto	u5951
  3777  0F49  2F4B               	goto	u5950
  3778  0F4A                     u5951:
  3779  0F4A  2FD3               	goto	l3439
  3780  0F4B                     u5950:
  3781  0F4B                     l3435:
  3782                           
  3783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3784  0F4B  300A               	movlw	10
  3785  0F4C  00A0               	movwf	___awmod@divisor
  3786  0F4D  3000               	movlw	0
  3787  0F4E  00A1               	movwf	___awmod@divisor+1
  3788  0F4F  085A               	movf	scale@scl,w
  3789  0F50  00A2               	movwf	___awmod@dividend
  3790  0F51  01A3               	clrf	___awmod@dividend+1
  3791  0F52  1BA2               	btfsc	___awmod@dividend,7
  3792  0F53  03A3               	decf	___awmod@dividend+1,f
  3793  0F54  160A  158A  27A5  120A  158A  	fcall	___awmod
  3794  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3796  0F5B  0820               	movf	?___awmod,w
  3797  0F5C  00CC               	movwf	??_scale
  3798  0F5D  3001               	movlw	1
  3799  0F5E                     u5965:
  3800  0F5E  1003               	clrc
  3801  0F5F  0DCC               	rlf	??_scale,f
  3802  0F60  3EFF               	addlw	-1
  3803  0F61  1D03               	skipz
  3804  0F62  2F5E               	goto	u5965
  3805  0F63  1003               	clrc
  3806  0F64  0D4C               	rlf	??_scale,w
  3807  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3808  0F66  0084               	movwf	4
  3809  0F67  160A  118A  2000  120A  158A  	fcall	stringdir
  3810  0F6C  00CD               	movwf	??_scale+1
  3811  0F6D  160A  118A  2000  120A  158A  	fcall	stringdir
  3812  0F72  00CE               	movwf	??_scale+2
  3813  0F73  160A  118A  2000  120A  158A  	fcall	stringdir
  3814  0F78  00CF               	movwf	??_scale+3
  3815  0F79  160A  118A  2000  120A  158A  	fcall	stringdir
  3816  0F7E  00D0               	movwf	??_scale+4
  3817  0F7F  0850               	movf	??_scale+4,w
  3818  0F80  00B1               	movwf	___flmul@b+3
  3819  0F81  084F               	movf	??_scale+3,w
  3820  0F82  00B0               	movwf	___flmul@b+2
  3821  0F83  084E               	movf	??_scale+2,w
  3822  0F84  00AF               	movwf	___flmul@b+1
  3823  0F85  084D               	movf	??_scale+1,w
  3824  0F86  00AE               	movwf	___flmul@b
  3825  0F87  300A               	movlw	10
  3826  0F88  00A6               	movwf	___awdiv@divisor
  3827  0F89  3000               	movlw	0
  3828  0F8A  00A7               	movwf	___awdiv@divisor+1
  3829  0F8B  085A               	movf	scale@scl,w
  3830  0F8C  00A8               	movwf	___awdiv@dividend
  3831  0F8D  01A9               	clrf	___awdiv@dividend+1
  3832  0F8E  1BA8               	btfsc	___awdiv@dividend,7
  3833  0F8F  03A9               	decf	___awdiv@dividend+1,f
  3834  0F90  160A  118A  2126  120A  158A  	fcall	___awdiv
  3835  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3836  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3837  0F97  0826               	movf	?___awdiv,w
  3838  0F98  00D1               	movwf	??_scale+5
  3839  0F99  3001               	movlw	1
  3840  0F9A                     u5975:
  3841  0F9A  1003               	clrc
  3842  0F9B  0DD1               	rlf	??_scale+5,f
  3843  0F9C  3EFF               	addlw	-1
  3844  0F9D  1D03               	skipz
  3845  0F9E  2F9A               	goto	u5975
  3846  0F9F  1003               	clrc
  3847  0FA0  0D51               	rlf	??_scale+5,w
  3848  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3849  0FA2  0084               	movwf	4
  3850  0FA3  160A  118A  2000  120A  158A  	fcall	stringdir
  3851  0FA8  00D2               	movwf	??_scale+6
  3852  0FA9  160A  118A  2000  120A  158A  	fcall	stringdir
  3853  0FAE  00D3               	movwf	??_scale+7
  3854  0FAF  160A  118A  2000  120A  158A  	fcall	stringdir
  3855  0FB4  00D4               	movwf	??_scale+8
  3856  0FB5  160A  118A  2000  120A  158A  	fcall	stringdir
  3857  0FBA  00D5               	movwf	??_scale+9
  3858  0FBB  0855               	movf	??_scale+9,w
  3859  0FBC  00B5               	movwf	___flmul@a+3
  3860  0FBD  0854               	movf	??_scale+8,w
  3861  0FBE  00B4               	movwf	___flmul@a+2
  3862  0FBF  0853               	movf	??_scale+7,w
  3863  0FC0  00B3               	movwf	___flmul@a+1
  3864  0FC1  0852               	movf	??_scale+6,w
  3865  0FC2  00B2               	movwf	___flmul@a
  3866  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3867  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3868  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3869  0FCA  0831               	movf	?___flmul+3,w
  3870  0FCB  00CB               	movwf	?_scale+3
  3871  0FCC  0830               	movf	?___flmul+2,w
  3872  0FCD  00CA               	movwf	?_scale+2
  3873  0FCE  082F               	movf	?___flmul+1,w
  3874  0FCF  00C9               	movwf	?_scale+1
  3875  0FD0  082E               	movf	?___flmul,w
  3876  0FD1  00C8               	movwf	?_scale
  3877  0FD2  2FFF               	goto	l243
  3878  0FD3                     l3439:
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3881  0FD3  085A               	movf	scale@scl,w
  3882  0FD4  00CC               	movwf	??_scale
  3883  0FD5  3001               	movlw	1
  3884  0FD6                     u5985:
  3885  0FD6  1003               	clrc
  3886  0FD7  0DCC               	rlf	??_scale,f
  3887  0FD8  3EFF               	addlw	-1
  3888  0FD9  1D03               	skipz
  3889  0FDA  2FD6               	goto	u5985
  3890  0FDB  1003               	clrc
  3891  0FDC  0D4C               	rlf	??_scale,w
  3892  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3893  0FDE  0084               	movwf	4
  3894  0FDF  160A  118A  2000  120A  158A  	fcall	stringdir
  3895  0FE4  00CD               	movwf	??_scale+1
  3896  0FE5  160A  118A  2000  120A  158A  	fcall	stringdir
  3897  0FEA  00CE               	movwf	??_scale+2
  3898  0FEB  160A  118A  2000  120A  158A  	fcall	stringdir
  3899  0FF0  00CF               	movwf	??_scale+3
  3900  0FF1  160A  118A  2000  120A  158A  	fcall	stringdir
  3901  0FF6  00D0               	movwf	??_scale+4
  3902  0FF7  0850               	movf	??_scale+4,w
  3903  0FF8  00CB               	movwf	?_scale+3
  3904  0FF9  084F               	movf	??_scale+3,w
  3905  0FFA  00CA               	movwf	?_scale+2
  3906  0FFB  084E               	movf	??_scale+2,w
  3907  0FFC  00C9               	movwf	?_scale+1
  3908  0FFD  084D               	movf	??_scale+1,w
  3909  0FFE  00C8               	movwf	?_scale
  3910  0FFF                     l243:
  3911  0FFF  0008               	return
  3912  1000                     __end_of_scale:
  3913                           
  3914                           	psect	text3
  3915  1FA5                     __ptext3:	
  3916 ;; *************** function ___awmod *****************
  3917 ;; Defined at:
  3918 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  divisor         2    0[BANK0 ] int 
  3921 ;;  dividend        2    2[BANK0 ] int 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  sign            1    5[BANK0 ] unsigned char 
  3924 ;;  counter         1    4[BANK0 ] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  2    0[BANK0 ] int 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         0       4       0       0       0
  3935 ;;      Locals:         0       2       0       0       0
  3936 ;;      Temps:          1       0       0       0       0
  3937 ;;      Totals:         1       6       0       0       0
  3938 ;;Total ram usage:        7 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    1
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_scale
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           
  3949                           ;psect for function ___awmod
  3950  1FA5                     ___awmod:
  3951  1FA5                     l3185:	
  3952                           ;incstack = 0
  3953                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3954                           
  3955  1FA5  1283               	bcf	3,5	;RP0=0, select bank0
  3956  1FA6  1303               	bcf	3,6	;RP1=0, select bank0
  3957  1FA7  01A5               	clrf	___awmod@sign
  3958  1FA8                     l3187:
  3959  1FA8  1FA3               	btfss	___awmod@dividend+1,7
  3960  1FA9  2FAB               	goto	u5221
  3961  1FAA  2FAC               	goto	u5220
  3962  1FAB                     u5221:
  3963  1FAB  2FB3               	goto	l3193
  3964  1FAC                     u5220:
  3965  1FAC                     l3189:
  3966  1FAC  09A2               	comf	___awmod@dividend,f
  3967  1FAD  09A3               	comf	___awmod@dividend+1,f
  3968  1FAE  0AA2               	incf	___awmod@dividend,f
  3969  1FAF  1903               	skipnz
  3970  1FB0  0AA3               	incf	___awmod@dividend+1,f
  3971  1FB1                     l3191:
  3972  1FB1  01A5               	clrf	___awmod@sign
  3973  1FB2  0AA5               	incf	___awmod@sign,f
  3974  1FB3                     l3193:
  3975  1FB3  1FA1               	btfss	___awmod@divisor+1,7
  3976  1FB4  2FB6               	goto	u5231
  3977  1FB5  2FB7               	goto	u5230
  3978  1FB6                     u5231:
  3979  1FB6  2FBC               	goto	l3197
  3980  1FB7                     u5230:
  3981  1FB7                     l3195:
  3982  1FB7  09A0               	comf	___awmod@divisor,f
  3983  1FB8  09A1               	comf	___awmod@divisor+1,f
  3984  1FB9  0AA0               	incf	___awmod@divisor,f
  3985  1FBA  1903               	skipnz
  3986  1FBB  0AA1               	incf	___awmod@divisor+1,f
  3987  1FBC                     l3197:
  3988  1FBC  0820               	movf	___awmod@divisor,w
  3989  1FBD  0421               	iorwf	___awmod@divisor+1,w
  3990  1FBE  1903               	btfsc	3,2
  3991  1FBF  2FC1               	goto	u5241
  3992  1FC0  2FC2               	goto	u5240
  3993  1FC1                     u5241:
  3994  1FC1  2FF1               	goto	l3215
  3995  1FC2                     u5240:
  3996  1FC2                     l3199:
  3997  1FC2  01A4               	clrf	___awmod@counter
  3998  1FC3  0AA4               	incf	___awmod@counter,f
  3999  1FC4  2FD0               	goto	l3205
  4000  1FC5                     l3201:
  4001  1FC5  3001               	movlw	1
  4002  1FC6                     u5255:
  4003  1FC6  1003               	clrc
  4004  1FC7  0DA0               	rlf	___awmod@divisor,f
  4005  1FC8  0DA1               	rlf	___awmod@divisor+1,f
  4006  1FC9  3EFF               	addlw	-1
  4007  1FCA  1D03               	skipz
  4008  1FCB  2FC6               	goto	u5255
  4009  1FCC                     l3203:
  4010  1FCC  3001               	movlw	1
  4011  1FCD  00F5               	movwf	??___awmod
  4012  1FCE  0875               	movf	??___awmod,w
  4013  1FCF  07A4               	addwf	___awmod@counter,f
  4014  1FD0                     l3205:
  4015  1FD0  1FA1               	btfss	___awmod@divisor+1,7
  4016  1FD1  2FD3               	goto	u5261
  4017  1FD2  2FD4               	goto	u5260
  4018  1FD3                     u5261:
  4019  1FD3  2FC5               	goto	l3201
  4020  1FD4                     u5260:
  4021  1FD4                     l3207:
  4022  1FD4  0821               	movf	___awmod@divisor+1,w
  4023  1FD5  0223               	subwf	___awmod@dividend+1,w
  4024  1FD6  1D03               	skipz
  4025  1FD7  2FDA               	goto	u5275
  4026  1FD8  0820               	movf	___awmod@divisor,w
  4027  1FD9  0222               	subwf	___awmod@dividend,w
  4028  1FDA                     u5275:
  4029  1FDA  1C03               	skipc
  4030  1FDB  2FDD               	goto	u5271
  4031  1FDC  2FDE               	goto	u5270
  4032  1FDD                     u5271:
  4033  1FDD  2FE4               	goto	l3211
  4034  1FDE                     u5270:
  4035  1FDE                     l3209:
  4036  1FDE  0820               	movf	___awmod@divisor,w
  4037  1FDF  02A2               	subwf	___awmod@dividend,f
  4038  1FE0  0821               	movf	___awmod@divisor+1,w
  4039  1FE1  1C03               	skipc
  4040  1FE2  03A3               	decf	___awmod@dividend+1,f
  4041  1FE3  02A3               	subwf	___awmod@dividend+1,f
  4042  1FE4                     l3211:
  4043  1FE4  3001               	movlw	1
  4044  1FE5                     u5285:
  4045  1FE5  1003               	clrc
  4046  1FE6  0CA1               	rrf	___awmod@divisor+1,f
  4047  1FE7  0CA0               	rrf	___awmod@divisor,f
  4048  1FE8  3EFF               	addlw	-1
  4049  1FE9  1D03               	skipz
  4050  1FEA  2FE5               	goto	u5285
  4051  1FEB                     l3213:
  4052  1FEB  3001               	movlw	1
  4053  1FEC  02A4               	subwf	___awmod@counter,f
  4054  1FED  1D03               	btfss	3,2
  4055  1FEE  2FF0               	goto	u5291
  4056  1FEF  2FF1               	goto	u5290
  4057  1FF0                     u5291:
  4058  1FF0  2FD4               	goto	l3207
  4059  1FF1                     u5290:
  4060  1FF1                     l3215:
  4061  1FF1  0825               	movf	___awmod@sign,w
  4062  1FF2  1903               	btfsc	3,2
  4063  1FF3  2FF5               	goto	u5301
  4064  1FF4  2FF6               	goto	u5300
  4065  1FF5                     u5301:
  4066  1FF5  2FFB               	goto	l3219
  4067  1FF6                     u5300:
  4068  1FF6                     l3217:
  4069  1FF6  09A2               	comf	___awmod@dividend,f
  4070  1FF7  09A3               	comf	___awmod@dividend+1,f
  4071  1FF8  0AA2               	incf	___awmod@dividend,f
  4072  1FF9  1903               	skipnz
  4073  1FFA  0AA3               	incf	___awmod@dividend+1,f
  4074  1FFB                     l3219:
  4075  1FFB  0823               	movf	___awmod@dividend+1,w
  4076  1FFC  00A1               	movwf	?___awmod+1
  4077  1FFD  0822               	movf	___awmod@dividend,w
  4078  1FFE  00A0               	movwf	?___awmod
  4079  1FFF                     l469:
  4080  1FFF  0008               	return
  4081  2000                     __end_of___awmod:
  4082                           
  4083                           	psect	text4
  4084  1126                     __ptext4:	
  4085 ;; *************** function ___awdiv *****************
  4086 ;; Defined at:
  4087 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  divisor         2    6[BANK0 ] int 
  4090 ;;  dividend        2    8[BANK0 ] int 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  quotient        2   12[BANK0 ] int 
  4093 ;;  sign            1   11[BANK0 ] unsigned char 
  4094 ;;  counter         1   10[BANK0 ] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  2    6[BANK0 ] int 
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         0       4       0       0       0
  4105 ;;      Locals:         0       4       0       0       0
  4106 ;;      Temps:          1       0       0       0       0
  4107 ;;      Totals:         1       8       0       0       0
  4108 ;;Total ram usage:        9 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    1
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_scale
  4115 ;;		_sprintf
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function ___awdiv
  4121  1126                     ___awdiv:
  4122  1126                     l3141:	
  4123                           ;incstack = 0
  4124                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4125                           
  4126  1126  1283               	bcf	3,5	;RP0=0, select bank0
  4127  1127  1303               	bcf	3,6	;RP1=0, select bank0
  4128  1128  01AB               	clrf	___awdiv@sign
  4129  1129                     l3143:
  4130  1129  1FA7               	btfss	___awdiv@divisor+1,7
  4131  112A  292C               	goto	u5121
  4132  112B  292D               	goto	u5120
  4133  112C                     u5121:
  4134  112C  2934               	goto	l3149
  4135  112D                     u5120:
  4136  112D                     l3145:
  4137  112D  09A6               	comf	___awdiv@divisor,f
  4138  112E  09A7               	comf	___awdiv@divisor+1,f
  4139  112F  0AA6               	incf	___awdiv@divisor,f
  4140  1130  1903               	skipnz
  4141  1131  0AA7               	incf	___awdiv@divisor+1,f
  4142  1132                     l3147:
  4143  1132  01AB               	clrf	___awdiv@sign
  4144  1133  0AAB               	incf	___awdiv@sign,f
  4145  1134                     l3149:
  4146  1134  1FA9               	btfss	___awdiv@dividend+1,7
  4147  1135  2937               	goto	u5131
  4148  1136  2938               	goto	u5130
  4149  1137                     u5131:
  4150  1137  2941               	goto	l3155
  4151  1138                     u5130:
  4152  1138                     l3151:
  4153  1138  09A8               	comf	___awdiv@dividend,f
  4154  1139  09A9               	comf	___awdiv@dividend+1,f
  4155  113A  0AA8               	incf	___awdiv@dividend,f
  4156  113B  1903               	skipnz
  4157  113C  0AA9               	incf	___awdiv@dividend+1,f
  4158  113D                     l3153:
  4159  113D  3001               	movlw	1
  4160  113E  00F6               	movwf	??___awdiv
  4161  113F  0876               	movf	??___awdiv,w
  4162  1140  06AB               	xorwf	___awdiv@sign,f
  4163  1141                     l3155:
  4164  1141  01AC               	clrf	___awdiv@quotient
  4165  1142  01AD               	clrf	___awdiv@quotient+1
  4166  1143                     l3157:
  4167  1143  0826               	movf	___awdiv@divisor,w
  4168  1144  0427               	iorwf	___awdiv@divisor+1,w
  4169  1145  1903               	btfsc	3,2
  4170  1146  2948               	goto	u5141
  4171  1147  2949               	goto	u5140
  4172  1148                     u5141:
  4173  1148  2980               	goto	l3177
  4174  1149                     u5140:
  4175  1149                     l3159:
  4176  1149  01AA               	clrf	___awdiv@counter
  4177  114A  0AAA               	incf	___awdiv@counter,f
  4178  114B  2957               	goto	l3165
  4179  114C                     l3161:
  4180  114C  3001               	movlw	1
  4181  114D                     u5155:
  4182  114D  1003               	clrc
  4183  114E  0DA6               	rlf	___awdiv@divisor,f
  4184  114F  0DA7               	rlf	___awdiv@divisor+1,f
  4185  1150  3EFF               	addlw	-1
  4186  1151  1D03               	skipz
  4187  1152  294D               	goto	u5155
  4188  1153                     l3163:
  4189  1153  3001               	movlw	1
  4190  1154  00F6               	movwf	??___awdiv
  4191  1155  0876               	movf	??___awdiv,w
  4192  1156  07AA               	addwf	___awdiv@counter,f
  4193  1157                     l3165:
  4194  1157  1FA7               	btfss	___awdiv@divisor+1,7
  4195  1158  295A               	goto	u5161
  4196  1159  295B               	goto	u5160
  4197  115A                     u5161:
  4198  115A  294C               	goto	l3161
  4199  115B                     u5160:
  4200  115B                     l3167:
  4201  115B  3001               	movlw	1
  4202  115C                     u5175:
  4203  115C  1003               	clrc
  4204  115D  0DAC               	rlf	___awdiv@quotient,f
  4205  115E  0DAD               	rlf	___awdiv@quotient+1,f
  4206  115F  3EFF               	addlw	-1
  4207  1160  1D03               	skipz
  4208  1161  295C               	goto	u5175
  4209  1162  0827               	movf	___awdiv@divisor+1,w
  4210  1163  0229               	subwf	___awdiv@dividend+1,w
  4211  1164  1D03               	skipz
  4212  1165  2968               	goto	u5185
  4213  1166  0826               	movf	___awdiv@divisor,w
  4214  1167  0228               	subwf	___awdiv@dividend,w
  4215  1168                     u5185:
  4216  1168  1C03               	skipc
  4217  1169  296B               	goto	u5181
  4218  116A  296C               	goto	u5180
  4219  116B                     u5181:
  4220  116B  2973               	goto	l3173
  4221  116C                     u5180:
  4222  116C                     l3169:
  4223  116C  0826               	movf	___awdiv@divisor,w
  4224  116D  02A8               	subwf	___awdiv@dividend,f
  4225  116E  0827               	movf	___awdiv@divisor+1,w
  4226  116F  1C03               	skipc
  4227  1170  03A9               	decf	___awdiv@dividend+1,f
  4228  1171  02A9               	subwf	___awdiv@dividend+1,f
  4229  1172                     l3171:
  4230  1172  142C               	bsf	___awdiv@quotient,0
  4231  1173                     l3173:
  4232  1173  3001               	movlw	1
  4233  1174                     u5195:
  4234  1174  1003               	clrc
  4235  1175  0CA7               	rrf	___awdiv@divisor+1,f
  4236  1176  0CA6               	rrf	___awdiv@divisor,f
  4237  1177  3EFF               	addlw	-1
  4238  1178  1D03               	skipz
  4239  1179  2974               	goto	u5195
  4240  117A                     l3175:
  4241  117A  3001               	movlw	1
  4242  117B  02AA               	subwf	___awdiv@counter,f
  4243  117C  1D03               	btfss	3,2
  4244  117D  297F               	goto	u5201
  4245  117E  2980               	goto	u5200
  4246  117F                     u5201:
  4247  117F  295B               	goto	l3167
  4248  1180                     u5200:
  4249  1180                     l3177:
  4250  1180  082B               	movf	___awdiv@sign,w
  4251  1181  1903               	btfsc	3,2
  4252  1182  2984               	goto	u5211
  4253  1183  2985               	goto	u5210
  4254  1184                     u5211:
  4255  1184  298A               	goto	l3181
  4256  1185                     u5210:
  4257  1185                     l3179:
  4258  1185  09AC               	comf	___awdiv@quotient,f
  4259  1186  09AD               	comf	___awdiv@quotient+1,f
  4260  1187  0AAC               	incf	___awdiv@quotient,f
  4261  1188  1903               	skipnz
  4262  1189  0AAD               	incf	___awdiv@quotient+1,f
  4263  118A                     l3181:
  4264  118A  082D               	movf	___awdiv@quotient+1,w
  4265  118B  00A7               	movwf	?___awdiv+1
  4266  118C  082C               	movf	___awdiv@quotient,w
  4267  118D  00A6               	movwf	?___awdiv
  4268  118E                     l456:
  4269  118E  0008               	return
  4270  118F                     __end_of___awdiv:
  4271                           
  4272                           	psect	text5
  4273  136B                     __ptext5:	
  4274 ;; *************** function _fround *****************
  4275 ;; Defined at:
  4276 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  prec            1    wreg     unsigned char 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  prec            1   59[BANK0 ] unsigned char 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  4   40[BANK0 ] unsigned char 
  4283 ;; Registers used:
  4284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4290 ;;      Params:         0       4       0       0       0
  4291 ;;      Locals:         0       9       0       0       0
  4292 ;;      Temps:          0       7       0       0       0
  4293 ;;      Totals:         0      20       0       0       0
  4294 ;;Total ram usage:       20 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; Hardware stack levels required when called:    3
  4297 ;; This function calls:
  4298 ;;		___flmul
  4299 ;;		___lwdiv
  4300 ;;		___lwmod
  4301 ;; This function is called by:
  4302 ;;		_sprintf
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           
  4307                           ;psect for function _fround
  4308  136B                     _fround:
  4309                           
  4310                           ;incstack = 0
  4311                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4312                           ;fround@prec stored from wreg
  4313  136B  1283               	bcf	3,5	;RP0=0, select bank0
  4314  136C  1303               	bcf	3,6	;RP1=0, select bank0
  4315  136D  00DB               	movwf	fround@prec
  4316  136E                     l3385:
  4317                           
  4318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4319  136E  306E               	movlw	110
  4320  136F  025B               	subwf	fround@prec,w
  4321  1370  1C03               	skipc
  4322  1371  2B73               	goto	u5741
  4323  1372  2B74               	goto	u5740
  4324  1373                     u5741:
  4325  1373  2C83               	goto	l3393
  4326  1374                     u5740:
  4327  1374                     l3387:
  4328                           
  4329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4330  1374  303F               	movlw	63
  4331  1375  00B1               	movwf	___flmul@b+3
  4332  1376  3000               	movlw	0
  4333  1377  00B0               	movwf	___flmul@b+2
  4334  1378  3000               	movlw	0
  4335  1379  00AF               	movwf	___flmul@b+1
  4336  137A  3000               	movlw	0
  4337  137B  00AE               	movwf	___flmul@b
  4338  137C  3064               	movlw	100
  4339  137D  00A4               	movwf	___lwdiv@divisor
  4340  137E  3000               	movlw	0
  4341  137F  00A5               	movwf	___lwdiv@divisor+1
  4342  1380  085B               	movf	fround@prec,w
  4343  1381  00CC               	movwf	??_fround
  4344  1382  01CD               	clrf	??_fround+1
  4345  1383  084C               	movf	??_fround,w
  4346  1384  00A6               	movwf	___lwdiv@dividend
  4347  1385  084D               	movf	??_fround+1,w
  4348  1386  00A7               	movwf	___lwdiv@dividend+1
  4349  1387  160A  158A  2669  160A  118A  	fcall	___lwdiv
  4350  138C  1283               	bcf	3,5	;RP0=0, select bank0
  4351  138D  1303               	bcf	3,6	;RP1=0, select bank0
  4352  138E  0824               	movf	?___lwdiv,w
  4353  138F  00CE               	movwf	??_fround+2
  4354  1390  3001               	movlw	1
  4355  1391                     u5755:
  4356  1391  1003               	clrc
  4357  1392  0DCE               	rlf	??_fround+2,f
  4358  1393  3EFF               	addlw	-1
  4359  1394  1D03               	skipz
  4360  1395  2B91               	goto	u5755
  4361  1396  1003               	clrc
  4362  1397  0D4E               	rlf	??_fround+2,w
  4363  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4364  1399  0084               	movwf	4
  4365  139A  160A  118A  2000  160A  118A  	fcall	stringdir
  4366  139F  00CF               	movwf	??_fround+3
  4367  13A0  160A  118A  2000  160A  118A  	fcall	stringdir
  4368  13A5  00D0               	movwf	??_fround+4
  4369  13A6  160A  118A  2000  160A  118A  	fcall	stringdir
  4370  13AB  00D1               	movwf	??_fround+5
  4371  13AC  160A  118A  2000  160A  118A  	fcall	stringdir
  4372  13B1  00D2               	movwf	??_fround+6
  4373  13B2  0852               	movf	??_fround+6,w
  4374  13B3  00B5               	movwf	___flmul@a+3
  4375  13B4  0851               	movf	??_fround+5,w
  4376  13B5  00B4               	movwf	___flmul@a+2
  4377  13B6  0850               	movf	??_fround+4,w
  4378  13B7  00B3               	movwf	___flmul@a+1
  4379  13B8  084F               	movf	??_fround+3,w
  4380  13B9  00B2               	movwf	___flmul@a
  4381  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  4382  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4383  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4384  13C1  0831               	movf	?___flmul+3,w
  4385  13C2  00DA               	movwf	_fround$1111+3
  4386  13C3  0830               	movf	?___flmul+2,w
  4387  13C4  00D9               	movwf	_fround$1111+2
  4388  13C5  082F               	movf	?___flmul+1,w
  4389  13C6  00D8               	movwf	_fround$1111+1
  4390  13C7  082E               	movf	?___flmul,w
  4391  13C8  00D7               	movwf	_fround$1111
  4392                           
  4393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4394  13C9  300A               	movlw	10
  4395  13CA  00A4               	movwf	___lwdiv@divisor
  4396  13CB  3000               	movlw	0
  4397  13CC  00A5               	movwf	___lwdiv@divisor+1
  4398  13CD  085B               	movf	fround@prec,w
  4399  13CE  00CC               	movwf	??_fround
  4400  13CF  01CD               	clrf	??_fround+1
  4401  13D0  084C               	movf	??_fround,w
  4402  13D1  00A2               	movwf	___lwmod@dividend
  4403  13D2  084D               	movf	??_fround+1,w
  4404  13D3  00A3               	movwf	___lwmod@dividend+1
  4405  13D4  3064               	movlw	100
  4406  13D5  00A0               	movwf	___lwmod@divisor
  4407  13D6  3000               	movlw	0
  4408  13D7  00A1               	movwf	___lwmod@divisor+1
  4409  13D8  160A  158A  262D  160A  118A  	fcall	___lwmod
  4410  13DD  1283               	bcf	3,5	;RP0=0, select bank0
  4411  13DE  1303               	bcf	3,6	;RP1=0, select bank0
  4412  13DF  0821               	movf	?___lwmod+1,w
  4413  13E0  00A7               	movwf	___lwdiv@dividend+1
  4414  13E1  0820               	movf	?___lwmod,w
  4415  13E2  00A6               	movwf	___lwdiv@dividend
  4416  13E3  160A  158A  2669  160A  118A  	fcall	___lwdiv
  4417  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  4418  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  4419  13EA  0824               	movf	?___lwdiv,w
  4420  13EB  00CE               	movwf	??_fround+2
  4421  13EC  3001               	movlw	1
  4422  13ED                     u5765:
  4423  13ED  1003               	clrc
  4424  13EE  0DCE               	rlf	??_fround+2,f
  4425  13EF  3EFF               	addlw	-1
  4426  13F0  1D03               	skipz
  4427  13F1  2BED               	goto	u5765
  4428  13F2  1003               	clrc
  4429  13F3  0D4E               	rlf	??_fround+2,w
  4430  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4431  13F5  0084               	movwf	4
  4432  13F6  160A  118A  2000  160A  118A  	fcall	stringdir
  4433  13FB  00CF               	movwf	??_fround+3
  4434  13FC  160A  118A  2000  160A  118A  	fcall	stringdir
  4435  1401  00D0               	movwf	??_fround+4
  4436  1402  160A  118A  2000  160A  118A  	fcall	stringdir
  4437  1407  00D1               	movwf	??_fround+5
  4438  1408  160A  118A  2000  160A  118A  	fcall	stringdir
  4439  140D  00D2               	movwf	??_fround+6
  4440  140E  0852               	movf	??_fround+6,w
  4441  140F  00B1               	movwf	___flmul@b+3
  4442  1410  0851               	movf	??_fround+5,w
  4443  1411  00B0               	movwf	___flmul@b+2
  4444  1412  0850               	movf	??_fround+4,w
  4445  1413  00AF               	movwf	___flmul@b+1
  4446  1414  084F               	movf	??_fround+3,w
  4447  1415  00AE               	movwf	___flmul@b
  4448  1416  085A               	movf	_fround$1111+3,w
  4449  1417  00B5               	movwf	___flmul@a+3
  4450  1418  0859               	movf	_fround$1111+2,w
  4451  1419  00B4               	movwf	___flmul@a+2
  4452  141A  0858               	movf	_fround$1111+1,w
  4453  141B  00B3               	movwf	___flmul@a+1
  4454  141C  0857               	movf	_fround$1111,w
  4455  141D  00B2               	movwf	___flmul@a
  4456  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  4457  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4458  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4459  1425  0831               	movf	?___flmul+3,w
  4460  1426  00D6               	movwf	_fround$1112+3
  4461  1427  0830               	movf	?___flmul+2,w
  4462  1428  00D5               	movwf	_fround$1112+2
  4463  1429  082F               	movf	?___flmul+1,w
  4464  142A  00D4               	movwf	_fround$1112+1
  4465  142B  082E               	movf	?___flmul,w
  4466  142C  00D3               	movwf	_fround$1112
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4469  142D  300A               	movlw	10
  4470  142E  00A0               	movwf	___lwmod@divisor
  4471  142F  3000               	movlw	0
  4472  1430  00A1               	movwf	___lwmod@divisor+1
  4473  1431  085B               	movf	fround@prec,w
  4474  1432  00CC               	movwf	??_fround
  4475  1433  01CD               	clrf	??_fround+1
  4476  1434  084C               	movf	??_fround,w
  4477  1435  00A2               	movwf	___lwmod@dividend
  4478  1436  084D               	movf	??_fround+1,w
  4479  1437  00A3               	movwf	___lwmod@dividend+1
  4480  1438  160A  158A  262D  160A  118A  	fcall	___lwmod
  4481  143D  1283               	bcf	3,5	;RP0=0, select bank0
  4482  143E  1303               	bcf	3,6	;RP1=0, select bank0
  4483  143F  0820               	movf	?___lwmod,w
  4484  1440  00CE               	movwf	??_fround+2
  4485  1441  3001               	movlw	1
  4486  1442                     u5775:
  4487  1442  1003               	clrc
  4488  1443  0DCE               	rlf	??_fround+2,f
  4489  1444  3EFF               	addlw	-1
  4490  1445  1D03               	skipz
  4491  1446  2C42               	goto	u5775
  4492  1447  1003               	clrc
  4493  1448  0D4E               	rlf	??_fround+2,w
  4494  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4495  144A  0084               	movwf	4
  4496  144B  160A  118A  2000  160A  118A  	fcall	stringdir
  4497  1450  00CF               	movwf	??_fround+3
  4498  1451  160A  118A  2000  160A  118A  	fcall	stringdir
  4499  1456  00D0               	movwf	??_fround+4
  4500  1457  160A  118A  2000  160A  118A  	fcall	stringdir
  4501  145C  00D1               	movwf	??_fround+5
  4502  145D  160A  118A  2000  160A  118A  	fcall	stringdir
  4503  1462  00D2               	movwf	??_fround+6
  4504  1463  0852               	movf	??_fround+6,w
  4505  1464  00B1               	movwf	___flmul@b+3
  4506  1465  0851               	movf	??_fround+5,w
  4507  1466  00B0               	movwf	___flmul@b+2
  4508  1467  0850               	movf	??_fround+4,w
  4509  1468  00AF               	movwf	___flmul@b+1
  4510  1469  084F               	movf	??_fround+3,w
  4511  146A  00AE               	movwf	___flmul@b
  4512  146B  0856               	movf	_fround$1112+3,w
  4513  146C  00B5               	movwf	___flmul@a+3
  4514  146D  0855               	movf	_fround$1112+2,w
  4515  146E  00B4               	movwf	___flmul@a+2
  4516  146F  0854               	movf	_fround$1112+1,w
  4517  1470  00B3               	movwf	___flmul@a+1
  4518  1471  0853               	movf	_fround$1112,w
  4519  1472  00B2               	movwf	___flmul@a
  4520  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  4521  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4522  1479  1303               	bcf	3,6	;RP1=0, select bank0
  4523  147A  0831               	movf	?___flmul+3,w
  4524  147B  00CB               	movwf	?_fround+3
  4525  147C  0830               	movf	?___flmul+2,w
  4526  147D  00CA               	movwf	?_fround+2
  4527  147E  082F               	movf	?___flmul+1,w
  4528  147F  00C9               	movwf	?_fround+1
  4529  1480  082E               	movf	?___flmul,w
  4530  1481  00C8               	movwf	?_fround
  4531  1482  2D77               	goto	l236
  4532  1483                     l3393:
  4533  1483  300B               	movlw	11
  4534  1484  025B               	subwf	fround@prec,w
  4535  1485  1C03               	skipc
  4536  1486  2C88               	goto	u5781
  4537  1487  2C89               	goto	u5780
  4538  1488                     u5781:
  4539  1488  2D34               	goto	l3399
  4540  1489                     u5780:
  4541  1489                     l3395:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4544  1489  303F               	movlw	63
  4545  148A  00B1               	movwf	___flmul@b+3
  4546  148B  3000               	movlw	0
  4547  148C  00B0               	movwf	___flmul@b+2
  4548  148D  3000               	movlw	0
  4549  148E  00AF               	movwf	___flmul@b+1
  4550  148F  3000               	movlw	0
  4551  1490  00AE               	movwf	___flmul@b
  4552  1491  300A               	movlw	10
  4553  1492  00A4               	movwf	___lwdiv@divisor
  4554  1493  3000               	movlw	0
  4555  1494  00A5               	movwf	___lwdiv@divisor+1
  4556  1495  085B               	movf	fround@prec,w
  4557  1496  00CC               	movwf	??_fround
  4558  1497  01CD               	clrf	??_fround+1
  4559  1498  084C               	movf	??_fround,w
  4560  1499  00A6               	movwf	___lwdiv@dividend
  4561  149A  084D               	movf	??_fround+1,w
  4562  149B  00A7               	movwf	___lwdiv@dividend+1
  4563  149C  160A  158A  2669  160A  118A  	fcall	___lwdiv
  4564  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  4565  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  4566  14A3  0824               	movf	?___lwdiv,w
  4567  14A4  00CE               	movwf	??_fround+2
  4568  14A5  3001               	movlw	1
  4569  14A6                     u5795:
  4570  14A6  1003               	clrc
  4571  14A7  0DCE               	rlf	??_fround+2,f
  4572  14A8  3EFF               	addlw	-1
  4573  14A9  1D03               	skipz
  4574  14AA  2CA6               	goto	u5795
  4575  14AB  1003               	clrc
  4576  14AC  0D4E               	rlf	??_fround+2,w
  4577  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4578  14AE  0084               	movwf	4
  4579  14AF  160A  118A  2000  160A  118A  	fcall	stringdir
  4580  14B4  00CF               	movwf	??_fround+3
  4581  14B5  160A  118A  2000  160A  118A  	fcall	stringdir
  4582  14BA  00D0               	movwf	??_fround+4
  4583  14BB  160A  118A  2000  160A  118A  	fcall	stringdir
  4584  14C0  00D1               	movwf	??_fround+5
  4585  14C1  160A  118A  2000  160A  118A  	fcall	stringdir
  4586  14C6  00D2               	movwf	??_fround+6
  4587  14C7  0852               	movf	??_fround+6,w
  4588  14C8  00B5               	movwf	___flmul@a+3
  4589  14C9  0851               	movf	??_fround+5,w
  4590  14CA  00B4               	movwf	___flmul@a+2
  4591  14CB  0850               	movf	??_fround+4,w
  4592  14CC  00B3               	movwf	___flmul@a+1
  4593  14CD  084F               	movf	??_fround+3,w
  4594  14CE  00B2               	movwf	___flmul@a
  4595  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  4596  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  4597  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  4598  14D6  0831               	movf	?___flmul+3,w
  4599  14D7  00DA               	movwf	_fround$1111+3
  4600  14D8  0830               	movf	?___flmul+2,w
  4601  14D9  00D9               	movwf	_fround$1111+2
  4602  14DA  082F               	movf	?___flmul+1,w
  4603  14DB  00D8               	movwf	_fround$1111+1
  4604  14DC  082E               	movf	?___flmul,w
  4605  14DD  00D7               	movwf	_fround$1111
  4606                           
  4607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4608  14DE  300A               	movlw	10
  4609  14DF  00A0               	movwf	___lwmod@divisor
  4610  14E0  3000               	movlw	0
  4611  14E1  00A1               	movwf	___lwmod@divisor+1
  4612  14E2  085B               	movf	fround@prec,w
  4613  14E3  00CC               	movwf	??_fround
  4614  14E4  01CD               	clrf	??_fround+1
  4615  14E5  084C               	movf	??_fround,w
  4616  14E6  00A2               	movwf	___lwmod@dividend
  4617  14E7  084D               	movf	??_fround+1,w
  4618  14E8  00A3               	movwf	___lwmod@dividend+1
  4619  14E9  160A  158A  262D  160A  118A  	fcall	___lwmod
  4620  14EE  1283               	bcf	3,5	;RP0=0, select bank0
  4621  14EF  1303               	bcf	3,6	;RP1=0, select bank0
  4622  14F0  0820               	movf	?___lwmod,w
  4623  14F1  00CE               	movwf	??_fround+2
  4624  14F2  3001               	movlw	1
  4625  14F3                     u5805:
  4626  14F3  1003               	clrc
  4627  14F4  0DCE               	rlf	??_fround+2,f
  4628  14F5  3EFF               	addlw	-1
  4629  14F6  1D03               	skipz
  4630  14F7  2CF3               	goto	u5805
  4631  14F8  1003               	clrc
  4632  14F9  0D4E               	rlf	??_fround+2,w
  4633  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4634  14FB  0084               	movwf	4
  4635  14FC  160A  118A  2000  160A  118A  	fcall	stringdir
  4636  1501  00CF               	movwf	??_fround+3
  4637  1502  160A  118A  2000  160A  118A  	fcall	stringdir
  4638  1507  00D0               	movwf	??_fround+4
  4639  1508  160A  118A  2000  160A  118A  	fcall	stringdir
  4640  150D  00D1               	movwf	??_fround+5
  4641  150E  160A  118A  2000  160A  118A  	fcall	stringdir
  4642  1513  00D2               	movwf	??_fround+6
  4643  1514  0852               	movf	??_fround+6,w
  4644  1515  00B1               	movwf	___flmul@b+3
  4645  1516  0851               	movf	??_fround+5,w
  4646  1517  00B0               	movwf	___flmul@b+2
  4647  1518  0850               	movf	??_fround+4,w
  4648  1519  00AF               	movwf	___flmul@b+1
  4649  151A  084F               	movf	??_fround+3,w
  4650  151B  00AE               	movwf	___flmul@b
  4651  151C  085A               	movf	_fround$1111+3,w
  4652  151D  00B5               	movwf	___flmul@a+3
  4653  151E  0859               	movf	_fround$1111+2,w
  4654  151F  00B4               	movwf	___flmul@a+2
  4655  1520  0858               	movf	_fround$1111+1,w
  4656  1521  00B3               	movwf	___flmul@a+1
  4657  1522  0857               	movf	_fround$1111,w
  4658  1523  00B2               	movwf	___flmul@a
  4659  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  4660  1529  1283               	bcf	3,5	;RP0=0, select bank0
  4661  152A  1303               	bcf	3,6	;RP1=0, select bank0
  4662  152B  0831               	movf	?___flmul+3,w
  4663  152C  00CB               	movwf	?_fround+3
  4664  152D  0830               	movf	?___flmul+2,w
  4665  152E  00CA               	movwf	?_fround+2
  4666  152F  082F               	movf	?___flmul+1,w
  4667  1530  00C9               	movwf	?_fround+1
  4668  1531  082E               	movf	?___flmul,w
  4669  1532  00C8               	movwf	?_fround
  4670  1533  2D77               	goto	l236
  4671  1534                     l3399:
  4672                           
  4673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4674  1534  303F               	movlw	63
  4675  1535  00B1               	movwf	___flmul@b+3
  4676  1536  3000               	movlw	0
  4677  1537  00B0               	movwf	___flmul@b+2
  4678  1538  3000               	movlw	0
  4679  1539  00AF               	movwf	___flmul@b+1
  4680  153A  3000               	movlw	0
  4681  153B  00AE               	movwf	___flmul@b
  4682  153C  085B               	movf	fround@prec,w
  4683  153D  00CC               	movwf	??_fround
  4684  153E  3001               	movlw	1
  4685  153F                     u5815:
  4686  153F  1003               	clrc
  4687  1540  0DCC               	rlf	??_fround,f
  4688  1541  3EFF               	addlw	-1
  4689  1542  1D03               	skipz
  4690  1543  2D3F               	goto	u5815
  4691  1544  1003               	clrc
  4692  1545  0D4C               	rlf	??_fround,w
  4693  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4694  1547  0084               	movwf	4
  4695  1548  160A  118A  2000  160A  118A  	fcall	stringdir
  4696  154D  00CD               	movwf	??_fround+1
  4697  154E  160A  118A  2000  160A  118A  	fcall	stringdir
  4698  1553  00CE               	movwf	??_fround+2
  4699  1554  160A  118A  2000  160A  118A  	fcall	stringdir
  4700  1559  00CF               	movwf	??_fround+3
  4701  155A  160A  118A  2000  160A  118A  	fcall	stringdir
  4702  155F  00D0               	movwf	??_fround+4
  4703  1560  0850               	movf	??_fround+4,w
  4704  1561  00B5               	movwf	___flmul@a+3
  4705  1562  084F               	movf	??_fround+3,w
  4706  1563  00B4               	movwf	___flmul@a+2
  4707  1564  084E               	movf	??_fround+2,w
  4708  1565  00B3               	movwf	___flmul@a+1
  4709  1566  084D               	movf	??_fround+1,w
  4710  1567  00B2               	movwf	___flmul@a
  4711  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  4712  156D  1283               	bcf	3,5	;RP0=0, select bank0
  4713  156E  1303               	bcf	3,6	;RP1=0, select bank0
  4714  156F  0831               	movf	?___flmul+3,w
  4715  1570  00CB               	movwf	?_fround+3
  4716  1571  0830               	movf	?___flmul+2,w
  4717  1572  00CA               	movwf	?_fround+2
  4718  1573  082F               	movf	?___flmul+1,w
  4719  1574  00C9               	movwf	?_fround+1
  4720  1575  082E               	movf	?___flmul,w
  4721  1576  00C8               	movwf	?_fround
  4722  1577                     l236:
  4723  1577  0008               	return
  4724  1578                     __end_of_fround:
  4725                           
  4726                           	psect	text6
  4727  1E2D                     __ptext6:	
  4728 ;; *************** function ___lwmod *****************
  4729 ;; Defined at:
  4730 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  divisor         2    0[BANK0 ] unsigned int 
  4733 ;;  dividend        2    2[BANK0 ] unsigned int 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  counter         1    6[COMMON] unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  2    0[BANK0 ] unsigned int 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4745 ;;      Params:         0       4       0       0       0
  4746 ;;      Locals:         1       0       0       0       0
  4747 ;;      Temps:          1       0       0       0       0
  4748 ;;      Totals:         2       4       0       0       0
  4749 ;;Total ram usage:        6 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:    1
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_fround
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           
  4760                           ;psect for function ___lwmod
  4761  1E2D                     ___lwmod:
  4762  1E2D                     l3223:	
  4763                           ;incstack = 0
  4764                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4765                           
  4766  1E2D  1283               	bcf	3,5	;RP0=0, select bank0
  4767  1E2E  1303               	bcf	3,6	;RP1=0, select bank0
  4768  1E2F  0820               	movf	___lwmod@divisor,w
  4769  1E30  0421               	iorwf	___lwmod@divisor+1,w
  4770  1E31  1903               	btfsc	3,2
  4771  1E32  2E34               	goto	u5311
  4772  1E33  2E35               	goto	u5310
  4773  1E34                     u5311:
  4774  1E34  2E64               	goto	l3241
  4775  1E35                     u5310:
  4776  1E35                     l3225:
  4777  1E35  01F6               	clrf	___lwmod@counter
  4778  1E36  0AF6               	incf	___lwmod@counter,f
  4779  1E37  2E43               	goto	l3231
  4780  1E38                     l3227:
  4781  1E38  3001               	movlw	1
  4782  1E39                     u5325:
  4783  1E39  1003               	clrc
  4784  1E3A  0DA0               	rlf	___lwmod@divisor,f
  4785  1E3B  0DA1               	rlf	___lwmod@divisor+1,f
  4786  1E3C  3EFF               	addlw	-1
  4787  1E3D  1D03               	skipz
  4788  1E3E  2E39               	goto	u5325
  4789  1E3F                     l3229:
  4790  1E3F  3001               	movlw	1
  4791  1E40  00F5               	movwf	??___lwmod
  4792  1E41  0875               	movf	??___lwmod,w
  4793  1E42  07F6               	addwf	___lwmod@counter,f
  4794  1E43                     l3231:
  4795  1E43  1FA1               	btfss	___lwmod@divisor+1,7
  4796  1E44  2E46               	goto	u5331
  4797  1E45  2E47               	goto	u5330
  4798  1E46                     u5331:
  4799  1E46  2E38               	goto	l3227
  4800  1E47                     u5330:
  4801  1E47                     l3233:
  4802  1E47  0821               	movf	___lwmod@divisor+1,w
  4803  1E48  0223               	subwf	___lwmod@dividend+1,w
  4804  1E49  1D03               	skipz
  4805  1E4A  2E4D               	goto	u5345
  4806  1E4B  0820               	movf	___lwmod@divisor,w
  4807  1E4C  0222               	subwf	___lwmod@dividend,w
  4808  1E4D                     u5345:
  4809  1E4D  1C03               	skipc
  4810  1E4E  2E50               	goto	u5341
  4811  1E4F  2E51               	goto	u5340
  4812  1E50                     u5341:
  4813  1E50  2E57               	goto	l3237
  4814  1E51                     u5340:
  4815  1E51                     l3235:
  4816  1E51  0820               	movf	___lwmod@divisor,w
  4817  1E52  02A2               	subwf	___lwmod@dividend,f
  4818  1E53  0821               	movf	___lwmod@divisor+1,w
  4819  1E54  1C03               	skipc
  4820  1E55  03A3               	decf	___lwmod@dividend+1,f
  4821  1E56  02A3               	subwf	___lwmod@dividend+1,f
  4822  1E57                     l3237:
  4823  1E57  3001               	movlw	1
  4824  1E58                     u5355:
  4825  1E58  1003               	clrc
  4826  1E59  0CA1               	rrf	___lwmod@divisor+1,f
  4827  1E5A  0CA0               	rrf	___lwmod@divisor,f
  4828  1E5B  3EFF               	addlw	-1
  4829  1E5C  1D03               	skipz
  4830  1E5D  2E58               	goto	u5355
  4831  1E5E                     l3239:
  4832  1E5E  3001               	movlw	1
  4833  1E5F  02F6               	subwf	___lwmod@counter,f
  4834  1E60  1D03               	btfss	3,2
  4835  1E61  2E63               	goto	u5361
  4836  1E62  2E64               	goto	u5360
  4837  1E63                     u5361:
  4838  1E63  2E47               	goto	l3233
  4839  1E64                     u5360:
  4840  1E64                     l3241:
  4841  1E64  0823               	movf	___lwmod@dividend+1,w
  4842  1E65  00A1               	movwf	?___lwmod+1
  4843  1E66  0822               	movf	___lwmod@dividend,w
  4844  1E67  00A0               	movwf	?___lwmod
  4845  1E68                     l619:
  4846  1E68  0008               	return
  4847  1E69                     __end_of___lwmod:
  4848                           
  4849                           	psect	text7
  4850  1E69                     __ptext7:	
  4851 ;; *************** function ___lwdiv *****************
  4852 ;; Defined at:
  4853 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  divisor         2    4[BANK0 ] unsigned int 
  4856 ;;  dividend        2    6[BANK0 ] unsigned int 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  quotient        2    9[BANK0 ] unsigned int 
  4859 ;;  counter         1   11[BANK0 ] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  2    4[BANK0 ] unsigned int 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4869 ;;      Params:         0       4       0       0       0
  4870 ;;      Locals:         0       3       0       0       0
  4871 ;;      Temps:          0       1       0       0       0
  4872 ;;      Totals:         0       8       0       0       0
  4873 ;;Total ram usage:        8 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_fround
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           
  4884                           ;psect for function ___lwdiv
  4885  1E69                     ___lwdiv:
  4886  1E69                     l2089:	
  4887                           ;incstack = 0
  4888                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4889                           
  4890  1E69  1283               	bcf	3,5	;RP0=0, select bank0
  4891  1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  4892  1E6B  01A9               	clrf	___lwdiv@quotient
  4893  1E6C  01AA               	clrf	___lwdiv@quotient+1
  4894  1E6D                     l2091:
  4895  1E6D  0824               	movf	___lwdiv@divisor,w
  4896  1E6E  0425               	iorwf	___lwdiv@divisor+1,w
  4897  1E6F  1903               	btfsc	3,2
  4898  1E70  2E72               	goto	u2771
  4899  1E71  2E73               	goto	u2770
  4900  1E72                     u2771:
  4901  1E72  2EAA               	goto	l2111
  4902  1E73                     u2770:
  4903  1E73                     l2093:
  4904  1E73  01AB               	clrf	___lwdiv@counter
  4905  1E74  0AAB               	incf	___lwdiv@counter,f
  4906  1E75  2E81               	goto	l2099
  4907  1E76                     l2095:
  4908  1E76  3001               	movlw	1
  4909  1E77                     u2785:
  4910  1E77  1003               	clrc
  4911  1E78  0DA4               	rlf	___lwdiv@divisor,f
  4912  1E79  0DA5               	rlf	___lwdiv@divisor+1,f
  4913  1E7A  3EFF               	addlw	-1
  4914  1E7B  1D03               	skipz
  4915  1E7C  2E77               	goto	u2785
  4916  1E7D                     l2097:
  4917  1E7D  3001               	movlw	1
  4918  1E7E  00A8               	movwf	??___lwdiv
  4919  1E7F  0828               	movf	??___lwdiv,w
  4920  1E80  07AB               	addwf	___lwdiv@counter,f
  4921  1E81                     l2099:
  4922  1E81  1FA5               	btfss	___lwdiv@divisor+1,7
  4923  1E82  2E84               	goto	u2791
  4924  1E83  2E85               	goto	u2790
  4925  1E84                     u2791:
  4926  1E84  2E76               	goto	l2095
  4927  1E85                     u2790:
  4928  1E85                     l2101:
  4929  1E85  3001               	movlw	1
  4930  1E86                     u2805:
  4931  1E86  1003               	clrc
  4932  1E87  0DA9               	rlf	___lwdiv@quotient,f
  4933  1E88  0DAA               	rlf	___lwdiv@quotient+1,f
  4934  1E89  3EFF               	addlw	-1
  4935  1E8A  1D03               	skipz
  4936  1E8B  2E86               	goto	u2805
  4937  1E8C  0825               	movf	___lwdiv@divisor+1,w
  4938  1E8D  0227               	subwf	___lwdiv@dividend+1,w
  4939  1E8E  1D03               	skipz
  4940  1E8F  2E92               	goto	u2815
  4941  1E90  0824               	movf	___lwdiv@divisor,w
  4942  1E91  0226               	subwf	___lwdiv@dividend,w
  4943  1E92                     u2815:
  4944  1E92  1C03               	skipc
  4945  1E93  2E95               	goto	u2811
  4946  1E94  2E96               	goto	u2810
  4947  1E95                     u2811:
  4948  1E95  2E9D               	goto	l2107
  4949  1E96                     u2810:
  4950  1E96                     l2103:
  4951  1E96  0824               	movf	___lwdiv@divisor,w
  4952  1E97  02A6               	subwf	___lwdiv@dividend,f
  4953  1E98  0825               	movf	___lwdiv@divisor+1,w
  4954  1E99  1C03               	skipc
  4955  1E9A  03A7               	decf	___lwdiv@dividend+1,f
  4956  1E9B  02A7               	subwf	___lwdiv@dividend+1,f
  4957  1E9C                     l2105:
  4958  1E9C  1429               	bsf	___lwdiv@quotient,0
  4959  1E9D                     l2107:
  4960  1E9D  3001               	movlw	1
  4961  1E9E                     u2825:
  4962  1E9E  1003               	clrc
  4963  1E9F  0CA5               	rrf	___lwdiv@divisor+1,f
  4964  1EA0  0CA4               	rrf	___lwdiv@divisor,f
  4965  1EA1  3EFF               	addlw	-1
  4966  1EA2  1D03               	skipz
  4967  1EA3  2E9E               	goto	u2825
  4968  1EA4                     l2109:
  4969  1EA4  3001               	movlw	1
  4970  1EA5  02AB               	subwf	___lwdiv@counter,f
  4971  1EA6  1D03               	btfss	3,2
  4972  1EA7  2EA9               	goto	u2831
  4973  1EA8  2EAA               	goto	u2830
  4974  1EA9                     u2831:
  4975  1EA9  2E85               	goto	l2101
  4976  1EAA                     u2830:
  4977  1EAA                     l2111:
  4978  1EAA  082A               	movf	___lwdiv@quotient+1,w
  4979  1EAB  00A5               	movwf	?___lwdiv+1
  4980  1EAC  0829               	movf	___lwdiv@quotient,w
  4981  1EAD  00A4               	movwf	?___lwdiv
  4982  1EAE                     l609:
  4983  1EAE  0008               	return
  4984  1EAF                     __end_of___lwdiv:
  4985                           
  4986                           	psect	text8
  4987  087F                     __ptext8:	
  4988 ;; *************** function __tdiv_to_l_ *****************
  4989 ;; Defined at:
  4990 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  f1              4    0[BANK0 ] float 
  4993 ;;  f2              4    4[BANK0 ] float 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  quot            4   12[BANK0 ] unsigned long 
  4996 ;;  exp1            1   17[BANK0 ] unsigned char 
  4997 ;;  cntr            1   16[BANK0 ] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  4    0[BANK0 ] unsigned long 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5007 ;;      Params:         0       8       0       0       0
  5008 ;;      Locals:         0       6       0       0       0
  5009 ;;      Temps:          0       4       0       0       0
  5010 ;;      Totals:         0      18       0       0       0
  5011 ;;Total ram usage:       18 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    1
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_sprintf
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           
  5022                           ;psect for function __tdiv_to_l_
  5023  087F                     __tdiv_to_l_:
  5024  087F                     l3443:	
  5025                           ;incstack = 0
  5026                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5027                           
  5028  087F  1283               	bcf	3,5	;RP0=0, select bank0
  5029  0880  1303               	bcf	3,6	;RP1=0, select bank0
  5030  0881  0820               	movf	__tdiv_to_l_@f1,w
  5031  0882  00A8               	movwf	??__tdiv_to_l_
  5032  0883  0821               	movf	__tdiv_to_l_@f1+1,w
  5033  0884  00A9               	movwf	??__tdiv_to_l_+1
  5034  0885  0822               	movf	__tdiv_to_l_@f1+2,w
  5035  0886  00AA               	movwf	??__tdiv_to_l_+2
  5036  0887  1003               	clrc
  5037  0888  0D29               	rlf	??__tdiv_to_l_+1,w
  5038  0889  0D2A               	rlf	??__tdiv_to_l_+2,w
  5039  088A  00AB               	movwf	??__tdiv_to_l_+3
  5040  088B  082B               	movf	??__tdiv_to_l_+3,w
  5041  088C  00B1               	movwf	__tdiv_to_l_@exp1
  5042  088D  0831               	movf	__tdiv_to_l_@exp1,w
  5043  088E  1D03               	btfss	3,2
  5044  088F  2891               	goto	u5991
  5045  0890  2892               	goto	u5990
  5046  0891                     u5991:
  5047  0891  289B               	goto	l3449
  5048  0892                     u5990:
  5049  0892                     l3445:
  5050  0892  3000               	movlw	0
  5051  0893  00A3               	movwf	?__tdiv_to_l_+3
  5052  0894  3000               	movlw	0
  5053  0895  00A2               	movwf	?__tdiv_to_l_+2
  5054  0896  3000               	movlw	0
  5055  0897  00A1               	movwf	?__tdiv_to_l_+1
  5056  0898  3000               	movlw	0
  5057  0899  00A0               	movwf	?__tdiv_to_l_
  5058  089A  293B               	goto	l520
  5059  089B                     l3449:
  5060  089B  0824               	movf	__tdiv_to_l_@f2,w
  5061  089C  00A8               	movwf	??__tdiv_to_l_
  5062  089D  0825               	movf	__tdiv_to_l_@f2+1,w
  5063  089E  00A9               	movwf	??__tdiv_to_l_+1
  5064  089F  0826               	movf	__tdiv_to_l_@f2+2,w
  5065  08A0  00AA               	movwf	??__tdiv_to_l_+2
  5066  08A1  1003               	clrc
  5067  08A2  0D29               	rlf	??__tdiv_to_l_+1,w
  5068  08A3  0D2A               	rlf	??__tdiv_to_l_+2,w
  5069  08A4  00AB               	movwf	??__tdiv_to_l_+3
  5070  08A5  082B               	movf	??__tdiv_to_l_+3,w
  5071  08A6  00B0               	movwf	__tdiv_to_l_@cntr
  5072  08A7  0830               	movf	__tdiv_to_l_@cntr,w
  5073  08A8  1D03               	btfss	3,2
  5074  08A9  28AB               	goto	u6001
  5075  08AA  28AC               	goto	u6000
  5076  08AB                     u6001:
  5077  08AB  28AD               	goto	l521
  5078  08AC                     u6000:
  5079  08AC  2892               	goto	l3445
  5080  08AD                     l521:
  5081  08AD  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5082  08AE                     l3455:
  5083  08AE  30FF               	movlw	255
  5084  08AF  05A0               	andwf	__tdiv_to_l_@f1,f
  5085  08B0  30FF               	movlw	255
  5086  08B1  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5087  08B2  3000               	movlw	0
  5088  08B3  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5089  08B4                     l3457:
  5090  08B4  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5091  08B5  30FF               	movlw	255
  5092  08B6  05A4               	andwf	__tdiv_to_l_@f2,f
  5093  08B7  30FF               	movlw	255
  5094  08B8  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5095  08B9  3000               	movlw	0
  5096  08BA  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5097  08BB  3000               	movlw	0
  5098  08BC  00AF               	movwf	__tdiv_to_l_@quot+3
  5099  08BD  3000               	movlw	0
  5100  08BE  00AE               	movwf	__tdiv_to_l_@quot+2
  5101  08BF  3000               	movlw	0
  5102  08C0  00AD               	movwf	__tdiv_to_l_@quot+1
  5103  08C1  3000               	movlw	0
  5104  08C2  00AC               	movwf	__tdiv_to_l_@quot
  5105  08C3                     l3459:
  5106  08C3  307F               	movlw	127
  5107  08C4  02B1               	subwf	__tdiv_to_l_@exp1,f
  5108  08C5                     l3461:
  5109  08C5  3098               	movlw	152
  5110  08C6  0730               	addwf	__tdiv_to_l_@cntr,w
  5111  08C7  00A8               	movwf	??__tdiv_to_l_
  5112  08C8  0828               	movf	??__tdiv_to_l_,w
  5113  08C9  02B1               	subwf	__tdiv_to_l_@exp1,f
  5114  08CA  3018               	movlw	24
  5115  08CB  00A8               	movwf	??__tdiv_to_l_
  5116  08CC  0828               	movf	??__tdiv_to_l_,w
  5117  08CD  00B0               	movwf	__tdiv_to_l_@cntr
  5118  08CE                     l3463:
  5119  08CE  3001               	movlw	1
  5120  08CF  00A8               	movwf	??__tdiv_to_l_
  5121  08D0                     u6015:
  5122  08D0  1003               	clrc
  5123  08D1  0DAC               	rlf	__tdiv_to_l_@quot,f
  5124  08D2  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  5125  08D3  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  5126  08D4  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  5127  08D5  0BA8               	decfsz	??__tdiv_to_l_,f
  5128  08D6  28D0               	goto	u6015
  5129  08D7                     l3465:
  5130  08D7  0826               	movf	__tdiv_to_l_@f2+2,w
  5131  08D8  0222               	subwf	__tdiv_to_l_@f1+2,w
  5132  08D9  1D03               	skipz
  5133  08DA  28E1               	goto	u6025
  5134  08DB  0825               	movf	__tdiv_to_l_@f2+1,w
  5135  08DC  0221               	subwf	__tdiv_to_l_@f1+1,w
  5136  08DD  1D03               	skipz
  5137  08DE  28E1               	goto	u6025
  5138  08DF  0824               	movf	__tdiv_to_l_@f2,w
  5139  08E0  0220               	subwf	__tdiv_to_l_@f1,w
  5140  08E1                     u6025:
  5141  08E1  1C03               	skipc
  5142  08E2  28E4               	goto	u6021
  5143  08E3  28E5               	goto	u6020
  5144  08E4                     u6021:
  5145  08E4  28F0               	goto	l3471
  5146  08E5                     u6020:
  5147  08E5                     l3467:
  5148  08E5  0824               	movf	__tdiv_to_l_@f2,w
  5149  08E6  02A0               	subwf	__tdiv_to_l_@f1,f
  5150  08E7  0825               	movf	__tdiv_to_l_@f2+1,w
  5151  08E8  1C03               	skipc
  5152  08E9  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  5153  08EA  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5154  08EB  0826               	movf	__tdiv_to_l_@f2+2,w
  5155  08EC  1C03               	skipc
  5156  08ED  0A26               	incf	__tdiv_to_l_@f2+2,w
  5157  08EE  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5158  08EF                     l3469:
  5159  08EF  142C               	bsf	__tdiv_to_l_@quot,0
  5160  08F0                     l3471:
  5161  08F0  3001               	movlw	1
  5162  08F1                     u6035:
  5163  08F1  1003               	clrc
  5164  08F2  0DA0               	rlf	__tdiv_to_l_@f1,f
  5165  08F3  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5166  08F4  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5167  08F5  3EFF               	addlw	-1
  5168  08F6  1D03               	skipz
  5169  08F7  28F1               	goto	u6035
  5170  08F8                     l3473:
  5171  08F8  3001               	movlw	1
  5172  08F9  02B0               	subwf	__tdiv_to_l_@cntr,f
  5173  08FA  1D03               	btfss	3,2
  5174  08FB  28FD               	goto	u6041
  5175  08FC  28FE               	goto	u6040
  5176  08FD                     u6041:
  5177  08FD  28CE               	goto	l3463
  5178  08FE                     u6040:
  5179  08FE                     l524:
  5180  08FE  1FB1               	btfss	__tdiv_to_l_@exp1,7
  5181  08FF  2901               	goto	u6051
  5182  0900  2902               	goto	u6050
  5183  0901                     u6051:
  5184  0901  291C               	goto	l3483
  5185  0902                     u6050:
  5186  0902                     l3475:
  5187  0902  0831               	movf	__tdiv_to_l_@exp1,w
  5188  0903  3A80               	xorlw	128
  5189  0904  3E97               	addlw	151
  5190  0905  1803               	skipnc
  5191  0906  2908               	goto	u6061
  5192  0907  2909               	goto	u6060
  5193  0908                     u6061:
  5194  0908  290A               	goto	l3481
  5195  0909                     u6060:
  5196  0909  2892               	goto	l3445
  5197  090A                     l3481:
  5198  090A  3001               	movlw	1
  5199  090B                     u6075:
  5200  090B  1003               	clrc
  5201  090C  0CAF               	rrf	__tdiv_to_l_@quot+3,f
  5202  090D  0CAE               	rrf	__tdiv_to_l_@quot+2,f
  5203  090E  0CAD               	rrf	__tdiv_to_l_@quot+1,f
  5204  090F  0CAC               	rrf	__tdiv_to_l_@quot,f
  5205  0910  3EFF               	addlw	-1
  5206  0911  1D03               	skipz
  5207  0912  290B               	goto	u6075
  5208  0913  3001               	movlw	1
  5209  0914  00A8               	movwf	??__tdiv_to_l_
  5210  0915  0828               	movf	??__tdiv_to_l_,w
  5211  0916  07B1               	addwf	__tdiv_to_l_@exp1,f
  5212  0917  1D03               	btfss	3,2
  5213  0918  291A               	goto	u6081
  5214  0919  291B               	goto	u6080
  5215  091A                     u6081:
  5216  091A  290A               	goto	l3481
  5217  091B                     u6080:
  5218  091B  2933               	goto	l3491
  5219  091C                     l3483:
  5220  091C  3018               	movlw	24
  5221  091D  0231               	subwf	__tdiv_to_l_@exp1,w
  5222  091E  1C03               	skipc
  5223  091F  2921               	goto	u6091
  5224  0920  2922               	goto	u6090
  5225  0921                     u6091:
  5226  0921  292E               	goto	l531
  5227  0922                     u6090:
  5228  0922  2892               	goto	l3445
  5229  0923                     l3489:
  5230  0923  3001               	movlw	1
  5231  0924  00A8               	movwf	??__tdiv_to_l_
  5232  0925                     u6105:
  5233  0925  1003               	clrc
  5234  0926  0DAC               	rlf	__tdiv_to_l_@quot,f
  5235  0927  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  5236  0928  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  5237  0929  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  5238  092A  0BA8               	decfsz	??__tdiv_to_l_,f
  5239  092B  2925               	goto	u6105
  5240  092C  3001               	movlw	1
  5241  092D  02B1               	subwf	__tdiv_to_l_@exp1,f
  5242  092E                     l531:
  5243  092E  0831               	movf	__tdiv_to_l_@exp1,w
  5244  092F  1D03               	btfss	3,2
  5245  0930  2932               	goto	u6111
  5246  0931  2933               	goto	u6110
  5247  0932                     u6111:
  5248  0932  2923               	goto	l3489
  5249  0933                     u6110:
  5250  0933                     l3491:
  5251  0933  082F               	movf	__tdiv_to_l_@quot+3,w
  5252  0934  00A3               	movwf	?__tdiv_to_l_+3
  5253  0935  082E               	movf	__tdiv_to_l_@quot+2,w
  5254  0936  00A2               	movwf	?__tdiv_to_l_+2
  5255  0937  082D               	movf	__tdiv_to_l_@quot+1,w
  5256  0938  00A1               	movwf	?__tdiv_to_l_+1
  5257  0939  082C               	movf	__tdiv_to_l_@quot,w
  5258  093A  00A0               	movwf	?__tdiv_to_l_
  5259  093B                     l520:
  5260  093B  0008               	return
  5261  093C                     __end_of__tdiv_to_l_:
  5262                           
  5263                           	psect	text9
  5264  0732                     __ptext9:	
  5265 ;; *************** function __div_to_l_ *****************
  5266 ;; Defined at:
  5267 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  f1              4    0[BANK0 ] unsigned long 
  5270 ;;  f2              4    4[BANK0 ] unsigned long 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  quot            4    8[BANK0 ] unsigned long 
  5273 ;;  exp1            1   13[BANK0 ] unsigned char 
  5274 ;;  cntr            1   12[BANK0 ] unsigned char 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  4    0[BANK0 ] unsigned long 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5284 ;;      Params:         0       8       0       0       0
  5285 ;;      Locals:         0       6       0       0       0
  5286 ;;      Temps:          1       0       0       0       0
  5287 ;;      Totals:         1      14       0       0       0
  5288 ;;Total ram usage:       15 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    1
  5291 ;; This function calls:
  5292 ;;		Nothing
  5293 ;; This function is called by:
  5294 ;;		_sprintf
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           
  5299                           ;psect for function __div_to_l_
  5300  0732                     __div_to_l_:
  5301  0732                     l2585:	
  5302                           ;incstack = 0
  5303                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5304                           
  5305  0732  1003               	clrc
  5306  0733  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0734  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0735  0D22               	rlf	__div_to_l_@f1+2,w
  5309  0736  0D23               	rlf	__div_to_l_@f1+3,w
  5310  0737  00F5               	movwf	??__div_to_l_
  5311  0738  0875               	movf	??__div_to_l_,w
  5312  0739  00AD               	movwf	__div_to_l_@exp1
  5313  073A  082D               	movf	__div_to_l_@exp1,w
  5314  073B  1D03               	btfss	3,2
  5315  073C  2F3E               	goto	u4121
  5316  073D  2F3F               	goto	u4120
  5317  073E                     u4121:
  5318  073E  2F48               	goto	l2591
  5319  073F                     u4120:
  5320  073F                     l2587:
  5321  073F  3000               	movlw	0
  5322  0740  00A3               	movwf	?__div_to_l_+3
  5323  0741  3000               	movlw	0
  5324  0742  00A2               	movwf	?__div_to_l_+2
  5325  0743  3000               	movlw	0
  5326  0744  00A1               	movwf	?__div_to_l_+1
  5327  0745  3000               	movlw	0
  5328  0746  00A0               	movwf	?__div_to_l_
  5329  0747  2FEF               	goto	l473
  5330  0748                     l2591:
  5331  0748  1003               	clrc
  5332  0749  0D26               	rlf	__div_to_l_@f2+2,w
  5333  074A  0D27               	rlf	__div_to_l_@f2+3,w
  5334  074B  00F5               	movwf	??__div_to_l_
  5335  074C  0875               	movf	??__div_to_l_,w
  5336  074D  00AC               	movwf	__div_to_l_@cntr
  5337  074E  082C               	movf	__div_to_l_@cntr,w
  5338  074F  1D03               	btfss	3,2
  5339  0750  2F52               	goto	u4131
  5340  0751  2F53               	goto	u4130
  5341  0752                     u4131:
  5342  0752  2F54               	goto	l474
  5343  0753                     u4130:
  5344  0753  2F3F               	goto	l2587
  5345  0754                     l474:
  5346  0754  17A2               	bsf	__div_to_l_@f1+2,7
  5347  0755                     l2597:
  5348  0755  30FF               	movlw	255
  5349  0756  05A0               	andwf	__div_to_l_@f1,f
  5350  0757  30FF               	movlw	255
  5351  0758  05A1               	andwf	__div_to_l_@f1+1,f
  5352  0759  30FF               	movlw	255
  5353  075A  05A2               	andwf	__div_to_l_@f1+2,f
  5354  075B  3000               	movlw	0
  5355  075C  05A3               	andwf	__div_to_l_@f1+3,f
  5356  075D                     l2599:
  5357  075D  17A6               	bsf	__div_to_l_@f2+2,7
  5358  075E  30FF               	movlw	255
  5359  075F  05A4               	andwf	__div_to_l_@f2,f
  5360  0760  30FF               	movlw	255
  5361  0761  05A5               	andwf	__div_to_l_@f2+1,f
  5362  0762  30FF               	movlw	255
  5363  0763  05A6               	andwf	__div_to_l_@f2+2,f
  5364  0764  3000               	movlw	0
  5365  0765  05A7               	andwf	__div_to_l_@f2+3,f
  5366  0766  3000               	movlw	0
  5367  0767  00AB               	movwf	__div_to_l_@quot+3
  5368  0768  3000               	movlw	0
  5369  0769  00AA               	movwf	__div_to_l_@quot+2
  5370  076A  3000               	movlw	0
  5371  076B  00A9               	movwf	__div_to_l_@quot+1
  5372  076C  3000               	movlw	0
  5373  076D  00A8               	movwf	__div_to_l_@quot
  5374  076E                     l2601:
  5375  076E  307F               	movlw	127
  5376  076F  02AD               	subwf	__div_to_l_@exp1,f
  5377  0770                     l2603:
  5378  0770  30A0               	movlw	160
  5379  0771  072C               	addwf	__div_to_l_@cntr,w
  5380  0772  00F5               	movwf	??__div_to_l_
  5381  0773  0875               	movf	??__div_to_l_,w
  5382  0774  02AD               	subwf	__div_to_l_@exp1,f
  5383  0775  3020               	movlw	32
  5384  0776  00F5               	movwf	??__div_to_l_
  5385  0777  0875               	movf	??__div_to_l_,w
  5386  0778  00AC               	movwf	__div_to_l_@cntr
  5387  0779                     l2605:
  5388  0779  3001               	movlw	1
  5389  077A  00F5               	movwf	??__div_to_l_
  5390  077B                     u4145:
  5391  077B  1003               	clrc
  5392  077C  0DA8               	rlf	__div_to_l_@quot,f
  5393  077D  0DA9               	rlf	__div_to_l_@quot+1,f
  5394  077E  0DAA               	rlf	__div_to_l_@quot+2,f
  5395  077F  0DAB               	rlf	__div_to_l_@quot+3,f
  5396  0780  0BF5               	decfsz	??__div_to_l_,f
  5397  0781  2F7B               	goto	u4145
  5398  0782                     l2607:
  5399  0782  0827               	movf	__div_to_l_@f2+3,w
  5400  0783  0223               	subwf	__div_to_l_@f1+3,w
  5401  0784  1D03               	skipz
  5402  0785  2F90               	goto	u4155
  5403  0786  0826               	movf	__div_to_l_@f2+2,w
  5404  0787  0222               	subwf	__div_to_l_@f1+2,w
  5405  0788  1D03               	skipz
  5406  0789  2F90               	goto	u4155
  5407  078A  0825               	movf	__div_to_l_@f2+1,w
  5408  078B  0221               	subwf	__div_to_l_@f1+1,w
  5409  078C  1D03               	skipz
  5410  078D  2F90               	goto	u4155
  5411  078E  0824               	movf	__div_to_l_@f2,w
  5412  078F  0220               	subwf	__div_to_l_@f1,w
  5413  0790                     u4155:
  5414  0790  1C03               	skipc
  5415  0791  2F93               	goto	u4151
  5416  0792  2F94               	goto	u4150
  5417  0793                     u4151:
  5418  0793  2FA3               	goto	l2613
  5419  0794                     u4150:
  5420  0794                     l2609:
  5421  0794  0824               	movf	__div_to_l_@f2,w
  5422  0795  02A0               	subwf	__div_to_l_@f1,f
  5423  0796  0825               	movf	__div_to_l_@f2+1,w
  5424  0797  1C03               	skipc
  5425  0798  0F25               	incfsz	__div_to_l_@f2+1,w
  5426  0799  02A1               	subwf	__div_to_l_@f1+1,f
  5427  079A  0826               	movf	__div_to_l_@f2+2,w
  5428  079B  1C03               	skipc
  5429  079C  0F26               	incfsz	__div_to_l_@f2+2,w
  5430  079D  02A2               	subwf	__div_to_l_@f1+2,f
  5431  079E  0827               	movf	__div_to_l_@f2+3,w
  5432  079F  1C03               	skipc
  5433  07A0  0F27               	incfsz	__div_to_l_@f2+3,w
  5434  07A1  02A3               	subwf	__div_to_l_@f1+3,f
  5435  07A2                     l2611:
  5436  07A2  1428               	bsf	__div_to_l_@quot,0
  5437  07A3                     l2613:
  5438  07A3  3001               	movlw	1
  5439  07A4  00F5               	movwf	??__div_to_l_
  5440  07A5                     u4165:
  5441  07A5  1003               	clrc
  5442  07A6  0DA0               	rlf	__div_to_l_@f1,f
  5443  07A7  0DA1               	rlf	__div_to_l_@f1+1,f
  5444  07A8  0DA2               	rlf	__div_to_l_@f1+2,f
  5445  07A9  0DA3               	rlf	__div_to_l_@f1+3,f
  5446  07AA  0BF5               	decfsz	??__div_to_l_,f
  5447  07AB  2FA5               	goto	u4165
  5448  07AC                     l2615:
  5449  07AC  3001               	movlw	1
  5450  07AD  02AC               	subwf	__div_to_l_@cntr,f
  5451  07AE  1D03               	btfss	3,2
  5452  07AF  2FB1               	goto	u4171
  5453  07B0  2FB2               	goto	u4170
  5454  07B1                     u4171:
  5455  07B1  2F79               	goto	l2605
  5456  07B2                     u4170:
  5457  07B2                     l477:
  5458  07B2  1FAD               	btfss	__div_to_l_@exp1,7
  5459  07B3  2FB5               	goto	u4181
  5460  07B4  2FB6               	goto	u4180
  5461  07B5                     u4181:
  5462  07B5  2FD0               	goto	l2625
  5463  07B6                     u4180:
  5464  07B6                     l2617:
  5465  07B6  082D               	movf	__div_to_l_@exp1,w
  5466  07B7  3A80               	xorlw	128
  5467  07B8  3E9F               	addlw	159
  5468  07B9  1803               	skipnc
  5469  07BA  2FBC               	goto	u4191
  5470  07BB  2FBD               	goto	u4190
  5471  07BC                     u4191:
  5472  07BC  2FBE               	goto	l2623
  5473  07BD                     u4190:
  5474  07BD  2F3F               	goto	l2587
  5475  07BE                     l2623:
  5476  07BE  3001               	movlw	1
  5477  07BF                     u4205:
  5478  07BF  1003               	clrc
  5479  07C0  0CAB               	rrf	__div_to_l_@quot+3,f
  5480  07C1  0CAA               	rrf	__div_to_l_@quot+2,f
  5481  07C2  0CA9               	rrf	__div_to_l_@quot+1,f
  5482  07C3  0CA8               	rrf	__div_to_l_@quot,f
  5483  07C4  3EFF               	addlw	-1
  5484  07C5  1D03               	skipz
  5485  07C6  2FBF               	goto	u4205
  5486  07C7  3001               	movlw	1
  5487  07C8  00F5               	movwf	??__div_to_l_
  5488  07C9  0875               	movf	??__div_to_l_,w
  5489  07CA  07AD               	addwf	__div_to_l_@exp1,f
  5490  07CB  1D03               	btfss	3,2
  5491  07CC  2FCE               	goto	u4211
  5492  07CD  2FCF               	goto	u4210
  5493  07CE                     u4211:
  5494  07CE  2FBE               	goto	l2623
  5495  07CF                     u4210:
  5496  07CF  2FE7               	goto	l2633
  5497  07D0                     l2625:
  5498  07D0  3020               	movlw	32
  5499  07D1  022D               	subwf	__div_to_l_@exp1,w
  5500  07D2  1C03               	skipc
  5501  07D3  2FD5               	goto	u4221
  5502  07D4  2FD6               	goto	u4220
  5503  07D5                     u4221:
  5504  07D5  2FE2               	goto	l484
  5505  07D6                     u4220:
  5506  07D6  2F3F               	goto	l2587
  5507  07D7                     l2631:
  5508  07D7  3001               	movlw	1
  5509  07D8  00F5               	movwf	??__div_to_l_
  5510  07D9                     u4235:
  5511  07D9  1003               	clrc
  5512  07DA  0DA8               	rlf	__div_to_l_@quot,f
  5513  07DB  0DA9               	rlf	__div_to_l_@quot+1,f
  5514  07DC  0DAA               	rlf	__div_to_l_@quot+2,f
  5515  07DD  0DAB               	rlf	__div_to_l_@quot+3,f
  5516  07DE  0BF5               	decfsz	??__div_to_l_,f
  5517  07DF  2FD9               	goto	u4235
  5518  07E0  3001               	movlw	1
  5519  07E1  02AD               	subwf	__div_to_l_@exp1,f
  5520  07E2                     l484:
  5521  07E2  082D               	movf	__div_to_l_@exp1,w
  5522  07E3  1D03               	btfss	3,2
  5523  07E4  2FE6               	goto	u4241
  5524  07E5  2FE7               	goto	u4240
  5525  07E6                     u4241:
  5526  07E6  2FD7               	goto	l2631
  5527  07E7                     u4240:
  5528  07E7                     l2633:
  5529  07E7  082B               	movf	__div_to_l_@quot+3,w
  5530  07E8  00A3               	movwf	?__div_to_l_+3
  5531  07E9  082A               	movf	__div_to_l_@quot+2,w
  5532  07EA  00A2               	movwf	?__div_to_l_+2
  5533  07EB  0829               	movf	__div_to_l_@quot+1,w
  5534  07EC  00A1               	movwf	?__div_to_l_+1
  5535  07ED  0828               	movf	__div_to_l_@quot,w
  5536  07EE  00A0               	movwf	?__div_to_l_
  5537  07EF                     l473:
  5538  07EF  0008               	return
  5539  07F0                     __end_of__div_to_l_:
  5540                           
  5541                           	psect	text10
  5542  1D49                     __ptext10:	
  5543 ;; *************** function ___wmul *****************
  5544 ;; Defined at:
  5545 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5548 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  product         2    5[COMMON] unsigned int 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  2    0[BANK0 ] unsigned int 
  5553 ;; Registers used:
  5554 ;;		wreg, status,2, status,0
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5560 ;;      Params:         0       4       0       0       0
  5561 ;;      Locals:         2       0       0       0       0
  5562 ;;      Temps:          0       0       0       0       0
  5563 ;;      Totals:         2       4       0       0       0
  5564 ;;Total ram usage:        6 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    1
  5567 ;; This function calls:
  5568 ;;		Nothing
  5569 ;; This function is called by:
  5570 ;;		_sprintf
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           
  5575                           ;psect for function ___wmul
  5576  1D49                     ___wmul:
  5577  1D49                     l3495:	
  5578                           ;incstack = 0
  5579                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5580                           
  5581  1D49  01F5               	clrf	___wmul@product
  5582  1D4A  01F6               	clrf	___wmul@product+1
  5583  1D4B                     l3497:
  5584  1D4B  1283               	bcf	3,5	;RP0=0, select bank0
  5585  1D4C  1303               	bcf	3,6	;RP1=0, select bank0
  5586  1D4D  1C20               	btfss	___wmul@multiplier,0
  5587  1D4E  2D50               	goto	u6121
  5588  1D4F  2D51               	goto	u6120
  5589  1D50                     u6121:
  5590  1D50  2D57               	goto	l303
  5591  1D51                     u6120:
  5592  1D51                     l3499:
  5593  1D51  0822               	movf	___wmul@multiplicand,w
  5594  1D52  07F5               	addwf	___wmul@product,f
  5595  1D53  1803               	skipnc
  5596  1D54  0AF6               	incf	___wmul@product+1,f
  5597  1D55  0823               	movf	___wmul@multiplicand+1,w
  5598  1D56  07F6               	addwf	___wmul@product+1,f
  5599  1D57                     l303:
  5600  1D57  3001               	movlw	1
  5601  1D58                     u6135:
  5602  1D58  1003               	clrc
  5603  1D59  0DA2               	rlf	___wmul@multiplicand,f
  5604  1D5A  0DA3               	rlf	___wmul@multiplicand+1,f
  5605  1D5B  3EFF               	addlw	-1
  5606  1D5C  1D03               	skipz
  5607  1D5D  2D58               	goto	u6135
  5608  1D5E                     l3501:
  5609  1D5E  3001               	movlw	1
  5610  1D5F                     u6145:
  5611  1D5F  1003               	clrc
  5612  1D60  0CA1               	rrf	___wmul@multiplier+1,f
  5613  1D61  0CA0               	rrf	___wmul@multiplier,f
  5614  1D62  3EFF               	addlw	-1
  5615  1D63  1D03               	skipz
  5616  1D64  2D5F               	goto	u6145
  5617  1D65                     l3503:
  5618  1D65  0820               	movf	___wmul@multiplier,w
  5619  1D66  0421               	iorwf	___wmul@multiplier+1,w
  5620  1D67  1D03               	btfss	3,2
  5621  1D68  2D6A               	goto	u6151
  5622  1D69  2D6B               	goto	u6150
  5623  1D6A                     u6151:
  5624  1D6A  2D4B               	goto	l3497
  5625  1D6B                     u6150:
  5626  1D6B                     l3505:
  5627  1D6B  0876               	movf	___wmul@product+1,w
  5628  1D6C  00A1               	movwf	?___wmul+1
  5629  1D6D  0875               	movf	___wmul@product,w
  5630  1D6E  00A0               	movwf	?___wmul
  5631  1D6F                     l305:
  5632  1D6F  0008               	return
  5633  1D70                     __end_of___wmul:
  5634                           
  5635                           	psect	text11
  5636  1F4F                     __ptext11:	
  5637 ;; *************** function ___llmod *****************
  5638 ;; Defined at:
  5639 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  divisor         4    0[BANK0 ] unsigned long 
  5642 ;;  dividend        4    4[BANK0 ] unsigned long 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  counter         1    6[COMMON] unsigned char 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  4    0[BANK0 ] unsigned long 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5654 ;;      Params:         0       8       0       0       0
  5655 ;;      Locals:         1       0       0       0       0
  5656 ;;      Temps:          1       0       0       0       0
  5657 ;;      Totals:         2       8       0       0       0
  5658 ;;Total ram usage:       10 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:    1
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_sprintf
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           
  5669                           ;psect for function ___llmod
  5670  1F4F                     ___llmod:
  5671  1F4F                     l2751:	
  5672                           ;incstack = 0
  5673                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5674                           
  5675  1F4F  1283               	bcf	3,5	;RP0=0, select bank0
  5676  1F50  1303               	bcf	3,6	;RP1=0, select bank0
  5677  1F51  0823               	movf	___llmod@divisor+3,w
  5678  1F52  0422               	iorwf	___llmod@divisor+2,w
  5679  1F53  0421               	iorwf	___llmod@divisor+1,w
  5680  1F54  0420               	iorwf	___llmod@divisor,w
  5681  1F55  1903               	skipnz
  5682  1F56  2F58               	goto	u4571
  5683  1F57  2F59               	goto	u4570
  5684  1F58                     u4571:
  5685  1F58  2F9C               	goto	l2767
  5686  1F59                     u4570:
  5687  1F59                     l2753:
  5688  1F59  01F6               	clrf	___llmod@counter
  5689  1F5A  0AF6               	incf	___llmod@counter,f
  5690  1F5B  2F69               	goto	l2757
  5691  1F5C                     l2755:
  5692  1F5C  3001               	movlw	1
  5693  1F5D  00F5               	movwf	??___llmod
  5694  1F5E                     u4585:
  5695  1F5E  1003               	clrc
  5696  1F5F  0DA0               	rlf	___llmod@divisor,f
  5697  1F60  0DA1               	rlf	___llmod@divisor+1,f
  5698  1F61  0DA2               	rlf	___llmod@divisor+2,f
  5699  1F62  0DA3               	rlf	___llmod@divisor+3,f
  5700  1F63  0BF5               	decfsz	??___llmod,f
  5701  1F64  2F5E               	goto	u4585
  5702  1F65  3001               	movlw	1
  5703  1F66  00F5               	movwf	??___llmod
  5704  1F67  0875               	movf	??___llmod,w
  5705  1F68  07F6               	addwf	___llmod@counter,f
  5706  1F69                     l2757:
  5707  1F69  1FA3               	btfss	___llmod@divisor+3,7
  5708  1F6A  2F6C               	goto	u4591
  5709  1F6B  2F6D               	goto	u4590
  5710  1F6C                     u4591:
  5711  1F6C  2F5C               	goto	l2755
  5712  1F6D                     u4590:
  5713  1F6D                     l2759:
  5714  1F6D  0823               	movf	___llmod@divisor+3,w
  5715  1F6E  0227               	subwf	___llmod@dividend+3,w
  5716  1F6F  1D03               	skipz
  5717  1F70  2F7B               	goto	u4605
  5718  1F71  0822               	movf	___llmod@divisor+2,w
  5719  1F72  0226               	subwf	___llmod@dividend+2,w
  5720  1F73  1D03               	skipz
  5721  1F74  2F7B               	goto	u4605
  5722  1F75  0821               	movf	___llmod@divisor+1,w
  5723  1F76  0225               	subwf	___llmod@dividend+1,w
  5724  1F77  1D03               	skipz
  5725  1F78  2F7B               	goto	u4605
  5726  1F79  0820               	movf	___llmod@divisor,w
  5727  1F7A  0224               	subwf	___llmod@dividend,w
  5728  1F7B                     u4605:
  5729  1F7B  1C03               	skipc
  5730  1F7C  2F7E               	goto	u4601
  5731  1F7D  2F7F               	goto	u4600
  5732  1F7E                     u4601:
  5733  1F7E  2F8D               	goto	l2763
  5734  1F7F                     u4600:
  5735  1F7F                     l2761:
  5736  1F7F  0820               	movf	___llmod@divisor,w
  5737  1F80  02A4               	subwf	___llmod@dividend,f
  5738  1F81  0821               	movf	___llmod@divisor+1,w
  5739  1F82  1C03               	skipc
  5740  1F83  0F21               	incfsz	___llmod@divisor+1,w
  5741  1F84  02A5               	subwf	___llmod@dividend+1,f
  5742  1F85  0822               	movf	___llmod@divisor+2,w
  5743  1F86  1C03               	skipc
  5744  1F87  0F22               	incfsz	___llmod@divisor+2,w
  5745  1F88  02A6               	subwf	___llmod@dividend+2,f
  5746  1F89  0823               	movf	___llmod@divisor+3,w
  5747  1F8A  1C03               	skipc
  5748  1F8B  0F23               	incfsz	___llmod@divisor+3,w
  5749  1F8C  02A7               	subwf	___llmod@dividend+3,f
  5750  1F8D                     l2763:
  5751  1F8D  3001               	movlw	1
  5752  1F8E                     u4615:
  5753  1F8E  1003               	clrc
  5754  1F8F  0CA3               	rrf	___llmod@divisor+3,f
  5755  1F90  0CA2               	rrf	___llmod@divisor+2,f
  5756  1F91  0CA1               	rrf	___llmod@divisor+1,f
  5757  1F92  0CA0               	rrf	___llmod@divisor,f
  5758  1F93  3EFF               	addlw	-1
  5759  1F94  1D03               	skipz
  5760  1F95  2F8E               	goto	u4615
  5761  1F96                     l2765:
  5762  1F96  3001               	movlw	1
  5763  1F97  02F6               	subwf	___llmod@counter,f
  5764  1F98  1D03               	btfss	3,2
  5765  1F99  2F9B               	goto	u4621
  5766  1F9A  2F9C               	goto	u4620
  5767  1F9B                     u4621:
  5768  1F9B  2F6D               	goto	l2759
  5769  1F9C                     u4620:
  5770  1F9C                     l2767:
  5771  1F9C  0827               	movf	___llmod@dividend+3,w
  5772  1F9D  00A3               	movwf	?___llmod+3
  5773  1F9E  0826               	movf	___llmod@dividend+2,w
  5774  1F9F  00A2               	movwf	?___llmod+2
  5775  1FA0  0825               	movf	___llmod@dividend+1,w
  5776  1FA1  00A1               	movwf	?___llmod+1
  5777  1FA2  0824               	movf	___llmod@dividend,w
  5778  1FA3  00A0               	movwf	?___llmod
  5779  1FA4                     l559:
  5780  1FA4  0008               	return
  5781  1FA5                     __end_of___llmod:
  5782                           
  5783                           	psect	text12
  5784  10BE                     __ptext12:	
  5785 ;; *************** function ___lldiv *****************
  5786 ;; Defined at:
  5787 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  divisor         4    0[BANK0 ] unsigned long 
  5790 ;;  dividend        4    4[BANK0 ] unsigned long 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  quotient        4    8[BANK0 ] unsigned long 
  5793 ;;  counter         1   12[BANK0 ] unsigned char 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  4    0[BANK0 ] unsigned long 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5803 ;;      Params:         0       8       0       0       0
  5804 ;;      Locals:         0       5       0       0       0
  5805 ;;      Temps:          1       0       0       0       0
  5806 ;;      Totals:         1      13       0       0       0
  5807 ;;Total ram usage:       14 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    1
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_sprintf
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           
  5818                           ;psect for function ___lldiv
  5819  10BE                     ___lldiv:
  5820  10BE                     l2651:	
  5821                           ;incstack = 0
  5822                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5823                           
  5824  10BE  3000               	movlw	0
  5825  10BF  1283               	bcf	3,5	;RP0=0, select bank0
  5826  10C0  1303               	bcf	3,6	;RP1=0, select bank0
  5827  10C1  00AB               	movwf	___lldiv@quotient+3
  5828  10C2  3000               	movlw	0
  5829  10C3  00AA               	movwf	___lldiv@quotient+2
  5830  10C4  3000               	movlw	0
  5831  10C5  00A9               	movwf	___lldiv@quotient+1
  5832  10C6  3000               	movlw	0
  5833  10C7  00A8               	movwf	___lldiv@quotient
  5834  10C8  0823               	movf	___lldiv@divisor+3,w
  5835  10C9  0422               	iorwf	___lldiv@divisor+2,w
  5836  10CA  0421               	iorwf	___lldiv@divisor+1,w
  5837  10CB  0420               	iorwf	___lldiv@divisor,w
  5838  10CC  1903               	skipnz
  5839  10CD  28CF               	goto	u4291
  5840  10CE  28D0               	goto	u4290
  5841  10CF                     u4291:
  5842  10CF  291D               	goto	l2671
  5843  10D0                     u4290:
  5844  10D0                     l2653:
  5845  10D0  01AC               	clrf	___lldiv@counter
  5846  10D1  0AAC               	incf	___lldiv@counter,f
  5847  10D2  28E0               	goto	l2657
  5848  10D3                     l2655:
  5849  10D3  3001               	movlw	1
  5850  10D4  00F5               	movwf	??___lldiv
  5851  10D5                     u4305:
  5852  10D5  1003               	clrc
  5853  10D6  0DA0               	rlf	___lldiv@divisor,f
  5854  10D7  0DA1               	rlf	___lldiv@divisor+1,f
  5855  10D8  0DA2               	rlf	___lldiv@divisor+2,f
  5856  10D9  0DA3               	rlf	___lldiv@divisor+3,f
  5857  10DA  0BF5               	decfsz	??___lldiv,f
  5858  10DB  28D5               	goto	u4305
  5859  10DC  3001               	movlw	1
  5860  10DD  00F5               	movwf	??___lldiv
  5861  10DE  0875               	movf	??___lldiv,w
  5862  10DF  07AC               	addwf	___lldiv@counter,f
  5863  10E0                     l2657:
  5864  10E0  1FA3               	btfss	___lldiv@divisor+3,7
  5865  10E1  28E3               	goto	u4311
  5866  10E2  28E4               	goto	u4310
  5867  10E3                     u4311:
  5868  10E3  28D3               	goto	l2655
  5869  10E4                     u4310:
  5870  10E4                     l2659:
  5871  10E4  3001               	movlw	1
  5872  10E5  00F5               	movwf	??___lldiv
  5873  10E6                     u4325:
  5874  10E6  1003               	clrc
  5875  10E7  0DA8               	rlf	___lldiv@quotient,f
  5876  10E8  0DA9               	rlf	___lldiv@quotient+1,f
  5877  10E9  0DAA               	rlf	___lldiv@quotient+2,f
  5878  10EA  0DAB               	rlf	___lldiv@quotient+3,f
  5879  10EB  0BF5               	decfsz	??___lldiv,f
  5880  10EC  28E6               	goto	u4325
  5881  10ED                     l2661:
  5882  10ED  0823               	movf	___lldiv@divisor+3,w
  5883  10EE  0227               	subwf	___lldiv@dividend+3,w
  5884  10EF  1D03               	skipz
  5885  10F0  28FB               	goto	u4335
  5886  10F1  0822               	movf	___lldiv@divisor+2,w
  5887  10F2  0226               	subwf	___lldiv@dividend+2,w
  5888  10F3  1D03               	skipz
  5889  10F4  28FB               	goto	u4335
  5890  10F5  0821               	movf	___lldiv@divisor+1,w
  5891  10F6  0225               	subwf	___lldiv@dividend+1,w
  5892  10F7  1D03               	skipz
  5893  10F8  28FB               	goto	u4335
  5894  10F9  0820               	movf	___lldiv@divisor,w
  5895  10FA  0224               	subwf	___lldiv@dividend,w
  5896  10FB                     u4335:
  5897  10FB  1C03               	skipc
  5898  10FC  28FE               	goto	u4331
  5899  10FD  28FF               	goto	u4330
  5900  10FE                     u4331:
  5901  10FE  290E               	goto	l2667
  5902  10FF                     u4330:
  5903  10FF                     l2663:
  5904  10FF  0820               	movf	___lldiv@divisor,w
  5905  1100  02A4               	subwf	___lldiv@dividend,f
  5906  1101  0821               	movf	___lldiv@divisor+1,w
  5907  1102  1C03               	skipc
  5908  1103  0F21               	incfsz	___lldiv@divisor+1,w
  5909  1104  02A5               	subwf	___lldiv@dividend+1,f
  5910  1105  0822               	movf	___lldiv@divisor+2,w
  5911  1106  1C03               	skipc
  5912  1107  0F22               	incfsz	___lldiv@divisor+2,w
  5913  1108  02A6               	subwf	___lldiv@dividend+2,f
  5914  1109  0823               	movf	___lldiv@divisor+3,w
  5915  110A  1C03               	skipc
  5916  110B  0F23               	incfsz	___lldiv@divisor+3,w
  5917  110C  02A7               	subwf	___lldiv@dividend+3,f
  5918  110D                     l2665:
  5919  110D  1428               	bsf	___lldiv@quotient,0
  5920  110E                     l2667:
  5921  110E  3001               	movlw	1
  5922  110F                     u4345:
  5923  110F  1003               	clrc
  5924  1110  0CA3               	rrf	___lldiv@divisor+3,f
  5925  1111  0CA2               	rrf	___lldiv@divisor+2,f
  5926  1112  0CA1               	rrf	___lldiv@divisor+1,f
  5927  1113  0CA0               	rrf	___lldiv@divisor,f
  5928  1114  3EFF               	addlw	-1
  5929  1115  1D03               	skipz
  5930  1116  290F               	goto	u4345
  5931  1117                     l2669:
  5932  1117  3001               	movlw	1
  5933  1118  02AC               	subwf	___lldiv@counter,f
  5934  1119  1D03               	btfss	3,2
  5935  111A  291C               	goto	u4351
  5936  111B  291D               	goto	u4350
  5937  111C                     u4351:
  5938  111C  28E4               	goto	l2659
  5939  111D                     u4350:
  5940  111D                     l2671:
  5941  111D  082B               	movf	___lldiv@quotient+3,w
  5942  111E  00A3               	movwf	?___lldiv+3
  5943  111F  082A               	movf	___lldiv@quotient+2,w
  5944  1120  00A2               	movwf	?___lldiv+2
  5945  1121  0829               	movf	___lldiv@quotient+1,w
  5946  1122  00A1               	movwf	?___lldiv+1
  5947  1123  0828               	movf	___lldiv@quotient,w
  5948  1124  00A0               	movwf	?___lldiv
  5949  1125                     l339:
  5950  1125  0008               	return
  5951  1126                     __end_of___lldiv:
  5952                           
  5953                           	psect	text13
  5954  1EFF                     __ptext13:	
  5955 ;; *************** function ___flsub *****************
  5956 ;; Defined at:
  5957 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  a               4    0[BANK1 ] unsigned long 
  5960 ;;  b               4    4[BANK1 ] unsigned long 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;		None
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  4    0[BANK1 ] unsigned long 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5972 ;;      Params:         0       0       8       0       0
  5973 ;;      Locals:         0       0       0       0       0
  5974 ;;      Temps:          0       0       0       0       0
  5975 ;;      Totals:         0       0       8       0       0
  5976 ;;Total ram usage:        8 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; Hardware stack levels required when called:    2
  5979 ;; This function calls:
  5980 ;;		___fladd
  5981 ;; This function is called by:
  5982 ;;		_sprintf
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           
  5987                           ;psect for function ___flsub
  5988  1EFF                     ___flsub:
  5989  1EFF                     l2771:	
  5990                           ;incstack = 0
  5991                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5992                           
  5993  1EFF  3080               	movlw	128
  5994  1F00  1683               	bsf	3,5	;RP0=1, select bank1
  5995  1F01  1303               	bcf	3,6	;RP1=0, select bank1
  5996  1F02  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5997  1F03                     l2773:
  5998  1F03  0827               	movf	(___flsub@b+3)^(0+128),w
  5999  1F04  1283               	bcf	3,5	;RP0=0, select bank0
  6000  1F05  1303               	bcf	3,6	;RP1=0, select bank0
  6001  1F06  00DF               	movwf	___fladd@b+3
  6002  1F07  1683               	bsf	3,5	;RP0=1, select bank1
  6003  1F08  1303               	bcf	3,6	;RP1=0, select bank1
  6004  1F09  0826               	movf	(___flsub@b+2)^(0+128),w
  6005  1F0A  1283               	bcf	3,5	;RP0=0, select bank0
  6006  1F0B  1303               	bcf	3,6	;RP1=0, select bank0
  6007  1F0C  00DE               	movwf	___fladd@b+2
  6008  1F0D  1683               	bsf	3,5	;RP0=1, select bank1
  6009  1F0E  1303               	bcf	3,6	;RP1=0, select bank1
  6010  1F0F  0825               	movf	(___flsub@b+1)^(0+128),w
  6011  1F10  1283               	bcf	3,5	;RP0=0, select bank0
  6012  1F11  1303               	bcf	3,6	;RP1=0, select bank0
  6013  1F12  00DD               	movwf	___fladd@b+1
  6014  1F13  1683               	bsf	3,5	;RP0=1, select bank1
  6015  1F14  1303               	bcf	3,6	;RP1=0, select bank1
  6016  1F15  0824               	movf	___flsub@b^(0+128),w
  6017  1F16  1283               	bcf	3,5	;RP0=0, select bank0
  6018  1F17  1303               	bcf	3,6	;RP1=0, select bank0
  6019  1F18  00DC               	movwf	___fladd@b
  6020  1F19  1683               	bsf	3,5	;RP0=1, select bank1
  6021  1F1A  1303               	bcf	3,6	;RP1=0, select bank1
  6022  1F1B  0823               	movf	(___flsub@a+3)^(0+128),w
  6023  1F1C  1283               	bcf	3,5	;RP0=0, select bank0
  6024  1F1D  1303               	bcf	3,6	;RP1=0, select bank0
  6025  1F1E  00E3               	movwf	___fladd@a+3
  6026  1F1F  1683               	bsf	3,5	;RP0=1, select bank1
  6027  1F20  1303               	bcf	3,6	;RP1=0, select bank1
  6028  1F21  0822               	movf	(___flsub@a+2)^(0+128),w
  6029  1F22  1283               	bcf	3,5	;RP0=0, select bank0
  6030  1F23  1303               	bcf	3,6	;RP1=0, select bank0
  6031  1F24  00E2               	movwf	___fladd@a+2
  6032  1F25  1683               	bsf	3,5	;RP0=1, select bank1
  6033  1F26  1303               	bcf	3,6	;RP1=0, select bank1
  6034  1F27  0821               	movf	(___flsub@a+1)^(0+128),w
  6035  1F28  1283               	bcf	3,5	;RP0=0, select bank0
  6036  1F29  1303               	bcf	3,6	;RP1=0, select bank0
  6037  1F2A  00E1               	movwf	___fladd@a+1
  6038  1F2B  1683               	bsf	3,5	;RP0=1, select bank1
  6039  1F2C  1303               	bcf	3,6	;RP1=0, select bank1
  6040  1F2D  0820               	movf	___flsub@a^(0+128),w
  6041  1F2E  1283               	bcf	3,5	;RP0=0, select bank0
  6042  1F2F  1303               	bcf	3,6	;RP1=0, select bank0
  6043  1F30  00E0               	movwf	___fladd@a
  6044  1F31  160A  118A  2578  160A  158A  	fcall	___fladd
  6045  1F36  1283               	bcf	3,5	;RP0=0, select bank0
  6046  1F37  1303               	bcf	3,6	;RP1=0, select bank0
  6047  1F38  085F               	movf	?___fladd+3,w
  6048  1F39  1683               	bsf	3,5	;RP0=1, select bank1
  6049  1F3A  1303               	bcf	3,6	;RP1=0, select bank1
  6050  1F3B  00A3               	movwf	(?___flsub+3)^(0+128)
  6051  1F3C  1283               	bcf	3,5	;RP0=0, select bank0
  6052  1F3D  1303               	bcf	3,6	;RP1=0, select bank0
  6053  1F3E  085E               	movf	?___fladd+2,w
  6054  1F3F  1683               	bsf	3,5	;RP0=1, select bank1
  6055  1F40  1303               	bcf	3,6	;RP1=0, select bank1
  6056  1F41  00A2               	movwf	(?___flsub+2)^(0+128)
  6057  1F42  1283               	bcf	3,5	;RP0=0, select bank0
  6058  1F43  1303               	bcf	3,6	;RP1=0, select bank0
  6059  1F44  085D               	movf	?___fladd+1,w
  6060  1F45  1683               	bsf	3,5	;RP0=1, select bank1
  6061  1F46  1303               	bcf	3,6	;RP1=0, select bank1
  6062  1F47  00A1               	movwf	(?___flsub+1)^(0+128)
  6063  1F48  1283               	bcf	3,5	;RP0=0, select bank0
  6064  1F49  1303               	bcf	3,6	;RP1=0, select bank0
  6065  1F4A  085C               	movf	?___fladd,w
  6066  1F4B  1683               	bsf	3,5	;RP0=1, select bank1
  6067  1F4C  1303               	bcf	3,6	;RP1=0, select bank1
  6068  1F4D  00A0               	movwf	?___flsub^(0+128)
  6069  1F4E                     l676:
  6070  1F4E  0008               	return
  6071  1F4F                     __end_of___flsub:
  6072                           
  6073                           	psect	text14
  6074  1578                     __ptext14:	
  6075 ;; *************** function ___fladd *****************
  6076 ;; Defined at:
  6077 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  b               4   60[BANK0 ] unsigned long 
  6080 ;;  a               4   64[BANK0 ] unsigned long 
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;  grs             1   79[BANK0 ] unsigned char 
  6083 ;;  bexp            1   78[BANK0 ] unsigned char 
  6084 ;;  aexp            1   77[BANK0 ] unsigned char 
  6085 ;;  signs           1   76[BANK0 ] unsigned char 
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  4   60[BANK0 ] unsigned char 
  6088 ;; Registers used:
  6089 ;;		wreg, status,2, status,0, btemp+1
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6095 ;;      Params:         0       8       0       0       0
  6096 ;;      Locals:         0       4       0       0       0
  6097 ;;      Temps:          0       8       0       0       0
  6098 ;;      Totals:         0      20       0       0       0
  6099 ;;Total ram usage:       20 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:    1
  6102 ;; This function calls:
  6103 ;;		Nothing
  6104 ;; This function is called by:
  6105 ;;		_sprintf
  6106 ;;		___flsub
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           
  6111                           ;psect for function ___fladd
  6112  1578                     ___fladd:
  6113  1578                     l2137:	
  6114                           ;incstack = 0
  6115                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6116                           
  6117  1578  1283               	bcf	3,5	;RP0=0, select bank0
  6118  1579  1303               	bcf	3,6	;RP1=0, select bank0
  6119  157A  085F               	movf	___fladd@b+3,w
  6120  157B  3980               	andlw	128
  6121  157C  00E4               	movwf	??___fladd
  6122  157D  0864               	movf	??___fladd,w
  6123  157E  00EC               	movwf	___fladd@signs
  6124  157F                     l2139:
  6125  157F  085F               	movf	___fladd@b+3,w
  6126  1580  00E4               	movwf	??___fladd
  6127  1581  0764               	addwf	??___fladd,w
  6128  1582  00E5               	movwf	??___fladd+1
  6129  1583  0865               	movf	??___fladd+1,w
  6130  1584  00EE               	movwf	___fladd@bexp
  6131  1585                     l2141:
  6132  1585  1FDE               	btfss	___fladd@b+2,7
  6133  1586  2D88               	goto	u2901
  6134  1587  2D89               	goto	u2900
  6135  1588                     u2901:
  6136  1588  2D8A               	goto	l2145
  6137  1589                     u2900:
  6138  1589                     l2143:
  6139  1589  146E               	bsf	___fladd@bexp,0
  6140  158A                     l2145:
  6141  158A  086E               	movf	___fladd@bexp,w
  6142  158B  1903               	btfsc	3,2
  6143  158C  2D8E               	goto	u2911
  6144  158D  2D8F               	goto	u2910
  6145  158E                     u2911:
  6146  158E  2D9F               	goto	l2155
  6147  158F                     u2910:
  6148  158F                     l2147:
  6149  158F  0A6E               	incf	___fladd@bexp,w
  6150  1590  1D03               	btfss	3,2
  6151  1591  2D93               	goto	u2921
  6152  1592  2D94               	goto	u2920
  6153  1593                     u2921:
  6154  1593  2D9C               	goto	l2151
  6155  1594                     u2920:
  6156  1594                     l2149:
  6157  1594  3000               	movlw	0
  6158  1595  00DF               	movwf	___fladd@b+3
  6159  1596  3000               	movlw	0
  6160  1597  00DE               	movwf	___fladd@b+2
  6161  1598  3000               	movlw	0
  6162  1599  00DD               	movwf	___fladd@b+1
  6163  159A  3000               	movlw	0
  6164  159B  00DC               	movwf	___fladd@b
  6165  159C                     l2151:
  6166  159C  17DE               	bsf	___fladd@b+2,7
  6167  159D                     l2153:
  6168  159D  01DF               	clrf	___fladd@b+3
  6169  159E  2DA7               	goto	l2157
  6170  159F                     l2155:
  6171  159F  3000               	movlw	0
  6172  15A0  00DF               	movwf	___fladd@b+3
  6173  15A1  3000               	movlw	0
  6174  15A2  00DE               	movwf	___fladd@b+2
  6175  15A3  3000               	movlw	0
  6176  15A4  00DD               	movwf	___fladd@b+1
  6177  15A5  3000               	movlw	0
  6178  15A6  00DC               	movwf	___fladd@b
  6179  15A7                     l2157:
  6180  15A7  0863               	movf	___fladd@a+3,w
  6181  15A8  3980               	andlw	128
  6182  15A9  00E4               	movwf	??___fladd
  6183  15AA  0864               	movf	??___fladd,w
  6184  15AB  00ED               	movwf	___fladd@aexp
  6185  15AC                     l2159:
  6186  15AC  086D               	movf	___fladd@aexp,w
  6187  15AD  066C               	xorwf	___fladd@signs,w
  6188  15AE  1903               	skipnz
  6189  15AF  2DB1               	goto	u2931
  6190  15B0  2DB2               	goto	u2930
  6191  15B1                     u2931:
  6192  15B1  2DB3               	goto	l2163
  6193  15B2                     u2930:
  6194  15B2                     l2161:
  6195  15B2  176C               	bsf	___fladd@signs,6
  6196  15B3                     l2163:
  6197  15B3  0863               	movf	___fladd@a+3,w
  6198  15B4  00E4               	movwf	??___fladd
  6199  15B5  0764               	addwf	??___fladd,w
  6200  15B6  00E5               	movwf	??___fladd+1
  6201  15B7  0865               	movf	??___fladd+1,w
  6202  15B8  00ED               	movwf	___fladd@aexp
  6203  15B9                     l2165:
  6204  15B9  1FE2               	btfss	___fladd@a+2,7
  6205  15BA  2DBC               	goto	u2941
  6206  15BB  2DBD               	goto	u2940
  6207  15BC                     u2941:
  6208  15BC  2DBE               	goto	l2169
  6209  15BD                     u2940:
  6210  15BD                     l2167:
  6211  15BD  146D               	bsf	___fladd@aexp,0
  6212  15BE                     l2169:
  6213  15BE  086D               	movf	___fladd@aexp,w
  6214  15BF  1903               	btfsc	3,2
  6215  15C0  2DC2               	goto	u2951
  6216  15C1  2DC3               	goto	u2950
  6217  15C2                     u2951:
  6218  15C2  2DD3               	goto	l2179
  6219  15C3                     u2950:
  6220  15C3                     l2171:
  6221  15C3  0A6D               	incf	___fladd@aexp,w
  6222  15C4  1D03               	btfss	3,2
  6223  15C5  2DC7               	goto	u2961
  6224  15C6  2DC8               	goto	u2960
  6225  15C7                     u2961:
  6226  15C7  2DD0               	goto	l2175
  6227  15C8                     u2960:
  6228  15C8                     l2173:
  6229  15C8  3000               	movlw	0
  6230  15C9  00E3               	movwf	___fladd@a+3
  6231  15CA  3000               	movlw	0
  6232  15CB  00E2               	movwf	___fladd@a+2
  6233  15CC  3000               	movlw	0
  6234  15CD  00E1               	movwf	___fladd@a+1
  6235  15CE  3000               	movlw	0
  6236  15CF  00E0               	movwf	___fladd@a
  6237  15D0                     l2175:
  6238  15D0  17E2               	bsf	___fladd@a+2,7
  6239  15D1                     l2177:
  6240  15D1  01E3               	clrf	___fladd@a+3
  6241  15D2  2DDB               	goto	l630
  6242  15D3                     l2179:
  6243  15D3  3000               	movlw	0
  6244  15D4  00E3               	movwf	___fladd@a+3
  6245  15D5  3000               	movlw	0
  6246  15D6  00E2               	movwf	___fladd@a+2
  6247  15D7  3000               	movlw	0
  6248  15D8  00E1               	movwf	___fladd@a+1
  6249  15D9  3000               	movlw	0
  6250  15DA  00E0               	movwf	___fladd@a
  6251  15DB                     l630:
  6252  15DB  086E               	movf	___fladd@bexp,w
  6253  15DC  026D               	subwf	___fladd@aexp,w
  6254  15DD  1803               	skipnc
  6255  15DE  2DE0               	goto	u2971
  6256  15DF  2DE1               	goto	u2970
  6257  15E0                     u2971:
  6258  15E0  2E25               	goto	l2215
  6259  15E1                     u2970:
  6260  15E1                     l2181:
  6261  15E1  1F6C               	btfss	___fladd@signs,6
  6262  15E2  2DE4               	goto	u2981
  6263  15E3  2DE5               	goto	u2980
  6264  15E4                     u2981:
  6265  15E4  2DE9               	goto	l2185
  6266  15E5                     u2980:
  6267  15E5                     l2183:
  6268  15E5  3080               	movlw	128
  6269  15E6  00E4               	movwf	??___fladd
  6270  15E7  0864               	movf	??___fladd,w
  6271  15E8  06EC               	xorwf	___fladd@signs,f
  6272  15E9                     l2185:
  6273  15E9  086E               	movf	___fladd@bexp,w
  6274  15EA  00E4               	movwf	??___fladd
  6275  15EB  0864               	movf	??___fladd,w
  6276  15EC  00EF               	movwf	___fladd@grs
  6277  15ED                     l2187:
  6278  15ED  086D               	movf	___fladd@aexp,w
  6279  15EE  00E4               	movwf	??___fladd
  6280  15EF  0864               	movf	??___fladd,w
  6281  15F0  00EE               	movwf	___fladd@bexp
  6282  15F1                     l2189:
  6283  15F1  086F               	movf	___fladd@grs,w
  6284  15F2  00E4               	movwf	??___fladd
  6285  15F3  0864               	movf	??___fladd,w
  6286  15F4  00ED               	movwf	___fladd@aexp
  6287  15F5                     l2191:
  6288  15F5  085C               	movf	___fladd@b,w
  6289  15F6  00E4               	movwf	??___fladd
  6290  15F7  0864               	movf	??___fladd,w
  6291  15F8  00EF               	movwf	___fladd@grs
  6292  15F9                     l2193:
  6293  15F9  0860               	movf	___fladd@a,w
  6294  15FA  00E4               	movwf	??___fladd
  6295  15FB  0864               	movf	??___fladd,w
  6296  15FC  00DC               	movwf	___fladd@b
  6297  15FD                     l2195:
  6298  15FD  086F               	movf	___fladd@grs,w
  6299  15FE  00E4               	movwf	??___fladd
  6300  15FF  0864               	movf	??___fladd,w
  6301  1600  00E0               	movwf	___fladd@a
  6302  1601                     l2197:
  6303  1601  085D               	movf	___fladd@b+1,w
  6304  1602  00E4               	movwf	??___fladd
  6305  1603  0864               	movf	??___fladd,w
  6306  1604  00EF               	movwf	___fladd@grs
  6307  1605                     l2199:
  6308  1605  0861               	movf	___fladd@a+1,w
  6309  1606  00E4               	movwf	??___fladd
  6310  1607  0864               	movf	??___fladd,w
  6311  1608  00DD               	movwf	___fladd@b+1
  6312  1609                     l2201:
  6313  1609  086F               	movf	___fladd@grs,w
  6314  160A  00E4               	movwf	??___fladd
  6315  160B  0864               	movf	??___fladd,w
  6316  160C  00E1               	movwf	___fladd@a+1
  6317  160D                     l2203:
  6318  160D  085E               	movf	___fladd@b+2,w
  6319  160E  00E4               	movwf	??___fladd
  6320  160F  0864               	movf	??___fladd,w
  6321  1610  00EF               	movwf	___fladd@grs
  6322  1611                     l2205:
  6323  1611  0862               	movf	___fladd@a+2,w
  6324  1612  00E4               	movwf	??___fladd
  6325  1613  0864               	movf	??___fladd,w
  6326  1614  00DE               	movwf	___fladd@b+2
  6327  1615                     l2207:
  6328  1615  086F               	movf	___fladd@grs,w
  6329  1616  00E4               	movwf	??___fladd
  6330  1617  0864               	movf	??___fladd,w
  6331  1618  00E2               	movwf	___fladd@a+2
  6332  1619                     l2209:
  6333  1619  085F               	movf	___fladd@b+3,w
  6334  161A  00E4               	movwf	??___fladd
  6335  161B  0864               	movf	??___fladd,w
  6336  161C  00EF               	movwf	___fladd@grs
  6337  161D                     l2211:
  6338  161D  0863               	movf	___fladd@a+3,w
  6339  161E  00E4               	movwf	??___fladd
  6340  161F  0864               	movf	??___fladd,w
  6341  1620  00DF               	movwf	___fladd@b+3
  6342  1621                     l2213:
  6343  1621  086F               	movf	___fladd@grs,w
  6344  1622  00E4               	movwf	??___fladd
  6345  1623  0864               	movf	??___fladd,w
  6346  1624  00E3               	movwf	___fladd@a+3
  6347  1625                     l2215:
  6348  1625  01EF               	clrf	___fladd@grs
  6349  1626                     l2217:
  6350  1626  086D               	movf	___fladd@aexp,w
  6351  1627  00E4               	movwf	??___fladd
  6352  1628  01E5               	clrf	??___fladd+1
  6353  1629  0865               	movf	??___fladd+1,w
  6354  162A  00E7               	movwf	??___fladd+3
  6355  162B  086E               	movf	___fladd@bexp,w
  6356  162C  0264               	subwf	??___fladd,w
  6357  162D  00E6               	movwf	??___fladd+2
  6358  162E  1C03               	skipc
  6359  162F  03E7               	decf	??___fladd+3,f
  6360  1630  0867               	movf	??___fladd+3,w
  6361  1631  3A80               	xorlw	128
  6362  1632  00FF               	movwf	btemp+1
  6363  1633  3080               	movlw	128
  6364  1634  027F               	subwf	btemp+1,w
  6365  1635  1D03               	skipz
  6366  1636  2E39               	goto	u2995
  6367  1637  301A               	movlw	26
  6368  1638  0266               	subwf	??___fladd+2,w
  6369  1639                     u2995:
  6370  1639  1C03               	skipc
  6371  163A  2E3C               	goto	u2991
  6372  163B  2E3D               	goto	u2990
  6373  163C                     u2991:
  6374  163C  2E7A               	goto	l2233
  6375  163D                     u2990:
  6376  163D                     l2219:
  6377  163D  1283               	bcf	3,5	;RP0=0, select bank0
  6378  163E  1303               	bcf	3,6	;RP1=0, select bank0
  6379  163F  085F               	movf	___fladd@b+3,w
  6380  1640  045E               	iorwf	___fladd@b+2,w
  6381  1641  045D               	iorwf	___fladd@b+1,w
  6382  1642  045C               	iorwf	___fladd@b,w
  6383  1643  1D03               	skipz
  6384  1644  2E46               	goto	u3001
  6385  1645  2E48               	goto	u3000
  6386  1646                     u3001:
  6387  1646  3001               	movlw	1
  6388  1647  2E49               	goto	u3010
  6389  1648                     u3000:
  6390  1648  3000               	movlw	0
  6391  1649                     u3010:
  6392  1649  00E4               	movwf	??___fladd
  6393  164A  0864               	movf	??___fladd,w
  6394  164B  00EF               	movwf	___fladd@grs
  6395  164C  3000               	movlw	0
  6396  164D  00DF               	movwf	___fladd@b+3
  6397  164E  3000               	movlw	0
  6398  164F  00DE               	movwf	___fladd@b+2
  6399  1650  3000               	movlw	0
  6400  1651  00DD               	movwf	___fladd@b+1
  6401  1652  3000               	movlw	0
  6402  1653  00DC               	movwf	___fladd@b
  6403  1654  086D               	movf	___fladd@aexp,w
  6404  1655  00E4               	movwf	??___fladd
  6405  1656  0864               	movf	??___fladd,w
  6406  1657  00EE               	movwf	___fladd@bexp
  6407  1658  2E82               	goto	l634
  6408  1659                     l636:
  6409  1659  1C6F               	btfss	___fladd@grs,0
  6410  165A  2E5C               	goto	u3021
  6411  165B  2E5D               	goto	u3020
  6412  165C                     u3021:
  6413  165C  2E66               	goto	l2223
  6414  165D                     u3020:
  6415  165D                     l2221:
  6416  165D  086F               	movf	___fladd@grs,w
  6417  165E  00E4               	movwf	??___fladd
  6418  165F  1003               	clrc
  6419  1660  0C64               	rrf	??___fladd,w
  6420  1661  3801               	iorlw	1
  6421  1662  00E5               	movwf	??___fladd+1
  6422  1663  0865               	movf	??___fladd+1,w
  6423  1664  00EF               	movwf	___fladd@grs
  6424  1665  2E68               	goto	l2225
  6425  1666                     l2223:
  6426  1666  1003               	clrc
  6427  1667  0CEF               	rrf	___fladd@grs,f
  6428  1668                     l2225:
  6429  1668  1C5C               	btfss	___fladd@b,0
  6430  1669  2E6B               	goto	u3031
  6431  166A  2E6C               	goto	u3030
  6432  166B                     u3031:
  6433  166B  2E6D               	goto	l2229
  6434  166C                     u3030:
  6435  166C                     l2227:
  6436  166C  17EF               	bsf	___fladd@grs,7
  6437  166D                     l2229:
  6438  166D  3001               	movlw	1
  6439  166E  00E4               	movwf	??___fladd
  6440  166F                     u3045:
  6441  166F  0D5F               	rlf	___fladd@b+3,w
  6442  1670  0CDF               	rrf	___fladd@b+3,f
  6443  1671  0CDE               	rrf	___fladd@b+2,f
  6444  1672  0CDD               	rrf	___fladd@b+1,f
  6445  1673  0CDC               	rrf	___fladd@b,f
  6446  1674  0BE4               	decfsz	??___fladd& (0+127),f
  6447  1675  2E6F               	goto	u3045
  6448  1676                     l2231:
  6449  1676  3001               	movlw	1
  6450  1677  00E4               	movwf	??___fladd
  6451  1678  0864               	movf	??___fladd,w
  6452  1679  07EE               	addwf	___fladd@bexp,f
  6453  167A                     l2233:
  6454  167A  1283               	bcf	3,5	;RP0=0, select bank0
  6455  167B  1303               	bcf	3,6	;RP1=0, select bank0
  6456  167C  086D               	movf	___fladd@aexp,w
  6457  167D  026E               	subwf	___fladd@bexp,w
  6458  167E  1C03               	skipc
  6459  167F  2E81               	goto	u3051
  6460  1680  2E82               	goto	u3050
  6461  1681                     u3051:
  6462  1681  2E59               	goto	l636
  6463  1682                     u3050:
  6464  1682                     l634:
  6465  1682  1B6C               	btfsc	___fladd@signs,6
  6466  1683  2E85               	goto	u3061
  6467  1684  2E86               	goto	u3060
  6468  1685                     u3061:
  6469  1685  2ED1               	goto	l2259
  6470  1686                     u3060:
  6471  1686                     l2235:
  6472  1686  086E               	movf	___fladd@bexp,w
  6473  1687  1D03               	btfss	3,2
  6474  1688  2E8A               	goto	u3071
  6475  1689  2E8B               	goto	u3070
  6476  168A                     u3071:
  6477  168A  2E94               	goto	l2241
  6478  168B                     u3070:
  6479  168B                     l2237:
  6480  168B  3000               	movlw	0
  6481  168C  00DF               	movwf	?___fladd+3
  6482  168D  3000               	movlw	0
  6483  168E  00DE               	movwf	?___fladd+2
  6484  168F  3000               	movlw	0
  6485  1690  00DD               	movwf	?___fladd+1
  6486  1691  3000               	movlw	0
  6487  1692  00DC               	movwf	?___fladd
  6488  1693  2FFF               	goto	l643
  6489  1694                     l2241:
  6490  1694  0860               	movf	___fladd@a,w
  6491  1695  07DC               	addwf	___fladd@b,f
  6492  1696  0861               	movf	___fladd@a+1,w
  6493  1697  1103               	clrz
  6494  1698  1803               	skipnc
  6495  1699  3E01               	addlw	1
  6496  169A  1903               	skipnz
  6497  169B  2E9D               	goto	u3081
  6498  169C  07DD               	addwf	___fladd@b+1,f
  6499  169D                     u3081:
  6500  169D  0862               	movf	___fladd@a+2,w
  6501  169E  1103               	clrz
  6502  169F  1803               	skipnc
  6503  16A0  3E01               	addlw	1
  6504  16A1  1903               	skipnz
  6505  16A2  2EA4               	goto	u3082
  6506  16A3  07DE               	addwf	___fladd@b+2,f
  6507  16A4                     u3082:
  6508  16A4  0863               	movf	___fladd@a+3,w
  6509  16A5  1103               	clrz
  6510  16A6  1803               	skipnc
  6511  16A7  3E01               	addlw	1
  6512  16A8  1903               	skipnz
  6513  16A9  2EAB               	goto	u3083
  6514  16AA  07DF               	addwf	___fladd@b+3,f
  6515  16AB                     u3083:
  6516  16AB                     l2243:
  6517  16AB  1C5F               	btfss	___fladd@b+3,0
  6518  16AC  2EAE               	goto	u3091
  6519  16AD  2EAF               	goto	u3090
  6520  16AE                     u3091:
  6521  16AE  2F85               	goto	l2293
  6522  16AF                     u3090:
  6523  16AF                     l2245:
  6524  16AF  1C6F               	btfss	___fladd@grs,0
  6525  16B0  2EB2               	goto	u3101
  6526  16B1  2EB3               	goto	u3100
  6527  16B2                     u3101:
  6528  16B2  2EBC               	goto	l2249
  6529  16B3                     u3100:
  6530  16B3                     l2247:
  6531  16B3  086F               	movf	___fladd@grs,w
  6532  16B4  00E4               	movwf	??___fladd
  6533  16B5  1003               	clrc
  6534  16B6  0C64               	rrf	??___fladd,w
  6535  16B7  3801               	iorlw	1
  6536  16B8  00E5               	movwf	??___fladd+1
  6537  16B9  0865               	movf	??___fladd+1,w
  6538  16BA  00EF               	movwf	___fladd@grs
  6539  16BB  2EBE               	goto	l2251
  6540  16BC                     l2249:
  6541  16BC  1003               	clrc
  6542  16BD  0CEF               	rrf	___fladd@grs,f
  6543  16BE                     l2251:
  6544  16BE  1C5C               	btfss	___fladd@b,0
  6545  16BF  2EC1               	goto	u3111
  6546  16C0  2EC2               	goto	u3110
  6547  16C1                     u3111:
  6548  16C1  2EC3               	goto	l2255
  6549  16C2                     u3110:
  6550  16C2                     l2253:
  6551  16C2  17EF               	bsf	___fladd@grs,7
  6552  16C3                     l2255:
  6553  16C3  3001               	movlw	1
  6554  16C4  00E4               	movwf	??___fladd
  6555  16C5                     u3125:
  6556  16C5  0D5F               	rlf	___fladd@b+3,w
  6557  16C6  0CDF               	rrf	___fladd@b+3,f
  6558  16C7  0CDE               	rrf	___fladd@b+2,f
  6559  16C8  0CDD               	rrf	___fladd@b+1,f
  6560  16C9  0CDC               	rrf	___fladd@b,f
  6561  16CA  0BE4               	decfsz	??___fladd& (0+127),f
  6562  16CB  2EC5               	goto	u3125
  6563  16CC                     l2257:
  6564  16CC  3001               	movlw	1
  6565  16CD  00E4               	movwf	??___fladd
  6566  16CE  0864               	movf	??___fladd,w
  6567  16CF  07EE               	addwf	___fladd@bexp,f
  6568  16D0  2F85               	goto	l2293
  6569  16D1                     l2259:
  6570  16D1  085F               	movf	___fladd@b+3,w
  6571  16D2  3A80               	xorlw	128
  6572  16D3  00FF               	movwf	btemp+1
  6573  16D4  0863               	movf	___fladd@a+3,w
  6574  16D5  3A80               	xorlw	128
  6575  16D6  027F               	subwf	btemp+1,w
  6576  16D7  1D03               	skipz
  6577  16D8  2EE3               	goto	u3133
  6578  16D9  0862               	movf	___fladd@a+2,w
  6579  16DA  025E               	subwf	___fladd@b+2,w
  6580  16DB  1D03               	skipz
  6581  16DC  2EE3               	goto	u3133
  6582  16DD  0861               	movf	___fladd@a+1,w
  6583  16DE  025D               	subwf	___fladd@b+1,w
  6584  16DF  1D03               	skipz
  6585  16E0  2EE3               	goto	u3133
  6586  16E1  0860               	movf	___fladd@a,w
  6587  16E2  025C               	subwf	___fladd@b,w
  6588  16E3                     u3133:
  6589  16E3  1803               	skipnc
  6590  16E4  2EE6               	goto	u3131
  6591  16E5  2EE7               	goto	u3130
  6592  16E6                     u3131:
  6593  16E6  2F3F               	goto	l2269
  6594  16E7                     u3130:
  6595  16E7                     l2261:
  6596  16E7  30FF               	movlw	255
  6597  16E8  00E4               	movwf	??___fladd
  6598  16E9  30FF               	movlw	255
  6599  16EA  00E5               	movwf	??___fladd+1
  6600  16EB  30FF               	movlw	255
  6601  16EC  00E6               	movwf	??___fladd+2
  6602  16ED  30FF               	movlw	255
  6603  16EE  00E7               	movwf	??___fladd+3
  6604  16EF  0860               	movf	___fladd@a,w
  6605  16F0  00E8               	movwf	??___fladd+4
  6606  16F1  0861               	movf	___fladd@a+1,w
  6607  16F2  00E9               	movwf	??___fladd+5
  6608  16F3  0862               	movf	___fladd@a+2,w
  6609  16F4  00EA               	movwf	??___fladd+6
  6610  16F5  0863               	movf	___fladd@a+3,w
  6611  16F6  00EB               	movwf	??___fladd+7
  6612  16F7  085C               	movf	___fladd@b,w
  6613  16F8  02E8               	subwf	??___fladd+4,f
  6614  16F9  085D               	movf	___fladd@b+1,w
  6615  16FA  1C03               	skipc
  6616  16FB  0F5D               	incfsz	___fladd@b+1,w
  6617  16FC  2EFE               	goto	u3141
  6618  16FD  2EFF               	goto	u3142
  6619  16FE                     u3141:
  6620  16FE  02E9               	subwf	??___fladd+5,f
  6621  16FF                     u3142:
  6622  16FF  085E               	movf	___fladd@b+2,w
  6623  1700  1C03               	skipc
  6624  1701  0F5E               	incfsz	___fladd@b+2,w
  6625  1702  2F04               	goto	u3143
  6626  1703  2F05               	goto	u3144
  6627  1704                     u3143:
  6628  1704  02EA               	subwf	??___fladd+6,f
  6629  1705                     u3144:
  6630  1705  085F               	movf	___fladd@b+3,w
  6631  1706  1C03               	skipc
  6632  1707  0F5F               	incfsz	___fladd@b+3,w
  6633  1708  2F0A               	goto	u3145
  6634  1709  2F0B               	goto	u3146
  6635  170A                     u3145:
  6636  170A  02EB               	subwf	??___fladd+7,f
  6637  170B                     u3146:
  6638  170B  0868               	movf	??___fladd+4,w
  6639  170C  07E4               	addwf	??___fladd,f
  6640  170D  0869               	movf	??___fladd+5,w
  6641  170E  1803               	skipnc
  6642  170F  0F69               	incfsz	??___fladd+5,w
  6643  1710  2F12               	goto	u3150
  6644  1711  2F13               	goto	u3151
  6645  1712                     u3150:
  6646  1712  07E5               	addwf	??___fladd+1,f
  6647  1713                     u3151:
  6648  1713  086A               	movf	??___fladd+6,w
  6649  1714  1803               	skipnc
  6650  1715  0F6A               	incfsz	??___fladd+6,w
  6651  1716  2F18               	goto	u3152
  6652  1717  2F19               	goto	u3153
  6653  1718                     u3152:
  6654  1718  07E6               	addwf	??___fladd+2,f
  6655  1719                     u3153:
  6656  1719  086B               	movf	??___fladd+7,w
  6657  171A  1803               	skipnc
  6658  171B  0A6B               	incf	??___fladd+7,w
  6659  171C  07E7               	addwf	??___fladd+3,f
  6660  171D  0867               	movf	??___fladd+3,w
  6661  171E  00DF               	movwf	___fladd@b+3
  6662  171F  0866               	movf	??___fladd+2,w
  6663  1720  00DE               	movwf	___fladd@b+2
  6664  1721  0865               	movf	??___fladd+1,w
  6665  1722  00DD               	movwf	___fladd@b+1
  6666  1723  0864               	movf	??___fladd,w
  6667  1724  00DC               	movwf	___fladd@b
  6668  1725                     l2263:
  6669  1725  3080               	movlw	128
  6670  1726  00E4               	movwf	??___fladd
  6671  1727  0864               	movf	??___fladd,w
  6672  1728  06EC               	xorwf	___fladd@signs,f
  6673  1729  09EF               	comf	___fladd@grs,f
  6674  172A  0AEF               	incf	___fladd@grs,f
  6675  172B                     l2265:
  6676  172B  086F               	movf	___fladd@grs,w
  6677  172C  1D03               	btfss	3,2
  6678  172D  2F2F               	goto	u3161
  6679  172E  2F30               	goto	u3160
  6680  172F                     u3161:
  6681  172F  2F4D               	goto	l651
  6682  1730                     u3160:
  6683  1730                     l2267:
  6684  1730  3001               	movlw	1
  6685  1731  07DC               	addwf	___fladd@b,f
  6686  1732  3000               	movlw	0
  6687  1733  1803               	skipnc
  6688  1734  3001               	movlw	1
  6689  1735  07DD               	addwf	___fladd@b+1,f
  6690  1736  3000               	movlw	0
  6691  1737  1803               	skipnc
  6692  1738  3001               	movlw	1
  6693  1739  07DE               	addwf	___fladd@b+2,f
  6694  173A  3000               	movlw	0
  6695  173B  1803               	skipnc
  6696  173C  3001               	movlw	1
  6697  173D  07DF               	addwf	___fladd@b+3,f
  6698  173E  2F4D               	goto	l651
  6699  173F                     l2269:
  6700  173F  0860               	movf	___fladd@a,w
  6701  1740  02DC               	subwf	___fladd@b,f
  6702  1741  0861               	movf	___fladd@a+1,w
  6703  1742  1C03               	skipc
  6704  1743  0F61               	incfsz	___fladd@a+1,w
  6705  1744  02DD               	subwf	___fladd@b+1,f
  6706  1745  0862               	movf	___fladd@a+2,w
  6707  1746  1C03               	skipc
  6708  1747  0F62               	incfsz	___fladd@a+2,w
  6709  1748  02DE               	subwf	___fladd@b+2,f
  6710  1749  0863               	movf	___fladd@a+3,w
  6711  174A  1C03               	skipc
  6712  174B  0F63               	incfsz	___fladd@a+3,w
  6713  174C  02DF               	subwf	___fladd@b+3,f
  6714  174D                     l651:
  6715  174D  085F               	movf	___fladd@b+3,w
  6716  174E  045E               	iorwf	___fladd@b+2,w
  6717  174F  045D               	iorwf	___fladd@b+1,w
  6718  1750  045C               	iorwf	___fladd@b,w
  6719  1751  1D03               	skipz
  6720  1752  2F54               	goto	u3171
  6721  1753  2F55               	goto	u3170
  6722  1754                     u3171:
  6723  1754  2F81               	goto	l2291
  6724  1755                     u3170:
  6725  1755                     l2271:
  6726  1755  086F               	movf	___fladd@grs,w
  6727  1756  1D03               	btfss	3,2
  6728  1757  2F59               	goto	u3181
  6729  1758  2F5A               	goto	u3180
  6730  1759                     u3181:
  6731  1759  2F81               	goto	l2291
  6732  175A                     u3180:
  6733  175A                     l2273:
  6734  175A  3000               	movlw	0
  6735  175B  00DF               	movwf	?___fladd+3
  6736  175C  3000               	movlw	0
  6737  175D  00DE               	movwf	?___fladd+2
  6738  175E  3000               	movlw	0
  6739  175F  00DD               	movwf	?___fladd+1
  6740  1760  3000               	movlw	0
  6741  1761  00DC               	movwf	?___fladd
  6742  1762  2FFF               	goto	l643
  6743  1763                     l2277:
  6744  1763  3001               	movlw	1
  6745  1764  00E4               	movwf	??___fladd
  6746  1765                     u3195:
  6747  1765  1003               	clrc
  6748  1766  0DDC               	rlf	___fladd@b,f
  6749  1767  0DDD               	rlf	___fladd@b+1,f
  6750  1768  0DDE               	rlf	___fladd@b+2,f
  6751  1769  0DDF               	rlf	___fladd@b+3,f
  6752  176A  0BE4               	decfsz	??___fladd,f
  6753  176B  2F65               	goto	u3195
  6754  176C                     l2279:
  6755  176C  1FEF               	btfss	___fladd@grs,7
  6756  176D  2F6F               	goto	u3201
  6757  176E  2F70               	goto	u3200
  6758  176F                     u3201:
  6759  176F  2F71               	goto	l655
  6760  1770                     u3200:
  6761  1770                     l2281:
  6762  1770  145C               	bsf	___fladd@b,0
  6763  1771                     l655:
  6764  1771  1C6F               	btfss	___fladd@grs,0
  6765  1772  2F74               	goto	u3211
  6766  1773  2F75               	goto	u3210
  6767  1774                     u3211:
  6768  1774  2F78               	goto	l2285
  6769  1775                     u3210:
  6770  1775                     l2283:
  6771  1775  1403               	setc
  6772  1776  0DEF               	rlf	___fladd@grs,f
  6773  1777  2F7A               	goto	l2287
  6774  1778                     l2285:
  6775  1778  1003               	clrc
  6776  1779  0DEF               	rlf	___fladd@grs,f
  6777  177A                     l2287:
  6778  177A  086E               	movf	___fladd@bexp,w
  6779  177B  1903               	btfsc	3,2
  6780  177C  2F7E               	goto	u3221
  6781  177D  2F7F               	goto	u3220
  6782  177E                     u3221:
  6783  177E  2F81               	goto	l2291
  6784  177F                     u3220:
  6785  177F                     l2289:
  6786  177F  3001               	movlw	1
  6787  1780  02EE               	subwf	___fladd@bexp,f
  6788  1781                     l2291:
  6789  1781  1FDE               	btfss	___fladd@b+2,7
  6790  1782  2F84               	goto	u3231
  6791  1783  2F85               	goto	u3230
  6792  1784                     u3231:
  6793  1784  2F63               	goto	l2277
  6794  1785                     u3230:
  6795  1785                     l2293:
  6796  1785  01ED               	clrf	___fladd@aexp
  6797  1786                     l2295:
  6798  1786  1FEF               	btfss	___fladd@grs,7
  6799  1787  2F89               	goto	u3241
  6800  1788  2F8A               	goto	u3240
  6801  1789                     u3241:
  6802  1789  2F98               	goto	l2303
  6803  178A                     u3240:
  6804  178A                     l2297:
  6805  178A  086F               	movf	___fladd@grs,w
  6806  178B  397F               	andlw	127
  6807  178C  1903               	btfsc	3,2
  6808  178D  2F8F               	goto	u3251
  6809  178E  2F90               	goto	u3250
  6810  178F                     u3251:
  6811  178F  2F93               	goto	l661
  6812  1790                     u3250:
  6813  1790                     l2299:
  6814  1790  01ED               	clrf	___fladd@aexp
  6815  1791  0AED               	incf	___fladd@aexp,f
  6816  1792  2F98               	goto	l2303
  6817  1793                     l661:
  6818  1793  1C5C               	btfss	___fladd@b,0
  6819  1794  2F96               	goto	u3261
  6820  1795  2F97               	goto	u3260
  6821  1796                     u3261:
  6822  1796  2F98               	goto	l2303
  6823  1797                     u3260:
  6824  1797  2F90               	goto	l2299
  6825  1798                     l2303:
  6826  1798  086D               	movf	___fladd@aexp,w
  6827  1799  1903               	btfsc	3,2
  6828  179A  2F9C               	goto	u3271
  6829  179B  2F9D               	goto	u3270
  6830  179C                     u3271:
  6831  179C  2FD1               	goto	l664
  6832  179D                     u3270:
  6833  179D                     l2305:
  6834  179D  3001               	movlw	1
  6835  179E  07DC               	addwf	___fladd@b,f
  6836  179F  3000               	movlw	0
  6837  17A0  1803               	skipnc
  6838  17A1  3001               	movlw	1
  6839  17A2  07DD               	addwf	___fladd@b+1,f
  6840  17A3  3000               	movlw	0
  6841  17A4  1803               	skipnc
  6842  17A5  3001               	movlw	1
  6843  17A6  07DE               	addwf	___fladd@b+2,f
  6844  17A7  3000               	movlw	0
  6845  17A8  1803               	skipnc
  6846  17A9  3001               	movlw	1
  6847  17AA  07DF               	addwf	___fladd@b+3,f
  6848  17AB                     l2307:
  6849  17AB  1C5F               	btfss	___fladd@b+3,0
  6850  17AC  2FAE               	goto	u3281
  6851  17AD  2FAF               	goto	u3280
  6852  17AE                     u3281:
  6853  17AE  2FD1               	goto	l664
  6854  17AF                     u3280:
  6855  17AF                     l2309:
  6856  17AF  085C               	movf	___fladd@b,w
  6857  17B0  00E4               	movwf	??___fladd
  6858  17B1  085D               	movf	___fladd@b+1,w
  6859  17B2  00E5               	movwf	??___fladd+1
  6860  17B3  085E               	movf	___fladd@b+2,w
  6861  17B4  00E6               	movwf	??___fladd+2
  6862  17B5  085F               	movf	___fladd@b+3,w
  6863  17B6  00E7               	movwf	??___fladd+3
  6864  17B7  3001               	movlw	1
  6865  17B8  00E8               	movwf	??___fladd+4
  6866  17B9                     u3295:
  6867  17B9  0D67               	rlf	??___fladd+3,w
  6868  17BA  0CE7               	rrf	??___fladd+3,f
  6869  17BB  0CE6               	rrf	??___fladd+2,f
  6870  17BC  0CE5               	rrf	??___fladd+1,f
  6871  17BD  0CE4               	rrf	??___fladd,f
  6872  17BE                     u3290:
  6873  17BE  0BE8               	decfsz	??___fladd+4,f
  6874  17BF  2FB9               	goto	u3295
  6875  17C0  0867               	movf	??___fladd+3,w
  6876  17C1  00DF               	movwf	___fladd@b+3
  6877  17C2  0866               	movf	??___fladd+2,w
  6878  17C3  00DE               	movwf	___fladd@b+2
  6879  17C4  0865               	movf	??___fladd+1,w
  6880  17C5  00DD               	movwf	___fladd@b+1
  6881  17C6  0864               	movf	??___fladd,w
  6882  17C7  00DC               	movwf	___fladd@b
  6883  17C8  0A6E               	incf	___fladd@bexp,w
  6884  17C9  1903               	btfsc	3,2
  6885  17CA  2FCC               	goto	u3301
  6886  17CB  2FCD               	goto	u3300
  6887  17CC                     u3301:
  6888  17CC  2FD1               	goto	l664
  6889  17CD                     u3300:
  6890  17CD                     l2311:
  6891  17CD  3001               	movlw	1
  6892  17CE  00E4               	movwf	??___fladd
  6893  17CF  0864               	movf	??___fladd,w
  6894  17D0  07EE               	addwf	___fladd@bexp,f
  6895  17D1                     l664:
  6896  17D1  0A6E               	incf	___fladd@bexp,w
  6897  17D2  1903               	btfsc	3,2
  6898  17D3  2FD5               	goto	u3311
  6899  17D4  2FD6               	goto	u3310
  6900  17D5                     u3311:
  6901  17D5  2FDB               	goto	l2315
  6902  17D6                     u3310:
  6903  17D6                     l2313:
  6904  17D6  086E               	movf	___fladd@bexp,w
  6905  17D7  1D03               	btfss	3,2
  6906  17D8  2FDA               	goto	u3321
  6907  17D9  2FDB               	goto	u3320
  6908  17DA                     u3321:
  6909  17DA  2FE9               	goto	l2321
  6910  17DB                     u3320:
  6911  17DB                     l2315:
  6912  17DB  3000               	movlw	0
  6913  17DC  00DF               	movwf	___fladd@b+3
  6914  17DD  3000               	movlw	0
  6915  17DE  00DE               	movwf	___fladd@b+2
  6916  17DF  3000               	movlw	0
  6917  17E0  00DD               	movwf	___fladd@b+1
  6918  17E1  3000               	movlw	0
  6919  17E2  00DC               	movwf	___fladd@b
  6920  17E3                     l2317:
  6921  17E3  086E               	movf	___fladd@bexp,w
  6922  17E4  1D03               	btfss	3,2
  6923  17E5  2FE7               	goto	u3331
  6924  17E6  2FE8               	goto	u3330
  6925  17E7                     u3331:
  6926  17E7  2FE9               	goto	l2321
  6927  17E8                     u3330:
  6928  17E8                     l2319:
  6929  17E8  01EC               	clrf	___fladd@signs
  6930  17E9                     l2321:
  6931  17E9  1C6E               	btfss	___fladd@bexp,0
  6932  17EA  2FEC               	goto	u3341
  6933  17EB  2FED               	goto	u3340
  6934  17EC                     u3341:
  6935  17EC  2FEF               	goto	l2325
  6936  17ED                     u3340:
  6937  17ED                     l2323:
  6938  17ED  17DE               	bsf	___fladd@b+2,7
  6939  17EE  2FF3               	goto	l672
  6940  17EF                     l2325:
  6941  17EF  307F               	movlw	127
  6942  17F0  00E4               	movwf	??___fladd
  6943  17F1  0864               	movf	??___fladd,w
  6944  17F2  05DE               	andwf	___fladd@b+2,f
  6945  17F3                     l672:
  6946  17F3  086E               	movf	___fladd@bexp,w
  6947  17F4  00E4               	movwf	??___fladd
  6948  17F5  1003               	clrc
  6949  17F6  0C64               	rrf	??___fladd,w
  6950  17F7  00E5               	movwf	??___fladd+1
  6951  17F8  0865               	movf	??___fladd+1,w
  6952  17F9  00DF               	movwf	___fladd@b+3
  6953  17FA                     l2327:
  6954  17FA  1FEC               	btfss	___fladd@signs,7
  6955  17FB  2FFD               	goto	u3351
  6956  17FC  2FFE               	goto	u3350
  6957  17FD                     u3351:
  6958  17FD  2FFF               	goto	l673
  6959  17FE                     u3350:
  6960  17FE                     l2329:
  6961  17FE  17DF               	bsf	___fladd@b+3,7
  6962  17FF                     l673:
  6963  17FF                     l643:
  6964  17FF  0008               	return
  6965  1800                     __end_of___fladd:
  6966                           
  6967                           	psect	text15
  6968  07F0                     __ptext15:	
  6969 ;; *************** function ___flneg *****************
  6970 ;; Defined at:
  6971 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  f1              4    0[BANK0 ] unsigned char 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;		None
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  4    0[BANK0 ] unsigned char 
  6978 ;; Registers used:
  6979 ;;		wreg
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6985 ;;      Params:         0       4       0       0       0
  6986 ;;      Locals:         0       0       0       0       0
  6987 ;;      Temps:          0       0       0       0       0
  6988 ;;      Totals:         0       4       0       0       0
  6989 ;;Total ram usage:        4 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; Hardware stack levels required when called:    1
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_sprintf
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           
  7000                           ;psect for function ___flneg
  7001  07F0                     ___flneg:
  7002  07F0                     l3541:	
  7003                           ;incstack = 0
  7004                           ; Regs used in ___flneg: [wreg]
  7005                           
  7006  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  7007  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  7008  07F2  0823               	movf	___flneg@f1+3,w
  7009  07F3  0422               	iorwf	___flneg@f1+2,w
  7010  07F4  0421               	iorwf	___flneg@f1+1,w
  7011  07F5  0420               	iorwf	___flneg@f1,w
  7012  07F6  1903               	skipnz
  7013  07F7  2FF9               	goto	u6261
  7014  07F8  2FFA               	goto	u6260
  7015  07F9                     u6261:
  7016  07F9  2FFC               	goto	l3545
  7017  07FA                     u6260:
  7018  07FA                     l3543:
  7019  07FA  3080               	movlw	128
  7020  07FB  06A3               	xorwf	___flneg@f1+3,f
  7021  07FC                     l3545:
  7022  07FC                     l502:
  7023  07FC  0008               	return
  7024  07FD                     __end_of___flneg:
  7025                           
  7026                           	psect	text16
  7027  120B                     __ptext16:	
  7028 ;; *************** function ___flge *****************
  7029 ;; Defined at:
  7030 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  ff1             4    0[BANK0 ] unsigned char 
  7033 ;;  ff2             4    4[BANK0 ] unsigned char 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;		None               void
  7038 ;; Registers used:
  7039 ;;		wreg, status,2, status,0
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7045 ;;      Params:         0       8       0       0       0
  7046 ;;      Locals:         0       0       0       0       0
  7047 ;;      Temps:          0       4       0       0       0
  7048 ;;      Totals:         0      12       0       0       0
  7049 ;;Total ram usage:       12 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:    1
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_sprintf
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           
  7060                           ;psect for function ___flge
  7061  120B                     ___flge:
  7062  120B                     l3521:	
  7063                           ;incstack = 0
  7064                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7065                           
  7066  120B  3000               	movlw	0
  7067  120C  1283               	bcf	3,5	;RP0=0, select bank0
  7068  120D  1303               	bcf	3,6	;RP1=0, select bank0
  7069  120E  0520               	andwf	___flge@ff1,w
  7070  120F  00A8               	movwf	??___flge
  7071  1210  3000               	movlw	0
  7072  1211  0521               	andwf	___flge@ff1+1,w
  7073  1212  00A9               	movwf	??___flge+1
  7074  1213  3080               	movlw	128
  7075  1214  0522               	andwf	___flge@ff1+2,w
  7076  1215  00AA               	movwf	??___flge+2
  7077  1216  307F               	movlw	127
  7078  1217  0523               	andwf	___flge@ff1+3,w
  7079  1218  00AB               	movwf	??___flge+3
  7080  1219  082B               	movf	??___flge+3,w
  7081  121A  042A               	iorwf	??___flge+2,w
  7082  121B  0429               	iorwf	??___flge+1,w
  7083  121C  0428               	iorwf	??___flge,w
  7084  121D  1D03               	skipz
  7085  121E  2A20               	goto	u6191
  7086  121F  2A21               	goto	u6190
  7087  1220                     u6191:
  7088  1220  2A29               	goto	l494
  7089  1221                     u6190:
  7090  1221                     l3523:
  7091  1221  3000               	movlw	0
  7092  1222  00A3               	movwf	___flge@ff1+3
  7093  1223  3000               	movlw	0
  7094  1224  00A2               	movwf	___flge@ff1+2
  7095  1225  3000               	movlw	0
  7096  1226  00A1               	movwf	___flge@ff1+1
  7097  1227  3000               	movlw	0
  7098  1228  00A0               	movwf	___flge@ff1
  7099  1229                     l494:
  7100  1229  3000               	movlw	0
  7101  122A  0524               	andwf	___flge@ff2,w
  7102  122B  00A8               	movwf	??___flge
  7103  122C  3000               	movlw	0
  7104  122D  0525               	andwf	___flge@ff2+1,w
  7105  122E  00A9               	movwf	??___flge+1
  7106  122F  3080               	movlw	128
  7107  1230  0526               	andwf	___flge@ff2+2,w
  7108  1231  00AA               	movwf	??___flge+2
  7109  1232  307F               	movlw	127
  7110  1233  0527               	andwf	___flge@ff2+3,w
  7111  1234  00AB               	movwf	??___flge+3
  7112  1235  082B               	movf	??___flge+3,w
  7113  1236  042A               	iorwf	??___flge+2,w
  7114  1237  0429               	iorwf	??___flge+1,w
  7115  1238  0428               	iorwf	??___flge,w
  7116  1239  1D03               	skipz
  7117  123A  2A3C               	goto	u6201
  7118  123B  2A3D               	goto	u6200
  7119  123C                     u6201:
  7120  123C  2A45               	goto	l3527
  7121  123D                     u6200:
  7122  123D                     l3525:
  7123  123D  3000               	movlw	0
  7124  123E  00A7               	movwf	___flge@ff2+3
  7125  123F  3000               	movlw	0
  7126  1240  00A6               	movwf	___flge@ff2+2
  7127  1241  3000               	movlw	0
  7128  1242  00A5               	movwf	___flge@ff2+1
  7129  1243  3000               	movlw	0
  7130  1244  00A4               	movwf	___flge@ff2
  7131  1245                     l3527:
  7132  1245  1FA3               	btfss	___flge@ff1+3,7
  7133  1246  2A48               	goto	u6211
  7134  1247  2A49               	goto	u6210
  7135  1248                     u6211:
  7136  1248  2A6D               	goto	l3531
  7137  1249                     u6210:
  7138  1249                     l3529:
  7139  1249  3000               	movlw	0
  7140  124A  00A8               	movwf	??___flge
  7141  124B  3000               	movlw	0
  7142  124C  00A9               	movwf	??___flge+1
  7143  124D  3000               	movlw	0
  7144  124E  00AA               	movwf	??___flge+2
  7145  124F  3080               	movlw	128
  7146  1250  00AB               	movwf	??___flge+3
  7147  1251  0820               	movf	___flge@ff1,w
  7148  1252  02A8               	subwf	??___flge,f
  7149  1253  0821               	movf	___flge@ff1+1,w
  7150  1254  1C03               	skipc
  7151  1255  0F21               	incfsz	___flge@ff1+1,w
  7152  1256  2A58               	goto	u6221
  7153  1257  2A59               	goto	u6222
  7154  1258                     u6221:
  7155  1258  02A9               	subwf	??___flge+1,f
  7156  1259                     u6222:
  7157  1259  0822               	movf	___flge@ff1+2,w
  7158  125A  1C03               	skipc
  7159  125B  0F22               	incfsz	___flge@ff1+2,w
  7160  125C  2A5E               	goto	u6223
  7161  125D  2A5F               	goto	u6224
  7162  125E                     u6223:
  7163  125E  02AA               	subwf	??___flge+2,f
  7164  125F                     u6224:
  7165  125F  0823               	movf	___flge@ff1+3,w
  7166  1260  1C03               	skipc
  7167  1261  0F23               	incfsz	___flge@ff1+3,w
  7168  1262  2A64               	goto	u6225
  7169  1263  2A65               	goto	u6226
  7170  1264                     u6225:
  7171  1264  02AB               	subwf	??___flge+3,f
  7172  1265                     u6226:
  7173  1265  082B               	movf	??___flge+3,w
  7174  1266  00A3               	movwf	___flge@ff1+3
  7175  1267  082A               	movf	??___flge+2,w
  7176  1268  00A2               	movwf	___flge@ff1+2
  7177  1269  0829               	movf	??___flge+1,w
  7178  126A  00A1               	movwf	___flge@ff1+1
  7179  126B  0828               	movf	??___flge,w
  7180  126C  00A0               	movwf	___flge@ff1
  7181  126D                     l3531:
  7182  126D  1FA7               	btfss	___flge@ff2+3,7
  7183  126E  2A70               	goto	u6231
  7184  126F  2A71               	goto	u6230
  7185  1270                     u6231:
  7186  1270  2A95               	goto	l497
  7187  1271                     u6230:
  7188  1271                     l3533:
  7189  1271  3000               	movlw	0
  7190  1272  00A8               	movwf	??___flge
  7191  1273  3000               	movlw	0
  7192  1274  00A9               	movwf	??___flge+1
  7193  1275  3000               	movlw	0
  7194  1276  00AA               	movwf	??___flge+2
  7195  1277  3080               	movlw	128
  7196  1278  00AB               	movwf	??___flge+3
  7197  1279  0824               	movf	___flge@ff2,w
  7198  127A  02A8               	subwf	??___flge,f
  7199  127B  0825               	movf	___flge@ff2+1,w
  7200  127C  1C03               	skipc
  7201  127D  0F25               	incfsz	___flge@ff2+1,w
  7202  127E  2A80               	goto	u6241
  7203  127F  2A81               	goto	u6242
  7204  1280                     u6241:
  7205  1280  02A9               	subwf	??___flge+1,f
  7206  1281                     u6242:
  7207  1281  0826               	movf	___flge@ff2+2,w
  7208  1282  1C03               	skipc
  7209  1283  0F26               	incfsz	___flge@ff2+2,w
  7210  1284  2A86               	goto	u6243
  7211  1285  2A87               	goto	u6244
  7212  1286                     u6243:
  7213  1286  02AA               	subwf	??___flge+2,f
  7214  1287                     u6244:
  7215  1287  0827               	movf	___flge@ff2+3,w
  7216  1288  1C03               	skipc
  7217  1289  0F27               	incfsz	___flge@ff2+3,w
  7218  128A  2A8C               	goto	u6245
  7219  128B  2A8D               	goto	u6246
  7220  128C                     u6245:
  7221  128C  02AB               	subwf	??___flge+3,f
  7222  128D                     u6246:
  7223  128D  082B               	movf	??___flge+3,w
  7224  128E  00A7               	movwf	___flge@ff2+3
  7225  128F  082A               	movf	??___flge+2,w
  7226  1290  00A6               	movwf	___flge@ff2+2
  7227  1291  0829               	movf	??___flge+1,w
  7228  1292  00A5               	movwf	___flge@ff2+1
  7229  1293  0828               	movf	??___flge,w
  7230  1294  00A4               	movwf	___flge@ff2
  7231  1295                     l497:
  7232  1295  3080               	movlw	128
  7233  1296  06A3               	xorwf	___flge@ff1+3,f
  7234  1297  3080               	movlw	128
  7235  1298  06A7               	xorwf	___flge@ff2+3,f
  7236  1299  0827               	movf	___flge@ff2+3,w
  7237  129A  0223               	subwf	___flge@ff1+3,w
  7238  129B  1D03               	skipz
  7239  129C  2AA7               	goto	u6255
  7240  129D  0826               	movf	___flge@ff2+2,w
  7241  129E  0222               	subwf	___flge@ff1+2,w
  7242  129F  1D03               	skipz
  7243  12A0  2AA7               	goto	u6255
  7244  12A1  0825               	movf	___flge@ff2+1,w
  7245  12A2  0221               	subwf	___flge@ff1+1,w
  7246  12A3  1D03               	skipz
  7247  12A4  2AA7               	goto	u6255
  7248  12A5  0824               	movf	___flge@ff2,w
  7249  12A6  0220               	subwf	___flge@ff1,w
  7250  12A7                     u6255:
  7251  12A7  1803               	skipnc
  7252  12A8  2AAA               	goto	u6251
  7253  12A9  2AAB               	goto	u6250
  7254  12AA                     u6251:
  7255  12AA  2AAD               	goto	l3537
  7256  12AB                     u6250:
  7257  12AB                     l3535:
  7258  12AB  1003               	clrc
  7259  12AC  2AAE               	goto	l498
  7260  12AD                     l3537:
  7261  12AD  1403               	setc
  7262  12AE                     l498:
  7263  12AE  0008               	return
  7264  12AF                     __end_of___flge:
  7265                           
  7266                           	psect	text17
  7267  1EAF                     __ptext17:	
  7268 ;; *************** function ___fleq *****************
  7269 ;; Defined at:
  7270 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;  ff1             4    0[BANK0 ] unsigned char 
  7273 ;;  ff2             4    4[BANK0 ] unsigned char 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;		None               void
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7285 ;;      Params:         0       8       0       0       0
  7286 ;;      Locals:         0       0       0       0       0
  7287 ;;      Temps:          0       4       0       0       0
  7288 ;;      Totals:         0      12       0       0       0
  7289 ;;Total ram usage:       12 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    1
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_sprintf
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function ___fleq
  7301  1EAF                     ___fleq:
  7302  1EAF                     l3509:	
  7303                           ;incstack = 0
  7304                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7305                           
  7306  1EAF  3000               	movlw	0
  7307  1EB0  1283               	bcf	3,5	;RP0=0, select bank0
  7308  1EB1  1303               	bcf	3,6	;RP1=0, select bank0
  7309  1EB2  0520               	andwf	___fleq@ff1,w
  7310  1EB3  00A8               	movwf	??___fleq
  7311  1EB4  3000               	movlw	0
  7312  1EB5  0521               	andwf	___fleq@ff1+1,w
  7313  1EB6  00A9               	movwf	??___fleq+1
  7314  1EB7  3080               	movlw	128
  7315  1EB8  0522               	andwf	___fleq@ff1+2,w
  7316  1EB9  00AA               	movwf	??___fleq+2
  7317  1EBA  307F               	movlw	127
  7318  1EBB  0523               	andwf	___fleq@ff1+3,w
  7319  1EBC  00AB               	movwf	??___fleq+3
  7320  1EBD  082B               	movf	??___fleq+3,w
  7321  1EBE  042A               	iorwf	??___fleq+2,w
  7322  1EBF  0429               	iorwf	??___fleq+1,w
  7323  1EC0  0428               	iorwf	??___fleq,w
  7324  1EC1  1D03               	skipz
  7325  1EC2  2EC4               	goto	u6161
  7326  1EC3  2EC5               	goto	u6160
  7327  1EC4                     u6161:
  7328  1EC4  2ECD               	goto	l489
  7329  1EC5                     u6160:
  7330  1EC5                     l3511:
  7331  1EC5  3000               	movlw	0
  7332  1EC6  00A3               	movwf	___fleq@ff1+3
  7333  1EC7  3000               	movlw	0
  7334  1EC8  00A2               	movwf	___fleq@ff1+2
  7335  1EC9  3000               	movlw	0
  7336  1ECA  00A1               	movwf	___fleq@ff1+1
  7337  1ECB  3000               	movlw	0
  7338  1ECC  00A0               	movwf	___fleq@ff1
  7339  1ECD                     l489:
  7340  1ECD  3000               	movlw	0
  7341  1ECE  0524               	andwf	___fleq@ff2,w
  7342  1ECF  00A8               	movwf	??___fleq
  7343  1ED0  3000               	movlw	0
  7344  1ED1  0525               	andwf	___fleq@ff2+1,w
  7345  1ED2  00A9               	movwf	??___fleq+1
  7346  1ED3  3080               	movlw	128
  7347  1ED4  0526               	andwf	___fleq@ff2+2,w
  7348  1ED5  00AA               	movwf	??___fleq+2
  7349  1ED6  307F               	movlw	127
  7350  1ED7  0527               	andwf	___fleq@ff2+3,w
  7351  1ED8  00AB               	movwf	??___fleq+3
  7352  1ED9  082B               	movf	??___fleq+3,w
  7353  1EDA  042A               	iorwf	??___fleq+2,w
  7354  1EDB  0429               	iorwf	??___fleq+1,w
  7355  1EDC  0428               	iorwf	??___fleq,w
  7356  1EDD  1D03               	skipz
  7357  1EDE  2EE0               	goto	u6171
  7358  1EDF  2EE1               	goto	u6170
  7359  1EE0                     u6171:
  7360  1EE0  2EE9               	goto	l490
  7361  1EE1                     u6170:
  7362  1EE1                     l3513:
  7363  1EE1  3000               	movlw	0
  7364  1EE2  00A7               	movwf	___fleq@ff2+3
  7365  1EE3  3000               	movlw	0
  7366  1EE4  00A6               	movwf	___fleq@ff2+2
  7367  1EE5  3000               	movlw	0
  7368  1EE6  00A5               	movwf	___fleq@ff2+1
  7369  1EE7  3000               	movlw	0
  7370  1EE8  00A4               	movwf	___fleq@ff2
  7371  1EE9                     l490:
  7372  1EE9  0827               	movf	___fleq@ff2+3,w
  7373  1EEA  0623               	xorwf	___fleq@ff1+3,w
  7374  1EEB  1D03               	skipz
  7375  1EEC  2EF7               	goto	u6185
  7376  1EED  0826               	movf	___fleq@ff2+2,w
  7377  1EEE  0622               	xorwf	___fleq@ff1+2,w
  7378  1EEF  1D03               	skipz
  7379  1EF0  2EF7               	goto	u6185
  7380  1EF1  0825               	movf	___fleq@ff2+1,w
  7381  1EF2  0621               	xorwf	___fleq@ff1+1,w
  7382  1EF3  1D03               	skipz
  7383  1EF4  2EF7               	goto	u6185
  7384  1EF5  0824               	movf	___fleq@ff2,w
  7385  1EF6  0620               	xorwf	___fleq@ff1,w
  7386  1EF7                     u6185:
  7387  1EF7  1903               	skipnz
  7388  1EF8  2EFA               	goto	u6181
  7389  1EF9  2EFB               	goto	u6180
  7390  1EFA                     u6181:
  7391  1EFA  2EFD               	goto	l3517
  7392  1EFB                     u6180:
  7393  1EFB                     l3515:
  7394  1EFB  1003               	clrc
  7395  1EFC  2EFE               	goto	l491
  7396  1EFD                     l3517:
  7397  1EFD  1403               	setc
  7398  1EFE                     l491:
  7399  1EFE  0008               	return
  7400  1EFF                     __end_of___fleq:
  7401                           
  7402                           	psect	text18
  7403  1099                     __ptext18:	
  7404 ;; *************** function _send_crct *****************
  7405 ;; Defined at:
  7406 ;;		line 172 in file "main5a.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;  st              1    wreg     PTR unsigned char 
  7409 ;;		 -> f1(10), 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;  st              1    2[BANK0 ] PTR unsigned char 
  7412 ;;		 -> f1(10), 
  7413 ;;  i               2    0[BANK0 ] int 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      void 
  7416 ;; Registers used:
  7417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7423 ;;      Params:         0       0       0       0       0
  7424 ;;      Locals:         0       3       0       0       0
  7425 ;;      Temps:          1       0       0       0       0
  7426 ;;      Totals:         1       3       0       0       0
  7427 ;;Total ram usage:        4 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:    2
  7430 ;; This function calls:
  7431 ;;		_send_char
  7432 ;; This function is called by:
  7433 ;;		_main
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           
  7438                           ;psect for function _send_crct
  7439  1099                     _send_crct:
  7440                           
  7441                           ;incstack = 0
  7442                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7443                           ;send_crct@st stored from wreg
  7444  1099  1283               	bcf	3,5	;RP0=0, select bank0
  7445  109A  1303               	bcf	3,6	;RP1=0, select bank0
  7446  109B  00A2               	movwf	send_crct@st
  7447  109C                     l3045:
  7448                           
  7449                           ;main5a.c: 173:     int i = 0;
  7450  109C  01A0               	clrf	send_crct@i
  7451  109D  01A1               	clrf	send_crct@i+1
  7452                           
  7453                           ;main5a.c: 174:     while (st[i] != 0){
  7454  109E  28B2               	goto	l3051
  7455  109F                     l3047:
  7456                           
  7457                           ;main5a.c: 175:         send_char(st[i]);
  7458  109F  0820               	movf	send_crct@i,w
  7459  10A0  0722               	addwf	send_crct@st,w
  7460  10A1  00F6               	movwf	??_send_crct
  7461  10A2  0876               	movf	??_send_crct,w
  7462  10A3  0084               	movwf	4
  7463  10A4  0800               	movf	0,w
  7464  10A5  160A  158A  2516  160A  118A  	fcall	_send_char
  7465  10AA                     l3049:
  7466                           
  7467                           ;main5a.c: 176:         i++;
  7468  10AA  3001               	movlw	1
  7469  10AB  1283               	bcf	3,5	;RP0=0, select bank0
  7470  10AC  1303               	bcf	3,6	;RP1=0, select bank0
  7471  10AD  07A0               	addwf	send_crct@i,f
  7472  10AE  1803               	skipnc
  7473  10AF  0AA1               	incf	send_crct@i+1,f
  7474  10B0  3000               	movlw	0
  7475  10B1  07A1               	addwf	send_crct@i+1,f
  7476  10B2                     l3051:
  7477                           
  7478                           ;main5a.c: 174:     while (st[i] != 0){
  7479  10B2  0820               	movf	send_crct@i,w
  7480  10B3  0722               	addwf	send_crct@st,w
  7481  10B4  00F6               	movwf	??_send_crct
  7482  10B5  0876               	movf	??_send_crct,w
  7483  10B6  0084               	movwf	4
  7484  10B7  1383               	bcf	3,7	;select IRP bank0
  7485  10B8  0800               	movf	0,w
  7486  10B9  1D03               	btfss	3,2
  7487  10BA  28BC               	goto	u5041
  7488  10BB  28BD               	goto	u5040
  7489  10BC                     u5041:
  7490  10BC  289F               	goto	l3047
  7491  10BD                     u5040:
  7492  10BD                     l124:
  7493  10BD  0008               	return
  7494  10BE                     __end_of_send_crct:
  7495                           
  7496                           	psect	text19
  7497  1D16                     __ptext19:	
  7498 ;; *************** function _send_char *****************
  7499 ;; Defined at:
  7500 ;;		line 179 in file "main5a.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  dato            1    wreg     unsigned char 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;  dato            1    5[COMMON] unsigned char 
  7505 ;; Return value:  Size  Location     Type
  7506 ;;                  1    wreg      void 
  7507 ;; Registers used:
  7508 ;;		wreg
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7514 ;;      Params:         0       0       0       0       0
  7515 ;;      Locals:         1       0       0       0       0
  7516 ;;      Temps:          0       0       0       0       0
  7517 ;;      Totals:         1       0       0       0       0
  7518 ;;Total ram usage:        1 bytes
  7519 ;; Hardware stack levels used:    1
  7520 ;; Hardware stack levels required when called:    1
  7521 ;; This function calls:
  7522 ;;		Nothing
  7523 ;; This function is called by:
  7524 ;;		_send_crct
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           
  7529                           ;psect for function _send_char
  7530  1D16                     _send_char:
  7531                           
  7532                           ;incstack = 0
  7533                           ; Regs used in _send_char: [wreg]
  7534                           ;send_char@dato stored from wreg
  7535  1D16  00F5               	movwf	send_char@dato
  7536  1D17                     l2471:
  7537  1D17                     l127:	
  7538                           ;main5a.c: 180:     while(!TXIF);
  7539                           
  7540  1D17  1283               	bcf	3,5	;RP0=0, select bank0
  7541  1D18  1303               	bcf	3,6	;RP1=0, select bank0
  7542  1D19  1E0C               	btfss	12,4	;volatile
  7543  1D1A  2D1C               	goto	u3731
  7544  1D1B  2D1D               	goto	u3730
  7545  1D1C                     u3731:
  7546  1D1C  2D17               	goto	l127
  7547  1D1D                     u3730:
  7548  1D1D                     l2473:
  7549                           
  7550                           ;main5a.c: 181:     TXREG = dato;
  7551  1D1D  0875               	movf	send_char@dato,w
  7552  1D1E  0099               	movwf	25	;volatile
  7553  1D1F                     l130:
  7554  1D1F  0008               	return
  7555  1D20                     __end_of_send_char:
  7556                           
  7557                           	psect	text20
  7558  1DC2                     __ptext20:	
  7559 ;; *************** function _conv2 *****************
  7560 ;; Defined at:
  7561 ;;		line 188 in file "main5a.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  aa              4   70[BANK0 ] float 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  res             2   74[BANK0 ] int 
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  2   70[BANK0 ] int 
  7568 ;; Registers used:
  7569 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7575 ;;      Params:         0       4       0       0       0
  7576 ;;      Locals:         0       2       0       0       0
  7577 ;;      Temps:          0       0       0       0       0
  7578 ;;      Totals:         0       6       0       0       0
  7579 ;;Total ram usage:        6 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; Hardware stack levels required when called:    3
  7582 ;; This function calls:
  7583 ;;		___flmul
  7584 ;;		___fltol
  7585 ;; This function is called by:
  7586 ;;		_main
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           
  7591                           ;psect for function _conv2
  7592  1DC2                     _conv2:
  7593  1DC2                     l3599:	
  7594                           ;incstack = 0
  7595                           ; Regs used in _conv2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7596                           
  7597                           
  7598                           ;main5a.c: 189:     int res;;main5a.c: 190:     res = aa*1;
  7599  1DC2  1283               	bcf	3,5	;RP0=0, select bank0
  7600  1DC3  1303               	bcf	3,6	;RP1=0, select bank0
  7601  1DC4  0869               	movf	conv2@aa+3,w
  7602  1DC5  00B5               	movwf	___flmul@a+3
  7603  1DC6  0868               	movf	conv2@aa+2,w
  7604  1DC7  00B4               	movwf	___flmul@a+2
  7605  1DC8  0867               	movf	conv2@aa+1,w
  7606  1DC9  00B3               	movwf	___flmul@a+1
  7607  1DCA  0866               	movf	conv2@aa,w
  7608  1DCB  00B2               	movwf	___flmul@a
  7609  1DCC  303F               	movlw	63
  7610  1DCD  00B1               	movwf	___flmul@b+3
  7611  1DCE  3080               	movlw	128
  7612  1DCF  00B0               	movwf	___flmul@b+2
  7613  1DD0  3000               	movlw	0
  7614  1DD1  00AF               	movwf	___flmul@b+1
  7615  1DD2  3000               	movlw	0
  7616  1DD3  00AE               	movwf	___flmul@b
  7617  1DD4  120A  158A  213C  160A  158A  	fcall	___flmul
  7618  1DD9  1283               	bcf	3,5	;RP0=0, select bank0
  7619  1DDA  1303               	bcf	3,6	;RP1=0, select bank0
  7620  1DDB  0831               	movf	?___flmul+3,w
  7621  1DDC  00DE               	movwf	___fltol@f1+3
  7622  1DDD  0830               	movf	?___flmul+2,w
  7623  1DDE  00DD               	movwf	___fltol@f1+2
  7624  1DDF  082F               	movf	?___flmul+1,w
  7625  1DE0  00DC               	movwf	___fltol@f1+1
  7626  1DE1  082E               	movf	?___flmul,w
  7627  1DE2  00DB               	movwf	___fltol@f1
  7628  1DE3  160A  118A  218F  160A  158A  	fcall	___fltol
  7629  1DE8  1283               	bcf	3,5	;RP0=0, select bank0
  7630  1DE9  1303               	bcf	3,6	;RP1=0, select bank0
  7631  1DEA  085C               	movf	?___fltol+1,w
  7632  1DEB  00EB               	movwf	conv2@res+1
  7633  1DEC  085B               	movf	?___fltol,w
  7634  1DED  00EA               	movwf	conv2@res
  7635  1DEE                     l3601:
  7636                           
  7637                           ;main5a.c: 191:     return res;
  7638  1DEE  086B               	movf	conv2@res+1,w
  7639  1DEF  00E7               	movwf	?_conv2+1
  7640  1DF0  086A               	movf	conv2@res,w
  7641  1DF1  00E6               	movwf	?_conv2
  7642  1DF2                     l136:
  7643  1DF2  0008               	return
  7644  1DF3                     __end_of_conv2:
  7645                           
  7646                           	psect	text21
  7647  118F                     __ptext21:	
  7648 ;; *************** function ___fltol *****************
  7649 ;; Defined at:
  7650 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  f1              4   59[BANK0 ] int 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  exp1            1   69[BANK0 ] unsigned char 
  7655 ;;  sign1           1   68[BANK0 ] unsigned char 
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  4   59[BANK0 ] long 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7665 ;;      Params:         0       4       0       0       0
  7666 ;;      Locals:         0       2       0       0       0
  7667 ;;      Temps:          0       5       0       0       0
  7668 ;;      Totals:         0      11       0       0       0
  7669 ;;Total ram usage:       11 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; Hardware stack levels required when called:    1
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_conv2
  7676 ;;		_sprintf
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           
  7681                           ;psect for function ___fltol
  7682  118F                     ___fltol:
  7683  118F                     l2715:	
  7684                           ;incstack = 0
  7685                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7686                           
  7687  118F  1003               	clrc
  7688  1190  1283               	bcf	3,5	;RP0=0, select bank0
  7689  1191  1303               	bcf	3,6	;RP1=0, select bank0
  7690  1192  0D5D               	rlf	___fltol@f1+2,w
  7691  1193  0D5E               	rlf	___fltol@f1+3,w
  7692  1194  00DF               	movwf	??___fltol
  7693  1195  085F               	movf	??___fltol,w
  7694  1196  00E5               	movwf	___fltol@exp1
  7695  1197  0865               	movf	___fltol@exp1,w
  7696  1198  1D03               	btfss	3,2
  7697  1199  299B               	goto	u4471
  7698  119A  299C               	goto	u4470
  7699  119B                     u4471:
  7700  119B  29A5               	goto	l2721
  7701  119C                     u4470:
  7702  119C                     l2717:
  7703  119C  3000               	movlw	0
  7704  119D  00DE               	movwf	?___fltol+3
  7705  119E  3000               	movlw	0
  7706  119F  00DD               	movwf	?___fltol+2
  7707  11A0  3000               	movlw	0
  7708  11A1  00DC               	movwf	?___fltol+1
  7709  11A2  3000               	movlw	0
  7710  11A3  00DB               	movwf	?___fltol
  7711  11A4  2A0A               	goto	l506
  7712  11A5                     l2721:
  7713  11A5  085B               	movf	___fltol@f1,w
  7714  11A6  00DF               	movwf	??___fltol
  7715  11A7  085C               	movf	___fltol@f1+1,w
  7716  11A8  00E0               	movwf	??___fltol+1
  7717  11A9  085D               	movf	___fltol@f1+2,w
  7718  11AA  00E1               	movwf	??___fltol+2
  7719  11AB  085E               	movf	___fltol@f1+3,w
  7720  11AC  00E2               	movwf	??___fltol+3
  7721  11AD  301F               	movlw	31
  7722  11AE                     u4485:
  7723  11AE  1003               	clrc
  7724  11AF  0CE2               	rrf	??___fltol+3,f
  7725  11B0  0CE1               	rrf	??___fltol+2,f
  7726  11B1  0CE0               	rrf	??___fltol+1,f
  7727  11B2  0CDF               	rrf	??___fltol,f
  7728  11B3                     u4480:
  7729  11B3  3EFF               	addlw	-1
  7730  11B4  1D03               	skipz
  7731  11B5  29AE               	goto	u4485
  7732  11B6  085F               	movf	??___fltol,w
  7733  11B7  00E3               	movwf	??___fltol+4
  7734  11B8  0863               	movf	??___fltol+4,w
  7735  11B9  00E4               	movwf	___fltol@sign1
  7736  11BA                     l2723:
  7737  11BA  17DD               	bsf	___fltol@f1+2,7
  7738  11BB                     l2725:
  7739  11BB  30FF               	movlw	255
  7740  11BC  05DB               	andwf	___fltol@f1,f
  7741  11BD  30FF               	movlw	255
  7742  11BE  05DC               	andwf	___fltol@f1+1,f
  7743  11BF  30FF               	movlw	255
  7744  11C0  05DD               	andwf	___fltol@f1+2,f
  7745  11C1  3000               	movlw	0
  7746  11C2  05DE               	andwf	___fltol@f1+3,f
  7747  11C3                     l2727:
  7748  11C3  3096               	movlw	150
  7749  11C4  02E5               	subwf	___fltol@exp1,f
  7750  11C5                     l2729:
  7751  11C5  1FE5               	btfss	___fltol@exp1,7
  7752  11C6  29C8               	goto	u4491
  7753  11C7  29C9               	goto	u4490
  7754  11C8                     u4491:
  7755  11C8  29E3               	goto	l2739
  7756  11C9                     u4490:
  7757  11C9                     l2731:
  7758  11C9  0865               	movf	___fltol@exp1,w
  7759  11CA  3A80               	xorlw	128
  7760  11CB  3E97               	addlw	151
  7761  11CC  1803               	skipnc
  7762  11CD  29CF               	goto	u4501
  7763  11CE  29D0               	goto	u4500
  7764  11CF                     u4501:
  7765  11CF  29D1               	goto	l2737
  7766  11D0                     u4500:
  7767  11D0  299C               	goto	l2717
  7768  11D1                     l2737:
  7769  11D1  3001               	movlw	1
  7770  11D2                     u4515:
  7771  11D2  1003               	clrc
  7772  11D3  0CDE               	rrf	___fltol@f1+3,f
  7773  11D4  0CDD               	rrf	___fltol@f1+2,f
  7774  11D5  0CDC               	rrf	___fltol@f1+1,f
  7775  11D6  0CDB               	rrf	___fltol@f1,f
  7776  11D7  3EFF               	addlw	-1
  7777  11D8  1D03               	skipz
  7778  11D9  29D2               	goto	u4515
  7779  11DA  3001               	movlw	1
  7780  11DB  00DF               	movwf	??___fltol
  7781  11DC  085F               	movf	??___fltol,w
  7782  11DD  07E5               	addwf	___fltol@exp1,f
  7783  11DE  1D03               	btfss	3,2
  7784  11DF  29E1               	goto	u4521
  7785  11E0  29E2               	goto	u4520
  7786  11E1                     u4521:
  7787  11E1  29D1               	goto	l2737
  7788  11E2                     u4520:
  7789  11E2  29FA               	goto	l2747
  7790  11E3                     l2739:
  7791  11E3  3020               	movlw	32
  7792  11E4  0265               	subwf	___fltol@exp1,w
  7793  11E5  1C03               	skipc
  7794  11E6  29E8               	goto	u4531
  7795  11E7  29E9               	goto	u4530
  7796  11E8                     u4531:
  7797  11E8  29F5               	goto	l513
  7798  11E9                     u4530:
  7799  11E9  299C               	goto	l2717
  7800  11EA                     l2745:
  7801  11EA  3001               	movlw	1
  7802  11EB  00DF               	movwf	??___fltol
  7803  11EC                     u4545:
  7804  11EC  1003               	clrc
  7805  11ED  0DDB               	rlf	___fltol@f1,f
  7806  11EE  0DDC               	rlf	___fltol@f1+1,f
  7807  11EF  0DDD               	rlf	___fltol@f1+2,f
  7808  11F0  0DDE               	rlf	___fltol@f1+3,f
  7809  11F1  0BDF               	decfsz	??___fltol,f
  7810  11F2  29EC               	goto	u4545
  7811  11F3  3001               	movlw	1
  7812  11F4  02E5               	subwf	___fltol@exp1,f
  7813  11F5                     l513:
  7814  11F5  0865               	movf	___fltol@exp1,w
  7815  11F6  1D03               	btfss	3,2
  7816  11F7  29F9               	goto	u4551
  7817  11F8  29FA               	goto	u4550
  7818  11F9                     u4551:
  7819  11F9  29EA               	goto	l2745
  7820  11FA                     u4550:
  7821  11FA                     l2747:
  7822  11FA  0864               	movf	___fltol@sign1,w
  7823  11FB  1903               	btfsc	3,2
  7824  11FC  29FE               	goto	u4561
  7825  11FD  29FF               	goto	u4560
  7826  11FE                     u4561:
  7827  11FE  2A0A               	goto	l516
  7828  11FF                     u4560:
  7829  11FF                     l2749:
  7830  11FF  09DB               	comf	___fltol@f1,f
  7831  1200  09DC               	comf	___fltol@f1+1,f
  7832  1201  09DD               	comf	___fltol@f1+2,f
  7833  1202  09DE               	comf	___fltol@f1+3,f
  7834  1203  0ADB               	incf	___fltol@f1,f
  7835  1204  1903               	skipnz
  7836  1205  0ADC               	incf	___fltol@f1+1,f
  7837  1206  1903               	skipnz
  7838  1207  0ADD               	incf	___fltol@f1+2,f
  7839  1208  1903               	skipnz
  7840  1209  0ADE               	incf	___fltol@f1+3,f
  7841  120A                     l516:
  7842  120A                     l506:
  7843  120A  0008               	return
  7844  120B                     __end_of___fltol:
  7845                           
  7846                           	psect	text22
  7847  093C                     __ptext22:	
  7848 ;; *************** function ___flmul *****************
  7849 ;; Defined at:
  7850 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;  b               4   14[BANK0 ] long 
  7853 ;;  a               4   18[BANK0 ] long 
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;  prod            4   34[BANK0 ] struct .
  7856 ;;  grs             4   29[BANK0 ] unsigned long 
  7857 ;;  temp            2   38[BANK0 ] struct .
  7858 ;;  bexp            1   33[BANK0 ] unsigned char 
  7859 ;;  aexp            1   28[BANK0 ] unsigned char 
  7860 ;;  sign            1   27[BANK0 ] unsigned char 
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  4   14[BANK0 ] unsigned char 
  7863 ;; Registers used:
  7864 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7870 ;;      Params:         0       8       0       0       0
  7871 ;;      Locals:         0      13       0       0       0
  7872 ;;      Temps:          0       5       0       0       0
  7873 ;;      Totals:         0      26       0       0       0
  7874 ;;Total ram usage:       26 bytes
  7875 ;; Hardware stack levels used:    1
  7876 ;; Hardware stack levels required when called:    2
  7877 ;; This function calls:
  7878 ;;		__Umul8_16
  7879 ;; This function is called by:
  7880 ;;		_conv2
  7881 ;;		_fround
  7882 ;;		_scale
  7883 ;;		_sprintf
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           
  7888                           ;psect for function ___flmul
  7889  093C                     ___flmul:
  7890  093C                     l3245:	
  7891                           ;incstack = 0
  7892                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7893                           
  7894  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7895  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7896  093E  0831               	movf	___flmul@b+3,w
  7897  093F  3980               	andlw	128
  7898  0940  00B6               	movwf	??___flmul
  7899  0941  0836               	movf	??___flmul,w
  7900  0942  00BB               	movwf	___flmul@sign
  7901  0943                     l3247:
  7902  0943  0831               	movf	___flmul@b+3,w
  7903  0944  00B6               	movwf	??___flmul
  7904  0945  0736               	addwf	??___flmul,w
  7905  0946  00B7               	movwf	??___flmul+1
  7906  0947  0837               	movf	??___flmul+1,w
  7907  0948  00C1               	movwf	___flmul@bexp
  7908  0949                     l3249:
  7909  0949  1FB0               	btfss	___flmul@b+2,7
  7910  094A  294C               	goto	u5371
  7911  094B  294D               	goto	u5370
  7912  094C                     u5371:
  7913  094C  294E               	goto	l3253
  7914  094D                     u5370:
  7915  094D                     l3251:
  7916  094D  1441               	bsf	___flmul@bexp,0
  7917  094E                     l3253:
  7918  094E  0841               	movf	___flmul@bexp,w
  7919  094F  1903               	btfsc	3,2
  7920  0950  2952               	goto	u5381
  7921  0951  2953               	goto	u5380
  7922  0952                     u5381:
  7923  0952  2962               	goto	l3261
  7924  0953                     u5380:
  7925  0953                     l3255:
  7926  0953  0A41               	incf	___flmul@bexp,w
  7927  0954  1D03               	btfss	3,2
  7928  0955  2957               	goto	u5391
  7929  0956  2958               	goto	u5390
  7930  0957                     u5391:
  7931  0957  2960               	goto	l3259
  7932  0958                     u5390:
  7933  0958                     l3257:
  7934  0958  3000               	movlw	0
  7935  0959  00B1               	movwf	___flmul@b+3
  7936  095A  3000               	movlw	0
  7937  095B  00B0               	movwf	___flmul@b+2
  7938  095C  3000               	movlw	0
  7939  095D  00AF               	movwf	___flmul@b+1
  7940  095E  3000               	movlw	0
  7941  095F  00AE               	movwf	___flmul@b
  7942  0960                     l3259:
  7943  0960  17B0               	bsf	___flmul@b+2,7
  7944  0961  296A               	goto	l3263
  7945  0962                     l3261:
  7946  0962  3000               	movlw	0
  7947  0963  00B1               	movwf	___flmul@b+3
  7948  0964  3000               	movlw	0
  7949  0965  00B0               	movwf	___flmul@b+2
  7950  0966  3000               	movlw	0
  7951  0967  00AF               	movwf	___flmul@b+1
  7952  0968  3000               	movlw	0
  7953  0969  00AE               	movwf	___flmul@b
  7954  096A                     l3263:
  7955  096A  0835               	movf	___flmul@a+3,w
  7956  096B  3980               	andlw	128
  7957  096C  00B6               	movwf	??___flmul
  7958  096D  0836               	movf	??___flmul,w
  7959  096E  06BB               	xorwf	___flmul@sign,f
  7960  096F                     l3265:
  7961  096F  0835               	movf	___flmul@a+3,w
  7962  0970  00B6               	movwf	??___flmul
  7963  0971  0736               	addwf	??___flmul,w
  7964  0972  00B7               	movwf	??___flmul+1
  7965  0973  0837               	movf	??___flmul+1,w
  7966  0974  00BC               	movwf	___flmul@aexp
  7967  0975                     l3267:
  7968  0975  1FB4               	btfss	___flmul@a+2,7
  7969  0976  2978               	goto	u5401
  7970  0977  2979               	goto	u5400
  7971  0978                     u5401:
  7972  0978  297A               	goto	l3271
  7973  0979                     u5400:
  7974  0979                     l3269:
  7975  0979  143C               	bsf	___flmul@aexp,0
  7976  097A                     l3271:
  7977  097A  083C               	movf	___flmul@aexp,w
  7978  097B  1903               	btfsc	3,2
  7979  097C  297E               	goto	u5411
  7980  097D  297F               	goto	u5410
  7981  097E                     u5411:
  7982  097E  298E               	goto	l3279
  7983  097F                     u5410:
  7984  097F                     l3273:
  7985  097F  0A3C               	incf	___flmul@aexp,w
  7986  0980  1D03               	btfss	3,2
  7987  0981  2983               	goto	u5421
  7988  0982  2984               	goto	u5420
  7989  0983                     u5421:
  7990  0983  298C               	goto	l3277
  7991  0984                     u5420:
  7992  0984                     l3275:
  7993  0984  3000               	movlw	0
  7994  0985  00B5               	movwf	___flmul@a+3
  7995  0986  3000               	movlw	0
  7996  0987  00B4               	movwf	___flmul@a+2
  7997  0988  3000               	movlw	0
  7998  0989  00B3               	movwf	___flmul@a+1
  7999  098A  3000               	movlw	0
  8000  098B  00B2               	movwf	___flmul@a
  8001  098C                     l3277:
  8002  098C  17B4               	bsf	___flmul@a+2,7
  8003  098D  2996               	goto	l3281
  8004  098E                     l3279:
  8005  098E  3000               	movlw	0
  8006  098F  00B5               	movwf	___flmul@a+3
  8007  0990  3000               	movlw	0
  8008  0991  00B4               	movwf	___flmul@a+2
  8009  0992  3000               	movlw	0
  8010  0993  00B3               	movwf	___flmul@a+1
  8011  0994  3000               	movlw	0
  8012  0995  00B2               	movwf	___flmul@a
  8013  0996                     l3281:
  8014  0996  083C               	movf	___flmul@aexp,w
  8015  0997  1903               	btfsc	3,2
  8016  0998  299A               	goto	u5431
  8017  0999  299B               	goto	u5430
  8018  099A                     u5431:
  8019  099A  29A0               	goto	l3285
  8020  099B                     u5430:
  8021  099B                     l3283:
  8022  099B  0841               	movf	___flmul@bexp,w
  8023  099C  1D03               	btfss	3,2
  8024  099D  299F               	goto	u5441
  8025  099E  29A0               	goto	u5440
  8026  099F                     u5441:
  8027  099F  29A9               	goto	l3289
  8028  09A0                     u5440:
  8029  09A0                     l3285:
  8030  09A0  3000               	movlw	0
  8031  09A1  00B1               	movwf	?___flmul+3
  8032  09A2  3000               	movlw	0
  8033  09A3  00B0               	movwf	?___flmul+2
  8034  09A4  3000               	movlw	0
  8035  09A5  00AF               	movwf	?___flmul+1
  8036  09A6  3000               	movlw	0
  8037  09A7  00AE               	movwf	?___flmul
  8038  09A8  2C9C               	goto	l726
  8039  09A9                     l3289:
  8040  09A9  082E               	movf	___flmul@b,w
  8041  09AA  00B6               	movwf	??___flmul
  8042  09AB  0836               	movf	??___flmul,w
  8043  09AC  00F5               	movwf	__Umul8_16@multiplicand
  8044  09AD  0834               	movf	___flmul@a+2,w
  8045  09AE  160A  158A  2599  120A  158A  	fcall	__Umul8_16
  8046  09B3  0876               	movf	?__Umul8_16+1,w
  8047  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  8048  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  8049  09B6  00C7               	movwf	___flmul@temp+1
  8050  09B7  0875               	movf	?__Umul8_16,w
  8051  09B8  00C6               	movwf	___flmul@temp
  8052  09B9                     l3291:
  8053  09B9  0846               	movf	___flmul@temp,w
  8054  09BA  00B6               	movwf	??___flmul
  8055  09BB  01B7               	clrf	??___flmul+1
  8056  09BC  01B8               	clrf	??___flmul+2
  8057  09BD  01B9               	clrf	??___flmul+3
  8058  09BE  0839               	movf	??___flmul+3,w
  8059  09BF  00C0               	movwf	___flmul@grs+3
  8060  09C0  0838               	movf	??___flmul+2,w
  8061  09C1  00BF               	movwf	___flmul@grs+2
  8062  09C2  0837               	movf	??___flmul+1,w
  8063  09C3  00BE               	movwf	___flmul@grs+1
  8064  09C4  0836               	movf	??___flmul,w
  8065  09C5  00BD               	movwf	___flmul@grs
  8066  09C6                     l3293:
  8067  09C6  0847               	movf	___flmul@temp+1,w
  8068  09C7  00B6               	movwf	??___flmul
  8069  09C8  01B7               	clrf	??___flmul+1
  8070  09C9  01B8               	clrf	??___flmul+2
  8071  09CA  01B9               	clrf	??___flmul+3
  8072  09CB  0839               	movf	??___flmul+3,w
  8073  09CC  00C5               	movwf	___flmul@prod+3
  8074  09CD  0838               	movf	??___flmul+2,w
  8075  09CE  00C4               	movwf	___flmul@prod+2
  8076  09CF  0837               	movf	??___flmul+1,w
  8077  09D0  00C3               	movwf	___flmul@prod+1
  8078  09D1  0836               	movf	??___flmul,w
  8079  09D2  00C2               	movwf	___flmul@prod
  8080  09D3  082F               	movf	___flmul@b+1,w
  8081  09D4  00B6               	movwf	??___flmul
  8082  09D5  0836               	movf	??___flmul,w
  8083  09D6  00F5               	movwf	__Umul8_16@multiplicand
  8084  09D7  0833               	movf	___flmul@a+1,w
  8085  09D8  160A  158A  2599  120A  158A  	fcall	__Umul8_16
  8086  09DD  0876               	movf	?__Umul8_16+1,w
  8087  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  8088  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  8089  09E0  00C7               	movwf	___flmul@temp+1
  8090  09E1  0875               	movf	?__Umul8_16,w
  8091  09E2  00C6               	movwf	___flmul@temp
  8092  09E3                     l3295:
  8093  09E3  0846               	movf	___flmul@temp,w
  8094  09E4  00B6               	movwf	??___flmul
  8095  09E5  01B7               	clrf	??___flmul+1
  8096  09E6  01B8               	clrf	??___flmul+2
  8097  09E7  01B9               	clrf	??___flmul+3
  8098  09E8  0836               	movf	??___flmul,w
  8099  09E9  07BD               	addwf	___flmul@grs,f
  8100  09EA  0837               	movf	??___flmul+1,w
  8101  09EB  1103               	clrz
  8102  09EC  1803               	skipnc
  8103  09ED  3E01               	addlw	1
  8104  09EE  1903               	skipnz
  8105  09EF  29F1               	goto	u5451
  8106  09F0  07BE               	addwf	___flmul@grs+1,f
  8107  09F1                     u5451:
  8108  09F1  0838               	movf	??___flmul+2,w
  8109  09F2  1103               	clrz
  8110  09F3  1803               	skipnc
  8111  09F4  3E01               	addlw	1
  8112  09F5  1903               	skipnz
  8113  09F6  29F8               	goto	u5452
  8114  09F7  07BF               	addwf	___flmul@grs+2,f
  8115  09F8                     u5452:
  8116  09F8  0839               	movf	??___flmul+3,w
  8117  09F9  1103               	clrz
  8118  09FA  1803               	skipnc
  8119  09FB  3E01               	addlw	1
  8120  09FC  1903               	skipnz
  8121  09FD  29FF               	goto	u5453
  8122  09FE  07C0               	addwf	___flmul@grs+3,f
  8123  09FF                     u5453:
  8124  09FF                     l3297:
  8125  09FF  0847               	movf	___flmul@temp+1,w
  8126  0A00  00B6               	movwf	??___flmul
  8127  0A01  01B7               	clrf	??___flmul+1
  8128  0A02  01B8               	clrf	??___flmul+2
  8129  0A03  01B9               	clrf	??___flmul+3
  8130  0A04  0836               	movf	??___flmul,w
  8131  0A05  07C2               	addwf	___flmul@prod,f
  8132  0A06  0837               	movf	??___flmul+1,w
  8133  0A07  1103               	clrz
  8134  0A08  1803               	skipnc
  8135  0A09  3E01               	addlw	1
  8136  0A0A  1903               	skipnz
  8137  0A0B  2A0D               	goto	u5461
  8138  0A0C  07C3               	addwf	___flmul@prod+1,f
  8139  0A0D                     u5461:
  8140  0A0D  0838               	movf	??___flmul+2,w
  8141  0A0E  1103               	clrz
  8142  0A0F  1803               	skipnc
  8143  0A10  3E01               	addlw	1
  8144  0A11  1903               	skipnz
  8145  0A12  2A14               	goto	u5462
  8146  0A13  07C4               	addwf	___flmul@prod+2,f
  8147  0A14                     u5462:
  8148  0A14  0839               	movf	??___flmul+3,w
  8149  0A15  1103               	clrz
  8150  0A16  1803               	skipnc
  8151  0A17  3E01               	addlw	1
  8152  0A18  1903               	skipnz
  8153  0A19  2A1B               	goto	u5463
  8154  0A1A  07C5               	addwf	___flmul@prod+3,f
  8155  0A1B                     u5463:
  8156  0A1B  0830               	movf	___flmul@b+2,w
  8157  0A1C  00B6               	movwf	??___flmul
  8158  0A1D  0836               	movf	??___flmul,w
  8159  0A1E  00F5               	movwf	__Umul8_16@multiplicand
  8160  0A1F  0832               	movf	___flmul@a,w
  8161  0A20  160A  158A  2599  120A  158A  	fcall	__Umul8_16
  8162  0A25  0876               	movf	?__Umul8_16+1,w
  8163  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8164  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8165  0A28  00C7               	movwf	___flmul@temp+1
  8166  0A29  0875               	movf	?__Umul8_16,w
  8167  0A2A  00C6               	movwf	___flmul@temp
  8168  0A2B                     l3299:
  8169  0A2B  0846               	movf	___flmul@temp,w
  8170  0A2C  00B6               	movwf	??___flmul
  8171  0A2D  01B7               	clrf	??___flmul+1
  8172  0A2E  01B8               	clrf	??___flmul+2
  8173  0A2F  01B9               	clrf	??___flmul+3
  8174  0A30  0836               	movf	??___flmul,w
  8175  0A31  07BD               	addwf	___flmul@grs,f
  8176  0A32  0837               	movf	??___flmul+1,w
  8177  0A33  1103               	clrz
  8178  0A34  1803               	skipnc
  8179  0A35  3E01               	addlw	1
  8180  0A36  1903               	skipnz
  8181  0A37  2A39               	goto	u5471
  8182  0A38  07BE               	addwf	___flmul@grs+1,f
  8183  0A39                     u5471:
  8184  0A39  0838               	movf	??___flmul+2,w
  8185  0A3A  1103               	clrz
  8186  0A3B  1803               	skipnc
  8187  0A3C  3E01               	addlw	1
  8188  0A3D  1903               	skipnz
  8189  0A3E  2A40               	goto	u5472
  8190  0A3F  07BF               	addwf	___flmul@grs+2,f
  8191  0A40                     u5472:
  8192  0A40  0839               	movf	??___flmul+3,w
  8193  0A41  1103               	clrz
  8194  0A42  1803               	skipnc
  8195  0A43  3E01               	addlw	1
  8196  0A44  1903               	skipnz
  8197  0A45  2A47               	goto	u5473
  8198  0A46  07C0               	addwf	___flmul@grs+3,f
  8199  0A47                     u5473:
  8200  0A47                     l3301:
  8201  0A47  0847               	movf	___flmul@temp+1,w
  8202  0A48  00B6               	movwf	??___flmul
  8203  0A49  01B7               	clrf	??___flmul+1
  8204  0A4A  01B8               	clrf	??___flmul+2
  8205  0A4B  01B9               	clrf	??___flmul+3
  8206  0A4C  0836               	movf	??___flmul,w
  8207  0A4D  07C2               	addwf	___flmul@prod,f
  8208  0A4E  0837               	movf	??___flmul+1,w
  8209  0A4F  1103               	clrz
  8210  0A50  1803               	skipnc
  8211  0A51  3E01               	addlw	1
  8212  0A52  1903               	skipnz
  8213  0A53  2A55               	goto	u5481
  8214  0A54  07C3               	addwf	___flmul@prod+1,f
  8215  0A55                     u5481:
  8216  0A55  0838               	movf	??___flmul+2,w
  8217  0A56  1103               	clrz
  8218  0A57  1803               	skipnc
  8219  0A58  3E01               	addlw	1
  8220  0A59  1903               	skipnz
  8221  0A5A  2A5C               	goto	u5482
  8222  0A5B  07C4               	addwf	___flmul@prod+2,f
  8223  0A5C                     u5482:
  8224  0A5C  0839               	movf	??___flmul+3,w
  8225  0A5D  1103               	clrz
  8226  0A5E  1803               	skipnc
  8227  0A5F  3E01               	addlw	1
  8228  0A60  1903               	skipnz
  8229  0A61  2A63               	goto	u5483
  8230  0A62  07C5               	addwf	___flmul@prod+3,f
  8231  0A63                     u5483:
  8232  0A63                     l3303:
  8233  0A63  3008               	movlw	8
  8234  0A64  00B6               	movwf	??___flmul
  8235  0A65                     u5495:
  8236  0A65  1003               	clrc
  8237  0A66  0DBD               	rlf	___flmul@grs,f
  8238  0A67  0DBE               	rlf	___flmul@grs+1,f
  8239  0A68  0DBF               	rlf	___flmul@grs+2,f
  8240  0A69  0DC0               	rlf	___flmul@grs+3,f
  8241  0A6A  0BB6               	decfsz	??___flmul,f
  8242  0A6B  2A65               	goto	u5495
  8243  0A6C                     l3305:
  8244  0A6C  082F               	movf	___flmul@b+1,w
  8245  0A6D  00B6               	movwf	??___flmul
  8246  0A6E  0836               	movf	??___flmul,w
  8247  0A6F  00F5               	movwf	__Umul8_16@multiplicand
  8248  0A70  0832               	movf	___flmul@a,w
  8249  0A71  160A  158A  2599  120A  158A  	fcall	__Umul8_16
  8250  0A76  0876               	movf	?__Umul8_16+1,w
  8251  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8252  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8253  0A79  00C7               	movwf	___flmul@temp+1
  8254  0A7A  0875               	movf	?__Umul8_16,w
  8255  0A7B  00C6               	movwf	___flmul@temp
  8256  0A7C                     l3307:
  8257  0A7C  0846               	movf	___flmul@temp,w
  8258  0A7D  00B6               	movwf	??___flmul
  8259  0A7E  0847               	movf	___flmul@temp+1,w
  8260  0A7F  00B7               	movwf	??___flmul+1
  8261  0A80  01B8               	clrf	??___flmul+2
  8262  0A81  01B9               	clrf	??___flmul+3
  8263  0A82  0836               	movf	??___flmul,w
  8264  0A83  07BD               	addwf	___flmul@grs,f
  8265  0A84  0837               	movf	??___flmul+1,w
  8266  0A85  1103               	clrz
  8267  0A86  1803               	skipnc
  8268  0A87  3E01               	addlw	1
  8269  0A88  1903               	skipnz
  8270  0A89  2A8B               	goto	u5501
  8271  0A8A  07BE               	addwf	___flmul@grs+1,f
  8272  0A8B                     u5501:
  8273  0A8B  0838               	movf	??___flmul+2,w
  8274  0A8C  1103               	clrz
  8275  0A8D  1803               	skipnc
  8276  0A8E  3E01               	addlw	1
  8277  0A8F  1903               	skipnz
  8278  0A90  2A92               	goto	u5502
  8279  0A91  07BF               	addwf	___flmul@grs+2,f
  8280  0A92                     u5502:
  8281  0A92  0839               	movf	??___flmul+3,w
  8282  0A93  1103               	clrz
  8283  0A94  1803               	skipnc
  8284  0A95  3E01               	addlw	1
  8285  0A96  1903               	skipnz
  8286  0A97  2A99               	goto	u5503
  8287  0A98  07C0               	addwf	___flmul@grs+3,f
  8288  0A99                     u5503:
  8289  0A99                     l3309:
  8290  0A99  082E               	movf	___flmul@b,w
  8291  0A9A  00B6               	movwf	??___flmul
  8292  0A9B  0836               	movf	??___flmul,w
  8293  0A9C  00F5               	movwf	__Umul8_16@multiplicand
  8294  0A9D  0833               	movf	___flmul@a+1,w
  8295  0A9E  160A  158A  2599  120A  158A  	fcall	__Umul8_16
  8296  0AA3  0876               	movf	?__Umul8_16+1,w
  8297  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8298  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8299  0AA6  00C7               	movwf	___flmul@temp+1
  8300  0AA7  0875               	movf	?__Umul8_16,w
  8301  0AA8  00C6               	movwf	___flmul@temp
  8302  0AA9                     l3311:
  8303  0AA9  0846               	movf	___flmul@temp,w
  8304  0AAA  00B6               	movwf	??___flmul
  8305  0AAB  0847               	movf	___flmul@temp+1,w
  8306  0AAC  00B7               	movwf	??___flmul+1
  8307  0AAD  01B8               	clrf	??___flmul+2
  8308  0AAE  01B9               	clrf	??___flmul+3
  8309  0AAF  0836               	movf	??___flmul,w
  8310  0AB0  07BD               	addwf	___flmul@grs,f
  8311  0AB1  0837               	movf	??___flmul+1,w
  8312  0AB2  1103               	clrz
  8313  0AB3  1803               	skipnc
  8314  0AB4  3E01               	addlw	1
  8315  0AB5  1903               	skipnz
  8316  0AB6  2AB8               	goto	u5511
  8317  0AB7  07BE               	addwf	___flmul@grs+1,f
  8318  0AB8                     u5511:
  8319  0AB8  0838               	movf	??___flmul+2,w
  8320  0AB9  1103               	clrz
  8321  0ABA  1803               	skipnc
  8322  0ABB  3E01               	addlw	1
  8323  0ABC  1903               	skipnz
  8324  0ABD  2ABF               	goto	u5512
  8325  0ABE  07BF               	addwf	___flmul@grs+2,f
  8326  0ABF                     u5512:
  8327  0ABF  0839               	movf	??___flmul+3,w
  8328  0AC0  1103               	clrz
  8329  0AC1  1803               	skipnc
  8330  0AC2  3E01               	addlw	1
  8331  0AC3  1903               	skipnz
  8332  0AC4  2AC6               	goto	u5513
  8333  0AC5  07C0               	addwf	___flmul@grs+3,f
  8334  0AC6                     u5513:
  8335  0AC6                     l3313:
  8336  0AC6  3008               	movlw	8
  8337  0AC7  00B6               	movwf	??___flmul
  8338  0AC8                     u5525:
  8339  0AC8  1003               	clrc
  8340  0AC9  0DBD               	rlf	___flmul@grs,f
  8341  0ACA  0DBE               	rlf	___flmul@grs+1,f
  8342  0ACB  0DBF               	rlf	___flmul@grs+2,f
  8343  0ACC  0DC0               	rlf	___flmul@grs+3,f
  8344  0ACD  0BB6               	decfsz	??___flmul,f
  8345  0ACE  2AC8               	goto	u5525
  8346  0ACF  082E               	movf	___flmul@b,w
  8347  0AD0  00B6               	movwf	??___flmul
  8348  0AD1  0836               	movf	??___flmul,w
  8349  0AD2  00F5               	movwf	__Umul8_16@multiplicand
  8350  0AD3  0832               	movf	___flmul@a,w
  8351  0AD4  160A  158A  2599  120A  158A  	fcall	__Umul8_16
  8352  0AD9  0876               	movf	?__Umul8_16+1,w
  8353  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8354  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8355  0ADC  00C7               	movwf	___flmul@temp+1
  8356  0ADD  0875               	movf	?__Umul8_16,w
  8357  0ADE  00C6               	movwf	___flmul@temp
  8358  0ADF                     l3315:
  8359  0ADF  0846               	movf	___flmul@temp,w
  8360  0AE0  00B6               	movwf	??___flmul
  8361  0AE1  0847               	movf	___flmul@temp+1,w
  8362  0AE2  00B7               	movwf	??___flmul+1
  8363  0AE3  01B8               	clrf	??___flmul+2
  8364  0AE4  01B9               	clrf	??___flmul+3
  8365  0AE5  0836               	movf	??___flmul,w
  8366  0AE6  07BD               	addwf	___flmul@grs,f
  8367  0AE7  0837               	movf	??___flmul+1,w
  8368  0AE8  1103               	clrz
  8369  0AE9  1803               	skipnc
  8370  0AEA  3E01               	addlw	1
  8371  0AEB  1903               	skipnz
  8372  0AEC  2AEE               	goto	u5531
  8373  0AED  07BE               	addwf	___flmul@grs+1,f
  8374  0AEE                     u5531:
  8375  0AEE  0838               	movf	??___flmul+2,w
  8376  0AEF  1103               	clrz
  8377  0AF0  1803               	skipnc
  8378  0AF1  3E01               	addlw	1
  8379  0AF2  1903               	skipnz
  8380  0AF3  2AF5               	goto	u5532
  8381  0AF4  07BF               	addwf	___flmul@grs+2,f
  8382  0AF5                     u5532:
  8383  0AF5  0839               	movf	??___flmul+3,w
  8384  0AF6  1103               	clrz
  8385  0AF7  1803               	skipnc
  8386  0AF8  3E01               	addlw	1
  8387  0AF9  1903               	skipnz
  8388  0AFA  2AFC               	goto	u5533
  8389  0AFB  07C0               	addwf	___flmul@grs+3,f
  8390  0AFC                     u5533:
  8391  0AFC                     l3317:
  8392  0AFC  082F               	movf	___flmul@b+1,w
  8393  0AFD  00B6               	movwf	??___flmul
  8394  0AFE  0836               	movf	??___flmul,w
  8395  0AFF  00F5               	movwf	__Umul8_16@multiplicand
  8396  0B00  0834               	movf	___flmul@a+2,w
  8397  0B01  160A  158A  2599  120A  158A  	fcall	__Umul8_16
  8398  0B06  0876               	movf	?__Umul8_16+1,w
  8399  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8400  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8401  0B09  00C7               	movwf	___flmul@temp+1
  8402  0B0A  0875               	movf	?__Umul8_16,w
  8403  0B0B  00C6               	movwf	___flmul@temp
  8404  0B0C  0846               	movf	___flmul@temp,w
  8405  0B0D  00B6               	movwf	??___flmul
  8406  0B0E  0847               	movf	___flmul@temp+1,w
  8407  0B0F  00B7               	movwf	??___flmul+1
  8408  0B10  01B8               	clrf	??___flmul+2
  8409  0B11  01B9               	clrf	??___flmul+3
  8410  0B12  0836               	movf	??___flmul,w
  8411  0B13  07C2               	addwf	___flmul@prod,f
  8412  0B14  0837               	movf	??___flmul+1,w
  8413  0B15  1103               	clrz
  8414  0B16  1803               	skipnc
  8415  0B17  3E01               	addlw	1
  8416  0B18  1903               	skipnz
  8417  0B19  2B1B               	goto	u5541
  8418  0B1A  07C3               	addwf	___flmul@prod+1,f
  8419  0B1B                     u5541:
  8420  0B1B  0838               	movf	??___flmul+2,w
  8421  0B1C  1103               	clrz
  8422  0B1D  1803               	skipnc
  8423  0B1E  3E01               	addlw	1
  8424  0B1F  1903               	skipnz
  8425  0B20  2B22               	goto	u5542
  8426  0B21  07C4               	addwf	___flmul@prod+2,f
  8427  0B22                     u5542:
  8428  0B22  0839               	movf	??___flmul+3,w
  8429  0B23  1103               	clrz
  8430  0B24  1803               	skipnc
  8431  0B25  3E01               	addlw	1
  8432  0B26  1903               	skipnz
  8433  0B27  2B29               	goto	u5543
  8434  0B28  07C5               	addwf	___flmul@prod+3,f
  8435  0B29                     u5543:
  8436  0B29                     l3319:
  8437  0B29  0830               	movf	___flmul@b+2,w
  8438  0B2A  00B6               	movwf	??___flmul
  8439  0B2B  0836               	movf	??___flmul,w
  8440  0B2C  00F5               	movwf	__Umul8_16@multiplicand
  8441  0B2D  0833               	movf	___flmul@a+1,w
  8442  0B2E  160A  158A  2599  120A  158A  	fcall	__Umul8_16
  8443  0B33  0876               	movf	?__Umul8_16+1,w
  8444  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8445  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8446  0B36  00C7               	movwf	___flmul@temp+1
  8447  0B37  0875               	movf	?__Umul8_16,w
  8448  0B38  00C6               	movwf	___flmul@temp
  8449  0B39                     l3321:
  8450  0B39  0846               	movf	___flmul@temp,w
  8451  0B3A  00B6               	movwf	??___flmul
  8452  0B3B  0847               	movf	___flmul@temp+1,w
  8453  0B3C  00B7               	movwf	??___flmul+1
  8454  0B3D  01B8               	clrf	??___flmul+2
  8455  0B3E  01B9               	clrf	??___flmul+3
  8456  0B3F  0836               	movf	??___flmul,w
  8457  0B40  07C2               	addwf	___flmul@prod,f
  8458  0B41  0837               	movf	??___flmul+1,w
  8459  0B42  1103               	clrz
  8460  0B43  1803               	skipnc
  8461  0B44  3E01               	addlw	1
  8462  0B45  1903               	skipnz
  8463  0B46  2B48               	goto	u5551
  8464  0B47  07C3               	addwf	___flmul@prod+1,f
  8465  0B48                     u5551:
  8466  0B48  0838               	movf	??___flmul+2,w
  8467  0B49  1103               	clrz
  8468  0B4A  1803               	skipnc
  8469  0B4B  3E01               	addlw	1
  8470  0B4C  1903               	skipnz
  8471  0B4D  2B4F               	goto	u5552
  8472  0B4E  07C4               	addwf	___flmul@prod+2,f
  8473  0B4F                     u5552:
  8474  0B4F  0839               	movf	??___flmul+3,w
  8475  0B50  1103               	clrz
  8476  0B51  1803               	skipnc
  8477  0B52  3E01               	addlw	1
  8478  0B53  1903               	skipnz
  8479  0B54  2B56               	goto	u5553
  8480  0B55  07C5               	addwf	___flmul@prod+3,f
  8481  0B56                     u5553:
  8482  0B56  0830               	movf	___flmul@b+2,w
  8483  0B57  00B6               	movwf	??___flmul
  8484  0B58  0836               	movf	??___flmul,w
  8485  0B59  00F5               	movwf	__Umul8_16@multiplicand
  8486  0B5A  0834               	movf	___flmul@a+2,w
  8487  0B5B  160A  158A  2599  120A  158A  	fcall	__Umul8_16
  8488  0B60  0876               	movf	?__Umul8_16+1,w
  8489  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8490  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8491  0B63  00C7               	movwf	___flmul@temp+1
  8492  0B64  0875               	movf	?__Umul8_16,w
  8493  0B65  00C6               	movwf	___flmul@temp
  8494  0B66                     l3323:
  8495  0B66  0846               	movf	___flmul@temp,w
  8496  0B67  00B6               	movwf	??___flmul
  8497  0B68  0847               	movf	___flmul@temp+1,w
  8498  0B69  00B7               	movwf	??___flmul+1
  8499  0B6A  01B8               	clrf	??___flmul+2
  8500  0B6B  01B9               	clrf	??___flmul+3
  8501  0B6C  3008               	movlw	8
  8502  0B6D                     u5565:
  8503  0B6D  1003               	clrc
  8504  0B6E  0DB6               	rlf	??___flmul,f
  8505  0B6F  0DB7               	rlf	??___flmul+1,f
  8506  0B70  0DB8               	rlf	??___flmul+2,f
  8507  0B71  0DB9               	rlf	??___flmul+3,f
  8508  0B72                     u5560:
  8509  0B72  3EFF               	addlw	-1
  8510  0B73  1D03               	skipz
  8511  0B74  2B6D               	goto	u5565
  8512  0B75  0836               	movf	??___flmul,w
  8513  0B76  07C2               	addwf	___flmul@prod,f
  8514  0B77  0837               	movf	??___flmul+1,w
  8515  0B78  1103               	clrz
  8516  0B79  1803               	skipnc
  8517  0B7A  3E01               	addlw	1
  8518  0B7B  1903               	skipnz
  8519  0B7C  2B7E               	goto	u5571
  8520  0B7D  07C3               	addwf	___flmul@prod+1,f
  8521  0B7E                     u5571:
  8522  0B7E  0838               	movf	??___flmul+2,w
  8523  0B7F  1103               	clrz
  8524  0B80  1803               	skipnc
  8525  0B81  3E01               	addlw	1
  8526  0B82  1903               	skipnz
  8527  0B83  2B85               	goto	u5572
  8528  0B84  07C4               	addwf	___flmul@prod+2,f
  8529  0B85                     u5572:
  8530  0B85  0839               	movf	??___flmul+3,w
  8531  0B86  1103               	clrz
  8532  0B87  1803               	skipnc
  8533  0B88  3E01               	addlw	1
  8534  0B89  1903               	skipnz
  8535  0B8A  2B8C               	goto	u5573
  8536  0B8B  07C5               	addwf	___flmul@prod+3,f
  8537  0B8C                     u5573:
  8538  0B8C                     l3325:
  8539  0B8C  083D               	movf	___flmul@grs,w
  8540  0B8D  00B6               	movwf	??___flmul
  8541  0B8E  083E               	movf	___flmul@grs+1,w
  8542  0B8F  00B7               	movwf	??___flmul+1
  8543  0B90  083F               	movf	___flmul@grs+2,w
  8544  0B91  00B8               	movwf	??___flmul+2
  8545  0B92  0840               	movf	___flmul@grs+3,w
  8546  0B93  00B9               	movwf	??___flmul+3
  8547  0B94  3018               	movlw	24
  8548  0B95                     u5585:
  8549  0B95  1003               	clrc
  8550  0B96  0CB9               	rrf	??___flmul+3,f
  8551  0B97  0CB8               	rrf	??___flmul+2,f
  8552  0B98  0CB7               	rrf	??___flmul+1,f
  8553  0B99  0CB6               	rrf	??___flmul,f
  8554  0B9A                     u5580:
  8555  0B9A  3EFF               	addlw	-1
  8556  0B9B  1D03               	skipz
  8557  0B9C  2B95               	goto	u5585
  8558  0B9D  0836               	movf	??___flmul,w
  8559  0B9E  07C2               	addwf	___flmul@prod,f
  8560  0B9F  0837               	movf	??___flmul+1,w
  8561  0BA0  1103               	clrz
  8562  0BA1  1803               	skipnc
  8563  0BA2  3E01               	addlw	1
  8564  0BA3  1903               	skipnz
  8565  0BA4  2BA6               	goto	u5591
  8566  0BA5  07C3               	addwf	___flmul@prod+1,f
  8567  0BA6                     u5591:
  8568  0BA6  0838               	movf	??___flmul+2,w
  8569  0BA7  1103               	clrz
  8570  0BA8  1803               	skipnc
  8571  0BA9  3E01               	addlw	1
  8572  0BAA  1903               	skipnz
  8573  0BAB  2BAD               	goto	u5592
  8574  0BAC  07C4               	addwf	___flmul@prod+2,f
  8575  0BAD                     u5592:
  8576  0BAD  0839               	movf	??___flmul+3,w
  8577  0BAE  1103               	clrz
  8578  0BAF  1803               	skipnc
  8579  0BB0  3E01               	addlw	1
  8580  0BB1  1903               	skipnz
  8581  0BB2  2BB4               	goto	u5593
  8582  0BB3  07C5               	addwf	___flmul@prod+3,f
  8583  0BB4                     u5593:
  8584  0BB4                     l3327:
  8585  0BB4  3008               	movlw	8
  8586  0BB5  00B6               	movwf	??___flmul
  8587  0BB6                     u5605:
  8588  0BB6  1003               	clrc
  8589  0BB7  0DBD               	rlf	___flmul@grs,f
  8590  0BB8  0DBE               	rlf	___flmul@grs+1,f
  8591  0BB9  0DBF               	rlf	___flmul@grs+2,f
  8592  0BBA  0DC0               	rlf	___flmul@grs+3,f
  8593  0BBB  0BB6               	decfsz	??___flmul,f
  8594  0BBC  2BB6               	goto	u5605
  8595  0BBD                     l3329:
  8596  0BBD  0841               	movf	___flmul@bexp,w
  8597  0BBE  073C               	addwf	___flmul@aexp,w
  8598  0BBF  00B6               	movwf	??___flmul
  8599  0BC0  01B7               	clrf	??___flmul+1
  8600  0BC1  0DB7               	rlf	??___flmul+1,f
  8601  0BC2  0836               	movf	??___flmul,w
  8602  0BC3  3E82               	addlw	130
  8603  0BC4  00C6               	movwf	___flmul@temp
  8604  0BC5  0837               	movf	??___flmul+1,w
  8605  0BC6  1803               	skipnc
  8606  0BC7  3E01               	addlw	1
  8607  0BC8  3EFF               	addlw	255
  8608  0BC9  00C7               	movwf	___flmul@temp+1
  8609  0BCA  2BE8               	goto	l3341
  8610  0BCB                     l3331:
  8611  0BCB  3001               	movlw	1
  8612  0BCC  00B6               	movwf	??___flmul
  8613  0BCD                     u5615:
  8614  0BCD  1003               	clrc
  8615  0BCE  0DC2               	rlf	___flmul@prod,f
  8616  0BCF  0DC3               	rlf	___flmul@prod+1,f
  8617  0BD0  0DC4               	rlf	___flmul@prod+2,f
  8618  0BD1  0DC5               	rlf	___flmul@prod+3,f
  8619  0BD2  0BB6               	decfsz	??___flmul,f
  8620  0BD3  2BCD               	goto	u5615
  8621  0BD4                     l3333:
  8622  0BD4  1FC0               	btfss	___flmul@grs+3,7
  8623  0BD5  2BD7               	goto	u5621
  8624  0BD6  2BD8               	goto	u5620
  8625  0BD7                     u5621:
  8626  0BD7  2BD9               	goto	l3337
  8627  0BD8                     u5620:
  8628  0BD8                     l3335:
  8629  0BD8  1442               	bsf	___flmul@prod,0
  8630  0BD9                     l3337:
  8631  0BD9  3001               	movlw	1
  8632  0BDA  00B6               	movwf	??___flmul
  8633  0BDB                     u5635:
  8634  0BDB  1003               	clrc
  8635  0BDC  0DBD               	rlf	___flmul@grs,f
  8636  0BDD  0DBE               	rlf	___flmul@grs+1,f
  8637  0BDE  0DBF               	rlf	___flmul@grs+2,f
  8638  0BDF  0DC0               	rlf	___flmul@grs+3,f
  8639  0BE0  0BB6               	decfsz	??___flmul,f
  8640  0BE1  2BDB               	goto	u5635
  8641  0BE2                     l3339:
  8642  0BE2  30FF               	movlw	255
  8643  0BE3  07C6               	addwf	___flmul@temp,f
  8644  0BE4  1803               	skipnc
  8645  0BE5  0AC7               	incf	___flmul@temp+1,f
  8646  0BE6  30FF               	movlw	255
  8647  0BE7  07C7               	addwf	___flmul@temp+1,f
  8648  0BE8                     l3341:
  8649  0BE8  1FC4               	btfss	___flmul@prod+2,7
  8650  0BE9  2BEB               	goto	u5641
  8651  0BEA  2BEC               	goto	u5640
  8652  0BEB                     u5641:
  8653  0BEB  2BCB               	goto	l3331
  8654  0BEC                     u5640:
  8655  0BEC                     l3343:
  8656  0BEC  01BC               	clrf	___flmul@aexp
  8657  0BED                     l3345:
  8658  0BED  1FC0               	btfss	___flmul@grs+3,7
  8659  0BEE  2BF0               	goto	u5651
  8660  0BEF  2BF1               	goto	u5650
  8661  0BF0                     u5651:
  8662  0BF0  2C0D               	goto	l3353
  8663  0BF1                     u5650:
  8664  0BF1                     l3347:
  8665  0BF1  30FF               	movlw	255
  8666  0BF2  053D               	andwf	___flmul@grs,w
  8667  0BF3  00B6               	movwf	??___flmul
  8668  0BF4  30FF               	movlw	255
  8669  0BF5  053E               	andwf	___flmul@grs+1,w
  8670  0BF6  00B7               	movwf	??___flmul+1
  8671  0BF7  30FF               	movlw	255
  8672  0BF8  053F               	andwf	___flmul@grs+2,w
  8673  0BF9  00B8               	movwf	??___flmul+2
  8674  0BFA  307F               	movlw	127
  8675  0BFB  0540               	andwf	___flmul@grs+3,w
  8676  0BFC  00B9               	movwf	??___flmul+3
  8677  0BFD  0839               	movf	??___flmul+3,w
  8678  0BFE  0438               	iorwf	??___flmul+2,w
  8679  0BFF  0437               	iorwf	??___flmul+1,w
  8680  0C00  0436               	iorwf	??___flmul,w
  8681  0C01  1903               	skipnz
  8682  0C02  2C04               	goto	u5661
  8683  0C03  2C05               	goto	u5660
  8684  0C04                     u5661:
  8685  0C04  2C08               	goto	l732
  8686  0C05                     u5660:
  8687  0C05                     l3349:
  8688  0C05  01BC               	clrf	___flmul@aexp
  8689  0C06  0ABC               	incf	___flmul@aexp,f
  8690  0C07  2C0D               	goto	l3353
  8691  0C08                     l732:
  8692  0C08  1C42               	btfss	___flmul@prod,0
  8693  0C09  2C0B               	goto	u5671
  8694  0C0A  2C0C               	goto	u5670
  8695  0C0B                     u5671:
  8696  0C0B  2C0D               	goto	l3353
  8697  0C0C                     u5670:
  8698  0C0C  2C05               	goto	l3349
  8699  0C0D                     l3353:
  8700  0C0D  083C               	movf	___flmul@aexp,w
  8701  0C0E  1903               	btfsc	3,2
  8702  0C0F  2C11               	goto	u5681
  8703  0C10  2C12               	goto	u5680
  8704  0C11                     u5681:
  8705  0C11  2C43               	goto	l3363
  8706  0C12                     u5680:
  8707  0C12                     l3355:
  8708  0C12  3001               	movlw	1
  8709  0C13  07C2               	addwf	___flmul@prod,f
  8710  0C14  3000               	movlw	0
  8711  0C15  1803               	skipnc
  8712  0C16  3001               	movlw	1
  8713  0C17  07C3               	addwf	___flmul@prod+1,f
  8714  0C18  3000               	movlw	0
  8715  0C19  1803               	skipnc
  8716  0C1A  3001               	movlw	1
  8717  0C1B  07C4               	addwf	___flmul@prod+2,f
  8718  0C1C  3000               	movlw	0
  8719  0C1D  1803               	skipnc
  8720  0C1E  3001               	movlw	1
  8721  0C1F  07C5               	addwf	___flmul@prod+3,f
  8722  0C20                     l3357:
  8723  0C20  1C45               	btfss	___flmul@prod+3,0
  8724  0C21  2C23               	goto	u5691
  8725  0C22  2C24               	goto	u5690
  8726  0C23                     u5691:
  8727  0C23  2C43               	goto	l3363
  8728  0C24                     u5690:
  8729  0C24                     l3359:
  8730  0C24  0842               	movf	___flmul@prod,w
  8731  0C25  00B6               	movwf	??___flmul
  8732  0C26  0843               	movf	___flmul@prod+1,w
  8733  0C27  00B7               	movwf	??___flmul+1
  8734  0C28  0844               	movf	___flmul@prod+2,w
  8735  0C29  00B8               	movwf	??___flmul+2
  8736  0C2A  0845               	movf	___flmul@prod+3,w
  8737  0C2B  00B9               	movwf	??___flmul+3
  8738  0C2C  3001               	movlw	1
  8739  0C2D  00BA               	movwf	??___flmul+4
  8740  0C2E                     u5705:
  8741  0C2E  0D39               	rlf	??___flmul+3,w
  8742  0C2F  0CB9               	rrf	??___flmul+3,f
  8743  0C30  0CB8               	rrf	??___flmul+2,f
  8744  0C31  0CB7               	rrf	??___flmul+1,f
  8745  0C32  0CB6               	rrf	??___flmul,f
  8746  0C33                     u5700:
  8747  0C33  0BBA               	decfsz	??___flmul+4,f
  8748  0C34  2C2E               	goto	u5705
  8749  0C35  0839               	movf	??___flmul+3,w
  8750  0C36  00C5               	movwf	___flmul@prod+3
  8751  0C37  0838               	movf	??___flmul+2,w
  8752  0C38  00C4               	movwf	___flmul@prod+2
  8753  0C39  0837               	movf	??___flmul+1,w
  8754  0C3A  00C3               	movwf	___flmul@prod+1
  8755  0C3B  0836               	movf	??___flmul,w
  8756  0C3C  00C2               	movwf	___flmul@prod
  8757  0C3D                     l3361:
  8758  0C3D  3001               	movlw	1
  8759  0C3E  07C6               	addwf	___flmul@temp,f
  8760  0C3F  1803               	skipnc
  8761  0C40  0AC7               	incf	___flmul@temp+1,f
  8762  0C41  3000               	movlw	0
  8763  0C42  07C7               	addwf	___flmul@temp+1,f
  8764  0C43                     l3363:
  8765  0C43  0847               	movf	___flmul@temp+1,w
  8766  0C44  3A80               	xorlw	128
  8767  0C45  00FF               	movwf	btemp+1
  8768  0C46  3080               	movlw	128
  8769  0C47  027F               	subwf	btemp+1,w
  8770  0C48  1D03               	skipz
  8771  0C49  2C4C               	goto	u5715
  8772  0C4A  30FF               	movlw	255
  8773  0C4B  0246               	subwf	___flmul@temp,w
  8774  0C4C                     u5715:
  8775  0C4C  1C03               	skipc
  8776  0C4D  2C4F               	goto	u5711
  8777  0C4E  2C50               	goto	u5710
  8778  0C4F                     u5711:
  8779  0C4F  2C5B               	goto	l3367
  8780  0C50                     u5710:
  8781  0C50                     l3365:
  8782  0C50  307F               	movlw	127
  8783  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8784  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8785  0C53  00C5               	movwf	___flmul@prod+3
  8786  0C54  3080               	movlw	128
  8787  0C55  00C4               	movwf	___flmul@prod+2
  8788  0C56  3000               	movlw	0
  8789  0C57  00C3               	movwf	___flmul@prod+1
  8790  0C58  3000               	movlw	0
  8791  0C59  00C2               	movwf	___flmul@prod
  8792  0C5A  2C90               	goto	l738
  8793  0C5B                     l3367:
  8794  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8795  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8796  0C5D  0847               	movf	___flmul@temp+1,w
  8797  0C5E  3A80               	xorlw	128
  8798  0C5F  00FF               	movwf	btemp+1
  8799  0C60  3080               	movlw	128
  8800  0C61  027F               	subwf	btemp+1,w
  8801  0C62  1D03               	skipz
  8802  0C63  2C66               	goto	u5725
  8803  0C64  3001               	movlw	1
  8804  0C65  0246               	subwf	___flmul@temp,w
  8805  0C66                     u5725:
  8806  0C66  1803               	skipnc
  8807  0C67  2C69               	goto	u5721
  8808  0C68  2C6A               	goto	u5720
  8809  0C69                     u5721:
  8810  0C69  2C76               	goto	l3373
  8811  0C6A                     u5720:
  8812  0C6A                     l3369:
  8813  0C6A  3000               	movlw	0
  8814  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8815  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8816  0C6D  00C5               	movwf	___flmul@prod+3
  8817  0C6E  3000               	movlw	0
  8818  0C6F  00C4               	movwf	___flmul@prod+2
  8819  0C70  3000               	movlw	0
  8820  0C71  00C3               	movwf	___flmul@prod+1
  8821  0C72  3000               	movlw	0
  8822  0C73  00C2               	movwf	___flmul@prod
  8823  0C74                     l3371:
  8824  0C74  01BB               	clrf	___flmul@sign
  8825  0C75  2C90               	goto	l738
  8826  0C76                     l3373:
  8827  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8828  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8829  0C78  0846               	movf	___flmul@temp,w
  8830  0C79  00B6               	movwf	??___flmul
  8831  0C7A  0836               	movf	??___flmul,w
  8832  0C7B  00C1               	movwf	___flmul@bexp
  8833  0C7C  30FF               	movlw	255
  8834  0C7D  05C2               	andwf	___flmul@prod,f
  8835  0C7E  30FF               	movlw	255
  8836  0C7F  05C3               	andwf	___flmul@prod+1,f
  8837  0C80  307F               	movlw	127
  8838  0C81  05C4               	andwf	___flmul@prod+2,f
  8839  0C82  3000               	movlw	0
  8840  0C83  05C5               	andwf	___flmul@prod+3,f
  8841  0C84                     l3375:
  8842  0C84  1C41               	btfss	___flmul@bexp,0
  8843  0C85  2C87               	goto	u5731
  8844  0C86  2C88               	goto	u5730
  8845  0C87                     u5731:
  8846  0C87  2C89               	goto	l3379
  8847  0C88                     u5730:
  8848  0C88                     l3377:
  8849  0C88  17C4               	bsf	___flmul@prod+2,7
  8850  0C89                     l3379:
  8851  0C89  0841               	movf	___flmul@bexp,w
  8852  0C8A  00B6               	movwf	??___flmul
  8853  0C8B  1003               	clrc
  8854  0C8C  0C36               	rrf	??___flmul,w
  8855  0C8D  00B7               	movwf	??___flmul+1
  8856  0C8E  0837               	movf	??___flmul+1,w
  8857  0C8F  00C5               	movwf	___flmul@prod+3
  8858  0C90                     l738:
  8859  0C90  083B               	movf	___flmul@sign,w
  8860  0C91  00B6               	movwf	??___flmul
  8861  0C92  0836               	movf	??___flmul,w
  8862  0C93  04C5               	iorwf	___flmul@prod+3,f
  8863  0C94                     l3381:
  8864  0C94  0845               	movf	___flmul@prod+3,w
  8865  0C95  00B1               	movwf	?___flmul+3
  8866  0C96  0844               	movf	___flmul@prod+2,w
  8867  0C97  00B0               	movwf	?___flmul+2
  8868  0C98  0843               	movf	___flmul@prod+1,w
  8869  0C99  00AF               	movwf	?___flmul+1
  8870  0C9A  0842               	movf	___flmul@prod,w
  8871  0C9B  00AE               	movwf	?___flmul
  8872  0C9C                     l726:
  8873  0C9C  0008               	return
  8874  0C9D                     __end_of___flmul:
  8875                           
  8876                           	psect	text23
  8877  1D99                     __ptext23:	
  8878 ;; *************** function __Umul8_16 *****************
  8879 ;; Defined at:
  8880 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;  multiplier      1    wreg     unsigned char 
  8883 ;;  multiplicand    1    5[COMMON] unsigned char 
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;  multiplier      1    6[BANK0 ] unsigned char 
  8886 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  8887 ;;  product         2    2[BANK0 ] unsigned int 
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  2    5[COMMON] unsigned int 
  8890 ;; Registers used:
  8891 ;;		wreg, status,2, status,0
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8897 ;;      Params:         2       0       0       0       0
  8898 ;;      Locals:         0       5       0       0       0
  8899 ;;      Temps:          0       2       0       0       0
  8900 ;;      Totals:         2       7       0       0       0
  8901 ;;Total ram usage:        9 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; Hardware stack levels required when called:    1
  8904 ;; This function calls:
  8905 ;;		Nothing
  8906 ;; This function is called by:
  8907 ;;		___flmul
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           
  8912                           ;psect for function __Umul8_16
  8913  1D99                     __Umul8_16:
  8914                           
  8915                           ;incstack = 0
  8916                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8917                           ;__Umul8_16@multiplier stored from wreg
  8918  1D99  1283               	bcf	3,5	;RP0=0, select bank0
  8919  1D9A  1303               	bcf	3,6	;RP1=0, select bank0
  8920  1D9B  00A6               	movwf	__Umul8_16@multiplier
  8921  1D9C                     l3127:
  8922  1D9C  01A2               	clrf	__Umul8_16@product
  8923  1D9D  01A3               	clrf	__Umul8_16@product+1
  8924  1D9E                     l3129:
  8925  1D9E  0875               	movf	__Umul8_16@multiplicand,w
  8926  1D9F  00A0               	movwf	??__Umul8_16
  8927  1DA0  01A1               	clrf	??__Umul8_16+1
  8928  1DA1  0820               	movf	??__Umul8_16,w
  8929  1DA2  00A4               	movwf	__Umul8_16@word_mpld
  8930  1DA3  0821               	movf	??__Umul8_16+1,w
  8931  1DA4  00A5               	movwf	__Umul8_16@word_mpld+1
  8932  1DA5                     l3131:
  8933  1DA5  1C26               	btfss	__Umul8_16@multiplier,0
  8934  1DA6  2DA8               	goto	u5091
  8935  1DA7  2DA9               	goto	u5090
  8936  1DA8                     u5091:
  8937  1DA8  2DAF               	goto	l745
  8938  1DA9                     u5090:
  8939  1DA9                     l3133:
  8940  1DA9  0824               	movf	__Umul8_16@word_mpld,w
  8941  1DAA  07A2               	addwf	__Umul8_16@product,f
  8942  1DAB  1803               	skipnc
  8943  1DAC  0AA3               	incf	__Umul8_16@product+1,f
  8944  1DAD  0825               	movf	__Umul8_16@word_mpld+1,w
  8945  1DAE  07A3               	addwf	__Umul8_16@product+1,f
  8946  1DAF                     l745:
  8947  1DAF  3001               	movlw	1
  8948  1DB0                     u5105:
  8949  1DB0  1003               	clrc
  8950  1DB1  0DA4               	rlf	__Umul8_16@word_mpld,f
  8951  1DB2  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  8952  1DB3  3EFF               	addlw	-1
  8953  1DB4  1D03               	skipz
  8954  1DB5  2DB0               	goto	u5105
  8955  1DB6  1003               	clrc
  8956  1DB7  0CA6               	rrf	__Umul8_16@multiplier,f
  8957  1DB8                     l3135:
  8958  1DB8  0826               	movf	__Umul8_16@multiplier,w
  8959  1DB9  1D03               	btfss	3,2
  8960  1DBA  2DBC               	goto	u5111
  8961  1DBB  2DBD               	goto	u5110
  8962  1DBC                     u5111:
  8963  1DBC  2DA5               	goto	l3131
  8964  1DBD                     u5110:
  8965  1DBD                     l3137:
  8966  1DBD  0823               	movf	__Umul8_16@product+1,w
  8967  1DBE  00F6               	movwf	?__Umul8_16+1
  8968  1DBF  0822               	movf	__Umul8_16@product,w
  8969  1DC0  00F5               	movwf	?__Umul8_16
  8970  1DC1                     l747:
  8971  1DC1  0008               	return
  8972  1DC2                     __end_of__Umul8_16:
  8973                           
  8974                           	psect	text24
  8975  1D70                     __ptext24:	
  8976 ;; *************** function _conv *****************
  8977 ;; Defined at:
  8978 ;;		line 183 in file "main5a.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  aa              1    wreg     unsigned char 
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;  aa              1   26[BANK0 ] unsigned char 
  8983 ;;  result          4   22[BANK0 ] float 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  4   14[BANK0 ] float 
  8986 ;; Registers used:
  8987 ;;		wreg, status,2, status,0, pclath, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8993 ;;      Params:         0       4       0       0       0
  8994 ;;      Locals:         0       5       0       0       0
  8995 ;;      Temps:          0       4       0       0       0
  8996 ;;      Totals:         0      13       0       0       0
  8997 ;;Total ram usage:       13 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    2
  9000 ;; This function calls:
  9001 ;;		___xxtofl
  9002 ;; This function is called by:
  9003 ;;		_main
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           
  9008                           ;psect for function _conv
  9009  1D70                     _conv:
  9010                           
  9011                           ;incstack = 0
  9012                           ; Regs used in _conv: [wreg+status,2+status,0+pclath+cstack]
  9013                           ;conv@aa stored from wreg
  9014  1D70  1283               	bcf	3,5	;RP0=0, select bank0
  9015  1D71  1303               	bcf	3,6	;RP1=0, select bank0
  9016  1D72  00BA               	movwf	conv@aa
  9017  1D73                     l3593:
  9018                           
  9019                           ;main5a.c: 184:     float result;;main5a.c: 185:     result = aa*1;
  9020  1D73  083A               	movf	conv@aa,w
  9021  1D74  00B2               	movwf	??_conv
  9022  1D75  01B3               	clrf	??_conv+1
  9023  1D76  01B4               	clrf	??_conv+2
  9024  1D77  01B5               	clrf	??_conv+3
  9025  1D78  0835               	movf	??_conv+3,w
  9026  1D79  00A3               	movwf	___xxtofl@val+3
  9027  1D7A  0834               	movf	??_conv+2,w
  9028  1D7B  00A2               	movwf	___xxtofl@val+2
  9029  1D7C  0833               	movf	??_conv+1,w
  9030  1D7D  00A1               	movwf	___xxtofl@val+1
  9031  1D7E  0832               	movf	??_conv,w
  9032  1D7F  00A0               	movwf	___xxtofl@val
  9033  1D80  3001               	movlw	1
  9034  1D81  160A  118A  22AF  160A  158A  	fcall	___xxtofl
  9035  1D86  1283               	bcf	3,5	;RP0=0, select bank0
  9036  1D87  1303               	bcf	3,6	;RP1=0, select bank0
  9037  1D88  0823               	movf	?___xxtofl+3,w
  9038  1D89  00B9               	movwf	conv@result+3
  9039  1D8A  0822               	movf	?___xxtofl+2,w
  9040  1D8B  00B8               	movwf	conv@result+2
  9041  1D8C  0821               	movf	?___xxtofl+1,w
  9042  1D8D  00B7               	movwf	conv@result+1
  9043  1D8E  0820               	movf	?___xxtofl,w
  9044  1D8F  00B6               	movwf	conv@result
  9045  1D90                     l3595:
  9046                           
  9047                           ;main5a.c: 186:     return result;
  9048  1D90  0839               	movf	conv@result+3,w
  9049  1D91  00B1               	movwf	?_conv+3
  9050  1D92  0838               	movf	conv@result+2,w
  9051  1D93  00B0               	movwf	?_conv+2
  9052  1D94  0837               	movf	conv@result+1,w
  9053  1D95  00AF               	movwf	?_conv+1
  9054  1D96  0836               	movf	conv@result,w
  9055  1D97  00AE               	movwf	?_conv
  9056  1D98                     l133:
  9057  1D98  0008               	return
  9058  1D99                     __end_of_conv:
  9059                           
  9060                           	psect	text25
  9061  12AF                     __ptext25:	
  9062 ;; *************** function ___xxtofl *****************
  9063 ;; Defined at:
  9064 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  sign            1    wreg     unsigned char 
  9067 ;;  val             4    0[BANK0 ] long 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;  sign            1    8[BANK0 ] unsigned char 
  9070 ;;  arg             4   10[BANK0 ] unsigned long 
  9071 ;;  exp             1    9[BANK0 ] unsigned char 
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  4    0[BANK0 ] unsigned char 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9081 ;;      Params:         0       4       0       0       0
  9082 ;;      Locals:         0       6       0       0       0
  9083 ;;      Temps:          0       4       0       0       0
  9084 ;;      Totals:         0      14       0       0       0
  9085 ;;Total ram usage:       14 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:    1
  9088 ;; This function calls:
  9089 ;;		Nothing
  9090 ;; This function is called by:
  9091 ;;		_conv
  9092 ;;		_sprintf
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           
  9097                           ;psect for function ___xxtofl
  9098  12AF                     ___xxtofl:
  9099                           
  9100                           ;incstack = 0
  9101                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9102                           ;___xxtofl@sign stored from wreg
  9103  12AF  1283               	bcf	3,5	;RP0=0, select bank0
  9104  12B0  1303               	bcf	3,6	;RP1=0, select bank0
  9105  12B1  00A8               	movwf	___xxtofl@sign
  9106  12B2                     l3549:
  9107  12B2  0828               	movf	___xxtofl@sign,w
  9108  12B3  1903               	btfsc	3,2
  9109  12B4  2AB6               	goto	u6271
  9110  12B5  2AB7               	goto	u6270
  9111  12B6                     u6271:
  9112  12B6  2ACB               	goto	l3555
  9113  12B7                     u6270:
  9114  12B7                     l3551:
  9115  12B7  1FA3               	btfss	___xxtofl@val+3,7
  9116  12B8  2ABA               	goto	u6281
  9117  12B9  2ABB               	goto	u6280
  9118  12BA                     u6281:
  9119  12BA  2ACB               	goto	l3555
  9120  12BB                     u6280:
  9121  12BB                     l3553:
  9122  12BB  0920               	comf	___xxtofl@val,w
  9123  12BC  00AA               	movwf	___xxtofl@arg
  9124  12BD  0921               	comf	___xxtofl@val+1,w
  9125  12BE  00AB               	movwf	___xxtofl@arg+1
  9126  12BF  0922               	comf	___xxtofl@val+2,w
  9127  12C0  00AC               	movwf	___xxtofl@arg+2
  9128  12C1  0923               	comf	___xxtofl@val+3,w
  9129  12C2  00AD               	movwf	___xxtofl@arg+3
  9130  12C3  0AAA               	incf	___xxtofl@arg,f
  9131  12C4  1903               	skipnz
  9132  12C5  0AAB               	incf	___xxtofl@arg+1,f
  9133  12C6  1903               	skipnz
  9134  12C7  0AAC               	incf	___xxtofl@arg+2,f
  9135  12C8  1903               	skipnz
  9136  12C9  0AAD               	incf	___xxtofl@arg+3,f
  9137  12CA  2AD3               	goto	l770
  9138  12CB                     l3555:
  9139  12CB  0823               	movf	___xxtofl@val+3,w
  9140  12CC  00AD               	movwf	___xxtofl@arg+3
  9141  12CD  0822               	movf	___xxtofl@val+2,w
  9142  12CE  00AC               	movwf	___xxtofl@arg+2
  9143  12CF  0821               	movf	___xxtofl@val+1,w
  9144  12D0  00AB               	movwf	___xxtofl@arg+1
  9145  12D1  0820               	movf	___xxtofl@val,w
  9146  12D2  00AA               	movwf	___xxtofl@arg
  9147  12D3                     l770:
  9148  12D3  0823               	movf	___xxtofl@val+3,w
  9149  12D4  0422               	iorwf	___xxtofl@val+2,w
  9150  12D5  0421               	iorwf	___xxtofl@val+1,w
  9151  12D6  0420               	iorwf	___xxtofl@val,w
  9152  12D7  1D03               	skipz
  9153  12D8  2ADA               	goto	u6291
  9154  12D9  2ADB               	goto	u6290
  9155  12DA                     u6291:
  9156  12DA  2AE4               	goto	l3561
  9157  12DB                     u6290:
  9158  12DB                     l3557:
  9159  12DB  3000               	movlw	0
  9160  12DC  00A3               	movwf	?___xxtofl+3
  9161  12DD  3000               	movlw	0
  9162  12DE  00A2               	movwf	?___xxtofl+2
  9163  12DF  3000               	movlw	0
  9164  12E0  00A1               	movwf	?___xxtofl+1
  9165  12E1  3000               	movlw	0
  9166  12E2  00A0               	movwf	?___xxtofl
  9167  12E3  2B6A               	goto	l772
  9168  12E4                     l3561:
  9169  12E4  3096               	movlw	150
  9170  12E5  00A4               	movwf	??___xxtofl
  9171  12E6  0824               	movf	??___xxtofl,w
  9172  12E7  00A9               	movwf	___xxtofl@exp
  9173  12E8  2AF6               	goto	l3565
  9174  12E9                     l3563:
  9175  12E9  3001               	movlw	1
  9176  12EA  00A4               	movwf	??___xxtofl
  9177  12EB  0824               	movf	??___xxtofl,w
  9178  12EC  07A9               	addwf	___xxtofl@exp,f
  9179  12ED  3001               	movlw	1
  9180  12EE                     u6305:
  9181  12EE  1003               	clrc
  9182  12EF  0CAD               	rrf	___xxtofl@arg+3,f
  9183  12F0  0CAC               	rrf	___xxtofl@arg+2,f
  9184  12F1  0CAB               	rrf	___xxtofl@arg+1,f
  9185  12F2  0CAA               	rrf	___xxtofl@arg,f
  9186  12F3  3EFF               	addlw	-1
  9187  12F4  1D03               	skipz
  9188  12F5  2AEE               	goto	u6305
  9189  12F6                     l3565:
  9190  12F6  30FE               	movlw	254
  9191  12F7  052D               	andwf	___xxtofl@arg+3,w
  9192  12F8  1D03               	btfss	3,2
  9193  12F9  2AFB               	goto	u6311
  9194  12FA  2AFC               	goto	u6310
  9195  12FB                     u6311:
  9196  12FB  2AE9               	goto	l3563
  9197  12FC                     u6310:
  9198  12FC  2B18               	goto	l776
  9199  12FD                     l3567:
  9200  12FD  3001               	movlw	1
  9201  12FE  00A4               	movwf	??___xxtofl
  9202  12FF  0824               	movf	??___xxtofl,w
  9203  1300  07A9               	addwf	___xxtofl@exp,f
  9204  1301                     l3569:
  9205  1301  3001               	movlw	1
  9206  1302  07AA               	addwf	___xxtofl@arg,f
  9207  1303  3000               	movlw	0
  9208  1304  1803               	skipnc
  9209  1305  3001               	movlw	1
  9210  1306  07AB               	addwf	___xxtofl@arg+1,f
  9211  1307  3000               	movlw	0
  9212  1308  1803               	skipnc
  9213  1309  3001               	movlw	1
  9214  130A  07AC               	addwf	___xxtofl@arg+2,f
  9215  130B  3000               	movlw	0
  9216  130C  1803               	skipnc
  9217  130D  3001               	movlw	1
  9218  130E  07AD               	addwf	___xxtofl@arg+3,f
  9219  130F                     l3571:
  9220  130F  3001               	movlw	1
  9221  1310                     u6325:
  9222  1310  1003               	clrc
  9223  1311  0CAD               	rrf	___xxtofl@arg+3,f
  9224  1312  0CAC               	rrf	___xxtofl@arg+2,f
  9225  1313  0CAB               	rrf	___xxtofl@arg+1,f
  9226  1314  0CAA               	rrf	___xxtofl@arg,f
  9227  1315  3EFF               	addlw	-1
  9228  1316  1D03               	skipz
  9229  1317  2B10               	goto	u6325
  9230  1318                     l776:
  9231  1318  30FF               	movlw	255
  9232  1319  052D               	andwf	___xxtofl@arg+3,w
  9233  131A  1D03               	btfss	3,2
  9234  131B  2B1D               	goto	u6331
  9235  131C  2B1E               	goto	u6330
  9236  131D                     u6331:
  9237  131D  2AFD               	goto	l3567
  9238  131E                     u6330:
  9239  131E  2B2A               	goto	l3575
  9240  131F                     l3573:
  9241  131F  3001               	movlw	1
  9242  1320  02A9               	subwf	___xxtofl@exp,f
  9243  1321  3001               	movlw	1
  9244  1322  00A4               	movwf	??___xxtofl
  9245  1323                     u6345:
  9246  1323  1003               	clrc
  9247  1324  0DAA               	rlf	___xxtofl@arg,f
  9248  1325  0DAB               	rlf	___xxtofl@arg+1,f
  9249  1326  0DAC               	rlf	___xxtofl@arg+2,f
  9250  1327  0DAD               	rlf	___xxtofl@arg+3,f
  9251  1328  0BA4               	decfsz	??___xxtofl,f
  9252  1329  2B23               	goto	u6345
  9253  132A                     l3575:
  9254  132A  1BAC               	btfsc	___xxtofl@arg+2,7
  9255  132B  2B2D               	goto	u6351
  9256  132C  2B2E               	goto	u6350
  9257  132D                     u6351:
  9258  132D  2B34               	goto	l783
  9259  132E                     u6350:
  9260  132E                     l3577:
  9261  132E  3002               	movlw	2
  9262  132F  0229               	subwf	___xxtofl@exp,w
  9263  1330  1803               	skipnc
  9264  1331  2B33               	goto	u6361
  9265  1332  2B34               	goto	u6360
  9266  1333                     u6361:
  9267  1333  2B1F               	goto	l3573
  9268  1334                     u6360:
  9269  1334                     l783:
  9270  1334  1829               	btfsc	___xxtofl@exp,0
  9271  1335  2B37               	goto	u6371
  9272  1336  2B38               	goto	u6370
  9273  1337                     u6371:
  9274  1337  2B40               	goto	l784
  9275  1338                     u6370:
  9276  1338                     l3579:
  9277  1338  30FF               	movlw	255
  9278  1339  05AA               	andwf	___xxtofl@arg,f
  9279  133A  30FF               	movlw	255
  9280  133B  05AB               	andwf	___xxtofl@arg+1,f
  9281  133C  307F               	movlw	127
  9282  133D  05AC               	andwf	___xxtofl@arg+2,f
  9283  133E  30FF               	movlw	255
  9284  133F  05AD               	andwf	___xxtofl@arg+3,f
  9285  1340                     l784:
  9286  1340  1003               	clrc
  9287  1341  0CA9               	rrf	___xxtofl@exp,f
  9288  1342                     l3581:
  9289  1342  0829               	movf	___xxtofl@exp,w
  9290  1343  00A4               	movwf	??___xxtofl
  9291  1344  01A5               	clrf	??___xxtofl+1
  9292  1345  01A6               	clrf	??___xxtofl+2
  9293  1346  01A7               	clrf	??___xxtofl+3
  9294  1347  3018               	movlw	24
  9295  1348                     u6385:
  9296  1348  1003               	clrc
  9297  1349  0DA4               	rlf	??___xxtofl,f
  9298  134A  0DA5               	rlf	??___xxtofl+1,f
  9299  134B  0DA6               	rlf	??___xxtofl+2,f
  9300  134C  0DA7               	rlf	??___xxtofl+3,f
  9301  134D                     u6380:
  9302  134D  3EFF               	addlw	-1
  9303  134E  1D03               	skipz
  9304  134F  2B48               	goto	u6385
  9305  1350  0824               	movf	??___xxtofl,w
  9306  1351  04AA               	iorwf	___xxtofl@arg,f
  9307  1352  0825               	movf	??___xxtofl+1,w
  9308  1353  04AB               	iorwf	___xxtofl@arg+1,f
  9309  1354  0826               	movf	??___xxtofl+2,w
  9310  1355  04AC               	iorwf	___xxtofl@arg+2,f
  9311  1356  0827               	movf	??___xxtofl+3,w
  9312  1357  04AD               	iorwf	___xxtofl@arg+3,f
  9313  1358                     l3583:
  9314  1358  0828               	movf	___xxtofl@sign,w
  9315  1359  1903               	btfsc	3,2
  9316  135A  2B5C               	goto	u6391
  9317  135B  2B5D               	goto	u6390
  9318  135C                     u6391:
  9319  135C  2B62               	goto	l3589
  9320  135D                     u6390:
  9321  135D                     l3585:
  9322  135D  1FA3               	btfss	___xxtofl@val+3,7
  9323  135E  2B60               	goto	u6401
  9324  135F  2B61               	goto	u6400
  9325  1360                     u6401:
  9326  1360  2B62               	goto	l3589
  9327  1361                     u6400:
  9328  1361                     l3587:
  9329  1361  17AD               	bsf	___xxtofl@arg+3,7
  9330  1362                     l3589:
  9331  1362  082D               	movf	___xxtofl@arg+3,w
  9332  1363  00A3               	movwf	?___xxtofl+3
  9333  1364  082C               	movf	___xxtofl@arg+2,w
  9334  1365  00A2               	movwf	?___xxtofl+2
  9335  1366  082B               	movf	___xxtofl@arg+1,w
  9336  1367  00A1               	movwf	?___xxtofl+1
  9337  1368  082A               	movf	___xxtofl@arg,w
  9338  1369  00A0               	movwf	?___xxtofl
  9339  136A                     l772:
  9340  136A  0008               	return
  9341  136B                     __end_of___xxtofl:
  9342                           
  9343                           	psect	text26
  9344  1D34                     __ptext26:	
  9345 ;; *************** function _cfg_usart *****************
  9346 ;; Defined at:
  9347 ;;		line 138 in file "main5a.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;		None
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;		None
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  1    wreg      void 
  9354 ;; Registers used:
  9355 ;;		wreg, status,2
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9361 ;;      Params:         0       0       0       0       0
  9362 ;;      Locals:         0       0       0       0       0
  9363 ;;      Temps:          0       0       0       0       0
  9364 ;;      Totals:         0       0       0       0       0
  9365 ;;Total ram usage:        0 bytes
  9366 ;; Hardware stack levels used:    1
  9367 ;; Hardware stack levels required when called:    1
  9368 ;; This function calls:
  9369 ;;		Nothing
  9370 ;; This function is called by:
  9371 ;;		_main
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           
  9376                           ;psect for function _cfg_usart
  9377  1D34                     _cfg_usart:
  9378  1D34                     l2843:	
  9379                           ;incstack = 0
  9380                           ; Regs used in _cfg_usart: [wreg+status,2]
  9381                           
  9382                           
  9383                           ;main5a.c: 140:     TXSTAbits.SYNC = 0;
  9384  1D34  1683               	bsf	3,5	;RP0=1, select bank1
  9385  1D35  1303               	bcf	3,6	;RP1=0, select bank1
  9386  1D36  1218               	bcf	24,4	;volatile
  9387                           
  9388                           ;main5a.c: 141:     TXSTAbits.BRGH = 1;
  9389  1D37  1518               	bsf	24,2	;volatile
  9390                           
  9391                           ;main5a.c: 143:     BAUDCTLbits.BRG16 = 1;
  9392  1D38  1683               	bsf	3,5	;RP0=1, select bank3
  9393  1D39  1703               	bsf	3,6	;RP1=1, select bank3
  9394  1D3A  1587               	bsf	7,3	;volatile
  9395  1D3B                     l2845:
  9396                           
  9397                           ;main5a.c: 145:     SPBRG = 207;
  9398  1D3B  30CF               	movlw	207
  9399  1D3C  1683               	bsf	3,5	;RP0=1, select bank1
  9400  1D3D  1303               	bcf	3,6	;RP1=0, select bank1
  9401  1D3E  0099               	movwf	25	;volatile
  9402  1D3F                     l2847:
  9403                           
  9404                           ;main5a.c: 146:     SPBRGH = 0;
  9405  1D3F  019A               	clrf	26	;volatile
  9406  1D40                     l2849:
  9407                           
  9408                           ;main5a.c: 148:     RCSTAbits.SPEN = 1;
  9409  1D40  1283               	bcf	3,5	;RP0=0, select bank0
  9410  1D41  1303               	bcf	3,6	;RP1=0, select bank0
  9411  1D42  1798               	bsf	24,7	;volatile
  9412  1D43                     l2851:
  9413                           
  9414                           ;main5a.c: 149:     RCSTAbits.RX9 = 0;
  9415  1D43  1318               	bcf	24,6	;volatile
  9416  1D44                     l2853:
  9417                           
  9418                           ;main5a.c: 150:     RCSTAbits.CREN = 1;
  9419  1D44  1618               	bsf	24,4	;volatile
  9420  1D45                     l2855:
  9421                           
  9422                           ;main5a.c: 152:     TXSTAbits.TXEN = 1;
  9423  1D45  1683               	bsf	3,5	;RP0=1, select bank1
  9424  1D46  1303               	bcf	3,6	;RP1=0, select bank1
  9425  1D47  1698               	bsf	24,5	;volatile
  9426  1D48                     l112:
  9427  1D48  0008               	return
  9428  1D49                     __end_of_cfg_usart:
  9429                           
  9430                           	psect	text27
  9431  1D00                     __ptext27:	
  9432 ;; *************** function _cfg_iocb *****************
  9433 ;; Defined at:
  9434 ;;		line 162 in file "main5a.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;		None
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  1    wreg      void 
  9441 ;; Registers used:
  9442 ;;		wreg
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9448 ;;      Params:         0       0       0       0       0
  9449 ;;      Locals:         0       0       0       0       0
  9450 ;;      Temps:          0       0       0       0       0
  9451 ;;      Totals:         0       0       0       0       0
  9452 ;;Total ram usage:        0 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:    1
  9455 ;; This function calls:
  9456 ;;		Nothing
  9457 ;; This function is called by:
  9458 ;;		_main
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           
  9463                           ;psect for function _cfg_iocb
  9464  1D00                     _cfg_iocb:
  9465  1D00                     l2839:	
  9466                           ;incstack = 0
  9467                           ; Regs used in _cfg_iocb: [wreg]
  9468                           
  9469                           
  9470                           ;main5a.c: 163:     IOCB = 0X03 ;
  9471  1D00  3003               	movlw	3
  9472  1D01  1683               	bsf	3,5	;RP0=1, select bank1
  9473  1D02  1303               	bcf	3,6	;RP1=0, select bank1
  9474  1D03  0096               	movwf	22	;volatile
  9475  1D04                     l2841:
  9476                           
  9477                           ;main5a.c: 164:     INTCONbits.RBIF = 0;
  9478  1D04  100B               	bcf	11,0	;volatile
  9479  1D05                     l118:
  9480  1D05  0008               	return
  9481  1D06                     __end_of_cfg_iocb:
  9482                           
  9483                           	psect	text28
  9484  1D20                     __ptext28:	
  9485 ;; *************** function _cfg_io *****************
  9486 ;; Defined at:
  9487 ;;		line 117 in file "main5a.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;		None
  9490 ;; Auto vars:     Size  Location     Type
  9491 ;;		None
  9492 ;; Return value:  Size  Location     Type
  9493 ;;                  1    wreg      void 
  9494 ;; Registers used:
  9495 ;;		wreg, status,2
  9496 ;; Tracked objects:
  9497 ;;		On entry : 0/0
  9498 ;;		On exit  : 0/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9501 ;;      Params:         0       0       0       0       0
  9502 ;;      Locals:         0       0       0       0       0
  9503 ;;      Temps:          0       0       0       0       0
  9504 ;;      Totals:         0       0       0       0       0
  9505 ;;Total ram usage:        0 bytes
  9506 ;; Hardware stack levels used:    1
  9507 ;; Hardware stack levels required when called:    1
  9508 ;; This function calls:
  9509 ;;		Nothing
  9510 ;; This function is called by:
  9511 ;;		_main
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           
  9516                           ;psect for function _cfg_io
  9517  1D20                     _cfg_io:
  9518  1D20                     l2821:	
  9519                           ;incstack = 0
  9520                           ; Regs used in _cfg_io: [wreg+status,2]
  9521                           
  9522                           
  9523                           ;main5a.c: 118:     ANSEL = 0;
  9524  1D20  1683               	bsf	3,5	;RP0=1, select bank3
  9525  1D21  1703               	bsf	3,6	;RP1=1, select bank3
  9526  1D22  0188               	clrf	8	;volatile
  9527                           
  9528                           ;main5a.c: 119:     ANSELH = 0;
  9529  1D23  0189               	clrf	9	;volatile
  9530                           
  9531                           ;main5a.c: 121:     TRISA = 0;
  9532  1D24  1683               	bsf	3,5	;RP0=1, select bank1
  9533  1D25  1303               	bcf	3,6	;RP1=0, select bank1
  9534  1D26  0185               	clrf	5	;volatile
  9535                           
  9536                           ;main5a.c: 122:     TRISB = 0;
  9537  1D27  0186               	clrf	6	;volatile
  9538                           
  9539                           ;main5a.c: 123:     TRISD = 0;
  9540  1D28  0188               	clrf	8	;volatile
  9541  1D29                     l2823:
  9542                           
  9543                           ;main5a.c: 124:     TRISBbits.TRISB0 = 1;
  9544  1D29  1406               	bsf	6,0	;volatile
  9545  1D2A                     l2825:
  9546                           
  9547                           ;main5a.c: 125:     TRISBbits.TRISB1 = 1;
  9548  1D2A  1486               	bsf	6,1	;volatile
  9549  1D2B                     l2827:
  9550                           
  9551                           ;main5a.c: 126:     OPTION_REGbits.nRBPU = 0 ;
  9552  1D2B  1381               	bcf	1,7	;volatile
  9553  1D2C                     l2829:
  9554                           
  9555                           ;main5a.c: 127:     WPUB = 0x03;
  9556  1D2C  3003               	movlw	3
  9557  1D2D  0095               	movwf	21	;volatile
  9558  1D2E                     l2831:
  9559                           
  9560                           ;main5a.c: 129:     PORTB = 0;
  9561  1D2E  1283               	bcf	3,5	;RP0=0, select bank0
  9562  1D2F  1303               	bcf	3,6	;RP1=0, select bank0
  9563  1D30  0186               	clrf	6	;volatile
  9564  1D31                     l2833:
  9565                           
  9566                           ;main5a.c: 130:     PORTD = 0;
  9567  1D31  0188               	clrf	8	;volatile
  9568  1D32                     l2835:
  9569                           
  9570                           ;main5a.c: 131:     PORTA = 0;
  9571  1D32  0185               	clrf	5	;volatile
  9572  1D33                     l106:
  9573  1D33  0008               	return
  9574  1D34                     __end_of_cfg_io:
  9575                           
  9576                           	psect	text29
  9577  1D06                     __ptext29:	
  9578 ;; *************** function _cfg_inte *****************
  9579 ;; Defined at:
  9580 ;;		line 155 in file "main5a.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;		None
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;		None
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  1    wreg      void 
  9587 ;; Registers used:
  9588 ;;		None
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9594 ;;      Params:         0       0       0       0       0
  9595 ;;      Locals:         0       0       0       0       0
  9596 ;;      Temps:          0       0       0       0       0
  9597 ;;      Totals:         0       0       0       0       0
  9598 ;;Total ram usage:        0 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:    1
  9601 ;; This function calls:
  9602 ;;		Nothing
  9603 ;; This function is called by:
  9604 ;;		_main
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           
  9609                           ;psect for function _cfg_inte
  9610  1D06                     _cfg_inte:
  9611  1D06                     l2837:	
  9612                           ;incstack = 0
  9613                           ; Regs used in _cfg_inte: []
  9614                           
  9615                           
  9616                           ;main5a.c: 156:     INTCONbits.GIE = 1;
  9617  1D06  178B               	bsf	11,7	;volatile
  9618                           
  9619                           ;main5a.c: 157:     INTCONbits.PEIE = 1;
  9620  1D07  170B               	bsf	11,6	;volatile
  9621                           
  9622                           ;main5a.c: 158:     PIE1bits.RCIE = 1;
  9623  1D08  1683               	bsf	3,5	;RP0=1, select bank1
  9624  1D09  1303               	bcf	3,6	;RP1=0, select bank1
  9625  1D0A  168C               	bsf	12,5	;volatile
  9626                           
  9627                           ;main5a.c: 159:     INTCONbits.RBIE = 1;
  9628  1D0B  158B               	bsf	11,3	;volatile
  9629                           
  9630                           ;main5a.c: 160:     INTCONbits.RBIF = 0;
  9631  1D0C  100B               	bcf	11,0	;volatile
  9632  1D0D                     l115:
  9633  1D0D  0008               	return
  9634  1D0E                     __end_of_cfg_inte:
  9635                           
  9636                           	psect	text30
  9637  1CFA                     __ptext30:	
  9638 ;; *************** function _cfg_clk *****************
  9639 ;; Defined at:
  9640 ;;		line 134 in file "main5a.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;		None
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      void 
  9647 ;; Registers used:
  9648 ;;		wreg, status,2, status,0
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9654 ;;      Params:         0       0       0       0       0
  9655 ;;      Locals:         0       0       0       0       0
  9656 ;;      Temps:          0       0       0       0       0
  9657 ;;      Totals:         0       0       0       0       0
  9658 ;;Total ram usage:        0 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:    1
  9661 ;; This function calls:
  9662 ;;		Nothing
  9663 ;; This function is called by:
  9664 ;;		_main
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           
  9669                           ;psect for function _cfg_clk
  9670  1CFA                     _cfg_clk:
  9671  1CFA                     l2857:	
  9672                           ;incstack = 0
  9673                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  9674                           
  9675                           
  9676                           ;main5a.c: 135:     OSCCONbits.IRCF = 0b111;
  9677  1CFA  3070               	movlw	112
  9678  1CFB  1683               	bsf	3,5	;RP0=1, select bank1
  9679  1CFC  1303               	bcf	3,6	;RP1=0, select bank1
  9680  1CFD  048F               	iorwf	15,f	;volatile
  9681  1CFE                     l2859:
  9682                           
  9683                           ;main5a.c: 136:     OSCCONbits.SCS = 1;
  9684  1CFE  140F               	bsf	15,0	;volatile
  9685  1CFF                     l109:
  9686  1CFF  0008               	return
  9687  1D00                     __end_of_cfg_clk:
  9688                           
  9689                           	psect	text31
  9690  1DF3                     __ptext31:	
  9691 ;; *************** function _isr *****************
  9692 ;; Defined at:
  9693 ;;		line 68 in file "main5a.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;		None
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;		None
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  1    wreg      void 
  9700 ;; Registers used:
  9701 ;;		wreg, status,2, status,0
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9707 ;;      Params:         0       0       0       0       0
  9708 ;;      Locals:         0       0       0       0       0
  9709 ;;      Temps:          5       0       0       0       0
  9710 ;;      Totals:         5       0       0       0       0
  9711 ;;Total ram usage:        5 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		Interrupt level 1
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           
  9721                           ;psect for function _isr
  9722  1DF3                     _isr:
  9723  1DF3                     i1l3053:
  9724                           
  9725                           ;main5a.c: 70:     if(PIR1bits.RCIF){
  9726  1DF3  1283               	bcf	3,5	;RP0=0, select bank0
  9727  1DF4  1303               	bcf	3,6	;RP1=0, select bank0
  9728  1DF5  1E8C               	btfss	12,5	;volatile
  9729  1DF6  2DF8               	goto	u505_21
  9730  1DF7  2DF9               	goto	u505_20
  9731  1DF8                     u505_21:
  9732  1DF8  2E0C               	goto	i1l3057
  9733  1DF9                     u505_20:
  9734  1DF9                     i1l3055:
  9735                           
  9736                           ;main5a.c: 71:         TXREG = 12;
  9737  1DF9  300C               	movlw	12
  9738  1DFA  0099               	movwf	25	;volatile
  9739                           
  9740                           ;main5a.c: 72:         TXREG = 0X0D;
  9741  1DFB  300D               	movlw	13
  9742  1DFC  0099               	movwf	25	;volatile
  9743                           
  9744                           ;main5a.c: 73:         PORTD = RCREG;
  9745  1DFD  081A               	movf	26,w	;volatile
  9746  1DFE  0088               	movwf	8	;volatile
  9747                           
  9748                           ;main5a.c: 74:         _delay((unsigned long)((4000)*(4000000/4000.0)));
  9749  1DFF  3015               	movlw	21
  9750  1E00  00F2               	movwf	??_isr+2
  9751  1E01  304B               	movlw	75
  9752  1E02  00F1               	movwf	??_isr+1
  9753  1E03  30BE               	movlw	190
  9754  1E04  00F0               	movwf	??_isr
  9755  1E05                     u669_27:
  9756  1E05  0BF0               	decfsz	??_isr,f
  9757  1E06  2E05               	goto	u669_27
  9758  1E07  0BF1               	decfsz	??_isr+1,f
  9759  1E08  2E05               	goto	u669_27
  9760  1E09  0BF2               	decfsz	??_isr+2,f
  9761  1E0A  2E05               	goto	u669_27
  9762  1E0B  0000               	nop
  9763  1E0C                     i1l3057:
  9764                           
  9765                           ;main5a.c: 77:     if(INTCONbits.RBIF){
  9766  1E0C  1C0B               	btfss	11,0	;volatile
  9767  1E0D  2E0F               	goto	u506_21
  9768  1E0E  2E10               	goto	u506_20
  9769  1E0F                     u506_21:
  9770  1E0F  2E26               	goto	i1l95
  9771  1E10                     u506_20:
  9772  1E10                     i1l3059:
  9773                           
  9774                           ;main5a.c: 78:         if (PORTBbits.RB0 == 0){
  9775  1E10  1283               	bcf	3,5	;RP0=0, select bank0
  9776  1E11  1303               	bcf	3,6	;RP1=0, select bank0
  9777  1E12  1806               	btfsc	6,0	;volatile
  9778  1E13  2E15               	goto	u507_21
  9779  1E14  2E16               	goto	u507_20
  9780  1E15                     u507_21:
  9781  1E15  2E1C               	goto	i1l3063
  9782  1E16                     u507_20:
  9783  1E16                     i1l3061:
  9784                           
  9785                           ;main5a.c: 79:             V++;
  9786  1E16  3001               	movlw	1
  9787  1E17  00F0               	movwf	??_isr
  9788  1E18  0870               	movf	??_isr,w
  9789  1E19  1683               	bsf	3,5	;RP0=1, select bank1
  9790  1E1A  1303               	bcf	3,6	;RP1=0, select bank1
  9791  1E1B  07D4               	addwf	_V^(0+128),f
  9792  1E1C                     i1l3063:
  9793                           
  9794                           ;main5a.c: 81:         if (PORTBbits.RB1 == 0){
  9795  1E1C  1283               	bcf	3,5	;RP0=0, select bank0
  9796  1E1D  1886               	btfsc	6,1	;volatile
  9797  1E1E  2E20               	goto	u508_21
  9798  1E1F  2E21               	goto	u508_20
  9799  1E20                     u508_21:
  9800  1E20  2E25               	goto	i1l3067
  9801  1E21                     u508_20:
  9802  1E21                     i1l3065:
  9803                           
  9804                           ;main5a.c: 82:             V--;
  9805  1E21  3001               	movlw	1
  9806  1E22  1683               	bsf	3,5	;RP0=1, select bank1
  9807  1E23  1303               	bcf	3,6	;RP1=0, select bank1
  9808  1E24  02D4               	subwf	_V^(0+128),f
  9809  1E25                     i1l3067:
  9810                           
  9811                           ;main5a.c: 84:         INTCONbits.RBIF = 0;
  9812  1E25  100B               	bcf	11,0	;volatile
  9813  1E26                     i1l95:
  9814  1E26  0874               	movf	??_isr+4,w
  9815  1E27  008A               	movwf	10
  9816  1E28  0E73               	swapf	??_isr+3,w
  9817  1E29  0083               	movwf	3
  9818  1E2A  0EFE               	swapf	btemp,f
  9819  1E2B  0E7E               	swapf	btemp,w
  9820  1E2C  0009               	retfie
  9821  1E2D                     __end_of_isr:
  9822  007E                     btemp	set	126	;btemp
  9823  007E                     wtemp0	set	126
  9824                           
  9825                           	psect	intentry
  9826  0004                     __pintentry:	
  9827                           ;incstack = 0
  9828                           ; Regs used in _isr: [wreg+status,2+status,0]
  9829                           
  9830  0004                     interrupt_function:
  9831  007E                     saved_w	set	btemp
  9832  0004  00FE               	movwf	btemp
  9833  0005  0E03               	swapf	3,w
  9834  0006  00F3               	movwf	??_isr+3
  9835  0007  080A               	movf	10,w
  9836  0008  00F4               	movwf	??_isr+4
  9837  0009  160A  158A  2DF3   	ljmp	_isr
  9838                           
  9839                           	psect	config
  9840                           
  9841                           ;Config register CONFIG1 @ 0x2007
  9842                           ;	Oscillator Selection bits
  9843                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9844                           ;	Watchdog Timer Enable bit
  9845                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9846                           ;	Power-up Timer Enable bit
  9847                           ;	PWRTE = OFF, PWRT disabled
  9848                           ;	RE3/MCLR pin function select bit
  9849                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9850                           ;	Code Protection bit
  9851                           ;	CP = OFF, Program memory code protection is disabled
  9852                           ;	Data Code Protection bit
  9853                           ;	CPD = OFF, Data memory code protection is disabled
  9854                           ;	Brown Out Reset Selection bits
  9855                           ;	BOREN = OFF, BOR disabled
  9856                           ;	Internal External Switchover bit
  9857                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9858                           ;	Fail-Safe Clock Monitor Enabled bit
  9859                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9860                           ;	Low Voltage Programming Enable bit
  9861                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9862                           ;	In-Circuit Debugger Mode bit
  9863                           ;	DEBUG = 0x1, unprogrammed default
  9864  2007                     	org	8199
  9865  2007  20D4               	dw	8404
  9866                           
  9867                           ;Config register CONFIG2 @ 0x2008
  9868                           ;	Brown-out Reset Selection bit
  9869                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9870                           ;	Flash Program Memory Self Write Enable bits
  9871                           ;	WRT = OFF, Write protection off
  9872  2008                     	org	8200
  9873  2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    144
    Data        0
    BSS         23
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     80      80
    BANK1            80     42      69
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 


Critical Paths under _main in COMMON

    _main->_send_crct
    _sprintf->___awdiv
    _sprintf->___llmod
    _sprintf->___wmul
    _scale->___awdiv
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    _send_crct->_send_char
    ___flmul->__Umul8_16
    ___flmul->___awdiv
    ___flmul->___lwmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flsub->___fladd
    ___fladd->_fround
    _conv2->___fltol
    ___fltol->_scale
    ___flmul->___awdiv
    _conv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   44869
                                             41 BANK1      1     1      0
                            _cfg_clk
                           _cfg_inte
                             _cfg_io
                           _cfg_iocb
                          _cfg_usart
                               _conv
                              _conv2
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             40    37      3   37442
                                              8 BANK1     33    30      3
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9720
                                             40 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              5 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              6 COMMON     1     1      0
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7613
                                             40 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              4 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              0 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              5 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              5 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              5 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             60 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv2                                                6     2      4    6561
                                             70 BANK0      6     2      4
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             59 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5873
                                             14 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              5 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4     721
                                             14 BANK0     13     9      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_iocb                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_inte                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cfg_clk
   _cfg_inte
   _cfg_io
   _cfg_iocb
   _cfg_usart
   _conv
     ___xxtofl
   _conv2
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2A      45       7       86.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 15 23:05:21 2021

                      _V 00D4                        _v 00DF                        pc 0002  
                     _f1 00D5                       _f2 00CA             ___awdiv@sign 002B  
                     _op 0077                       fsr 0004      ___wmul@multiplicand 0022  
    __Umul8_16@word_mpld 0024                      l112 1D48                      l106 1D33  
                    l130 1D1F                      l115 1D0D                      l124 10BD  
                    l109 1CFF                      l133 1D98                      l118 1D05  
                    l127 1D17                      l303 1D57                      l136 1DF2  
                    l305 1D6F                      l243 0FFF                      l236 1577  
                    l502 07FC                      l520 093B                      l513 11F5  
                    l521 08AD                      l257 003B                      l506 120A  
                    l282 0510                      l339 1125                      l531 092E  
                    l516 120A                      l524 08FE                      l630 15DB  
                    l456 118E                      l473 07EF                      l609 1EAE  
                    l289 0554                      l490 1EE9                      l634 1682  
                    l474 0754                      l491 1EFE                      l651 174D  
                    l643 17FF                      l619 1E68                      l299 0731  
                    l732 0C08                      l636 1659                      l484 07E2  
                    l661 1793                      l477 07B2                      l469 1FFF  
                    l726 0C9C                      l494 1229                      l655 1771  
                    l559 1FA4                      l672 17F3                      l664 17D1  
                    l745 1DAF                      l489 1ECD                      l497 1295  
                    l673 17FF                      l770 12D3                      l738 0C90  
                    l498 12AE                      l747 1DC1                      l772 136A  
                    l676 1F4E                      l783 1334                      l784 1340  
                    l776 1318                      _isr 1DF3                      fsr0 0004  
                    indf 0000             ___awmod@sign 0025             ___flmul@aexp 003C  
           ___flmul@bexp 0041             ___flmul@sign 003B             ___flmul@temp 0046  
           ___flmul@prod 0042             ___fltol@exp1 0065                     l2101 1E85  
                   l2103 1E96                     l2111 1EAA                     l2201 1609  
                   l2105 1E9C                     l2211 161D                     l2203 160D  
                   l2107 1E9D                     l2221 165D                     l2213 1621  
                   l2205 1611                     l2141 1585                     l2109 1EA4  
                   l2311 17CD                     l2303 1798                     l2231 1676  
                   l2223 1666                     l2207 1615                     l2215 1625  
                   l2151 159C                     l2143 1589                     l2321 17E9  
                   l2313 17D6                     l2305 179D                     l2241 1694  
                   l2225 1668                     l2233 167A                     l2217 1626  
                   l2209 1619                     l2161 15B2                     l2153 159D  
                   l2145 158A                     l2137 1578                     l3201 1FC5  
                   l3131 1DA5                     l3051 10B2                     l2323 17ED  
                   l2315 17DB                     l2307 17AB                     l2251 16BE  
                   l2243 16AB                     l2235 1686                     l2227 166C  
                   l2219 163D                     l2171 15C3                     l2163 15B3  
                   l2147 158F                     l2155 159F                     l2139 157F  
                   l2091 1E6D                     l3211 1FE4                     l3203 1FCC  
                   l3133 1DA9                     l3301 0A47                     l3045 109C  
                   l2325 17EF                     l2317 17E3                     l2309 17AF  
                   l2261 16E7                     l2253 16C2                     l2245 16AF  
                   l2237 168B                     l2229 166D                     l2181 15E1  
                   l2173 15C8                     l2165 15B9                     l2157 15A7  
                   l2149 1594                     l2093 1E73                     l3141 1126  
                   l3213 1FEB                     l3205 1FD0                     l3135 1DB8  
                   l3127 1D9C                     l3311 0AA9                     l3303 0A63  
                   l3047 109F                     l2327 17FA                     l2319 17E8  
                   l2271 1755                     l2263 1725                     l2255 16C3  
                   l2247 16B3                     l2191 15F5                     l2183 15E5  
                   l2175 15D0                     l2167 15BD                     l2159 15AC  
                   l2095 1E76                     l3231 1E43                     l3223 1E2D  
                   l3151 1138                     l3143 1129                     l3207 1FD4  
                   l3215 1FF1                     l3137 1DBD                     l3129 1D9E  
                   l3321 0B39                     l3313 0AC6                     l3305 0A6C  
                   l3049 10AA                     l2329 17FE                     l2281 1770  
                   l2273 175A                     l2265 172B                     l2257 16CC  
                   l2249 16BC                     l2193 15F9                     l2185 15E9  
                   l2177 15D1                     l2169 15BE                     l2601 076E  
                   l2097 1E7D                     l2089 1E69                     l3233 1E47  
                   l3225 1E35                     l3241 1E64                     l3161 114C  
                   l3153 113D                     l3145 112D                     l3217 1FF6  
                   l3209 1FDE                     l3331 0BCB                     l3323 0B66  
                   l3315 0ADF                     l3307 0A7C                     l3251 094D  
                   l2283 1775                     l2291 1781                     l2267 1730  
                   l2259 16D1                     l2195 15FD                     l2187 15ED  
                   l2179 15D3                     l2611 07A2                     l2603 0770  
                   l2099 1E81                     l3235 1E51                     l3227 1E38  
                   l3171 1172                     l3163 1153                     l3155 1141  
                   l3147 1132                     l3219 1FFB                     l3403 0CA0  
                   l3333 0BD4                     l3341 0BE8                     l3325 0B8C  
                   l3317 0AFC                     l3309 0A99                     l3261 0962  
                   l3253 094E                     l3245 093C                     l2285 1778  
                   l2277 1763                     l2269 173F                     l2293 1785  
                   l2197 1601                     l2189 15F1                     l3501 1D5E  
                   l2613 07A3                     l2605 0779                     l3237 1E57  
                   l3229 1E3F                     l3181 118A                     l3173 1173  
                   l3165 1157                     l3157 1143                     l3149 1134  
                   l3421 0E26                     l3405 0CA4                     l3343 0BEC  
                   l3335 0BD8                     l3327 0BB4                     l3319 0B29  
                   l3271 097A                     l3263 096A                     l3255 0953  
                   l3247 0943                     l2471 1D17                     l3511 1EC5  
                   l2295 1786                     l2287 177A                     l2279 176C  
                   l2199 1605                     l3503 1D65                     l2631 07D7  
                   l2623 07BE                     l2615 07AC                     l2607 0782  
                   l3239 1E5E                     l3175 117A                     l3167 115B  
                   l3159 1149                     l3191 1FB1                     l3415 0D97  
                   l3407 0CA6                     l3361 0C3D                     l3353 0C0D  
                   l3345 0BED                     l3337 0BD9                     l3329 0BBD  
                   l3281 0996                     l3273 097F                     l3265 096F  
                   l3257 0958                     l3249 0949                     l2721 11A5  
                   l3601 1DEE                     l2473 1D1D                     l3513 1EE1  
                   l3521 120B                     l2297 178A                     l2289 177F  
                   l3505 1D6B                     l2633 07E7                     l2617 07B6  
                   l2625 07D0                     l2609 0794                     l3169 116C  
                   l3177 1180                     l3193 1FB3                     l3185 1FA5  
                   l3433 0F44                     l3417 0D9E                     l3409 0CAD  
                   l3425 0E53                     l3371 0C74                     l3355 0C12  
                   l3363 0C43                     l3347 0BF1                     l3339 0BE2  
                   l3291 09B9                     l3283 099B                     l3275 0984  
                   l3267 0975                     l3259 0960                     l2731 11C9  
                   l2723 11BA                     l2715 118F                     l3515 1EFB  
                   l3531 126D                     l3523 1221                     l2299 1790  
                   l2651 10BE                     l3443 087F                     l3179 1185  
                   l3195 1FB7                     l3187 1FA8                     l3435 0F4B  
                   l3427 0E5A                     l3611 0033                     l2821 1D20  
                   l3381 0C94                     l3373 0C76                     l3365 0C50  
                   l3357 0C20                     l3349 0C05                     l3293 09C6  
                   l3285 09A0                     l3277 098C                     l3269 0979  
                   l2725 11BB                     l2717 119C                     l3517 1EFD  
                   l3509 1EAF                     l3533 1271                     l3525 123D  
                   l3541 07F0                     l2661 10ED                     l2653 10D0  
                   l3461 08C5                     l3445 0892                     l3197 1FBC  
                   l3189 1FAC                     l3621 0063                     l3613 0038  
                   l3605 0021                     l2831 1D2E                     l2823 1D29  
                   l3551 12B7                     l3375 0C84                     l3367 0C5B  
                   l3359 0C24                     l3295 09E3                     l3279 098E  
                   l2727 11C3                     l3535 12AB                     l3527 1245  
                   l3543 07FA                     l2663 10FF                     l2655 10D3  
                   l2671 111D                     l2751 1F4F                     l2591 0748  
                   l3471 08F0                     l3463 08CE                     l3455 08AE  
                   l3199 1FC2                     l3439 0FD3                     l3711 046A  
                   l3703 0448                     l3631 00D5                     l3623 0067  
                   l3607 0026                     l2833 1D31                     l2825 1D2A  
                   l2841 1D04                     l3561 12E4                     l3553 12BB  
                   l3377 0C88                     l3369 0C6A                     l3297 09FF  
                   l3289 09A9                     l2745 11EA                     l2737 11D1  
                   l2729 11C5                     l3537 12AD                     l3529 1249  
                   l3545 07FC                     l2665 110D                     l2657 10E0  
                   l2761 1F7F                     l2753 1F59                     l2585 0732  
                   l3481 090A                     l3473 08F8                     l3465 08D7  
                   l3457 08B4                     l3449 089B                     l3393 1483  
                   l3385 136E                     l3721 0525                     l3713 04C5  
                   l3705 0452                     l3641 0115                     l3633 00D9  
                   l3625 0075                     l3617 003D                     l3609 002C  
                   l2835 1D32                     l2827 1D2B                     l2851 1D43  
                   l2843 1D34                     l3571 130F                     l3563 12E9  
                   l3555 12CB                     l3379 0C89                     l3299 0A2B  
                   l2747 11FA                     l2739 11E3                     l2771 1EFF  
                   l2667 110E                     l2659 10E4                     l2763 1F8D  
                   l2755 1F5C                     l2587 073F                     l3491 0933  
                   l3475 0902                     l3483 091C                     l3467 08E5  
                   l3459 08C3                     l3395 1489                     l3387 1374  
                   l3731 055D                     l3723 052B                     l3715 0504  
                   l3707 045E                     l3651 0184                     l3643 0138  
                   l3635 00DD                     l3627 0079                     l3619 0057  
                   l2837 1D06                     l2829 1D2C                     l2853 1D44  
                   l2845 1D3B                     l3581 1342                     l3573 131F  
                   l3565 12F6                     l3557 12DB                     l3549 12B2  
                   l2749 11FF                     l2773 1F03                     l2669 1117  
                   l2765 1F96                     l2757 1F69                     l2597 0755  
                   l3469 08EF                     l3741 05E6                     l3733 0562  
                   l3725 0538                     l3717 0518                     l3709 0465  
                   l3653 01CF                     l3645 015B                     l3637 0104  
                   l3661 0230                     l3629 00A0                     l2839 1D00  
                   l2855 1D45                     l2847 1D3F                     l3583 1358  
                   l3575 132A                     l3567 12FD                     l2759 1F6D  
                   l2767 1F9C                     l3495 1D49                     l2599 075D  
                   l3399 1534                     l3751 06EF                     l3743 0641  
                   l3735 0569                     l3727 0547                     l3719 0521  
                   l3671 02D2                     l3663 0230                     l3655 01F6  
                   l3647 015F                     l3639 010F                     l2857 1CFA  
                   l2849 1D40                     l3585 135D                     l3577 132E  
                   l3569 1301                     l3593 1D73                     l3497 1D4B  
                   l3489 0923                     l3761 0713                     l3753 06F6  
                   l3745 0680                     l3737 056D                     l3729 054E  
                   l3681 0339                     l3673 02E1                     l3665 0275  
                   l3657 01FF                     l3649 0165                     l2859 1CFE  
                   l3587 1361                     l3579 1338                     l3595 1D90  
                   l3499 1D51                     l3755 06FA                     l3747 068C  
                   l3739 058B                     l3691 040D                     l3675 030A  
                   l3667 0282                     l3659 0228                     l3827 004F  
                   l3589 1362                     l3757 0700                     l3749 06E7  
                   l3693 040F                     l3685 0384                     l3677 0313  
                   l3669 02AB                     l3765 071B                     l3781 080A  
                   l3599 1DC2                     l3679 031B                     l3687 038D  
                   l3759 0707                     l3767 072D                     l3791 0860  
                   l3783 080F                     l3689 03C2                     l3793 086E  
                   l3785 0814                     l3777 0800                     l3699 0411  
                   l3795 0874                     l3787 0819                     l3779 0805  
                   l3789 0839                     ?_isr 0070                     STR_1 1096  
                   _CONT 0078                     u3000 1648                     u3001 1646  
                   u3010 1649                     u3100 16B3                     u3020 165D  
                   _IOCB 0096                     u3101 16B2                     u3021 165C  
                   u3110 16C2                     u3030 166C                     u3111 16C1  
                   u3031 166B                     u3200 1770                     u3201 176F  
                   u3210 1775                     u3130 16E7                     u3050 1682  
                   u3211 1774                     u3131 16E6                     u3051 1681  
                   u3300 17CD                     u3220 177F                     u3060 1686  
                   u3301 17CC                     u3221 177E                     u3141 16FE  
                   u3133 16E3                     u3125 16C5                     u3061 1685  
                   u3045 166F                     u3310 17D6                     u3230 1785  
                   u3150 1712                     u3142 16FF                     u3070 168B  
                   u3311 17D5                     u3231 1784                     u3151 1713  
                   u3143 1704                     u3071 168A                     u3320 17DB  
                   u3240 178A                     u3160 1730                     u3152 1718  
                   u3144 1705                     u4120 073F                     u3321 17DA  
                   u3241 1789                     u3161 172F                     u3153 1719  
                   u3145 170A                     u3081 169D                     u4121 073E  
                   u3330 17E8                     u3250 1790                     u3170 1755  
                   u3146 170B                     u3090 16AF                     u3082 16A4  
                   u4210 07CF                     u4130 0753                     u3331 17E7  
                   u3251 178F                     u3171 1754                     u3091 16AE  
                   u3083 16AB                     u4211 07CE                     u4131 0752  
                   u3340 17ED                     u3260 1797                     u3180 175A  
                   u4220 07D6                     u3341 17EC                     u3261 1796  
                   u3181 1759                     u4221 07D5                     u4205 07BF  
                   u5110 1DBD                     u3350 17FE                     u3270 179D  
                   u4310 10E4                     u4150 0794                     u5111 1DBC  
                   u3351 17FD                     u3271 179C                     u4311 10E3  
                   u4151 0793                     u5040 10BD                     u3280 17AF  
                   u4240 07E7                     u6000 08AC                     u5200 1180  
                   u5120 112D                     u5105 1DB0                     u5041 10BC  
                   u3281 17AE                     u4305 10D5                     u4241 07E6  
                   u4145 077B                     u6001 08AB                     u5201 117F  
                   u5121 112C                     u3290 17BE                     u4330 10FF  
                   u4170 07B2                     u2810 1E96                     u5210 1185  
                   u5130 1138                     u3195 1765                     u4331 10FE  
                   u4235 07D9                     u4171 07B1                     u4155 0790  
                   u2811 1E95                     u5211 1184                     u5131 1137  
                   u4500 11D0                     u2900 1589                     u4180 07B6  
                   u6020 08E5                     u5140 1149                     u5300 1FF6  
                   u5220 1FAC                     u4501 11CF                     u2901 1588  
                   u4325 10E6                     u4181 07B5                     u4165 07A5  
                   u6021 08E4                     u2805 1E86                     u5141 1148  
                   u5301 1FF5                     u5221 1FAB                     u2910 158F  
                   u4350 111D                     u4190 07BD                     u6110 0933  
                   u2830 1EAA                     u5310 1E35                     u5230 1FB7  
                   u3295 17B9                     u2911 158E                     u4351 111C  
                   u4335 10FB                     u4191 07BC                     u6111 0932  
                   u6015 08D0                     u2831 1EA9                     u2815 1E92  
                   u5311 1E34                     u5231 1FB6                     u5400 0979  
                   u4520 11E2                     u6200 123D                     u2920 1594  
                   u4600 1F7F                     u6120 1D51                     u6040 08FE  
                   u5160 115B                     u5240 1FC2                     u5401 0978  
                   u4521 11E1                     u6201 123C                     u2921 1593  
                   u4345 110F                     u4601 1F7E                     u6121 1D50  
                   u6105 0925                     u6041 08FD                     u6025 08E1  
                   u2825 1E9E                     u5161 115A                     u5241 1FC1  
                   u5090 1DA9                     u5410 097F                     u4530 11E9  
                   u3730 1D1D                     u6210 1249                     u2930 15B2  
                   u4290 10D0                     u6050 0902                     u2770 1E73  
                   u5330 1E47                     u5091 1DA8                     u5411 097E  
                   u4531 11E8                     u4515 11D2                     u3731 1D1C  
                   u6211 1248                     u2931 15B1                     u4291 10CF  
                   u6051 0901                     u6035 08F1                     u2771 1E72  
                   u5331 1E46                     u5155 114D                     u5420 0984  
                   u2940 15BD                     u4620 1F9C                     u6060 0909  
                   u5340 1E51                     u5180 116C                     u5260 1FD4  
                   u5501 0A8B                     u5421 0983                     u6221 1258  
                   u2941 15BC                     u4621 1F9B                     u4605 1F7B  
                   u6061 0908                     u5341 1E50                     u5325 1E39  
                   u5181 116B                     u5261 1FD3                     u6310 12FC  
                   u5502 0A92                     u5430 099B                     u4550 11FA  
                   u4470 119C                     u6230 1271                     u6222 1259  
                   u2950 15C3                     u6150 1D6B                     u2790 1E85  
                   u5270 1FDE                     u6311 12FB                     u5511 0AB8  
                   u5503 0A99                     u5431 099A                     u4551 11F9  
                   u4471 119B                     u6231 1270                     u6223 125E  
                   u2951 15C2                     u4615 1F8E                     u6151 1D6A  
                   u6135 1D58                     u2791 1E84                     u5175 115C  
                   u5271 1FDD                     u5255 1FC6                     u6400 1361  
                   u5512 0ABF                     u5440 09A0                     u4560 11FF  
                   u4480 11B3                     u6160 1EC5                     u6224 125F  
                   u2960 15C8                     u6080 091B                     u5360 1E64  
                   u6401 1360                     u6305 12EE                     u5513 0AC6  
                   u5441 099F                     u4561 11FE                     u4545 11EC  
                   u6161 1EC4                     u6241 1280                     u6225 1264  
                   u2961 15C7                     u6145 1D5F                     u6081 091A  
                   u2785 1E77                     u5361 1E63                     u5345 1E4D  
                   u5185 1168                     u6330 131E                     u5370 094D  
                   u4490 11C9                     u6170 1EE1                     u6250 12AB  
                   u6242 1281                     u6226 1265                     u2970 15E1  
                   u4570 1F59                     u6090 0922                     u5290 1FF1  
                   u6410 002C                     u6331 131D                     u5531 0AEE  
                   u5451 09F1                     u5371 094C                     u4491 11C8  
                   u6171 1EE0                     u6251 12AA                     u6243 1286  
                   u2971 15E0                     u4571 1F58                     u6091 0921  
                   u6075 090B                     u5355 1E58                     u5195 1174  
                   u5291 1FF0                     u5275 1FDA                     u6411 002B  
                   u5700 0C33                     u5620 0BD8                     u5532 0AF5  
                   u5452 09F8                     u5380 0953                     u6180 1EFB  
                   u6244 1287                     u6260 07FA                     u2980 15E5  
                   u6500 02D2                     u6420 0063                     u6325 1310  
                   u5621 0BD7                     u5605 0BB6                     u5541 0B1B  
                   u5533 0AFC                     u5525 0AC8                     u5461 0A0D  
                   u5453 09FF                     u5381 0952                     u4485 11AE  
                   u6181 1EFA                     u6245 128C                     u6261 07F9  
                   u2981 15E4                     u5285 1FE5                     u6501 02D1  
                   u6421 0062                     u6350 132E                     u6270 12B7  
                   u5710 0C50                     u5542 0B22                     u5462 0A14  
                   u5390 0958                     u6246 128D                     u6190 1221  
                   u2990 163D                     u4590 1F6D                     u6510 02E1  
                   u6430 00A0                     u6351 132D                     u6271 12B6  
                   u5711 0C4F                     u5615 0BCD                     u5551 0B48  
                   u5543 0B29                     u5471 0A39                     u5463 0A1B  
                   u5391 0957                     u6255 12A7                     u6191 1220  
                   u2991 163C                     u4591 1F6C                     u6511 02E0  
                   u6431 009F                     u6360 1334                     u6280 12BB  
                   u5720 0C6A                     u5640 0BEC                     u5560 0B72  
                   u5552 0B4F                     u5472 0A40                     u6600 0547  
                   u6520 030A                     u6440 0104                     u6361 1333  
                   u6345 1323                     u6281 12BA                     u5721 0C69  
                   u5705 0C2E                     u5641 0BEB                     u5553 0B56  
                   u5481 0A55                     u5473 0A47                     u6185 1EF7  
                   u4585 1F5E                     u6601 0546                     u6521 0309  
                   u6441 0103                     u6370 1338                     u6290 12DB  
                   u5730 0C88                     u5650 0BF1                     u5482 0A5C  
                   u6610 0562                     u6450 015F                     u6371 1337  
                   u6291 12DA                     u5731 0C87                     u5715 0C4C  
                   u5651 0BF0                     u5635 0BDB                     u5571 0B7E  
                   u5483 0A63                     u2995 1639                     u6611 0561  
                   u6515 02DD                     u6451 015E                     u6380 134D  
                   u5660 0C05                     u5580 0B9A                     u5572 0B85  
                   u5740 1374                     u5820 0CA4                     u6540 0447  
                   u6460 01F6                     u5725 0C66                     u5661 0C04  
                   u5573 0B8C                     u5565 0B6D                     u5805 14F3  
                   u5741 1373                     u5821 0CA3                     u6605 0543  
                   u6541 0446                     u6461 01F5                     u6390 135D  
                   u5670 0C0C                     u5910 0E5A                     u5830 0CAD  
                   u6550 0452                     u6470 0228                     i1l95 1E26  
                   u6391 135C                     u5671 0C0B                     u5591 0BA6  
                   u5495 0A65                     u5815 153F                     u5911 0E59  
                   u5831 0CAC                     u6551 0451                     u6535 0414  
                   u6471 0227                     u5680 0C12                     u5592 0BAD  
                   u6640 06EE                     u6560 045E                     u6480 0282  
                   u6385 1348                     u5681 0C11                     u5593 0BB4  
                   u5585 0B95                     u5905 0E29                     u6641 06ED  
                   u6625 05E9                     u6561 045D                     u6545 0443  
                   u6481 0281                     u5690 0C24                     u6650 0706  
                   u6490 02AB                     u5691 0C23                     u5755 1391  
                   u6651 0705                     u6635 068F                     u6491 02AA  
                   u5780 1489                     u6660 0713                     u6580 0517  
                   u5781 1488                     u5765 13ED                     u5925 0E7C  
                   u5845 0CCF                     u6661 0712                     u6581 0516  
                   u6485 027E                     u5950 0F4B                     u5870 0D9E  
                   u6670 072D                     u6590 0538                     u5775 1442  
                   u5951 0F4A                     u5935 0EB8                     u5871 0D9D  
                   u5855 0D0B                     u6671 072C                     u6591 0537  
                   u6575 046D                     u5945 0F03                     u5865 0D56  
                   u5795 14A6                     u6595 0534                     u5965 0F5E  
                   u5885 0DB1                     u5990 0892                     u5991 0891  
                   u5975 0F9A                     u5895 0DED                     u6687 0878  
                   u5985 0FD6                     _TXIF 0064                     _WPUB 0095  
                   _conv 1D70                     _main 0800                     _vint 00E3  
                   btemp 007E                     start 000C             _sprintf$1114 00B0  
                  ??_isr 0070            ___fltol@sign1 0064                    ?_conv 002E  
        __end_of___fladd 1800                    ?_main 0070          __end_of___awdiv 118F  
        __end_of___flneg 07FD          __end_of___awmod 2000          __end_of___flmul 0C9D  
        __end_of___flsub 1F4F          __end_of___fltol 120B                    _ANSEL 0188  
        __end_of___lldiv 1126          ___awdiv@divisor 0026          __end_of___llmod 1FA5  
        __end_of___lwdiv 1EAF          __end_of___lwmod 1E69          ___awdiv@counter 002A  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008          __end_of_cfg_clk 1D00  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019                    _conv2 1DC2          __end_of_dpowers 1096  
                  _scale 0C9D                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0732          __initialization 000F  
           __end_of_conv 1D99             __end_of_main 087F                   ??_conv 0032  
                 ??_main 00C9     __size_of__tdiv_to_l_ 00BD                   ?_conv2 0066  
       ___llmod@dividend 0024                   ?_scale 0048         ___awdiv@dividend 0028  
                 _ANSELH 0189                   i1l3061 1E16                   i1l3053 1DF3  
                 i1l3063 1E1C                   i1l3055 1DF9                   i1l3065 1E21  
                 i1l3057 1E0C                   i1l3067 1E25                   i1l3059 1E10  
                 u505_20 1DF9                   u505_21 1DF8                   u506_20 1E10  
                 u506_21 1E0F                   u507_20 1E16                   u507_21 1E15  
                 u508_20 1E21                   u508_21 1E20                   u669_27 1E05  
                 _SPBRGH 009A         __end_of_cfg_iocb 1D06         __end_of_cfg_inte 1D0E  
       __end_of___xxtofl 136B         __end_of__powers_ 103A                   ___flge 120B  
                 ___fleq 1EAF                ??___fladd 0064                   ___wmul 1D49  
              ??___awdiv 0076                   _cfg_io 1D20                ??___flneg 0075  
              ??___awmod 0075                ??___flmul 0036                ??___flsub 0077  
              ??___fltol 005F                ??___lldiv 0075                ??___llmod 0075  
              ??___lwdiv 0028                ??___lwmod 0075                ??_cfg_clk 0075  
                 _fround 136B         ___awdiv@quotient 002C          ___awmod@divisor 0020  
        ___awmod@counter 0024                   conv@aa 003A       __size_of__Umul8_16 0029  
                 saved_w 007E                ??_sprintf 00AB               ___flge@ff1 0020  
             ___flge@ff2 0024             ___xxtofl@arg 002A             ___xxtofl@exp 0029  
           ___xxtofl@val 0020               ___fleq@ff1 0020               ___fleq@ff2 0024  
__end_of__initialization 001A               ___flneg@f1 0020               ___fltol@f1 005B  
         __pcstackCOMMON 0070            __end_of_conv2 1DF3       __size_of_cfg_usart 0015  
          __end_of_scale 1000               __div_to_l_ 0732           _OPTION_REGbits 0081  
                ??_conv2 0077          __div_to_l_@exp1 002D          __div_to_l_@cntr 002C  
                ??_scale 004C          __div_to_l_@quot 0028               __pbssBANK1 00CA  
          __div_to_l_@f1 0020            __div_to_l_@f2 0024        __end_of__Umul8_16 1DC2  
             __pmaintext 0800                  ?___flge 0020                  ?___fleq 0020  
                ?___wmul 0020                  ?_cfg_io 0070               __pintentry 0004  
     __size_of_send_char 000A       __size_of_send_crct 0025                  ?_fround 0048  
              ?_cfg_iocb 0070                ?_cfg_inte 0070                ?___xxtofl 0020  
            send_crct@st 0022               __stringtab 1000        __end_of_cfg_usart 1D49  
      __end_of__npowers_ 106E               _scale$1113 0056          __size_of___flge 00A4  
        __size_of___fleq 0050                  ___fladd 1578                  ___awdiv 1126  
                ___flneg 07F0                  ___awmod 1FA5                  ___flmul 093C  
                ___flsub 1EFF                  ___fltol 118F                  ___lldiv 10BE  
        __size_of___wmul 0027                  ___llmod 1F4F          __size_of_cfg_io 0014  
                ___lwdiv 1E69                  ___lwmod 1E2D                  _cfg_clk 1CFA  
        __size_of_fround 020D                  __ptext1 001E                  __ptext2 0C9D  
                __ptext3 1FA5                  __ptext4 1126                  __ptext5 136B  
                __ptext6 1E2D                  __ptext7 1E69                  __ptext8 087F  
                __ptext9 0732              ?__div_to_l_ 0020                  _dpowers 106E  
             ??_cfg_iocb 0075               ??_cfg_inte 0075             __size_of_isr 003A  
             ??___xxtofl 0024         ___awmod@dividend 0022                  conv2@aa 0066  
                _sprintf 001E                  clrloop0 1D0F     end_of_initialization 001A  
      __end_of_send_char 1D20        __end_of_send_crct 10BE          ___lldiv@divisor 0020  
        ___lldiv@counter 002C                _RCSTAbits 0018           __tdiv_to_l_@f1 0020  
         __tdiv_to_l_@f2 0024            send_char@dato 0075            ??__tdiv_to_l_ 0028  
              _PORTBbits 0006              ___fladd@grs 006F            ___xxtofl@sign 0028  
              _TRISBbits 0086               conv@result 0036              ___flmul@grs 003D  
              _TXSTAbits 0098      __size_of__div_to_l_ 00BE           __end_of___flge 12AF  
         __end_of___fleq 1EFF           __end_of___wmul 1D70           __end_of_cfg_io 1D34  
            _BAUDCTLbits 0187           __end_of_fround 1578      start_initialization 000F  
    __end_of__tdiv_to_l_ 093C              __end_of_isr 1E2D          ___llmod@divisor 0020  
        ___llmod@counter 0076                 ??___flge 0028                 ??___fleq 0028  
               ??___wmul 0075                 ??_cfg_io 0075                __Umul8_16 1D99  
               ??_fround 004C            sprintf@tmpval 00C0                ___fladd@a 0060  
              ___fladd@b 005C               fround@prec 005B                ___flmul@a 0032  
              ___flmul@b 002E              __pbssCOMMON 0077                ___flsub@a 00A0  
              ___flsub@b 00A4                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0        __size_of_cfg_iocb 0006        __size_of_cfg_inte 0008  
      __size_of___xxtofl 00BC              sprintf@flag 00B5              sprintf@eexp 00BD  
            sprintf@fval 00C4              sprintf@prec 00B7                _cfg_usart 1D34  
              __pnvBANK1 00DF         ___lwdiv@dividend 0026                 ?___fladd 005C  
               ?___awdiv 0026                 ?___flneg 0020                 ?___awmod 0020  
               ?___flmul 002E                 ?___flsub 00A0                 ?___fltol 005B  
               ?___lldiv 0020                 ?___llmod 0020                __npowers_ 103A  
             ?__Umul8_16 0075                 ?___lwdiv 0024                 ?___lwmod 0020  
               ?_cfg_clk 0070                __pstrings 1000              __tdiv_to_l_ 087F  
             send_crct@i 0020             ??__div_to_l_ 0075         ___lwdiv@quotient 0029  
         __size_of_conv2 0031                 ?_sprintf 00A8           __size_of_scale 0363  
      interrupt_function 0004           ___wmul@product 0075                clear_ram0 1D0E  
             ?_cfg_usart 0070                 _PIE1bits 008C                _send_char 1D16  
              _send_crct 1099                 _PIR1bits 000C       __end_of__div_to_l_ 07F0  
            __stringbase 1005        ___wmul@multiplier 0020               ?_send_char 0070  
             ?_send_crct 0070              ??__Umul8_16 0020         __size_of___fladd 0288  
       __size_of___awdiv 0069         __size_of___flneg 000D         __size_of___awmod 005B  
       __size_of___flmul 0361         __size_of___flsub 0050         __size_of___fltol 007C  
       __size_of___lldiv 0068         __size_of___llmod 0056         __size_of___lwdiv 0046  
       __size_of___lwmod 003C              _fround$1111 0057              _fround$1112 0053  
       __size_of_cfg_clk 0006       __end_of__stringtab 1006                 _cfg_iocb 1D00  
             sprintf@val 00B9                 _cfg_inte 1D06                 ___xxtofl 12AF  
        ___lwdiv@divisor 0024          ___lwdiv@counter 002B                 __ptext10 1D49  
               __ptext11 1F4F                 __ptext20 1DC2                 __ptext12 10BE  
               __ptext21 118F                 __ptext13 1EFF                 __ptext30 1CFA  
               __ptext22 093C                 __ptext14 1578                 __ptext31 1DF3  
               __ptext23 1D99                 __ptext15 07F0                 __ptext24 1D70  
               __ptext16 120B                 __ptext25 12AF                 __ptext17 1EAF  
               __ptext26 1D34                 __ptext18 1099                 __ptext27 1D00  
               __ptext19 1D16                 __ptext28 1D20                 __ptext29 1D06  
               __powers_ 1006         __size_of_sprintf 0714            __size_of_conv 0029  
          __size_of_main 007F              ??_cfg_usart 0075                 conv2@res 006A  
             _INTCONbits 000B                 scale@scl 005A                 intlevel1 0000  
              sprintf@ap 00B4         __tdiv_to_l_@exp1 0031         __tdiv_to_l_@cntr 0030  
              sprintf@sp 00BF         __tdiv_to_l_@quot 002C         ___lwmod@dividend 0022  
       ___lldiv@dividend 0024              ??_send_char 0075              ??_send_crct 0076  
              stringcode 1000               _OSCCONbits 008F             ?__tdiv_to_l_ 0020  
 __Umul8_16@multiplicand 0075                 sprintf@c 00C8                 sprintf@f 00A8  
       ___lldiv@quotient 0028          ___lwmod@divisor 0020          ___lwmod@counter 0076  
               stringdir 1000                 stringtab 1000            ___fladd@signs 006C  
           ___fladd@aexp 006D             ___fladd@bexp 006E     __Umul8_16@multiplier 0026  
      __Umul8_16@product 0022  
